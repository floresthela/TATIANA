Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON declara_vars program_modules
Rule 2     program_modules -> program_fun star
Rule 3     program_fun -> function program_fun
Rule 4     program_fun -> empty
Rule 5     star -> starI declara_vars star1 CLOSEBRACES
Rule 6     starI -> star_sign OPENBRACES
Rule 7     star_sign -> MULTIPLICATION
Rule 8     star1 -> stmt star1
Rule 9     star1 -> empty
Rule 10    declara_vars -> vars declara_vars
Rule 11    declara_vars -> empty
Rule 12    vars -> type ID vars1 equals exp SEMICOLON
Rule 13    vars -> type ID vars1 SEMICOLON
Rule 14    vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3
Rule 15    vars1 -> empty
Rule 16    vars3 -> OPENBRACKET CTEINT CLOSEBRACKET
Rule 17    vars3 -> empty
Rule 18    loop -> while
Rule 19    loop -> for
Rule 20    stmt -> assignment
Rule 21    stmt -> condition
Rule 22    stmt -> print
Rule 23    stmt -> loop
Rule 24    stmt -> read
Rule 25    stmt -> graphstmt
Rule 26    stmt -> graphr
Rule 27    stmt -> funCall SEMICOLON
Rule 28    stmt -> return
Rule 29    assignment -> id assignment1 equals assignment3 SEMICOLON
Rule 30    assignment1 -> assignment2
Rule 31    assignment1 -> assignment2 assignment1
Rule 32    assignment1 -> empty
Rule 33    assignment2 -> OPENBRACKET exp CLOSEBRACKET
Rule 34    assignment3 -> exp
Rule 35    assignment3 -> read
Rule 36    vcte -> cte_int
Rule 37    vcte -> cte_float
Rule 38    vcte -> cte_string
Rule 39    vcte -> id vcte1
Rule 40    vcte -> funCall
Rule 41    vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3
Rule 42    vcte1 -> empty
Rule 43    vcte3 -> OPENBRACKET exp CLOSEBRACKET
Rule 44    vcte3 -> empty
Rule 45    functionI -> type ID
Rule 46    functionI -> VOID ID
Rule 47    function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun
Rule 48    inicia_fun -> OPENBRACES
Rule 49    termina_fun -> CLOSEBRACES
Rule 50    function2 -> OPENPAREN function3 CLOSEPAREN
Rule 51    function3 -> funParam function5
Rule 52    function3 -> empty
Rule 53    function4 -> stmt function4
Rule 54    function4 -> empty
Rule 55    function5 -> COMMA funParam function5
Rule 56    function5 -> empty
Rule 57    funParam -> type ID
Rule 58    type -> INT
Rule 59    type -> FLOAT
Rule 60    type -> STRING
Rule 61    print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
Rule 62    read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
Rule 63    read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
Rule 64    read1 -> OPENBRACKET exp CLOSEBRACKET
Rule 65    read1 -> empty
Rule 66    equals -> EQUALS
Rule 67    id -> ID
Rule 68    funCall -> ID iniciaFunCall funCall2 terminaFunCall
Rule 69    iniciaFunCall -> OPENPAREN
Rule 70    terminaFunCall -> CLOSEPAREN
Rule 71    funCall2 -> exp funCall3
Rule 72    funCall2 -> empty
Rule 73    funCall3 -> COMMA funCall2
Rule 74    funCall3 -> empty
Rule 75    cte_int -> CTEINT
Rule 76    cte_float -> CTEFLOAT
Rule 77    cte_string -> CTESTRING
Rule 78    return -> RETURN return1 SEMICOLON
Rule 79    return1 -> vcte
Rule 80    return1 -> exp
Rule 81    loper -> GREATER
Rule 82    loper -> LESS
Rule 83    loper -> NOTEQUAL
Rule 84    loper -> ISEQUAL
Rule 85    condition -> IF head_cond body condition1
Rule 86    condition1 -> elseif head_cond body condition1
Rule 87    condition1 -> else body
Rule 88    condition1 -> empty
Rule 89    elseif -> ELSEIF
Rule 90    else -> ELSE
Rule 91    head_cond -> OPENPAREN expression close_condition
Rule 92    body -> OPENBRACES body1 CLOSEBRACES
Rule 93    close_condition -> CLOSEPAREN
Rule 94    body1 -> stmt body1
Rule 95    body1 -> empty
Rule 96    for -> for1 body
Rule 97    for1 -> forInit OPENPAREN ID for2
Rule 98    for2 -> TWODOTS exp for3
Rule 99    for3 -> CLOSEPAREN
Rule 100   forInit -> FOR
Rule 101   while -> while1 body
Rule 102   while1 -> while_w OPENPAREN expression CLOSEPAREN
Rule 103   while_w -> WHILE
Rule 104   dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN
Rule 105   unaExp -> OPENPAREN exp CLOSEPAREN
Rule 106   graphstmt -> graphfig
Rule 107   graphstmt -> graphview
Rule 108   graphstmt -> graphmove
Rule 109   graphfig -> graphfig1 SEMICOLON
Rule 110   graphfig -> graphfig2 SEMICOLON
Rule 111   graphfig1 -> CIRCLE unaExp
Rule 112   graphfig1 -> SQUARE unaExp
Rule 113   graphfig2 -> TRIANGLE dosExp
Rule 114   graphfig2 -> RECTANGLE dosExp
Rule 115   graphmove -> graphmove0 SEMICOLON
Rule 116   graphmove -> graphmove1 SEMICOLON
Rule 117   graphmove -> graphmove2 SEMICOLON
Rule 118   graphmove0 -> HAND_DOWN
Rule 119   graphmove0 -> HAND_UP
Rule 120   graphmove1 -> GO unaExp
Rule 121   graphmove1 -> LEFT unaExp
Rule 122   graphmove1 -> RIGHT unaExp
Rule 123   graphmove1 -> BACK unaExp
Rule 124   graphmove2 -> ARC dosExp
Rule 125   graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
Rule 126   graphr1 -> graphstmt graphr1
Rule 127   graphr1 -> empty
Rule 128   rep -> OPENPAREN exp CLOSEPAREN
Rule 129   repeat -> REPEAT
Rule 130   graphview -> graphview0 SEMICOLON
Rule 131   graphview -> graphview1 SEMICOLON
Rule 132   graphview -> graphview2 SEMICOLON
Rule 133   graphview0 -> HIDE_STAR
Rule 134   graphview0 -> SHOW_STAR
Rule 135   graphview1 -> COLOR_STAR unaExp
Rule 136   graphview1 -> SIZE_STAR unaExp
Rule 137   graphview2 -> SETXY dosExp
Rule 138   expression -> exp loper exp
Rule 139   expression -> exp
Rule 140   exp -> term
Rule 141   exp -> term exp_o exp
Rule 142   exp_o -> ADDITION
Rule 143   exp_o -> SUBSTRACTION
Rule 144   openP -> OPENPAREN
Rule 145   closeP -> CLOSEPAREN
Rule 146   term -> factor term_o term
Rule 147   term -> factor
Rule 148   term_o -> MULTIPLICATION
Rule 149   term_o -> DIVISION
Rule 150   factor -> vcte
Rule 151   factor -> openP expression closeP
Rule 152   empty -> <empty>

Terminals, with rules where they appear

ADDITION             : 142
ARC                  : 124
BACK                 : 123
CIRCLE               : 111
CLOSEBRACES          : 5 49 92 125
CLOSEBRACKET         : 14 16 33 41 43 63 63 64
CLOSEPAREN           : 50 61 62 70 93 99 102 104 105 128 145
COLOR_STAR           : 135
COMMA                : 55 73 104
CTEFLOAT             : 76
CTEINT               : 14 16 75
CTESTRING            : 77
DIVISION             : 149
ELSE                 : 90
ELSEIF               : 89
EQUALS               : 66
FLOAT                : 59
FOR                  : 100
FUN                  : 47
GO                   : 120
GREATER              : 81
HAND_DOWN            : 118
HAND_UP              : 119
HIDE_STAR            : 133
ID                   : 1 12 13 45 46 57 67 68 97
IF                   : 85
INT                  : 58
ISEQUAL              : 84
LEFT                 : 121
LESS                 : 82
MULTIPLICATION       : 7 148
NOTEQUAL             : 83
OPENBRACES           : 6 48 92 125
OPENBRACKET          : 14 16 33 41 43 63 63 64
OPENPAREN            : 50 61 62 69 91 97 102 104 105 128 144
PRINT                : 61
PROGRAM              : 1
READ                 : 62
RECTANGLE            : 114
REPEAT               : 129
RETURN               : 78
RIGHT                : 122
SEMICOLON            : 1 12 13 27 29 61 62 78 109 110 115 116 117 130 131 132
SETXY                : 137
SHOW_STAR            : 134
SIZE_STAR            : 136
SQUARE               : 112
STRING               : 60
SUBSTRACTION         : 143
TRIANGLE             : 113
TWODOTS              : 98
VOID                 : 46
WHILE                : 103
error                : 

Nonterminals, with rules where they appear

assignment           : 20
assignment1          : 29 31
assignment2          : 30 31
assignment3          : 29
body                 : 85 86 87 96 101
body1                : 92 94
closeP               : 151
close_condition      : 91
condition            : 21
condition1           : 85 86
cte_float            : 37
cte_int              : 36
cte_string           : 38
declara_vars         : 1 5 10 47
dosExp               : 113 114 124 137
else                 : 87
elseif               : 86
empty                : 4 9 11 15 17 32 42 44 52 54 56 65 72 74 88 95 127
equals               : 12 29
exp                  : 12 33 34 41 43 63 63 64 71 80 98 104 104 105 128 138 138 139 141
exp_o                : 141
expression           : 61 91 102 151
factor               : 146 147
for                  : 19
for1                 : 96
for2                 : 97
for3                 : 98
forInit              : 97
funCall              : 27 40
funCall2             : 68 73
funCall3             : 71
funParam             : 51 55
function             : 3
function2            : 47
function3            : 50
function4            : 47 53
function5            : 51 55
functionI            : 47
graphfig             : 106
graphfig1            : 109
graphfig2            : 110
graphmove            : 108
graphmove0           : 115
graphmove1           : 116
graphmove2           : 117
graphr               : 26
graphr1              : 125 126
graphstmt            : 25 125 126
graphview            : 107
graphview0           : 130
graphview1           : 131
graphview2           : 132
head_cond            : 85 86
id                   : 29 39 62
iniciaFunCall        : 68
inicia_fun           : 47
loop                 : 23
loper                : 138
openP                : 151
print                : 22
program              : 0
program_fun          : 2 3
program_modules      : 1
read                 : 24 35
read1                : 62
rep                  : 125
repeat               : 125
return               : 28
return1              : 78
star                 : 2
star1                : 5 8
starI                : 5
star_sign            : 6
stmt                 : 8 53 94
term                 : 140 141 146
term_o               : 146
terminaFunCall       : 68
termina_fun          : 47
type                 : 12 13 45 57
unaExp               : 111 112 120 121 122 123 135 136
vars                 : 10
vars1                : 12 13
vars3                : 14
vcte                 : 79 150
vcte1                : 39
vcte3                : 41
while                : 18
while1               : 101
while_w              : 102

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON declara_vars program_modules

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON declara_vars program_modules

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON declara_vars program_modules

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . declara_vars program_modules
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (12) vars -> . type ID vars1 equals exp SEMICOLON
    (13) vars -> . type ID vars1 SEMICOLON
    (152) empty -> .
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . STRING

    FUN             reduce using rule 152 (empty -> .)
    MULTIPLICATION  reduce using rule 152 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    declara_vars                   shift and go to state 5
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 5

    (1) program -> PROGRAM ID SEMICOLON declara_vars . program_modules
    (2) program_modules -> . program_fun star
    (3) program_fun -> . function program_fun
    (4) program_fun -> . empty
    (47) function -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (152) empty -> .

    FUN             shift and go to state 16
    MULTIPLICATION  reduce using rule 152 (empty -> .)

    program_modules                shift and go to state 12
    program_fun                    shift and go to state 13
    function                       shift and go to state 14
    empty                          shift and go to state 15

state 6

    (10) declara_vars -> vars . declara_vars
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (12) vars -> . type ID vars1 equals exp SEMICOLON
    (13) vars -> . type ID vars1 SEMICOLON
    (152) empty -> .
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . STRING

    FUN             reduce using rule 152 (empty -> .)
    MULTIPLICATION  reduce using rule 152 (empty -> .)
    IF              reduce using rule 152 (empty -> .)
    PRINT           reduce using rule 152 (empty -> .)
    READ            reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    RETURN          reduce using rule 152 (empty -> .)
    REPEAT          reduce using rule 152 (empty -> .)
    CIRCLE          reduce using rule 152 (empty -> .)
    SQUARE          reduce using rule 152 (empty -> .)
    TRIANGLE        reduce using rule 152 (empty -> .)
    RECTANGLE       reduce using rule 152 (empty -> .)
    HIDE_STAR       reduce using rule 152 (empty -> .)
    SHOW_STAR       reduce using rule 152 (empty -> .)
    COLOR_STAR      reduce using rule 152 (empty -> .)
    SIZE_STAR       reduce using rule 152 (empty -> .)
    SETXY           reduce using rule 152 (empty -> .)
    HAND_DOWN       reduce using rule 152 (empty -> .)
    HAND_UP         reduce using rule 152 (empty -> .)
    GO              reduce using rule 152 (empty -> .)
    LEFT            reduce using rule 152 (empty -> .)
    RIGHT           reduce using rule 152 (empty -> .)
    BACK            reduce using rule 152 (empty -> .)
    ARC             reduce using rule 152 (empty -> .)
    WHILE           reduce using rule 152 (empty -> .)
    FOR             reduce using rule 152 (empty -> .)
    CLOSEBRACES     reduce using rule 152 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    vars                           shift and go to state 6
    declara_vars                   shift and go to state 17
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 7

    (11) declara_vars -> empty .

    FUN             reduce using rule 11 (declara_vars -> empty .)
    MULTIPLICATION  reduce using rule 11 (declara_vars -> empty .)
    IF              reduce using rule 11 (declara_vars -> empty .)
    PRINT           reduce using rule 11 (declara_vars -> empty .)
    READ            reduce using rule 11 (declara_vars -> empty .)
    ID              reduce using rule 11 (declara_vars -> empty .)
    RETURN          reduce using rule 11 (declara_vars -> empty .)
    REPEAT          reduce using rule 11 (declara_vars -> empty .)
    CIRCLE          reduce using rule 11 (declara_vars -> empty .)
    SQUARE          reduce using rule 11 (declara_vars -> empty .)
    TRIANGLE        reduce using rule 11 (declara_vars -> empty .)
    RECTANGLE       reduce using rule 11 (declara_vars -> empty .)
    HIDE_STAR       reduce using rule 11 (declara_vars -> empty .)
    SHOW_STAR       reduce using rule 11 (declara_vars -> empty .)
    COLOR_STAR      reduce using rule 11 (declara_vars -> empty .)
    SIZE_STAR       reduce using rule 11 (declara_vars -> empty .)
    SETXY           reduce using rule 11 (declara_vars -> empty .)
    HAND_DOWN       reduce using rule 11 (declara_vars -> empty .)
    HAND_UP         reduce using rule 11 (declara_vars -> empty .)
    GO              reduce using rule 11 (declara_vars -> empty .)
    LEFT            reduce using rule 11 (declara_vars -> empty .)
    RIGHT           reduce using rule 11 (declara_vars -> empty .)
    BACK            reduce using rule 11 (declara_vars -> empty .)
    ARC             reduce using rule 11 (declara_vars -> empty .)
    WHILE           reduce using rule 11 (declara_vars -> empty .)
    FOR             reduce using rule 11 (declara_vars -> empty .)
    CLOSEBRACES     reduce using rule 11 (declara_vars -> empty .)


state 8

    (12) vars -> type . ID vars1 equals exp SEMICOLON
    (13) vars -> type . ID vars1 SEMICOLON

    ID              shift and go to state 18


state 9

    (58) type -> INT .

    ID              reduce using rule 58 (type -> INT .)


state 10

    (59) type -> FLOAT .

    ID              reduce using rule 59 (type -> FLOAT .)


state 11

    (60) type -> STRING .

    ID              reduce using rule 60 (type -> STRING .)


state 12

    (1) program -> PROGRAM ID SEMICOLON declara_vars program_modules .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON declara_vars program_modules .)


state 13

    (2) program_modules -> program_fun . star
    (5) star -> . starI declara_vars star1 CLOSEBRACES
    (6) starI -> . star_sign OPENBRACES
    (7) star_sign -> . MULTIPLICATION

    MULTIPLICATION  shift and go to state 22

    star                           shift and go to state 19
    starI                          shift and go to state 20
    star_sign                      shift and go to state 21

state 14

    (3) program_fun -> function . program_fun
    (3) program_fun -> . function program_fun
    (4) program_fun -> . empty
    (47) function -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (152) empty -> .

    FUN             shift and go to state 16
    MULTIPLICATION  reduce using rule 152 (empty -> .)

    function                       shift and go to state 14
    program_fun                    shift and go to state 23
    empty                          shift and go to state 15

state 15

    (4) program_fun -> empty .

    MULTIPLICATION  reduce using rule 4 (program_fun -> empty .)


state 16

    (47) function -> FUN . functionI function2 inicia_fun declara_vars function4 termina_fun
    (45) functionI -> . type ID
    (46) functionI -> . VOID ID
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . STRING

    VOID            shift and go to state 26
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    functionI                      shift and go to state 24
    type                           shift and go to state 25

state 17

    (10) declara_vars -> vars declara_vars .

    FUN             reduce using rule 10 (declara_vars -> vars declara_vars .)
    MULTIPLICATION  reduce using rule 10 (declara_vars -> vars declara_vars .)
    IF              reduce using rule 10 (declara_vars -> vars declara_vars .)
    PRINT           reduce using rule 10 (declara_vars -> vars declara_vars .)
    READ            reduce using rule 10 (declara_vars -> vars declara_vars .)
    ID              reduce using rule 10 (declara_vars -> vars declara_vars .)
    RETURN          reduce using rule 10 (declara_vars -> vars declara_vars .)
    REPEAT          reduce using rule 10 (declara_vars -> vars declara_vars .)
    CIRCLE          reduce using rule 10 (declara_vars -> vars declara_vars .)
    SQUARE          reduce using rule 10 (declara_vars -> vars declara_vars .)
    TRIANGLE        reduce using rule 10 (declara_vars -> vars declara_vars .)
    RECTANGLE       reduce using rule 10 (declara_vars -> vars declara_vars .)
    HIDE_STAR       reduce using rule 10 (declara_vars -> vars declara_vars .)
    SHOW_STAR       reduce using rule 10 (declara_vars -> vars declara_vars .)
    COLOR_STAR      reduce using rule 10 (declara_vars -> vars declara_vars .)
    SIZE_STAR       reduce using rule 10 (declara_vars -> vars declara_vars .)
    SETXY           reduce using rule 10 (declara_vars -> vars declara_vars .)
    HAND_DOWN       reduce using rule 10 (declara_vars -> vars declara_vars .)
    HAND_UP         reduce using rule 10 (declara_vars -> vars declara_vars .)
    GO              reduce using rule 10 (declara_vars -> vars declara_vars .)
    LEFT            reduce using rule 10 (declara_vars -> vars declara_vars .)
    RIGHT           reduce using rule 10 (declara_vars -> vars declara_vars .)
    BACK            reduce using rule 10 (declara_vars -> vars declara_vars .)
    ARC             reduce using rule 10 (declara_vars -> vars declara_vars .)
    WHILE           reduce using rule 10 (declara_vars -> vars declara_vars .)
    FOR             reduce using rule 10 (declara_vars -> vars declara_vars .)
    CLOSEBRACES     reduce using rule 10 (declara_vars -> vars declara_vars .)


state 18

    (12) vars -> type ID . vars1 equals exp SEMICOLON
    (13) vars -> type ID . vars1 SEMICOLON
    (14) vars1 -> . OPENBRACKET CTEINT CLOSEBRACKET vars3
    (15) vars1 -> . empty
    (152) empty -> .

    OPENBRACKET     shift and go to state 28
    SEMICOLON       reduce using rule 152 (empty -> .)
    EQUALS          reduce using rule 152 (empty -> .)

    vars1                          shift and go to state 27
    empty                          shift and go to state 29

state 19

    (2) program_modules -> program_fun star .

    $end            reduce using rule 2 (program_modules -> program_fun star .)


state 20

    (5) star -> starI . declara_vars star1 CLOSEBRACES
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (12) vars -> . type ID vars1 equals exp SEMICOLON
    (13) vars -> . type ID vars1 SEMICOLON
    (152) empty -> .
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . STRING

    IF              reduce using rule 152 (empty -> .)
    PRINT           reduce using rule 152 (empty -> .)
    READ            reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    RETURN          reduce using rule 152 (empty -> .)
    REPEAT          reduce using rule 152 (empty -> .)
    CIRCLE          reduce using rule 152 (empty -> .)
    SQUARE          reduce using rule 152 (empty -> .)
    TRIANGLE        reduce using rule 152 (empty -> .)
    RECTANGLE       reduce using rule 152 (empty -> .)
    HIDE_STAR       reduce using rule 152 (empty -> .)
    SHOW_STAR       reduce using rule 152 (empty -> .)
    COLOR_STAR      reduce using rule 152 (empty -> .)
    SIZE_STAR       reduce using rule 152 (empty -> .)
    SETXY           reduce using rule 152 (empty -> .)
    HAND_DOWN       reduce using rule 152 (empty -> .)
    HAND_UP         reduce using rule 152 (empty -> .)
    GO              reduce using rule 152 (empty -> .)
    LEFT            reduce using rule 152 (empty -> .)
    RIGHT           reduce using rule 152 (empty -> .)
    BACK            reduce using rule 152 (empty -> .)
    ARC             reduce using rule 152 (empty -> .)
    WHILE           reduce using rule 152 (empty -> .)
    FOR             reduce using rule 152 (empty -> .)
    CLOSEBRACES     reduce using rule 152 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    declara_vars                   shift and go to state 30
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 21

    (6) starI -> star_sign . OPENBRACES

    OPENBRACES      shift and go to state 31


state 22

    (7) star_sign -> MULTIPLICATION .

    OPENBRACES      reduce using rule 7 (star_sign -> MULTIPLICATION .)


state 23

    (3) program_fun -> function program_fun .

    MULTIPLICATION  reduce using rule 3 (program_fun -> function program_fun .)


state 24

    (47) function -> FUN functionI . function2 inicia_fun declara_vars function4 termina_fun
    (50) function2 -> . OPENPAREN function3 CLOSEPAREN

    OPENPAREN       shift and go to state 33

    function2                      shift and go to state 32

state 25

    (45) functionI -> type . ID

    ID              shift and go to state 34


state 26

    (46) functionI -> VOID . ID

    ID              shift and go to state 35


state 27

    (12) vars -> type ID vars1 . equals exp SEMICOLON
    (13) vars -> type ID vars1 . SEMICOLON
    (66) equals -> . EQUALS

    SEMICOLON       shift and go to state 37
    EQUALS          shift and go to state 38

    equals                         shift and go to state 36

state 28

    (14) vars1 -> OPENBRACKET . CTEINT CLOSEBRACKET vars3

    CTEINT          shift and go to state 39


state 29

    (15) vars1 -> empty .

    SEMICOLON       reduce using rule 15 (vars1 -> empty .)
    EQUALS          reduce using rule 15 (vars1 -> empty .)


state 30

    (5) star -> starI declara_vars . star1 CLOSEBRACES
    (8) star1 -> . stmt star1
    (9) star1 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . graphr
    (27) stmt -> . funCall SEMICOLON
    (28) stmt -> . return
    (152) empty -> .
    (29) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (85) condition -> . IF head_cond body condition1
    (61) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for
    (62) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (106) graphstmt -> . graphfig
    (107) graphstmt -> . graphview
    (108) graphstmt -> . graphmove
    (125) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (78) return -> . RETURN return1 SEMICOLON
    (67) id -> . ID
    (101) while -> . while1 body
    (96) for -> . for1 body
    (109) graphfig -> . graphfig1 SEMICOLON
    (110) graphfig -> . graphfig2 SEMICOLON
    (130) graphview -> . graphview0 SEMICOLON
    (131) graphview -> . graphview1 SEMICOLON
    (132) graphview -> . graphview2 SEMICOLON
    (115) graphmove -> . graphmove0 SEMICOLON
    (116) graphmove -> . graphmove1 SEMICOLON
    (117) graphmove -> . graphmove2 SEMICOLON
    (129) repeat -> . REPEAT
    (102) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (97) for1 -> . forInit OPENPAREN ID for2
    (111) graphfig1 -> . CIRCLE unaExp
    (112) graphfig1 -> . SQUARE unaExp
    (113) graphfig2 -> . TRIANGLE dosExp
    (114) graphfig2 -> . RECTANGLE dosExp
    (133) graphview0 -> . HIDE_STAR
    (134) graphview0 -> . SHOW_STAR
    (135) graphview1 -> . COLOR_STAR unaExp
    (136) graphview1 -> . SIZE_STAR unaExp
    (137) graphview2 -> . SETXY dosExp
    (118) graphmove0 -> . HAND_DOWN
    (119) graphmove0 -> . HAND_UP
    (120) graphmove1 -> . GO unaExp
    (121) graphmove1 -> . LEFT unaExp
    (122) graphmove1 -> . RIGHT unaExp
    (123) graphmove1 -> . BACK unaExp
    (124) graphmove2 -> . ARC dosExp
    (103) while_w -> . WHILE
    (100) forInit -> . FOR

    CLOSEBRACES     reduce using rule 152 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    ID              shift and go to state 62
    RETURN          shift and go to state 63
    REPEAT          shift and go to state 74
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92
    WHILE           shift and go to state 93
    FOR             shift and go to state 94

    star1                          shift and go to state 40
    stmt                           shift and go to state 41
    empty                          shift and go to state 42
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    graphr                         shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    repeat                         shift and go to state 61
    while1                         shift and go to state 64
    for1                           shift and go to state 65
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73
    while_w                        shift and go to state 75
    forInit                        shift and go to state 76

state 31

    (6) starI -> star_sign OPENBRACES .

    INT             reduce using rule 6 (starI -> star_sign OPENBRACES .)
    FLOAT           reduce using rule 6 (starI -> star_sign OPENBRACES .)
    STRING          reduce using rule 6 (starI -> star_sign OPENBRACES .)
    IF              reduce using rule 6 (starI -> star_sign OPENBRACES .)
    PRINT           reduce using rule 6 (starI -> star_sign OPENBRACES .)
    READ            reduce using rule 6 (starI -> star_sign OPENBRACES .)
    ID              reduce using rule 6 (starI -> star_sign OPENBRACES .)
    RETURN          reduce using rule 6 (starI -> star_sign OPENBRACES .)
    REPEAT          reduce using rule 6 (starI -> star_sign OPENBRACES .)
    CIRCLE          reduce using rule 6 (starI -> star_sign OPENBRACES .)
    SQUARE          reduce using rule 6 (starI -> star_sign OPENBRACES .)
    TRIANGLE        reduce using rule 6 (starI -> star_sign OPENBRACES .)
    RECTANGLE       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    HIDE_STAR       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    SHOW_STAR       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    COLOR_STAR      reduce using rule 6 (starI -> star_sign OPENBRACES .)
    SIZE_STAR       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    SETXY           reduce using rule 6 (starI -> star_sign OPENBRACES .)
    HAND_DOWN       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    HAND_UP         reduce using rule 6 (starI -> star_sign OPENBRACES .)
    GO              reduce using rule 6 (starI -> star_sign OPENBRACES .)
    LEFT            reduce using rule 6 (starI -> star_sign OPENBRACES .)
    RIGHT           reduce using rule 6 (starI -> star_sign OPENBRACES .)
    BACK            reduce using rule 6 (starI -> star_sign OPENBRACES .)
    ARC             reduce using rule 6 (starI -> star_sign OPENBRACES .)
    WHILE           reduce using rule 6 (starI -> star_sign OPENBRACES .)
    FOR             reduce using rule 6 (starI -> star_sign OPENBRACES .)
    CLOSEBRACES     reduce using rule 6 (starI -> star_sign OPENBRACES .)


state 32

    (47) function -> FUN functionI function2 . inicia_fun declara_vars function4 termina_fun
    (48) inicia_fun -> . OPENBRACES

    OPENBRACES      shift and go to state 96

    inicia_fun                     shift and go to state 95

state 33

    (50) function2 -> OPENPAREN . function3 CLOSEPAREN
    (51) function3 -> . funParam function5
    (52) function3 -> . empty
    (57) funParam -> . type ID
    (152) empty -> .
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . STRING

    CLOSEPAREN      reduce using rule 152 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    function3                      shift and go to state 97
    funParam                       shift and go to state 98
    empty                          shift and go to state 99
    type                           shift and go to state 100

state 34

    (45) functionI -> type ID .

    OPENPAREN       reduce using rule 45 (functionI -> type ID .)


state 35

    (46) functionI -> VOID ID .

    OPENPAREN       reduce using rule 46 (functionI -> VOID ID .)


state 36

    (12) vars -> type ID vars1 equals . exp SEMICOLON
    (140) exp -> . term
    (141) exp -> . term exp_o exp
    (146) term -> . factor term_o term
    (147) term -> . factor
    (150) factor -> . vcte
    (151) factor -> . openP expression closeP
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_string
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (144) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (67) id -> . ID
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 112
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    ID              shift and go to state 101

    exp                            shift and go to state 102
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    openP                          shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_string                     shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111

state 37

    (13) vars -> type ID vars1 SEMICOLON .

    INT             reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    FLOAT           reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    STRING          reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    FUN             reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    MULTIPLICATION  reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    IF              reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    PRINT           reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    READ            reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    ID              reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    RETURN          reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    REPEAT          reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    CIRCLE          reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    SQUARE          reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    TRIANGLE        reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    RECTANGLE       reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    HIDE_STAR       reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    SHOW_STAR       reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    COLOR_STAR      reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    SIZE_STAR       reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    SETXY           reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    HAND_DOWN       reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    HAND_UP         reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    GO              reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    LEFT            reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    RIGHT           reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    BACK            reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    ARC             reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    WHILE           reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    FOR             reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)


state 38

    (66) equals -> EQUALS .

    OPENPAREN       reduce using rule 66 (equals -> EQUALS .)
    CTEINT          reduce using rule 66 (equals -> EQUALS .)
    CTEFLOAT        reduce using rule 66 (equals -> EQUALS .)
    CTESTRING       reduce using rule 66 (equals -> EQUALS .)
    ID              reduce using rule 66 (equals -> EQUALS .)
    READ            reduce using rule 66 (equals -> EQUALS .)


state 39

    (14) vars1 -> OPENBRACKET CTEINT . CLOSEBRACKET vars3

    CLOSEBRACKET    shift and go to state 116


state 40

    (5) star -> starI declara_vars star1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 117


state 41

    (8) star1 -> stmt . star1
    (8) star1 -> . stmt star1
    (9) star1 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . graphr
    (27) stmt -> . funCall SEMICOLON
    (28) stmt -> . return
    (152) empty -> .
    (29) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (85) condition -> . IF head_cond body condition1
    (61) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for
    (62) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (106) graphstmt -> . graphfig
    (107) graphstmt -> . graphview
    (108) graphstmt -> . graphmove
    (125) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (78) return -> . RETURN return1 SEMICOLON
    (67) id -> . ID
    (101) while -> . while1 body
    (96) for -> . for1 body
    (109) graphfig -> . graphfig1 SEMICOLON
    (110) graphfig -> . graphfig2 SEMICOLON
    (130) graphview -> . graphview0 SEMICOLON
    (131) graphview -> . graphview1 SEMICOLON
    (132) graphview -> . graphview2 SEMICOLON
    (115) graphmove -> . graphmove0 SEMICOLON
    (116) graphmove -> . graphmove1 SEMICOLON
    (117) graphmove -> . graphmove2 SEMICOLON
    (129) repeat -> . REPEAT
    (102) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (97) for1 -> . forInit OPENPAREN ID for2
    (111) graphfig1 -> . CIRCLE unaExp
    (112) graphfig1 -> . SQUARE unaExp
    (113) graphfig2 -> . TRIANGLE dosExp
    (114) graphfig2 -> . RECTANGLE dosExp
    (133) graphview0 -> . HIDE_STAR
    (134) graphview0 -> . SHOW_STAR
    (135) graphview1 -> . COLOR_STAR unaExp
    (136) graphview1 -> . SIZE_STAR unaExp
    (137) graphview2 -> . SETXY dosExp
    (118) graphmove0 -> . HAND_DOWN
    (119) graphmove0 -> . HAND_UP
    (120) graphmove1 -> . GO unaExp
    (121) graphmove1 -> . LEFT unaExp
    (122) graphmove1 -> . RIGHT unaExp
    (123) graphmove1 -> . BACK unaExp
    (124) graphmove2 -> . ARC dosExp
    (103) while_w -> . WHILE
    (100) forInit -> . FOR

    CLOSEBRACES     reduce using rule 152 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    ID              shift and go to state 62
    RETURN          shift and go to state 63
    REPEAT          shift and go to state 74
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92
    WHILE           shift and go to state 93
    FOR             shift and go to state 94

    stmt                           shift and go to state 41
    star1                          shift and go to state 118
    empty                          shift and go to state 42
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    graphr                         shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    repeat                         shift and go to state 61
    while1                         shift and go to state 64
    for1                           shift and go to state 65
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73
    while_w                        shift and go to state 75
    forInit                        shift and go to state 76

state 42

    (9) star1 -> empty .

    CLOSEBRACES     reduce using rule 9 (star1 -> empty .)


state 43

    (20) stmt -> assignment .

    IF              reduce using rule 20 (stmt -> assignment .)
    PRINT           reduce using rule 20 (stmt -> assignment .)
    READ            reduce using rule 20 (stmt -> assignment .)
    ID              reduce using rule 20 (stmt -> assignment .)
    RETURN          reduce using rule 20 (stmt -> assignment .)
    REPEAT          reduce using rule 20 (stmt -> assignment .)
    CIRCLE          reduce using rule 20 (stmt -> assignment .)
    SQUARE          reduce using rule 20 (stmt -> assignment .)
    TRIANGLE        reduce using rule 20 (stmt -> assignment .)
    RECTANGLE       reduce using rule 20 (stmt -> assignment .)
    HIDE_STAR       reduce using rule 20 (stmt -> assignment .)
    SHOW_STAR       reduce using rule 20 (stmt -> assignment .)
    COLOR_STAR      reduce using rule 20 (stmt -> assignment .)
    SIZE_STAR       reduce using rule 20 (stmt -> assignment .)
    SETXY           reduce using rule 20 (stmt -> assignment .)
    HAND_DOWN       reduce using rule 20 (stmt -> assignment .)
    HAND_UP         reduce using rule 20 (stmt -> assignment .)
    GO              reduce using rule 20 (stmt -> assignment .)
    LEFT            reduce using rule 20 (stmt -> assignment .)
    RIGHT           reduce using rule 20 (stmt -> assignment .)
    BACK            reduce using rule 20 (stmt -> assignment .)
    ARC             reduce using rule 20 (stmt -> assignment .)
    WHILE           reduce using rule 20 (stmt -> assignment .)
    FOR             reduce using rule 20 (stmt -> assignment .)
    CLOSEBRACES     reduce using rule 20 (stmt -> assignment .)


state 44

    (21) stmt -> condition .

    IF              reduce using rule 21 (stmt -> condition .)
    PRINT           reduce using rule 21 (stmt -> condition .)
    READ            reduce using rule 21 (stmt -> condition .)
    ID              reduce using rule 21 (stmt -> condition .)
    RETURN          reduce using rule 21 (stmt -> condition .)
    REPEAT          reduce using rule 21 (stmt -> condition .)
    CIRCLE          reduce using rule 21 (stmt -> condition .)
    SQUARE          reduce using rule 21 (stmt -> condition .)
    TRIANGLE        reduce using rule 21 (stmt -> condition .)
    RECTANGLE       reduce using rule 21 (stmt -> condition .)
    HIDE_STAR       reduce using rule 21 (stmt -> condition .)
    SHOW_STAR       reduce using rule 21 (stmt -> condition .)
    COLOR_STAR      reduce using rule 21 (stmt -> condition .)
    SIZE_STAR       reduce using rule 21 (stmt -> condition .)
    SETXY           reduce using rule 21 (stmt -> condition .)
    HAND_DOWN       reduce using rule 21 (stmt -> condition .)
    HAND_UP         reduce using rule 21 (stmt -> condition .)
    GO              reduce using rule 21 (stmt -> condition .)
    LEFT            reduce using rule 21 (stmt -> condition .)
    RIGHT           reduce using rule 21 (stmt -> condition .)
    BACK            reduce using rule 21 (stmt -> condition .)
    ARC             reduce using rule 21 (stmt -> condition .)
    WHILE           reduce using rule 21 (stmt -> condition .)
    FOR             reduce using rule 21 (stmt -> condition .)
    CLOSEBRACES     reduce using rule 21 (stmt -> condition .)


state 45

    (22) stmt -> print .

    IF              reduce using rule 22 (stmt -> print .)
    PRINT           reduce using rule 22 (stmt -> print .)
    READ            reduce using rule 22 (stmt -> print .)
    ID              reduce using rule 22 (stmt -> print .)
    RETURN          reduce using rule 22 (stmt -> print .)
    REPEAT          reduce using rule 22 (stmt -> print .)
    CIRCLE          reduce using rule 22 (stmt -> print .)
    SQUARE          reduce using rule 22 (stmt -> print .)
    TRIANGLE        reduce using rule 22 (stmt -> print .)
    RECTANGLE       reduce using rule 22 (stmt -> print .)
    HIDE_STAR       reduce using rule 22 (stmt -> print .)
    SHOW_STAR       reduce using rule 22 (stmt -> print .)
    COLOR_STAR      reduce using rule 22 (stmt -> print .)
    SIZE_STAR       reduce using rule 22 (stmt -> print .)
    SETXY           reduce using rule 22 (stmt -> print .)
    HAND_DOWN       reduce using rule 22 (stmt -> print .)
    HAND_UP         reduce using rule 22 (stmt -> print .)
    GO              reduce using rule 22 (stmt -> print .)
    LEFT            reduce using rule 22 (stmt -> print .)
    RIGHT           reduce using rule 22 (stmt -> print .)
    BACK            reduce using rule 22 (stmt -> print .)
    ARC             reduce using rule 22 (stmt -> print .)
    WHILE           reduce using rule 22 (stmt -> print .)
    FOR             reduce using rule 22 (stmt -> print .)
    CLOSEBRACES     reduce using rule 22 (stmt -> print .)


state 46

    (23) stmt -> loop .

    IF              reduce using rule 23 (stmt -> loop .)
    PRINT           reduce using rule 23 (stmt -> loop .)
    READ            reduce using rule 23 (stmt -> loop .)
    ID              reduce using rule 23 (stmt -> loop .)
    RETURN          reduce using rule 23 (stmt -> loop .)
    REPEAT          reduce using rule 23 (stmt -> loop .)
    CIRCLE          reduce using rule 23 (stmt -> loop .)
    SQUARE          reduce using rule 23 (stmt -> loop .)
    TRIANGLE        reduce using rule 23 (stmt -> loop .)
    RECTANGLE       reduce using rule 23 (stmt -> loop .)
    HIDE_STAR       reduce using rule 23 (stmt -> loop .)
    SHOW_STAR       reduce using rule 23 (stmt -> loop .)
    COLOR_STAR      reduce using rule 23 (stmt -> loop .)
    SIZE_STAR       reduce using rule 23 (stmt -> loop .)
    SETXY           reduce using rule 23 (stmt -> loop .)
    HAND_DOWN       reduce using rule 23 (stmt -> loop .)
    HAND_UP         reduce using rule 23 (stmt -> loop .)
    GO              reduce using rule 23 (stmt -> loop .)
    LEFT            reduce using rule 23 (stmt -> loop .)
    RIGHT           reduce using rule 23 (stmt -> loop .)
    BACK            reduce using rule 23 (stmt -> loop .)
    ARC             reduce using rule 23 (stmt -> loop .)
    WHILE           reduce using rule 23 (stmt -> loop .)
    FOR             reduce using rule 23 (stmt -> loop .)
    CLOSEBRACES     reduce using rule 23 (stmt -> loop .)


state 47

    (24) stmt -> read .

    IF              reduce using rule 24 (stmt -> read .)
    PRINT           reduce using rule 24 (stmt -> read .)
    READ            reduce using rule 24 (stmt -> read .)
    ID              reduce using rule 24 (stmt -> read .)
    RETURN          reduce using rule 24 (stmt -> read .)
    REPEAT          reduce using rule 24 (stmt -> read .)
    CIRCLE          reduce using rule 24 (stmt -> read .)
    SQUARE          reduce using rule 24 (stmt -> read .)
    TRIANGLE        reduce using rule 24 (stmt -> read .)
    RECTANGLE       reduce using rule 24 (stmt -> read .)
    HIDE_STAR       reduce using rule 24 (stmt -> read .)
    SHOW_STAR       reduce using rule 24 (stmt -> read .)
    COLOR_STAR      reduce using rule 24 (stmt -> read .)
    SIZE_STAR       reduce using rule 24 (stmt -> read .)
    SETXY           reduce using rule 24 (stmt -> read .)
    HAND_DOWN       reduce using rule 24 (stmt -> read .)
    HAND_UP         reduce using rule 24 (stmt -> read .)
    GO              reduce using rule 24 (stmt -> read .)
    LEFT            reduce using rule 24 (stmt -> read .)
    RIGHT           reduce using rule 24 (stmt -> read .)
    BACK            reduce using rule 24 (stmt -> read .)
    ARC             reduce using rule 24 (stmt -> read .)
    WHILE           reduce using rule 24 (stmt -> read .)
    FOR             reduce using rule 24 (stmt -> read .)
    CLOSEBRACES     reduce using rule 24 (stmt -> read .)


state 48

    (25) stmt -> graphstmt .

    IF              reduce using rule 25 (stmt -> graphstmt .)
    PRINT           reduce using rule 25 (stmt -> graphstmt .)
    READ            reduce using rule 25 (stmt -> graphstmt .)
    ID              reduce using rule 25 (stmt -> graphstmt .)
    RETURN          reduce using rule 25 (stmt -> graphstmt .)
    REPEAT          reduce using rule 25 (stmt -> graphstmt .)
    CIRCLE          reduce using rule 25 (stmt -> graphstmt .)
    SQUARE          reduce using rule 25 (stmt -> graphstmt .)
    TRIANGLE        reduce using rule 25 (stmt -> graphstmt .)
    RECTANGLE       reduce using rule 25 (stmt -> graphstmt .)
    HIDE_STAR       reduce using rule 25 (stmt -> graphstmt .)
    SHOW_STAR       reduce using rule 25 (stmt -> graphstmt .)
    COLOR_STAR      reduce using rule 25 (stmt -> graphstmt .)
    SIZE_STAR       reduce using rule 25 (stmt -> graphstmt .)
    SETXY           reduce using rule 25 (stmt -> graphstmt .)
    HAND_DOWN       reduce using rule 25 (stmt -> graphstmt .)
    HAND_UP         reduce using rule 25 (stmt -> graphstmt .)
    GO              reduce using rule 25 (stmt -> graphstmt .)
    LEFT            reduce using rule 25 (stmt -> graphstmt .)
    RIGHT           reduce using rule 25 (stmt -> graphstmt .)
    BACK            reduce using rule 25 (stmt -> graphstmt .)
    ARC             reduce using rule 25 (stmt -> graphstmt .)
    WHILE           reduce using rule 25 (stmt -> graphstmt .)
    FOR             reduce using rule 25 (stmt -> graphstmt .)
    CLOSEBRACES     reduce using rule 25 (stmt -> graphstmt .)


state 49

    (26) stmt -> graphr .

    IF              reduce using rule 26 (stmt -> graphr .)
    PRINT           reduce using rule 26 (stmt -> graphr .)
    READ            reduce using rule 26 (stmt -> graphr .)
    ID              reduce using rule 26 (stmt -> graphr .)
    RETURN          reduce using rule 26 (stmt -> graphr .)
    REPEAT          reduce using rule 26 (stmt -> graphr .)
    CIRCLE          reduce using rule 26 (stmt -> graphr .)
    SQUARE          reduce using rule 26 (stmt -> graphr .)
    TRIANGLE        reduce using rule 26 (stmt -> graphr .)
    RECTANGLE       reduce using rule 26 (stmt -> graphr .)
    HIDE_STAR       reduce using rule 26 (stmt -> graphr .)
    SHOW_STAR       reduce using rule 26 (stmt -> graphr .)
    COLOR_STAR      reduce using rule 26 (stmt -> graphr .)
    SIZE_STAR       reduce using rule 26 (stmt -> graphr .)
    SETXY           reduce using rule 26 (stmt -> graphr .)
    HAND_DOWN       reduce using rule 26 (stmt -> graphr .)
    HAND_UP         reduce using rule 26 (stmt -> graphr .)
    GO              reduce using rule 26 (stmt -> graphr .)
    LEFT            reduce using rule 26 (stmt -> graphr .)
    RIGHT           reduce using rule 26 (stmt -> graphr .)
    BACK            reduce using rule 26 (stmt -> graphr .)
    ARC             reduce using rule 26 (stmt -> graphr .)
    WHILE           reduce using rule 26 (stmt -> graphr .)
    FOR             reduce using rule 26 (stmt -> graphr .)
    CLOSEBRACES     reduce using rule 26 (stmt -> graphr .)


state 50

    (27) stmt -> funCall . SEMICOLON

    SEMICOLON       shift and go to state 119


state 51

    (28) stmt -> return .

    IF              reduce using rule 28 (stmt -> return .)
    PRINT           reduce using rule 28 (stmt -> return .)
    READ            reduce using rule 28 (stmt -> return .)
    ID              reduce using rule 28 (stmt -> return .)
    RETURN          reduce using rule 28 (stmt -> return .)
    REPEAT          reduce using rule 28 (stmt -> return .)
    CIRCLE          reduce using rule 28 (stmt -> return .)
    SQUARE          reduce using rule 28 (stmt -> return .)
    TRIANGLE        reduce using rule 28 (stmt -> return .)
    RECTANGLE       reduce using rule 28 (stmt -> return .)
    HIDE_STAR       reduce using rule 28 (stmt -> return .)
    SHOW_STAR       reduce using rule 28 (stmt -> return .)
    COLOR_STAR      reduce using rule 28 (stmt -> return .)
    SIZE_STAR       reduce using rule 28 (stmt -> return .)
    SETXY           reduce using rule 28 (stmt -> return .)
    HAND_DOWN       reduce using rule 28 (stmt -> return .)
    HAND_UP         reduce using rule 28 (stmt -> return .)
    GO              reduce using rule 28 (stmt -> return .)
    LEFT            reduce using rule 28 (stmt -> return .)
    RIGHT           reduce using rule 28 (stmt -> return .)
    BACK            reduce using rule 28 (stmt -> return .)
    ARC             reduce using rule 28 (stmt -> return .)
    WHILE           reduce using rule 28 (stmt -> return .)
    FOR             reduce using rule 28 (stmt -> return .)
    CLOSEBRACES     reduce using rule 28 (stmt -> return .)


state 52

    (29) assignment -> id . assignment1 equals assignment3 SEMICOLON
    (30) assignment1 -> . assignment2
    (31) assignment1 -> . assignment2 assignment1
    (32) assignment1 -> . empty
    (33) assignment2 -> . OPENBRACKET exp CLOSEBRACKET
    (152) empty -> .

    OPENBRACKET     shift and go to state 123
    EQUALS          reduce using rule 152 (empty -> .)

    assignment1                    shift and go to state 120
    assignment2                    shift and go to state 121
    empty                          shift and go to state 122

state 53

    (85) condition -> IF . head_cond body condition1
    (91) head_cond -> . OPENPAREN expression close_condition

    OPENPAREN       shift and go to state 125

    head_cond                      shift and go to state 124

state 54

    (61) print -> PRINT . OPENPAREN expression CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 126


state 55

    (18) loop -> while .

    IF              reduce using rule 18 (loop -> while .)
    PRINT           reduce using rule 18 (loop -> while .)
    READ            reduce using rule 18 (loop -> while .)
    ID              reduce using rule 18 (loop -> while .)
    RETURN          reduce using rule 18 (loop -> while .)
    REPEAT          reduce using rule 18 (loop -> while .)
    CIRCLE          reduce using rule 18 (loop -> while .)
    SQUARE          reduce using rule 18 (loop -> while .)
    TRIANGLE        reduce using rule 18 (loop -> while .)
    RECTANGLE       reduce using rule 18 (loop -> while .)
    HIDE_STAR       reduce using rule 18 (loop -> while .)
    SHOW_STAR       reduce using rule 18 (loop -> while .)
    COLOR_STAR      reduce using rule 18 (loop -> while .)
    SIZE_STAR       reduce using rule 18 (loop -> while .)
    SETXY           reduce using rule 18 (loop -> while .)
    HAND_DOWN       reduce using rule 18 (loop -> while .)
    HAND_UP         reduce using rule 18 (loop -> while .)
    GO              reduce using rule 18 (loop -> while .)
    LEFT            reduce using rule 18 (loop -> while .)
    RIGHT           reduce using rule 18 (loop -> while .)
    BACK            reduce using rule 18 (loop -> while .)
    ARC             reduce using rule 18 (loop -> while .)
    WHILE           reduce using rule 18 (loop -> while .)
    FOR             reduce using rule 18 (loop -> while .)
    CLOSEBRACES     reduce using rule 18 (loop -> while .)


state 56

    (19) loop -> for .

    IF              reduce using rule 19 (loop -> for .)
    PRINT           reduce using rule 19 (loop -> for .)
    READ            reduce using rule 19 (loop -> for .)
    ID              reduce using rule 19 (loop -> for .)
    RETURN          reduce using rule 19 (loop -> for .)
    REPEAT          reduce using rule 19 (loop -> for .)
    CIRCLE          reduce using rule 19 (loop -> for .)
    SQUARE          reduce using rule 19 (loop -> for .)
    TRIANGLE        reduce using rule 19 (loop -> for .)
    RECTANGLE       reduce using rule 19 (loop -> for .)
    HIDE_STAR       reduce using rule 19 (loop -> for .)
    SHOW_STAR       reduce using rule 19 (loop -> for .)
    COLOR_STAR      reduce using rule 19 (loop -> for .)
    SIZE_STAR       reduce using rule 19 (loop -> for .)
    SETXY           reduce using rule 19 (loop -> for .)
    HAND_DOWN       reduce using rule 19 (loop -> for .)
    HAND_UP         reduce using rule 19 (loop -> for .)
    GO              reduce using rule 19 (loop -> for .)
    LEFT            reduce using rule 19 (loop -> for .)
    RIGHT           reduce using rule 19 (loop -> for .)
    BACK            reduce using rule 19 (loop -> for .)
    ARC             reduce using rule 19 (loop -> for .)
    WHILE           reduce using rule 19 (loop -> for .)
    FOR             reduce using rule 19 (loop -> for .)
    CLOSEBRACES     reduce using rule 19 (loop -> for .)


state 57

    (62) read -> READ . OPENPAREN id read1 CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 127


state 58

    (106) graphstmt -> graphfig .

    IF              reduce using rule 106 (graphstmt -> graphfig .)
    PRINT           reduce using rule 106 (graphstmt -> graphfig .)
    READ            reduce using rule 106 (graphstmt -> graphfig .)
    ID              reduce using rule 106 (graphstmt -> graphfig .)
    RETURN          reduce using rule 106 (graphstmt -> graphfig .)
    REPEAT          reduce using rule 106 (graphstmt -> graphfig .)
    CIRCLE          reduce using rule 106 (graphstmt -> graphfig .)
    SQUARE          reduce using rule 106 (graphstmt -> graphfig .)
    TRIANGLE        reduce using rule 106 (graphstmt -> graphfig .)
    RECTANGLE       reduce using rule 106 (graphstmt -> graphfig .)
    HIDE_STAR       reduce using rule 106 (graphstmt -> graphfig .)
    SHOW_STAR       reduce using rule 106 (graphstmt -> graphfig .)
    COLOR_STAR      reduce using rule 106 (graphstmt -> graphfig .)
    SIZE_STAR       reduce using rule 106 (graphstmt -> graphfig .)
    SETXY           reduce using rule 106 (graphstmt -> graphfig .)
    HAND_DOWN       reduce using rule 106 (graphstmt -> graphfig .)
    HAND_UP         reduce using rule 106 (graphstmt -> graphfig .)
    GO              reduce using rule 106 (graphstmt -> graphfig .)
    LEFT            reduce using rule 106 (graphstmt -> graphfig .)
    RIGHT           reduce using rule 106 (graphstmt -> graphfig .)
    BACK            reduce using rule 106 (graphstmt -> graphfig .)
    ARC             reduce using rule 106 (graphstmt -> graphfig .)
    WHILE           reduce using rule 106 (graphstmt -> graphfig .)
    FOR             reduce using rule 106 (graphstmt -> graphfig .)
    CLOSEBRACES     reduce using rule 106 (graphstmt -> graphfig .)


state 59

    (107) graphstmt -> graphview .

    IF              reduce using rule 107 (graphstmt -> graphview .)
    PRINT           reduce using rule 107 (graphstmt -> graphview .)
    READ            reduce using rule 107 (graphstmt -> graphview .)
    ID              reduce using rule 107 (graphstmt -> graphview .)
    RETURN          reduce using rule 107 (graphstmt -> graphview .)
    REPEAT          reduce using rule 107 (graphstmt -> graphview .)
    CIRCLE          reduce using rule 107 (graphstmt -> graphview .)
    SQUARE          reduce using rule 107 (graphstmt -> graphview .)
    TRIANGLE        reduce using rule 107 (graphstmt -> graphview .)
    RECTANGLE       reduce using rule 107 (graphstmt -> graphview .)
    HIDE_STAR       reduce using rule 107 (graphstmt -> graphview .)
    SHOW_STAR       reduce using rule 107 (graphstmt -> graphview .)
    COLOR_STAR      reduce using rule 107 (graphstmt -> graphview .)
    SIZE_STAR       reduce using rule 107 (graphstmt -> graphview .)
    SETXY           reduce using rule 107 (graphstmt -> graphview .)
    HAND_DOWN       reduce using rule 107 (graphstmt -> graphview .)
    HAND_UP         reduce using rule 107 (graphstmt -> graphview .)
    GO              reduce using rule 107 (graphstmt -> graphview .)
    LEFT            reduce using rule 107 (graphstmt -> graphview .)
    RIGHT           reduce using rule 107 (graphstmt -> graphview .)
    BACK            reduce using rule 107 (graphstmt -> graphview .)
    ARC             reduce using rule 107 (graphstmt -> graphview .)
    WHILE           reduce using rule 107 (graphstmt -> graphview .)
    FOR             reduce using rule 107 (graphstmt -> graphview .)
    CLOSEBRACES     reduce using rule 107 (graphstmt -> graphview .)


state 60

    (108) graphstmt -> graphmove .

    IF              reduce using rule 108 (graphstmt -> graphmove .)
    PRINT           reduce using rule 108 (graphstmt -> graphmove .)
    READ            reduce using rule 108 (graphstmt -> graphmove .)
    ID              reduce using rule 108 (graphstmt -> graphmove .)
    RETURN          reduce using rule 108 (graphstmt -> graphmove .)
    REPEAT          reduce using rule 108 (graphstmt -> graphmove .)
    CIRCLE          reduce using rule 108 (graphstmt -> graphmove .)
    SQUARE          reduce using rule 108 (graphstmt -> graphmove .)
    TRIANGLE        reduce using rule 108 (graphstmt -> graphmove .)
    RECTANGLE       reduce using rule 108 (graphstmt -> graphmove .)
    HIDE_STAR       reduce using rule 108 (graphstmt -> graphmove .)
    SHOW_STAR       reduce using rule 108 (graphstmt -> graphmove .)
    COLOR_STAR      reduce using rule 108 (graphstmt -> graphmove .)
    SIZE_STAR       reduce using rule 108 (graphstmt -> graphmove .)
    SETXY           reduce using rule 108 (graphstmt -> graphmove .)
    HAND_DOWN       reduce using rule 108 (graphstmt -> graphmove .)
    HAND_UP         reduce using rule 108 (graphstmt -> graphmove .)
    GO              reduce using rule 108 (graphstmt -> graphmove .)
    LEFT            reduce using rule 108 (graphstmt -> graphmove .)
    RIGHT           reduce using rule 108 (graphstmt -> graphmove .)
    BACK            reduce using rule 108 (graphstmt -> graphmove .)
    ARC             reduce using rule 108 (graphstmt -> graphmove .)
    WHILE           reduce using rule 108 (graphstmt -> graphmove .)
    FOR             reduce using rule 108 (graphstmt -> graphmove .)
    CLOSEBRACES     reduce using rule 108 (graphstmt -> graphmove .)


state 61

    (125) graphr -> repeat . rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (128) rep -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 129

    rep                            shift and go to state 128

state 62

    (68) funCall -> ID . iniciaFunCall funCall2 terminaFunCall
    (67) id -> ID .
    (69) iniciaFunCall -> . OPENPAREN

    OPENBRACKET     reduce using rule 67 (id -> ID .)
    EQUALS          reduce using rule 67 (id -> ID .)
    OPENPAREN       shift and go to state 131

    iniciaFunCall                  shift and go to state 130

state 63

    (78) return -> RETURN . return1 SEMICOLON
    (79) return1 -> . vcte
    (80) return1 -> . exp
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_string
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (140) exp -> . term
    (141) exp -> . term exp_o exp
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (67) id -> . ID
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (146) term -> . factor term_o term
    (147) term -> . factor
    (150) factor -> . vcte
    (151) factor -> . openP expression closeP
    (144) openP -> . OPENPAREN

    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    ID              shift and go to state 101
    OPENPAREN       shift and go to state 112

    return1                        shift and go to state 132
    vcte                           shift and go to state 133
    exp                            shift and go to state 134
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_string                     shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    term                           shift and go to state 103
    factor                         shift and go to state 104
    openP                          shift and go to state 106

state 64

    (101) while -> while1 . body
    (92) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 136

    body                           shift and go to state 135

state 65

    (96) for -> for1 . body
    (92) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 136

    body                           shift and go to state 137

state 66

    (109) graphfig -> graphfig1 . SEMICOLON

    SEMICOLON       shift and go to state 138


state 67

    (110) graphfig -> graphfig2 . SEMICOLON

    SEMICOLON       shift and go to state 139


state 68

    (130) graphview -> graphview0 . SEMICOLON

    SEMICOLON       shift and go to state 140


state 69

    (131) graphview -> graphview1 . SEMICOLON

    SEMICOLON       shift and go to state 141


state 70

    (132) graphview -> graphview2 . SEMICOLON

    SEMICOLON       shift and go to state 142


state 71

    (115) graphmove -> graphmove0 . SEMICOLON

    SEMICOLON       shift and go to state 143


state 72

    (116) graphmove -> graphmove1 . SEMICOLON

    SEMICOLON       shift and go to state 144


state 73

    (117) graphmove -> graphmove2 . SEMICOLON

    SEMICOLON       shift and go to state 145


state 74

    (129) repeat -> REPEAT .

    OPENPAREN       reduce using rule 129 (repeat -> REPEAT .)


state 75

    (102) while1 -> while_w . OPENPAREN expression CLOSEPAREN

    OPENPAREN       shift and go to state 146


state 76

    (97) for1 -> forInit . OPENPAREN ID for2

    OPENPAREN       shift and go to state 147


state 77

    (111) graphfig1 -> CIRCLE . unaExp
    (105) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 149

    unaExp                         shift and go to state 148

state 78

    (112) graphfig1 -> SQUARE . unaExp
    (105) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 149

    unaExp                         shift and go to state 150

state 79

    (113) graphfig2 -> TRIANGLE . dosExp
    (104) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 152

    dosExp                         shift and go to state 151

state 80

    (114) graphfig2 -> RECTANGLE . dosExp
    (104) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 152

    dosExp                         shift and go to state 153

state 81

    (133) graphview0 -> HIDE_STAR .

    SEMICOLON       reduce using rule 133 (graphview0 -> HIDE_STAR .)


state 82

    (134) graphview0 -> SHOW_STAR .

    SEMICOLON       reduce using rule 134 (graphview0 -> SHOW_STAR .)


state 83

    (135) graphview1 -> COLOR_STAR . unaExp
    (105) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 149

    unaExp                         shift and go to state 154

state 84

    (136) graphview1 -> SIZE_STAR . unaExp
    (105) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 149

    unaExp                         shift and go to state 155

state 85

    (137) graphview2 -> SETXY . dosExp
    (104) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 152

    dosExp                         shift and go to state 156

state 86

    (118) graphmove0 -> HAND_DOWN .

    SEMICOLON       reduce using rule 118 (graphmove0 -> HAND_DOWN .)


state 87

    (119) graphmove0 -> HAND_UP .

    SEMICOLON       reduce using rule 119 (graphmove0 -> HAND_UP .)


state 88

    (120) graphmove1 -> GO . unaExp
    (105) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 149

    unaExp                         shift and go to state 157

state 89

    (121) graphmove1 -> LEFT . unaExp
    (105) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 149

    unaExp                         shift and go to state 158

state 90

    (122) graphmove1 -> RIGHT . unaExp
    (105) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 149

    unaExp                         shift and go to state 159

state 91

    (123) graphmove1 -> BACK . unaExp
    (105) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 149

    unaExp                         shift and go to state 160

state 92

    (124) graphmove2 -> ARC . dosExp
    (104) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 152

    dosExp                         shift and go to state 161

state 93

    (103) while_w -> WHILE .

    OPENPAREN       reduce using rule 103 (while_w -> WHILE .)


state 94

    (100) forInit -> FOR .

    OPENPAREN       reduce using rule 100 (forInit -> FOR .)


state 95

    (47) function -> FUN functionI function2 inicia_fun . declara_vars function4 termina_fun
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (12) vars -> . type ID vars1 equals exp SEMICOLON
    (13) vars -> . type ID vars1 SEMICOLON
    (152) empty -> .
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . STRING

    IF              reduce using rule 152 (empty -> .)
    PRINT           reduce using rule 152 (empty -> .)
    READ            reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    RETURN          reduce using rule 152 (empty -> .)
    REPEAT          reduce using rule 152 (empty -> .)
    CIRCLE          reduce using rule 152 (empty -> .)
    SQUARE          reduce using rule 152 (empty -> .)
    TRIANGLE        reduce using rule 152 (empty -> .)
    RECTANGLE       reduce using rule 152 (empty -> .)
    HIDE_STAR       reduce using rule 152 (empty -> .)
    SHOW_STAR       reduce using rule 152 (empty -> .)
    COLOR_STAR      reduce using rule 152 (empty -> .)
    SIZE_STAR       reduce using rule 152 (empty -> .)
    SETXY           reduce using rule 152 (empty -> .)
    HAND_DOWN       reduce using rule 152 (empty -> .)
    HAND_UP         reduce using rule 152 (empty -> .)
    GO              reduce using rule 152 (empty -> .)
    LEFT            reduce using rule 152 (empty -> .)
    RIGHT           reduce using rule 152 (empty -> .)
    BACK            reduce using rule 152 (empty -> .)
    ARC             reduce using rule 152 (empty -> .)
    WHILE           reduce using rule 152 (empty -> .)
    FOR             reduce using rule 152 (empty -> .)
    CLOSEBRACES     reduce using rule 152 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    declara_vars                   shift and go to state 162
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 96

    (48) inicia_fun -> OPENBRACES .

    INT             reduce using rule 48 (inicia_fun -> OPENBRACES .)
    FLOAT           reduce using rule 48 (inicia_fun -> OPENBRACES .)
    STRING          reduce using rule 48 (inicia_fun -> OPENBRACES .)
    IF              reduce using rule 48 (inicia_fun -> OPENBRACES .)
    PRINT           reduce using rule 48 (inicia_fun -> OPENBRACES .)
    READ            reduce using rule 48 (inicia_fun -> OPENBRACES .)
    ID              reduce using rule 48 (inicia_fun -> OPENBRACES .)
    RETURN          reduce using rule 48 (inicia_fun -> OPENBRACES .)
    REPEAT          reduce using rule 48 (inicia_fun -> OPENBRACES .)
    CIRCLE          reduce using rule 48 (inicia_fun -> OPENBRACES .)
    SQUARE          reduce using rule 48 (inicia_fun -> OPENBRACES .)
    TRIANGLE        reduce using rule 48 (inicia_fun -> OPENBRACES .)
    RECTANGLE       reduce using rule 48 (inicia_fun -> OPENBRACES .)
    HIDE_STAR       reduce using rule 48 (inicia_fun -> OPENBRACES .)
    SHOW_STAR       reduce using rule 48 (inicia_fun -> OPENBRACES .)
    COLOR_STAR      reduce using rule 48 (inicia_fun -> OPENBRACES .)
    SIZE_STAR       reduce using rule 48 (inicia_fun -> OPENBRACES .)
    SETXY           reduce using rule 48 (inicia_fun -> OPENBRACES .)
    HAND_DOWN       reduce using rule 48 (inicia_fun -> OPENBRACES .)
    HAND_UP         reduce using rule 48 (inicia_fun -> OPENBRACES .)
    GO              reduce using rule 48 (inicia_fun -> OPENBRACES .)
    LEFT            reduce using rule 48 (inicia_fun -> OPENBRACES .)
    RIGHT           reduce using rule 48 (inicia_fun -> OPENBRACES .)
    BACK            reduce using rule 48 (inicia_fun -> OPENBRACES .)
    ARC             reduce using rule 48 (inicia_fun -> OPENBRACES .)
    WHILE           reduce using rule 48 (inicia_fun -> OPENBRACES .)
    FOR             reduce using rule 48 (inicia_fun -> OPENBRACES .)
    CLOSEBRACES     reduce using rule 48 (inicia_fun -> OPENBRACES .)


state 97

    (50) function2 -> OPENPAREN function3 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 163


state 98

    (51) function3 -> funParam . function5
    (55) function5 -> . COMMA funParam function5
    (56) function5 -> . empty
    (152) empty -> .

    COMMA           shift and go to state 165
    CLOSEPAREN      reduce using rule 152 (empty -> .)

    function5                      shift and go to state 164
    empty                          shift and go to state 166

state 99

    (52) function3 -> empty .

    CLOSEPAREN      reduce using rule 52 (function3 -> empty .)


state 100

    (57) funParam -> type . ID

    ID              shift and go to state 167


state 101

    (67) id -> ID .
    (68) funCall -> ID . iniciaFunCall funCall2 terminaFunCall
    (69) iniciaFunCall -> . OPENPAREN

    OPENBRACKET     reduce using rule 67 (id -> ID .)
    MULTIPLICATION  reduce using rule 67 (id -> ID .)
    DIVISION        reduce using rule 67 (id -> ID .)
    ADDITION        reduce using rule 67 (id -> ID .)
    SUBSTRACTION    reduce using rule 67 (id -> ID .)
    SEMICOLON       reduce using rule 67 (id -> ID .)
    GREATER         reduce using rule 67 (id -> ID .)
    LESS            reduce using rule 67 (id -> ID .)
    NOTEQUAL        reduce using rule 67 (id -> ID .)
    ISEQUAL         reduce using rule 67 (id -> ID .)
    CLOSEPAREN      reduce using rule 67 (id -> ID .)
    CLOSEBRACKET    reduce using rule 67 (id -> ID .)
    COMMA           reduce using rule 67 (id -> ID .)
    OPENPAREN       shift and go to state 131

    iniciaFunCall                  shift and go to state 130

state 102

    (12) vars -> type ID vars1 equals exp . SEMICOLON

    SEMICOLON       shift and go to state 168


state 103

    (140) exp -> term .
    (141) exp -> term . exp_o exp
    (142) exp_o -> . ADDITION
    (143) exp_o -> . SUBSTRACTION

    SEMICOLON       reduce using rule 140 (exp -> term .)
    GREATER         reduce using rule 140 (exp -> term .)
    LESS            reduce using rule 140 (exp -> term .)
    NOTEQUAL        reduce using rule 140 (exp -> term .)
    ISEQUAL         reduce using rule 140 (exp -> term .)
    CLOSEPAREN      reduce using rule 140 (exp -> term .)
    CLOSEBRACKET    reduce using rule 140 (exp -> term .)
    COMMA           reduce using rule 140 (exp -> term .)
    ADDITION        shift and go to state 170
    SUBSTRACTION    shift and go to state 171

    exp_o                          shift and go to state 169

state 104

    (146) term -> factor . term_o term
    (147) term -> factor .
    (148) term_o -> . MULTIPLICATION
    (149) term_o -> . DIVISION

    ADDITION        reduce using rule 147 (term -> factor .)
    SUBSTRACTION    reduce using rule 147 (term -> factor .)
    SEMICOLON       reduce using rule 147 (term -> factor .)
    GREATER         reduce using rule 147 (term -> factor .)
    LESS            reduce using rule 147 (term -> factor .)
    NOTEQUAL        reduce using rule 147 (term -> factor .)
    ISEQUAL         reduce using rule 147 (term -> factor .)
    CLOSEPAREN      reduce using rule 147 (term -> factor .)
    CLOSEBRACKET    reduce using rule 147 (term -> factor .)
    COMMA           reduce using rule 147 (term -> factor .)
    MULTIPLICATION  shift and go to state 173
    DIVISION        shift and go to state 174

    term_o                         shift and go to state 172

state 105

    (150) factor -> vcte .

    MULTIPLICATION  reduce using rule 150 (factor -> vcte .)
    DIVISION        reduce using rule 150 (factor -> vcte .)
    ADDITION        reduce using rule 150 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 150 (factor -> vcte .)
    SEMICOLON       reduce using rule 150 (factor -> vcte .)
    GREATER         reduce using rule 150 (factor -> vcte .)
    LESS            reduce using rule 150 (factor -> vcte .)
    NOTEQUAL        reduce using rule 150 (factor -> vcte .)
    ISEQUAL         reduce using rule 150 (factor -> vcte .)
    CLOSEPAREN      reduce using rule 150 (factor -> vcte .)
    CLOSEBRACKET    reduce using rule 150 (factor -> vcte .)
    COMMA           reduce using rule 150 (factor -> vcte .)


state 106

    (151) factor -> openP . expression closeP
    (138) expression -> . exp loper exp
    (139) expression -> . exp
    (140) exp -> . term
    (141) exp -> . term exp_o exp
    (146) term -> . factor term_o term
    (147) term -> . factor
    (150) factor -> . vcte
    (151) factor -> . openP expression closeP
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_string
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (144) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (67) id -> . ID
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 112
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    ID              shift and go to state 101

    openP                          shift and go to state 106
    expression                     shift and go to state 175
    exp                            shift and go to state 176
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_string                     shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111

state 107

    (36) vcte -> cte_int .

    MULTIPLICATION  reduce using rule 36 (vcte -> cte_int .)
    DIVISION        reduce using rule 36 (vcte -> cte_int .)
    ADDITION        reduce using rule 36 (vcte -> cte_int .)
    SUBSTRACTION    reduce using rule 36 (vcte -> cte_int .)
    SEMICOLON       reduce using rule 36 (vcte -> cte_int .)
    GREATER         reduce using rule 36 (vcte -> cte_int .)
    LESS            reduce using rule 36 (vcte -> cte_int .)
    NOTEQUAL        reduce using rule 36 (vcte -> cte_int .)
    ISEQUAL         reduce using rule 36 (vcte -> cte_int .)
    CLOSEPAREN      reduce using rule 36 (vcte -> cte_int .)
    CLOSEBRACKET    reduce using rule 36 (vcte -> cte_int .)
    COMMA           reduce using rule 36 (vcte -> cte_int .)


state 108

    (37) vcte -> cte_float .

    MULTIPLICATION  reduce using rule 37 (vcte -> cte_float .)
    DIVISION        reduce using rule 37 (vcte -> cte_float .)
    ADDITION        reduce using rule 37 (vcte -> cte_float .)
    SUBSTRACTION    reduce using rule 37 (vcte -> cte_float .)
    SEMICOLON       reduce using rule 37 (vcte -> cte_float .)
    GREATER         reduce using rule 37 (vcte -> cte_float .)
    LESS            reduce using rule 37 (vcte -> cte_float .)
    NOTEQUAL        reduce using rule 37 (vcte -> cte_float .)
    ISEQUAL         reduce using rule 37 (vcte -> cte_float .)
    CLOSEPAREN      reduce using rule 37 (vcte -> cte_float .)
    CLOSEBRACKET    reduce using rule 37 (vcte -> cte_float .)
    COMMA           reduce using rule 37 (vcte -> cte_float .)


state 109

    (38) vcte -> cte_string .

    MULTIPLICATION  reduce using rule 38 (vcte -> cte_string .)
    DIVISION        reduce using rule 38 (vcte -> cte_string .)
    ADDITION        reduce using rule 38 (vcte -> cte_string .)
    SUBSTRACTION    reduce using rule 38 (vcte -> cte_string .)
    SEMICOLON       reduce using rule 38 (vcte -> cte_string .)
    GREATER         reduce using rule 38 (vcte -> cte_string .)
    LESS            reduce using rule 38 (vcte -> cte_string .)
    NOTEQUAL        reduce using rule 38 (vcte -> cte_string .)
    ISEQUAL         reduce using rule 38 (vcte -> cte_string .)
    CLOSEPAREN      reduce using rule 38 (vcte -> cte_string .)
    CLOSEBRACKET    reduce using rule 38 (vcte -> cte_string .)
    COMMA           reduce using rule 38 (vcte -> cte_string .)


state 110

    (39) vcte -> id . vcte1
    (41) vcte1 -> . OPENBRACKET exp CLOSEBRACKET vcte3
    (42) vcte1 -> . empty
    (152) empty -> .

    OPENBRACKET     shift and go to state 178
    MULTIPLICATION  reduce using rule 152 (empty -> .)
    DIVISION        reduce using rule 152 (empty -> .)
    ADDITION        reduce using rule 152 (empty -> .)
    SUBSTRACTION    reduce using rule 152 (empty -> .)
    SEMICOLON       reduce using rule 152 (empty -> .)
    GREATER         reduce using rule 152 (empty -> .)
    LESS            reduce using rule 152 (empty -> .)
    NOTEQUAL        reduce using rule 152 (empty -> .)
    ISEQUAL         reduce using rule 152 (empty -> .)
    CLOSEPAREN      reduce using rule 152 (empty -> .)
    CLOSEBRACKET    reduce using rule 152 (empty -> .)
    COMMA           reduce using rule 152 (empty -> .)

    vcte1                          shift and go to state 177
    empty                          shift and go to state 179

state 111

    (40) vcte -> funCall .

    MULTIPLICATION  reduce using rule 40 (vcte -> funCall .)
    DIVISION        reduce using rule 40 (vcte -> funCall .)
    ADDITION        reduce using rule 40 (vcte -> funCall .)
    SUBSTRACTION    reduce using rule 40 (vcte -> funCall .)
    SEMICOLON       reduce using rule 40 (vcte -> funCall .)
    GREATER         reduce using rule 40 (vcte -> funCall .)
    LESS            reduce using rule 40 (vcte -> funCall .)
    NOTEQUAL        reduce using rule 40 (vcte -> funCall .)
    ISEQUAL         reduce using rule 40 (vcte -> funCall .)
    CLOSEPAREN      reduce using rule 40 (vcte -> funCall .)
    CLOSEBRACKET    reduce using rule 40 (vcte -> funCall .)
    COMMA           reduce using rule 40 (vcte -> funCall .)


state 112

    (144) openP -> OPENPAREN .

    OPENPAREN       reduce using rule 144 (openP -> OPENPAREN .)
    CTEINT          reduce using rule 144 (openP -> OPENPAREN .)
    CTEFLOAT        reduce using rule 144 (openP -> OPENPAREN .)
    CTESTRING       reduce using rule 144 (openP -> OPENPAREN .)
    ID              reduce using rule 144 (openP -> OPENPAREN .)


state 113

    (75) cte_int -> CTEINT .

    MULTIPLICATION  reduce using rule 75 (cte_int -> CTEINT .)
    DIVISION        reduce using rule 75 (cte_int -> CTEINT .)
    ADDITION        reduce using rule 75 (cte_int -> CTEINT .)
    SUBSTRACTION    reduce using rule 75 (cte_int -> CTEINT .)
    SEMICOLON       reduce using rule 75 (cte_int -> CTEINT .)
    GREATER         reduce using rule 75 (cte_int -> CTEINT .)
    LESS            reduce using rule 75 (cte_int -> CTEINT .)
    NOTEQUAL        reduce using rule 75 (cte_int -> CTEINT .)
    ISEQUAL         reduce using rule 75 (cte_int -> CTEINT .)
    CLOSEPAREN      reduce using rule 75 (cte_int -> CTEINT .)
    CLOSEBRACKET    reduce using rule 75 (cte_int -> CTEINT .)
    COMMA           reduce using rule 75 (cte_int -> CTEINT .)


state 114

    (76) cte_float -> CTEFLOAT .

    MULTIPLICATION  reduce using rule 76 (cte_float -> CTEFLOAT .)
    DIVISION        reduce using rule 76 (cte_float -> CTEFLOAT .)
    ADDITION        reduce using rule 76 (cte_float -> CTEFLOAT .)
    SUBSTRACTION    reduce using rule 76 (cte_float -> CTEFLOAT .)
    SEMICOLON       reduce using rule 76 (cte_float -> CTEFLOAT .)
    GREATER         reduce using rule 76 (cte_float -> CTEFLOAT .)
    LESS            reduce using rule 76 (cte_float -> CTEFLOAT .)
    NOTEQUAL        reduce using rule 76 (cte_float -> CTEFLOAT .)
    ISEQUAL         reduce using rule 76 (cte_float -> CTEFLOAT .)
    CLOSEPAREN      reduce using rule 76 (cte_float -> CTEFLOAT .)
    CLOSEBRACKET    reduce using rule 76 (cte_float -> CTEFLOAT .)
    COMMA           reduce using rule 76 (cte_float -> CTEFLOAT .)


state 115

    (77) cte_string -> CTESTRING .

    MULTIPLICATION  reduce using rule 77 (cte_string -> CTESTRING .)
    DIVISION        reduce using rule 77 (cte_string -> CTESTRING .)
    ADDITION        reduce using rule 77 (cte_string -> CTESTRING .)
    SUBSTRACTION    reduce using rule 77 (cte_string -> CTESTRING .)
    SEMICOLON       reduce using rule 77 (cte_string -> CTESTRING .)
    GREATER         reduce using rule 77 (cte_string -> CTESTRING .)
    LESS            reduce using rule 77 (cte_string -> CTESTRING .)
    NOTEQUAL        reduce using rule 77 (cte_string -> CTESTRING .)
    ISEQUAL         reduce using rule 77 (cte_string -> CTESTRING .)
    CLOSEPAREN      reduce using rule 77 (cte_string -> CTESTRING .)
    CLOSEBRACKET    reduce using rule 77 (cte_string -> CTESTRING .)
    COMMA           reduce using rule 77 (cte_string -> CTESTRING .)


state 116

    (14) vars1 -> OPENBRACKET CTEINT CLOSEBRACKET . vars3
    (16) vars3 -> . OPENBRACKET CTEINT CLOSEBRACKET
    (17) vars3 -> . empty
    (152) empty -> .

    OPENBRACKET     shift and go to state 180
    SEMICOLON       reduce using rule 152 (empty -> .)
    EQUALS          reduce using rule 152 (empty -> .)

    vars3                          shift and go to state 181
    empty                          shift and go to state 182

state 117

    (5) star -> starI declara_vars star1 CLOSEBRACES .

    $end            reduce using rule 5 (star -> starI declara_vars star1 CLOSEBRACES .)


state 118

    (8) star1 -> stmt star1 .

    CLOSEBRACES     reduce using rule 8 (star1 -> stmt star1 .)


state 119

    (27) stmt -> funCall SEMICOLON .

    IF              reduce using rule 27 (stmt -> funCall SEMICOLON .)
    PRINT           reduce using rule 27 (stmt -> funCall SEMICOLON .)
    READ            reduce using rule 27 (stmt -> funCall SEMICOLON .)
    ID              reduce using rule 27 (stmt -> funCall SEMICOLON .)
    RETURN          reduce using rule 27 (stmt -> funCall SEMICOLON .)
    REPEAT          reduce using rule 27 (stmt -> funCall SEMICOLON .)
    CIRCLE          reduce using rule 27 (stmt -> funCall SEMICOLON .)
    SQUARE          reduce using rule 27 (stmt -> funCall SEMICOLON .)
    TRIANGLE        reduce using rule 27 (stmt -> funCall SEMICOLON .)
    RECTANGLE       reduce using rule 27 (stmt -> funCall SEMICOLON .)
    HIDE_STAR       reduce using rule 27 (stmt -> funCall SEMICOLON .)
    SHOW_STAR       reduce using rule 27 (stmt -> funCall SEMICOLON .)
    COLOR_STAR      reduce using rule 27 (stmt -> funCall SEMICOLON .)
    SIZE_STAR       reduce using rule 27 (stmt -> funCall SEMICOLON .)
    SETXY           reduce using rule 27 (stmt -> funCall SEMICOLON .)
    HAND_DOWN       reduce using rule 27 (stmt -> funCall SEMICOLON .)
    HAND_UP         reduce using rule 27 (stmt -> funCall SEMICOLON .)
    GO              reduce using rule 27 (stmt -> funCall SEMICOLON .)
    LEFT            reduce using rule 27 (stmt -> funCall SEMICOLON .)
    RIGHT           reduce using rule 27 (stmt -> funCall SEMICOLON .)
    BACK            reduce using rule 27 (stmt -> funCall SEMICOLON .)
    ARC             reduce using rule 27 (stmt -> funCall SEMICOLON .)
    WHILE           reduce using rule 27 (stmt -> funCall SEMICOLON .)
    FOR             reduce using rule 27 (stmt -> funCall SEMICOLON .)
    CLOSEBRACES     reduce using rule 27 (stmt -> funCall SEMICOLON .)


state 120

    (29) assignment -> id assignment1 . equals assignment3 SEMICOLON
    (66) equals -> . EQUALS

    EQUALS          shift and go to state 38

    equals                         shift and go to state 183

state 121

    (30) assignment1 -> assignment2 .
    (31) assignment1 -> assignment2 . assignment1
    (30) assignment1 -> . assignment2
    (31) assignment1 -> . assignment2 assignment1
    (32) assignment1 -> . empty
    (33) assignment2 -> . OPENBRACKET exp CLOSEBRACKET
    (152) empty -> .

  ! reduce/reduce conflict for EQUALS resolved using rule 30 (assignment1 -> assignment2 .)
    EQUALS          reduce using rule 30 (assignment1 -> assignment2 .)
    OPENBRACKET     shift and go to state 123

  ! EQUALS          [ reduce using rule 152 (empty -> .) ]

    assignment2                    shift and go to state 121
    assignment1                    shift and go to state 184
    empty                          shift and go to state 122

state 122

    (32) assignment1 -> empty .

    EQUALS          reduce using rule 32 (assignment1 -> empty .)


state 123

    (33) assignment2 -> OPENBRACKET . exp CLOSEBRACKET
    (140) exp -> . term
    (141) exp -> . term exp_o exp
    (146) term -> . factor term_o term
    (147) term -> . factor
    (150) factor -> . vcte
    (151) factor -> . openP expression closeP
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_string
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (144) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (67) id -> . ID
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 112
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    ID              shift and go to state 101

    exp                            shift and go to state 185
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    openP                          shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_string                     shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111

state 124

    (85) condition -> IF head_cond . body condition1
    (92) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 136

    body                           shift and go to state 186

state 125

    (91) head_cond -> OPENPAREN . expression close_condition
    (138) expression -> . exp loper exp
    (139) expression -> . exp
    (140) exp -> . term
    (141) exp -> . term exp_o exp
    (146) term -> . factor term_o term
    (147) term -> . factor
    (150) factor -> . vcte
    (151) factor -> . openP expression closeP
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_string
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (144) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (67) id -> . ID
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 112
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    ID              shift and go to state 101

    expression                     shift and go to state 187
    exp                            shift and go to state 176
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    openP                          shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_string                     shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111

state 126

    (61) print -> PRINT OPENPAREN . expression CLOSEPAREN SEMICOLON
    (138) expression -> . exp loper exp
    (139) expression -> . exp
    (140) exp -> . term
    (141) exp -> . term exp_o exp
    (146) term -> . factor term_o term
    (147) term -> . factor
    (150) factor -> . vcte
    (151) factor -> . openP expression closeP
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_string
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (144) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (67) id -> . ID
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 112
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    ID              shift and go to state 101

    expression                     shift and go to state 188
    exp                            shift and go to state 176
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    openP                          shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_string                     shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111

state 127

    (62) read -> READ OPENPAREN . id read1 CLOSEPAREN SEMICOLON
    (67) id -> . ID

    ID              shift and go to state 190

    id                             shift and go to state 189

state 128

    (125) graphr -> repeat rep . OPENBRACES graphstmt graphr1 CLOSEBRACES

    OPENBRACES      shift and go to state 191


state 129

    (128) rep -> OPENPAREN . exp CLOSEPAREN
    (140) exp -> . term
    (141) exp -> . term exp_o exp
    (146) term -> . factor term_o term
    (147) term -> . factor
    (150) factor -> . vcte
    (151) factor -> . openP expression closeP
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_string
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (144) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (67) id -> . ID
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 112
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    ID              shift and go to state 101

    exp                            shift and go to state 192
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    openP                          shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_string                     shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111

state 130

    (68) funCall -> ID iniciaFunCall . funCall2 terminaFunCall
    (71) funCall2 -> . exp funCall3
    (72) funCall2 -> . empty
    (140) exp -> . term
    (141) exp -> . term exp_o exp
    (152) empty -> .
    (146) term -> . factor term_o term
    (147) term -> . factor
    (150) factor -> . vcte
    (151) factor -> . openP expression closeP
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_string
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (144) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (67) id -> . ID
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    CLOSEPAREN      reduce using rule 152 (empty -> .)
    OPENPAREN       shift and go to state 112
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    ID              shift and go to state 101

    funCall2                       shift and go to state 193
    exp                            shift and go to state 194
    empty                          shift and go to state 195
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    openP                          shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_string                     shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111

state 131

    (69) iniciaFunCall -> OPENPAREN .

    OPENPAREN       reduce using rule 69 (iniciaFunCall -> OPENPAREN .)
    CTEINT          reduce using rule 69 (iniciaFunCall -> OPENPAREN .)
    CTEFLOAT        reduce using rule 69 (iniciaFunCall -> OPENPAREN .)
    CTESTRING       reduce using rule 69 (iniciaFunCall -> OPENPAREN .)
    ID              reduce using rule 69 (iniciaFunCall -> OPENPAREN .)
    CLOSEPAREN      reduce using rule 69 (iniciaFunCall -> OPENPAREN .)


state 132

    (78) return -> RETURN return1 . SEMICOLON

    SEMICOLON       shift and go to state 196


state 133

    (79) return1 -> vcte .
    (150) factor -> vcte .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 79 (return1 -> vcte .)
    SEMICOLON       reduce using rule 79 (return1 -> vcte .)
    MULTIPLICATION  reduce using rule 150 (factor -> vcte .)
    DIVISION        reduce using rule 150 (factor -> vcte .)
    ADDITION        reduce using rule 150 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 150 (factor -> vcte .)

  ! SEMICOLON       [ reduce using rule 150 (factor -> vcte .) ]


state 134

    (80) return1 -> exp .

    SEMICOLON       reduce using rule 80 (return1 -> exp .)


state 135

    (101) while -> while1 body .

    IF              reduce using rule 101 (while -> while1 body .)
    PRINT           reduce using rule 101 (while -> while1 body .)
    READ            reduce using rule 101 (while -> while1 body .)
    ID              reduce using rule 101 (while -> while1 body .)
    RETURN          reduce using rule 101 (while -> while1 body .)
    REPEAT          reduce using rule 101 (while -> while1 body .)
    CIRCLE          reduce using rule 101 (while -> while1 body .)
    SQUARE          reduce using rule 101 (while -> while1 body .)
    TRIANGLE        reduce using rule 101 (while -> while1 body .)
    RECTANGLE       reduce using rule 101 (while -> while1 body .)
    HIDE_STAR       reduce using rule 101 (while -> while1 body .)
    SHOW_STAR       reduce using rule 101 (while -> while1 body .)
    COLOR_STAR      reduce using rule 101 (while -> while1 body .)
    SIZE_STAR       reduce using rule 101 (while -> while1 body .)
    SETXY           reduce using rule 101 (while -> while1 body .)
    HAND_DOWN       reduce using rule 101 (while -> while1 body .)
    HAND_UP         reduce using rule 101 (while -> while1 body .)
    GO              reduce using rule 101 (while -> while1 body .)
    LEFT            reduce using rule 101 (while -> while1 body .)
    RIGHT           reduce using rule 101 (while -> while1 body .)
    BACK            reduce using rule 101 (while -> while1 body .)
    ARC             reduce using rule 101 (while -> while1 body .)
    WHILE           reduce using rule 101 (while -> while1 body .)
    FOR             reduce using rule 101 (while -> while1 body .)
    CLOSEBRACES     reduce using rule 101 (while -> while1 body .)


state 136

    (92) body -> OPENBRACES . body1 CLOSEBRACES
    (94) body1 -> . stmt body1
    (95) body1 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . graphr
    (27) stmt -> . funCall SEMICOLON
    (28) stmt -> . return
    (152) empty -> .
    (29) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (85) condition -> . IF head_cond body condition1
    (61) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for
    (62) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (106) graphstmt -> . graphfig
    (107) graphstmt -> . graphview
    (108) graphstmt -> . graphmove
    (125) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (78) return -> . RETURN return1 SEMICOLON
    (67) id -> . ID
    (101) while -> . while1 body
    (96) for -> . for1 body
    (109) graphfig -> . graphfig1 SEMICOLON
    (110) graphfig -> . graphfig2 SEMICOLON
    (130) graphview -> . graphview0 SEMICOLON
    (131) graphview -> . graphview1 SEMICOLON
    (132) graphview -> . graphview2 SEMICOLON
    (115) graphmove -> . graphmove0 SEMICOLON
    (116) graphmove -> . graphmove1 SEMICOLON
    (117) graphmove -> . graphmove2 SEMICOLON
    (129) repeat -> . REPEAT
    (102) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (97) for1 -> . forInit OPENPAREN ID for2
    (111) graphfig1 -> . CIRCLE unaExp
    (112) graphfig1 -> . SQUARE unaExp
    (113) graphfig2 -> . TRIANGLE dosExp
    (114) graphfig2 -> . RECTANGLE dosExp
    (133) graphview0 -> . HIDE_STAR
    (134) graphview0 -> . SHOW_STAR
    (135) graphview1 -> . COLOR_STAR unaExp
    (136) graphview1 -> . SIZE_STAR unaExp
    (137) graphview2 -> . SETXY dosExp
    (118) graphmove0 -> . HAND_DOWN
    (119) graphmove0 -> . HAND_UP
    (120) graphmove1 -> . GO unaExp
    (121) graphmove1 -> . LEFT unaExp
    (122) graphmove1 -> . RIGHT unaExp
    (123) graphmove1 -> . BACK unaExp
    (124) graphmove2 -> . ARC dosExp
    (103) while_w -> . WHILE
    (100) forInit -> . FOR

    CLOSEBRACES     reduce using rule 152 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    ID              shift and go to state 62
    RETURN          shift and go to state 63
    REPEAT          shift and go to state 74
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92
    WHILE           shift and go to state 93
    FOR             shift and go to state 94

    body1                          shift and go to state 197
    stmt                           shift and go to state 198
    empty                          shift and go to state 199
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    graphr                         shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    repeat                         shift and go to state 61
    while1                         shift and go to state 64
    for1                           shift and go to state 65
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73
    while_w                        shift and go to state 75
    forInit                        shift and go to state 76

state 137

    (96) for -> for1 body .

    IF              reduce using rule 96 (for -> for1 body .)
    PRINT           reduce using rule 96 (for -> for1 body .)
    READ            reduce using rule 96 (for -> for1 body .)
    ID              reduce using rule 96 (for -> for1 body .)
    RETURN          reduce using rule 96 (for -> for1 body .)
    REPEAT          reduce using rule 96 (for -> for1 body .)
    CIRCLE          reduce using rule 96 (for -> for1 body .)
    SQUARE          reduce using rule 96 (for -> for1 body .)
    TRIANGLE        reduce using rule 96 (for -> for1 body .)
    RECTANGLE       reduce using rule 96 (for -> for1 body .)
    HIDE_STAR       reduce using rule 96 (for -> for1 body .)
    SHOW_STAR       reduce using rule 96 (for -> for1 body .)
    COLOR_STAR      reduce using rule 96 (for -> for1 body .)
    SIZE_STAR       reduce using rule 96 (for -> for1 body .)
    SETXY           reduce using rule 96 (for -> for1 body .)
    HAND_DOWN       reduce using rule 96 (for -> for1 body .)
    HAND_UP         reduce using rule 96 (for -> for1 body .)
    GO              reduce using rule 96 (for -> for1 body .)
    LEFT            reduce using rule 96 (for -> for1 body .)
    RIGHT           reduce using rule 96 (for -> for1 body .)
    BACK            reduce using rule 96 (for -> for1 body .)
    ARC             reduce using rule 96 (for -> for1 body .)
    WHILE           reduce using rule 96 (for -> for1 body .)
    FOR             reduce using rule 96 (for -> for1 body .)
    CLOSEBRACES     reduce using rule 96 (for -> for1 body .)


state 138

    (109) graphfig -> graphfig1 SEMICOLON .

    IF              reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    PRINT           reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    READ            reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    ID              reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    RETURN          reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    REPEAT          reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    CIRCLE          reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    SQUARE          reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    TRIANGLE        reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    RECTANGLE       reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    HIDE_STAR       reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    SHOW_STAR       reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    COLOR_STAR      reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    SIZE_STAR       reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    SETXY           reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    HAND_DOWN       reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    HAND_UP         reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    GO              reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    LEFT            reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    RIGHT           reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    BACK            reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    ARC             reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    WHILE           reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    FOR             reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)


state 139

    (110) graphfig -> graphfig2 SEMICOLON .

    IF              reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    PRINT           reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    READ            reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    ID              reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    RETURN          reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    REPEAT          reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    CIRCLE          reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    SQUARE          reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    TRIANGLE        reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    RECTANGLE       reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    HIDE_STAR       reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    SHOW_STAR       reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    COLOR_STAR      reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    SIZE_STAR       reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    SETXY           reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    HAND_DOWN       reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    HAND_UP         reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    GO              reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    LEFT            reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    RIGHT           reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    BACK            reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    ARC             reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    WHILE           reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    FOR             reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)


state 140

    (130) graphview -> graphview0 SEMICOLON .

    IF              reduce using rule 130 (graphview -> graphview0 SEMICOLON .)
    PRINT           reduce using rule 130 (graphview -> graphview0 SEMICOLON .)
    READ            reduce using rule 130 (graphview -> graphview0 SEMICOLON .)
    ID              reduce using rule 130 (graphview -> graphview0 SEMICOLON .)
    RETURN          reduce using rule 130 (graphview -> graphview0 SEMICOLON .)
    REPEAT          reduce using rule 130 (graphview -> graphview0 SEMICOLON .)
    CIRCLE          reduce using rule 130 (graphview -> graphview0 SEMICOLON .)
    SQUARE          reduce using rule 130 (graphview -> graphview0 SEMICOLON .)
    TRIANGLE        reduce using rule 130 (graphview -> graphview0 SEMICOLON .)
    RECTANGLE       reduce using rule 130 (graphview -> graphview0 SEMICOLON .)
    HIDE_STAR       reduce using rule 130 (graphview -> graphview0 SEMICOLON .)
    SHOW_STAR       reduce using rule 130 (graphview -> graphview0 SEMICOLON .)
    COLOR_STAR      reduce using rule 130 (graphview -> graphview0 SEMICOLON .)
    SIZE_STAR       reduce using rule 130 (graphview -> graphview0 SEMICOLON .)
    SETXY           reduce using rule 130 (graphview -> graphview0 SEMICOLON .)
    HAND_DOWN       reduce using rule 130 (graphview -> graphview0 SEMICOLON .)
    HAND_UP         reduce using rule 130 (graphview -> graphview0 SEMICOLON .)
    GO              reduce using rule 130 (graphview -> graphview0 SEMICOLON .)
    LEFT            reduce using rule 130 (graphview -> graphview0 SEMICOLON .)
    RIGHT           reduce using rule 130 (graphview -> graphview0 SEMICOLON .)
    BACK            reduce using rule 130 (graphview -> graphview0 SEMICOLON .)
    ARC             reduce using rule 130 (graphview -> graphview0 SEMICOLON .)
    WHILE           reduce using rule 130 (graphview -> graphview0 SEMICOLON .)
    FOR             reduce using rule 130 (graphview -> graphview0 SEMICOLON .)
    CLOSEBRACES     reduce using rule 130 (graphview -> graphview0 SEMICOLON .)


state 141

    (131) graphview -> graphview1 SEMICOLON .

    IF              reduce using rule 131 (graphview -> graphview1 SEMICOLON .)
    PRINT           reduce using rule 131 (graphview -> graphview1 SEMICOLON .)
    READ            reduce using rule 131 (graphview -> graphview1 SEMICOLON .)
    ID              reduce using rule 131 (graphview -> graphview1 SEMICOLON .)
    RETURN          reduce using rule 131 (graphview -> graphview1 SEMICOLON .)
    REPEAT          reduce using rule 131 (graphview -> graphview1 SEMICOLON .)
    CIRCLE          reduce using rule 131 (graphview -> graphview1 SEMICOLON .)
    SQUARE          reduce using rule 131 (graphview -> graphview1 SEMICOLON .)
    TRIANGLE        reduce using rule 131 (graphview -> graphview1 SEMICOLON .)
    RECTANGLE       reduce using rule 131 (graphview -> graphview1 SEMICOLON .)
    HIDE_STAR       reduce using rule 131 (graphview -> graphview1 SEMICOLON .)
    SHOW_STAR       reduce using rule 131 (graphview -> graphview1 SEMICOLON .)
    COLOR_STAR      reduce using rule 131 (graphview -> graphview1 SEMICOLON .)
    SIZE_STAR       reduce using rule 131 (graphview -> graphview1 SEMICOLON .)
    SETXY           reduce using rule 131 (graphview -> graphview1 SEMICOLON .)
    HAND_DOWN       reduce using rule 131 (graphview -> graphview1 SEMICOLON .)
    HAND_UP         reduce using rule 131 (graphview -> graphview1 SEMICOLON .)
    GO              reduce using rule 131 (graphview -> graphview1 SEMICOLON .)
    LEFT            reduce using rule 131 (graphview -> graphview1 SEMICOLON .)
    RIGHT           reduce using rule 131 (graphview -> graphview1 SEMICOLON .)
    BACK            reduce using rule 131 (graphview -> graphview1 SEMICOLON .)
    ARC             reduce using rule 131 (graphview -> graphview1 SEMICOLON .)
    WHILE           reduce using rule 131 (graphview -> graphview1 SEMICOLON .)
    FOR             reduce using rule 131 (graphview -> graphview1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 131 (graphview -> graphview1 SEMICOLON .)


state 142

    (132) graphview -> graphview2 SEMICOLON .

    IF              reduce using rule 132 (graphview -> graphview2 SEMICOLON .)
    PRINT           reduce using rule 132 (graphview -> graphview2 SEMICOLON .)
    READ            reduce using rule 132 (graphview -> graphview2 SEMICOLON .)
    ID              reduce using rule 132 (graphview -> graphview2 SEMICOLON .)
    RETURN          reduce using rule 132 (graphview -> graphview2 SEMICOLON .)
    REPEAT          reduce using rule 132 (graphview -> graphview2 SEMICOLON .)
    CIRCLE          reduce using rule 132 (graphview -> graphview2 SEMICOLON .)
    SQUARE          reduce using rule 132 (graphview -> graphview2 SEMICOLON .)
    TRIANGLE        reduce using rule 132 (graphview -> graphview2 SEMICOLON .)
    RECTANGLE       reduce using rule 132 (graphview -> graphview2 SEMICOLON .)
    HIDE_STAR       reduce using rule 132 (graphview -> graphview2 SEMICOLON .)
    SHOW_STAR       reduce using rule 132 (graphview -> graphview2 SEMICOLON .)
    COLOR_STAR      reduce using rule 132 (graphview -> graphview2 SEMICOLON .)
    SIZE_STAR       reduce using rule 132 (graphview -> graphview2 SEMICOLON .)
    SETXY           reduce using rule 132 (graphview -> graphview2 SEMICOLON .)
    HAND_DOWN       reduce using rule 132 (graphview -> graphview2 SEMICOLON .)
    HAND_UP         reduce using rule 132 (graphview -> graphview2 SEMICOLON .)
    GO              reduce using rule 132 (graphview -> graphview2 SEMICOLON .)
    LEFT            reduce using rule 132 (graphview -> graphview2 SEMICOLON .)
    RIGHT           reduce using rule 132 (graphview -> graphview2 SEMICOLON .)
    BACK            reduce using rule 132 (graphview -> graphview2 SEMICOLON .)
    ARC             reduce using rule 132 (graphview -> graphview2 SEMICOLON .)
    WHILE           reduce using rule 132 (graphview -> graphview2 SEMICOLON .)
    FOR             reduce using rule 132 (graphview -> graphview2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 132 (graphview -> graphview2 SEMICOLON .)


state 143

    (115) graphmove -> graphmove0 SEMICOLON .

    IF              reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    PRINT           reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    READ            reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    ID              reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    RETURN          reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    REPEAT          reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    CIRCLE          reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    SQUARE          reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    TRIANGLE        reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    RECTANGLE       reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    HIDE_STAR       reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    SHOW_STAR       reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    COLOR_STAR      reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    SIZE_STAR       reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    SETXY           reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    HAND_DOWN       reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    HAND_UP         reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    GO              reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    LEFT            reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    RIGHT           reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    BACK            reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    ARC             reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    WHILE           reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    FOR             reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    CLOSEBRACES     reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)


state 144

    (116) graphmove -> graphmove1 SEMICOLON .

    IF              reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    PRINT           reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    READ            reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    ID              reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    RETURN          reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    REPEAT          reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    CIRCLE          reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    SQUARE          reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    TRIANGLE        reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    RECTANGLE       reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    HIDE_STAR       reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    SHOW_STAR       reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    COLOR_STAR      reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    SIZE_STAR       reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    SETXY           reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    HAND_DOWN       reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    HAND_UP         reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    GO              reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    LEFT            reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    RIGHT           reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    BACK            reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    ARC             reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    WHILE           reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    FOR             reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)


state 145

    (117) graphmove -> graphmove2 SEMICOLON .

    IF              reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    PRINT           reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    READ            reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    ID              reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    RETURN          reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    REPEAT          reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    CIRCLE          reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    SQUARE          reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    TRIANGLE        reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    RECTANGLE       reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    HIDE_STAR       reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    SHOW_STAR       reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    COLOR_STAR      reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    SIZE_STAR       reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    SETXY           reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    HAND_DOWN       reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    HAND_UP         reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    GO              reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    LEFT            reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    RIGHT           reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    BACK            reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    ARC             reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    WHILE           reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    FOR             reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)


state 146

    (102) while1 -> while_w OPENPAREN . expression CLOSEPAREN
    (138) expression -> . exp loper exp
    (139) expression -> . exp
    (140) exp -> . term
    (141) exp -> . term exp_o exp
    (146) term -> . factor term_o term
    (147) term -> . factor
    (150) factor -> . vcte
    (151) factor -> . openP expression closeP
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_string
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (144) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (67) id -> . ID
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 112
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    ID              shift and go to state 101

    expression                     shift and go to state 200
    exp                            shift and go to state 176
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    openP                          shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_string                     shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111

state 147

    (97) for1 -> forInit OPENPAREN . ID for2

    ID              shift and go to state 201


state 148

    (111) graphfig1 -> CIRCLE unaExp .

    SEMICOLON       reduce using rule 111 (graphfig1 -> CIRCLE unaExp .)


state 149

    (105) unaExp -> OPENPAREN . exp CLOSEPAREN
    (140) exp -> . term
    (141) exp -> . term exp_o exp
    (146) term -> . factor term_o term
    (147) term -> . factor
    (150) factor -> . vcte
    (151) factor -> . openP expression closeP
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_string
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (144) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (67) id -> . ID
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 112
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    ID              shift and go to state 101

    exp                            shift and go to state 202
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    openP                          shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_string                     shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111

state 150

    (112) graphfig1 -> SQUARE unaExp .

    SEMICOLON       reduce using rule 112 (graphfig1 -> SQUARE unaExp .)


state 151

    (113) graphfig2 -> TRIANGLE dosExp .

    SEMICOLON       reduce using rule 113 (graphfig2 -> TRIANGLE dosExp .)


state 152

    (104) dosExp -> OPENPAREN . exp COMMA exp CLOSEPAREN
    (140) exp -> . term
    (141) exp -> . term exp_o exp
    (146) term -> . factor term_o term
    (147) term -> . factor
    (150) factor -> . vcte
    (151) factor -> . openP expression closeP
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_string
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (144) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (67) id -> . ID
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 112
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    ID              shift and go to state 101

    exp                            shift and go to state 203
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    openP                          shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_string                     shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111

state 153

    (114) graphfig2 -> RECTANGLE dosExp .

    SEMICOLON       reduce using rule 114 (graphfig2 -> RECTANGLE dosExp .)


state 154

    (135) graphview1 -> COLOR_STAR unaExp .

    SEMICOLON       reduce using rule 135 (graphview1 -> COLOR_STAR unaExp .)


state 155

    (136) graphview1 -> SIZE_STAR unaExp .

    SEMICOLON       reduce using rule 136 (graphview1 -> SIZE_STAR unaExp .)


state 156

    (137) graphview2 -> SETXY dosExp .

    SEMICOLON       reduce using rule 137 (graphview2 -> SETXY dosExp .)


state 157

    (120) graphmove1 -> GO unaExp .

    SEMICOLON       reduce using rule 120 (graphmove1 -> GO unaExp .)


state 158

    (121) graphmove1 -> LEFT unaExp .

    SEMICOLON       reduce using rule 121 (graphmove1 -> LEFT unaExp .)


state 159

    (122) graphmove1 -> RIGHT unaExp .

    SEMICOLON       reduce using rule 122 (graphmove1 -> RIGHT unaExp .)


state 160

    (123) graphmove1 -> BACK unaExp .

    SEMICOLON       reduce using rule 123 (graphmove1 -> BACK unaExp .)


state 161

    (124) graphmove2 -> ARC dosExp .

    SEMICOLON       reduce using rule 124 (graphmove2 -> ARC dosExp .)


state 162

    (47) function -> FUN functionI function2 inicia_fun declara_vars . function4 termina_fun
    (53) function4 -> . stmt function4
    (54) function4 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . graphr
    (27) stmt -> . funCall SEMICOLON
    (28) stmt -> . return
    (152) empty -> .
    (29) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (85) condition -> . IF head_cond body condition1
    (61) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for
    (62) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (106) graphstmt -> . graphfig
    (107) graphstmt -> . graphview
    (108) graphstmt -> . graphmove
    (125) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (78) return -> . RETURN return1 SEMICOLON
    (67) id -> . ID
    (101) while -> . while1 body
    (96) for -> . for1 body
    (109) graphfig -> . graphfig1 SEMICOLON
    (110) graphfig -> . graphfig2 SEMICOLON
    (130) graphview -> . graphview0 SEMICOLON
    (131) graphview -> . graphview1 SEMICOLON
    (132) graphview -> . graphview2 SEMICOLON
    (115) graphmove -> . graphmove0 SEMICOLON
    (116) graphmove -> . graphmove1 SEMICOLON
    (117) graphmove -> . graphmove2 SEMICOLON
    (129) repeat -> . REPEAT
    (102) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (97) for1 -> . forInit OPENPAREN ID for2
    (111) graphfig1 -> . CIRCLE unaExp
    (112) graphfig1 -> . SQUARE unaExp
    (113) graphfig2 -> . TRIANGLE dosExp
    (114) graphfig2 -> . RECTANGLE dosExp
    (133) graphview0 -> . HIDE_STAR
    (134) graphview0 -> . SHOW_STAR
    (135) graphview1 -> . COLOR_STAR unaExp
    (136) graphview1 -> . SIZE_STAR unaExp
    (137) graphview2 -> . SETXY dosExp
    (118) graphmove0 -> . HAND_DOWN
    (119) graphmove0 -> . HAND_UP
    (120) graphmove1 -> . GO unaExp
    (121) graphmove1 -> . LEFT unaExp
    (122) graphmove1 -> . RIGHT unaExp
    (123) graphmove1 -> . BACK unaExp
    (124) graphmove2 -> . ARC dosExp
    (103) while_w -> . WHILE
    (100) forInit -> . FOR

    CLOSEBRACES     reduce using rule 152 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    ID              shift and go to state 62
    RETURN          shift and go to state 63
    REPEAT          shift and go to state 74
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92
    WHILE           shift and go to state 93
    FOR             shift and go to state 94

    function4                      shift and go to state 204
    stmt                           shift and go to state 205
    empty                          shift and go to state 206
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    graphr                         shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    repeat                         shift and go to state 61
    while1                         shift and go to state 64
    for1                           shift and go to state 65
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73
    while_w                        shift and go to state 75
    forInit                        shift and go to state 76

state 163

    (50) function2 -> OPENPAREN function3 CLOSEPAREN .

    OPENBRACES      reduce using rule 50 (function2 -> OPENPAREN function3 CLOSEPAREN .)


state 164

    (51) function3 -> funParam function5 .

    CLOSEPAREN      reduce using rule 51 (function3 -> funParam function5 .)


state 165

    (55) function5 -> COMMA . funParam function5
    (57) funParam -> . type ID
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . STRING

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    funParam                       shift and go to state 207
    type                           shift and go to state 100

state 166

    (56) function5 -> empty .

    CLOSEPAREN      reduce using rule 56 (function5 -> empty .)


state 167

    (57) funParam -> type ID .

    COMMA           reduce using rule 57 (funParam -> type ID .)
    CLOSEPAREN      reduce using rule 57 (funParam -> type ID .)


state 168

    (12) vars -> type ID vars1 equals exp SEMICOLON .

    INT             reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    FLOAT           reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    STRING          reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    FUN             reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    MULTIPLICATION  reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    IF              reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    PRINT           reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    READ            reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    ID              reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    RETURN          reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    REPEAT          reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    CIRCLE          reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    SQUARE          reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    TRIANGLE        reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    RECTANGLE       reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    HIDE_STAR       reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    SHOW_STAR       reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    COLOR_STAR      reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    SIZE_STAR       reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    SETXY           reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    HAND_DOWN       reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    HAND_UP         reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    GO              reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    LEFT            reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    RIGHT           reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    BACK            reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    ARC             reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    WHILE           reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    FOR             reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    CLOSEBRACES     reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)


state 169

    (141) exp -> term exp_o . exp
    (140) exp -> . term
    (141) exp -> . term exp_o exp
    (146) term -> . factor term_o term
    (147) term -> . factor
    (150) factor -> . vcte
    (151) factor -> . openP expression closeP
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_string
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (144) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (67) id -> . ID
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 112
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    ID              shift and go to state 101

    term                           shift and go to state 103
    exp                            shift and go to state 208
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    openP                          shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_string                     shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111

state 170

    (142) exp_o -> ADDITION .

    OPENPAREN       reduce using rule 142 (exp_o -> ADDITION .)
    CTEINT          reduce using rule 142 (exp_o -> ADDITION .)
    CTEFLOAT        reduce using rule 142 (exp_o -> ADDITION .)
    CTESTRING       reduce using rule 142 (exp_o -> ADDITION .)
    ID              reduce using rule 142 (exp_o -> ADDITION .)


state 171

    (143) exp_o -> SUBSTRACTION .

    OPENPAREN       reduce using rule 143 (exp_o -> SUBSTRACTION .)
    CTEINT          reduce using rule 143 (exp_o -> SUBSTRACTION .)
    CTEFLOAT        reduce using rule 143 (exp_o -> SUBSTRACTION .)
    CTESTRING       reduce using rule 143 (exp_o -> SUBSTRACTION .)
    ID              reduce using rule 143 (exp_o -> SUBSTRACTION .)


state 172

    (146) term -> factor term_o . term
    (146) term -> . factor term_o term
    (147) term -> . factor
    (150) factor -> . vcte
    (151) factor -> . openP expression closeP
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_string
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (144) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (67) id -> . ID
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 112
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    ID              shift and go to state 101

    factor                         shift and go to state 104
    term                           shift and go to state 209
    vcte                           shift and go to state 105
    openP                          shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_string                     shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111

state 173

    (148) term_o -> MULTIPLICATION .

    OPENPAREN       reduce using rule 148 (term_o -> MULTIPLICATION .)
    CTEINT          reduce using rule 148 (term_o -> MULTIPLICATION .)
    CTEFLOAT        reduce using rule 148 (term_o -> MULTIPLICATION .)
    CTESTRING       reduce using rule 148 (term_o -> MULTIPLICATION .)
    ID              reduce using rule 148 (term_o -> MULTIPLICATION .)


state 174

    (149) term_o -> DIVISION .

    OPENPAREN       reduce using rule 149 (term_o -> DIVISION .)
    CTEINT          reduce using rule 149 (term_o -> DIVISION .)
    CTEFLOAT        reduce using rule 149 (term_o -> DIVISION .)
    CTESTRING       reduce using rule 149 (term_o -> DIVISION .)
    ID              reduce using rule 149 (term_o -> DIVISION .)


state 175

    (151) factor -> openP expression . closeP
    (145) closeP -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 211

    closeP                         shift and go to state 210

state 176

    (138) expression -> exp . loper exp
    (139) expression -> exp .
    (81) loper -> . GREATER
    (82) loper -> . LESS
    (83) loper -> . NOTEQUAL
    (84) loper -> . ISEQUAL

    CLOSEPAREN      reduce using rule 139 (expression -> exp .)
    GREATER         shift and go to state 213
    LESS            shift and go to state 214
    NOTEQUAL        shift and go to state 215
    ISEQUAL         shift and go to state 216

    loper                          shift and go to state 212

state 177

    (39) vcte -> id vcte1 .

    MULTIPLICATION  reduce using rule 39 (vcte -> id vcte1 .)
    DIVISION        reduce using rule 39 (vcte -> id vcte1 .)
    ADDITION        reduce using rule 39 (vcte -> id vcte1 .)
    SUBSTRACTION    reduce using rule 39 (vcte -> id vcte1 .)
    SEMICOLON       reduce using rule 39 (vcte -> id vcte1 .)
    GREATER         reduce using rule 39 (vcte -> id vcte1 .)
    LESS            reduce using rule 39 (vcte -> id vcte1 .)
    NOTEQUAL        reduce using rule 39 (vcte -> id vcte1 .)
    ISEQUAL         reduce using rule 39 (vcte -> id vcte1 .)
    CLOSEPAREN      reduce using rule 39 (vcte -> id vcte1 .)
    CLOSEBRACKET    reduce using rule 39 (vcte -> id vcte1 .)
    COMMA           reduce using rule 39 (vcte -> id vcte1 .)


state 178

    (41) vcte1 -> OPENBRACKET . exp CLOSEBRACKET vcte3
    (140) exp -> . term
    (141) exp -> . term exp_o exp
    (146) term -> . factor term_o term
    (147) term -> . factor
    (150) factor -> . vcte
    (151) factor -> . openP expression closeP
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_string
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (144) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (67) id -> . ID
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 112
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    ID              shift and go to state 101

    exp                            shift and go to state 217
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    openP                          shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_string                     shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111

state 179

    (42) vcte1 -> empty .

    MULTIPLICATION  reduce using rule 42 (vcte1 -> empty .)
    DIVISION        reduce using rule 42 (vcte1 -> empty .)
    ADDITION        reduce using rule 42 (vcte1 -> empty .)
    SUBSTRACTION    reduce using rule 42 (vcte1 -> empty .)
    SEMICOLON       reduce using rule 42 (vcte1 -> empty .)
    GREATER         reduce using rule 42 (vcte1 -> empty .)
    LESS            reduce using rule 42 (vcte1 -> empty .)
    NOTEQUAL        reduce using rule 42 (vcte1 -> empty .)
    ISEQUAL         reduce using rule 42 (vcte1 -> empty .)
    CLOSEPAREN      reduce using rule 42 (vcte1 -> empty .)
    CLOSEBRACKET    reduce using rule 42 (vcte1 -> empty .)
    COMMA           reduce using rule 42 (vcte1 -> empty .)


state 180

    (16) vars3 -> OPENBRACKET . CTEINT CLOSEBRACKET

    CTEINT          shift and go to state 218


state 181

    (14) vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .

    SEMICOLON       reduce using rule 14 (vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .)
    EQUALS          reduce using rule 14 (vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .)


state 182

    (17) vars3 -> empty .

    SEMICOLON       reduce using rule 17 (vars3 -> empty .)
    EQUALS          reduce using rule 17 (vars3 -> empty .)


state 183

    (29) assignment -> id assignment1 equals . assignment3 SEMICOLON
    (34) assignment3 -> . exp
    (35) assignment3 -> . read
    (140) exp -> . term
    (141) exp -> . term exp_o exp
    (62) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (146) term -> . factor term_o term
    (147) term -> . factor
    (150) factor -> . vcte
    (151) factor -> . openP expression closeP
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_string
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (144) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (67) id -> . ID
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    READ            shift and go to state 57
    OPENPAREN       shift and go to state 112
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    ID              shift and go to state 101

    id                             shift and go to state 110
    assignment3                    shift and go to state 219
    exp                            shift and go to state 220
    read                           shift and go to state 221
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    openP                          shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_string                     shift and go to state 109
    funCall                        shift and go to state 111

state 184

    (31) assignment1 -> assignment2 assignment1 .

    EQUALS          reduce using rule 31 (assignment1 -> assignment2 assignment1 .)


state 185

    (33) assignment2 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 222


state 186

    (85) condition -> IF head_cond body . condition1
    (86) condition1 -> . elseif head_cond body condition1
    (87) condition1 -> . else body
    (88) condition1 -> . empty
    (89) elseif -> . ELSEIF
    (90) else -> . ELSE
    (152) empty -> .

    ELSEIF          shift and go to state 227
    ELSE            shift and go to state 228
    IF              reduce using rule 152 (empty -> .)
    PRINT           reduce using rule 152 (empty -> .)
    READ            reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    RETURN          reduce using rule 152 (empty -> .)
    REPEAT          reduce using rule 152 (empty -> .)
    CIRCLE          reduce using rule 152 (empty -> .)
    SQUARE          reduce using rule 152 (empty -> .)
    TRIANGLE        reduce using rule 152 (empty -> .)
    RECTANGLE       reduce using rule 152 (empty -> .)
    HIDE_STAR       reduce using rule 152 (empty -> .)
    SHOW_STAR       reduce using rule 152 (empty -> .)
    COLOR_STAR      reduce using rule 152 (empty -> .)
    SIZE_STAR       reduce using rule 152 (empty -> .)
    SETXY           reduce using rule 152 (empty -> .)
    HAND_DOWN       reduce using rule 152 (empty -> .)
    HAND_UP         reduce using rule 152 (empty -> .)
    GO              reduce using rule 152 (empty -> .)
    LEFT            reduce using rule 152 (empty -> .)
    RIGHT           reduce using rule 152 (empty -> .)
    BACK            reduce using rule 152 (empty -> .)
    ARC             reduce using rule 152 (empty -> .)
    WHILE           reduce using rule 152 (empty -> .)
    FOR             reduce using rule 152 (empty -> .)
    CLOSEBRACES     reduce using rule 152 (empty -> .)

    condition1                     shift and go to state 223
    elseif                         shift and go to state 224
    else                           shift and go to state 225
    empty                          shift and go to state 226

state 187

    (91) head_cond -> OPENPAREN expression . close_condition
    (93) close_condition -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 230

    close_condition                shift and go to state 229

state 188

    (61) print -> PRINT OPENPAREN expression . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 231


state 189

    (62) read -> READ OPENPAREN id . read1 CLOSEPAREN SEMICOLON
    (63) read1 -> . OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (64) read1 -> . OPENBRACKET exp CLOSEBRACKET
    (65) read1 -> . empty
    (152) empty -> .

    OPENBRACKET     shift and go to state 233
    CLOSEPAREN      reduce using rule 152 (empty -> .)

    read1                          shift and go to state 232
    empty                          shift and go to state 234

state 190

    (67) id -> ID .

    OPENBRACKET     reduce using rule 67 (id -> ID .)
    CLOSEPAREN      reduce using rule 67 (id -> ID .)


state 191

    (125) graphr -> repeat rep OPENBRACES . graphstmt graphr1 CLOSEBRACES
    (106) graphstmt -> . graphfig
    (107) graphstmt -> . graphview
    (108) graphstmt -> . graphmove
    (109) graphfig -> . graphfig1 SEMICOLON
    (110) graphfig -> . graphfig2 SEMICOLON
    (130) graphview -> . graphview0 SEMICOLON
    (131) graphview -> . graphview1 SEMICOLON
    (132) graphview -> . graphview2 SEMICOLON
    (115) graphmove -> . graphmove0 SEMICOLON
    (116) graphmove -> . graphmove1 SEMICOLON
    (117) graphmove -> . graphmove2 SEMICOLON
    (111) graphfig1 -> . CIRCLE unaExp
    (112) graphfig1 -> . SQUARE unaExp
    (113) graphfig2 -> . TRIANGLE dosExp
    (114) graphfig2 -> . RECTANGLE dosExp
    (133) graphview0 -> . HIDE_STAR
    (134) graphview0 -> . SHOW_STAR
    (135) graphview1 -> . COLOR_STAR unaExp
    (136) graphview1 -> . SIZE_STAR unaExp
    (137) graphview2 -> . SETXY dosExp
    (118) graphmove0 -> . HAND_DOWN
    (119) graphmove0 -> . HAND_UP
    (120) graphmove1 -> . GO unaExp
    (121) graphmove1 -> . LEFT unaExp
    (122) graphmove1 -> . RIGHT unaExp
    (123) graphmove1 -> . BACK unaExp
    (124) graphmove2 -> . ARC dosExp

    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92

    graphstmt                      shift and go to state 235
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73

state 192

    (128) rep -> OPENPAREN exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 236


state 193

    (68) funCall -> ID iniciaFunCall funCall2 . terminaFunCall
    (70) terminaFunCall -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 238

    terminaFunCall                 shift and go to state 237

state 194

    (71) funCall2 -> exp . funCall3
    (73) funCall3 -> . COMMA funCall2
    (74) funCall3 -> . empty
    (152) empty -> .

    COMMA           shift and go to state 240
    CLOSEPAREN      reduce using rule 152 (empty -> .)

    funCall3                       shift and go to state 239
    empty                          shift and go to state 241

state 195

    (72) funCall2 -> empty .

    CLOSEPAREN      reduce using rule 72 (funCall2 -> empty .)


state 196

    (78) return -> RETURN return1 SEMICOLON .

    IF              reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    PRINT           reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    READ            reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    ID              reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    RETURN          reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    REPEAT          reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    CIRCLE          reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    SQUARE          reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    TRIANGLE        reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    RECTANGLE       reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    HIDE_STAR       reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    SHOW_STAR       reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    COLOR_STAR      reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    SIZE_STAR       reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    SETXY           reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    HAND_DOWN       reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    HAND_UP         reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    GO              reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    LEFT            reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    RIGHT           reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    BACK            reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    ARC             reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    WHILE           reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    FOR             reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 78 (return -> RETURN return1 SEMICOLON .)


state 197

    (92) body -> OPENBRACES body1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 242


state 198

    (94) body1 -> stmt . body1
    (94) body1 -> . stmt body1
    (95) body1 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . graphr
    (27) stmt -> . funCall SEMICOLON
    (28) stmt -> . return
    (152) empty -> .
    (29) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (85) condition -> . IF head_cond body condition1
    (61) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for
    (62) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (106) graphstmt -> . graphfig
    (107) graphstmt -> . graphview
    (108) graphstmt -> . graphmove
    (125) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (78) return -> . RETURN return1 SEMICOLON
    (67) id -> . ID
    (101) while -> . while1 body
    (96) for -> . for1 body
    (109) graphfig -> . graphfig1 SEMICOLON
    (110) graphfig -> . graphfig2 SEMICOLON
    (130) graphview -> . graphview0 SEMICOLON
    (131) graphview -> . graphview1 SEMICOLON
    (132) graphview -> . graphview2 SEMICOLON
    (115) graphmove -> . graphmove0 SEMICOLON
    (116) graphmove -> . graphmove1 SEMICOLON
    (117) graphmove -> . graphmove2 SEMICOLON
    (129) repeat -> . REPEAT
    (102) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (97) for1 -> . forInit OPENPAREN ID for2
    (111) graphfig1 -> . CIRCLE unaExp
    (112) graphfig1 -> . SQUARE unaExp
    (113) graphfig2 -> . TRIANGLE dosExp
    (114) graphfig2 -> . RECTANGLE dosExp
    (133) graphview0 -> . HIDE_STAR
    (134) graphview0 -> . SHOW_STAR
    (135) graphview1 -> . COLOR_STAR unaExp
    (136) graphview1 -> . SIZE_STAR unaExp
    (137) graphview2 -> . SETXY dosExp
    (118) graphmove0 -> . HAND_DOWN
    (119) graphmove0 -> . HAND_UP
    (120) graphmove1 -> . GO unaExp
    (121) graphmove1 -> . LEFT unaExp
    (122) graphmove1 -> . RIGHT unaExp
    (123) graphmove1 -> . BACK unaExp
    (124) graphmove2 -> . ARC dosExp
    (103) while_w -> . WHILE
    (100) forInit -> . FOR

    CLOSEBRACES     reduce using rule 152 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    ID              shift and go to state 62
    RETURN          shift and go to state 63
    REPEAT          shift and go to state 74
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92
    WHILE           shift and go to state 93
    FOR             shift and go to state 94

    stmt                           shift and go to state 198
    body1                          shift and go to state 243
    empty                          shift and go to state 199
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    graphr                         shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    repeat                         shift and go to state 61
    while1                         shift and go to state 64
    for1                           shift and go to state 65
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73
    while_w                        shift and go to state 75
    forInit                        shift and go to state 76

state 199

    (95) body1 -> empty .

    CLOSEBRACES     reduce using rule 95 (body1 -> empty .)


state 200

    (102) while1 -> while_w OPENPAREN expression . CLOSEPAREN

    CLOSEPAREN      shift and go to state 244


state 201

    (97) for1 -> forInit OPENPAREN ID . for2
    (98) for2 -> . TWODOTS exp for3

    TWODOTS         shift and go to state 246

    for2                           shift and go to state 245

state 202

    (105) unaExp -> OPENPAREN exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 247


state 203

    (104) dosExp -> OPENPAREN exp . COMMA exp CLOSEPAREN

    COMMA           shift and go to state 248


state 204

    (47) function -> FUN functionI function2 inicia_fun declara_vars function4 . termina_fun
    (49) termina_fun -> . CLOSEBRACES

    CLOSEBRACES     shift and go to state 250

    termina_fun                    shift and go to state 249

state 205

    (53) function4 -> stmt . function4
    (53) function4 -> . stmt function4
    (54) function4 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . graphr
    (27) stmt -> . funCall SEMICOLON
    (28) stmt -> . return
    (152) empty -> .
    (29) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (85) condition -> . IF head_cond body condition1
    (61) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for
    (62) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (106) graphstmt -> . graphfig
    (107) graphstmt -> . graphview
    (108) graphstmt -> . graphmove
    (125) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (78) return -> . RETURN return1 SEMICOLON
    (67) id -> . ID
    (101) while -> . while1 body
    (96) for -> . for1 body
    (109) graphfig -> . graphfig1 SEMICOLON
    (110) graphfig -> . graphfig2 SEMICOLON
    (130) graphview -> . graphview0 SEMICOLON
    (131) graphview -> . graphview1 SEMICOLON
    (132) graphview -> . graphview2 SEMICOLON
    (115) graphmove -> . graphmove0 SEMICOLON
    (116) graphmove -> . graphmove1 SEMICOLON
    (117) graphmove -> . graphmove2 SEMICOLON
    (129) repeat -> . REPEAT
    (102) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (97) for1 -> . forInit OPENPAREN ID for2
    (111) graphfig1 -> . CIRCLE unaExp
    (112) graphfig1 -> . SQUARE unaExp
    (113) graphfig2 -> . TRIANGLE dosExp
    (114) graphfig2 -> . RECTANGLE dosExp
    (133) graphview0 -> . HIDE_STAR
    (134) graphview0 -> . SHOW_STAR
    (135) graphview1 -> . COLOR_STAR unaExp
    (136) graphview1 -> . SIZE_STAR unaExp
    (137) graphview2 -> . SETXY dosExp
    (118) graphmove0 -> . HAND_DOWN
    (119) graphmove0 -> . HAND_UP
    (120) graphmove1 -> . GO unaExp
    (121) graphmove1 -> . LEFT unaExp
    (122) graphmove1 -> . RIGHT unaExp
    (123) graphmove1 -> . BACK unaExp
    (124) graphmove2 -> . ARC dosExp
    (103) while_w -> . WHILE
    (100) forInit -> . FOR

    CLOSEBRACES     reduce using rule 152 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    ID              shift and go to state 62
    RETURN          shift and go to state 63
    REPEAT          shift and go to state 74
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92
    WHILE           shift and go to state 93
    FOR             shift and go to state 94

    stmt                           shift and go to state 205
    function4                      shift and go to state 251
    empty                          shift and go to state 206
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    graphr                         shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    repeat                         shift and go to state 61
    while1                         shift and go to state 64
    for1                           shift and go to state 65
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73
    while_w                        shift and go to state 75
    forInit                        shift and go to state 76

state 206

    (54) function4 -> empty .

    CLOSEBRACES     reduce using rule 54 (function4 -> empty .)


state 207

    (55) function5 -> COMMA funParam . function5
    (55) function5 -> . COMMA funParam function5
    (56) function5 -> . empty
    (152) empty -> .

    COMMA           shift and go to state 165
    CLOSEPAREN      reduce using rule 152 (empty -> .)

    function5                      shift and go to state 252
    empty                          shift and go to state 166

state 208

    (141) exp -> term exp_o exp .

    SEMICOLON       reduce using rule 141 (exp -> term exp_o exp .)
    GREATER         reduce using rule 141 (exp -> term exp_o exp .)
    LESS            reduce using rule 141 (exp -> term exp_o exp .)
    NOTEQUAL        reduce using rule 141 (exp -> term exp_o exp .)
    ISEQUAL         reduce using rule 141 (exp -> term exp_o exp .)
    CLOSEPAREN      reduce using rule 141 (exp -> term exp_o exp .)
    CLOSEBRACKET    reduce using rule 141 (exp -> term exp_o exp .)
    COMMA           reduce using rule 141 (exp -> term exp_o exp .)


state 209

    (146) term -> factor term_o term .

    ADDITION        reduce using rule 146 (term -> factor term_o term .)
    SUBSTRACTION    reduce using rule 146 (term -> factor term_o term .)
    SEMICOLON       reduce using rule 146 (term -> factor term_o term .)
    GREATER         reduce using rule 146 (term -> factor term_o term .)
    LESS            reduce using rule 146 (term -> factor term_o term .)
    NOTEQUAL        reduce using rule 146 (term -> factor term_o term .)
    ISEQUAL         reduce using rule 146 (term -> factor term_o term .)
    CLOSEPAREN      reduce using rule 146 (term -> factor term_o term .)
    CLOSEBRACKET    reduce using rule 146 (term -> factor term_o term .)
    COMMA           reduce using rule 146 (term -> factor term_o term .)


state 210

    (151) factor -> openP expression closeP .

    MULTIPLICATION  reduce using rule 151 (factor -> openP expression closeP .)
    DIVISION        reduce using rule 151 (factor -> openP expression closeP .)
    ADDITION        reduce using rule 151 (factor -> openP expression closeP .)
    SUBSTRACTION    reduce using rule 151 (factor -> openP expression closeP .)
    SEMICOLON       reduce using rule 151 (factor -> openP expression closeP .)
    GREATER         reduce using rule 151 (factor -> openP expression closeP .)
    LESS            reduce using rule 151 (factor -> openP expression closeP .)
    NOTEQUAL        reduce using rule 151 (factor -> openP expression closeP .)
    ISEQUAL         reduce using rule 151 (factor -> openP expression closeP .)
    CLOSEPAREN      reduce using rule 151 (factor -> openP expression closeP .)
    CLOSEBRACKET    reduce using rule 151 (factor -> openP expression closeP .)
    COMMA           reduce using rule 151 (factor -> openP expression closeP .)


state 211

    (145) closeP -> CLOSEPAREN .

    MULTIPLICATION  reduce using rule 145 (closeP -> CLOSEPAREN .)
    DIVISION        reduce using rule 145 (closeP -> CLOSEPAREN .)
    ADDITION        reduce using rule 145 (closeP -> CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 145 (closeP -> CLOSEPAREN .)
    SEMICOLON       reduce using rule 145 (closeP -> CLOSEPAREN .)
    GREATER         reduce using rule 145 (closeP -> CLOSEPAREN .)
    LESS            reduce using rule 145 (closeP -> CLOSEPAREN .)
    NOTEQUAL        reduce using rule 145 (closeP -> CLOSEPAREN .)
    ISEQUAL         reduce using rule 145 (closeP -> CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 145 (closeP -> CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 145 (closeP -> CLOSEPAREN .)
    COMMA           reduce using rule 145 (closeP -> CLOSEPAREN .)


state 212

    (138) expression -> exp loper . exp
    (140) exp -> . term
    (141) exp -> . term exp_o exp
    (146) term -> . factor term_o term
    (147) term -> . factor
    (150) factor -> . vcte
    (151) factor -> . openP expression closeP
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_string
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (144) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (67) id -> . ID
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 112
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    ID              shift and go to state 101

    exp                            shift and go to state 253
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    openP                          shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_string                     shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111

state 213

    (81) loper -> GREATER .

    OPENPAREN       reduce using rule 81 (loper -> GREATER .)
    CTEINT          reduce using rule 81 (loper -> GREATER .)
    CTEFLOAT        reduce using rule 81 (loper -> GREATER .)
    CTESTRING       reduce using rule 81 (loper -> GREATER .)
    ID              reduce using rule 81 (loper -> GREATER .)


state 214

    (82) loper -> LESS .

    OPENPAREN       reduce using rule 82 (loper -> LESS .)
    CTEINT          reduce using rule 82 (loper -> LESS .)
    CTEFLOAT        reduce using rule 82 (loper -> LESS .)
    CTESTRING       reduce using rule 82 (loper -> LESS .)
    ID              reduce using rule 82 (loper -> LESS .)


state 215

    (83) loper -> NOTEQUAL .

    OPENPAREN       reduce using rule 83 (loper -> NOTEQUAL .)
    CTEINT          reduce using rule 83 (loper -> NOTEQUAL .)
    CTEFLOAT        reduce using rule 83 (loper -> NOTEQUAL .)
    CTESTRING       reduce using rule 83 (loper -> NOTEQUAL .)
    ID              reduce using rule 83 (loper -> NOTEQUAL .)


state 216

    (84) loper -> ISEQUAL .

    OPENPAREN       reduce using rule 84 (loper -> ISEQUAL .)
    CTEINT          reduce using rule 84 (loper -> ISEQUAL .)
    CTEFLOAT        reduce using rule 84 (loper -> ISEQUAL .)
    CTESTRING       reduce using rule 84 (loper -> ISEQUAL .)
    ID              reduce using rule 84 (loper -> ISEQUAL .)


state 217

    (41) vcte1 -> OPENBRACKET exp . CLOSEBRACKET vcte3

    CLOSEBRACKET    shift and go to state 254


state 218

    (16) vars3 -> OPENBRACKET CTEINT . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 255


state 219

    (29) assignment -> id assignment1 equals assignment3 . SEMICOLON

    SEMICOLON       shift and go to state 256


state 220

    (34) assignment3 -> exp .

    SEMICOLON       reduce using rule 34 (assignment3 -> exp .)


state 221

    (35) assignment3 -> read .

    SEMICOLON       reduce using rule 35 (assignment3 -> read .)


state 222

    (33) assignment2 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     reduce using rule 33 (assignment2 -> OPENBRACKET exp CLOSEBRACKET .)
    EQUALS          reduce using rule 33 (assignment2 -> OPENBRACKET exp CLOSEBRACKET .)


state 223

    (85) condition -> IF head_cond body condition1 .

    IF              reduce using rule 85 (condition -> IF head_cond body condition1 .)
    PRINT           reduce using rule 85 (condition -> IF head_cond body condition1 .)
    READ            reduce using rule 85 (condition -> IF head_cond body condition1 .)
    ID              reduce using rule 85 (condition -> IF head_cond body condition1 .)
    RETURN          reduce using rule 85 (condition -> IF head_cond body condition1 .)
    REPEAT          reduce using rule 85 (condition -> IF head_cond body condition1 .)
    CIRCLE          reduce using rule 85 (condition -> IF head_cond body condition1 .)
    SQUARE          reduce using rule 85 (condition -> IF head_cond body condition1 .)
    TRIANGLE        reduce using rule 85 (condition -> IF head_cond body condition1 .)
    RECTANGLE       reduce using rule 85 (condition -> IF head_cond body condition1 .)
    HIDE_STAR       reduce using rule 85 (condition -> IF head_cond body condition1 .)
    SHOW_STAR       reduce using rule 85 (condition -> IF head_cond body condition1 .)
    COLOR_STAR      reduce using rule 85 (condition -> IF head_cond body condition1 .)
    SIZE_STAR       reduce using rule 85 (condition -> IF head_cond body condition1 .)
    SETXY           reduce using rule 85 (condition -> IF head_cond body condition1 .)
    HAND_DOWN       reduce using rule 85 (condition -> IF head_cond body condition1 .)
    HAND_UP         reduce using rule 85 (condition -> IF head_cond body condition1 .)
    GO              reduce using rule 85 (condition -> IF head_cond body condition1 .)
    LEFT            reduce using rule 85 (condition -> IF head_cond body condition1 .)
    RIGHT           reduce using rule 85 (condition -> IF head_cond body condition1 .)
    BACK            reduce using rule 85 (condition -> IF head_cond body condition1 .)
    ARC             reduce using rule 85 (condition -> IF head_cond body condition1 .)
    WHILE           reduce using rule 85 (condition -> IF head_cond body condition1 .)
    FOR             reduce using rule 85 (condition -> IF head_cond body condition1 .)
    CLOSEBRACES     reduce using rule 85 (condition -> IF head_cond body condition1 .)


state 224

    (86) condition1 -> elseif . head_cond body condition1
    (91) head_cond -> . OPENPAREN expression close_condition

    OPENPAREN       shift and go to state 125

    head_cond                      shift and go to state 257

state 225

    (87) condition1 -> else . body
    (92) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 136

    body                           shift and go to state 258

state 226

    (88) condition1 -> empty .

    IF              reduce using rule 88 (condition1 -> empty .)
    PRINT           reduce using rule 88 (condition1 -> empty .)
    READ            reduce using rule 88 (condition1 -> empty .)
    ID              reduce using rule 88 (condition1 -> empty .)
    RETURN          reduce using rule 88 (condition1 -> empty .)
    REPEAT          reduce using rule 88 (condition1 -> empty .)
    CIRCLE          reduce using rule 88 (condition1 -> empty .)
    SQUARE          reduce using rule 88 (condition1 -> empty .)
    TRIANGLE        reduce using rule 88 (condition1 -> empty .)
    RECTANGLE       reduce using rule 88 (condition1 -> empty .)
    HIDE_STAR       reduce using rule 88 (condition1 -> empty .)
    SHOW_STAR       reduce using rule 88 (condition1 -> empty .)
    COLOR_STAR      reduce using rule 88 (condition1 -> empty .)
    SIZE_STAR       reduce using rule 88 (condition1 -> empty .)
    SETXY           reduce using rule 88 (condition1 -> empty .)
    HAND_DOWN       reduce using rule 88 (condition1 -> empty .)
    HAND_UP         reduce using rule 88 (condition1 -> empty .)
    GO              reduce using rule 88 (condition1 -> empty .)
    LEFT            reduce using rule 88 (condition1 -> empty .)
    RIGHT           reduce using rule 88 (condition1 -> empty .)
    BACK            reduce using rule 88 (condition1 -> empty .)
    ARC             reduce using rule 88 (condition1 -> empty .)
    WHILE           reduce using rule 88 (condition1 -> empty .)
    FOR             reduce using rule 88 (condition1 -> empty .)
    CLOSEBRACES     reduce using rule 88 (condition1 -> empty .)


state 227

    (89) elseif -> ELSEIF .

    OPENPAREN       reduce using rule 89 (elseif -> ELSEIF .)


state 228

    (90) else -> ELSE .

    OPENBRACES      reduce using rule 90 (else -> ELSE .)


state 229

    (91) head_cond -> OPENPAREN expression close_condition .

    OPENBRACES      reduce using rule 91 (head_cond -> OPENPAREN expression close_condition .)


state 230

    (93) close_condition -> CLOSEPAREN .

    OPENBRACES      reduce using rule 93 (close_condition -> CLOSEPAREN .)


state 231

    (61) print -> PRINT OPENPAREN expression CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 259


state 232

    (62) read -> READ OPENPAREN id read1 . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 260


state 233

    (63) read1 -> OPENBRACKET . exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (64) read1 -> OPENBRACKET . exp CLOSEBRACKET
    (140) exp -> . term
    (141) exp -> . term exp_o exp
    (146) term -> . factor term_o term
    (147) term -> . factor
    (150) factor -> . vcte
    (151) factor -> . openP expression closeP
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_string
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (144) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (67) id -> . ID
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 112
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    ID              shift and go to state 101

    exp                            shift and go to state 261
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    openP                          shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_string                     shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111

state 234

    (65) read1 -> empty .

    CLOSEPAREN      reduce using rule 65 (read1 -> empty .)


state 235

    (125) graphr -> repeat rep OPENBRACES graphstmt . graphr1 CLOSEBRACES
    (126) graphr1 -> . graphstmt graphr1
    (127) graphr1 -> . empty
    (106) graphstmt -> . graphfig
    (107) graphstmt -> . graphview
    (108) graphstmt -> . graphmove
    (152) empty -> .
    (109) graphfig -> . graphfig1 SEMICOLON
    (110) graphfig -> . graphfig2 SEMICOLON
    (130) graphview -> . graphview0 SEMICOLON
    (131) graphview -> . graphview1 SEMICOLON
    (132) graphview -> . graphview2 SEMICOLON
    (115) graphmove -> . graphmove0 SEMICOLON
    (116) graphmove -> . graphmove1 SEMICOLON
    (117) graphmove -> . graphmove2 SEMICOLON
    (111) graphfig1 -> . CIRCLE unaExp
    (112) graphfig1 -> . SQUARE unaExp
    (113) graphfig2 -> . TRIANGLE dosExp
    (114) graphfig2 -> . RECTANGLE dosExp
    (133) graphview0 -> . HIDE_STAR
    (134) graphview0 -> . SHOW_STAR
    (135) graphview1 -> . COLOR_STAR unaExp
    (136) graphview1 -> . SIZE_STAR unaExp
    (137) graphview2 -> . SETXY dosExp
    (118) graphmove0 -> . HAND_DOWN
    (119) graphmove0 -> . HAND_UP
    (120) graphmove1 -> . GO unaExp
    (121) graphmove1 -> . LEFT unaExp
    (122) graphmove1 -> . RIGHT unaExp
    (123) graphmove1 -> . BACK unaExp
    (124) graphmove2 -> . ARC dosExp

    CLOSEBRACES     reduce using rule 152 (empty -> .)
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92

    graphstmt                      shift and go to state 262
    graphr1                        shift and go to state 263
    empty                          shift and go to state 264
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73

state 236

    (128) rep -> OPENPAREN exp CLOSEPAREN .

    OPENBRACES      reduce using rule 128 (rep -> OPENPAREN exp CLOSEPAREN .)


state 237

    (68) funCall -> ID iniciaFunCall funCall2 terminaFunCall .

    SEMICOLON       reduce using rule 68 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    MULTIPLICATION  reduce using rule 68 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    DIVISION        reduce using rule 68 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    ADDITION        reduce using rule 68 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    SUBSTRACTION    reduce using rule 68 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    GREATER         reduce using rule 68 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    LESS            reduce using rule 68 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    NOTEQUAL        reduce using rule 68 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    ISEQUAL         reduce using rule 68 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    CLOSEPAREN      reduce using rule 68 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    CLOSEBRACKET    reduce using rule 68 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    COMMA           reduce using rule 68 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)


state 238

    (70) terminaFunCall -> CLOSEPAREN .

    SEMICOLON       reduce using rule 70 (terminaFunCall -> CLOSEPAREN .)
    MULTIPLICATION  reduce using rule 70 (terminaFunCall -> CLOSEPAREN .)
    DIVISION        reduce using rule 70 (terminaFunCall -> CLOSEPAREN .)
    ADDITION        reduce using rule 70 (terminaFunCall -> CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 70 (terminaFunCall -> CLOSEPAREN .)
    GREATER         reduce using rule 70 (terminaFunCall -> CLOSEPAREN .)
    LESS            reduce using rule 70 (terminaFunCall -> CLOSEPAREN .)
    NOTEQUAL        reduce using rule 70 (terminaFunCall -> CLOSEPAREN .)
    ISEQUAL         reduce using rule 70 (terminaFunCall -> CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 70 (terminaFunCall -> CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 70 (terminaFunCall -> CLOSEPAREN .)
    COMMA           reduce using rule 70 (terminaFunCall -> CLOSEPAREN .)


state 239

    (71) funCall2 -> exp funCall3 .

    CLOSEPAREN      reduce using rule 71 (funCall2 -> exp funCall3 .)


state 240

    (73) funCall3 -> COMMA . funCall2
    (71) funCall2 -> . exp funCall3
    (72) funCall2 -> . empty
    (140) exp -> . term
    (141) exp -> . term exp_o exp
    (152) empty -> .
    (146) term -> . factor term_o term
    (147) term -> . factor
    (150) factor -> . vcte
    (151) factor -> . openP expression closeP
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_string
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (144) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (67) id -> . ID
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    CLOSEPAREN      reduce using rule 152 (empty -> .)
    OPENPAREN       shift and go to state 112
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    ID              shift and go to state 101

    funCall2                       shift and go to state 265
    exp                            shift and go to state 194
    empty                          shift and go to state 195
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    openP                          shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_string                     shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111

state 241

    (74) funCall3 -> empty .

    CLOSEPAREN      reduce using rule 74 (funCall3 -> empty .)


state 242

    (92) body -> OPENBRACES body1 CLOSEBRACES .

    IF              reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    PRINT           reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    READ            reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    ID              reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    RETURN          reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    REPEAT          reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    CIRCLE          reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    SQUARE          reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    SETXY           reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_UP         reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    GO              reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    LEFT            reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    RIGHT           reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    BACK            reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    ARC             reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    WHILE           reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    FOR             reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSEIF          reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSE            reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)


state 243

    (94) body1 -> stmt body1 .

    CLOSEBRACES     reduce using rule 94 (body1 -> stmt body1 .)


state 244

    (102) while1 -> while_w OPENPAREN expression CLOSEPAREN .

    OPENBRACES      reduce using rule 102 (while1 -> while_w OPENPAREN expression CLOSEPAREN .)


state 245

    (97) for1 -> forInit OPENPAREN ID for2 .

    OPENBRACES      reduce using rule 97 (for1 -> forInit OPENPAREN ID for2 .)


state 246

    (98) for2 -> TWODOTS . exp for3
    (140) exp -> . term
    (141) exp -> . term exp_o exp
    (146) term -> . factor term_o term
    (147) term -> . factor
    (150) factor -> . vcte
    (151) factor -> . openP expression closeP
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_string
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (144) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (67) id -> . ID
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 112
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    ID              shift and go to state 101

    exp                            shift and go to state 266
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    openP                          shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_string                     shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111

state 247

    (105) unaExp -> OPENPAREN exp CLOSEPAREN .

    SEMICOLON       reduce using rule 105 (unaExp -> OPENPAREN exp CLOSEPAREN .)


state 248

    (104) dosExp -> OPENPAREN exp COMMA . exp CLOSEPAREN
    (140) exp -> . term
    (141) exp -> . term exp_o exp
    (146) term -> . factor term_o term
    (147) term -> . factor
    (150) factor -> . vcte
    (151) factor -> . openP expression closeP
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_string
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (144) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (67) id -> . ID
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 112
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    ID              shift and go to state 101

    exp                            shift and go to state 267
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    openP                          shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_string                     shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111

state 249

    (47) function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .

    FUN             reduce using rule 47 (function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .)
    MULTIPLICATION  reduce using rule 47 (function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .)


state 250

    (49) termina_fun -> CLOSEBRACES .

    FUN             reduce using rule 49 (termina_fun -> CLOSEBRACES .)
    MULTIPLICATION  reduce using rule 49 (termina_fun -> CLOSEBRACES .)


state 251

    (53) function4 -> stmt function4 .

    CLOSEBRACES     reduce using rule 53 (function4 -> stmt function4 .)


state 252

    (55) function5 -> COMMA funParam function5 .

    CLOSEPAREN      reduce using rule 55 (function5 -> COMMA funParam function5 .)


state 253

    (138) expression -> exp loper exp .

    CLOSEPAREN      reduce using rule 138 (expression -> exp loper exp .)


state 254

    (41) vcte1 -> OPENBRACKET exp CLOSEBRACKET . vcte3
    (43) vcte3 -> . OPENBRACKET exp CLOSEBRACKET
    (44) vcte3 -> . empty
    (152) empty -> .

    OPENBRACKET     shift and go to state 268
    MULTIPLICATION  reduce using rule 152 (empty -> .)
    DIVISION        reduce using rule 152 (empty -> .)
    ADDITION        reduce using rule 152 (empty -> .)
    SUBSTRACTION    reduce using rule 152 (empty -> .)
    SEMICOLON       reduce using rule 152 (empty -> .)
    GREATER         reduce using rule 152 (empty -> .)
    LESS            reduce using rule 152 (empty -> .)
    NOTEQUAL        reduce using rule 152 (empty -> .)
    ISEQUAL         reduce using rule 152 (empty -> .)
    CLOSEPAREN      reduce using rule 152 (empty -> .)
    CLOSEBRACKET    reduce using rule 152 (empty -> .)
    COMMA           reduce using rule 152 (empty -> .)

    vcte3                          shift and go to state 269
    empty                          shift and go to state 270

state 255

    (16) vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .

    SEMICOLON       reduce using rule 16 (vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .)
    EQUALS          reduce using rule 16 (vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .)


state 256

    (29) assignment -> id assignment1 equals assignment3 SEMICOLON .

    IF              reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    PRINT           reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    READ            reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    ID              reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    RETURN          reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    REPEAT          reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    CIRCLE          reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SQUARE          reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    TRIANGLE        reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    RECTANGLE       reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    HIDE_STAR       reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SHOW_STAR       reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    COLOR_STAR      reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SIZE_STAR       reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SETXY           reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    HAND_DOWN       reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    HAND_UP         reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    GO              reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    LEFT            reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    RIGHT           reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    BACK            reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    ARC             reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    WHILE           reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    FOR             reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    CLOSEBRACES     reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)


state 257

    (86) condition1 -> elseif head_cond . body condition1
    (92) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 136

    body                           shift and go to state 271

state 258

    (87) condition1 -> else body .

    IF              reduce using rule 87 (condition1 -> else body .)
    PRINT           reduce using rule 87 (condition1 -> else body .)
    READ            reduce using rule 87 (condition1 -> else body .)
    ID              reduce using rule 87 (condition1 -> else body .)
    RETURN          reduce using rule 87 (condition1 -> else body .)
    REPEAT          reduce using rule 87 (condition1 -> else body .)
    CIRCLE          reduce using rule 87 (condition1 -> else body .)
    SQUARE          reduce using rule 87 (condition1 -> else body .)
    TRIANGLE        reduce using rule 87 (condition1 -> else body .)
    RECTANGLE       reduce using rule 87 (condition1 -> else body .)
    HIDE_STAR       reduce using rule 87 (condition1 -> else body .)
    SHOW_STAR       reduce using rule 87 (condition1 -> else body .)
    COLOR_STAR      reduce using rule 87 (condition1 -> else body .)
    SIZE_STAR       reduce using rule 87 (condition1 -> else body .)
    SETXY           reduce using rule 87 (condition1 -> else body .)
    HAND_DOWN       reduce using rule 87 (condition1 -> else body .)
    HAND_UP         reduce using rule 87 (condition1 -> else body .)
    GO              reduce using rule 87 (condition1 -> else body .)
    LEFT            reduce using rule 87 (condition1 -> else body .)
    RIGHT           reduce using rule 87 (condition1 -> else body .)
    BACK            reduce using rule 87 (condition1 -> else body .)
    ARC             reduce using rule 87 (condition1 -> else body .)
    WHILE           reduce using rule 87 (condition1 -> else body .)
    FOR             reduce using rule 87 (condition1 -> else body .)
    CLOSEBRACES     reduce using rule 87 (condition1 -> else body .)


state 259

    (61) print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .

    IF              reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)


state 260

    (62) read -> READ OPENPAREN id read1 CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 272


state 261

    (63) read1 -> OPENBRACKET exp . CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (64) read1 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 273


state 262

    (126) graphr1 -> graphstmt . graphr1
    (126) graphr1 -> . graphstmt graphr1
    (127) graphr1 -> . empty
    (106) graphstmt -> . graphfig
    (107) graphstmt -> . graphview
    (108) graphstmt -> . graphmove
    (152) empty -> .
    (109) graphfig -> . graphfig1 SEMICOLON
    (110) graphfig -> . graphfig2 SEMICOLON
    (130) graphview -> . graphview0 SEMICOLON
    (131) graphview -> . graphview1 SEMICOLON
    (132) graphview -> . graphview2 SEMICOLON
    (115) graphmove -> . graphmove0 SEMICOLON
    (116) graphmove -> . graphmove1 SEMICOLON
    (117) graphmove -> . graphmove2 SEMICOLON
    (111) graphfig1 -> . CIRCLE unaExp
    (112) graphfig1 -> . SQUARE unaExp
    (113) graphfig2 -> . TRIANGLE dosExp
    (114) graphfig2 -> . RECTANGLE dosExp
    (133) graphview0 -> . HIDE_STAR
    (134) graphview0 -> . SHOW_STAR
    (135) graphview1 -> . COLOR_STAR unaExp
    (136) graphview1 -> . SIZE_STAR unaExp
    (137) graphview2 -> . SETXY dosExp
    (118) graphmove0 -> . HAND_DOWN
    (119) graphmove0 -> . HAND_UP
    (120) graphmove1 -> . GO unaExp
    (121) graphmove1 -> . LEFT unaExp
    (122) graphmove1 -> . RIGHT unaExp
    (123) graphmove1 -> . BACK unaExp
    (124) graphmove2 -> . ARC dosExp

    CLOSEBRACES     reduce using rule 152 (empty -> .)
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92

    graphstmt                      shift and go to state 262
    graphr1                        shift and go to state 274
    empty                          shift and go to state 264
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73

state 263

    (125) graphr -> repeat rep OPENBRACES graphstmt graphr1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 275


state 264

    (127) graphr1 -> empty .

    CLOSEBRACES     reduce using rule 127 (graphr1 -> empty .)


state 265

    (73) funCall3 -> COMMA funCall2 .

    CLOSEPAREN      reduce using rule 73 (funCall3 -> COMMA funCall2 .)


state 266

    (98) for2 -> TWODOTS exp . for3
    (99) for3 -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 277

    for3                           shift and go to state 276

state 267

    (104) dosExp -> OPENPAREN exp COMMA exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 278


state 268

    (43) vcte3 -> OPENBRACKET . exp CLOSEBRACKET
    (140) exp -> . term
    (141) exp -> . term exp_o exp
    (146) term -> . factor term_o term
    (147) term -> . factor
    (150) factor -> . vcte
    (151) factor -> . openP expression closeP
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_string
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (144) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (67) id -> . ID
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 112
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    ID              shift and go to state 101

    exp                            shift and go to state 279
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    openP                          shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_string                     shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111

state 269

    (41) vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .

    MULTIPLICATION  reduce using rule 41 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    DIVISION        reduce using rule 41 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ADDITION        reduce using rule 41 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    SUBSTRACTION    reduce using rule 41 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    SEMICOLON       reduce using rule 41 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    GREATER         reduce using rule 41 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    LESS            reduce using rule 41 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    NOTEQUAL        reduce using rule 41 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ISEQUAL         reduce using rule 41 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CLOSEPAREN      reduce using rule 41 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CLOSEBRACKET    reduce using rule 41 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    COMMA           reduce using rule 41 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)


state 270

    (44) vcte3 -> empty .

    MULTIPLICATION  reduce using rule 44 (vcte3 -> empty .)
    DIVISION        reduce using rule 44 (vcte3 -> empty .)
    ADDITION        reduce using rule 44 (vcte3 -> empty .)
    SUBSTRACTION    reduce using rule 44 (vcte3 -> empty .)
    SEMICOLON       reduce using rule 44 (vcte3 -> empty .)
    GREATER         reduce using rule 44 (vcte3 -> empty .)
    LESS            reduce using rule 44 (vcte3 -> empty .)
    NOTEQUAL        reduce using rule 44 (vcte3 -> empty .)
    ISEQUAL         reduce using rule 44 (vcte3 -> empty .)
    CLOSEPAREN      reduce using rule 44 (vcte3 -> empty .)
    CLOSEBRACKET    reduce using rule 44 (vcte3 -> empty .)
    COMMA           reduce using rule 44 (vcte3 -> empty .)


state 271

    (86) condition1 -> elseif head_cond body . condition1
    (86) condition1 -> . elseif head_cond body condition1
    (87) condition1 -> . else body
    (88) condition1 -> . empty
    (89) elseif -> . ELSEIF
    (90) else -> . ELSE
    (152) empty -> .

    ELSEIF          shift and go to state 227
    ELSE            shift and go to state 228
    IF              reduce using rule 152 (empty -> .)
    PRINT           reduce using rule 152 (empty -> .)
    READ            reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    RETURN          reduce using rule 152 (empty -> .)
    REPEAT          reduce using rule 152 (empty -> .)
    CIRCLE          reduce using rule 152 (empty -> .)
    SQUARE          reduce using rule 152 (empty -> .)
    TRIANGLE        reduce using rule 152 (empty -> .)
    RECTANGLE       reduce using rule 152 (empty -> .)
    HIDE_STAR       reduce using rule 152 (empty -> .)
    SHOW_STAR       reduce using rule 152 (empty -> .)
    COLOR_STAR      reduce using rule 152 (empty -> .)
    SIZE_STAR       reduce using rule 152 (empty -> .)
    SETXY           reduce using rule 152 (empty -> .)
    HAND_DOWN       reduce using rule 152 (empty -> .)
    HAND_UP         reduce using rule 152 (empty -> .)
    GO              reduce using rule 152 (empty -> .)
    LEFT            reduce using rule 152 (empty -> .)
    RIGHT           reduce using rule 152 (empty -> .)
    BACK            reduce using rule 152 (empty -> .)
    ARC             reduce using rule 152 (empty -> .)
    WHILE           reduce using rule 152 (empty -> .)
    FOR             reduce using rule 152 (empty -> .)
    CLOSEBRACES     reduce using rule 152 (empty -> .)

    elseif                         shift and go to state 224
    condition1                     shift and go to state 280
    else                           shift and go to state 225
    empty                          shift and go to state 226

state 272

    (62) read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .

    IF              reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)


state 273

    (63) read1 -> OPENBRACKET exp CLOSEBRACKET . OPENBRACKET exp CLOSEBRACKET
    (64) read1 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     shift and go to state 281
    CLOSEPAREN      reduce using rule 64 (read1 -> OPENBRACKET exp CLOSEBRACKET .)


state 274

    (126) graphr1 -> graphstmt graphr1 .

    CLOSEBRACES     reduce using rule 126 (graphr1 -> graphstmt graphr1 .)


state 275

    (125) graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .

    IF              reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    PRINT           reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    READ            reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    ID              reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RETURN          reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    REPEAT          reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    CIRCLE          reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SQUARE          reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SETXY           reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HAND_UP         reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    GO              reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    LEFT            reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RIGHT           reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    BACK            reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    ARC             reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    WHILE           reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    FOR             reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 125 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)


state 276

    (98) for2 -> TWODOTS exp for3 .

    OPENBRACES      reduce using rule 98 (for2 -> TWODOTS exp for3 .)


state 277

    (99) for3 -> CLOSEPAREN .

    OPENBRACES      reduce using rule 99 (for3 -> CLOSEPAREN .)


state 278

    (104) dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN .

    SEMICOLON       reduce using rule 104 (dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN .)


state 279

    (43) vcte3 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 282


state 280

    (86) condition1 -> elseif head_cond body condition1 .

    IF              reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    PRINT           reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    READ            reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    ID              reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    RETURN          reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    REPEAT          reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    CIRCLE          reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    SQUARE          reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    TRIANGLE        reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    RECTANGLE       reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    HIDE_STAR       reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    SHOW_STAR       reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    COLOR_STAR      reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    SIZE_STAR       reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    SETXY           reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    HAND_DOWN       reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    HAND_UP         reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    GO              reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    LEFT            reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    RIGHT           reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    BACK            reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    ARC             reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    WHILE           reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    FOR             reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    CLOSEBRACES     reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)


state 281

    (63) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET . exp CLOSEBRACKET
    (140) exp -> . term
    (141) exp -> . term exp_o exp
    (146) term -> . factor term_o term
    (147) term -> . factor
    (150) factor -> . vcte
    (151) factor -> . openP expression closeP
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_string
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (144) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (67) id -> . ID
    (68) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 112
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTESTRING       shift and go to state 115
    ID              shift and go to state 101

    exp                            shift and go to state 283
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    openP                          shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_string                     shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111

state 282

    (43) vcte3 -> OPENBRACKET exp CLOSEBRACKET .

    MULTIPLICATION  reduce using rule 43 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    DIVISION        reduce using rule 43 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ADDITION        reduce using rule 43 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    SUBSTRACTION    reduce using rule 43 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    SEMICOLON       reduce using rule 43 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    GREATER         reduce using rule 43 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    LESS            reduce using rule 43 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 43 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ISEQUAL         reduce using rule 43 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 43 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 43 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    COMMA           reduce using rule 43 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)


state 283

    (63) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 284


state 284

    (63) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .

    CLOSEPAREN      reduce using rule 63 (read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 121 resolved using rule (assignment1 -> assignment2)
WARNING: rejected rule (empty -> <empty>) in state 121
WARNING: reduce/reduce conflict in state 133 resolved using rule (return1 -> vcte)
WARNING: rejected rule (factor -> vcte) in state 133
