Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> programp ID SEMICOLON declara_vars program_modules
Rule 2     program_modules -> program_fun star
Rule 3     programp -> PROGRAM
Rule 4     program_fun -> function program_fun
Rule 5     program_fun -> empty
Rule 6     star -> starI declara_vars star1 CLOSEBRACES
Rule 7     starI -> star_sign OPENBRACES
Rule 8     star_sign -> MULTIPLICATION
Rule 9     star1 -> stmt star1
Rule 10    star1 -> empty
Rule 11    declara_vars -> vars declara_vars
Rule 12    declara_vars -> empty
Rule 13    vars -> type ID vars1 equals exp SEMICOLON
Rule 14    vars -> type ID vars1 SEMICOLON
Rule 15    vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3
Rule 16    vars1 -> empty
Rule 17    vars3 -> OPENBRACKET CTEINT CLOSEBRACKET
Rule 18    vars3 -> empty
Rule 19    loop -> while
Rule 20    loop -> for
Rule 21    stmt -> assignment
Rule 22    stmt -> condition
Rule 23    stmt -> print
Rule 24    stmt -> loop
Rule 25    stmt -> read
Rule 26    stmt -> graphstmt
Rule 27    stmt -> graphr
Rule 28    stmt -> funCall SEMICOLON
Rule 29    stmt -> return
Rule 30    assignment -> id assignment1 equals assignment3 SEMICOLON
Rule 31    assignment1 -> assignment2
Rule 32    assignment1 -> assignment2 assignment1
Rule 33    assignment1 -> empty
Rule 34    assignment2 -> OPENBRACKET exp CLOSEBRACKET
Rule 35    assignment3 -> exp
Rule 36    assignment3 -> read
Rule 37    vcte -> cte_int
Rule 38    vcte -> cte_float
Rule 39    vcte -> cte_string
Rule 40    vcte -> id vcte1
Rule 41    vcte -> funCall
Rule 42    vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3
Rule 43    vcte1 -> empty
Rule 44    vcte3 -> OPENBRACKET exp CLOSEBRACKET
Rule 45    vcte3 -> empty
Rule 46    functionI -> type ID
Rule 47    functionI -> VOID ID
Rule 48    function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun
Rule 49    inicia_fun -> OPENBRACES
Rule 50    termina_fun -> CLOSEBRACES
Rule 51    function2 -> OPENPAREN function3 CLOSEPAREN
Rule 52    function3 -> funParam function5
Rule 53    function3 -> empty
Rule 54    function4 -> stmt function4
Rule 55    function4 -> empty
Rule 56    function5 -> COMMA funParam function5
Rule 57    function5 -> empty
Rule 58    funParam -> type ID
Rule 59    type -> INT
Rule 60    type -> FLOAT
Rule 61    type -> STRING
Rule 62    print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
Rule 63    read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
Rule 64    read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
Rule 65    read1 -> OPENBRACKET exp CLOSEBRACKET
Rule 66    read1 -> empty
Rule 67    equals -> EQUALS
Rule 68    id -> ID
Rule 69    funCall -> ID iniciaFunCall funCall2 terminaFunCall
Rule 70    iniciaFunCall -> OPENPAREN
Rule 71    terminaFunCall -> CLOSEPAREN
Rule 72    funCall2 -> funCallParam funCall3
Rule 73    funCall2 -> empty
Rule 74    funCall3 -> COMMA funCallParam funCall3
Rule 75    funCall3 -> empty
Rule 76    funCallParam -> exp
Rule 77    cte_int -> CTEINT
Rule 78    cte_float -> CTEFLOAT
Rule 79    cte_string -> CTESTRING
Rule 80    return -> RETURN return1 SEMICOLON
Rule 81    return1 -> vcte
Rule 82    return1 -> exp
Rule 83    loper -> GREATER
Rule 84    loper -> LESS
Rule 85    loper -> NOTEQUAL
Rule 86    loper -> ISEQUAL
Rule 87    condition -> IF head_cond body condition1
Rule 88    condition1 -> elseif head_cond body condition1
Rule 89    condition1 -> else body
Rule 90    condition1 -> empty
Rule 91    elseif -> ELSEIF
Rule 92    else -> ELSE
Rule 93    head_cond -> OPENPAREN expression close_condition
Rule 94    body -> OPENBRACES body1 CLOSEBRACES
Rule 95    close_condition -> CLOSEPAREN
Rule 96    body1 -> stmt body1
Rule 97    body1 -> empty
Rule 98    for -> for1 body
Rule 99    for1 -> forInit OPENPAREN ID for2
Rule 100   for2 -> TWODOTS exp for3
Rule 101   for3 -> CLOSEPAREN
Rule 102   forInit -> FOR
Rule 103   while -> while1 body
Rule 104   while1 -> while_w OPENPAREN expression CLOSEPAREN
Rule 105   while_w -> WHILE
Rule 106   dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN
Rule 107   unaExp -> OPENPAREN exp CLOSEPAREN
Rule 108   graphstmt -> graphfig
Rule 109   graphstmt -> graphview
Rule 110   graphstmt -> graphmove
Rule 111   graphfig -> graphfig1 SEMICOLON
Rule 112   graphfig -> graphfig2 SEMICOLON
Rule 113   graphfig1 -> CIRCLE unaExp
Rule 114   graphfig1 -> SQUARE unaExp
Rule 115   graphfig2 -> TRIANGLE dosExp
Rule 116   graphfig2 -> RECTANGLE dosExp
Rule 117   graphmove -> graphmove0 SEMICOLON
Rule 118   graphmove -> graphmove1 SEMICOLON
Rule 119   graphmove -> graphmove2 SEMICOLON
Rule 120   graphmove0 -> HAND_DOWN
Rule 121   graphmove0 -> HAND_UP
Rule 122   graphmove1 -> GO unaExp
Rule 123   graphmove1 -> LEFT unaExp
Rule 124   graphmove1 -> RIGHT unaExp
Rule 125   graphmove1 -> BACK unaExp
Rule 126   graphmove2 -> ARC dosExp
Rule 127   graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
Rule 128   graphr1 -> graphstmt graphr1
Rule 129   graphr1 -> empty
Rule 130   rep -> OPENPAREN exp CLOSEPAREN
Rule 131   repeat -> REPEAT
Rule 132   graphview -> graphview0 SEMICOLON
Rule 133   graphview -> graphview1 SEMICOLON
Rule 134   graphview -> graphview2 SEMICOLON
Rule 135   graphview0 -> HIDE_STAR
Rule 136   graphview0 -> SHOW_STAR
Rule 137   graphview1 -> COLOR_STAR unaExp
Rule 138   graphview1 -> SIZE_STAR unaExp
Rule 139   graphview2 -> SETXY dosExp
Rule 140   expression -> exp loper exp
Rule 141   expression -> exp
Rule 142   exp -> term
Rule 143   exp -> term exp_o exp
Rule 144   exp_o -> ADDITION
Rule 145   exp_o -> SUBSTRACTION
Rule 146   openP -> OPENPAREN
Rule 147   closeP -> CLOSEPAREN
Rule 148   term -> factor term_o term
Rule 149   term -> factor
Rule 150   term_o -> MULTIPLICATION
Rule 151   term_o -> DIVISION
Rule 152   factor -> vcte
Rule 153   factor -> openP expression closeP
Rule 154   empty -> <empty>

Terminals, with rules where they appear

ADDITION             : 144
ARC                  : 126
BACK                 : 125
CIRCLE               : 113
CLOSEBRACES          : 6 50 94 127
CLOSEBRACKET         : 15 17 34 42 44 64 64 65
CLOSEPAREN           : 51 62 63 71 95 101 104 106 107 130 147
COLOR_STAR           : 137
COMMA                : 56 74 106
CTEFLOAT             : 78
CTEINT               : 15 17 77
CTESTRING            : 79
DIVISION             : 151
ELSE                 : 92
ELSEIF               : 91
EQUALS               : 67
FLOAT                : 60
FOR                  : 102
FUN                  : 48
GO                   : 122
GREATER              : 83
HAND_DOWN            : 120
HAND_UP              : 121
HIDE_STAR            : 135
ID                   : 1 13 14 46 47 58 68 69 99
IF                   : 87
INT                  : 59
ISEQUAL              : 86
LEFT                 : 123
LESS                 : 84
MULTIPLICATION       : 8 150
NOTEQUAL             : 85
OPENBRACES           : 7 49 94 127
OPENBRACKET          : 15 17 34 42 44 64 64 65
OPENPAREN            : 51 62 63 70 93 99 104 106 107 130 146
PRINT                : 62
PROGRAM              : 3
READ                 : 63
RECTANGLE            : 116
REPEAT               : 131
RETURN               : 80
RIGHT                : 124
SEMICOLON            : 1 13 14 28 30 62 63 80 111 112 117 118 119 132 133 134
SETXY                : 139
SHOW_STAR            : 136
SIZE_STAR            : 138
SQUARE               : 114
STRING               : 61
SUBSTRACTION         : 145
TRIANGLE             : 115
TWODOTS              : 100
VOID                 : 47
WHILE                : 105
error                : 

Nonterminals, with rules where they appear

assignment           : 21
assignment1          : 30 32
assignment2          : 31 32
assignment3          : 30
body                 : 87 88 89 98 103
body1                : 94 96
closeP               : 153
close_condition      : 93
condition            : 22
condition1           : 87 88
cte_float            : 38
cte_int              : 37
cte_string           : 39
declara_vars         : 1 6 11 48
dosExp               : 115 116 126 139
else                 : 89
elseif               : 88
empty                : 5 10 12 16 18 33 43 45 53 55 57 66 73 75 90 97 129
equals               : 13 30
exp                  : 13 34 35 42 44 64 64 65 76 82 100 106 106 107 130 140 140 141 143
exp_o                : 143
expression           : 62 93 104 153
factor               : 148 149
for                  : 20
for1                 : 98
for2                 : 99
for3                 : 100
forInit              : 99
funCall              : 28 41
funCall2             : 69
funCall3             : 72 74
funCallParam         : 72 74
funParam             : 52 56
function             : 4
function2            : 48
function3            : 51
function4            : 48 54
function5            : 52 56
functionI            : 48
graphfig             : 108
graphfig1            : 111
graphfig2            : 112
graphmove            : 110
graphmove0           : 117
graphmove1           : 118
graphmove2           : 119
graphr               : 27
graphr1              : 127 128
graphstmt            : 26 127 128
graphview            : 109
graphview0           : 132
graphview1           : 133
graphview2           : 134
head_cond            : 87 88
id                   : 30 40 63
iniciaFunCall        : 69
inicia_fun           : 48
loop                 : 24
loper                : 140
openP                : 153
print                : 23
program              : 0
program_fun          : 2 4
program_modules      : 1
programp             : 1
read                 : 25 36
read1                : 63
rep                  : 127
repeat               : 127
return               : 29
return1              : 80
star                 : 2
star1                : 6 9
starI                : 6
star_sign            : 7
stmt                 : 9 54 96
term                 : 142 143 148
term_o               : 148
terminaFunCall       : 69
termina_fun          : 48
type                 : 13 14 46 58
unaExp               : 113 114 122 123 124 125 137 138
vars                 : 11
vars1                : 13 14
vars3                : 15
vcte                 : 81 152
vcte1                : 40
vcte3                : 42
while                : 19
while1               : 103
while_w              : 104

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . programp ID SEMICOLON declara_vars program_modules
    (3) programp -> . PROGRAM

    PROGRAM         shift and go to state 3

    program                        shift and go to state 1
    programp                       shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> programp . ID SEMICOLON declara_vars program_modules

    ID              shift and go to state 4


state 3

    (3) programp -> PROGRAM .

    ID              reduce using rule 3 (programp -> PROGRAM .)


state 4

    (1) program -> programp ID . SEMICOLON declara_vars program_modules

    SEMICOLON       shift and go to state 5


state 5

    (1) program -> programp ID SEMICOLON . declara_vars program_modules
    (11) declara_vars -> . vars declara_vars
    (12) declara_vars -> . empty
    (13) vars -> . type ID vars1 equals exp SEMICOLON
    (14) vars -> . type ID vars1 SEMICOLON
    (154) empty -> .
    (59) type -> . INT
    (60) type -> . FLOAT
    (61) type -> . STRING

    FUN             reduce using rule 154 (empty -> .)
    MULTIPLICATION  reduce using rule 154 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    STRING          shift and go to state 12

    declara_vars                   shift and go to state 6
    vars                           shift and go to state 7
    empty                          shift and go to state 8
    type                           shift and go to state 9

state 6

    (1) program -> programp ID SEMICOLON declara_vars . program_modules
    (2) program_modules -> . program_fun star
    (4) program_fun -> . function program_fun
    (5) program_fun -> . empty
    (48) function -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (154) empty -> .

    FUN             shift and go to state 17
    MULTIPLICATION  reduce using rule 154 (empty -> .)

    program_modules                shift and go to state 13
    program_fun                    shift and go to state 14
    function                       shift and go to state 15
    empty                          shift and go to state 16

state 7

    (11) declara_vars -> vars . declara_vars
    (11) declara_vars -> . vars declara_vars
    (12) declara_vars -> . empty
    (13) vars -> . type ID vars1 equals exp SEMICOLON
    (14) vars -> . type ID vars1 SEMICOLON
    (154) empty -> .
    (59) type -> . INT
    (60) type -> . FLOAT
    (61) type -> . STRING

    FUN             reduce using rule 154 (empty -> .)
    MULTIPLICATION  reduce using rule 154 (empty -> .)
    IF              reduce using rule 154 (empty -> .)
    PRINT           reduce using rule 154 (empty -> .)
    READ            reduce using rule 154 (empty -> .)
    ID              reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)
    REPEAT          reduce using rule 154 (empty -> .)
    CIRCLE          reduce using rule 154 (empty -> .)
    SQUARE          reduce using rule 154 (empty -> .)
    TRIANGLE        reduce using rule 154 (empty -> .)
    RECTANGLE       reduce using rule 154 (empty -> .)
    HIDE_STAR       reduce using rule 154 (empty -> .)
    SHOW_STAR       reduce using rule 154 (empty -> .)
    COLOR_STAR      reduce using rule 154 (empty -> .)
    SIZE_STAR       reduce using rule 154 (empty -> .)
    SETXY           reduce using rule 154 (empty -> .)
    HAND_DOWN       reduce using rule 154 (empty -> .)
    HAND_UP         reduce using rule 154 (empty -> .)
    GO              reduce using rule 154 (empty -> .)
    LEFT            reduce using rule 154 (empty -> .)
    RIGHT           reduce using rule 154 (empty -> .)
    BACK            reduce using rule 154 (empty -> .)
    ARC             reduce using rule 154 (empty -> .)
    WHILE           reduce using rule 154 (empty -> .)
    FOR             reduce using rule 154 (empty -> .)
    CLOSEBRACES     reduce using rule 154 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    STRING          shift and go to state 12

    vars                           shift and go to state 7
    declara_vars                   shift and go to state 18
    empty                          shift and go to state 8
    type                           shift and go to state 9

state 8

    (12) declara_vars -> empty .

    FUN             reduce using rule 12 (declara_vars -> empty .)
    MULTIPLICATION  reduce using rule 12 (declara_vars -> empty .)
    IF              reduce using rule 12 (declara_vars -> empty .)
    PRINT           reduce using rule 12 (declara_vars -> empty .)
    READ            reduce using rule 12 (declara_vars -> empty .)
    ID              reduce using rule 12 (declara_vars -> empty .)
    RETURN          reduce using rule 12 (declara_vars -> empty .)
    REPEAT          reduce using rule 12 (declara_vars -> empty .)
    CIRCLE          reduce using rule 12 (declara_vars -> empty .)
    SQUARE          reduce using rule 12 (declara_vars -> empty .)
    TRIANGLE        reduce using rule 12 (declara_vars -> empty .)
    RECTANGLE       reduce using rule 12 (declara_vars -> empty .)
    HIDE_STAR       reduce using rule 12 (declara_vars -> empty .)
    SHOW_STAR       reduce using rule 12 (declara_vars -> empty .)
    COLOR_STAR      reduce using rule 12 (declara_vars -> empty .)
    SIZE_STAR       reduce using rule 12 (declara_vars -> empty .)
    SETXY           reduce using rule 12 (declara_vars -> empty .)
    HAND_DOWN       reduce using rule 12 (declara_vars -> empty .)
    HAND_UP         reduce using rule 12 (declara_vars -> empty .)
    GO              reduce using rule 12 (declara_vars -> empty .)
    LEFT            reduce using rule 12 (declara_vars -> empty .)
    RIGHT           reduce using rule 12 (declara_vars -> empty .)
    BACK            reduce using rule 12 (declara_vars -> empty .)
    ARC             reduce using rule 12 (declara_vars -> empty .)
    WHILE           reduce using rule 12 (declara_vars -> empty .)
    FOR             reduce using rule 12 (declara_vars -> empty .)
    CLOSEBRACES     reduce using rule 12 (declara_vars -> empty .)


state 9

    (13) vars -> type . ID vars1 equals exp SEMICOLON
    (14) vars -> type . ID vars1 SEMICOLON

    ID              shift and go to state 19


state 10

    (59) type -> INT .

    ID              reduce using rule 59 (type -> INT .)


state 11

    (60) type -> FLOAT .

    ID              reduce using rule 60 (type -> FLOAT .)


state 12

    (61) type -> STRING .

    ID              reduce using rule 61 (type -> STRING .)


state 13

    (1) program -> programp ID SEMICOLON declara_vars program_modules .

    $end            reduce using rule 1 (program -> programp ID SEMICOLON declara_vars program_modules .)


state 14

    (2) program_modules -> program_fun . star
    (6) star -> . starI declara_vars star1 CLOSEBRACES
    (7) starI -> . star_sign OPENBRACES
    (8) star_sign -> . MULTIPLICATION

    MULTIPLICATION  shift and go to state 23

    star                           shift and go to state 20
    starI                          shift and go to state 21
    star_sign                      shift and go to state 22

state 15

    (4) program_fun -> function . program_fun
    (4) program_fun -> . function program_fun
    (5) program_fun -> . empty
    (48) function -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (154) empty -> .

    FUN             shift and go to state 17
    MULTIPLICATION  reduce using rule 154 (empty -> .)

    function                       shift and go to state 15
    program_fun                    shift and go to state 24
    empty                          shift and go to state 16

state 16

    (5) program_fun -> empty .

    MULTIPLICATION  reduce using rule 5 (program_fun -> empty .)


state 17

    (48) function -> FUN . functionI function2 inicia_fun declara_vars function4 termina_fun
    (46) functionI -> . type ID
    (47) functionI -> . VOID ID
    (59) type -> . INT
    (60) type -> . FLOAT
    (61) type -> . STRING

    VOID            shift and go to state 27
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    STRING          shift and go to state 12

    functionI                      shift and go to state 25
    type                           shift and go to state 26

state 18

    (11) declara_vars -> vars declara_vars .

    FUN             reduce using rule 11 (declara_vars -> vars declara_vars .)
    MULTIPLICATION  reduce using rule 11 (declara_vars -> vars declara_vars .)
    IF              reduce using rule 11 (declara_vars -> vars declara_vars .)
    PRINT           reduce using rule 11 (declara_vars -> vars declara_vars .)
    READ            reduce using rule 11 (declara_vars -> vars declara_vars .)
    ID              reduce using rule 11 (declara_vars -> vars declara_vars .)
    RETURN          reduce using rule 11 (declara_vars -> vars declara_vars .)
    REPEAT          reduce using rule 11 (declara_vars -> vars declara_vars .)
    CIRCLE          reduce using rule 11 (declara_vars -> vars declara_vars .)
    SQUARE          reduce using rule 11 (declara_vars -> vars declara_vars .)
    TRIANGLE        reduce using rule 11 (declara_vars -> vars declara_vars .)
    RECTANGLE       reduce using rule 11 (declara_vars -> vars declara_vars .)
    HIDE_STAR       reduce using rule 11 (declara_vars -> vars declara_vars .)
    SHOW_STAR       reduce using rule 11 (declara_vars -> vars declara_vars .)
    COLOR_STAR      reduce using rule 11 (declara_vars -> vars declara_vars .)
    SIZE_STAR       reduce using rule 11 (declara_vars -> vars declara_vars .)
    SETXY           reduce using rule 11 (declara_vars -> vars declara_vars .)
    HAND_DOWN       reduce using rule 11 (declara_vars -> vars declara_vars .)
    HAND_UP         reduce using rule 11 (declara_vars -> vars declara_vars .)
    GO              reduce using rule 11 (declara_vars -> vars declara_vars .)
    LEFT            reduce using rule 11 (declara_vars -> vars declara_vars .)
    RIGHT           reduce using rule 11 (declara_vars -> vars declara_vars .)
    BACK            reduce using rule 11 (declara_vars -> vars declara_vars .)
    ARC             reduce using rule 11 (declara_vars -> vars declara_vars .)
    WHILE           reduce using rule 11 (declara_vars -> vars declara_vars .)
    FOR             reduce using rule 11 (declara_vars -> vars declara_vars .)
    CLOSEBRACES     reduce using rule 11 (declara_vars -> vars declara_vars .)


state 19

    (13) vars -> type ID . vars1 equals exp SEMICOLON
    (14) vars -> type ID . vars1 SEMICOLON
    (15) vars1 -> . OPENBRACKET CTEINT CLOSEBRACKET vars3
    (16) vars1 -> . empty
    (154) empty -> .

    OPENBRACKET     shift and go to state 29
    SEMICOLON       reduce using rule 154 (empty -> .)
    EQUALS          reduce using rule 154 (empty -> .)

    vars1                          shift and go to state 28
    empty                          shift and go to state 30

state 20

    (2) program_modules -> program_fun star .

    $end            reduce using rule 2 (program_modules -> program_fun star .)


state 21

    (6) star -> starI . declara_vars star1 CLOSEBRACES
    (11) declara_vars -> . vars declara_vars
    (12) declara_vars -> . empty
    (13) vars -> . type ID vars1 equals exp SEMICOLON
    (14) vars -> . type ID vars1 SEMICOLON
    (154) empty -> .
    (59) type -> . INT
    (60) type -> . FLOAT
    (61) type -> . STRING

    IF              reduce using rule 154 (empty -> .)
    PRINT           reduce using rule 154 (empty -> .)
    READ            reduce using rule 154 (empty -> .)
    ID              reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)
    REPEAT          reduce using rule 154 (empty -> .)
    CIRCLE          reduce using rule 154 (empty -> .)
    SQUARE          reduce using rule 154 (empty -> .)
    TRIANGLE        reduce using rule 154 (empty -> .)
    RECTANGLE       reduce using rule 154 (empty -> .)
    HIDE_STAR       reduce using rule 154 (empty -> .)
    SHOW_STAR       reduce using rule 154 (empty -> .)
    COLOR_STAR      reduce using rule 154 (empty -> .)
    SIZE_STAR       reduce using rule 154 (empty -> .)
    SETXY           reduce using rule 154 (empty -> .)
    HAND_DOWN       reduce using rule 154 (empty -> .)
    HAND_UP         reduce using rule 154 (empty -> .)
    GO              reduce using rule 154 (empty -> .)
    LEFT            reduce using rule 154 (empty -> .)
    RIGHT           reduce using rule 154 (empty -> .)
    BACK            reduce using rule 154 (empty -> .)
    ARC             reduce using rule 154 (empty -> .)
    WHILE           reduce using rule 154 (empty -> .)
    FOR             reduce using rule 154 (empty -> .)
    CLOSEBRACES     reduce using rule 154 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    STRING          shift and go to state 12

    declara_vars                   shift and go to state 31
    vars                           shift and go to state 7
    empty                          shift and go to state 8
    type                           shift and go to state 9

state 22

    (7) starI -> star_sign . OPENBRACES

    OPENBRACES      shift and go to state 32


state 23

    (8) star_sign -> MULTIPLICATION .

    OPENBRACES      reduce using rule 8 (star_sign -> MULTIPLICATION .)


state 24

    (4) program_fun -> function program_fun .

    MULTIPLICATION  reduce using rule 4 (program_fun -> function program_fun .)


state 25

    (48) function -> FUN functionI . function2 inicia_fun declara_vars function4 termina_fun
    (51) function2 -> . OPENPAREN function3 CLOSEPAREN

    OPENPAREN       shift and go to state 34

    function2                      shift and go to state 33

state 26

    (46) functionI -> type . ID

    ID              shift and go to state 35


state 27

    (47) functionI -> VOID . ID

    ID              shift and go to state 36


state 28

    (13) vars -> type ID vars1 . equals exp SEMICOLON
    (14) vars -> type ID vars1 . SEMICOLON
    (67) equals -> . EQUALS

    SEMICOLON       shift and go to state 38
    EQUALS          shift and go to state 39

    equals                         shift and go to state 37

state 29

    (15) vars1 -> OPENBRACKET . CTEINT CLOSEBRACKET vars3

    CTEINT          shift and go to state 40


state 30

    (16) vars1 -> empty .

    SEMICOLON       reduce using rule 16 (vars1 -> empty .)
    EQUALS          reduce using rule 16 (vars1 -> empty .)


state 31

    (6) star -> starI declara_vars . star1 CLOSEBRACES
    (9) star1 -> . stmt star1
    (10) star1 -> . empty
    (21) stmt -> . assignment
    (22) stmt -> . condition
    (23) stmt -> . print
    (24) stmt -> . loop
    (25) stmt -> . read
    (26) stmt -> . graphstmt
    (27) stmt -> . graphr
    (28) stmt -> . funCall SEMICOLON
    (29) stmt -> . return
    (154) empty -> .
    (30) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (87) condition -> . IF head_cond body condition1
    (62) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (19) loop -> . while
    (20) loop -> . for
    (63) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (108) graphstmt -> . graphfig
    (109) graphstmt -> . graphview
    (110) graphstmt -> . graphmove
    (127) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (80) return -> . RETURN return1 SEMICOLON
    (68) id -> . ID
    (103) while -> . while1 body
    (98) for -> . for1 body
    (111) graphfig -> . graphfig1 SEMICOLON
    (112) graphfig -> . graphfig2 SEMICOLON
    (132) graphview -> . graphview0 SEMICOLON
    (133) graphview -> . graphview1 SEMICOLON
    (134) graphview -> . graphview2 SEMICOLON
    (117) graphmove -> . graphmove0 SEMICOLON
    (118) graphmove -> . graphmove1 SEMICOLON
    (119) graphmove -> . graphmove2 SEMICOLON
    (131) repeat -> . REPEAT
    (104) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (99) for1 -> . forInit OPENPAREN ID for2
    (113) graphfig1 -> . CIRCLE unaExp
    (114) graphfig1 -> . SQUARE unaExp
    (115) graphfig2 -> . TRIANGLE dosExp
    (116) graphfig2 -> . RECTANGLE dosExp
    (135) graphview0 -> . HIDE_STAR
    (136) graphview0 -> . SHOW_STAR
    (137) graphview1 -> . COLOR_STAR unaExp
    (138) graphview1 -> . SIZE_STAR unaExp
    (139) graphview2 -> . SETXY dosExp
    (120) graphmove0 -> . HAND_DOWN
    (121) graphmove0 -> . HAND_UP
    (122) graphmove1 -> . GO unaExp
    (123) graphmove1 -> . LEFT unaExp
    (124) graphmove1 -> . RIGHT unaExp
    (125) graphmove1 -> . BACK unaExp
    (126) graphmove2 -> . ARC dosExp
    (105) while_w -> . WHILE
    (102) forInit -> . FOR

    CLOSEBRACES     reduce using rule 154 (empty -> .)
    IF              shift and go to state 54
    PRINT           shift and go to state 55
    READ            shift and go to state 58
    ID              shift and go to state 63
    RETURN          shift and go to state 64
    REPEAT          shift and go to state 75
    CIRCLE          shift and go to state 78
    SQUARE          shift and go to state 79
    TRIANGLE        shift and go to state 80
    RECTANGLE       shift and go to state 81
    HIDE_STAR       shift and go to state 82
    SHOW_STAR       shift and go to state 83
    COLOR_STAR      shift and go to state 84
    SIZE_STAR       shift and go to state 85
    SETXY           shift and go to state 86
    HAND_DOWN       shift and go to state 87
    HAND_UP         shift and go to state 88
    GO              shift and go to state 89
    LEFT            shift and go to state 90
    RIGHT           shift and go to state 91
    BACK            shift and go to state 92
    ARC             shift and go to state 93
    WHILE           shift and go to state 94
    FOR             shift and go to state 95

    star1                          shift and go to state 41
    stmt                           shift and go to state 42
    empty                          shift and go to state 43
    assignment                     shift and go to state 44
    condition                      shift and go to state 45
    print                          shift and go to state 46
    loop                           shift and go to state 47
    read                           shift and go to state 48
    graphstmt                      shift and go to state 49
    graphr                         shift and go to state 50
    funCall                        shift and go to state 51
    return                         shift and go to state 52
    id                             shift and go to state 53
    while                          shift and go to state 56
    for                            shift and go to state 57
    graphfig                       shift and go to state 59
    graphview                      shift and go to state 60
    graphmove                      shift and go to state 61
    repeat                         shift and go to state 62
    while1                         shift and go to state 65
    for1                           shift and go to state 66
    graphfig1                      shift and go to state 67
    graphfig2                      shift and go to state 68
    graphview0                     shift and go to state 69
    graphview1                     shift and go to state 70
    graphview2                     shift and go to state 71
    graphmove0                     shift and go to state 72
    graphmove1                     shift and go to state 73
    graphmove2                     shift and go to state 74
    while_w                        shift and go to state 76
    forInit                        shift and go to state 77

state 32

    (7) starI -> star_sign OPENBRACES .

    INT             reduce using rule 7 (starI -> star_sign OPENBRACES .)
    FLOAT           reduce using rule 7 (starI -> star_sign OPENBRACES .)
    STRING          reduce using rule 7 (starI -> star_sign OPENBRACES .)
    IF              reduce using rule 7 (starI -> star_sign OPENBRACES .)
    PRINT           reduce using rule 7 (starI -> star_sign OPENBRACES .)
    READ            reduce using rule 7 (starI -> star_sign OPENBRACES .)
    ID              reduce using rule 7 (starI -> star_sign OPENBRACES .)
    RETURN          reduce using rule 7 (starI -> star_sign OPENBRACES .)
    REPEAT          reduce using rule 7 (starI -> star_sign OPENBRACES .)
    CIRCLE          reduce using rule 7 (starI -> star_sign OPENBRACES .)
    SQUARE          reduce using rule 7 (starI -> star_sign OPENBRACES .)
    TRIANGLE        reduce using rule 7 (starI -> star_sign OPENBRACES .)
    RECTANGLE       reduce using rule 7 (starI -> star_sign OPENBRACES .)
    HIDE_STAR       reduce using rule 7 (starI -> star_sign OPENBRACES .)
    SHOW_STAR       reduce using rule 7 (starI -> star_sign OPENBRACES .)
    COLOR_STAR      reduce using rule 7 (starI -> star_sign OPENBRACES .)
    SIZE_STAR       reduce using rule 7 (starI -> star_sign OPENBRACES .)
    SETXY           reduce using rule 7 (starI -> star_sign OPENBRACES .)
    HAND_DOWN       reduce using rule 7 (starI -> star_sign OPENBRACES .)
    HAND_UP         reduce using rule 7 (starI -> star_sign OPENBRACES .)
    GO              reduce using rule 7 (starI -> star_sign OPENBRACES .)
    LEFT            reduce using rule 7 (starI -> star_sign OPENBRACES .)
    RIGHT           reduce using rule 7 (starI -> star_sign OPENBRACES .)
    BACK            reduce using rule 7 (starI -> star_sign OPENBRACES .)
    ARC             reduce using rule 7 (starI -> star_sign OPENBRACES .)
    WHILE           reduce using rule 7 (starI -> star_sign OPENBRACES .)
    FOR             reduce using rule 7 (starI -> star_sign OPENBRACES .)
    CLOSEBRACES     reduce using rule 7 (starI -> star_sign OPENBRACES .)


state 33

    (48) function -> FUN functionI function2 . inicia_fun declara_vars function4 termina_fun
    (49) inicia_fun -> . OPENBRACES

    OPENBRACES      shift and go to state 97

    inicia_fun                     shift and go to state 96

state 34

    (51) function2 -> OPENPAREN . function3 CLOSEPAREN
    (52) function3 -> . funParam function5
    (53) function3 -> . empty
    (58) funParam -> . type ID
    (154) empty -> .
    (59) type -> . INT
    (60) type -> . FLOAT
    (61) type -> . STRING

    CLOSEPAREN      reduce using rule 154 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    STRING          shift and go to state 12

    function3                      shift and go to state 98
    funParam                       shift and go to state 99
    empty                          shift and go to state 100
    type                           shift and go to state 101

state 35

    (46) functionI -> type ID .

    OPENPAREN       reduce using rule 46 (functionI -> type ID .)


state 36

    (47) functionI -> VOID ID .

    OPENPAREN       reduce using rule 47 (functionI -> VOID ID .)


state 37

    (13) vars -> type ID vars1 equals . exp SEMICOLON
    (142) exp -> . term
    (143) exp -> . term exp_o exp
    (148) term -> . factor term_o term
    (149) term -> . factor
    (152) factor -> . vcte
    (153) factor -> . openP expression closeP
    (37) vcte -> . cte_int
    (38) vcte -> . cte_float
    (39) vcte -> . cte_string
    (40) vcte -> . id vcte1
    (41) vcte -> . funCall
    (146) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 113
    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    ID              shift and go to state 102

    exp                            shift and go to state 103
    term                           shift and go to state 104
    factor                         shift and go to state 105
    vcte                           shift and go to state 106
    openP                          shift and go to state 107
    cte_int                        shift and go to state 108
    cte_float                      shift and go to state 109
    cte_string                     shift and go to state 110
    id                             shift and go to state 111
    funCall                        shift and go to state 112

state 38

    (14) vars -> type ID vars1 SEMICOLON .

    INT             reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    FLOAT           reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    STRING          reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    FUN             reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    MULTIPLICATION  reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    IF              reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    PRINT           reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    READ            reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    ID              reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    RETURN          reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    REPEAT          reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    CIRCLE          reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    SQUARE          reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    TRIANGLE        reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    RECTANGLE       reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    HIDE_STAR       reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    SHOW_STAR       reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    COLOR_STAR      reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    SIZE_STAR       reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    SETXY           reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    HAND_DOWN       reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    HAND_UP         reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    GO              reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    LEFT            reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    RIGHT           reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    BACK            reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    ARC             reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    WHILE           reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    FOR             reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 14 (vars -> type ID vars1 SEMICOLON .)


state 39

    (67) equals -> EQUALS .

    OPENPAREN       reduce using rule 67 (equals -> EQUALS .)
    CTEINT          reduce using rule 67 (equals -> EQUALS .)
    CTEFLOAT        reduce using rule 67 (equals -> EQUALS .)
    CTESTRING       reduce using rule 67 (equals -> EQUALS .)
    ID              reduce using rule 67 (equals -> EQUALS .)
    READ            reduce using rule 67 (equals -> EQUALS .)


state 40

    (15) vars1 -> OPENBRACKET CTEINT . CLOSEBRACKET vars3

    CLOSEBRACKET    shift and go to state 117


state 41

    (6) star -> starI declara_vars star1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 118


state 42

    (9) star1 -> stmt . star1
    (9) star1 -> . stmt star1
    (10) star1 -> . empty
    (21) stmt -> . assignment
    (22) stmt -> . condition
    (23) stmt -> . print
    (24) stmt -> . loop
    (25) stmt -> . read
    (26) stmt -> . graphstmt
    (27) stmt -> . graphr
    (28) stmt -> . funCall SEMICOLON
    (29) stmt -> . return
    (154) empty -> .
    (30) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (87) condition -> . IF head_cond body condition1
    (62) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (19) loop -> . while
    (20) loop -> . for
    (63) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (108) graphstmt -> . graphfig
    (109) graphstmt -> . graphview
    (110) graphstmt -> . graphmove
    (127) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (80) return -> . RETURN return1 SEMICOLON
    (68) id -> . ID
    (103) while -> . while1 body
    (98) for -> . for1 body
    (111) graphfig -> . graphfig1 SEMICOLON
    (112) graphfig -> . graphfig2 SEMICOLON
    (132) graphview -> . graphview0 SEMICOLON
    (133) graphview -> . graphview1 SEMICOLON
    (134) graphview -> . graphview2 SEMICOLON
    (117) graphmove -> . graphmove0 SEMICOLON
    (118) graphmove -> . graphmove1 SEMICOLON
    (119) graphmove -> . graphmove2 SEMICOLON
    (131) repeat -> . REPEAT
    (104) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (99) for1 -> . forInit OPENPAREN ID for2
    (113) graphfig1 -> . CIRCLE unaExp
    (114) graphfig1 -> . SQUARE unaExp
    (115) graphfig2 -> . TRIANGLE dosExp
    (116) graphfig2 -> . RECTANGLE dosExp
    (135) graphview0 -> . HIDE_STAR
    (136) graphview0 -> . SHOW_STAR
    (137) graphview1 -> . COLOR_STAR unaExp
    (138) graphview1 -> . SIZE_STAR unaExp
    (139) graphview2 -> . SETXY dosExp
    (120) graphmove0 -> . HAND_DOWN
    (121) graphmove0 -> . HAND_UP
    (122) graphmove1 -> . GO unaExp
    (123) graphmove1 -> . LEFT unaExp
    (124) graphmove1 -> . RIGHT unaExp
    (125) graphmove1 -> . BACK unaExp
    (126) graphmove2 -> . ARC dosExp
    (105) while_w -> . WHILE
    (102) forInit -> . FOR

    CLOSEBRACES     reduce using rule 154 (empty -> .)
    IF              shift and go to state 54
    PRINT           shift and go to state 55
    READ            shift and go to state 58
    ID              shift and go to state 63
    RETURN          shift and go to state 64
    REPEAT          shift and go to state 75
    CIRCLE          shift and go to state 78
    SQUARE          shift and go to state 79
    TRIANGLE        shift and go to state 80
    RECTANGLE       shift and go to state 81
    HIDE_STAR       shift and go to state 82
    SHOW_STAR       shift and go to state 83
    COLOR_STAR      shift and go to state 84
    SIZE_STAR       shift and go to state 85
    SETXY           shift and go to state 86
    HAND_DOWN       shift and go to state 87
    HAND_UP         shift and go to state 88
    GO              shift and go to state 89
    LEFT            shift and go to state 90
    RIGHT           shift and go to state 91
    BACK            shift and go to state 92
    ARC             shift and go to state 93
    WHILE           shift and go to state 94
    FOR             shift and go to state 95

    stmt                           shift and go to state 42
    star1                          shift and go to state 119
    empty                          shift and go to state 43
    assignment                     shift and go to state 44
    condition                      shift and go to state 45
    print                          shift and go to state 46
    loop                           shift and go to state 47
    read                           shift and go to state 48
    graphstmt                      shift and go to state 49
    graphr                         shift and go to state 50
    funCall                        shift and go to state 51
    return                         shift and go to state 52
    id                             shift and go to state 53
    while                          shift and go to state 56
    for                            shift and go to state 57
    graphfig                       shift and go to state 59
    graphview                      shift and go to state 60
    graphmove                      shift and go to state 61
    repeat                         shift and go to state 62
    while1                         shift and go to state 65
    for1                           shift and go to state 66
    graphfig1                      shift and go to state 67
    graphfig2                      shift and go to state 68
    graphview0                     shift and go to state 69
    graphview1                     shift and go to state 70
    graphview2                     shift and go to state 71
    graphmove0                     shift and go to state 72
    graphmove1                     shift and go to state 73
    graphmove2                     shift and go to state 74
    while_w                        shift and go to state 76
    forInit                        shift and go to state 77

state 43

    (10) star1 -> empty .

    CLOSEBRACES     reduce using rule 10 (star1 -> empty .)


state 44

    (21) stmt -> assignment .

    IF              reduce using rule 21 (stmt -> assignment .)
    PRINT           reduce using rule 21 (stmt -> assignment .)
    READ            reduce using rule 21 (stmt -> assignment .)
    ID              reduce using rule 21 (stmt -> assignment .)
    RETURN          reduce using rule 21 (stmt -> assignment .)
    REPEAT          reduce using rule 21 (stmt -> assignment .)
    CIRCLE          reduce using rule 21 (stmt -> assignment .)
    SQUARE          reduce using rule 21 (stmt -> assignment .)
    TRIANGLE        reduce using rule 21 (stmt -> assignment .)
    RECTANGLE       reduce using rule 21 (stmt -> assignment .)
    HIDE_STAR       reduce using rule 21 (stmt -> assignment .)
    SHOW_STAR       reduce using rule 21 (stmt -> assignment .)
    COLOR_STAR      reduce using rule 21 (stmt -> assignment .)
    SIZE_STAR       reduce using rule 21 (stmt -> assignment .)
    SETXY           reduce using rule 21 (stmt -> assignment .)
    HAND_DOWN       reduce using rule 21 (stmt -> assignment .)
    HAND_UP         reduce using rule 21 (stmt -> assignment .)
    GO              reduce using rule 21 (stmt -> assignment .)
    LEFT            reduce using rule 21 (stmt -> assignment .)
    RIGHT           reduce using rule 21 (stmt -> assignment .)
    BACK            reduce using rule 21 (stmt -> assignment .)
    ARC             reduce using rule 21 (stmt -> assignment .)
    WHILE           reduce using rule 21 (stmt -> assignment .)
    FOR             reduce using rule 21 (stmt -> assignment .)
    CLOSEBRACES     reduce using rule 21 (stmt -> assignment .)


state 45

    (22) stmt -> condition .

    IF              reduce using rule 22 (stmt -> condition .)
    PRINT           reduce using rule 22 (stmt -> condition .)
    READ            reduce using rule 22 (stmt -> condition .)
    ID              reduce using rule 22 (stmt -> condition .)
    RETURN          reduce using rule 22 (stmt -> condition .)
    REPEAT          reduce using rule 22 (stmt -> condition .)
    CIRCLE          reduce using rule 22 (stmt -> condition .)
    SQUARE          reduce using rule 22 (stmt -> condition .)
    TRIANGLE        reduce using rule 22 (stmt -> condition .)
    RECTANGLE       reduce using rule 22 (stmt -> condition .)
    HIDE_STAR       reduce using rule 22 (stmt -> condition .)
    SHOW_STAR       reduce using rule 22 (stmt -> condition .)
    COLOR_STAR      reduce using rule 22 (stmt -> condition .)
    SIZE_STAR       reduce using rule 22 (stmt -> condition .)
    SETXY           reduce using rule 22 (stmt -> condition .)
    HAND_DOWN       reduce using rule 22 (stmt -> condition .)
    HAND_UP         reduce using rule 22 (stmt -> condition .)
    GO              reduce using rule 22 (stmt -> condition .)
    LEFT            reduce using rule 22 (stmt -> condition .)
    RIGHT           reduce using rule 22 (stmt -> condition .)
    BACK            reduce using rule 22 (stmt -> condition .)
    ARC             reduce using rule 22 (stmt -> condition .)
    WHILE           reduce using rule 22 (stmt -> condition .)
    FOR             reduce using rule 22 (stmt -> condition .)
    CLOSEBRACES     reduce using rule 22 (stmt -> condition .)


state 46

    (23) stmt -> print .

    IF              reduce using rule 23 (stmt -> print .)
    PRINT           reduce using rule 23 (stmt -> print .)
    READ            reduce using rule 23 (stmt -> print .)
    ID              reduce using rule 23 (stmt -> print .)
    RETURN          reduce using rule 23 (stmt -> print .)
    REPEAT          reduce using rule 23 (stmt -> print .)
    CIRCLE          reduce using rule 23 (stmt -> print .)
    SQUARE          reduce using rule 23 (stmt -> print .)
    TRIANGLE        reduce using rule 23 (stmt -> print .)
    RECTANGLE       reduce using rule 23 (stmt -> print .)
    HIDE_STAR       reduce using rule 23 (stmt -> print .)
    SHOW_STAR       reduce using rule 23 (stmt -> print .)
    COLOR_STAR      reduce using rule 23 (stmt -> print .)
    SIZE_STAR       reduce using rule 23 (stmt -> print .)
    SETXY           reduce using rule 23 (stmt -> print .)
    HAND_DOWN       reduce using rule 23 (stmt -> print .)
    HAND_UP         reduce using rule 23 (stmt -> print .)
    GO              reduce using rule 23 (stmt -> print .)
    LEFT            reduce using rule 23 (stmt -> print .)
    RIGHT           reduce using rule 23 (stmt -> print .)
    BACK            reduce using rule 23 (stmt -> print .)
    ARC             reduce using rule 23 (stmt -> print .)
    WHILE           reduce using rule 23 (stmt -> print .)
    FOR             reduce using rule 23 (stmt -> print .)
    CLOSEBRACES     reduce using rule 23 (stmt -> print .)


state 47

    (24) stmt -> loop .

    IF              reduce using rule 24 (stmt -> loop .)
    PRINT           reduce using rule 24 (stmt -> loop .)
    READ            reduce using rule 24 (stmt -> loop .)
    ID              reduce using rule 24 (stmt -> loop .)
    RETURN          reduce using rule 24 (stmt -> loop .)
    REPEAT          reduce using rule 24 (stmt -> loop .)
    CIRCLE          reduce using rule 24 (stmt -> loop .)
    SQUARE          reduce using rule 24 (stmt -> loop .)
    TRIANGLE        reduce using rule 24 (stmt -> loop .)
    RECTANGLE       reduce using rule 24 (stmt -> loop .)
    HIDE_STAR       reduce using rule 24 (stmt -> loop .)
    SHOW_STAR       reduce using rule 24 (stmt -> loop .)
    COLOR_STAR      reduce using rule 24 (stmt -> loop .)
    SIZE_STAR       reduce using rule 24 (stmt -> loop .)
    SETXY           reduce using rule 24 (stmt -> loop .)
    HAND_DOWN       reduce using rule 24 (stmt -> loop .)
    HAND_UP         reduce using rule 24 (stmt -> loop .)
    GO              reduce using rule 24 (stmt -> loop .)
    LEFT            reduce using rule 24 (stmt -> loop .)
    RIGHT           reduce using rule 24 (stmt -> loop .)
    BACK            reduce using rule 24 (stmt -> loop .)
    ARC             reduce using rule 24 (stmt -> loop .)
    WHILE           reduce using rule 24 (stmt -> loop .)
    FOR             reduce using rule 24 (stmt -> loop .)
    CLOSEBRACES     reduce using rule 24 (stmt -> loop .)


state 48

    (25) stmt -> read .

    IF              reduce using rule 25 (stmt -> read .)
    PRINT           reduce using rule 25 (stmt -> read .)
    READ            reduce using rule 25 (stmt -> read .)
    ID              reduce using rule 25 (stmt -> read .)
    RETURN          reduce using rule 25 (stmt -> read .)
    REPEAT          reduce using rule 25 (stmt -> read .)
    CIRCLE          reduce using rule 25 (stmt -> read .)
    SQUARE          reduce using rule 25 (stmt -> read .)
    TRIANGLE        reduce using rule 25 (stmt -> read .)
    RECTANGLE       reduce using rule 25 (stmt -> read .)
    HIDE_STAR       reduce using rule 25 (stmt -> read .)
    SHOW_STAR       reduce using rule 25 (stmt -> read .)
    COLOR_STAR      reduce using rule 25 (stmt -> read .)
    SIZE_STAR       reduce using rule 25 (stmt -> read .)
    SETXY           reduce using rule 25 (stmt -> read .)
    HAND_DOWN       reduce using rule 25 (stmt -> read .)
    HAND_UP         reduce using rule 25 (stmt -> read .)
    GO              reduce using rule 25 (stmt -> read .)
    LEFT            reduce using rule 25 (stmt -> read .)
    RIGHT           reduce using rule 25 (stmt -> read .)
    BACK            reduce using rule 25 (stmt -> read .)
    ARC             reduce using rule 25 (stmt -> read .)
    WHILE           reduce using rule 25 (stmt -> read .)
    FOR             reduce using rule 25 (stmt -> read .)
    CLOSEBRACES     reduce using rule 25 (stmt -> read .)


state 49

    (26) stmt -> graphstmt .

    IF              reduce using rule 26 (stmt -> graphstmt .)
    PRINT           reduce using rule 26 (stmt -> graphstmt .)
    READ            reduce using rule 26 (stmt -> graphstmt .)
    ID              reduce using rule 26 (stmt -> graphstmt .)
    RETURN          reduce using rule 26 (stmt -> graphstmt .)
    REPEAT          reduce using rule 26 (stmt -> graphstmt .)
    CIRCLE          reduce using rule 26 (stmt -> graphstmt .)
    SQUARE          reduce using rule 26 (stmt -> graphstmt .)
    TRIANGLE        reduce using rule 26 (stmt -> graphstmt .)
    RECTANGLE       reduce using rule 26 (stmt -> graphstmt .)
    HIDE_STAR       reduce using rule 26 (stmt -> graphstmt .)
    SHOW_STAR       reduce using rule 26 (stmt -> graphstmt .)
    COLOR_STAR      reduce using rule 26 (stmt -> graphstmt .)
    SIZE_STAR       reduce using rule 26 (stmt -> graphstmt .)
    SETXY           reduce using rule 26 (stmt -> graphstmt .)
    HAND_DOWN       reduce using rule 26 (stmt -> graphstmt .)
    HAND_UP         reduce using rule 26 (stmt -> graphstmt .)
    GO              reduce using rule 26 (stmt -> graphstmt .)
    LEFT            reduce using rule 26 (stmt -> graphstmt .)
    RIGHT           reduce using rule 26 (stmt -> graphstmt .)
    BACK            reduce using rule 26 (stmt -> graphstmt .)
    ARC             reduce using rule 26 (stmt -> graphstmt .)
    WHILE           reduce using rule 26 (stmt -> graphstmt .)
    FOR             reduce using rule 26 (stmt -> graphstmt .)
    CLOSEBRACES     reduce using rule 26 (stmt -> graphstmt .)


state 50

    (27) stmt -> graphr .

    IF              reduce using rule 27 (stmt -> graphr .)
    PRINT           reduce using rule 27 (stmt -> graphr .)
    READ            reduce using rule 27 (stmt -> graphr .)
    ID              reduce using rule 27 (stmt -> graphr .)
    RETURN          reduce using rule 27 (stmt -> graphr .)
    REPEAT          reduce using rule 27 (stmt -> graphr .)
    CIRCLE          reduce using rule 27 (stmt -> graphr .)
    SQUARE          reduce using rule 27 (stmt -> graphr .)
    TRIANGLE        reduce using rule 27 (stmt -> graphr .)
    RECTANGLE       reduce using rule 27 (stmt -> graphr .)
    HIDE_STAR       reduce using rule 27 (stmt -> graphr .)
    SHOW_STAR       reduce using rule 27 (stmt -> graphr .)
    COLOR_STAR      reduce using rule 27 (stmt -> graphr .)
    SIZE_STAR       reduce using rule 27 (stmt -> graphr .)
    SETXY           reduce using rule 27 (stmt -> graphr .)
    HAND_DOWN       reduce using rule 27 (stmt -> graphr .)
    HAND_UP         reduce using rule 27 (stmt -> graphr .)
    GO              reduce using rule 27 (stmt -> graphr .)
    LEFT            reduce using rule 27 (stmt -> graphr .)
    RIGHT           reduce using rule 27 (stmt -> graphr .)
    BACK            reduce using rule 27 (stmt -> graphr .)
    ARC             reduce using rule 27 (stmt -> graphr .)
    WHILE           reduce using rule 27 (stmt -> graphr .)
    FOR             reduce using rule 27 (stmt -> graphr .)
    CLOSEBRACES     reduce using rule 27 (stmt -> graphr .)


state 51

    (28) stmt -> funCall . SEMICOLON

    SEMICOLON       shift and go to state 120


state 52

    (29) stmt -> return .

    IF              reduce using rule 29 (stmt -> return .)
    PRINT           reduce using rule 29 (stmt -> return .)
    READ            reduce using rule 29 (stmt -> return .)
    ID              reduce using rule 29 (stmt -> return .)
    RETURN          reduce using rule 29 (stmt -> return .)
    REPEAT          reduce using rule 29 (stmt -> return .)
    CIRCLE          reduce using rule 29 (stmt -> return .)
    SQUARE          reduce using rule 29 (stmt -> return .)
    TRIANGLE        reduce using rule 29 (stmt -> return .)
    RECTANGLE       reduce using rule 29 (stmt -> return .)
    HIDE_STAR       reduce using rule 29 (stmt -> return .)
    SHOW_STAR       reduce using rule 29 (stmt -> return .)
    COLOR_STAR      reduce using rule 29 (stmt -> return .)
    SIZE_STAR       reduce using rule 29 (stmt -> return .)
    SETXY           reduce using rule 29 (stmt -> return .)
    HAND_DOWN       reduce using rule 29 (stmt -> return .)
    HAND_UP         reduce using rule 29 (stmt -> return .)
    GO              reduce using rule 29 (stmt -> return .)
    LEFT            reduce using rule 29 (stmt -> return .)
    RIGHT           reduce using rule 29 (stmt -> return .)
    BACK            reduce using rule 29 (stmt -> return .)
    ARC             reduce using rule 29 (stmt -> return .)
    WHILE           reduce using rule 29 (stmt -> return .)
    FOR             reduce using rule 29 (stmt -> return .)
    CLOSEBRACES     reduce using rule 29 (stmt -> return .)


state 53

    (30) assignment -> id . assignment1 equals assignment3 SEMICOLON
    (31) assignment1 -> . assignment2
    (32) assignment1 -> . assignment2 assignment1
    (33) assignment1 -> . empty
    (34) assignment2 -> . OPENBRACKET exp CLOSEBRACKET
    (154) empty -> .

    OPENBRACKET     shift and go to state 124
    EQUALS          reduce using rule 154 (empty -> .)

    assignment1                    shift and go to state 121
    assignment2                    shift and go to state 122
    empty                          shift and go to state 123

state 54

    (87) condition -> IF . head_cond body condition1
    (93) head_cond -> . OPENPAREN expression close_condition

    OPENPAREN       shift and go to state 126

    head_cond                      shift and go to state 125

state 55

    (62) print -> PRINT . OPENPAREN expression CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 127


state 56

    (19) loop -> while .

    IF              reduce using rule 19 (loop -> while .)
    PRINT           reduce using rule 19 (loop -> while .)
    READ            reduce using rule 19 (loop -> while .)
    ID              reduce using rule 19 (loop -> while .)
    RETURN          reduce using rule 19 (loop -> while .)
    REPEAT          reduce using rule 19 (loop -> while .)
    CIRCLE          reduce using rule 19 (loop -> while .)
    SQUARE          reduce using rule 19 (loop -> while .)
    TRIANGLE        reduce using rule 19 (loop -> while .)
    RECTANGLE       reduce using rule 19 (loop -> while .)
    HIDE_STAR       reduce using rule 19 (loop -> while .)
    SHOW_STAR       reduce using rule 19 (loop -> while .)
    COLOR_STAR      reduce using rule 19 (loop -> while .)
    SIZE_STAR       reduce using rule 19 (loop -> while .)
    SETXY           reduce using rule 19 (loop -> while .)
    HAND_DOWN       reduce using rule 19 (loop -> while .)
    HAND_UP         reduce using rule 19 (loop -> while .)
    GO              reduce using rule 19 (loop -> while .)
    LEFT            reduce using rule 19 (loop -> while .)
    RIGHT           reduce using rule 19 (loop -> while .)
    BACK            reduce using rule 19 (loop -> while .)
    ARC             reduce using rule 19 (loop -> while .)
    WHILE           reduce using rule 19 (loop -> while .)
    FOR             reduce using rule 19 (loop -> while .)
    CLOSEBRACES     reduce using rule 19 (loop -> while .)


state 57

    (20) loop -> for .

    IF              reduce using rule 20 (loop -> for .)
    PRINT           reduce using rule 20 (loop -> for .)
    READ            reduce using rule 20 (loop -> for .)
    ID              reduce using rule 20 (loop -> for .)
    RETURN          reduce using rule 20 (loop -> for .)
    REPEAT          reduce using rule 20 (loop -> for .)
    CIRCLE          reduce using rule 20 (loop -> for .)
    SQUARE          reduce using rule 20 (loop -> for .)
    TRIANGLE        reduce using rule 20 (loop -> for .)
    RECTANGLE       reduce using rule 20 (loop -> for .)
    HIDE_STAR       reduce using rule 20 (loop -> for .)
    SHOW_STAR       reduce using rule 20 (loop -> for .)
    COLOR_STAR      reduce using rule 20 (loop -> for .)
    SIZE_STAR       reduce using rule 20 (loop -> for .)
    SETXY           reduce using rule 20 (loop -> for .)
    HAND_DOWN       reduce using rule 20 (loop -> for .)
    HAND_UP         reduce using rule 20 (loop -> for .)
    GO              reduce using rule 20 (loop -> for .)
    LEFT            reduce using rule 20 (loop -> for .)
    RIGHT           reduce using rule 20 (loop -> for .)
    BACK            reduce using rule 20 (loop -> for .)
    ARC             reduce using rule 20 (loop -> for .)
    WHILE           reduce using rule 20 (loop -> for .)
    FOR             reduce using rule 20 (loop -> for .)
    CLOSEBRACES     reduce using rule 20 (loop -> for .)


state 58

    (63) read -> READ . OPENPAREN id read1 CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 128


state 59

    (108) graphstmt -> graphfig .

    IF              reduce using rule 108 (graphstmt -> graphfig .)
    PRINT           reduce using rule 108 (graphstmt -> graphfig .)
    READ            reduce using rule 108 (graphstmt -> graphfig .)
    ID              reduce using rule 108 (graphstmt -> graphfig .)
    RETURN          reduce using rule 108 (graphstmt -> graphfig .)
    REPEAT          reduce using rule 108 (graphstmt -> graphfig .)
    CIRCLE          reduce using rule 108 (graphstmt -> graphfig .)
    SQUARE          reduce using rule 108 (graphstmt -> graphfig .)
    TRIANGLE        reduce using rule 108 (graphstmt -> graphfig .)
    RECTANGLE       reduce using rule 108 (graphstmt -> graphfig .)
    HIDE_STAR       reduce using rule 108 (graphstmt -> graphfig .)
    SHOW_STAR       reduce using rule 108 (graphstmt -> graphfig .)
    COLOR_STAR      reduce using rule 108 (graphstmt -> graphfig .)
    SIZE_STAR       reduce using rule 108 (graphstmt -> graphfig .)
    SETXY           reduce using rule 108 (graphstmt -> graphfig .)
    HAND_DOWN       reduce using rule 108 (graphstmt -> graphfig .)
    HAND_UP         reduce using rule 108 (graphstmt -> graphfig .)
    GO              reduce using rule 108 (graphstmt -> graphfig .)
    LEFT            reduce using rule 108 (graphstmt -> graphfig .)
    RIGHT           reduce using rule 108 (graphstmt -> graphfig .)
    BACK            reduce using rule 108 (graphstmt -> graphfig .)
    ARC             reduce using rule 108 (graphstmt -> graphfig .)
    WHILE           reduce using rule 108 (graphstmt -> graphfig .)
    FOR             reduce using rule 108 (graphstmt -> graphfig .)
    CLOSEBRACES     reduce using rule 108 (graphstmt -> graphfig .)


state 60

    (109) graphstmt -> graphview .

    IF              reduce using rule 109 (graphstmt -> graphview .)
    PRINT           reduce using rule 109 (graphstmt -> graphview .)
    READ            reduce using rule 109 (graphstmt -> graphview .)
    ID              reduce using rule 109 (graphstmt -> graphview .)
    RETURN          reduce using rule 109 (graphstmt -> graphview .)
    REPEAT          reduce using rule 109 (graphstmt -> graphview .)
    CIRCLE          reduce using rule 109 (graphstmt -> graphview .)
    SQUARE          reduce using rule 109 (graphstmt -> graphview .)
    TRIANGLE        reduce using rule 109 (graphstmt -> graphview .)
    RECTANGLE       reduce using rule 109 (graphstmt -> graphview .)
    HIDE_STAR       reduce using rule 109 (graphstmt -> graphview .)
    SHOW_STAR       reduce using rule 109 (graphstmt -> graphview .)
    COLOR_STAR      reduce using rule 109 (graphstmt -> graphview .)
    SIZE_STAR       reduce using rule 109 (graphstmt -> graphview .)
    SETXY           reduce using rule 109 (graphstmt -> graphview .)
    HAND_DOWN       reduce using rule 109 (graphstmt -> graphview .)
    HAND_UP         reduce using rule 109 (graphstmt -> graphview .)
    GO              reduce using rule 109 (graphstmt -> graphview .)
    LEFT            reduce using rule 109 (graphstmt -> graphview .)
    RIGHT           reduce using rule 109 (graphstmt -> graphview .)
    BACK            reduce using rule 109 (graphstmt -> graphview .)
    ARC             reduce using rule 109 (graphstmt -> graphview .)
    WHILE           reduce using rule 109 (graphstmt -> graphview .)
    FOR             reduce using rule 109 (graphstmt -> graphview .)
    CLOSEBRACES     reduce using rule 109 (graphstmt -> graphview .)


state 61

    (110) graphstmt -> graphmove .

    IF              reduce using rule 110 (graphstmt -> graphmove .)
    PRINT           reduce using rule 110 (graphstmt -> graphmove .)
    READ            reduce using rule 110 (graphstmt -> graphmove .)
    ID              reduce using rule 110 (graphstmt -> graphmove .)
    RETURN          reduce using rule 110 (graphstmt -> graphmove .)
    REPEAT          reduce using rule 110 (graphstmt -> graphmove .)
    CIRCLE          reduce using rule 110 (graphstmt -> graphmove .)
    SQUARE          reduce using rule 110 (graphstmt -> graphmove .)
    TRIANGLE        reduce using rule 110 (graphstmt -> graphmove .)
    RECTANGLE       reduce using rule 110 (graphstmt -> graphmove .)
    HIDE_STAR       reduce using rule 110 (graphstmt -> graphmove .)
    SHOW_STAR       reduce using rule 110 (graphstmt -> graphmove .)
    COLOR_STAR      reduce using rule 110 (graphstmt -> graphmove .)
    SIZE_STAR       reduce using rule 110 (graphstmt -> graphmove .)
    SETXY           reduce using rule 110 (graphstmt -> graphmove .)
    HAND_DOWN       reduce using rule 110 (graphstmt -> graphmove .)
    HAND_UP         reduce using rule 110 (graphstmt -> graphmove .)
    GO              reduce using rule 110 (graphstmt -> graphmove .)
    LEFT            reduce using rule 110 (graphstmt -> graphmove .)
    RIGHT           reduce using rule 110 (graphstmt -> graphmove .)
    BACK            reduce using rule 110 (graphstmt -> graphmove .)
    ARC             reduce using rule 110 (graphstmt -> graphmove .)
    WHILE           reduce using rule 110 (graphstmt -> graphmove .)
    FOR             reduce using rule 110 (graphstmt -> graphmove .)
    CLOSEBRACES     reduce using rule 110 (graphstmt -> graphmove .)


state 62

    (127) graphr -> repeat . rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (130) rep -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 130

    rep                            shift and go to state 129

state 63

    (69) funCall -> ID . iniciaFunCall funCall2 terminaFunCall
    (68) id -> ID .
    (70) iniciaFunCall -> . OPENPAREN

    OPENBRACKET     reduce using rule 68 (id -> ID .)
    EQUALS          reduce using rule 68 (id -> ID .)
    OPENPAREN       shift and go to state 132

    iniciaFunCall                  shift and go to state 131

state 64

    (80) return -> RETURN . return1 SEMICOLON
    (81) return1 -> . vcte
    (82) return1 -> . exp
    (37) vcte -> . cte_int
    (38) vcte -> . cte_float
    (39) vcte -> . cte_string
    (40) vcte -> . id vcte1
    (41) vcte -> . funCall
    (142) exp -> . term
    (143) exp -> . term exp_o exp
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (148) term -> . factor term_o term
    (149) term -> . factor
    (152) factor -> . vcte
    (153) factor -> . openP expression closeP
    (146) openP -> . OPENPAREN

    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    ID              shift and go to state 102
    OPENPAREN       shift and go to state 113

    return1                        shift and go to state 133
    vcte                           shift and go to state 134
    exp                            shift and go to state 135
    cte_int                        shift and go to state 108
    cte_float                      shift and go to state 109
    cte_string                     shift and go to state 110
    id                             shift and go to state 111
    funCall                        shift and go to state 112
    term                           shift and go to state 104
    factor                         shift and go to state 105
    openP                          shift and go to state 107

state 65

    (103) while -> while1 . body
    (94) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 137

    body                           shift and go to state 136

state 66

    (98) for -> for1 . body
    (94) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 137

    body                           shift and go to state 138

state 67

    (111) graphfig -> graphfig1 . SEMICOLON

    SEMICOLON       shift and go to state 139


state 68

    (112) graphfig -> graphfig2 . SEMICOLON

    SEMICOLON       shift and go to state 140


state 69

    (132) graphview -> graphview0 . SEMICOLON

    SEMICOLON       shift and go to state 141


state 70

    (133) graphview -> graphview1 . SEMICOLON

    SEMICOLON       shift and go to state 142


state 71

    (134) graphview -> graphview2 . SEMICOLON

    SEMICOLON       shift and go to state 143


state 72

    (117) graphmove -> graphmove0 . SEMICOLON

    SEMICOLON       shift and go to state 144


state 73

    (118) graphmove -> graphmove1 . SEMICOLON

    SEMICOLON       shift and go to state 145


state 74

    (119) graphmove -> graphmove2 . SEMICOLON

    SEMICOLON       shift and go to state 146


state 75

    (131) repeat -> REPEAT .

    OPENPAREN       reduce using rule 131 (repeat -> REPEAT .)


state 76

    (104) while1 -> while_w . OPENPAREN expression CLOSEPAREN

    OPENPAREN       shift and go to state 147


state 77

    (99) for1 -> forInit . OPENPAREN ID for2

    OPENPAREN       shift and go to state 148


state 78

    (113) graphfig1 -> CIRCLE . unaExp
    (107) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 150

    unaExp                         shift and go to state 149

state 79

    (114) graphfig1 -> SQUARE . unaExp
    (107) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 150

    unaExp                         shift and go to state 151

state 80

    (115) graphfig2 -> TRIANGLE . dosExp
    (106) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 153

    dosExp                         shift and go to state 152

state 81

    (116) graphfig2 -> RECTANGLE . dosExp
    (106) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 153

    dosExp                         shift and go to state 154

state 82

    (135) graphview0 -> HIDE_STAR .

    SEMICOLON       reduce using rule 135 (graphview0 -> HIDE_STAR .)


state 83

    (136) graphview0 -> SHOW_STAR .

    SEMICOLON       reduce using rule 136 (graphview0 -> SHOW_STAR .)


state 84

    (137) graphview1 -> COLOR_STAR . unaExp
    (107) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 150

    unaExp                         shift and go to state 155

state 85

    (138) graphview1 -> SIZE_STAR . unaExp
    (107) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 150

    unaExp                         shift and go to state 156

state 86

    (139) graphview2 -> SETXY . dosExp
    (106) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 153

    dosExp                         shift and go to state 157

state 87

    (120) graphmove0 -> HAND_DOWN .

    SEMICOLON       reduce using rule 120 (graphmove0 -> HAND_DOWN .)


state 88

    (121) graphmove0 -> HAND_UP .

    SEMICOLON       reduce using rule 121 (graphmove0 -> HAND_UP .)


state 89

    (122) graphmove1 -> GO . unaExp
    (107) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 150

    unaExp                         shift and go to state 158

state 90

    (123) graphmove1 -> LEFT . unaExp
    (107) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 150

    unaExp                         shift and go to state 159

state 91

    (124) graphmove1 -> RIGHT . unaExp
    (107) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 150

    unaExp                         shift and go to state 160

state 92

    (125) graphmove1 -> BACK . unaExp
    (107) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 150

    unaExp                         shift and go to state 161

state 93

    (126) graphmove2 -> ARC . dosExp
    (106) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 153

    dosExp                         shift and go to state 162

state 94

    (105) while_w -> WHILE .

    OPENPAREN       reduce using rule 105 (while_w -> WHILE .)


state 95

    (102) forInit -> FOR .

    OPENPAREN       reduce using rule 102 (forInit -> FOR .)


state 96

    (48) function -> FUN functionI function2 inicia_fun . declara_vars function4 termina_fun
    (11) declara_vars -> . vars declara_vars
    (12) declara_vars -> . empty
    (13) vars -> . type ID vars1 equals exp SEMICOLON
    (14) vars -> . type ID vars1 SEMICOLON
    (154) empty -> .
    (59) type -> . INT
    (60) type -> . FLOAT
    (61) type -> . STRING

    IF              reduce using rule 154 (empty -> .)
    PRINT           reduce using rule 154 (empty -> .)
    READ            reduce using rule 154 (empty -> .)
    ID              reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)
    REPEAT          reduce using rule 154 (empty -> .)
    CIRCLE          reduce using rule 154 (empty -> .)
    SQUARE          reduce using rule 154 (empty -> .)
    TRIANGLE        reduce using rule 154 (empty -> .)
    RECTANGLE       reduce using rule 154 (empty -> .)
    HIDE_STAR       reduce using rule 154 (empty -> .)
    SHOW_STAR       reduce using rule 154 (empty -> .)
    COLOR_STAR      reduce using rule 154 (empty -> .)
    SIZE_STAR       reduce using rule 154 (empty -> .)
    SETXY           reduce using rule 154 (empty -> .)
    HAND_DOWN       reduce using rule 154 (empty -> .)
    HAND_UP         reduce using rule 154 (empty -> .)
    GO              reduce using rule 154 (empty -> .)
    LEFT            reduce using rule 154 (empty -> .)
    RIGHT           reduce using rule 154 (empty -> .)
    BACK            reduce using rule 154 (empty -> .)
    ARC             reduce using rule 154 (empty -> .)
    WHILE           reduce using rule 154 (empty -> .)
    FOR             reduce using rule 154 (empty -> .)
    CLOSEBRACES     reduce using rule 154 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    STRING          shift and go to state 12

    declara_vars                   shift and go to state 163
    vars                           shift and go to state 7
    empty                          shift and go to state 8
    type                           shift and go to state 9

state 97

    (49) inicia_fun -> OPENBRACES .

    INT             reduce using rule 49 (inicia_fun -> OPENBRACES .)
    FLOAT           reduce using rule 49 (inicia_fun -> OPENBRACES .)
    STRING          reduce using rule 49 (inicia_fun -> OPENBRACES .)
    IF              reduce using rule 49 (inicia_fun -> OPENBRACES .)
    PRINT           reduce using rule 49 (inicia_fun -> OPENBRACES .)
    READ            reduce using rule 49 (inicia_fun -> OPENBRACES .)
    ID              reduce using rule 49 (inicia_fun -> OPENBRACES .)
    RETURN          reduce using rule 49 (inicia_fun -> OPENBRACES .)
    REPEAT          reduce using rule 49 (inicia_fun -> OPENBRACES .)
    CIRCLE          reduce using rule 49 (inicia_fun -> OPENBRACES .)
    SQUARE          reduce using rule 49 (inicia_fun -> OPENBRACES .)
    TRIANGLE        reduce using rule 49 (inicia_fun -> OPENBRACES .)
    RECTANGLE       reduce using rule 49 (inicia_fun -> OPENBRACES .)
    HIDE_STAR       reduce using rule 49 (inicia_fun -> OPENBRACES .)
    SHOW_STAR       reduce using rule 49 (inicia_fun -> OPENBRACES .)
    COLOR_STAR      reduce using rule 49 (inicia_fun -> OPENBRACES .)
    SIZE_STAR       reduce using rule 49 (inicia_fun -> OPENBRACES .)
    SETXY           reduce using rule 49 (inicia_fun -> OPENBRACES .)
    HAND_DOWN       reduce using rule 49 (inicia_fun -> OPENBRACES .)
    HAND_UP         reduce using rule 49 (inicia_fun -> OPENBRACES .)
    GO              reduce using rule 49 (inicia_fun -> OPENBRACES .)
    LEFT            reduce using rule 49 (inicia_fun -> OPENBRACES .)
    RIGHT           reduce using rule 49 (inicia_fun -> OPENBRACES .)
    BACK            reduce using rule 49 (inicia_fun -> OPENBRACES .)
    ARC             reduce using rule 49 (inicia_fun -> OPENBRACES .)
    WHILE           reduce using rule 49 (inicia_fun -> OPENBRACES .)
    FOR             reduce using rule 49 (inicia_fun -> OPENBRACES .)
    CLOSEBRACES     reduce using rule 49 (inicia_fun -> OPENBRACES .)


state 98

    (51) function2 -> OPENPAREN function3 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 164


state 99

    (52) function3 -> funParam . function5
    (56) function5 -> . COMMA funParam function5
    (57) function5 -> . empty
    (154) empty -> .

    COMMA           shift and go to state 166
    CLOSEPAREN      reduce using rule 154 (empty -> .)

    function5                      shift and go to state 165
    empty                          shift and go to state 167

state 100

    (53) function3 -> empty .

    CLOSEPAREN      reduce using rule 53 (function3 -> empty .)


state 101

    (58) funParam -> type . ID

    ID              shift and go to state 168


state 102

    (68) id -> ID .
    (69) funCall -> ID . iniciaFunCall funCall2 terminaFunCall
    (70) iniciaFunCall -> . OPENPAREN

    OPENBRACKET     reduce using rule 68 (id -> ID .)
    MULTIPLICATION  reduce using rule 68 (id -> ID .)
    DIVISION        reduce using rule 68 (id -> ID .)
    ADDITION        reduce using rule 68 (id -> ID .)
    SUBSTRACTION    reduce using rule 68 (id -> ID .)
    SEMICOLON       reduce using rule 68 (id -> ID .)
    GREATER         reduce using rule 68 (id -> ID .)
    LESS            reduce using rule 68 (id -> ID .)
    NOTEQUAL        reduce using rule 68 (id -> ID .)
    ISEQUAL         reduce using rule 68 (id -> ID .)
    CLOSEPAREN      reduce using rule 68 (id -> ID .)
    CLOSEBRACKET    reduce using rule 68 (id -> ID .)
    COMMA           reduce using rule 68 (id -> ID .)
    OPENPAREN       shift and go to state 132

    iniciaFunCall                  shift and go to state 131

state 103

    (13) vars -> type ID vars1 equals exp . SEMICOLON

    SEMICOLON       shift and go to state 169


state 104

    (142) exp -> term .
    (143) exp -> term . exp_o exp
    (144) exp_o -> . ADDITION
    (145) exp_o -> . SUBSTRACTION

    SEMICOLON       reduce using rule 142 (exp -> term .)
    GREATER         reduce using rule 142 (exp -> term .)
    LESS            reduce using rule 142 (exp -> term .)
    NOTEQUAL        reduce using rule 142 (exp -> term .)
    ISEQUAL         reduce using rule 142 (exp -> term .)
    CLOSEPAREN      reduce using rule 142 (exp -> term .)
    CLOSEBRACKET    reduce using rule 142 (exp -> term .)
    COMMA           reduce using rule 142 (exp -> term .)
    ADDITION        shift and go to state 171
    SUBSTRACTION    shift and go to state 172

    exp_o                          shift and go to state 170

state 105

    (148) term -> factor . term_o term
    (149) term -> factor .
    (150) term_o -> . MULTIPLICATION
    (151) term_o -> . DIVISION

    ADDITION        reduce using rule 149 (term -> factor .)
    SUBSTRACTION    reduce using rule 149 (term -> factor .)
    SEMICOLON       reduce using rule 149 (term -> factor .)
    GREATER         reduce using rule 149 (term -> factor .)
    LESS            reduce using rule 149 (term -> factor .)
    NOTEQUAL        reduce using rule 149 (term -> factor .)
    ISEQUAL         reduce using rule 149 (term -> factor .)
    CLOSEPAREN      reduce using rule 149 (term -> factor .)
    CLOSEBRACKET    reduce using rule 149 (term -> factor .)
    COMMA           reduce using rule 149 (term -> factor .)
    MULTIPLICATION  shift and go to state 174
    DIVISION        shift and go to state 175

    term_o                         shift and go to state 173

state 106

    (152) factor -> vcte .

    MULTIPLICATION  reduce using rule 152 (factor -> vcte .)
    DIVISION        reduce using rule 152 (factor -> vcte .)
    ADDITION        reduce using rule 152 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 152 (factor -> vcte .)
    SEMICOLON       reduce using rule 152 (factor -> vcte .)
    GREATER         reduce using rule 152 (factor -> vcte .)
    LESS            reduce using rule 152 (factor -> vcte .)
    NOTEQUAL        reduce using rule 152 (factor -> vcte .)
    ISEQUAL         reduce using rule 152 (factor -> vcte .)
    CLOSEPAREN      reduce using rule 152 (factor -> vcte .)
    CLOSEBRACKET    reduce using rule 152 (factor -> vcte .)
    COMMA           reduce using rule 152 (factor -> vcte .)


state 107

    (153) factor -> openP . expression closeP
    (140) expression -> . exp loper exp
    (141) expression -> . exp
    (142) exp -> . term
    (143) exp -> . term exp_o exp
    (148) term -> . factor term_o term
    (149) term -> . factor
    (152) factor -> . vcte
    (153) factor -> . openP expression closeP
    (37) vcte -> . cte_int
    (38) vcte -> . cte_float
    (39) vcte -> . cte_string
    (40) vcte -> . id vcte1
    (41) vcte -> . funCall
    (146) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 113
    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    ID              shift and go to state 102

    openP                          shift and go to state 107
    expression                     shift and go to state 176
    exp                            shift and go to state 177
    term                           shift and go to state 104
    factor                         shift and go to state 105
    vcte                           shift and go to state 106
    cte_int                        shift and go to state 108
    cte_float                      shift and go to state 109
    cte_string                     shift and go to state 110
    id                             shift and go to state 111
    funCall                        shift and go to state 112

state 108

    (37) vcte -> cte_int .

    MULTIPLICATION  reduce using rule 37 (vcte -> cte_int .)
    DIVISION        reduce using rule 37 (vcte -> cte_int .)
    ADDITION        reduce using rule 37 (vcte -> cte_int .)
    SUBSTRACTION    reduce using rule 37 (vcte -> cte_int .)
    SEMICOLON       reduce using rule 37 (vcte -> cte_int .)
    GREATER         reduce using rule 37 (vcte -> cte_int .)
    LESS            reduce using rule 37 (vcte -> cte_int .)
    NOTEQUAL        reduce using rule 37 (vcte -> cte_int .)
    ISEQUAL         reduce using rule 37 (vcte -> cte_int .)
    CLOSEPAREN      reduce using rule 37 (vcte -> cte_int .)
    CLOSEBRACKET    reduce using rule 37 (vcte -> cte_int .)
    COMMA           reduce using rule 37 (vcte -> cte_int .)


state 109

    (38) vcte -> cte_float .

    MULTIPLICATION  reduce using rule 38 (vcte -> cte_float .)
    DIVISION        reduce using rule 38 (vcte -> cte_float .)
    ADDITION        reduce using rule 38 (vcte -> cte_float .)
    SUBSTRACTION    reduce using rule 38 (vcte -> cte_float .)
    SEMICOLON       reduce using rule 38 (vcte -> cte_float .)
    GREATER         reduce using rule 38 (vcte -> cte_float .)
    LESS            reduce using rule 38 (vcte -> cte_float .)
    NOTEQUAL        reduce using rule 38 (vcte -> cte_float .)
    ISEQUAL         reduce using rule 38 (vcte -> cte_float .)
    CLOSEPAREN      reduce using rule 38 (vcte -> cte_float .)
    CLOSEBRACKET    reduce using rule 38 (vcte -> cte_float .)
    COMMA           reduce using rule 38 (vcte -> cte_float .)


state 110

    (39) vcte -> cte_string .

    MULTIPLICATION  reduce using rule 39 (vcte -> cte_string .)
    DIVISION        reduce using rule 39 (vcte -> cte_string .)
    ADDITION        reduce using rule 39 (vcte -> cte_string .)
    SUBSTRACTION    reduce using rule 39 (vcte -> cte_string .)
    SEMICOLON       reduce using rule 39 (vcte -> cte_string .)
    GREATER         reduce using rule 39 (vcte -> cte_string .)
    LESS            reduce using rule 39 (vcte -> cte_string .)
    NOTEQUAL        reduce using rule 39 (vcte -> cte_string .)
    ISEQUAL         reduce using rule 39 (vcte -> cte_string .)
    CLOSEPAREN      reduce using rule 39 (vcte -> cte_string .)
    CLOSEBRACKET    reduce using rule 39 (vcte -> cte_string .)
    COMMA           reduce using rule 39 (vcte -> cte_string .)


state 111

    (40) vcte -> id . vcte1
    (42) vcte1 -> . OPENBRACKET exp CLOSEBRACKET vcte3
    (43) vcte1 -> . empty
    (154) empty -> .

    OPENBRACKET     shift and go to state 179
    MULTIPLICATION  reduce using rule 154 (empty -> .)
    DIVISION        reduce using rule 154 (empty -> .)
    ADDITION        reduce using rule 154 (empty -> .)
    SUBSTRACTION    reduce using rule 154 (empty -> .)
    SEMICOLON       reduce using rule 154 (empty -> .)
    GREATER         reduce using rule 154 (empty -> .)
    LESS            reduce using rule 154 (empty -> .)
    NOTEQUAL        reduce using rule 154 (empty -> .)
    ISEQUAL         reduce using rule 154 (empty -> .)
    CLOSEPAREN      reduce using rule 154 (empty -> .)
    CLOSEBRACKET    reduce using rule 154 (empty -> .)
    COMMA           reduce using rule 154 (empty -> .)

    vcte1                          shift and go to state 178
    empty                          shift and go to state 180

state 112

    (41) vcte -> funCall .

    MULTIPLICATION  reduce using rule 41 (vcte -> funCall .)
    DIVISION        reduce using rule 41 (vcte -> funCall .)
    ADDITION        reduce using rule 41 (vcte -> funCall .)
    SUBSTRACTION    reduce using rule 41 (vcte -> funCall .)
    SEMICOLON       reduce using rule 41 (vcte -> funCall .)
    GREATER         reduce using rule 41 (vcte -> funCall .)
    LESS            reduce using rule 41 (vcte -> funCall .)
    NOTEQUAL        reduce using rule 41 (vcte -> funCall .)
    ISEQUAL         reduce using rule 41 (vcte -> funCall .)
    CLOSEPAREN      reduce using rule 41 (vcte -> funCall .)
    CLOSEBRACKET    reduce using rule 41 (vcte -> funCall .)
    COMMA           reduce using rule 41 (vcte -> funCall .)


state 113

    (146) openP -> OPENPAREN .

    OPENPAREN       reduce using rule 146 (openP -> OPENPAREN .)
    CTEINT          reduce using rule 146 (openP -> OPENPAREN .)
    CTEFLOAT        reduce using rule 146 (openP -> OPENPAREN .)
    CTESTRING       reduce using rule 146 (openP -> OPENPAREN .)
    ID              reduce using rule 146 (openP -> OPENPAREN .)


state 114

    (77) cte_int -> CTEINT .

    MULTIPLICATION  reduce using rule 77 (cte_int -> CTEINT .)
    DIVISION        reduce using rule 77 (cte_int -> CTEINT .)
    ADDITION        reduce using rule 77 (cte_int -> CTEINT .)
    SUBSTRACTION    reduce using rule 77 (cte_int -> CTEINT .)
    SEMICOLON       reduce using rule 77 (cte_int -> CTEINT .)
    GREATER         reduce using rule 77 (cte_int -> CTEINT .)
    LESS            reduce using rule 77 (cte_int -> CTEINT .)
    NOTEQUAL        reduce using rule 77 (cte_int -> CTEINT .)
    ISEQUAL         reduce using rule 77 (cte_int -> CTEINT .)
    CLOSEPAREN      reduce using rule 77 (cte_int -> CTEINT .)
    CLOSEBRACKET    reduce using rule 77 (cte_int -> CTEINT .)
    COMMA           reduce using rule 77 (cte_int -> CTEINT .)


state 115

    (78) cte_float -> CTEFLOAT .

    MULTIPLICATION  reduce using rule 78 (cte_float -> CTEFLOAT .)
    DIVISION        reduce using rule 78 (cte_float -> CTEFLOAT .)
    ADDITION        reduce using rule 78 (cte_float -> CTEFLOAT .)
    SUBSTRACTION    reduce using rule 78 (cte_float -> CTEFLOAT .)
    SEMICOLON       reduce using rule 78 (cte_float -> CTEFLOAT .)
    GREATER         reduce using rule 78 (cte_float -> CTEFLOAT .)
    LESS            reduce using rule 78 (cte_float -> CTEFLOAT .)
    NOTEQUAL        reduce using rule 78 (cte_float -> CTEFLOAT .)
    ISEQUAL         reduce using rule 78 (cte_float -> CTEFLOAT .)
    CLOSEPAREN      reduce using rule 78 (cte_float -> CTEFLOAT .)
    CLOSEBRACKET    reduce using rule 78 (cte_float -> CTEFLOAT .)
    COMMA           reduce using rule 78 (cte_float -> CTEFLOAT .)


state 116

    (79) cte_string -> CTESTRING .

    MULTIPLICATION  reduce using rule 79 (cte_string -> CTESTRING .)
    DIVISION        reduce using rule 79 (cte_string -> CTESTRING .)
    ADDITION        reduce using rule 79 (cte_string -> CTESTRING .)
    SUBSTRACTION    reduce using rule 79 (cte_string -> CTESTRING .)
    SEMICOLON       reduce using rule 79 (cte_string -> CTESTRING .)
    GREATER         reduce using rule 79 (cte_string -> CTESTRING .)
    LESS            reduce using rule 79 (cte_string -> CTESTRING .)
    NOTEQUAL        reduce using rule 79 (cte_string -> CTESTRING .)
    ISEQUAL         reduce using rule 79 (cte_string -> CTESTRING .)
    CLOSEPAREN      reduce using rule 79 (cte_string -> CTESTRING .)
    CLOSEBRACKET    reduce using rule 79 (cte_string -> CTESTRING .)
    COMMA           reduce using rule 79 (cte_string -> CTESTRING .)


state 117

    (15) vars1 -> OPENBRACKET CTEINT CLOSEBRACKET . vars3
    (17) vars3 -> . OPENBRACKET CTEINT CLOSEBRACKET
    (18) vars3 -> . empty
    (154) empty -> .

    OPENBRACKET     shift and go to state 181
    SEMICOLON       reduce using rule 154 (empty -> .)
    EQUALS          reduce using rule 154 (empty -> .)

    vars3                          shift and go to state 182
    empty                          shift and go to state 183

state 118

    (6) star -> starI declara_vars star1 CLOSEBRACES .

    $end            reduce using rule 6 (star -> starI declara_vars star1 CLOSEBRACES .)


state 119

    (9) star1 -> stmt star1 .

    CLOSEBRACES     reduce using rule 9 (star1 -> stmt star1 .)


state 120

    (28) stmt -> funCall SEMICOLON .

    IF              reduce using rule 28 (stmt -> funCall SEMICOLON .)
    PRINT           reduce using rule 28 (stmt -> funCall SEMICOLON .)
    READ            reduce using rule 28 (stmt -> funCall SEMICOLON .)
    ID              reduce using rule 28 (stmt -> funCall SEMICOLON .)
    RETURN          reduce using rule 28 (stmt -> funCall SEMICOLON .)
    REPEAT          reduce using rule 28 (stmt -> funCall SEMICOLON .)
    CIRCLE          reduce using rule 28 (stmt -> funCall SEMICOLON .)
    SQUARE          reduce using rule 28 (stmt -> funCall SEMICOLON .)
    TRIANGLE        reduce using rule 28 (stmt -> funCall SEMICOLON .)
    RECTANGLE       reduce using rule 28 (stmt -> funCall SEMICOLON .)
    HIDE_STAR       reduce using rule 28 (stmt -> funCall SEMICOLON .)
    SHOW_STAR       reduce using rule 28 (stmt -> funCall SEMICOLON .)
    COLOR_STAR      reduce using rule 28 (stmt -> funCall SEMICOLON .)
    SIZE_STAR       reduce using rule 28 (stmt -> funCall SEMICOLON .)
    SETXY           reduce using rule 28 (stmt -> funCall SEMICOLON .)
    HAND_DOWN       reduce using rule 28 (stmt -> funCall SEMICOLON .)
    HAND_UP         reduce using rule 28 (stmt -> funCall SEMICOLON .)
    GO              reduce using rule 28 (stmt -> funCall SEMICOLON .)
    LEFT            reduce using rule 28 (stmt -> funCall SEMICOLON .)
    RIGHT           reduce using rule 28 (stmt -> funCall SEMICOLON .)
    BACK            reduce using rule 28 (stmt -> funCall SEMICOLON .)
    ARC             reduce using rule 28 (stmt -> funCall SEMICOLON .)
    WHILE           reduce using rule 28 (stmt -> funCall SEMICOLON .)
    FOR             reduce using rule 28 (stmt -> funCall SEMICOLON .)
    CLOSEBRACES     reduce using rule 28 (stmt -> funCall SEMICOLON .)


state 121

    (30) assignment -> id assignment1 . equals assignment3 SEMICOLON
    (67) equals -> . EQUALS

    EQUALS          shift and go to state 39

    equals                         shift and go to state 184

state 122

    (31) assignment1 -> assignment2 .
    (32) assignment1 -> assignment2 . assignment1
    (31) assignment1 -> . assignment2
    (32) assignment1 -> . assignment2 assignment1
    (33) assignment1 -> . empty
    (34) assignment2 -> . OPENBRACKET exp CLOSEBRACKET
    (154) empty -> .

  ! reduce/reduce conflict for EQUALS resolved using rule 31 (assignment1 -> assignment2 .)
    EQUALS          reduce using rule 31 (assignment1 -> assignment2 .)
    OPENBRACKET     shift and go to state 124

  ! EQUALS          [ reduce using rule 154 (empty -> .) ]

    assignment2                    shift and go to state 122
    assignment1                    shift and go to state 185
    empty                          shift and go to state 123

state 123

    (33) assignment1 -> empty .

    EQUALS          reduce using rule 33 (assignment1 -> empty .)


state 124

    (34) assignment2 -> OPENBRACKET . exp CLOSEBRACKET
    (142) exp -> . term
    (143) exp -> . term exp_o exp
    (148) term -> . factor term_o term
    (149) term -> . factor
    (152) factor -> . vcte
    (153) factor -> . openP expression closeP
    (37) vcte -> . cte_int
    (38) vcte -> . cte_float
    (39) vcte -> . cte_string
    (40) vcte -> . id vcte1
    (41) vcte -> . funCall
    (146) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 113
    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    ID              shift and go to state 102

    exp                            shift and go to state 186
    term                           shift and go to state 104
    factor                         shift and go to state 105
    vcte                           shift and go to state 106
    openP                          shift and go to state 107
    cte_int                        shift and go to state 108
    cte_float                      shift and go to state 109
    cte_string                     shift and go to state 110
    id                             shift and go to state 111
    funCall                        shift and go to state 112

state 125

    (87) condition -> IF head_cond . body condition1
    (94) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 137

    body                           shift and go to state 187

state 126

    (93) head_cond -> OPENPAREN . expression close_condition
    (140) expression -> . exp loper exp
    (141) expression -> . exp
    (142) exp -> . term
    (143) exp -> . term exp_o exp
    (148) term -> . factor term_o term
    (149) term -> . factor
    (152) factor -> . vcte
    (153) factor -> . openP expression closeP
    (37) vcte -> . cte_int
    (38) vcte -> . cte_float
    (39) vcte -> . cte_string
    (40) vcte -> . id vcte1
    (41) vcte -> . funCall
    (146) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 113
    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    ID              shift and go to state 102

    expression                     shift and go to state 188
    exp                            shift and go to state 177
    term                           shift and go to state 104
    factor                         shift and go to state 105
    vcte                           shift and go to state 106
    openP                          shift and go to state 107
    cte_int                        shift and go to state 108
    cte_float                      shift and go to state 109
    cte_string                     shift and go to state 110
    id                             shift and go to state 111
    funCall                        shift and go to state 112

state 127

    (62) print -> PRINT OPENPAREN . expression CLOSEPAREN SEMICOLON
    (140) expression -> . exp loper exp
    (141) expression -> . exp
    (142) exp -> . term
    (143) exp -> . term exp_o exp
    (148) term -> . factor term_o term
    (149) term -> . factor
    (152) factor -> . vcte
    (153) factor -> . openP expression closeP
    (37) vcte -> . cte_int
    (38) vcte -> . cte_float
    (39) vcte -> . cte_string
    (40) vcte -> . id vcte1
    (41) vcte -> . funCall
    (146) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 113
    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    ID              shift and go to state 102

    expression                     shift and go to state 189
    exp                            shift and go to state 177
    term                           shift and go to state 104
    factor                         shift and go to state 105
    vcte                           shift and go to state 106
    openP                          shift and go to state 107
    cte_int                        shift and go to state 108
    cte_float                      shift and go to state 109
    cte_string                     shift and go to state 110
    id                             shift and go to state 111
    funCall                        shift and go to state 112

state 128

    (63) read -> READ OPENPAREN . id read1 CLOSEPAREN SEMICOLON
    (68) id -> . ID

    ID              shift and go to state 191

    id                             shift and go to state 190

state 129

    (127) graphr -> repeat rep . OPENBRACES graphstmt graphr1 CLOSEBRACES

    OPENBRACES      shift and go to state 192


state 130

    (130) rep -> OPENPAREN . exp CLOSEPAREN
    (142) exp -> . term
    (143) exp -> . term exp_o exp
    (148) term -> . factor term_o term
    (149) term -> . factor
    (152) factor -> . vcte
    (153) factor -> . openP expression closeP
    (37) vcte -> . cte_int
    (38) vcte -> . cte_float
    (39) vcte -> . cte_string
    (40) vcte -> . id vcte1
    (41) vcte -> . funCall
    (146) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 113
    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    ID              shift and go to state 102

    exp                            shift and go to state 193
    term                           shift and go to state 104
    factor                         shift and go to state 105
    vcte                           shift and go to state 106
    openP                          shift and go to state 107
    cte_int                        shift and go to state 108
    cte_float                      shift and go to state 109
    cte_string                     shift and go to state 110
    id                             shift and go to state 111
    funCall                        shift and go to state 112

state 131

    (69) funCall -> ID iniciaFunCall . funCall2 terminaFunCall
    (72) funCall2 -> . funCallParam funCall3
    (73) funCall2 -> . empty
    (76) funCallParam -> . exp
    (154) empty -> .
    (142) exp -> . term
    (143) exp -> . term exp_o exp
    (148) term -> . factor term_o term
    (149) term -> . factor
    (152) factor -> . vcte
    (153) factor -> . openP expression closeP
    (37) vcte -> . cte_int
    (38) vcte -> . cte_float
    (39) vcte -> . cte_string
    (40) vcte -> . id vcte1
    (41) vcte -> . funCall
    (146) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    CLOSEPAREN      reduce using rule 154 (empty -> .)
    OPENPAREN       shift and go to state 113
    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    ID              shift and go to state 102

    funCall2                       shift and go to state 194
    funCallParam                   shift and go to state 195
    empty                          shift and go to state 196
    exp                            shift and go to state 197
    term                           shift and go to state 104
    factor                         shift and go to state 105
    vcte                           shift and go to state 106
    openP                          shift and go to state 107
    cte_int                        shift and go to state 108
    cte_float                      shift and go to state 109
    cte_string                     shift and go to state 110
    id                             shift and go to state 111
    funCall                        shift and go to state 112

state 132

    (70) iniciaFunCall -> OPENPAREN .

    OPENPAREN       reduce using rule 70 (iniciaFunCall -> OPENPAREN .)
    CTEINT          reduce using rule 70 (iniciaFunCall -> OPENPAREN .)
    CTEFLOAT        reduce using rule 70 (iniciaFunCall -> OPENPAREN .)
    CTESTRING       reduce using rule 70 (iniciaFunCall -> OPENPAREN .)
    ID              reduce using rule 70 (iniciaFunCall -> OPENPAREN .)
    CLOSEPAREN      reduce using rule 70 (iniciaFunCall -> OPENPAREN .)


state 133

    (80) return -> RETURN return1 . SEMICOLON

    SEMICOLON       shift and go to state 198


state 134

    (81) return1 -> vcte .
    (152) factor -> vcte .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 81 (return1 -> vcte .)
    SEMICOLON       reduce using rule 81 (return1 -> vcte .)
    MULTIPLICATION  reduce using rule 152 (factor -> vcte .)
    DIVISION        reduce using rule 152 (factor -> vcte .)
    ADDITION        reduce using rule 152 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 152 (factor -> vcte .)

  ! SEMICOLON       [ reduce using rule 152 (factor -> vcte .) ]


state 135

    (82) return1 -> exp .

    SEMICOLON       reduce using rule 82 (return1 -> exp .)


state 136

    (103) while -> while1 body .

    IF              reduce using rule 103 (while -> while1 body .)
    PRINT           reduce using rule 103 (while -> while1 body .)
    READ            reduce using rule 103 (while -> while1 body .)
    ID              reduce using rule 103 (while -> while1 body .)
    RETURN          reduce using rule 103 (while -> while1 body .)
    REPEAT          reduce using rule 103 (while -> while1 body .)
    CIRCLE          reduce using rule 103 (while -> while1 body .)
    SQUARE          reduce using rule 103 (while -> while1 body .)
    TRIANGLE        reduce using rule 103 (while -> while1 body .)
    RECTANGLE       reduce using rule 103 (while -> while1 body .)
    HIDE_STAR       reduce using rule 103 (while -> while1 body .)
    SHOW_STAR       reduce using rule 103 (while -> while1 body .)
    COLOR_STAR      reduce using rule 103 (while -> while1 body .)
    SIZE_STAR       reduce using rule 103 (while -> while1 body .)
    SETXY           reduce using rule 103 (while -> while1 body .)
    HAND_DOWN       reduce using rule 103 (while -> while1 body .)
    HAND_UP         reduce using rule 103 (while -> while1 body .)
    GO              reduce using rule 103 (while -> while1 body .)
    LEFT            reduce using rule 103 (while -> while1 body .)
    RIGHT           reduce using rule 103 (while -> while1 body .)
    BACK            reduce using rule 103 (while -> while1 body .)
    ARC             reduce using rule 103 (while -> while1 body .)
    WHILE           reduce using rule 103 (while -> while1 body .)
    FOR             reduce using rule 103 (while -> while1 body .)
    CLOSEBRACES     reduce using rule 103 (while -> while1 body .)


state 137

    (94) body -> OPENBRACES . body1 CLOSEBRACES
    (96) body1 -> . stmt body1
    (97) body1 -> . empty
    (21) stmt -> . assignment
    (22) stmt -> . condition
    (23) stmt -> . print
    (24) stmt -> . loop
    (25) stmt -> . read
    (26) stmt -> . graphstmt
    (27) stmt -> . graphr
    (28) stmt -> . funCall SEMICOLON
    (29) stmt -> . return
    (154) empty -> .
    (30) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (87) condition -> . IF head_cond body condition1
    (62) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (19) loop -> . while
    (20) loop -> . for
    (63) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (108) graphstmt -> . graphfig
    (109) graphstmt -> . graphview
    (110) graphstmt -> . graphmove
    (127) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (80) return -> . RETURN return1 SEMICOLON
    (68) id -> . ID
    (103) while -> . while1 body
    (98) for -> . for1 body
    (111) graphfig -> . graphfig1 SEMICOLON
    (112) graphfig -> . graphfig2 SEMICOLON
    (132) graphview -> . graphview0 SEMICOLON
    (133) graphview -> . graphview1 SEMICOLON
    (134) graphview -> . graphview2 SEMICOLON
    (117) graphmove -> . graphmove0 SEMICOLON
    (118) graphmove -> . graphmove1 SEMICOLON
    (119) graphmove -> . graphmove2 SEMICOLON
    (131) repeat -> . REPEAT
    (104) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (99) for1 -> . forInit OPENPAREN ID for2
    (113) graphfig1 -> . CIRCLE unaExp
    (114) graphfig1 -> . SQUARE unaExp
    (115) graphfig2 -> . TRIANGLE dosExp
    (116) graphfig2 -> . RECTANGLE dosExp
    (135) graphview0 -> . HIDE_STAR
    (136) graphview0 -> . SHOW_STAR
    (137) graphview1 -> . COLOR_STAR unaExp
    (138) graphview1 -> . SIZE_STAR unaExp
    (139) graphview2 -> . SETXY dosExp
    (120) graphmove0 -> . HAND_DOWN
    (121) graphmove0 -> . HAND_UP
    (122) graphmove1 -> . GO unaExp
    (123) graphmove1 -> . LEFT unaExp
    (124) graphmove1 -> . RIGHT unaExp
    (125) graphmove1 -> . BACK unaExp
    (126) graphmove2 -> . ARC dosExp
    (105) while_w -> . WHILE
    (102) forInit -> . FOR

    CLOSEBRACES     reduce using rule 154 (empty -> .)
    IF              shift and go to state 54
    PRINT           shift and go to state 55
    READ            shift and go to state 58
    ID              shift and go to state 63
    RETURN          shift and go to state 64
    REPEAT          shift and go to state 75
    CIRCLE          shift and go to state 78
    SQUARE          shift and go to state 79
    TRIANGLE        shift and go to state 80
    RECTANGLE       shift and go to state 81
    HIDE_STAR       shift and go to state 82
    SHOW_STAR       shift and go to state 83
    COLOR_STAR      shift and go to state 84
    SIZE_STAR       shift and go to state 85
    SETXY           shift and go to state 86
    HAND_DOWN       shift and go to state 87
    HAND_UP         shift and go to state 88
    GO              shift and go to state 89
    LEFT            shift and go to state 90
    RIGHT           shift and go to state 91
    BACK            shift and go to state 92
    ARC             shift and go to state 93
    WHILE           shift and go to state 94
    FOR             shift and go to state 95

    body1                          shift and go to state 199
    stmt                           shift and go to state 200
    empty                          shift and go to state 201
    assignment                     shift and go to state 44
    condition                      shift and go to state 45
    print                          shift and go to state 46
    loop                           shift and go to state 47
    read                           shift and go to state 48
    graphstmt                      shift and go to state 49
    graphr                         shift and go to state 50
    funCall                        shift and go to state 51
    return                         shift and go to state 52
    id                             shift and go to state 53
    while                          shift and go to state 56
    for                            shift and go to state 57
    graphfig                       shift and go to state 59
    graphview                      shift and go to state 60
    graphmove                      shift and go to state 61
    repeat                         shift and go to state 62
    while1                         shift and go to state 65
    for1                           shift and go to state 66
    graphfig1                      shift and go to state 67
    graphfig2                      shift and go to state 68
    graphview0                     shift and go to state 69
    graphview1                     shift and go to state 70
    graphview2                     shift and go to state 71
    graphmove0                     shift and go to state 72
    graphmove1                     shift and go to state 73
    graphmove2                     shift and go to state 74
    while_w                        shift and go to state 76
    forInit                        shift and go to state 77

state 138

    (98) for -> for1 body .

    IF              reduce using rule 98 (for -> for1 body .)
    PRINT           reduce using rule 98 (for -> for1 body .)
    READ            reduce using rule 98 (for -> for1 body .)
    ID              reduce using rule 98 (for -> for1 body .)
    RETURN          reduce using rule 98 (for -> for1 body .)
    REPEAT          reduce using rule 98 (for -> for1 body .)
    CIRCLE          reduce using rule 98 (for -> for1 body .)
    SQUARE          reduce using rule 98 (for -> for1 body .)
    TRIANGLE        reduce using rule 98 (for -> for1 body .)
    RECTANGLE       reduce using rule 98 (for -> for1 body .)
    HIDE_STAR       reduce using rule 98 (for -> for1 body .)
    SHOW_STAR       reduce using rule 98 (for -> for1 body .)
    COLOR_STAR      reduce using rule 98 (for -> for1 body .)
    SIZE_STAR       reduce using rule 98 (for -> for1 body .)
    SETXY           reduce using rule 98 (for -> for1 body .)
    HAND_DOWN       reduce using rule 98 (for -> for1 body .)
    HAND_UP         reduce using rule 98 (for -> for1 body .)
    GO              reduce using rule 98 (for -> for1 body .)
    LEFT            reduce using rule 98 (for -> for1 body .)
    RIGHT           reduce using rule 98 (for -> for1 body .)
    BACK            reduce using rule 98 (for -> for1 body .)
    ARC             reduce using rule 98 (for -> for1 body .)
    WHILE           reduce using rule 98 (for -> for1 body .)
    FOR             reduce using rule 98 (for -> for1 body .)
    CLOSEBRACES     reduce using rule 98 (for -> for1 body .)


state 139

    (111) graphfig -> graphfig1 SEMICOLON .

    IF              reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    PRINT           reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    READ            reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    ID              reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    RETURN          reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    REPEAT          reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    CIRCLE          reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    SQUARE          reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    TRIANGLE        reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    RECTANGLE       reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    HIDE_STAR       reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    SHOW_STAR       reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    COLOR_STAR      reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    SIZE_STAR       reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    SETXY           reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    HAND_DOWN       reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    HAND_UP         reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    GO              reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    LEFT            reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    RIGHT           reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    BACK            reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    ARC             reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    WHILE           reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    FOR             reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)


state 140

    (112) graphfig -> graphfig2 SEMICOLON .

    IF              reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    PRINT           reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    READ            reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    ID              reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    RETURN          reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    REPEAT          reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    CIRCLE          reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    SQUARE          reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    TRIANGLE        reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    RECTANGLE       reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    HIDE_STAR       reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    SHOW_STAR       reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    COLOR_STAR      reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    SIZE_STAR       reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    SETXY           reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    HAND_DOWN       reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    HAND_UP         reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    GO              reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    LEFT            reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    RIGHT           reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    BACK            reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    ARC             reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    WHILE           reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    FOR             reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)


state 141

    (132) graphview -> graphview0 SEMICOLON .

    IF              reduce using rule 132 (graphview -> graphview0 SEMICOLON .)
    PRINT           reduce using rule 132 (graphview -> graphview0 SEMICOLON .)
    READ            reduce using rule 132 (graphview -> graphview0 SEMICOLON .)
    ID              reduce using rule 132 (graphview -> graphview0 SEMICOLON .)
    RETURN          reduce using rule 132 (graphview -> graphview0 SEMICOLON .)
    REPEAT          reduce using rule 132 (graphview -> graphview0 SEMICOLON .)
    CIRCLE          reduce using rule 132 (graphview -> graphview0 SEMICOLON .)
    SQUARE          reduce using rule 132 (graphview -> graphview0 SEMICOLON .)
    TRIANGLE        reduce using rule 132 (graphview -> graphview0 SEMICOLON .)
    RECTANGLE       reduce using rule 132 (graphview -> graphview0 SEMICOLON .)
    HIDE_STAR       reduce using rule 132 (graphview -> graphview0 SEMICOLON .)
    SHOW_STAR       reduce using rule 132 (graphview -> graphview0 SEMICOLON .)
    COLOR_STAR      reduce using rule 132 (graphview -> graphview0 SEMICOLON .)
    SIZE_STAR       reduce using rule 132 (graphview -> graphview0 SEMICOLON .)
    SETXY           reduce using rule 132 (graphview -> graphview0 SEMICOLON .)
    HAND_DOWN       reduce using rule 132 (graphview -> graphview0 SEMICOLON .)
    HAND_UP         reduce using rule 132 (graphview -> graphview0 SEMICOLON .)
    GO              reduce using rule 132 (graphview -> graphview0 SEMICOLON .)
    LEFT            reduce using rule 132 (graphview -> graphview0 SEMICOLON .)
    RIGHT           reduce using rule 132 (graphview -> graphview0 SEMICOLON .)
    BACK            reduce using rule 132 (graphview -> graphview0 SEMICOLON .)
    ARC             reduce using rule 132 (graphview -> graphview0 SEMICOLON .)
    WHILE           reduce using rule 132 (graphview -> graphview0 SEMICOLON .)
    FOR             reduce using rule 132 (graphview -> graphview0 SEMICOLON .)
    CLOSEBRACES     reduce using rule 132 (graphview -> graphview0 SEMICOLON .)


state 142

    (133) graphview -> graphview1 SEMICOLON .

    IF              reduce using rule 133 (graphview -> graphview1 SEMICOLON .)
    PRINT           reduce using rule 133 (graphview -> graphview1 SEMICOLON .)
    READ            reduce using rule 133 (graphview -> graphview1 SEMICOLON .)
    ID              reduce using rule 133 (graphview -> graphview1 SEMICOLON .)
    RETURN          reduce using rule 133 (graphview -> graphview1 SEMICOLON .)
    REPEAT          reduce using rule 133 (graphview -> graphview1 SEMICOLON .)
    CIRCLE          reduce using rule 133 (graphview -> graphview1 SEMICOLON .)
    SQUARE          reduce using rule 133 (graphview -> graphview1 SEMICOLON .)
    TRIANGLE        reduce using rule 133 (graphview -> graphview1 SEMICOLON .)
    RECTANGLE       reduce using rule 133 (graphview -> graphview1 SEMICOLON .)
    HIDE_STAR       reduce using rule 133 (graphview -> graphview1 SEMICOLON .)
    SHOW_STAR       reduce using rule 133 (graphview -> graphview1 SEMICOLON .)
    COLOR_STAR      reduce using rule 133 (graphview -> graphview1 SEMICOLON .)
    SIZE_STAR       reduce using rule 133 (graphview -> graphview1 SEMICOLON .)
    SETXY           reduce using rule 133 (graphview -> graphview1 SEMICOLON .)
    HAND_DOWN       reduce using rule 133 (graphview -> graphview1 SEMICOLON .)
    HAND_UP         reduce using rule 133 (graphview -> graphview1 SEMICOLON .)
    GO              reduce using rule 133 (graphview -> graphview1 SEMICOLON .)
    LEFT            reduce using rule 133 (graphview -> graphview1 SEMICOLON .)
    RIGHT           reduce using rule 133 (graphview -> graphview1 SEMICOLON .)
    BACK            reduce using rule 133 (graphview -> graphview1 SEMICOLON .)
    ARC             reduce using rule 133 (graphview -> graphview1 SEMICOLON .)
    WHILE           reduce using rule 133 (graphview -> graphview1 SEMICOLON .)
    FOR             reduce using rule 133 (graphview -> graphview1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 133 (graphview -> graphview1 SEMICOLON .)


state 143

    (134) graphview -> graphview2 SEMICOLON .

    IF              reduce using rule 134 (graphview -> graphview2 SEMICOLON .)
    PRINT           reduce using rule 134 (graphview -> graphview2 SEMICOLON .)
    READ            reduce using rule 134 (graphview -> graphview2 SEMICOLON .)
    ID              reduce using rule 134 (graphview -> graphview2 SEMICOLON .)
    RETURN          reduce using rule 134 (graphview -> graphview2 SEMICOLON .)
    REPEAT          reduce using rule 134 (graphview -> graphview2 SEMICOLON .)
    CIRCLE          reduce using rule 134 (graphview -> graphview2 SEMICOLON .)
    SQUARE          reduce using rule 134 (graphview -> graphview2 SEMICOLON .)
    TRIANGLE        reduce using rule 134 (graphview -> graphview2 SEMICOLON .)
    RECTANGLE       reduce using rule 134 (graphview -> graphview2 SEMICOLON .)
    HIDE_STAR       reduce using rule 134 (graphview -> graphview2 SEMICOLON .)
    SHOW_STAR       reduce using rule 134 (graphview -> graphview2 SEMICOLON .)
    COLOR_STAR      reduce using rule 134 (graphview -> graphview2 SEMICOLON .)
    SIZE_STAR       reduce using rule 134 (graphview -> graphview2 SEMICOLON .)
    SETXY           reduce using rule 134 (graphview -> graphview2 SEMICOLON .)
    HAND_DOWN       reduce using rule 134 (graphview -> graphview2 SEMICOLON .)
    HAND_UP         reduce using rule 134 (graphview -> graphview2 SEMICOLON .)
    GO              reduce using rule 134 (graphview -> graphview2 SEMICOLON .)
    LEFT            reduce using rule 134 (graphview -> graphview2 SEMICOLON .)
    RIGHT           reduce using rule 134 (graphview -> graphview2 SEMICOLON .)
    BACK            reduce using rule 134 (graphview -> graphview2 SEMICOLON .)
    ARC             reduce using rule 134 (graphview -> graphview2 SEMICOLON .)
    WHILE           reduce using rule 134 (graphview -> graphview2 SEMICOLON .)
    FOR             reduce using rule 134 (graphview -> graphview2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 134 (graphview -> graphview2 SEMICOLON .)


state 144

    (117) graphmove -> graphmove0 SEMICOLON .

    IF              reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    PRINT           reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    READ            reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    ID              reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    RETURN          reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    REPEAT          reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    CIRCLE          reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    SQUARE          reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    TRIANGLE        reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    RECTANGLE       reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    HIDE_STAR       reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    SHOW_STAR       reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    COLOR_STAR      reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    SIZE_STAR       reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    SETXY           reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    HAND_DOWN       reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    HAND_UP         reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    GO              reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    LEFT            reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    RIGHT           reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    BACK            reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    ARC             reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    WHILE           reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    FOR             reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    CLOSEBRACES     reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)


state 145

    (118) graphmove -> graphmove1 SEMICOLON .

    IF              reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    PRINT           reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    READ            reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    ID              reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    RETURN          reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    REPEAT          reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    CIRCLE          reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    SQUARE          reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    TRIANGLE        reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    RECTANGLE       reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    HIDE_STAR       reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    SHOW_STAR       reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    COLOR_STAR      reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    SIZE_STAR       reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    SETXY           reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    HAND_DOWN       reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    HAND_UP         reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    GO              reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    LEFT            reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    RIGHT           reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    BACK            reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    ARC             reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    WHILE           reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    FOR             reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)


state 146

    (119) graphmove -> graphmove2 SEMICOLON .

    IF              reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    PRINT           reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    READ            reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    ID              reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    RETURN          reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    REPEAT          reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    CIRCLE          reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    SQUARE          reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    TRIANGLE        reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    RECTANGLE       reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    HIDE_STAR       reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    SHOW_STAR       reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    COLOR_STAR      reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    SIZE_STAR       reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    SETXY           reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    HAND_DOWN       reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    HAND_UP         reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    GO              reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    LEFT            reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    RIGHT           reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    BACK            reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    ARC             reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    WHILE           reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    FOR             reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)


state 147

    (104) while1 -> while_w OPENPAREN . expression CLOSEPAREN
    (140) expression -> . exp loper exp
    (141) expression -> . exp
    (142) exp -> . term
    (143) exp -> . term exp_o exp
    (148) term -> . factor term_o term
    (149) term -> . factor
    (152) factor -> . vcte
    (153) factor -> . openP expression closeP
    (37) vcte -> . cte_int
    (38) vcte -> . cte_float
    (39) vcte -> . cte_string
    (40) vcte -> . id vcte1
    (41) vcte -> . funCall
    (146) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 113
    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    ID              shift and go to state 102

    expression                     shift and go to state 202
    exp                            shift and go to state 177
    term                           shift and go to state 104
    factor                         shift and go to state 105
    vcte                           shift and go to state 106
    openP                          shift and go to state 107
    cte_int                        shift and go to state 108
    cte_float                      shift and go to state 109
    cte_string                     shift and go to state 110
    id                             shift and go to state 111
    funCall                        shift and go to state 112

state 148

    (99) for1 -> forInit OPENPAREN . ID for2

    ID              shift and go to state 203


state 149

    (113) graphfig1 -> CIRCLE unaExp .

    SEMICOLON       reduce using rule 113 (graphfig1 -> CIRCLE unaExp .)


state 150

    (107) unaExp -> OPENPAREN . exp CLOSEPAREN
    (142) exp -> . term
    (143) exp -> . term exp_o exp
    (148) term -> . factor term_o term
    (149) term -> . factor
    (152) factor -> . vcte
    (153) factor -> . openP expression closeP
    (37) vcte -> . cte_int
    (38) vcte -> . cte_float
    (39) vcte -> . cte_string
    (40) vcte -> . id vcte1
    (41) vcte -> . funCall
    (146) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 113
    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    ID              shift and go to state 102

    exp                            shift and go to state 204
    term                           shift and go to state 104
    factor                         shift and go to state 105
    vcte                           shift and go to state 106
    openP                          shift and go to state 107
    cte_int                        shift and go to state 108
    cte_float                      shift and go to state 109
    cte_string                     shift and go to state 110
    id                             shift and go to state 111
    funCall                        shift and go to state 112

state 151

    (114) graphfig1 -> SQUARE unaExp .

    SEMICOLON       reduce using rule 114 (graphfig1 -> SQUARE unaExp .)


state 152

    (115) graphfig2 -> TRIANGLE dosExp .

    SEMICOLON       reduce using rule 115 (graphfig2 -> TRIANGLE dosExp .)


state 153

    (106) dosExp -> OPENPAREN . exp COMMA exp CLOSEPAREN
    (142) exp -> . term
    (143) exp -> . term exp_o exp
    (148) term -> . factor term_o term
    (149) term -> . factor
    (152) factor -> . vcte
    (153) factor -> . openP expression closeP
    (37) vcte -> . cte_int
    (38) vcte -> . cte_float
    (39) vcte -> . cte_string
    (40) vcte -> . id vcte1
    (41) vcte -> . funCall
    (146) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 113
    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    ID              shift and go to state 102

    exp                            shift and go to state 205
    term                           shift and go to state 104
    factor                         shift and go to state 105
    vcte                           shift and go to state 106
    openP                          shift and go to state 107
    cte_int                        shift and go to state 108
    cte_float                      shift and go to state 109
    cte_string                     shift and go to state 110
    id                             shift and go to state 111
    funCall                        shift and go to state 112

state 154

    (116) graphfig2 -> RECTANGLE dosExp .

    SEMICOLON       reduce using rule 116 (graphfig2 -> RECTANGLE dosExp .)


state 155

    (137) graphview1 -> COLOR_STAR unaExp .

    SEMICOLON       reduce using rule 137 (graphview1 -> COLOR_STAR unaExp .)


state 156

    (138) graphview1 -> SIZE_STAR unaExp .

    SEMICOLON       reduce using rule 138 (graphview1 -> SIZE_STAR unaExp .)


state 157

    (139) graphview2 -> SETXY dosExp .

    SEMICOLON       reduce using rule 139 (graphview2 -> SETXY dosExp .)


state 158

    (122) graphmove1 -> GO unaExp .

    SEMICOLON       reduce using rule 122 (graphmove1 -> GO unaExp .)


state 159

    (123) graphmove1 -> LEFT unaExp .

    SEMICOLON       reduce using rule 123 (graphmove1 -> LEFT unaExp .)


state 160

    (124) graphmove1 -> RIGHT unaExp .

    SEMICOLON       reduce using rule 124 (graphmove1 -> RIGHT unaExp .)


state 161

    (125) graphmove1 -> BACK unaExp .

    SEMICOLON       reduce using rule 125 (graphmove1 -> BACK unaExp .)


state 162

    (126) graphmove2 -> ARC dosExp .

    SEMICOLON       reduce using rule 126 (graphmove2 -> ARC dosExp .)


state 163

    (48) function -> FUN functionI function2 inicia_fun declara_vars . function4 termina_fun
    (54) function4 -> . stmt function4
    (55) function4 -> . empty
    (21) stmt -> . assignment
    (22) stmt -> . condition
    (23) stmt -> . print
    (24) stmt -> . loop
    (25) stmt -> . read
    (26) stmt -> . graphstmt
    (27) stmt -> . graphr
    (28) stmt -> . funCall SEMICOLON
    (29) stmt -> . return
    (154) empty -> .
    (30) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (87) condition -> . IF head_cond body condition1
    (62) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (19) loop -> . while
    (20) loop -> . for
    (63) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (108) graphstmt -> . graphfig
    (109) graphstmt -> . graphview
    (110) graphstmt -> . graphmove
    (127) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (80) return -> . RETURN return1 SEMICOLON
    (68) id -> . ID
    (103) while -> . while1 body
    (98) for -> . for1 body
    (111) graphfig -> . graphfig1 SEMICOLON
    (112) graphfig -> . graphfig2 SEMICOLON
    (132) graphview -> . graphview0 SEMICOLON
    (133) graphview -> . graphview1 SEMICOLON
    (134) graphview -> . graphview2 SEMICOLON
    (117) graphmove -> . graphmove0 SEMICOLON
    (118) graphmove -> . graphmove1 SEMICOLON
    (119) graphmove -> . graphmove2 SEMICOLON
    (131) repeat -> . REPEAT
    (104) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (99) for1 -> . forInit OPENPAREN ID for2
    (113) graphfig1 -> . CIRCLE unaExp
    (114) graphfig1 -> . SQUARE unaExp
    (115) graphfig2 -> . TRIANGLE dosExp
    (116) graphfig2 -> . RECTANGLE dosExp
    (135) graphview0 -> . HIDE_STAR
    (136) graphview0 -> . SHOW_STAR
    (137) graphview1 -> . COLOR_STAR unaExp
    (138) graphview1 -> . SIZE_STAR unaExp
    (139) graphview2 -> . SETXY dosExp
    (120) graphmove0 -> . HAND_DOWN
    (121) graphmove0 -> . HAND_UP
    (122) graphmove1 -> . GO unaExp
    (123) graphmove1 -> . LEFT unaExp
    (124) graphmove1 -> . RIGHT unaExp
    (125) graphmove1 -> . BACK unaExp
    (126) graphmove2 -> . ARC dosExp
    (105) while_w -> . WHILE
    (102) forInit -> . FOR

    CLOSEBRACES     reduce using rule 154 (empty -> .)
    IF              shift and go to state 54
    PRINT           shift and go to state 55
    READ            shift and go to state 58
    ID              shift and go to state 63
    RETURN          shift and go to state 64
    REPEAT          shift and go to state 75
    CIRCLE          shift and go to state 78
    SQUARE          shift and go to state 79
    TRIANGLE        shift and go to state 80
    RECTANGLE       shift and go to state 81
    HIDE_STAR       shift and go to state 82
    SHOW_STAR       shift and go to state 83
    COLOR_STAR      shift and go to state 84
    SIZE_STAR       shift and go to state 85
    SETXY           shift and go to state 86
    HAND_DOWN       shift and go to state 87
    HAND_UP         shift and go to state 88
    GO              shift and go to state 89
    LEFT            shift and go to state 90
    RIGHT           shift and go to state 91
    BACK            shift and go to state 92
    ARC             shift and go to state 93
    WHILE           shift and go to state 94
    FOR             shift and go to state 95

    function4                      shift and go to state 206
    stmt                           shift and go to state 207
    empty                          shift and go to state 208
    assignment                     shift and go to state 44
    condition                      shift and go to state 45
    print                          shift and go to state 46
    loop                           shift and go to state 47
    read                           shift and go to state 48
    graphstmt                      shift and go to state 49
    graphr                         shift and go to state 50
    funCall                        shift and go to state 51
    return                         shift and go to state 52
    id                             shift and go to state 53
    while                          shift and go to state 56
    for                            shift and go to state 57
    graphfig                       shift and go to state 59
    graphview                      shift and go to state 60
    graphmove                      shift and go to state 61
    repeat                         shift and go to state 62
    while1                         shift and go to state 65
    for1                           shift and go to state 66
    graphfig1                      shift and go to state 67
    graphfig2                      shift and go to state 68
    graphview0                     shift and go to state 69
    graphview1                     shift and go to state 70
    graphview2                     shift and go to state 71
    graphmove0                     shift and go to state 72
    graphmove1                     shift and go to state 73
    graphmove2                     shift and go to state 74
    while_w                        shift and go to state 76
    forInit                        shift and go to state 77

state 164

    (51) function2 -> OPENPAREN function3 CLOSEPAREN .

    OPENBRACES      reduce using rule 51 (function2 -> OPENPAREN function3 CLOSEPAREN .)


state 165

    (52) function3 -> funParam function5 .

    CLOSEPAREN      reduce using rule 52 (function3 -> funParam function5 .)


state 166

    (56) function5 -> COMMA . funParam function5
    (58) funParam -> . type ID
    (59) type -> . INT
    (60) type -> . FLOAT
    (61) type -> . STRING

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    STRING          shift and go to state 12

    funParam                       shift and go to state 209
    type                           shift and go to state 101

state 167

    (57) function5 -> empty .

    CLOSEPAREN      reduce using rule 57 (function5 -> empty .)


state 168

    (58) funParam -> type ID .

    COMMA           reduce using rule 58 (funParam -> type ID .)
    CLOSEPAREN      reduce using rule 58 (funParam -> type ID .)


state 169

    (13) vars -> type ID vars1 equals exp SEMICOLON .

    INT             reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    FLOAT           reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    STRING          reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    FUN             reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    MULTIPLICATION  reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    IF              reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    PRINT           reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    READ            reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    ID              reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    RETURN          reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    REPEAT          reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    CIRCLE          reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    SQUARE          reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    TRIANGLE        reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    RECTANGLE       reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    HIDE_STAR       reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    SHOW_STAR       reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    COLOR_STAR      reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    SIZE_STAR       reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    SETXY           reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    HAND_DOWN       reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    HAND_UP         reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    GO              reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    LEFT            reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    RIGHT           reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    BACK            reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    ARC             reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    WHILE           reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    FOR             reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)
    CLOSEBRACES     reduce using rule 13 (vars -> type ID vars1 equals exp SEMICOLON .)


state 170

    (143) exp -> term exp_o . exp
    (142) exp -> . term
    (143) exp -> . term exp_o exp
    (148) term -> . factor term_o term
    (149) term -> . factor
    (152) factor -> . vcte
    (153) factor -> . openP expression closeP
    (37) vcte -> . cte_int
    (38) vcte -> . cte_float
    (39) vcte -> . cte_string
    (40) vcte -> . id vcte1
    (41) vcte -> . funCall
    (146) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 113
    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    ID              shift and go to state 102

    term                           shift and go to state 104
    exp                            shift and go to state 210
    factor                         shift and go to state 105
    vcte                           shift and go to state 106
    openP                          shift and go to state 107
    cte_int                        shift and go to state 108
    cte_float                      shift and go to state 109
    cte_string                     shift and go to state 110
    id                             shift and go to state 111
    funCall                        shift and go to state 112

state 171

    (144) exp_o -> ADDITION .

    OPENPAREN       reduce using rule 144 (exp_o -> ADDITION .)
    CTEINT          reduce using rule 144 (exp_o -> ADDITION .)
    CTEFLOAT        reduce using rule 144 (exp_o -> ADDITION .)
    CTESTRING       reduce using rule 144 (exp_o -> ADDITION .)
    ID              reduce using rule 144 (exp_o -> ADDITION .)


state 172

    (145) exp_o -> SUBSTRACTION .

    OPENPAREN       reduce using rule 145 (exp_o -> SUBSTRACTION .)
    CTEINT          reduce using rule 145 (exp_o -> SUBSTRACTION .)
    CTEFLOAT        reduce using rule 145 (exp_o -> SUBSTRACTION .)
    CTESTRING       reduce using rule 145 (exp_o -> SUBSTRACTION .)
    ID              reduce using rule 145 (exp_o -> SUBSTRACTION .)


state 173

    (148) term -> factor term_o . term
    (148) term -> . factor term_o term
    (149) term -> . factor
    (152) factor -> . vcte
    (153) factor -> . openP expression closeP
    (37) vcte -> . cte_int
    (38) vcte -> . cte_float
    (39) vcte -> . cte_string
    (40) vcte -> . id vcte1
    (41) vcte -> . funCall
    (146) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 113
    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    ID              shift and go to state 102

    factor                         shift and go to state 105
    term                           shift and go to state 211
    vcte                           shift and go to state 106
    openP                          shift and go to state 107
    cte_int                        shift and go to state 108
    cte_float                      shift and go to state 109
    cte_string                     shift and go to state 110
    id                             shift and go to state 111
    funCall                        shift and go to state 112

state 174

    (150) term_o -> MULTIPLICATION .

    OPENPAREN       reduce using rule 150 (term_o -> MULTIPLICATION .)
    CTEINT          reduce using rule 150 (term_o -> MULTIPLICATION .)
    CTEFLOAT        reduce using rule 150 (term_o -> MULTIPLICATION .)
    CTESTRING       reduce using rule 150 (term_o -> MULTIPLICATION .)
    ID              reduce using rule 150 (term_o -> MULTIPLICATION .)


state 175

    (151) term_o -> DIVISION .

    OPENPAREN       reduce using rule 151 (term_o -> DIVISION .)
    CTEINT          reduce using rule 151 (term_o -> DIVISION .)
    CTEFLOAT        reduce using rule 151 (term_o -> DIVISION .)
    CTESTRING       reduce using rule 151 (term_o -> DIVISION .)
    ID              reduce using rule 151 (term_o -> DIVISION .)


state 176

    (153) factor -> openP expression . closeP
    (147) closeP -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 213

    closeP                         shift and go to state 212

state 177

    (140) expression -> exp . loper exp
    (141) expression -> exp .
    (83) loper -> . GREATER
    (84) loper -> . LESS
    (85) loper -> . NOTEQUAL
    (86) loper -> . ISEQUAL

    CLOSEPAREN      reduce using rule 141 (expression -> exp .)
    GREATER         shift and go to state 215
    LESS            shift and go to state 216
    NOTEQUAL        shift and go to state 217
    ISEQUAL         shift and go to state 218

    loper                          shift and go to state 214

state 178

    (40) vcte -> id vcte1 .

    MULTIPLICATION  reduce using rule 40 (vcte -> id vcte1 .)
    DIVISION        reduce using rule 40 (vcte -> id vcte1 .)
    ADDITION        reduce using rule 40 (vcte -> id vcte1 .)
    SUBSTRACTION    reduce using rule 40 (vcte -> id vcte1 .)
    SEMICOLON       reduce using rule 40 (vcte -> id vcte1 .)
    GREATER         reduce using rule 40 (vcte -> id vcte1 .)
    LESS            reduce using rule 40 (vcte -> id vcte1 .)
    NOTEQUAL        reduce using rule 40 (vcte -> id vcte1 .)
    ISEQUAL         reduce using rule 40 (vcte -> id vcte1 .)
    CLOSEPAREN      reduce using rule 40 (vcte -> id vcte1 .)
    CLOSEBRACKET    reduce using rule 40 (vcte -> id vcte1 .)
    COMMA           reduce using rule 40 (vcte -> id vcte1 .)


state 179

    (42) vcte1 -> OPENBRACKET . exp CLOSEBRACKET vcte3
    (142) exp -> . term
    (143) exp -> . term exp_o exp
    (148) term -> . factor term_o term
    (149) term -> . factor
    (152) factor -> . vcte
    (153) factor -> . openP expression closeP
    (37) vcte -> . cte_int
    (38) vcte -> . cte_float
    (39) vcte -> . cte_string
    (40) vcte -> . id vcte1
    (41) vcte -> . funCall
    (146) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 113
    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    ID              shift and go to state 102

    exp                            shift and go to state 219
    term                           shift and go to state 104
    factor                         shift and go to state 105
    vcte                           shift and go to state 106
    openP                          shift and go to state 107
    cte_int                        shift and go to state 108
    cte_float                      shift and go to state 109
    cte_string                     shift and go to state 110
    id                             shift and go to state 111
    funCall                        shift and go to state 112

state 180

    (43) vcte1 -> empty .

    MULTIPLICATION  reduce using rule 43 (vcte1 -> empty .)
    DIVISION        reduce using rule 43 (vcte1 -> empty .)
    ADDITION        reduce using rule 43 (vcte1 -> empty .)
    SUBSTRACTION    reduce using rule 43 (vcte1 -> empty .)
    SEMICOLON       reduce using rule 43 (vcte1 -> empty .)
    GREATER         reduce using rule 43 (vcte1 -> empty .)
    LESS            reduce using rule 43 (vcte1 -> empty .)
    NOTEQUAL        reduce using rule 43 (vcte1 -> empty .)
    ISEQUAL         reduce using rule 43 (vcte1 -> empty .)
    CLOSEPAREN      reduce using rule 43 (vcte1 -> empty .)
    CLOSEBRACKET    reduce using rule 43 (vcte1 -> empty .)
    COMMA           reduce using rule 43 (vcte1 -> empty .)


state 181

    (17) vars3 -> OPENBRACKET . CTEINT CLOSEBRACKET

    CTEINT          shift and go to state 220


state 182

    (15) vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .

    SEMICOLON       reduce using rule 15 (vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .)
    EQUALS          reduce using rule 15 (vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .)


state 183

    (18) vars3 -> empty .

    SEMICOLON       reduce using rule 18 (vars3 -> empty .)
    EQUALS          reduce using rule 18 (vars3 -> empty .)


state 184

    (30) assignment -> id assignment1 equals . assignment3 SEMICOLON
    (35) assignment3 -> . exp
    (36) assignment3 -> . read
    (142) exp -> . term
    (143) exp -> . term exp_o exp
    (63) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (148) term -> . factor term_o term
    (149) term -> . factor
    (152) factor -> . vcte
    (153) factor -> . openP expression closeP
    (37) vcte -> . cte_int
    (38) vcte -> . cte_float
    (39) vcte -> . cte_string
    (40) vcte -> . id vcte1
    (41) vcte -> . funCall
    (146) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    READ            shift and go to state 58
    OPENPAREN       shift and go to state 113
    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    ID              shift and go to state 102

    id                             shift and go to state 111
    assignment3                    shift and go to state 221
    exp                            shift and go to state 222
    read                           shift and go to state 223
    term                           shift and go to state 104
    factor                         shift and go to state 105
    vcte                           shift and go to state 106
    openP                          shift and go to state 107
    cte_int                        shift and go to state 108
    cte_float                      shift and go to state 109
    cte_string                     shift and go to state 110
    funCall                        shift and go to state 112

state 185

    (32) assignment1 -> assignment2 assignment1 .

    EQUALS          reduce using rule 32 (assignment1 -> assignment2 assignment1 .)


state 186

    (34) assignment2 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 224


state 187

    (87) condition -> IF head_cond body . condition1
    (88) condition1 -> . elseif head_cond body condition1
    (89) condition1 -> . else body
    (90) condition1 -> . empty
    (91) elseif -> . ELSEIF
    (92) else -> . ELSE
    (154) empty -> .

    ELSEIF          shift and go to state 229
    ELSE            shift and go to state 230
    IF              reduce using rule 154 (empty -> .)
    PRINT           reduce using rule 154 (empty -> .)
    READ            reduce using rule 154 (empty -> .)
    ID              reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)
    REPEAT          reduce using rule 154 (empty -> .)
    CIRCLE          reduce using rule 154 (empty -> .)
    SQUARE          reduce using rule 154 (empty -> .)
    TRIANGLE        reduce using rule 154 (empty -> .)
    RECTANGLE       reduce using rule 154 (empty -> .)
    HIDE_STAR       reduce using rule 154 (empty -> .)
    SHOW_STAR       reduce using rule 154 (empty -> .)
    COLOR_STAR      reduce using rule 154 (empty -> .)
    SIZE_STAR       reduce using rule 154 (empty -> .)
    SETXY           reduce using rule 154 (empty -> .)
    HAND_DOWN       reduce using rule 154 (empty -> .)
    HAND_UP         reduce using rule 154 (empty -> .)
    GO              reduce using rule 154 (empty -> .)
    LEFT            reduce using rule 154 (empty -> .)
    RIGHT           reduce using rule 154 (empty -> .)
    BACK            reduce using rule 154 (empty -> .)
    ARC             reduce using rule 154 (empty -> .)
    WHILE           reduce using rule 154 (empty -> .)
    FOR             reduce using rule 154 (empty -> .)
    CLOSEBRACES     reduce using rule 154 (empty -> .)

    condition1                     shift and go to state 225
    elseif                         shift and go to state 226
    else                           shift and go to state 227
    empty                          shift and go to state 228

state 188

    (93) head_cond -> OPENPAREN expression . close_condition
    (95) close_condition -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 232

    close_condition                shift and go to state 231

state 189

    (62) print -> PRINT OPENPAREN expression . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 233


state 190

    (63) read -> READ OPENPAREN id . read1 CLOSEPAREN SEMICOLON
    (64) read1 -> . OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (65) read1 -> . OPENBRACKET exp CLOSEBRACKET
    (66) read1 -> . empty
    (154) empty -> .

    OPENBRACKET     shift and go to state 235
    CLOSEPAREN      reduce using rule 154 (empty -> .)

    read1                          shift and go to state 234
    empty                          shift and go to state 236

state 191

    (68) id -> ID .

    OPENBRACKET     reduce using rule 68 (id -> ID .)
    CLOSEPAREN      reduce using rule 68 (id -> ID .)


state 192

    (127) graphr -> repeat rep OPENBRACES . graphstmt graphr1 CLOSEBRACES
    (108) graphstmt -> . graphfig
    (109) graphstmt -> . graphview
    (110) graphstmt -> . graphmove
    (111) graphfig -> . graphfig1 SEMICOLON
    (112) graphfig -> . graphfig2 SEMICOLON
    (132) graphview -> . graphview0 SEMICOLON
    (133) graphview -> . graphview1 SEMICOLON
    (134) graphview -> . graphview2 SEMICOLON
    (117) graphmove -> . graphmove0 SEMICOLON
    (118) graphmove -> . graphmove1 SEMICOLON
    (119) graphmove -> . graphmove2 SEMICOLON
    (113) graphfig1 -> . CIRCLE unaExp
    (114) graphfig1 -> . SQUARE unaExp
    (115) graphfig2 -> . TRIANGLE dosExp
    (116) graphfig2 -> . RECTANGLE dosExp
    (135) graphview0 -> . HIDE_STAR
    (136) graphview0 -> . SHOW_STAR
    (137) graphview1 -> . COLOR_STAR unaExp
    (138) graphview1 -> . SIZE_STAR unaExp
    (139) graphview2 -> . SETXY dosExp
    (120) graphmove0 -> . HAND_DOWN
    (121) graphmove0 -> . HAND_UP
    (122) graphmove1 -> . GO unaExp
    (123) graphmove1 -> . LEFT unaExp
    (124) graphmove1 -> . RIGHT unaExp
    (125) graphmove1 -> . BACK unaExp
    (126) graphmove2 -> . ARC dosExp

    CIRCLE          shift and go to state 78
    SQUARE          shift and go to state 79
    TRIANGLE        shift and go to state 80
    RECTANGLE       shift and go to state 81
    HIDE_STAR       shift and go to state 82
    SHOW_STAR       shift and go to state 83
    COLOR_STAR      shift and go to state 84
    SIZE_STAR       shift and go to state 85
    SETXY           shift and go to state 86
    HAND_DOWN       shift and go to state 87
    HAND_UP         shift and go to state 88
    GO              shift and go to state 89
    LEFT            shift and go to state 90
    RIGHT           shift and go to state 91
    BACK            shift and go to state 92
    ARC             shift and go to state 93

    graphstmt                      shift and go to state 237
    graphfig                       shift and go to state 59
    graphview                      shift and go to state 60
    graphmove                      shift and go to state 61
    graphfig1                      shift and go to state 67
    graphfig2                      shift and go to state 68
    graphview0                     shift and go to state 69
    graphview1                     shift and go to state 70
    graphview2                     shift and go to state 71
    graphmove0                     shift and go to state 72
    graphmove1                     shift and go to state 73
    graphmove2                     shift and go to state 74

state 193

    (130) rep -> OPENPAREN exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 238


state 194

    (69) funCall -> ID iniciaFunCall funCall2 . terminaFunCall
    (71) terminaFunCall -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 240

    terminaFunCall                 shift and go to state 239

state 195

    (72) funCall2 -> funCallParam . funCall3
    (74) funCall3 -> . COMMA funCallParam funCall3
    (75) funCall3 -> . empty
    (154) empty -> .

    COMMA           shift and go to state 242
    CLOSEPAREN      reduce using rule 154 (empty -> .)

    funCall3                       shift and go to state 241
    empty                          shift and go to state 243

state 196

    (73) funCall2 -> empty .

    CLOSEPAREN      reduce using rule 73 (funCall2 -> empty .)


state 197

    (76) funCallParam -> exp .

    COMMA           reduce using rule 76 (funCallParam -> exp .)
    CLOSEPAREN      reduce using rule 76 (funCallParam -> exp .)


state 198

    (80) return -> RETURN return1 SEMICOLON .

    IF              reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    PRINT           reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    READ            reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    ID              reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    RETURN          reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    REPEAT          reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    CIRCLE          reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    SQUARE          reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    TRIANGLE        reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    RECTANGLE       reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    HIDE_STAR       reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    SHOW_STAR       reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    COLOR_STAR      reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    SIZE_STAR       reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    SETXY           reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    HAND_DOWN       reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    HAND_UP         reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    GO              reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    LEFT            reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    RIGHT           reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    BACK            reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    ARC             reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    WHILE           reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    FOR             reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 80 (return -> RETURN return1 SEMICOLON .)


state 199

    (94) body -> OPENBRACES body1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 244


state 200

    (96) body1 -> stmt . body1
    (96) body1 -> . stmt body1
    (97) body1 -> . empty
    (21) stmt -> . assignment
    (22) stmt -> . condition
    (23) stmt -> . print
    (24) stmt -> . loop
    (25) stmt -> . read
    (26) stmt -> . graphstmt
    (27) stmt -> . graphr
    (28) stmt -> . funCall SEMICOLON
    (29) stmt -> . return
    (154) empty -> .
    (30) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (87) condition -> . IF head_cond body condition1
    (62) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (19) loop -> . while
    (20) loop -> . for
    (63) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (108) graphstmt -> . graphfig
    (109) graphstmt -> . graphview
    (110) graphstmt -> . graphmove
    (127) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (80) return -> . RETURN return1 SEMICOLON
    (68) id -> . ID
    (103) while -> . while1 body
    (98) for -> . for1 body
    (111) graphfig -> . graphfig1 SEMICOLON
    (112) graphfig -> . graphfig2 SEMICOLON
    (132) graphview -> . graphview0 SEMICOLON
    (133) graphview -> . graphview1 SEMICOLON
    (134) graphview -> . graphview2 SEMICOLON
    (117) graphmove -> . graphmove0 SEMICOLON
    (118) graphmove -> . graphmove1 SEMICOLON
    (119) graphmove -> . graphmove2 SEMICOLON
    (131) repeat -> . REPEAT
    (104) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (99) for1 -> . forInit OPENPAREN ID for2
    (113) graphfig1 -> . CIRCLE unaExp
    (114) graphfig1 -> . SQUARE unaExp
    (115) graphfig2 -> . TRIANGLE dosExp
    (116) graphfig2 -> . RECTANGLE dosExp
    (135) graphview0 -> . HIDE_STAR
    (136) graphview0 -> . SHOW_STAR
    (137) graphview1 -> . COLOR_STAR unaExp
    (138) graphview1 -> . SIZE_STAR unaExp
    (139) graphview2 -> . SETXY dosExp
    (120) graphmove0 -> . HAND_DOWN
    (121) graphmove0 -> . HAND_UP
    (122) graphmove1 -> . GO unaExp
    (123) graphmove1 -> . LEFT unaExp
    (124) graphmove1 -> . RIGHT unaExp
    (125) graphmove1 -> . BACK unaExp
    (126) graphmove2 -> . ARC dosExp
    (105) while_w -> . WHILE
    (102) forInit -> . FOR

    CLOSEBRACES     reduce using rule 154 (empty -> .)
    IF              shift and go to state 54
    PRINT           shift and go to state 55
    READ            shift and go to state 58
    ID              shift and go to state 63
    RETURN          shift and go to state 64
    REPEAT          shift and go to state 75
    CIRCLE          shift and go to state 78
    SQUARE          shift and go to state 79
    TRIANGLE        shift and go to state 80
    RECTANGLE       shift and go to state 81
    HIDE_STAR       shift and go to state 82
    SHOW_STAR       shift and go to state 83
    COLOR_STAR      shift and go to state 84
    SIZE_STAR       shift and go to state 85
    SETXY           shift and go to state 86
    HAND_DOWN       shift and go to state 87
    HAND_UP         shift and go to state 88
    GO              shift and go to state 89
    LEFT            shift and go to state 90
    RIGHT           shift and go to state 91
    BACK            shift and go to state 92
    ARC             shift and go to state 93
    WHILE           shift and go to state 94
    FOR             shift and go to state 95

    stmt                           shift and go to state 200
    body1                          shift and go to state 245
    empty                          shift and go to state 201
    assignment                     shift and go to state 44
    condition                      shift and go to state 45
    print                          shift and go to state 46
    loop                           shift and go to state 47
    read                           shift and go to state 48
    graphstmt                      shift and go to state 49
    graphr                         shift and go to state 50
    funCall                        shift and go to state 51
    return                         shift and go to state 52
    id                             shift and go to state 53
    while                          shift and go to state 56
    for                            shift and go to state 57
    graphfig                       shift and go to state 59
    graphview                      shift and go to state 60
    graphmove                      shift and go to state 61
    repeat                         shift and go to state 62
    while1                         shift and go to state 65
    for1                           shift and go to state 66
    graphfig1                      shift and go to state 67
    graphfig2                      shift and go to state 68
    graphview0                     shift and go to state 69
    graphview1                     shift and go to state 70
    graphview2                     shift and go to state 71
    graphmove0                     shift and go to state 72
    graphmove1                     shift and go to state 73
    graphmove2                     shift and go to state 74
    while_w                        shift and go to state 76
    forInit                        shift and go to state 77

state 201

    (97) body1 -> empty .

    CLOSEBRACES     reduce using rule 97 (body1 -> empty .)


state 202

    (104) while1 -> while_w OPENPAREN expression . CLOSEPAREN

    CLOSEPAREN      shift and go to state 246


state 203

    (99) for1 -> forInit OPENPAREN ID . for2
    (100) for2 -> . TWODOTS exp for3

    TWODOTS         shift and go to state 248

    for2                           shift and go to state 247

state 204

    (107) unaExp -> OPENPAREN exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 249


state 205

    (106) dosExp -> OPENPAREN exp . COMMA exp CLOSEPAREN

    COMMA           shift and go to state 250


state 206

    (48) function -> FUN functionI function2 inicia_fun declara_vars function4 . termina_fun
    (50) termina_fun -> . CLOSEBRACES

    CLOSEBRACES     shift and go to state 252

    termina_fun                    shift and go to state 251

state 207

    (54) function4 -> stmt . function4
    (54) function4 -> . stmt function4
    (55) function4 -> . empty
    (21) stmt -> . assignment
    (22) stmt -> . condition
    (23) stmt -> . print
    (24) stmt -> . loop
    (25) stmt -> . read
    (26) stmt -> . graphstmt
    (27) stmt -> . graphr
    (28) stmt -> . funCall SEMICOLON
    (29) stmt -> . return
    (154) empty -> .
    (30) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (87) condition -> . IF head_cond body condition1
    (62) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (19) loop -> . while
    (20) loop -> . for
    (63) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (108) graphstmt -> . graphfig
    (109) graphstmt -> . graphview
    (110) graphstmt -> . graphmove
    (127) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (80) return -> . RETURN return1 SEMICOLON
    (68) id -> . ID
    (103) while -> . while1 body
    (98) for -> . for1 body
    (111) graphfig -> . graphfig1 SEMICOLON
    (112) graphfig -> . graphfig2 SEMICOLON
    (132) graphview -> . graphview0 SEMICOLON
    (133) graphview -> . graphview1 SEMICOLON
    (134) graphview -> . graphview2 SEMICOLON
    (117) graphmove -> . graphmove0 SEMICOLON
    (118) graphmove -> . graphmove1 SEMICOLON
    (119) graphmove -> . graphmove2 SEMICOLON
    (131) repeat -> . REPEAT
    (104) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (99) for1 -> . forInit OPENPAREN ID for2
    (113) graphfig1 -> . CIRCLE unaExp
    (114) graphfig1 -> . SQUARE unaExp
    (115) graphfig2 -> . TRIANGLE dosExp
    (116) graphfig2 -> . RECTANGLE dosExp
    (135) graphview0 -> . HIDE_STAR
    (136) graphview0 -> . SHOW_STAR
    (137) graphview1 -> . COLOR_STAR unaExp
    (138) graphview1 -> . SIZE_STAR unaExp
    (139) graphview2 -> . SETXY dosExp
    (120) graphmove0 -> . HAND_DOWN
    (121) graphmove0 -> . HAND_UP
    (122) graphmove1 -> . GO unaExp
    (123) graphmove1 -> . LEFT unaExp
    (124) graphmove1 -> . RIGHT unaExp
    (125) graphmove1 -> . BACK unaExp
    (126) graphmove2 -> . ARC dosExp
    (105) while_w -> . WHILE
    (102) forInit -> . FOR

    CLOSEBRACES     reduce using rule 154 (empty -> .)
    IF              shift and go to state 54
    PRINT           shift and go to state 55
    READ            shift and go to state 58
    ID              shift and go to state 63
    RETURN          shift and go to state 64
    REPEAT          shift and go to state 75
    CIRCLE          shift and go to state 78
    SQUARE          shift and go to state 79
    TRIANGLE        shift and go to state 80
    RECTANGLE       shift and go to state 81
    HIDE_STAR       shift and go to state 82
    SHOW_STAR       shift and go to state 83
    COLOR_STAR      shift and go to state 84
    SIZE_STAR       shift and go to state 85
    SETXY           shift and go to state 86
    HAND_DOWN       shift and go to state 87
    HAND_UP         shift and go to state 88
    GO              shift and go to state 89
    LEFT            shift and go to state 90
    RIGHT           shift and go to state 91
    BACK            shift and go to state 92
    ARC             shift and go to state 93
    WHILE           shift and go to state 94
    FOR             shift and go to state 95

    stmt                           shift and go to state 207
    function4                      shift and go to state 253
    empty                          shift and go to state 208
    assignment                     shift and go to state 44
    condition                      shift and go to state 45
    print                          shift and go to state 46
    loop                           shift and go to state 47
    read                           shift and go to state 48
    graphstmt                      shift and go to state 49
    graphr                         shift and go to state 50
    funCall                        shift and go to state 51
    return                         shift and go to state 52
    id                             shift and go to state 53
    while                          shift and go to state 56
    for                            shift and go to state 57
    graphfig                       shift and go to state 59
    graphview                      shift and go to state 60
    graphmove                      shift and go to state 61
    repeat                         shift and go to state 62
    while1                         shift and go to state 65
    for1                           shift and go to state 66
    graphfig1                      shift and go to state 67
    graphfig2                      shift and go to state 68
    graphview0                     shift and go to state 69
    graphview1                     shift and go to state 70
    graphview2                     shift and go to state 71
    graphmove0                     shift and go to state 72
    graphmove1                     shift and go to state 73
    graphmove2                     shift and go to state 74
    while_w                        shift and go to state 76
    forInit                        shift and go to state 77

state 208

    (55) function4 -> empty .

    CLOSEBRACES     reduce using rule 55 (function4 -> empty .)


state 209

    (56) function5 -> COMMA funParam . function5
    (56) function5 -> . COMMA funParam function5
    (57) function5 -> . empty
    (154) empty -> .

    COMMA           shift and go to state 166
    CLOSEPAREN      reduce using rule 154 (empty -> .)

    function5                      shift and go to state 254
    empty                          shift and go to state 167

state 210

    (143) exp -> term exp_o exp .

    SEMICOLON       reduce using rule 143 (exp -> term exp_o exp .)
    GREATER         reduce using rule 143 (exp -> term exp_o exp .)
    LESS            reduce using rule 143 (exp -> term exp_o exp .)
    NOTEQUAL        reduce using rule 143 (exp -> term exp_o exp .)
    ISEQUAL         reduce using rule 143 (exp -> term exp_o exp .)
    CLOSEPAREN      reduce using rule 143 (exp -> term exp_o exp .)
    CLOSEBRACKET    reduce using rule 143 (exp -> term exp_o exp .)
    COMMA           reduce using rule 143 (exp -> term exp_o exp .)


state 211

    (148) term -> factor term_o term .

    ADDITION        reduce using rule 148 (term -> factor term_o term .)
    SUBSTRACTION    reduce using rule 148 (term -> factor term_o term .)
    SEMICOLON       reduce using rule 148 (term -> factor term_o term .)
    GREATER         reduce using rule 148 (term -> factor term_o term .)
    LESS            reduce using rule 148 (term -> factor term_o term .)
    NOTEQUAL        reduce using rule 148 (term -> factor term_o term .)
    ISEQUAL         reduce using rule 148 (term -> factor term_o term .)
    CLOSEPAREN      reduce using rule 148 (term -> factor term_o term .)
    CLOSEBRACKET    reduce using rule 148 (term -> factor term_o term .)
    COMMA           reduce using rule 148 (term -> factor term_o term .)


state 212

    (153) factor -> openP expression closeP .

    MULTIPLICATION  reduce using rule 153 (factor -> openP expression closeP .)
    DIVISION        reduce using rule 153 (factor -> openP expression closeP .)
    ADDITION        reduce using rule 153 (factor -> openP expression closeP .)
    SUBSTRACTION    reduce using rule 153 (factor -> openP expression closeP .)
    SEMICOLON       reduce using rule 153 (factor -> openP expression closeP .)
    GREATER         reduce using rule 153 (factor -> openP expression closeP .)
    LESS            reduce using rule 153 (factor -> openP expression closeP .)
    NOTEQUAL        reduce using rule 153 (factor -> openP expression closeP .)
    ISEQUAL         reduce using rule 153 (factor -> openP expression closeP .)
    CLOSEPAREN      reduce using rule 153 (factor -> openP expression closeP .)
    CLOSEBRACKET    reduce using rule 153 (factor -> openP expression closeP .)
    COMMA           reduce using rule 153 (factor -> openP expression closeP .)


state 213

    (147) closeP -> CLOSEPAREN .

    MULTIPLICATION  reduce using rule 147 (closeP -> CLOSEPAREN .)
    DIVISION        reduce using rule 147 (closeP -> CLOSEPAREN .)
    ADDITION        reduce using rule 147 (closeP -> CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 147 (closeP -> CLOSEPAREN .)
    SEMICOLON       reduce using rule 147 (closeP -> CLOSEPAREN .)
    GREATER         reduce using rule 147 (closeP -> CLOSEPAREN .)
    LESS            reduce using rule 147 (closeP -> CLOSEPAREN .)
    NOTEQUAL        reduce using rule 147 (closeP -> CLOSEPAREN .)
    ISEQUAL         reduce using rule 147 (closeP -> CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 147 (closeP -> CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 147 (closeP -> CLOSEPAREN .)
    COMMA           reduce using rule 147 (closeP -> CLOSEPAREN .)


state 214

    (140) expression -> exp loper . exp
    (142) exp -> . term
    (143) exp -> . term exp_o exp
    (148) term -> . factor term_o term
    (149) term -> . factor
    (152) factor -> . vcte
    (153) factor -> . openP expression closeP
    (37) vcte -> . cte_int
    (38) vcte -> . cte_float
    (39) vcte -> . cte_string
    (40) vcte -> . id vcte1
    (41) vcte -> . funCall
    (146) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 113
    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    ID              shift and go to state 102

    exp                            shift and go to state 255
    term                           shift and go to state 104
    factor                         shift and go to state 105
    vcte                           shift and go to state 106
    openP                          shift and go to state 107
    cte_int                        shift and go to state 108
    cte_float                      shift and go to state 109
    cte_string                     shift and go to state 110
    id                             shift and go to state 111
    funCall                        shift and go to state 112

state 215

    (83) loper -> GREATER .

    OPENPAREN       reduce using rule 83 (loper -> GREATER .)
    CTEINT          reduce using rule 83 (loper -> GREATER .)
    CTEFLOAT        reduce using rule 83 (loper -> GREATER .)
    CTESTRING       reduce using rule 83 (loper -> GREATER .)
    ID              reduce using rule 83 (loper -> GREATER .)


state 216

    (84) loper -> LESS .

    OPENPAREN       reduce using rule 84 (loper -> LESS .)
    CTEINT          reduce using rule 84 (loper -> LESS .)
    CTEFLOAT        reduce using rule 84 (loper -> LESS .)
    CTESTRING       reduce using rule 84 (loper -> LESS .)
    ID              reduce using rule 84 (loper -> LESS .)


state 217

    (85) loper -> NOTEQUAL .

    OPENPAREN       reduce using rule 85 (loper -> NOTEQUAL .)
    CTEINT          reduce using rule 85 (loper -> NOTEQUAL .)
    CTEFLOAT        reduce using rule 85 (loper -> NOTEQUAL .)
    CTESTRING       reduce using rule 85 (loper -> NOTEQUAL .)
    ID              reduce using rule 85 (loper -> NOTEQUAL .)


state 218

    (86) loper -> ISEQUAL .

    OPENPAREN       reduce using rule 86 (loper -> ISEQUAL .)
    CTEINT          reduce using rule 86 (loper -> ISEQUAL .)
    CTEFLOAT        reduce using rule 86 (loper -> ISEQUAL .)
    CTESTRING       reduce using rule 86 (loper -> ISEQUAL .)
    ID              reduce using rule 86 (loper -> ISEQUAL .)


state 219

    (42) vcte1 -> OPENBRACKET exp . CLOSEBRACKET vcte3

    CLOSEBRACKET    shift and go to state 256


state 220

    (17) vars3 -> OPENBRACKET CTEINT . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 257


state 221

    (30) assignment -> id assignment1 equals assignment3 . SEMICOLON

    SEMICOLON       shift and go to state 258


state 222

    (35) assignment3 -> exp .

    SEMICOLON       reduce using rule 35 (assignment3 -> exp .)


state 223

    (36) assignment3 -> read .

    SEMICOLON       reduce using rule 36 (assignment3 -> read .)


state 224

    (34) assignment2 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     reduce using rule 34 (assignment2 -> OPENBRACKET exp CLOSEBRACKET .)
    EQUALS          reduce using rule 34 (assignment2 -> OPENBRACKET exp CLOSEBRACKET .)


state 225

    (87) condition -> IF head_cond body condition1 .

    IF              reduce using rule 87 (condition -> IF head_cond body condition1 .)
    PRINT           reduce using rule 87 (condition -> IF head_cond body condition1 .)
    READ            reduce using rule 87 (condition -> IF head_cond body condition1 .)
    ID              reduce using rule 87 (condition -> IF head_cond body condition1 .)
    RETURN          reduce using rule 87 (condition -> IF head_cond body condition1 .)
    REPEAT          reduce using rule 87 (condition -> IF head_cond body condition1 .)
    CIRCLE          reduce using rule 87 (condition -> IF head_cond body condition1 .)
    SQUARE          reduce using rule 87 (condition -> IF head_cond body condition1 .)
    TRIANGLE        reduce using rule 87 (condition -> IF head_cond body condition1 .)
    RECTANGLE       reduce using rule 87 (condition -> IF head_cond body condition1 .)
    HIDE_STAR       reduce using rule 87 (condition -> IF head_cond body condition1 .)
    SHOW_STAR       reduce using rule 87 (condition -> IF head_cond body condition1 .)
    COLOR_STAR      reduce using rule 87 (condition -> IF head_cond body condition1 .)
    SIZE_STAR       reduce using rule 87 (condition -> IF head_cond body condition1 .)
    SETXY           reduce using rule 87 (condition -> IF head_cond body condition1 .)
    HAND_DOWN       reduce using rule 87 (condition -> IF head_cond body condition1 .)
    HAND_UP         reduce using rule 87 (condition -> IF head_cond body condition1 .)
    GO              reduce using rule 87 (condition -> IF head_cond body condition1 .)
    LEFT            reduce using rule 87 (condition -> IF head_cond body condition1 .)
    RIGHT           reduce using rule 87 (condition -> IF head_cond body condition1 .)
    BACK            reduce using rule 87 (condition -> IF head_cond body condition1 .)
    ARC             reduce using rule 87 (condition -> IF head_cond body condition1 .)
    WHILE           reduce using rule 87 (condition -> IF head_cond body condition1 .)
    FOR             reduce using rule 87 (condition -> IF head_cond body condition1 .)
    CLOSEBRACES     reduce using rule 87 (condition -> IF head_cond body condition1 .)


state 226

    (88) condition1 -> elseif . head_cond body condition1
    (93) head_cond -> . OPENPAREN expression close_condition

    OPENPAREN       shift and go to state 126

    head_cond                      shift and go to state 259

state 227

    (89) condition1 -> else . body
    (94) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 137

    body                           shift and go to state 260

state 228

    (90) condition1 -> empty .

    IF              reduce using rule 90 (condition1 -> empty .)
    PRINT           reduce using rule 90 (condition1 -> empty .)
    READ            reduce using rule 90 (condition1 -> empty .)
    ID              reduce using rule 90 (condition1 -> empty .)
    RETURN          reduce using rule 90 (condition1 -> empty .)
    REPEAT          reduce using rule 90 (condition1 -> empty .)
    CIRCLE          reduce using rule 90 (condition1 -> empty .)
    SQUARE          reduce using rule 90 (condition1 -> empty .)
    TRIANGLE        reduce using rule 90 (condition1 -> empty .)
    RECTANGLE       reduce using rule 90 (condition1 -> empty .)
    HIDE_STAR       reduce using rule 90 (condition1 -> empty .)
    SHOW_STAR       reduce using rule 90 (condition1 -> empty .)
    COLOR_STAR      reduce using rule 90 (condition1 -> empty .)
    SIZE_STAR       reduce using rule 90 (condition1 -> empty .)
    SETXY           reduce using rule 90 (condition1 -> empty .)
    HAND_DOWN       reduce using rule 90 (condition1 -> empty .)
    HAND_UP         reduce using rule 90 (condition1 -> empty .)
    GO              reduce using rule 90 (condition1 -> empty .)
    LEFT            reduce using rule 90 (condition1 -> empty .)
    RIGHT           reduce using rule 90 (condition1 -> empty .)
    BACK            reduce using rule 90 (condition1 -> empty .)
    ARC             reduce using rule 90 (condition1 -> empty .)
    WHILE           reduce using rule 90 (condition1 -> empty .)
    FOR             reduce using rule 90 (condition1 -> empty .)
    CLOSEBRACES     reduce using rule 90 (condition1 -> empty .)


state 229

    (91) elseif -> ELSEIF .

    OPENPAREN       reduce using rule 91 (elseif -> ELSEIF .)


state 230

    (92) else -> ELSE .

    OPENBRACES      reduce using rule 92 (else -> ELSE .)


state 231

    (93) head_cond -> OPENPAREN expression close_condition .

    OPENBRACES      reduce using rule 93 (head_cond -> OPENPAREN expression close_condition .)


state 232

    (95) close_condition -> CLOSEPAREN .

    OPENBRACES      reduce using rule 95 (close_condition -> CLOSEPAREN .)


state 233

    (62) print -> PRINT OPENPAREN expression CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 261


state 234

    (63) read -> READ OPENPAREN id read1 . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 262


state 235

    (64) read1 -> OPENBRACKET . exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (65) read1 -> OPENBRACKET . exp CLOSEBRACKET
    (142) exp -> . term
    (143) exp -> . term exp_o exp
    (148) term -> . factor term_o term
    (149) term -> . factor
    (152) factor -> . vcte
    (153) factor -> . openP expression closeP
    (37) vcte -> . cte_int
    (38) vcte -> . cte_float
    (39) vcte -> . cte_string
    (40) vcte -> . id vcte1
    (41) vcte -> . funCall
    (146) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 113
    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    ID              shift and go to state 102

    exp                            shift and go to state 263
    term                           shift and go to state 104
    factor                         shift and go to state 105
    vcte                           shift and go to state 106
    openP                          shift and go to state 107
    cte_int                        shift and go to state 108
    cte_float                      shift and go to state 109
    cte_string                     shift and go to state 110
    id                             shift and go to state 111
    funCall                        shift and go to state 112

state 236

    (66) read1 -> empty .

    CLOSEPAREN      reduce using rule 66 (read1 -> empty .)


state 237

    (127) graphr -> repeat rep OPENBRACES graphstmt . graphr1 CLOSEBRACES
    (128) graphr1 -> . graphstmt graphr1
    (129) graphr1 -> . empty
    (108) graphstmt -> . graphfig
    (109) graphstmt -> . graphview
    (110) graphstmt -> . graphmove
    (154) empty -> .
    (111) graphfig -> . graphfig1 SEMICOLON
    (112) graphfig -> . graphfig2 SEMICOLON
    (132) graphview -> . graphview0 SEMICOLON
    (133) graphview -> . graphview1 SEMICOLON
    (134) graphview -> . graphview2 SEMICOLON
    (117) graphmove -> . graphmove0 SEMICOLON
    (118) graphmove -> . graphmove1 SEMICOLON
    (119) graphmove -> . graphmove2 SEMICOLON
    (113) graphfig1 -> . CIRCLE unaExp
    (114) graphfig1 -> . SQUARE unaExp
    (115) graphfig2 -> . TRIANGLE dosExp
    (116) graphfig2 -> . RECTANGLE dosExp
    (135) graphview0 -> . HIDE_STAR
    (136) graphview0 -> . SHOW_STAR
    (137) graphview1 -> . COLOR_STAR unaExp
    (138) graphview1 -> . SIZE_STAR unaExp
    (139) graphview2 -> . SETXY dosExp
    (120) graphmove0 -> . HAND_DOWN
    (121) graphmove0 -> . HAND_UP
    (122) graphmove1 -> . GO unaExp
    (123) graphmove1 -> . LEFT unaExp
    (124) graphmove1 -> . RIGHT unaExp
    (125) graphmove1 -> . BACK unaExp
    (126) graphmove2 -> . ARC dosExp

    CLOSEBRACES     reduce using rule 154 (empty -> .)
    CIRCLE          shift and go to state 78
    SQUARE          shift and go to state 79
    TRIANGLE        shift and go to state 80
    RECTANGLE       shift and go to state 81
    HIDE_STAR       shift and go to state 82
    SHOW_STAR       shift and go to state 83
    COLOR_STAR      shift and go to state 84
    SIZE_STAR       shift and go to state 85
    SETXY           shift and go to state 86
    HAND_DOWN       shift and go to state 87
    HAND_UP         shift and go to state 88
    GO              shift and go to state 89
    LEFT            shift and go to state 90
    RIGHT           shift and go to state 91
    BACK            shift and go to state 92
    ARC             shift and go to state 93

    graphstmt                      shift and go to state 264
    graphr1                        shift and go to state 265
    empty                          shift and go to state 266
    graphfig                       shift and go to state 59
    graphview                      shift and go to state 60
    graphmove                      shift and go to state 61
    graphfig1                      shift and go to state 67
    graphfig2                      shift and go to state 68
    graphview0                     shift and go to state 69
    graphview1                     shift and go to state 70
    graphview2                     shift and go to state 71
    graphmove0                     shift and go to state 72
    graphmove1                     shift and go to state 73
    graphmove2                     shift and go to state 74

state 238

    (130) rep -> OPENPAREN exp CLOSEPAREN .

    OPENBRACES      reduce using rule 130 (rep -> OPENPAREN exp CLOSEPAREN .)


state 239

    (69) funCall -> ID iniciaFunCall funCall2 terminaFunCall .

    SEMICOLON       reduce using rule 69 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    MULTIPLICATION  reduce using rule 69 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    DIVISION        reduce using rule 69 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    ADDITION        reduce using rule 69 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    SUBSTRACTION    reduce using rule 69 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    GREATER         reduce using rule 69 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    LESS            reduce using rule 69 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    NOTEQUAL        reduce using rule 69 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    ISEQUAL         reduce using rule 69 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    CLOSEPAREN      reduce using rule 69 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    CLOSEBRACKET    reduce using rule 69 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    COMMA           reduce using rule 69 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)


state 240

    (71) terminaFunCall -> CLOSEPAREN .

    SEMICOLON       reduce using rule 71 (terminaFunCall -> CLOSEPAREN .)
    MULTIPLICATION  reduce using rule 71 (terminaFunCall -> CLOSEPAREN .)
    DIVISION        reduce using rule 71 (terminaFunCall -> CLOSEPAREN .)
    ADDITION        reduce using rule 71 (terminaFunCall -> CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 71 (terminaFunCall -> CLOSEPAREN .)
    GREATER         reduce using rule 71 (terminaFunCall -> CLOSEPAREN .)
    LESS            reduce using rule 71 (terminaFunCall -> CLOSEPAREN .)
    NOTEQUAL        reduce using rule 71 (terminaFunCall -> CLOSEPAREN .)
    ISEQUAL         reduce using rule 71 (terminaFunCall -> CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 71 (terminaFunCall -> CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 71 (terminaFunCall -> CLOSEPAREN .)
    COMMA           reduce using rule 71 (terminaFunCall -> CLOSEPAREN .)


state 241

    (72) funCall2 -> funCallParam funCall3 .

    CLOSEPAREN      reduce using rule 72 (funCall2 -> funCallParam funCall3 .)


state 242

    (74) funCall3 -> COMMA . funCallParam funCall3
    (76) funCallParam -> . exp
    (142) exp -> . term
    (143) exp -> . term exp_o exp
    (148) term -> . factor term_o term
    (149) term -> . factor
    (152) factor -> . vcte
    (153) factor -> . openP expression closeP
    (37) vcte -> . cte_int
    (38) vcte -> . cte_float
    (39) vcte -> . cte_string
    (40) vcte -> . id vcte1
    (41) vcte -> . funCall
    (146) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 113
    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    ID              shift and go to state 102

    funCallParam                   shift and go to state 267
    exp                            shift and go to state 197
    term                           shift and go to state 104
    factor                         shift and go to state 105
    vcte                           shift and go to state 106
    openP                          shift and go to state 107
    cte_int                        shift and go to state 108
    cte_float                      shift and go to state 109
    cte_string                     shift and go to state 110
    id                             shift and go to state 111
    funCall                        shift and go to state 112

state 243

    (75) funCall3 -> empty .

    CLOSEPAREN      reduce using rule 75 (funCall3 -> empty .)


state 244

    (94) body -> OPENBRACES body1 CLOSEBRACES .

    IF              reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    PRINT           reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    READ            reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    ID              reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    RETURN          reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    REPEAT          reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    CIRCLE          reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    SQUARE          reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    SETXY           reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_UP         reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    GO              reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    LEFT            reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    RIGHT           reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    BACK            reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    ARC             reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    WHILE           reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    FOR             reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSEIF          reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSE            reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)


state 245

    (96) body1 -> stmt body1 .

    CLOSEBRACES     reduce using rule 96 (body1 -> stmt body1 .)


state 246

    (104) while1 -> while_w OPENPAREN expression CLOSEPAREN .

    OPENBRACES      reduce using rule 104 (while1 -> while_w OPENPAREN expression CLOSEPAREN .)


state 247

    (99) for1 -> forInit OPENPAREN ID for2 .

    OPENBRACES      reduce using rule 99 (for1 -> forInit OPENPAREN ID for2 .)


state 248

    (100) for2 -> TWODOTS . exp for3
    (142) exp -> . term
    (143) exp -> . term exp_o exp
    (148) term -> . factor term_o term
    (149) term -> . factor
    (152) factor -> . vcte
    (153) factor -> . openP expression closeP
    (37) vcte -> . cte_int
    (38) vcte -> . cte_float
    (39) vcte -> . cte_string
    (40) vcte -> . id vcte1
    (41) vcte -> . funCall
    (146) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 113
    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    ID              shift and go to state 102

    exp                            shift and go to state 268
    term                           shift and go to state 104
    factor                         shift and go to state 105
    vcte                           shift and go to state 106
    openP                          shift and go to state 107
    cte_int                        shift and go to state 108
    cte_float                      shift and go to state 109
    cte_string                     shift and go to state 110
    id                             shift and go to state 111
    funCall                        shift and go to state 112

state 249

    (107) unaExp -> OPENPAREN exp CLOSEPAREN .

    SEMICOLON       reduce using rule 107 (unaExp -> OPENPAREN exp CLOSEPAREN .)


state 250

    (106) dosExp -> OPENPAREN exp COMMA . exp CLOSEPAREN
    (142) exp -> . term
    (143) exp -> . term exp_o exp
    (148) term -> . factor term_o term
    (149) term -> . factor
    (152) factor -> . vcte
    (153) factor -> . openP expression closeP
    (37) vcte -> . cte_int
    (38) vcte -> . cte_float
    (39) vcte -> . cte_string
    (40) vcte -> . id vcte1
    (41) vcte -> . funCall
    (146) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 113
    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    ID              shift and go to state 102

    exp                            shift and go to state 269
    term                           shift and go to state 104
    factor                         shift and go to state 105
    vcte                           shift and go to state 106
    openP                          shift and go to state 107
    cte_int                        shift and go to state 108
    cte_float                      shift and go to state 109
    cte_string                     shift and go to state 110
    id                             shift and go to state 111
    funCall                        shift and go to state 112

state 251

    (48) function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .

    FUN             reduce using rule 48 (function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .)
    MULTIPLICATION  reduce using rule 48 (function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .)


state 252

    (50) termina_fun -> CLOSEBRACES .

    FUN             reduce using rule 50 (termina_fun -> CLOSEBRACES .)
    MULTIPLICATION  reduce using rule 50 (termina_fun -> CLOSEBRACES .)


state 253

    (54) function4 -> stmt function4 .

    CLOSEBRACES     reduce using rule 54 (function4 -> stmt function4 .)


state 254

    (56) function5 -> COMMA funParam function5 .

    CLOSEPAREN      reduce using rule 56 (function5 -> COMMA funParam function5 .)


state 255

    (140) expression -> exp loper exp .

    CLOSEPAREN      reduce using rule 140 (expression -> exp loper exp .)


state 256

    (42) vcte1 -> OPENBRACKET exp CLOSEBRACKET . vcte3
    (44) vcte3 -> . OPENBRACKET exp CLOSEBRACKET
    (45) vcte3 -> . empty
    (154) empty -> .

    OPENBRACKET     shift and go to state 270
    MULTIPLICATION  reduce using rule 154 (empty -> .)
    DIVISION        reduce using rule 154 (empty -> .)
    ADDITION        reduce using rule 154 (empty -> .)
    SUBSTRACTION    reduce using rule 154 (empty -> .)
    SEMICOLON       reduce using rule 154 (empty -> .)
    GREATER         reduce using rule 154 (empty -> .)
    LESS            reduce using rule 154 (empty -> .)
    NOTEQUAL        reduce using rule 154 (empty -> .)
    ISEQUAL         reduce using rule 154 (empty -> .)
    CLOSEPAREN      reduce using rule 154 (empty -> .)
    CLOSEBRACKET    reduce using rule 154 (empty -> .)
    COMMA           reduce using rule 154 (empty -> .)

    vcte3                          shift and go to state 271
    empty                          shift and go to state 272

state 257

    (17) vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .

    SEMICOLON       reduce using rule 17 (vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .)
    EQUALS          reduce using rule 17 (vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .)


state 258

    (30) assignment -> id assignment1 equals assignment3 SEMICOLON .

    IF              reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    PRINT           reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    READ            reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    ID              reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    RETURN          reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    REPEAT          reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    CIRCLE          reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SQUARE          reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    TRIANGLE        reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    RECTANGLE       reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    HIDE_STAR       reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SHOW_STAR       reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    COLOR_STAR      reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SIZE_STAR       reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SETXY           reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    HAND_DOWN       reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    HAND_UP         reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    GO              reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    LEFT            reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    RIGHT           reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    BACK            reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    ARC             reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    WHILE           reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    FOR             reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    CLOSEBRACES     reduce using rule 30 (assignment -> id assignment1 equals assignment3 SEMICOLON .)


state 259

    (88) condition1 -> elseif head_cond . body condition1
    (94) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 137

    body                           shift and go to state 273

state 260

    (89) condition1 -> else body .

    IF              reduce using rule 89 (condition1 -> else body .)
    PRINT           reduce using rule 89 (condition1 -> else body .)
    READ            reduce using rule 89 (condition1 -> else body .)
    ID              reduce using rule 89 (condition1 -> else body .)
    RETURN          reduce using rule 89 (condition1 -> else body .)
    REPEAT          reduce using rule 89 (condition1 -> else body .)
    CIRCLE          reduce using rule 89 (condition1 -> else body .)
    SQUARE          reduce using rule 89 (condition1 -> else body .)
    TRIANGLE        reduce using rule 89 (condition1 -> else body .)
    RECTANGLE       reduce using rule 89 (condition1 -> else body .)
    HIDE_STAR       reduce using rule 89 (condition1 -> else body .)
    SHOW_STAR       reduce using rule 89 (condition1 -> else body .)
    COLOR_STAR      reduce using rule 89 (condition1 -> else body .)
    SIZE_STAR       reduce using rule 89 (condition1 -> else body .)
    SETXY           reduce using rule 89 (condition1 -> else body .)
    HAND_DOWN       reduce using rule 89 (condition1 -> else body .)
    HAND_UP         reduce using rule 89 (condition1 -> else body .)
    GO              reduce using rule 89 (condition1 -> else body .)
    LEFT            reduce using rule 89 (condition1 -> else body .)
    RIGHT           reduce using rule 89 (condition1 -> else body .)
    BACK            reduce using rule 89 (condition1 -> else body .)
    ARC             reduce using rule 89 (condition1 -> else body .)
    WHILE           reduce using rule 89 (condition1 -> else body .)
    FOR             reduce using rule 89 (condition1 -> else body .)
    CLOSEBRACES     reduce using rule 89 (condition1 -> else body .)


state 261

    (62) print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .

    IF              reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 62 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)


state 262

    (63) read -> READ OPENPAREN id read1 CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 274


state 263

    (64) read1 -> OPENBRACKET exp . CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (65) read1 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 275


state 264

    (128) graphr1 -> graphstmt . graphr1
    (128) graphr1 -> . graphstmt graphr1
    (129) graphr1 -> . empty
    (108) graphstmt -> . graphfig
    (109) graphstmt -> . graphview
    (110) graphstmt -> . graphmove
    (154) empty -> .
    (111) graphfig -> . graphfig1 SEMICOLON
    (112) graphfig -> . graphfig2 SEMICOLON
    (132) graphview -> . graphview0 SEMICOLON
    (133) graphview -> . graphview1 SEMICOLON
    (134) graphview -> . graphview2 SEMICOLON
    (117) graphmove -> . graphmove0 SEMICOLON
    (118) graphmove -> . graphmove1 SEMICOLON
    (119) graphmove -> . graphmove2 SEMICOLON
    (113) graphfig1 -> . CIRCLE unaExp
    (114) graphfig1 -> . SQUARE unaExp
    (115) graphfig2 -> . TRIANGLE dosExp
    (116) graphfig2 -> . RECTANGLE dosExp
    (135) graphview0 -> . HIDE_STAR
    (136) graphview0 -> . SHOW_STAR
    (137) graphview1 -> . COLOR_STAR unaExp
    (138) graphview1 -> . SIZE_STAR unaExp
    (139) graphview2 -> . SETXY dosExp
    (120) graphmove0 -> . HAND_DOWN
    (121) graphmove0 -> . HAND_UP
    (122) graphmove1 -> . GO unaExp
    (123) graphmove1 -> . LEFT unaExp
    (124) graphmove1 -> . RIGHT unaExp
    (125) graphmove1 -> . BACK unaExp
    (126) graphmove2 -> . ARC dosExp

    CLOSEBRACES     reduce using rule 154 (empty -> .)
    CIRCLE          shift and go to state 78
    SQUARE          shift and go to state 79
    TRIANGLE        shift and go to state 80
    RECTANGLE       shift and go to state 81
    HIDE_STAR       shift and go to state 82
    SHOW_STAR       shift and go to state 83
    COLOR_STAR      shift and go to state 84
    SIZE_STAR       shift and go to state 85
    SETXY           shift and go to state 86
    HAND_DOWN       shift and go to state 87
    HAND_UP         shift and go to state 88
    GO              shift and go to state 89
    LEFT            shift and go to state 90
    RIGHT           shift and go to state 91
    BACK            shift and go to state 92
    ARC             shift and go to state 93

    graphstmt                      shift and go to state 264
    graphr1                        shift and go to state 276
    empty                          shift and go to state 266
    graphfig                       shift and go to state 59
    graphview                      shift and go to state 60
    graphmove                      shift and go to state 61
    graphfig1                      shift and go to state 67
    graphfig2                      shift and go to state 68
    graphview0                     shift and go to state 69
    graphview1                     shift and go to state 70
    graphview2                     shift and go to state 71
    graphmove0                     shift and go to state 72
    graphmove1                     shift and go to state 73
    graphmove2                     shift and go to state 74

state 265

    (127) graphr -> repeat rep OPENBRACES graphstmt graphr1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 277


state 266

    (129) graphr1 -> empty .

    CLOSEBRACES     reduce using rule 129 (graphr1 -> empty .)


state 267

    (74) funCall3 -> COMMA funCallParam . funCall3
    (74) funCall3 -> . COMMA funCallParam funCall3
    (75) funCall3 -> . empty
    (154) empty -> .

    COMMA           shift and go to state 242
    CLOSEPAREN      reduce using rule 154 (empty -> .)

    funCall3                       shift and go to state 278
    empty                          shift and go to state 243

state 268

    (100) for2 -> TWODOTS exp . for3
    (101) for3 -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 280

    for3                           shift and go to state 279

state 269

    (106) dosExp -> OPENPAREN exp COMMA exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 281


state 270

    (44) vcte3 -> OPENBRACKET . exp CLOSEBRACKET
    (142) exp -> . term
    (143) exp -> . term exp_o exp
    (148) term -> . factor term_o term
    (149) term -> . factor
    (152) factor -> . vcte
    (153) factor -> . openP expression closeP
    (37) vcte -> . cte_int
    (38) vcte -> . cte_float
    (39) vcte -> . cte_string
    (40) vcte -> . id vcte1
    (41) vcte -> . funCall
    (146) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 113
    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    ID              shift and go to state 102

    exp                            shift and go to state 282
    term                           shift and go to state 104
    factor                         shift and go to state 105
    vcte                           shift and go to state 106
    openP                          shift and go to state 107
    cte_int                        shift and go to state 108
    cte_float                      shift and go to state 109
    cte_string                     shift and go to state 110
    id                             shift and go to state 111
    funCall                        shift and go to state 112

state 271

    (42) vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .

    MULTIPLICATION  reduce using rule 42 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    DIVISION        reduce using rule 42 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ADDITION        reduce using rule 42 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    SUBSTRACTION    reduce using rule 42 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    SEMICOLON       reduce using rule 42 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    GREATER         reduce using rule 42 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    LESS            reduce using rule 42 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    NOTEQUAL        reduce using rule 42 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ISEQUAL         reduce using rule 42 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CLOSEPAREN      reduce using rule 42 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CLOSEBRACKET    reduce using rule 42 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    COMMA           reduce using rule 42 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)


state 272

    (45) vcte3 -> empty .

    MULTIPLICATION  reduce using rule 45 (vcte3 -> empty .)
    DIVISION        reduce using rule 45 (vcte3 -> empty .)
    ADDITION        reduce using rule 45 (vcte3 -> empty .)
    SUBSTRACTION    reduce using rule 45 (vcte3 -> empty .)
    SEMICOLON       reduce using rule 45 (vcte3 -> empty .)
    GREATER         reduce using rule 45 (vcte3 -> empty .)
    LESS            reduce using rule 45 (vcte3 -> empty .)
    NOTEQUAL        reduce using rule 45 (vcte3 -> empty .)
    ISEQUAL         reduce using rule 45 (vcte3 -> empty .)
    CLOSEPAREN      reduce using rule 45 (vcte3 -> empty .)
    CLOSEBRACKET    reduce using rule 45 (vcte3 -> empty .)
    COMMA           reduce using rule 45 (vcte3 -> empty .)


state 273

    (88) condition1 -> elseif head_cond body . condition1
    (88) condition1 -> . elseif head_cond body condition1
    (89) condition1 -> . else body
    (90) condition1 -> . empty
    (91) elseif -> . ELSEIF
    (92) else -> . ELSE
    (154) empty -> .

    ELSEIF          shift and go to state 229
    ELSE            shift and go to state 230
    IF              reduce using rule 154 (empty -> .)
    PRINT           reduce using rule 154 (empty -> .)
    READ            reduce using rule 154 (empty -> .)
    ID              reduce using rule 154 (empty -> .)
    RETURN          reduce using rule 154 (empty -> .)
    REPEAT          reduce using rule 154 (empty -> .)
    CIRCLE          reduce using rule 154 (empty -> .)
    SQUARE          reduce using rule 154 (empty -> .)
    TRIANGLE        reduce using rule 154 (empty -> .)
    RECTANGLE       reduce using rule 154 (empty -> .)
    HIDE_STAR       reduce using rule 154 (empty -> .)
    SHOW_STAR       reduce using rule 154 (empty -> .)
    COLOR_STAR      reduce using rule 154 (empty -> .)
    SIZE_STAR       reduce using rule 154 (empty -> .)
    SETXY           reduce using rule 154 (empty -> .)
    HAND_DOWN       reduce using rule 154 (empty -> .)
    HAND_UP         reduce using rule 154 (empty -> .)
    GO              reduce using rule 154 (empty -> .)
    LEFT            reduce using rule 154 (empty -> .)
    RIGHT           reduce using rule 154 (empty -> .)
    BACK            reduce using rule 154 (empty -> .)
    ARC             reduce using rule 154 (empty -> .)
    WHILE           reduce using rule 154 (empty -> .)
    FOR             reduce using rule 154 (empty -> .)
    CLOSEBRACES     reduce using rule 154 (empty -> .)

    elseif                         shift and go to state 226
    condition1                     shift and go to state 283
    else                           shift and go to state 227
    empty                          shift and go to state 228

state 274

    (63) read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .

    IF              reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 63 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)


state 275

    (64) read1 -> OPENBRACKET exp CLOSEBRACKET . OPENBRACKET exp CLOSEBRACKET
    (65) read1 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     shift and go to state 284
    CLOSEPAREN      reduce using rule 65 (read1 -> OPENBRACKET exp CLOSEBRACKET .)


state 276

    (128) graphr1 -> graphstmt graphr1 .

    CLOSEBRACES     reduce using rule 128 (graphr1 -> graphstmt graphr1 .)


state 277

    (127) graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .

    IF              reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    PRINT           reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    READ            reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    ID              reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RETURN          reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    REPEAT          reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    CIRCLE          reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SQUARE          reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SETXY           reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HAND_UP         reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    GO              reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    LEFT            reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RIGHT           reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    BACK            reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    ARC             reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    WHILE           reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    FOR             reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 127 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)


state 278

    (74) funCall3 -> COMMA funCallParam funCall3 .

    CLOSEPAREN      reduce using rule 74 (funCall3 -> COMMA funCallParam funCall3 .)


state 279

    (100) for2 -> TWODOTS exp for3 .

    OPENBRACES      reduce using rule 100 (for2 -> TWODOTS exp for3 .)


state 280

    (101) for3 -> CLOSEPAREN .

    OPENBRACES      reduce using rule 101 (for3 -> CLOSEPAREN .)


state 281

    (106) dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN .

    SEMICOLON       reduce using rule 106 (dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN .)


state 282

    (44) vcte3 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 285


state 283

    (88) condition1 -> elseif head_cond body condition1 .

    IF              reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    PRINT           reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    READ            reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    ID              reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    RETURN          reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    REPEAT          reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    CIRCLE          reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    SQUARE          reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    TRIANGLE        reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    RECTANGLE       reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    HIDE_STAR       reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    SHOW_STAR       reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    COLOR_STAR      reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    SIZE_STAR       reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    SETXY           reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    HAND_DOWN       reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    HAND_UP         reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    GO              reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    LEFT            reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    RIGHT           reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    BACK            reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    ARC             reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    WHILE           reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    FOR             reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    CLOSEBRACES     reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)


state 284

    (64) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET . exp CLOSEBRACKET
    (142) exp -> . term
    (143) exp -> . term exp_o exp
    (148) term -> . factor term_o term
    (149) term -> . factor
    (152) factor -> . vcte
    (153) factor -> . openP expression closeP
    (37) vcte -> . cte_int
    (38) vcte -> . cte_float
    (39) vcte -> . cte_string
    (40) vcte -> . id vcte1
    (41) vcte -> . funCall
    (146) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall

    OPENPAREN       shift and go to state 113
    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTESTRING       shift and go to state 116
    ID              shift and go to state 102

    exp                            shift and go to state 286
    term                           shift and go to state 104
    factor                         shift and go to state 105
    vcte                           shift and go to state 106
    openP                          shift and go to state 107
    cte_int                        shift and go to state 108
    cte_float                      shift and go to state 109
    cte_string                     shift and go to state 110
    id                             shift and go to state 111
    funCall                        shift and go to state 112

state 285

    (44) vcte3 -> OPENBRACKET exp CLOSEBRACKET .

    MULTIPLICATION  reduce using rule 44 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    DIVISION        reduce using rule 44 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ADDITION        reduce using rule 44 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    SUBSTRACTION    reduce using rule 44 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    SEMICOLON       reduce using rule 44 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    GREATER         reduce using rule 44 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    LESS            reduce using rule 44 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 44 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ISEQUAL         reduce using rule 44 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 44 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 44 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    COMMA           reduce using rule 44 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)


state 286

    (64) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 287


state 287

    (64) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .

    CLOSEPAREN      reduce using rule 64 (read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 122 resolved using rule (assignment1 -> assignment2)
WARNING: rejected rule (empty -> <empty>) in state 122
WARNING: reduce/reduce conflict in state 134 resolved using rule (return1 -> vcte)
WARNING: rejected rule (factor -> vcte) in state 134
