Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    SIMPLEQUOTES
    VARS

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON declara_vars program2 star
Rule 2     program2 -> function program2
Rule 3     program2 -> empty
Rule 4     star -> starI declara_vars star1 CLOSEBRACES
Rule 5     starI -> MULTIPLICATION OPENBRACES
Rule 6     star1 -> stmt star1
Rule 7     star1 -> empty
Rule 8     declara_vars -> vars declara_vars
Rule 9     declara_vars -> empty
Rule 10    loop -> while
Rule 11    loop -> for
Rule 12    stmt -> assignment
Rule 13    stmt -> condition
Rule 14    stmt -> print
Rule 15    stmt -> loop
Rule 16    stmt -> read
Rule 17    stmt -> graphstmt
Rule 18    stmt -> graphr
Rule 19    stmt -> funCall SEMICOLON
Rule 20    stmt -> return
Rule 21    functionI -> type ID
Rule 22    functionI -> VOID ID
Rule 23    function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun
Rule 24    inicia_fun -> OPENBRACES
Rule 25    termina_fun -> CLOSEBRACES
Rule 26    function2 -> OPENPAREN function3 CLOSEPAREN
Rule 27    function3 -> type ID function5
Rule 28    function3 -> empty
Rule 29    function4 -> stmt function4
Rule 30    function4 -> empty
Rule 31    function5 -> COMMA type ID function5
Rule 32    function5 -> empty
Rule 33    vars -> type ID vars1 equals exp SEMICOLON
Rule 34    vars -> type ID vars1 SEMICOLON
Rule 35    vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3
Rule 36    vars1 -> empty
Rule 37    vars3 -> OPENBRACKET CTEINT CLOSEBRACKET
Rule 38    vars3 -> empty
Rule 39    type -> INT
Rule 40    type -> FLOAT
Rule 41    type -> CHAR
Rule 42    print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
Rule 43    read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
Rule 44    read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
Rule 45    read1 -> OPENBRACKET exp CLOSEBRACKET
Rule 46    read1 -> empty
Rule 47    equals -> EQUALS
Rule 48    id -> ID
Rule 49    assignment -> id assignment1 equals assignment3 SEMICOLON
Rule 50    assignment1 -> assignment2
Rule 51    assignment1 -> assignment2 assignment1
Rule 52    assignment1 -> empty
Rule 53    assignment2 -> OPENBRACKET exp CLOSEBRACKET
Rule 54    assignment3 -> exp
Rule 55    assignment3 -> read
Rule 56    vcte -> cte_int
Rule 57    vcte -> cte_float
Rule 58    vcte -> cte_char
Rule 59    vcte -> id vcte1
Rule 60    vcte -> funCall
Rule 61    vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3
Rule 62    vcte1 -> empty
Rule 63    vcte3 -> OPENBRACKET exp CLOSEBRACKET
Rule 64    vcte3 -> empty
Rule 65    cte_int -> CTEINT
Rule 66    cte_float -> CTEFLOAT
Rule 67    cte_char -> CTECHAR
Rule 68    return -> RETURN return1 SEMICOLON
Rule 69    return1 -> vcte
Rule 70    return1 -> exp
Rule 71    expression -> exp expression1
Rule 72    expression1 -> loper exp
Rule 73    expression1 -> empty
Rule 74    loper -> GREATER
Rule 75    loper -> LESS
Rule 76    loper -> NOTEQUAL
Rule 77    loper -> ISEQUAL
Rule 78    condition -> IF head_cond body condition1
Rule 79    condition1 -> elseif head_cond body condition1
Rule 80    condition1 -> else body
Rule 81    condition1 -> empty
Rule 82    elseif -> ELSEIF
Rule 83    else -> ELSE
Rule 84    head_cond -> OPENPAREN expression close_condition
Rule 85    body -> OPENBRACES body1 CLOSEBRACES
Rule 86    close_condition -> CLOSEPAREN
Rule 87    body1 -> stmt body1
Rule 88    body1 -> empty
Rule 89    for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
Rule 90    while -> while1 body
Rule 91    while1 -> while_w OPENPAREN expression CLOSEPAREN
Rule 92    while_w -> WHILE
Rule 93    funCall -> ID OPENPAREN funCall2 CLOSEPAREN
Rule 94    funCall2 -> exp funCall3
Rule 95    funCall2 -> empty
Rule 96    funCall3 -> COMMA exp funCall2
Rule 97    funCall3 -> empty
Rule 98    laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN
Rule 99    laRegla2 -> OPENPAREN exp CLOSEPAREN
Rule 100   graphstmt -> graphfig
Rule 101   graphstmt -> graphview
Rule 102   graphstmt -> graphmove
Rule 103   graphfig -> graphfig1 SEMICOLON
Rule 104   graphfig1 -> CIRCLE laRegla2
Rule 105   graphfig1 -> SQUARE laRegla2
Rule 106   graphfig1 -> TRIANGLE laRegla
Rule 107   graphfig1 -> RECTANGLE laRegla
Rule 108   graphmove -> graphmove1 SEMICOLON
Rule 109   graphmove -> graphmove2 SEMICOLON
Rule 110   graphmove1 -> HAND_DOWN
Rule 111   graphmove1 -> HAND_UP
Rule 112   graphmove2 -> GO laRegla2
Rule 113   graphmove2 -> LEFT laRegla2
Rule 114   graphmove2 -> RIGHT laRegla2
Rule 115   graphmove2 -> BACK laRegla2
Rule 116   graphmove2 -> ARC laRegla
Rule 117   graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
Rule 118   graphr1 -> graphstmt graphr1
Rule 119   graphr1 -> empty
Rule 120   rep -> OPENPAREN exp CLOSEPAREN
Rule 121   repeat -> REPEAT
Rule 122   graphview -> graphview1 SEMICOLON
Rule 123   graphview1 -> HIDE_STAR
Rule 124   graphview1 -> SHOW_STAR
Rule 125   graphview1 -> graphview2 exp
Rule 126   graphview2 -> SETXY laRegla
Rule 127   graphview2 -> COLOR_STAR laRegla2
Rule 128   graphview2 -> SIZE_STAR laRegla2
Rule 129   exp -> term exp1
Rule 130   exp1 -> ADDITION exp
Rule 131   exp1 -> SUBSTRACTION exp
Rule 132   exp1 -> empty
Rule 133   openP -> OPENPAREN
Rule 134   closeP -> CLOSEPAREN
Rule 135   factor -> vcte
Rule 136   factor -> factor1
Rule 137   factor1 -> factor2 vcte
Rule 138   factor1 -> openP expression closeP
Rule 139   factor2 -> ADDITION
Rule 140   factor2 -> SUBSTRACTION
Rule 141   term -> factor term1
Rule 142   term1 -> MULTIPLICATION term
Rule 143   term1 -> DIVISION term
Rule 144   term1 -> empty
Rule 145   empty -> <empty>

Terminals, with rules where they appear

ADDITION             : 130 139
ARC                  : 116
BACK                 : 115
CHAR                 : 41
CIRCLE               : 104
CLOSEBRACES          : 4 25 85 117
CLOSEBRACKET         : 35 37 44 44 45 53 61 63
CLOSEPAREN           : 26 42 43 86 89 91 93 98 99 120 134
COLOR_STAR           : 127
COMMA                : 31 96 98
CTECHAR              : 67
CTEFLOAT             : 66
CTEINT               : 35 37 65
DIVISION             : 143
ELSE                 : 83
ELSEIF               : 82
EQUALS               : 47
FLOAT                : 40
FOR                  : 89
FUN                  : 23
GO                   : 112
GREATER              : 74
HAND_DOWN            : 110
HAND_UP              : 111
HIDE_STAR            : 123
ID                   : 1 21 22 27 31 33 34 48 89 93
IF                   : 78
INT                  : 39
ISEQUAL              : 77
LEFT                 : 113
LESS                 : 75
MULTIPLICATION       : 5 142
NOTEQUAL             : 76
OPENBRACES           : 5 24 85 117
OPENBRACKET          : 35 37 44 44 45 53 61 63
OPENPAREN            : 26 42 43 84 89 91 93 98 99 120 133
PRINT                : 42
PROGRAM              : 1
READ                 : 43
RECTANGLE            : 107
REPEAT               : 121
RETURN               : 68
RIGHT                : 114
SEMICOLON            : 1 19 33 34 42 43 49 68 103 108 109 122
SETXY                : 126
SHOW_STAR            : 124
SIMPLEQUOTES         : 
SIZE_STAR            : 128
SQUARE               : 105
SUBSTRACTION         : 131 140
TRIANGLE             : 106
TWODOTS              : 89
VARS                 : 
VOID                 : 22
WHILE                : 92
error                : 

Nonterminals, with rules where they appear

assignment           : 12
assignment1          : 49 51
assignment2          : 50 51
assignment3          : 49
body                 : 78 79 80 89 90
body1                : 85 87
closeP               : 138
close_condition      : 84
condition            : 13
condition1           : 78 79
cte_char             : 58
cte_float            : 57
cte_int              : 56
declara_vars         : 1 4 8 23
else                 : 80
elseif               : 79
empty                : 3 7 9 28 30 32 36 38 46 52 62 64 73 81 88 95 97 119 132 144
equals               : 33 49
exp                  : 33 44 44 45 53 54 61 63 70 71 72 89 94 96 98 98 99 120 125 130 131
exp1                 : 129
expression           : 42 84 91 138
expression1          : 71
factor               : 141
factor1              : 136
factor2              : 137
for                  : 11
funCall              : 19 60
funCall2             : 93 96
funCall3             : 94
function             : 2
function2            : 23
function3            : 26
function4            : 23 29
function5            : 27 31
functionI            : 23
graphfig             : 100
graphfig1            : 103
graphmove            : 102
graphmove1           : 108
graphmove2           : 109
graphr               : 18
graphr1              : 117 118
graphstmt            : 17 117 118
graphview            : 101
graphview1           : 122
graphview2           : 125
head_cond            : 78 79
id                   : 43 49 59
inicia_fun           : 23
laRegla              : 106 107 116 126
laRegla2             : 104 105 112 113 114 115 127 128
loop                 : 15
loper                : 72
openP                : 138
print                : 14
program              : 0
program2             : 1 2
read                 : 16 55
read1                : 43
rep                  : 117
repeat               : 117
return               : 20
return1              : 68
star                 : 1
star1                : 4 6
starI                : 4
stmt                 : 6 29 87
term                 : 129 142 143
term1                : 141
termina_fun          : 23
type                 : 21 27 31 33 34
vars                 : 8
vars1                : 33 34
vars3                : 35
vcte                 : 69 135 137
vcte1                : 59
vcte3                : 61
while                : 10
while1               : 90
while_w              : 91

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON declara_vars program2 star

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON declara_vars program2 star

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON declara_vars program2 star

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . declara_vars program2 star
    (8) declara_vars -> . vars declara_vars
    (9) declara_vars -> . empty
    (33) vars -> . type ID vars1 equals exp SEMICOLON
    (34) vars -> . type ID vars1 SEMICOLON
    (145) empty -> .
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . CHAR

    FUN             reduce using rule 145 (empty -> .)
    MULTIPLICATION  reduce using rule 145 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    declara_vars                   shift and go to state 5
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 5

    (1) program -> PROGRAM ID SEMICOLON declara_vars . program2 star
    (2) program2 -> . function program2
    (3) program2 -> . empty
    (23) function -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (145) empty -> .

    FUN             shift and go to state 15
    MULTIPLICATION  reduce using rule 145 (empty -> .)

    program2                       shift and go to state 12
    function                       shift and go to state 13
    empty                          shift and go to state 14

state 6

    (8) declara_vars -> vars . declara_vars
    (8) declara_vars -> . vars declara_vars
    (9) declara_vars -> . empty
    (33) vars -> . type ID vars1 equals exp SEMICOLON
    (34) vars -> . type ID vars1 SEMICOLON
    (145) empty -> .
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . CHAR

    FUN             reduce using rule 145 (empty -> .)
    MULTIPLICATION  reduce using rule 145 (empty -> .)
    IF              reduce using rule 145 (empty -> .)
    PRINT           reduce using rule 145 (empty -> .)
    READ            reduce using rule 145 (empty -> .)
    ID              reduce using rule 145 (empty -> .)
    RETURN          reduce using rule 145 (empty -> .)
    FOR             reduce using rule 145 (empty -> .)
    REPEAT          reduce using rule 145 (empty -> .)
    CIRCLE          reduce using rule 145 (empty -> .)
    SQUARE          reduce using rule 145 (empty -> .)
    TRIANGLE        reduce using rule 145 (empty -> .)
    RECTANGLE       reduce using rule 145 (empty -> .)
    HIDE_STAR       reduce using rule 145 (empty -> .)
    SHOW_STAR       reduce using rule 145 (empty -> .)
    HAND_DOWN       reduce using rule 145 (empty -> .)
    HAND_UP         reduce using rule 145 (empty -> .)
    GO              reduce using rule 145 (empty -> .)
    LEFT            reduce using rule 145 (empty -> .)
    RIGHT           reduce using rule 145 (empty -> .)
    BACK            reduce using rule 145 (empty -> .)
    ARC             reduce using rule 145 (empty -> .)
    WHILE           reduce using rule 145 (empty -> .)
    SETXY           reduce using rule 145 (empty -> .)
    COLOR_STAR      reduce using rule 145 (empty -> .)
    SIZE_STAR       reduce using rule 145 (empty -> .)
    CLOSEBRACES     reduce using rule 145 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    vars                           shift and go to state 6
    declara_vars                   shift and go to state 16
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 7

    (9) declara_vars -> empty .

    FUN             reduce using rule 9 (declara_vars -> empty .)
    MULTIPLICATION  reduce using rule 9 (declara_vars -> empty .)
    IF              reduce using rule 9 (declara_vars -> empty .)
    PRINT           reduce using rule 9 (declara_vars -> empty .)
    READ            reduce using rule 9 (declara_vars -> empty .)
    ID              reduce using rule 9 (declara_vars -> empty .)
    RETURN          reduce using rule 9 (declara_vars -> empty .)
    FOR             reduce using rule 9 (declara_vars -> empty .)
    REPEAT          reduce using rule 9 (declara_vars -> empty .)
    CIRCLE          reduce using rule 9 (declara_vars -> empty .)
    SQUARE          reduce using rule 9 (declara_vars -> empty .)
    TRIANGLE        reduce using rule 9 (declara_vars -> empty .)
    RECTANGLE       reduce using rule 9 (declara_vars -> empty .)
    HIDE_STAR       reduce using rule 9 (declara_vars -> empty .)
    SHOW_STAR       reduce using rule 9 (declara_vars -> empty .)
    HAND_DOWN       reduce using rule 9 (declara_vars -> empty .)
    HAND_UP         reduce using rule 9 (declara_vars -> empty .)
    GO              reduce using rule 9 (declara_vars -> empty .)
    LEFT            reduce using rule 9 (declara_vars -> empty .)
    RIGHT           reduce using rule 9 (declara_vars -> empty .)
    BACK            reduce using rule 9 (declara_vars -> empty .)
    ARC             reduce using rule 9 (declara_vars -> empty .)
    WHILE           reduce using rule 9 (declara_vars -> empty .)
    SETXY           reduce using rule 9 (declara_vars -> empty .)
    COLOR_STAR      reduce using rule 9 (declara_vars -> empty .)
    SIZE_STAR       reduce using rule 9 (declara_vars -> empty .)
    CLOSEBRACES     reduce using rule 9 (declara_vars -> empty .)


state 8

    (33) vars -> type . ID vars1 equals exp SEMICOLON
    (34) vars -> type . ID vars1 SEMICOLON

    ID              shift and go to state 17


state 9

    (39) type -> INT .

    ID              reduce using rule 39 (type -> INT .)


state 10

    (40) type -> FLOAT .

    ID              reduce using rule 40 (type -> FLOAT .)


state 11

    (41) type -> CHAR .

    ID              reduce using rule 41 (type -> CHAR .)


state 12

    (1) program -> PROGRAM ID SEMICOLON declara_vars program2 . star
    (4) star -> . starI declara_vars star1 CLOSEBRACES
    (5) starI -> . MULTIPLICATION OPENBRACES

    MULTIPLICATION  shift and go to state 20

    star                           shift and go to state 18
    starI                          shift and go to state 19

state 13

    (2) program2 -> function . program2
    (2) program2 -> . function program2
    (3) program2 -> . empty
    (23) function -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (145) empty -> .

    FUN             shift and go to state 15
    MULTIPLICATION  reduce using rule 145 (empty -> .)

    function                       shift and go to state 13
    program2                       shift and go to state 21
    empty                          shift and go to state 14

state 14

    (3) program2 -> empty .

    MULTIPLICATION  reduce using rule 3 (program2 -> empty .)


state 15

    (23) function -> FUN . functionI function2 inicia_fun declara_vars function4 termina_fun
    (21) functionI -> . type ID
    (22) functionI -> . VOID ID
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . CHAR

    VOID            shift and go to state 24
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    functionI                      shift and go to state 22
    type                           shift and go to state 23

state 16

    (8) declara_vars -> vars declara_vars .

    FUN             reduce using rule 8 (declara_vars -> vars declara_vars .)
    MULTIPLICATION  reduce using rule 8 (declara_vars -> vars declara_vars .)
    IF              reduce using rule 8 (declara_vars -> vars declara_vars .)
    PRINT           reduce using rule 8 (declara_vars -> vars declara_vars .)
    READ            reduce using rule 8 (declara_vars -> vars declara_vars .)
    ID              reduce using rule 8 (declara_vars -> vars declara_vars .)
    RETURN          reduce using rule 8 (declara_vars -> vars declara_vars .)
    FOR             reduce using rule 8 (declara_vars -> vars declara_vars .)
    REPEAT          reduce using rule 8 (declara_vars -> vars declara_vars .)
    CIRCLE          reduce using rule 8 (declara_vars -> vars declara_vars .)
    SQUARE          reduce using rule 8 (declara_vars -> vars declara_vars .)
    TRIANGLE        reduce using rule 8 (declara_vars -> vars declara_vars .)
    RECTANGLE       reduce using rule 8 (declara_vars -> vars declara_vars .)
    HIDE_STAR       reduce using rule 8 (declara_vars -> vars declara_vars .)
    SHOW_STAR       reduce using rule 8 (declara_vars -> vars declara_vars .)
    HAND_DOWN       reduce using rule 8 (declara_vars -> vars declara_vars .)
    HAND_UP         reduce using rule 8 (declara_vars -> vars declara_vars .)
    GO              reduce using rule 8 (declara_vars -> vars declara_vars .)
    LEFT            reduce using rule 8 (declara_vars -> vars declara_vars .)
    RIGHT           reduce using rule 8 (declara_vars -> vars declara_vars .)
    BACK            reduce using rule 8 (declara_vars -> vars declara_vars .)
    ARC             reduce using rule 8 (declara_vars -> vars declara_vars .)
    WHILE           reduce using rule 8 (declara_vars -> vars declara_vars .)
    SETXY           reduce using rule 8 (declara_vars -> vars declara_vars .)
    COLOR_STAR      reduce using rule 8 (declara_vars -> vars declara_vars .)
    SIZE_STAR       reduce using rule 8 (declara_vars -> vars declara_vars .)
    CLOSEBRACES     reduce using rule 8 (declara_vars -> vars declara_vars .)


state 17

    (33) vars -> type ID . vars1 equals exp SEMICOLON
    (34) vars -> type ID . vars1 SEMICOLON
    (35) vars1 -> . OPENBRACKET CTEINT CLOSEBRACKET vars3
    (36) vars1 -> . empty
    (145) empty -> .

    OPENBRACKET     shift and go to state 26
    SEMICOLON       reduce using rule 145 (empty -> .)
    EQUALS          reduce using rule 145 (empty -> .)

    vars1                          shift and go to state 25
    empty                          shift and go to state 27

state 18

    (1) program -> PROGRAM ID SEMICOLON declara_vars program2 star .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON declara_vars program2 star .)


state 19

    (4) star -> starI . declara_vars star1 CLOSEBRACES
    (8) declara_vars -> . vars declara_vars
    (9) declara_vars -> . empty
    (33) vars -> . type ID vars1 equals exp SEMICOLON
    (34) vars -> . type ID vars1 SEMICOLON
    (145) empty -> .
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . CHAR

    IF              reduce using rule 145 (empty -> .)
    PRINT           reduce using rule 145 (empty -> .)
    READ            reduce using rule 145 (empty -> .)
    ID              reduce using rule 145 (empty -> .)
    RETURN          reduce using rule 145 (empty -> .)
    FOR             reduce using rule 145 (empty -> .)
    REPEAT          reduce using rule 145 (empty -> .)
    CIRCLE          reduce using rule 145 (empty -> .)
    SQUARE          reduce using rule 145 (empty -> .)
    TRIANGLE        reduce using rule 145 (empty -> .)
    RECTANGLE       reduce using rule 145 (empty -> .)
    HIDE_STAR       reduce using rule 145 (empty -> .)
    SHOW_STAR       reduce using rule 145 (empty -> .)
    HAND_DOWN       reduce using rule 145 (empty -> .)
    HAND_UP         reduce using rule 145 (empty -> .)
    GO              reduce using rule 145 (empty -> .)
    LEFT            reduce using rule 145 (empty -> .)
    RIGHT           reduce using rule 145 (empty -> .)
    BACK            reduce using rule 145 (empty -> .)
    ARC             reduce using rule 145 (empty -> .)
    WHILE           reduce using rule 145 (empty -> .)
    SETXY           reduce using rule 145 (empty -> .)
    COLOR_STAR      reduce using rule 145 (empty -> .)
    SIZE_STAR       reduce using rule 145 (empty -> .)
    CLOSEBRACES     reduce using rule 145 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    declara_vars                   shift and go to state 28
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 20

    (5) starI -> MULTIPLICATION . OPENBRACES

    OPENBRACES      shift and go to state 29


state 21

    (2) program2 -> function program2 .

    MULTIPLICATION  reduce using rule 2 (program2 -> function program2 .)


state 22

    (23) function -> FUN functionI . function2 inicia_fun declara_vars function4 termina_fun
    (26) function2 -> . OPENPAREN function3 CLOSEPAREN

    OPENPAREN       shift and go to state 31

    function2                      shift and go to state 30

state 23

    (21) functionI -> type . ID

    ID              shift and go to state 32


state 24

    (22) functionI -> VOID . ID

    ID              shift and go to state 33


state 25

    (33) vars -> type ID vars1 . equals exp SEMICOLON
    (34) vars -> type ID vars1 . SEMICOLON
    (47) equals -> . EQUALS

    SEMICOLON       shift and go to state 35
    EQUALS          shift and go to state 36

    equals                         shift and go to state 34

state 26

    (35) vars1 -> OPENBRACKET . CTEINT CLOSEBRACKET vars3

    CTEINT          shift and go to state 37


state 27

    (36) vars1 -> empty .

    SEMICOLON       reduce using rule 36 (vars1 -> empty .)
    EQUALS          reduce using rule 36 (vars1 -> empty .)


state 28

    (4) star -> starI declara_vars . star1 CLOSEBRACES
    (6) star1 -> . stmt star1
    (7) star1 -> . empty
    (12) stmt -> . assignment
    (13) stmt -> . condition
    (14) stmt -> . print
    (15) stmt -> . loop
    (16) stmt -> . read
    (17) stmt -> . graphstmt
    (18) stmt -> . graphr
    (19) stmt -> . funCall SEMICOLON
    (20) stmt -> . return
    (145) empty -> .
    (49) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (78) condition -> . IF head_cond body condition1
    (42) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (10) loop -> . while
    (11) loop -> . for
    (43) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (100) graphstmt -> . graphfig
    (101) graphstmt -> . graphview
    (102) graphstmt -> . graphmove
    (117) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (68) return -> . RETURN return1 SEMICOLON
    (48) id -> . ID
    (90) while -> . while1 body
    (89) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (103) graphfig -> . graphfig1 SEMICOLON
    (122) graphview -> . graphview1 SEMICOLON
    (108) graphmove -> . graphmove1 SEMICOLON
    (109) graphmove -> . graphmove2 SEMICOLON
    (121) repeat -> . REPEAT
    (91) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (104) graphfig1 -> . CIRCLE laRegla2
    (105) graphfig1 -> . SQUARE laRegla2
    (106) graphfig1 -> . TRIANGLE laRegla
    (107) graphfig1 -> . RECTANGLE laRegla
    (123) graphview1 -> . HIDE_STAR
    (124) graphview1 -> . SHOW_STAR
    (125) graphview1 -> . graphview2 exp
    (110) graphmove1 -> . HAND_DOWN
    (111) graphmove1 -> . HAND_UP
    (112) graphmove2 -> . GO laRegla2
    (113) graphmove2 -> . LEFT laRegla2
    (114) graphmove2 -> . RIGHT laRegla2
    (115) graphmove2 -> . BACK laRegla2
    (116) graphmove2 -> . ARC laRegla
    (92) while_w -> . WHILE
    (126) graphview2 -> . SETXY laRegla
    (127) graphview2 -> . COLOR_STAR laRegla2
    (128) graphview2 -> . SIZE_STAR laRegla2

    CLOSEBRACES     reduce using rule 145 (empty -> .)
    IF              shift and go to state 51
    PRINT           shift and go to state 52
    READ            shift and go to state 55
    ID              shift and go to state 60
    RETURN          shift and go to state 61
    FOR             shift and go to state 63
    REPEAT          shift and go to state 68
    CIRCLE          shift and go to state 70
    SQUARE          shift and go to state 71
    TRIANGLE        shift and go to state 72
    RECTANGLE       shift and go to state 73
    HIDE_STAR       shift and go to state 74
    SHOW_STAR       shift and go to state 75
    HAND_DOWN       shift and go to state 77
    HAND_UP         shift and go to state 78
    GO              shift and go to state 79
    LEFT            shift and go to state 80
    RIGHT           shift and go to state 81
    BACK            shift and go to state 82
    ARC             shift and go to state 83
    WHILE           shift and go to state 84
    SETXY           shift and go to state 85
    COLOR_STAR      shift and go to state 86
    SIZE_STAR       shift and go to state 87

    star1                          shift and go to state 38
    stmt                           shift and go to state 39
    empty                          shift and go to state 40
    assignment                     shift and go to state 41
    condition                      shift and go to state 42
    print                          shift and go to state 43
    loop                           shift and go to state 44
    read                           shift and go to state 45
    graphstmt                      shift and go to state 46
    graphr                         shift and go to state 47
    funCall                        shift and go to state 48
    return                         shift and go to state 49
    id                             shift and go to state 50
    while                          shift and go to state 53
    for                            shift and go to state 54
    graphfig                       shift and go to state 56
    graphview                      shift and go to state 57
    graphmove                      shift and go to state 58
    repeat                         shift and go to state 59
    while1                         shift and go to state 62
    graphfig1                      shift and go to state 64
    graphview1                     shift and go to state 65
    graphmove1                     shift and go to state 66
    graphmove2                     shift and go to state 67
    while_w                        shift and go to state 69
    graphview2                     shift and go to state 76

state 29

    (5) starI -> MULTIPLICATION OPENBRACES .

    INT             reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    FLOAT           reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    CHAR            reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    IF              reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    PRINT           reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    READ            reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    ID              reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    RETURN          reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    FOR             reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    REPEAT          reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    CIRCLE          reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    SQUARE          reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    TRIANGLE        reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    RECTANGLE       reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    HIDE_STAR       reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    SHOW_STAR       reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    HAND_DOWN       reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    HAND_UP         reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    GO              reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    LEFT            reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    RIGHT           reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    BACK            reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    ARC             reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    WHILE           reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    SETXY           reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    COLOR_STAR      reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    SIZE_STAR       reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)
    CLOSEBRACES     reduce using rule 5 (starI -> MULTIPLICATION OPENBRACES .)


state 30

    (23) function -> FUN functionI function2 . inicia_fun declara_vars function4 termina_fun
    (24) inicia_fun -> . OPENBRACES

    OPENBRACES      shift and go to state 89

    inicia_fun                     shift and go to state 88

state 31

    (26) function2 -> OPENPAREN . function3 CLOSEPAREN
    (27) function3 -> . type ID function5
    (28) function3 -> . empty
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . CHAR
    (145) empty -> .

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    CLOSEPAREN      reduce using rule 145 (empty -> .)

    function3                      shift and go to state 90
    type                           shift and go to state 91
    empty                          shift and go to state 92

state 32

    (21) functionI -> type ID .

    OPENPAREN       reduce using rule 21 (functionI -> type ID .)


state 33

    (22) functionI -> VOID ID .

    OPENPAREN       reduce using rule 22 (functionI -> VOID ID .)


state 34

    (33) vars -> type ID vars1 equals . exp SEMICOLON
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    exp                            shift and go to state 94
    term                           shift and go to state 95
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 35

    (34) vars -> type ID vars1 SEMICOLON .

    INT             reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    FLOAT           reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    CHAR            reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    FUN             reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    MULTIPLICATION  reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    IF              reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    PRINT           reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    READ            reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    ID              reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    RETURN          reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    FOR             reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    REPEAT          reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    CIRCLE          reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    SQUARE          reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    TRIANGLE        reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    RECTANGLE       reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    HIDE_STAR       reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    SHOW_STAR       reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    HAND_DOWN       reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    HAND_UP         reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    GO              reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    LEFT            reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    RIGHT           reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    BACK            reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    ARC             reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    WHILE           reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    SETXY           reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    COLOR_STAR      reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    SIZE_STAR       reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 34 (vars -> type ID vars1 SEMICOLON .)


state 36

    (47) equals -> EQUALS .

    CTEINT          reduce using rule 47 (equals -> EQUALS .)
    CTEFLOAT        reduce using rule 47 (equals -> EQUALS .)
    CTECHAR         reduce using rule 47 (equals -> EQUALS .)
    ID              reduce using rule 47 (equals -> EQUALS .)
    ADDITION        reduce using rule 47 (equals -> EQUALS .)
    SUBSTRACTION    reduce using rule 47 (equals -> EQUALS .)
    OPENPAREN       reduce using rule 47 (equals -> EQUALS .)
    READ            reduce using rule 47 (equals -> EQUALS .)


state 37

    (35) vars1 -> OPENBRACKET CTEINT . CLOSEBRACKET vars3

    CLOSEBRACKET    shift and go to state 112


state 38

    (4) star -> starI declara_vars star1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 113


state 39

    (6) star1 -> stmt . star1
    (6) star1 -> . stmt star1
    (7) star1 -> . empty
    (12) stmt -> . assignment
    (13) stmt -> . condition
    (14) stmt -> . print
    (15) stmt -> . loop
    (16) stmt -> . read
    (17) stmt -> . graphstmt
    (18) stmt -> . graphr
    (19) stmt -> . funCall SEMICOLON
    (20) stmt -> . return
    (145) empty -> .
    (49) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (78) condition -> . IF head_cond body condition1
    (42) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (10) loop -> . while
    (11) loop -> . for
    (43) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (100) graphstmt -> . graphfig
    (101) graphstmt -> . graphview
    (102) graphstmt -> . graphmove
    (117) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (68) return -> . RETURN return1 SEMICOLON
    (48) id -> . ID
    (90) while -> . while1 body
    (89) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (103) graphfig -> . graphfig1 SEMICOLON
    (122) graphview -> . graphview1 SEMICOLON
    (108) graphmove -> . graphmove1 SEMICOLON
    (109) graphmove -> . graphmove2 SEMICOLON
    (121) repeat -> . REPEAT
    (91) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (104) graphfig1 -> . CIRCLE laRegla2
    (105) graphfig1 -> . SQUARE laRegla2
    (106) graphfig1 -> . TRIANGLE laRegla
    (107) graphfig1 -> . RECTANGLE laRegla
    (123) graphview1 -> . HIDE_STAR
    (124) graphview1 -> . SHOW_STAR
    (125) graphview1 -> . graphview2 exp
    (110) graphmove1 -> . HAND_DOWN
    (111) graphmove1 -> . HAND_UP
    (112) graphmove2 -> . GO laRegla2
    (113) graphmove2 -> . LEFT laRegla2
    (114) graphmove2 -> . RIGHT laRegla2
    (115) graphmove2 -> . BACK laRegla2
    (116) graphmove2 -> . ARC laRegla
    (92) while_w -> . WHILE
    (126) graphview2 -> . SETXY laRegla
    (127) graphview2 -> . COLOR_STAR laRegla2
    (128) graphview2 -> . SIZE_STAR laRegla2

    CLOSEBRACES     reduce using rule 145 (empty -> .)
    IF              shift and go to state 51
    PRINT           shift and go to state 52
    READ            shift and go to state 55
    ID              shift and go to state 60
    RETURN          shift and go to state 61
    FOR             shift and go to state 63
    REPEAT          shift and go to state 68
    CIRCLE          shift and go to state 70
    SQUARE          shift and go to state 71
    TRIANGLE        shift and go to state 72
    RECTANGLE       shift and go to state 73
    HIDE_STAR       shift and go to state 74
    SHOW_STAR       shift and go to state 75
    HAND_DOWN       shift and go to state 77
    HAND_UP         shift and go to state 78
    GO              shift and go to state 79
    LEFT            shift and go to state 80
    RIGHT           shift and go to state 81
    BACK            shift and go to state 82
    ARC             shift and go to state 83
    WHILE           shift and go to state 84
    SETXY           shift and go to state 85
    COLOR_STAR      shift and go to state 86
    SIZE_STAR       shift and go to state 87

    stmt                           shift and go to state 39
    star1                          shift and go to state 114
    empty                          shift and go to state 40
    assignment                     shift and go to state 41
    condition                      shift and go to state 42
    print                          shift and go to state 43
    loop                           shift and go to state 44
    read                           shift and go to state 45
    graphstmt                      shift and go to state 46
    graphr                         shift and go to state 47
    funCall                        shift and go to state 48
    return                         shift and go to state 49
    id                             shift and go to state 50
    while                          shift and go to state 53
    for                            shift and go to state 54
    graphfig                       shift and go to state 56
    graphview                      shift and go to state 57
    graphmove                      shift and go to state 58
    repeat                         shift and go to state 59
    while1                         shift and go to state 62
    graphfig1                      shift and go to state 64
    graphview1                     shift and go to state 65
    graphmove1                     shift and go to state 66
    graphmove2                     shift and go to state 67
    while_w                        shift and go to state 69
    graphview2                     shift and go to state 76

state 40

    (7) star1 -> empty .

    CLOSEBRACES     reduce using rule 7 (star1 -> empty .)


state 41

    (12) stmt -> assignment .

    IF              reduce using rule 12 (stmt -> assignment .)
    PRINT           reduce using rule 12 (stmt -> assignment .)
    READ            reduce using rule 12 (stmt -> assignment .)
    ID              reduce using rule 12 (stmt -> assignment .)
    RETURN          reduce using rule 12 (stmt -> assignment .)
    FOR             reduce using rule 12 (stmt -> assignment .)
    REPEAT          reduce using rule 12 (stmt -> assignment .)
    CIRCLE          reduce using rule 12 (stmt -> assignment .)
    SQUARE          reduce using rule 12 (stmt -> assignment .)
    TRIANGLE        reduce using rule 12 (stmt -> assignment .)
    RECTANGLE       reduce using rule 12 (stmt -> assignment .)
    HIDE_STAR       reduce using rule 12 (stmt -> assignment .)
    SHOW_STAR       reduce using rule 12 (stmt -> assignment .)
    HAND_DOWN       reduce using rule 12 (stmt -> assignment .)
    HAND_UP         reduce using rule 12 (stmt -> assignment .)
    GO              reduce using rule 12 (stmt -> assignment .)
    LEFT            reduce using rule 12 (stmt -> assignment .)
    RIGHT           reduce using rule 12 (stmt -> assignment .)
    BACK            reduce using rule 12 (stmt -> assignment .)
    ARC             reduce using rule 12 (stmt -> assignment .)
    WHILE           reduce using rule 12 (stmt -> assignment .)
    SETXY           reduce using rule 12 (stmt -> assignment .)
    COLOR_STAR      reduce using rule 12 (stmt -> assignment .)
    SIZE_STAR       reduce using rule 12 (stmt -> assignment .)
    CLOSEBRACES     reduce using rule 12 (stmt -> assignment .)


state 42

    (13) stmt -> condition .

    IF              reduce using rule 13 (stmt -> condition .)
    PRINT           reduce using rule 13 (stmt -> condition .)
    READ            reduce using rule 13 (stmt -> condition .)
    ID              reduce using rule 13 (stmt -> condition .)
    RETURN          reduce using rule 13 (stmt -> condition .)
    FOR             reduce using rule 13 (stmt -> condition .)
    REPEAT          reduce using rule 13 (stmt -> condition .)
    CIRCLE          reduce using rule 13 (stmt -> condition .)
    SQUARE          reduce using rule 13 (stmt -> condition .)
    TRIANGLE        reduce using rule 13 (stmt -> condition .)
    RECTANGLE       reduce using rule 13 (stmt -> condition .)
    HIDE_STAR       reduce using rule 13 (stmt -> condition .)
    SHOW_STAR       reduce using rule 13 (stmt -> condition .)
    HAND_DOWN       reduce using rule 13 (stmt -> condition .)
    HAND_UP         reduce using rule 13 (stmt -> condition .)
    GO              reduce using rule 13 (stmt -> condition .)
    LEFT            reduce using rule 13 (stmt -> condition .)
    RIGHT           reduce using rule 13 (stmt -> condition .)
    BACK            reduce using rule 13 (stmt -> condition .)
    ARC             reduce using rule 13 (stmt -> condition .)
    WHILE           reduce using rule 13 (stmt -> condition .)
    SETXY           reduce using rule 13 (stmt -> condition .)
    COLOR_STAR      reduce using rule 13 (stmt -> condition .)
    SIZE_STAR       reduce using rule 13 (stmt -> condition .)
    CLOSEBRACES     reduce using rule 13 (stmt -> condition .)


state 43

    (14) stmt -> print .

    IF              reduce using rule 14 (stmt -> print .)
    PRINT           reduce using rule 14 (stmt -> print .)
    READ            reduce using rule 14 (stmt -> print .)
    ID              reduce using rule 14 (stmt -> print .)
    RETURN          reduce using rule 14 (stmt -> print .)
    FOR             reduce using rule 14 (stmt -> print .)
    REPEAT          reduce using rule 14 (stmt -> print .)
    CIRCLE          reduce using rule 14 (stmt -> print .)
    SQUARE          reduce using rule 14 (stmt -> print .)
    TRIANGLE        reduce using rule 14 (stmt -> print .)
    RECTANGLE       reduce using rule 14 (stmt -> print .)
    HIDE_STAR       reduce using rule 14 (stmt -> print .)
    SHOW_STAR       reduce using rule 14 (stmt -> print .)
    HAND_DOWN       reduce using rule 14 (stmt -> print .)
    HAND_UP         reduce using rule 14 (stmt -> print .)
    GO              reduce using rule 14 (stmt -> print .)
    LEFT            reduce using rule 14 (stmt -> print .)
    RIGHT           reduce using rule 14 (stmt -> print .)
    BACK            reduce using rule 14 (stmt -> print .)
    ARC             reduce using rule 14 (stmt -> print .)
    WHILE           reduce using rule 14 (stmt -> print .)
    SETXY           reduce using rule 14 (stmt -> print .)
    COLOR_STAR      reduce using rule 14 (stmt -> print .)
    SIZE_STAR       reduce using rule 14 (stmt -> print .)
    CLOSEBRACES     reduce using rule 14 (stmt -> print .)


state 44

    (15) stmt -> loop .

    IF              reduce using rule 15 (stmt -> loop .)
    PRINT           reduce using rule 15 (stmt -> loop .)
    READ            reduce using rule 15 (stmt -> loop .)
    ID              reduce using rule 15 (stmt -> loop .)
    RETURN          reduce using rule 15 (stmt -> loop .)
    FOR             reduce using rule 15 (stmt -> loop .)
    REPEAT          reduce using rule 15 (stmt -> loop .)
    CIRCLE          reduce using rule 15 (stmt -> loop .)
    SQUARE          reduce using rule 15 (stmt -> loop .)
    TRIANGLE        reduce using rule 15 (stmt -> loop .)
    RECTANGLE       reduce using rule 15 (stmt -> loop .)
    HIDE_STAR       reduce using rule 15 (stmt -> loop .)
    SHOW_STAR       reduce using rule 15 (stmt -> loop .)
    HAND_DOWN       reduce using rule 15 (stmt -> loop .)
    HAND_UP         reduce using rule 15 (stmt -> loop .)
    GO              reduce using rule 15 (stmt -> loop .)
    LEFT            reduce using rule 15 (stmt -> loop .)
    RIGHT           reduce using rule 15 (stmt -> loop .)
    BACK            reduce using rule 15 (stmt -> loop .)
    ARC             reduce using rule 15 (stmt -> loop .)
    WHILE           reduce using rule 15 (stmt -> loop .)
    SETXY           reduce using rule 15 (stmt -> loop .)
    COLOR_STAR      reduce using rule 15 (stmt -> loop .)
    SIZE_STAR       reduce using rule 15 (stmt -> loop .)
    CLOSEBRACES     reduce using rule 15 (stmt -> loop .)


state 45

    (16) stmt -> read .

    IF              reduce using rule 16 (stmt -> read .)
    PRINT           reduce using rule 16 (stmt -> read .)
    READ            reduce using rule 16 (stmt -> read .)
    ID              reduce using rule 16 (stmt -> read .)
    RETURN          reduce using rule 16 (stmt -> read .)
    FOR             reduce using rule 16 (stmt -> read .)
    REPEAT          reduce using rule 16 (stmt -> read .)
    CIRCLE          reduce using rule 16 (stmt -> read .)
    SQUARE          reduce using rule 16 (stmt -> read .)
    TRIANGLE        reduce using rule 16 (stmt -> read .)
    RECTANGLE       reduce using rule 16 (stmt -> read .)
    HIDE_STAR       reduce using rule 16 (stmt -> read .)
    SHOW_STAR       reduce using rule 16 (stmt -> read .)
    HAND_DOWN       reduce using rule 16 (stmt -> read .)
    HAND_UP         reduce using rule 16 (stmt -> read .)
    GO              reduce using rule 16 (stmt -> read .)
    LEFT            reduce using rule 16 (stmt -> read .)
    RIGHT           reduce using rule 16 (stmt -> read .)
    BACK            reduce using rule 16 (stmt -> read .)
    ARC             reduce using rule 16 (stmt -> read .)
    WHILE           reduce using rule 16 (stmt -> read .)
    SETXY           reduce using rule 16 (stmt -> read .)
    COLOR_STAR      reduce using rule 16 (stmt -> read .)
    SIZE_STAR       reduce using rule 16 (stmt -> read .)
    CLOSEBRACES     reduce using rule 16 (stmt -> read .)


state 46

    (17) stmt -> graphstmt .

    IF              reduce using rule 17 (stmt -> graphstmt .)
    PRINT           reduce using rule 17 (stmt -> graphstmt .)
    READ            reduce using rule 17 (stmt -> graphstmt .)
    ID              reduce using rule 17 (stmt -> graphstmt .)
    RETURN          reduce using rule 17 (stmt -> graphstmt .)
    FOR             reduce using rule 17 (stmt -> graphstmt .)
    REPEAT          reduce using rule 17 (stmt -> graphstmt .)
    CIRCLE          reduce using rule 17 (stmt -> graphstmt .)
    SQUARE          reduce using rule 17 (stmt -> graphstmt .)
    TRIANGLE        reduce using rule 17 (stmt -> graphstmt .)
    RECTANGLE       reduce using rule 17 (stmt -> graphstmt .)
    HIDE_STAR       reduce using rule 17 (stmt -> graphstmt .)
    SHOW_STAR       reduce using rule 17 (stmt -> graphstmt .)
    HAND_DOWN       reduce using rule 17 (stmt -> graphstmt .)
    HAND_UP         reduce using rule 17 (stmt -> graphstmt .)
    GO              reduce using rule 17 (stmt -> graphstmt .)
    LEFT            reduce using rule 17 (stmt -> graphstmt .)
    RIGHT           reduce using rule 17 (stmt -> graphstmt .)
    BACK            reduce using rule 17 (stmt -> graphstmt .)
    ARC             reduce using rule 17 (stmt -> graphstmt .)
    WHILE           reduce using rule 17 (stmt -> graphstmt .)
    SETXY           reduce using rule 17 (stmt -> graphstmt .)
    COLOR_STAR      reduce using rule 17 (stmt -> graphstmt .)
    SIZE_STAR       reduce using rule 17 (stmt -> graphstmt .)
    CLOSEBRACES     reduce using rule 17 (stmt -> graphstmt .)


state 47

    (18) stmt -> graphr .

    IF              reduce using rule 18 (stmt -> graphr .)
    PRINT           reduce using rule 18 (stmt -> graphr .)
    READ            reduce using rule 18 (stmt -> graphr .)
    ID              reduce using rule 18 (stmt -> graphr .)
    RETURN          reduce using rule 18 (stmt -> graphr .)
    FOR             reduce using rule 18 (stmt -> graphr .)
    REPEAT          reduce using rule 18 (stmt -> graphr .)
    CIRCLE          reduce using rule 18 (stmt -> graphr .)
    SQUARE          reduce using rule 18 (stmt -> graphr .)
    TRIANGLE        reduce using rule 18 (stmt -> graphr .)
    RECTANGLE       reduce using rule 18 (stmt -> graphr .)
    HIDE_STAR       reduce using rule 18 (stmt -> graphr .)
    SHOW_STAR       reduce using rule 18 (stmt -> graphr .)
    HAND_DOWN       reduce using rule 18 (stmt -> graphr .)
    HAND_UP         reduce using rule 18 (stmt -> graphr .)
    GO              reduce using rule 18 (stmt -> graphr .)
    LEFT            reduce using rule 18 (stmt -> graphr .)
    RIGHT           reduce using rule 18 (stmt -> graphr .)
    BACK            reduce using rule 18 (stmt -> graphr .)
    ARC             reduce using rule 18 (stmt -> graphr .)
    WHILE           reduce using rule 18 (stmt -> graphr .)
    SETXY           reduce using rule 18 (stmt -> graphr .)
    COLOR_STAR      reduce using rule 18 (stmt -> graphr .)
    SIZE_STAR       reduce using rule 18 (stmt -> graphr .)
    CLOSEBRACES     reduce using rule 18 (stmt -> graphr .)


state 48

    (19) stmt -> funCall . SEMICOLON

    SEMICOLON       shift and go to state 115


state 49

    (20) stmt -> return .

    IF              reduce using rule 20 (stmt -> return .)
    PRINT           reduce using rule 20 (stmt -> return .)
    READ            reduce using rule 20 (stmt -> return .)
    ID              reduce using rule 20 (stmt -> return .)
    RETURN          reduce using rule 20 (stmt -> return .)
    FOR             reduce using rule 20 (stmt -> return .)
    REPEAT          reduce using rule 20 (stmt -> return .)
    CIRCLE          reduce using rule 20 (stmt -> return .)
    SQUARE          reduce using rule 20 (stmt -> return .)
    TRIANGLE        reduce using rule 20 (stmt -> return .)
    RECTANGLE       reduce using rule 20 (stmt -> return .)
    HIDE_STAR       reduce using rule 20 (stmt -> return .)
    SHOW_STAR       reduce using rule 20 (stmt -> return .)
    HAND_DOWN       reduce using rule 20 (stmt -> return .)
    HAND_UP         reduce using rule 20 (stmt -> return .)
    GO              reduce using rule 20 (stmt -> return .)
    LEFT            reduce using rule 20 (stmt -> return .)
    RIGHT           reduce using rule 20 (stmt -> return .)
    BACK            reduce using rule 20 (stmt -> return .)
    ARC             reduce using rule 20 (stmt -> return .)
    WHILE           reduce using rule 20 (stmt -> return .)
    SETXY           reduce using rule 20 (stmt -> return .)
    COLOR_STAR      reduce using rule 20 (stmt -> return .)
    SIZE_STAR       reduce using rule 20 (stmt -> return .)
    CLOSEBRACES     reduce using rule 20 (stmt -> return .)


state 50

    (49) assignment -> id . assignment1 equals assignment3 SEMICOLON
    (50) assignment1 -> . assignment2
    (51) assignment1 -> . assignment2 assignment1
    (52) assignment1 -> . empty
    (53) assignment2 -> . OPENBRACKET exp CLOSEBRACKET
    (145) empty -> .

    OPENBRACKET     shift and go to state 119
    EQUALS          reduce using rule 145 (empty -> .)

    assignment1                    shift and go to state 116
    assignment2                    shift and go to state 117
    empty                          shift and go to state 118

state 51

    (78) condition -> IF . head_cond body condition1
    (84) head_cond -> . OPENPAREN expression close_condition

    OPENPAREN       shift and go to state 121

    head_cond                      shift and go to state 120

state 52

    (42) print -> PRINT . OPENPAREN expression CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 122


state 53

    (10) loop -> while .

    IF              reduce using rule 10 (loop -> while .)
    PRINT           reduce using rule 10 (loop -> while .)
    READ            reduce using rule 10 (loop -> while .)
    ID              reduce using rule 10 (loop -> while .)
    RETURN          reduce using rule 10 (loop -> while .)
    FOR             reduce using rule 10 (loop -> while .)
    REPEAT          reduce using rule 10 (loop -> while .)
    CIRCLE          reduce using rule 10 (loop -> while .)
    SQUARE          reduce using rule 10 (loop -> while .)
    TRIANGLE        reduce using rule 10 (loop -> while .)
    RECTANGLE       reduce using rule 10 (loop -> while .)
    HIDE_STAR       reduce using rule 10 (loop -> while .)
    SHOW_STAR       reduce using rule 10 (loop -> while .)
    HAND_DOWN       reduce using rule 10 (loop -> while .)
    HAND_UP         reduce using rule 10 (loop -> while .)
    GO              reduce using rule 10 (loop -> while .)
    LEFT            reduce using rule 10 (loop -> while .)
    RIGHT           reduce using rule 10 (loop -> while .)
    BACK            reduce using rule 10 (loop -> while .)
    ARC             reduce using rule 10 (loop -> while .)
    WHILE           reduce using rule 10 (loop -> while .)
    SETXY           reduce using rule 10 (loop -> while .)
    COLOR_STAR      reduce using rule 10 (loop -> while .)
    SIZE_STAR       reduce using rule 10 (loop -> while .)
    CLOSEBRACES     reduce using rule 10 (loop -> while .)


state 54

    (11) loop -> for .

    IF              reduce using rule 11 (loop -> for .)
    PRINT           reduce using rule 11 (loop -> for .)
    READ            reduce using rule 11 (loop -> for .)
    ID              reduce using rule 11 (loop -> for .)
    RETURN          reduce using rule 11 (loop -> for .)
    FOR             reduce using rule 11 (loop -> for .)
    REPEAT          reduce using rule 11 (loop -> for .)
    CIRCLE          reduce using rule 11 (loop -> for .)
    SQUARE          reduce using rule 11 (loop -> for .)
    TRIANGLE        reduce using rule 11 (loop -> for .)
    RECTANGLE       reduce using rule 11 (loop -> for .)
    HIDE_STAR       reduce using rule 11 (loop -> for .)
    SHOW_STAR       reduce using rule 11 (loop -> for .)
    HAND_DOWN       reduce using rule 11 (loop -> for .)
    HAND_UP         reduce using rule 11 (loop -> for .)
    GO              reduce using rule 11 (loop -> for .)
    LEFT            reduce using rule 11 (loop -> for .)
    RIGHT           reduce using rule 11 (loop -> for .)
    BACK            reduce using rule 11 (loop -> for .)
    ARC             reduce using rule 11 (loop -> for .)
    WHILE           reduce using rule 11 (loop -> for .)
    SETXY           reduce using rule 11 (loop -> for .)
    COLOR_STAR      reduce using rule 11 (loop -> for .)
    SIZE_STAR       reduce using rule 11 (loop -> for .)
    CLOSEBRACES     reduce using rule 11 (loop -> for .)


state 55

    (43) read -> READ . OPENPAREN id read1 CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 123


state 56

    (100) graphstmt -> graphfig .

    IF              reduce using rule 100 (graphstmt -> graphfig .)
    PRINT           reduce using rule 100 (graphstmt -> graphfig .)
    READ            reduce using rule 100 (graphstmt -> graphfig .)
    ID              reduce using rule 100 (graphstmt -> graphfig .)
    RETURN          reduce using rule 100 (graphstmt -> graphfig .)
    FOR             reduce using rule 100 (graphstmt -> graphfig .)
    REPEAT          reduce using rule 100 (graphstmt -> graphfig .)
    CIRCLE          reduce using rule 100 (graphstmt -> graphfig .)
    SQUARE          reduce using rule 100 (graphstmt -> graphfig .)
    TRIANGLE        reduce using rule 100 (graphstmt -> graphfig .)
    RECTANGLE       reduce using rule 100 (graphstmt -> graphfig .)
    HIDE_STAR       reduce using rule 100 (graphstmt -> graphfig .)
    SHOW_STAR       reduce using rule 100 (graphstmt -> graphfig .)
    HAND_DOWN       reduce using rule 100 (graphstmt -> graphfig .)
    HAND_UP         reduce using rule 100 (graphstmt -> graphfig .)
    GO              reduce using rule 100 (graphstmt -> graphfig .)
    LEFT            reduce using rule 100 (graphstmt -> graphfig .)
    RIGHT           reduce using rule 100 (graphstmt -> graphfig .)
    BACK            reduce using rule 100 (graphstmt -> graphfig .)
    ARC             reduce using rule 100 (graphstmt -> graphfig .)
    WHILE           reduce using rule 100 (graphstmt -> graphfig .)
    SETXY           reduce using rule 100 (graphstmt -> graphfig .)
    COLOR_STAR      reduce using rule 100 (graphstmt -> graphfig .)
    SIZE_STAR       reduce using rule 100 (graphstmt -> graphfig .)
    CLOSEBRACES     reduce using rule 100 (graphstmt -> graphfig .)


state 57

    (101) graphstmt -> graphview .

    IF              reduce using rule 101 (graphstmt -> graphview .)
    PRINT           reduce using rule 101 (graphstmt -> graphview .)
    READ            reduce using rule 101 (graphstmt -> graphview .)
    ID              reduce using rule 101 (graphstmt -> graphview .)
    RETURN          reduce using rule 101 (graphstmt -> graphview .)
    FOR             reduce using rule 101 (graphstmt -> graphview .)
    REPEAT          reduce using rule 101 (graphstmt -> graphview .)
    CIRCLE          reduce using rule 101 (graphstmt -> graphview .)
    SQUARE          reduce using rule 101 (graphstmt -> graphview .)
    TRIANGLE        reduce using rule 101 (graphstmt -> graphview .)
    RECTANGLE       reduce using rule 101 (graphstmt -> graphview .)
    HIDE_STAR       reduce using rule 101 (graphstmt -> graphview .)
    SHOW_STAR       reduce using rule 101 (graphstmt -> graphview .)
    HAND_DOWN       reduce using rule 101 (graphstmt -> graphview .)
    HAND_UP         reduce using rule 101 (graphstmt -> graphview .)
    GO              reduce using rule 101 (graphstmt -> graphview .)
    LEFT            reduce using rule 101 (graphstmt -> graphview .)
    RIGHT           reduce using rule 101 (graphstmt -> graphview .)
    BACK            reduce using rule 101 (graphstmt -> graphview .)
    ARC             reduce using rule 101 (graphstmt -> graphview .)
    WHILE           reduce using rule 101 (graphstmt -> graphview .)
    SETXY           reduce using rule 101 (graphstmt -> graphview .)
    COLOR_STAR      reduce using rule 101 (graphstmt -> graphview .)
    SIZE_STAR       reduce using rule 101 (graphstmt -> graphview .)
    CLOSEBRACES     reduce using rule 101 (graphstmt -> graphview .)


state 58

    (102) graphstmt -> graphmove .

    IF              reduce using rule 102 (graphstmt -> graphmove .)
    PRINT           reduce using rule 102 (graphstmt -> graphmove .)
    READ            reduce using rule 102 (graphstmt -> graphmove .)
    ID              reduce using rule 102 (graphstmt -> graphmove .)
    RETURN          reduce using rule 102 (graphstmt -> graphmove .)
    FOR             reduce using rule 102 (graphstmt -> graphmove .)
    REPEAT          reduce using rule 102 (graphstmt -> graphmove .)
    CIRCLE          reduce using rule 102 (graphstmt -> graphmove .)
    SQUARE          reduce using rule 102 (graphstmt -> graphmove .)
    TRIANGLE        reduce using rule 102 (graphstmt -> graphmove .)
    RECTANGLE       reduce using rule 102 (graphstmt -> graphmove .)
    HIDE_STAR       reduce using rule 102 (graphstmt -> graphmove .)
    SHOW_STAR       reduce using rule 102 (graphstmt -> graphmove .)
    HAND_DOWN       reduce using rule 102 (graphstmt -> graphmove .)
    HAND_UP         reduce using rule 102 (graphstmt -> graphmove .)
    GO              reduce using rule 102 (graphstmt -> graphmove .)
    LEFT            reduce using rule 102 (graphstmt -> graphmove .)
    RIGHT           reduce using rule 102 (graphstmt -> graphmove .)
    BACK            reduce using rule 102 (graphstmt -> graphmove .)
    ARC             reduce using rule 102 (graphstmt -> graphmove .)
    WHILE           reduce using rule 102 (graphstmt -> graphmove .)
    SETXY           reduce using rule 102 (graphstmt -> graphmove .)
    COLOR_STAR      reduce using rule 102 (graphstmt -> graphmove .)
    SIZE_STAR       reduce using rule 102 (graphstmt -> graphmove .)
    CLOSEBRACES     reduce using rule 102 (graphstmt -> graphmove .)


state 59

    (117) graphr -> repeat . rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (120) rep -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 125

    rep                            shift and go to state 124

state 60

    (93) funCall -> ID . OPENPAREN funCall2 CLOSEPAREN
    (48) id -> ID .

    OPENPAREN       shift and go to state 126
    OPENBRACKET     reduce using rule 48 (id -> ID .)
    EQUALS          reduce using rule 48 (id -> ID .)


state 61

    (68) return -> RETURN . return1 SEMICOLON
    (69) return1 -> . vcte
    (70) return1 -> . exp
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (129) exp -> . term exp1
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    return1                        shift and go to state 127
    vcte                           shift and go to state 128
    exp                            shift and go to state 129
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    term                           shift and go to state 95
    factor                         shift and go to state 96
    factor1                        shift and go to state 98
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 62

    (90) while -> while1 . body
    (85) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 131

    body                           shift and go to state 130

state 63

    (89) for -> FOR . OPENPAREN ID TWODOTS exp CLOSEPAREN body

    OPENPAREN       shift and go to state 132


state 64

    (103) graphfig -> graphfig1 . SEMICOLON

    SEMICOLON       shift and go to state 133


state 65

    (122) graphview -> graphview1 . SEMICOLON

    SEMICOLON       shift and go to state 134


state 66

    (108) graphmove -> graphmove1 . SEMICOLON

    SEMICOLON       shift and go to state 135


state 67

    (109) graphmove -> graphmove2 . SEMICOLON

    SEMICOLON       shift and go to state 136


state 68

    (121) repeat -> REPEAT .

    OPENPAREN       reduce using rule 121 (repeat -> REPEAT .)


state 69

    (91) while1 -> while_w . OPENPAREN expression CLOSEPAREN

    OPENPAREN       shift and go to state 137


state 70

    (104) graphfig1 -> CIRCLE . laRegla2
    (99) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 139

    laRegla2                       shift and go to state 138

state 71

    (105) graphfig1 -> SQUARE . laRegla2
    (99) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 139

    laRegla2                       shift and go to state 140

state 72

    (106) graphfig1 -> TRIANGLE . laRegla
    (98) laRegla -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 142

    laRegla                        shift and go to state 141

state 73

    (107) graphfig1 -> RECTANGLE . laRegla
    (98) laRegla -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 142

    laRegla                        shift and go to state 143

state 74

    (123) graphview1 -> HIDE_STAR .

    SEMICOLON       reduce using rule 123 (graphview1 -> HIDE_STAR .)


state 75

    (124) graphview1 -> SHOW_STAR .

    SEMICOLON       reduce using rule 124 (graphview1 -> SHOW_STAR .)


state 76

    (125) graphview1 -> graphview2 . exp
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    exp                            shift and go to state 144
    term                           shift and go to state 95
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 77

    (110) graphmove1 -> HAND_DOWN .

    SEMICOLON       reduce using rule 110 (graphmove1 -> HAND_DOWN .)


state 78

    (111) graphmove1 -> HAND_UP .

    SEMICOLON       reduce using rule 111 (graphmove1 -> HAND_UP .)


state 79

    (112) graphmove2 -> GO . laRegla2
    (99) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 139

    laRegla2                       shift and go to state 145

state 80

    (113) graphmove2 -> LEFT . laRegla2
    (99) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 139

    laRegla2                       shift and go to state 146

state 81

    (114) graphmove2 -> RIGHT . laRegla2
    (99) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 139

    laRegla2                       shift and go to state 147

state 82

    (115) graphmove2 -> BACK . laRegla2
    (99) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 139

    laRegla2                       shift and go to state 148

state 83

    (116) graphmove2 -> ARC . laRegla
    (98) laRegla -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 142

    laRegla                        shift and go to state 149

state 84

    (92) while_w -> WHILE .

    OPENPAREN       reduce using rule 92 (while_w -> WHILE .)


state 85

    (126) graphview2 -> SETXY . laRegla
    (98) laRegla -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 142

    laRegla                        shift and go to state 150

state 86

    (127) graphview2 -> COLOR_STAR . laRegla2
    (99) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 139

    laRegla2                       shift and go to state 151

state 87

    (128) graphview2 -> SIZE_STAR . laRegla2
    (99) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 139

    laRegla2                       shift and go to state 152

state 88

    (23) function -> FUN functionI function2 inicia_fun . declara_vars function4 termina_fun
    (8) declara_vars -> . vars declara_vars
    (9) declara_vars -> . empty
    (33) vars -> . type ID vars1 equals exp SEMICOLON
    (34) vars -> . type ID vars1 SEMICOLON
    (145) empty -> .
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . CHAR

    IF              reduce using rule 145 (empty -> .)
    PRINT           reduce using rule 145 (empty -> .)
    READ            reduce using rule 145 (empty -> .)
    ID              reduce using rule 145 (empty -> .)
    RETURN          reduce using rule 145 (empty -> .)
    FOR             reduce using rule 145 (empty -> .)
    REPEAT          reduce using rule 145 (empty -> .)
    CIRCLE          reduce using rule 145 (empty -> .)
    SQUARE          reduce using rule 145 (empty -> .)
    TRIANGLE        reduce using rule 145 (empty -> .)
    RECTANGLE       reduce using rule 145 (empty -> .)
    HIDE_STAR       reduce using rule 145 (empty -> .)
    SHOW_STAR       reduce using rule 145 (empty -> .)
    HAND_DOWN       reduce using rule 145 (empty -> .)
    HAND_UP         reduce using rule 145 (empty -> .)
    GO              reduce using rule 145 (empty -> .)
    LEFT            reduce using rule 145 (empty -> .)
    RIGHT           reduce using rule 145 (empty -> .)
    BACK            reduce using rule 145 (empty -> .)
    ARC             reduce using rule 145 (empty -> .)
    WHILE           reduce using rule 145 (empty -> .)
    SETXY           reduce using rule 145 (empty -> .)
    COLOR_STAR      reduce using rule 145 (empty -> .)
    SIZE_STAR       reduce using rule 145 (empty -> .)
    CLOSEBRACES     reduce using rule 145 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    declara_vars                   shift and go to state 153
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 89

    (24) inicia_fun -> OPENBRACES .

    INT             reduce using rule 24 (inicia_fun -> OPENBRACES .)
    FLOAT           reduce using rule 24 (inicia_fun -> OPENBRACES .)
    CHAR            reduce using rule 24 (inicia_fun -> OPENBRACES .)
    IF              reduce using rule 24 (inicia_fun -> OPENBRACES .)
    PRINT           reduce using rule 24 (inicia_fun -> OPENBRACES .)
    READ            reduce using rule 24 (inicia_fun -> OPENBRACES .)
    ID              reduce using rule 24 (inicia_fun -> OPENBRACES .)
    RETURN          reduce using rule 24 (inicia_fun -> OPENBRACES .)
    FOR             reduce using rule 24 (inicia_fun -> OPENBRACES .)
    REPEAT          reduce using rule 24 (inicia_fun -> OPENBRACES .)
    CIRCLE          reduce using rule 24 (inicia_fun -> OPENBRACES .)
    SQUARE          reduce using rule 24 (inicia_fun -> OPENBRACES .)
    TRIANGLE        reduce using rule 24 (inicia_fun -> OPENBRACES .)
    RECTANGLE       reduce using rule 24 (inicia_fun -> OPENBRACES .)
    HIDE_STAR       reduce using rule 24 (inicia_fun -> OPENBRACES .)
    SHOW_STAR       reduce using rule 24 (inicia_fun -> OPENBRACES .)
    HAND_DOWN       reduce using rule 24 (inicia_fun -> OPENBRACES .)
    HAND_UP         reduce using rule 24 (inicia_fun -> OPENBRACES .)
    GO              reduce using rule 24 (inicia_fun -> OPENBRACES .)
    LEFT            reduce using rule 24 (inicia_fun -> OPENBRACES .)
    RIGHT           reduce using rule 24 (inicia_fun -> OPENBRACES .)
    BACK            reduce using rule 24 (inicia_fun -> OPENBRACES .)
    ARC             reduce using rule 24 (inicia_fun -> OPENBRACES .)
    WHILE           reduce using rule 24 (inicia_fun -> OPENBRACES .)
    SETXY           reduce using rule 24 (inicia_fun -> OPENBRACES .)
    COLOR_STAR      reduce using rule 24 (inicia_fun -> OPENBRACES .)
    SIZE_STAR       reduce using rule 24 (inicia_fun -> OPENBRACES .)
    CLOSEBRACES     reduce using rule 24 (inicia_fun -> OPENBRACES .)


state 90

    (26) function2 -> OPENPAREN function3 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 154


state 91

    (27) function3 -> type . ID function5

    ID              shift and go to state 155


state 92

    (28) function3 -> empty .

    CLOSEPAREN      reduce using rule 28 (function3 -> empty .)


state 93

    (48) id -> ID .
    (93) funCall -> ID . OPENPAREN funCall2 CLOSEPAREN

  ! shift/reduce conflict for OPENPAREN resolved as shift
    OPENBRACKET     reduce using rule 48 (id -> ID .)
    MULTIPLICATION  reduce using rule 48 (id -> ID .)
    DIVISION        reduce using rule 48 (id -> ID .)
    ADDITION        reduce using rule 48 (id -> ID .)
    SUBSTRACTION    reduce using rule 48 (id -> ID .)
    SEMICOLON       reduce using rule 48 (id -> ID .)
    GREATER         reduce using rule 48 (id -> ID .)
    LESS            reduce using rule 48 (id -> ID .)
    NOTEQUAL        reduce using rule 48 (id -> ID .)
    ISEQUAL         reduce using rule 48 (id -> ID .)
    CLOSEPAREN      reduce using rule 48 (id -> ID .)
    CLOSEBRACKET    reduce using rule 48 (id -> ID .)
    COMMA           reduce using rule 48 (id -> ID .)
    CTEINT          reduce using rule 48 (id -> ID .)
    CTEFLOAT        reduce using rule 48 (id -> ID .)
    CTECHAR         reduce using rule 48 (id -> ID .)
    ID              reduce using rule 48 (id -> ID .)
    OPENPAREN       shift and go to state 126

  ! OPENPAREN       [ reduce using rule 48 (id -> ID .) ]


state 94

    (33) vars -> type ID vars1 equals exp . SEMICOLON

    SEMICOLON       shift and go to state 156


state 95

    (129) exp -> term . exp1
    (130) exp1 -> . ADDITION exp
    (131) exp1 -> . SUBSTRACTION exp
    (132) exp1 -> . empty
    (145) empty -> .

  ! shift/reduce conflict for ADDITION resolved as shift
  ! shift/reduce conflict for SUBSTRACTION resolved as shift
    ADDITION        shift and go to state 158
    SUBSTRACTION    shift and go to state 159
    SEMICOLON       reduce using rule 145 (empty -> .)
    GREATER         reduce using rule 145 (empty -> .)
    LESS            reduce using rule 145 (empty -> .)
    NOTEQUAL        reduce using rule 145 (empty -> .)
    ISEQUAL         reduce using rule 145 (empty -> .)
    CLOSEPAREN      reduce using rule 145 (empty -> .)
    CLOSEBRACKET    reduce using rule 145 (empty -> .)
    COMMA           reduce using rule 145 (empty -> .)
    CTEINT          reduce using rule 145 (empty -> .)
    CTEFLOAT        reduce using rule 145 (empty -> .)
    CTECHAR         reduce using rule 145 (empty -> .)
    ID              reduce using rule 145 (empty -> .)
    OPENPAREN       reduce using rule 145 (empty -> .)

  ! ADDITION        [ reduce using rule 145 (empty -> .) ]
  ! SUBSTRACTION    [ reduce using rule 145 (empty -> .) ]

    exp1                           shift and go to state 157
    empty                          shift and go to state 160

state 96

    (141) term -> factor . term1
    (142) term1 -> . MULTIPLICATION term
    (143) term1 -> . DIVISION term
    (144) term1 -> . empty
    (145) empty -> .

    MULTIPLICATION  shift and go to state 162
    DIVISION        shift and go to state 163
    ADDITION        reduce using rule 145 (empty -> .)
    SUBSTRACTION    reduce using rule 145 (empty -> .)
    SEMICOLON       reduce using rule 145 (empty -> .)
    GREATER         reduce using rule 145 (empty -> .)
    LESS            reduce using rule 145 (empty -> .)
    NOTEQUAL        reduce using rule 145 (empty -> .)
    ISEQUAL         reduce using rule 145 (empty -> .)
    CLOSEPAREN      reduce using rule 145 (empty -> .)
    CLOSEBRACKET    reduce using rule 145 (empty -> .)
    COMMA           reduce using rule 145 (empty -> .)
    CTEINT          reduce using rule 145 (empty -> .)
    CTEFLOAT        reduce using rule 145 (empty -> .)
    CTECHAR         reduce using rule 145 (empty -> .)
    ID              reduce using rule 145 (empty -> .)
    OPENPAREN       reduce using rule 145 (empty -> .)

    term1                          shift and go to state 161
    empty                          shift and go to state 164

state 97

    (135) factor -> vcte .

    MULTIPLICATION  reduce using rule 135 (factor -> vcte .)
    DIVISION        reduce using rule 135 (factor -> vcte .)
    ADDITION        reduce using rule 135 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 135 (factor -> vcte .)
    SEMICOLON       reduce using rule 135 (factor -> vcte .)
    GREATER         reduce using rule 135 (factor -> vcte .)
    LESS            reduce using rule 135 (factor -> vcte .)
    NOTEQUAL        reduce using rule 135 (factor -> vcte .)
    ISEQUAL         reduce using rule 135 (factor -> vcte .)
    CLOSEPAREN      reduce using rule 135 (factor -> vcte .)
    CLOSEBRACKET    reduce using rule 135 (factor -> vcte .)
    COMMA           reduce using rule 135 (factor -> vcte .)
    CTEINT          reduce using rule 135 (factor -> vcte .)
    CTEFLOAT        reduce using rule 135 (factor -> vcte .)
    CTECHAR         reduce using rule 135 (factor -> vcte .)
    ID              reduce using rule 135 (factor -> vcte .)
    OPENPAREN       reduce using rule 135 (factor -> vcte .)


state 98

    (136) factor -> factor1 .

    MULTIPLICATION  reduce using rule 136 (factor -> factor1 .)
    DIVISION        reduce using rule 136 (factor -> factor1 .)
    ADDITION        reduce using rule 136 (factor -> factor1 .)
    SUBSTRACTION    reduce using rule 136 (factor -> factor1 .)
    SEMICOLON       reduce using rule 136 (factor -> factor1 .)
    GREATER         reduce using rule 136 (factor -> factor1 .)
    LESS            reduce using rule 136 (factor -> factor1 .)
    NOTEQUAL        reduce using rule 136 (factor -> factor1 .)
    ISEQUAL         reduce using rule 136 (factor -> factor1 .)
    CLOSEPAREN      reduce using rule 136 (factor -> factor1 .)
    CLOSEBRACKET    reduce using rule 136 (factor -> factor1 .)
    COMMA           reduce using rule 136 (factor -> factor1 .)
    CTEINT          reduce using rule 136 (factor -> factor1 .)
    CTEFLOAT        reduce using rule 136 (factor -> factor1 .)
    CTECHAR         reduce using rule 136 (factor -> factor1 .)
    ID              reduce using rule 136 (factor -> factor1 .)
    OPENPAREN       reduce using rule 136 (factor -> factor1 .)


state 99

    (56) vcte -> cte_int .

    MULTIPLICATION  reduce using rule 56 (vcte -> cte_int .)
    DIVISION        reduce using rule 56 (vcte -> cte_int .)
    ADDITION        reduce using rule 56 (vcte -> cte_int .)
    SUBSTRACTION    reduce using rule 56 (vcte -> cte_int .)
    SEMICOLON       reduce using rule 56 (vcte -> cte_int .)
    GREATER         reduce using rule 56 (vcte -> cte_int .)
    LESS            reduce using rule 56 (vcte -> cte_int .)
    NOTEQUAL        reduce using rule 56 (vcte -> cte_int .)
    ISEQUAL         reduce using rule 56 (vcte -> cte_int .)
    CLOSEPAREN      reduce using rule 56 (vcte -> cte_int .)
    CLOSEBRACKET    reduce using rule 56 (vcte -> cte_int .)
    COMMA           reduce using rule 56 (vcte -> cte_int .)
    CTEINT          reduce using rule 56 (vcte -> cte_int .)
    CTEFLOAT        reduce using rule 56 (vcte -> cte_int .)
    CTECHAR         reduce using rule 56 (vcte -> cte_int .)
    ID              reduce using rule 56 (vcte -> cte_int .)
    OPENPAREN       reduce using rule 56 (vcte -> cte_int .)


state 100

    (57) vcte -> cte_float .

    MULTIPLICATION  reduce using rule 57 (vcte -> cte_float .)
    DIVISION        reduce using rule 57 (vcte -> cte_float .)
    ADDITION        reduce using rule 57 (vcte -> cte_float .)
    SUBSTRACTION    reduce using rule 57 (vcte -> cte_float .)
    SEMICOLON       reduce using rule 57 (vcte -> cte_float .)
    GREATER         reduce using rule 57 (vcte -> cte_float .)
    LESS            reduce using rule 57 (vcte -> cte_float .)
    NOTEQUAL        reduce using rule 57 (vcte -> cte_float .)
    ISEQUAL         reduce using rule 57 (vcte -> cte_float .)
    CLOSEPAREN      reduce using rule 57 (vcte -> cte_float .)
    CLOSEBRACKET    reduce using rule 57 (vcte -> cte_float .)
    COMMA           reduce using rule 57 (vcte -> cte_float .)
    CTEINT          reduce using rule 57 (vcte -> cte_float .)
    CTEFLOAT        reduce using rule 57 (vcte -> cte_float .)
    CTECHAR         reduce using rule 57 (vcte -> cte_float .)
    ID              reduce using rule 57 (vcte -> cte_float .)
    OPENPAREN       reduce using rule 57 (vcte -> cte_float .)


state 101

    (58) vcte -> cte_char .

    MULTIPLICATION  reduce using rule 58 (vcte -> cte_char .)
    DIVISION        reduce using rule 58 (vcte -> cte_char .)
    ADDITION        reduce using rule 58 (vcte -> cte_char .)
    SUBSTRACTION    reduce using rule 58 (vcte -> cte_char .)
    SEMICOLON       reduce using rule 58 (vcte -> cte_char .)
    GREATER         reduce using rule 58 (vcte -> cte_char .)
    LESS            reduce using rule 58 (vcte -> cte_char .)
    NOTEQUAL        reduce using rule 58 (vcte -> cte_char .)
    ISEQUAL         reduce using rule 58 (vcte -> cte_char .)
    CLOSEPAREN      reduce using rule 58 (vcte -> cte_char .)
    CLOSEBRACKET    reduce using rule 58 (vcte -> cte_char .)
    COMMA           reduce using rule 58 (vcte -> cte_char .)
    CTEINT          reduce using rule 58 (vcte -> cte_char .)
    CTEFLOAT        reduce using rule 58 (vcte -> cte_char .)
    CTECHAR         reduce using rule 58 (vcte -> cte_char .)
    ID              reduce using rule 58 (vcte -> cte_char .)
    OPENPAREN       reduce using rule 58 (vcte -> cte_char .)


state 102

    (59) vcte -> id . vcte1
    (61) vcte1 -> . OPENBRACKET exp CLOSEBRACKET vcte3
    (62) vcte1 -> . empty
    (145) empty -> .

    OPENBRACKET     shift and go to state 166
    MULTIPLICATION  reduce using rule 145 (empty -> .)
    DIVISION        reduce using rule 145 (empty -> .)
    ADDITION        reduce using rule 145 (empty -> .)
    SUBSTRACTION    reduce using rule 145 (empty -> .)
    SEMICOLON       reduce using rule 145 (empty -> .)
    GREATER         reduce using rule 145 (empty -> .)
    LESS            reduce using rule 145 (empty -> .)
    NOTEQUAL        reduce using rule 145 (empty -> .)
    ISEQUAL         reduce using rule 145 (empty -> .)
    CLOSEPAREN      reduce using rule 145 (empty -> .)
    CLOSEBRACKET    reduce using rule 145 (empty -> .)
    COMMA           reduce using rule 145 (empty -> .)
    CTEINT          reduce using rule 145 (empty -> .)
    CTEFLOAT        reduce using rule 145 (empty -> .)
    CTECHAR         reduce using rule 145 (empty -> .)
    ID              reduce using rule 145 (empty -> .)
    OPENPAREN       reduce using rule 145 (empty -> .)

    vcte1                          shift and go to state 165
    empty                          shift and go to state 167

state 103

    (60) vcte -> funCall .

    MULTIPLICATION  reduce using rule 60 (vcte -> funCall .)
    DIVISION        reduce using rule 60 (vcte -> funCall .)
    ADDITION        reduce using rule 60 (vcte -> funCall .)
    SUBSTRACTION    reduce using rule 60 (vcte -> funCall .)
    SEMICOLON       reduce using rule 60 (vcte -> funCall .)
    GREATER         reduce using rule 60 (vcte -> funCall .)
    LESS            reduce using rule 60 (vcte -> funCall .)
    NOTEQUAL        reduce using rule 60 (vcte -> funCall .)
    ISEQUAL         reduce using rule 60 (vcte -> funCall .)
    CLOSEPAREN      reduce using rule 60 (vcte -> funCall .)
    CLOSEBRACKET    reduce using rule 60 (vcte -> funCall .)
    COMMA           reduce using rule 60 (vcte -> funCall .)
    CTEINT          reduce using rule 60 (vcte -> funCall .)
    CTEFLOAT        reduce using rule 60 (vcte -> funCall .)
    CTECHAR         reduce using rule 60 (vcte -> funCall .)
    ID              reduce using rule 60 (vcte -> funCall .)
    OPENPAREN       reduce using rule 60 (vcte -> funCall .)


state 104

    (137) factor1 -> factor2 . vcte
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN

    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93

    vcte                           shift and go to state 168
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103

state 105

    (138) factor1 -> openP . expression closeP
    (71) expression -> . exp expression1
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    openP                          shift and go to state 105
    expression                     shift and go to state 169
    exp                            shift and go to state 170
    term                           shift and go to state 95
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104

state 106

    (65) cte_int -> CTEINT .

    MULTIPLICATION  reduce using rule 65 (cte_int -> CTEINT .)
    DIVISION        reduce using rule 65 (cte_int -> CTEINT .)
    ADDITION        reduce using rule 65 (cte_int -> CTEINT .)
    SUBSTRACTION    reduce using rule 65 (cte_int -> CTEINT .)
    SEMICOLON       reduce using rule 65 (cte_int -> CTEINT .)
    GREATER         reduce using rule 65 (cte_int -> CTEINT .)
    LESS            reduce using rule 65 (cte_int -> CTEINT .)
    NOTEQUAL        reduce using rule 65 (cte_int -> CTEINT .)
    ISEQUAL         reduce using rule 65 (cte_int -> CTEINT .)
    CLOSEPAREN      reduce using rule 65 (cte_int -> CTEINT .)
    CLOSEBRACKET    reduce using rule 65 (cte_int -> CTEINT .)
    COMMA           reduce using rule 65 (cte_int -> CTEINT .)
    CTEINT          reduce using rule 65 (cte_int -> CTEINT .)
    CTEFLOAT        reduce using rule 65 (cte_int -> CTEINT .)
    CTECHAR         reduce using rule 65 (cte_int -> CTEINT .)
    ID              reduce using rule 65 (cte_int -> CTEINT .)
    OPENPAREN       reduce using rule 65 (cte_int -> CTEINT .)


state 107

    (66) cte_float -> CTEFLOAT .

    MULTIPLICATION  reduce using rule 66 (cte_float -> CTEFLOAT .)
    DIVISION        reduce using rule 66 (cte_float -> CTEFLOAT .)
    ADDITION        reduce using rule 66 (cte_float -> CTEFLOAT .)
    SUBSTRACTION    reduce using rule 66 (cte_float -> CTEFLOAT .)
    SEMICOLON       reduce using rule 66 (cte_float -> CTEFLOAT .)
    GREATER         reduce using rule 66 (cte_float -> CTEFLOAT .)
    LESS            reduce using rule 66 (cte_float -> CTEFLOAT .)
    NOTEQUAL        reduce using rule 66 (cte_float -> CTEFLOAT .)
    ISEQUAL         reduce using rule 66 (cte_float -> CTEFLOAT .)
    CLOSEPAREN      reduce using rule 66 (cte_float -> CTEFLOAT .)
    CLOSEBRACKET    reduce using rule 66 (cte_float -> CTEFLOAT .)
    COMMA           reduce using rule 66 (cte_float -> CTEFLOAT .)
    CTEINT          reduce using rule 66 (cte_float -> CTEFLOAT .)
    CTEFLOAT        reduce using rule 66 (cte_float -> CTEFLOAT .)
    CTECHAR         reduce using rule 66 (cte_float -> CTEFLOAT .)
    ID              reduce using rule 66 (cte_float -> CTEFLOAT .)
    OPENPAREN       reduce using rule 66 (cte_float -> CTEFLOAT .)


state 108

    (67) cte_char -> CTECHAR .

    MULTIPLICATION  reduce using rule 67 (cte_char -> CTECHAR .)
    DIVISION        reduce using rule 67 (cte_char -> CTECHAR .)
    ADDITION        reduce using rule 67 (cte_char -> CTECHAR .)
    SUBSTRACTION    reduce using rule 67 (cte_char -> CTECHAR .)
    SEMICOLON       reduce using rule 67 (cte_char -> CTECHAR .)
    GREATER         reduce using rule 67 (cte_char -> CTECHAR .)
    LESS            reduce using rule 67 (cte_char -> CTECHAR .)
    NOTEQUAL        reduce using rule 67 (cte_char -> CTECHAR .)
    ISEQUAL         reduce using rule 67 (cte_char -> CTECHAR .)
    CLOSEPAREN      reduce using rule 67 (cte_char -> CTECHAR .)
    CLOSEBRACKET    reduce using rule 67 (cte_char -> CTECHAR .)
    COMMA           reduce using rule 67 (cte_char -> CTECHAR .)
    CTEINT          reduce using rule 67 (cte_char -> CTECHAR .)
    CTEFLOAT        reduce using rule 67 (cte_char -> CTECHAR .)
    CTECHAR         reduce using rule 67 (cte_char -> CTECHAR .)
    ID              reduce using rule 67 (cte_char -> CTECHAR .)
    OPENPAREN       reduce using rule 67 (cte_char -> CTECHAR .)


state 109

    (133) openP -> OPENPAREN .

    CTEINT          reduce using rule 133 (openP -> OPENPAREN .)
    CTEFLOAT        reduce using rule 133 (openP -> OPENPAREN .)
    CTECHAR         reduce using rule 133 (openP -> OPENPAREN .)
    ID              reduce using rule 133 (openP -> OPENPAREN .)
    ADDITION        reduce using rule 133 (openP -> OPENPAREN .)
    SUBSTRACTION    reduce using rule 133 (openP -> OPENPAREN .)
    OPENPAREN       reduce using rule 133 (openP -> OPENPAREN .)


state 110

    (139) factor2 -> ADDITION .

    CTEINT          reduce using rule 139 (factor2 -> ADDITION .)
    CTEFLOAT        reduce using rule 139 (factor2 -> ADDITION .)
    CTECHAR         reduce using rule 139 (factor2 -> ADDITION .)
    ID              reduce using rule 139 (factor2 -> ADDITION .)


state 111

    (140) factor2 -> SUBSTRACTION .

    CTEINT          reduce using rule 140 (factor2 -> SUBSTRACTION .)
    CTEFLOAT        reduce using rule 140 (factor2 -> SUBSTRACTION .)
    CTECHAR         reduce using rule 140 (factor2 -> SUBSTRACTION .)
    ID              reduce using rule 140 (factor2 -> SUBSTRACTION .)


state 112

    (35) vars1 -> OPENBRACKET CTEINT CLOSEBRACKET . vars3
    (37) vars3 -> . OPENBRACKET CTEINT CLOSEBRACKET
    (38) vars3 -> . empty
    (145) empty -> .

    OPENBRACKET     shift and go to state 171
    SEMICOLON       reduce using rule 145 (empty -> .)
    EQUALS          reduce using rule 145 (empty -> .)

    vars3                          shift and go to state 172
    empty                          shift and go to state 173

state 113

    (4) star -> starI declara_vars star1 CLOSEBRACES .

    $end            reduce using rule 4 (star -> starI declara_vars star1 CLOSEBRACES .)


state 114

    (6) star1 -> stmt star1 .

    CLOSEBRACES     reduce using rule 6 (star1 -> stmt star1 .)


state 115

    (19) stmt -> funCall SEMICOLON .

    IF              reduce using rule 19 (stmt -> funCall SEMICOLON .)
    PRINT           reduce using rule 19 (stmt -> funCall SEMICOLON .)
    READ            reduce using rule 19 (stmt -> funCall SEMICOLON .)
    ID              reduce using rule 19 (stmt -> funCall SEMICOLON .)
    RETURN          reduce using rule 19 (stmt -> funCall SEMICOLON .)
    FOR             reduce using rule 19 (stmt -> funCall SEMICOLON .)
    REPEAT          reduce using rule 19 (stmt -> funCall SEMICOLON .)
    CIRCLE          reduce using rule 19 (stmt -> funCall SEMICOLON .)
    SQUARE          reduce using rule 19 (stmt -> funCall SEMICOLON .)
    TRIANGLE        reduce using rule 19 (stmt -> funCall SEMICOLON .)
    RECTANGLE       reduce using rule 19 (stmt -> funCall SEMICOLON .)
    HIDE_STAR       reduce using rule 19 (stmt -> funCall SEMICOLON .)
    SHOW_STAR       reduce using rule 19 (stmt -> funCall SEMICOLON .)
    HAND_DOWN       reduce using rule 19 (stmt -> funCall SEMICOLON .)
    HAND_UP         reduce using rule 19 (stmt -> funCall SEMICOLON .)
    GO              reduce using rule 19 (stmt -> funCall SEMICOLON .)
    LEFT            reduce using rule 19 (stmt -> funCall SEMICOLON .)
    RIGHT           reduce using rule 19 (stmt -> funCall SEMICOLON .)
    BACK            reduce using rule 19 (stmt -> funCall SEMICOLON .)
    ARC             reduce using rule 19 (stmt -> funCall SEMICOLON .)
    WHILE           reduce using rule 19 (stmt -> funCall SEMICOLON .)
    SETXY           reduce using rule 19 (stmt -> funCall SEMICOLON .)
    COLOR_STAR      reduce using rule 19 (stmt -> funCall SEMICOLON .)
    SIZE_STAR       reduce using rule 19 (stmt -> funCall SEMICOLON .)
    CLOSEBRACES     reduce using rule 19 (stmt -> funCall SEMICOLON .)


state 116

    (49) assignment -> id assignment1 . equals assignment3 SEMICOLON
    (47) equals -> . EQUALS

    EQUALS          shift and go to state 36

    equals                         shift and go to state 174

state 117

    (50) assignment1 -> assignment2 .
    (51) assignment1 -> assignment2 . assignment1
    (50) assignment1 -> . assignment2
    (51) assignment1 -> . assignment2 assignment1
    (52) assignment1 -> . empty
    (53) assignment2 -> . OPENBRACKET exp CLOSEBRACKET
    (145) empty -> .

  ! reduce/reduce conflict for EQUALS resolved using rule 50 (assignment1 -> assignment2 .)
    EQUALS          reduce using rule 50 (assignment1 -> assignment2 .)
    OPENBRACKET     shift and go to state 119

  ! EQUALS          [ reduce using rule 145 (empty -> .) ]

    assignment2                    shift and go to state 117
    assignment1                    shift and go to state 175
    empty                          shift and go to state 118

state 118

    (52) assignment1 -> empty .

    EQUALS          reduce using rule 52 (assignment1 -> empty .)


state 119

    (53) assignment2 -> OPENBRACKET . exp CLOSEBRACKET
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    exp                            shift and go to state 176
    term                           shift and go to state 95
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 120

    (78) condition -> IF head_cond . body condition1
    (85) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 131

    body                           shift and go to state 177

state 121

    (84) head_cond -> OPENPAREN . expression close_condition
    (71) expression -> . exp expression1
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    expression                     shift and go to state 178
    exp                            shift and go to state 170
    term                           shift and go to state 95
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 122

    (42) print -> PRINT OPENPAREN . expression CLOSEPAREN SEMICOLON
    (71) expression -> . exp expression1
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    expression                     shift and go to state 179
    exp                            shift and go to state 170
    term                           shift and go to state 95
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 123

    (43) read -> READ OPENPAREN . id read1 CLOSEPAREN SEMICOLON
    (48) id -> . ID

    ID              shift and go to state 181

    id                             shift and go to state 180

state 124

    (117) graphr -> repeat rep . OPENBRACES graphstmt graphr1 CLOSEBRACES

    OPENBRACES      shift and go to state 182


state 125

    (120) rep -> OPENPAREN . exp CLOSEPAREN
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    exp                            shift and go to state 183
    term                           shift and go to state 95
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 126

    (93) funCall -> ID OPENPAREN . funCall2 CLOSEPAREN
    (94) funCall2 -> . exp funCall3
    (95) funCall2 -> . empty
    (129) exp -> . term exp1
    (145) empty -> .
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CLOSEPAREN      reduce using rule 145 (empty -> .)
    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    funCall2                       shift and go to state 184
    exp                            shift and go to state 185
    empty                          shift and go to state 186
    term                           shift and go to state 95
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 127

    (68) return -> RETURN return1 . SEMICOLON

    SEMICOLON       shift and go to state 187


state 128

    (69) return1 -> vcte .
    (135) factor -> vcte .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 69 (return1 -> vcte .)
    SEMICOLON       reduce using rule 69 (return1 -> vcte .)
    MULTIPLICATION  reduce using rule 135 (factor -> vcte .)
    DIVISION        reduce using rule 135 (factor -> vcte .)
    ADDITION        reduce using rule 135 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 135 (factor -> vcte .)

  ! SEMICOLON       [ reduce using rule 135 (factor -> vcte .) ]


state 129

    (70) return1 -> exp .

    SEMICOLON       reduce using rule 70 (return1 -> exp .)


state 130

    (90) while -> while1 body .

    IF              reduce using rule 90 (while -> while1 body .)
    PRINT           reduce using rule 90 (while -> while1 body .)
    READ            reduce using rule 90 (while -> while1 body .)
    ID              reduce using rule 90 (while -> while1 body .)
    RETURN          reduce using rule 90 (while -> while1 body .)
    FOR             reduce using rule 90 (while -> while1 body .)
    REPEAT          reduce using rule 90 (while -> while1 body .)
    CIRCLE          reduce using rule 90 (while -> while1 body .)
    SQUARE          reduce using rule 90 (while -> while1 body .)
    TRIANGLE        reduce using rule 90 (while -> while1 body .)
    RECTANGLE       reduce using rule 90 (while -> while1 body .)
    HIDE_STAR       reduce using rule 90 (while -> while1 body .)
    SHOW_STAR       reduce using rule 90 (while -> while1 body .)
    HAND_DOWN       reduce using rule 90 (while -> while1 body .)
    HAND_UP         reduce using rule 90 (while -> while1 body .)
    GO              reduce using rule 90 (while -> while1 body .)
    LEFT            reduce using rule 90 (while -> while1 body .)
    RIGHT           reduce using rule 90 (while -> while1 body .)
    BACK            reduce using rule 90 (while -> while1 body .)
    ARC             reduce using rule 90 (while -> while1 body .)
    WHILE           reduce using rule 90 (while -> while1 body .)
    SETXY           reduce using rule 90 (while -> while1 body .)
    COLOR_STAR      reduce using rule 90 (while -> while1 body .)
    SIZE_STAR       reduce using rule 90 (while -> while1 body .)
    CLOSEBRACES     reduce using rule 90 (while -> while1 body .)


state 131

    (85) body -> OPENBRACES . body1 CLOSEBRACES
    (87) body1 -> . stmt body1
    (88) body1 -> . empty
    (12) stmt -> . assignment
    (13) stmt -> . condition
    (14) stmt -> . print
    (15) stmt -> . loop
    (16) stmt -> . read
    (17) stmt -> . graphstmt
    (18) stmt -> . graphr
    (19) stmt -> . funCall SEMICOLON
    (20) stmt -> . return
    (145) empty -> .
    (49) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (78) condition -> . IF head_cond body condition1
    (42) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (10) loop -> . while
    (11) loop -> . for
    (43) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (100) graphstmt -> . graphfig
    (101) graphstmt -> . graphview
    (102) graphstmt -> . graphmove
    (117) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (68) return -> . RETURN return1 SEMICOLON
    (48) id -> . ID
    (90) while -> . while1 body
    (89) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (103) graphfig -> . graphfig1 SEMICOLON
    (122) graphview -> . graphview1 SEMICOLON
    (108) graphmove -> . graphmove1 SEMICOLON
    (109) graphmove -> . graphmove2 SEMICOLON
    (121) repeat -> . REPEAT
    (91) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (104) graphfig1 -> . CIRCLE laRegla2
    (105) graphfig1 -> . SQUARE laRegla2
    (106) graphfig1 -> . TRIANGLE laRegla
    (107) graphfig1 -> . RECTANGLE laRegla
    (123) graphview1 -> . HIDE_STAR
    (124) graphview1 -> . SHOW_STAR
    (125) graphview1 -> . graphview2 exp
    (110) graphmove1 -> . HAND_DOWN
    (111) graphmove1 -> . HAND_UP
    (112) graphmove2 -> . GO laRegla2
    (113) graphmove2 -> . LEFT laRegla2
    (114) graphmove2 -> . RIGHT laRegla2
    (115) graphmove2 -> . BACK laRegla2
    (116) graphmove2 -> . ARC laRegla
    (92) while_w -> . WHILE
    (126) graphview2 -> . SETXY laRegla
    (127) graphview2 -> . COLOR_STAR laRegla2
    (128) graphview2 -> . SIZE_STAR laRegla2

    CLOSEBRACES     reduce using rule 145 (empty -> .)
    IF              shift and go to state 51
    PRINT           shift and go to state 52
    READ            shift and go to state 55
    ID              shift and go to state 60
    RETURN          shift and go to state 61
    FOR             shift and go to state 63
    REPEAT          shift and go to state 68
    CIRCLE          shift and go to state 70
    SQUARE          shift and go to state 71
    TRIANGLE        shift and go to state 72
    RECTANGLE       shift and go to state 73
    HIDE_STAR       shift and go to state 74
    SHOW_STAR       shift and go to state 75
    HAND_DOWN       shift and go to state 77
    HAND_UP         shift and go to state 78
    GO              shift and go to state 79
    LEFT            shift and go to state 80
    RIGHT           shift and go to state 81
    BACK            shift and go to state 82
    ARC             shift and go to state 83
    WHILE           shift and go to state 84
    SETXY           shift and go to state 85
    COLOR_STAR      shift and go to state 86
    SIZE_STAR       shift and go to state 87

    body1                          shift and go to state 188
    stmt                           shift and go to state 189
    empty                          shift and go to state 190
    assignment                     shift and go to state 41
    condition                      shift and go to state 42
    print                          shift and go to state 43
    loop                           shift and go to state 44
    read                           shift and go to state 45
    graphstmt                      shift and go to state 46
    graphr                         shift and go to state 47
    funCall                        shift and go to state 48
    return                         shift and go to state 49
    id                             shift and go to state 50
    while                          shift and go to state 53
    for                            shift and go to state 54
    graphfig                       shift and go to state 56
    graphview                      shift and go to state 57
    graphmove                      shift and go to state 58
    repeat                         shift and go to state 59
    while1                         shift and go to state 62
    graphfig1                      shift and go to state 64
    graphview1                     shift and go to state 65
    graphmove1                     shift and go to state 66
    graphmove2                     shift and go to state 67
    while_w                        shift and go to state 69
    graphview2                     shift and go to state 76

state 132

    (89) for -> FOR OPENPAREN . ID TWODOTS exp CLOSEPAREN body

    ID              shift and go to state 191


state 133

    (103) graphfig -> graphfig1 SEMICOLON .

    IF              reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    PRINT           reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    READ            reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    ID              reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    RETURN          reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    FOR             reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    REPEAT          reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    CIRCLE          reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    SQUARE          reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    TRIANGLE        reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    RECTANGLE       reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    HIDE_STAR       reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    SHOW_STAR       reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    HAND_DOWN       reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    HAND_UP         reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    GO              reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    LEFT            reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    RIGHT           reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    BACK            reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    ARC             reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    WHILE           reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    SETXY           reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    COLOR_STAR      reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    SIZE_STAR       reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)


state 134

    (122) graphview -> graphview1 SEMICOLON .

    IF              reduce using rule 122 (graphview -> graphview1 SEMICOLON .)
    PRINT           reduce using rule 122 (graphview -> graphview1 SEMICOLON .)
    READ            reduce using rule 122 (graphview -> graphview1 SEMICOLON .)
    ID              reduce using rule 122 (graphview -> graphview1 SEMICOLON .)
    RETURN          reduce using rule 122 (graphview -> graphview1 SEMICOLON .)
    FOR             reduce using rule 122 (graphview -> graphview1 SEMICOLON .)
    REPEAT          reduce using rule 122 (graphview -> graphview1 SEMICOLON .)
    CIRCLE          reduce using rule 122 (graphview -> graphview1 SEMICOLON .)
    SQUARE          reduce using rule 122 (graphview -> graphview1 SEMICOLON .)
    TRIANGLE        reduce using rule 122 (graphview -> graphview1 SEMICOLON .)
    RECTANGLE       reduce using rule 122 (graphview -> graphview1 SEMICOLON .)
    HIDE_STAR       reduce using rule 122 (graphview -> graphview1 SEMICOLON .)
    SHOW_STAR       reduce using rule 122 (graphview -> graphview1 SEMICOLON .)
    HAND_DOWN       reduce using rule 122 (graphview -> graphview1 SEMICOLON .)
    HAND_UP         reduce using rule 122 (graphview -> graphview1 SEMICOLON .)
    GO              reduce using rule 122 (graphview -> graphview1 SEMICOLON .)
    LEFT            reduce using rule 122 (graphview -> graphview1 SEMICOLON .)
    RIGHT           reduce using rule 122 (graphview -> graphview1 SEMICOLON .)
    BACK            reduce using rule 122 (graphview -> graphview1 SEMICOLON .)
    ARC             reduce using rule 122 (graphview -> graphview1 SEMICOLON .)
    WHILE           reduce using rule 122 (graphview -> graphview1 SEMICOLON .)
    SETXY           reduce using rule 122 (graphview -> graphview1 SEMICOLON .)
    COLOR_STAR      reduce using rule 122 (graphview -> graphview1 SEMICOLON .)
    SIZE_STAR       reduce using rule 122 (graphview -> graphview1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 122 (graphview -> graphview1 SEMICOLON .)


state 135

    (108) graphmove -> graphmove1 SEMICOLON .

    IF              reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    PRINT           reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    READ            reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    ID              reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    RETURN          reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    FOR             reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    REPEAT          reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    CIRCLE          reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    SQUARE          reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    TRIANGLE        reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    RECTANGLE       reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    HIDE_STAR       reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    SHOW_STAR       reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    HAND_DOWN       reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    HAND_UP         reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    GO              reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    LEFT            reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    RIGHT           reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    BACK            reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    ARC             reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    WHILE           reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    SETXY           reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    COLOR_STAR      reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    SIZE_STAR       reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)


state 136

    (109) graphmove -> graphmove2 SEMICOLON .

    IF              reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)
    PRINT           reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)
    READ            reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)
    ID              reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)
    RETURN          reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)
    FOR             reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)
    REPEAT          reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)
    CIRCLE          reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)
    SQUARE          reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)
    TRIANGLE        reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)
    RECTANGLE       reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)
    HIDE_STAR       reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)
    SHOW_STAR       reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)
    HAND_DOWN       reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)
    HAND_UP         reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)
    GO              reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)
    LEFT            reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)
    RIGHT           reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)
    BACK            reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)
    ARC             reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)
    WHILE           reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)
    SETXY           reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)
    COLOR_STAR      reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)
    SIZE_STAR       reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 109 (graphmove -> graphmove2 SEMICOLON .)


state 137

    (91) while1 -> while_w OPENPAREN . expression CLOSEPAREN
    (71) expression -> . exp expression1
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    expression                     shift and go to state 192
    exp                            shift and go to state 170
    term                           shift and go to state 95
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 138

    (104) graphfig1 -> CIRCLE laRegla2 .

    SEMICOLON       reduce using rule 104 (graphfig1 -> CIRCLE laRegla2 .)


state 139

    (99) laRegla2 -> OPENPAREN . exp CLOSEPAREN
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    exp                            shift and go to state 193
    term                           shift and go to state 95
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 140

    (105) graphfig1 -> SQUARE laRegla2 .

    SEMICOLON       reduce using rule 105 (graphfig1 -> SQUARE laRegla2 .)


state 141

    (106) graphfig1 -> TRIANGLE laRegla .

    SEMICOLON       reduce using rule 106 (graphfig1 -> TRIANGLE laRegla .)


state 142

    (98) laRegla -> OPENPAREN . exp COMMA exp CLOSEPAREN
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    exp                            shift and go to state 194
    term                           shift and go to state 95
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 143

    (107) graphfig1 -> RECTANGLE laRegla .

    SEMICOLON       reduce using rule 107 (graphfig1 -> RECTANGLE laRegla .)


state 144

    (125) graphview1 -> graphview2 exp .

    SEMICOLON       reduce using rule 125 (graphview1 -> graphview2 exp .)


state 145

    (112) graphmove2 -> GO laRegla2 .

    SEMICOLON       reduce using rule 112 (graphmove2 -> GO laRegla2 .)


state 146

    (113) graphmove2 -> LEFT laRegla2 .

    SEMICOLON       reduce using rule 113 (graphmove2 -> LEFT laRegla2 .)


state 147

    (114) graphmove2 -> RIGHT laRegla2 .

    SEMICOLON       reduce using rule 114 (graphmove2 -> RIGHT laRegla2 .)


state 148

    (115) graphmove2 -> BACK laRegla2 .

    SEMICOLON       reduce using rule 115 (graphmove2 -> BACK laRegla2 .)


state 149

    (116) graphmove2 -> ARC laRegla .

    SEMICOLON       reduce using rule 116 (graphmove2 -> ARC laRegla .)


state 150

    (126) graphview2 -> SETXY laRegla .

    CTEINT          reduce using rule 126 (graphview2 -> SETXY laRegla .)
    CTEFLOAT        reduce using rule 126 (graphview2 -> SETXY laRegla .)
    CTECHAR         reduce using rule 126 (graphview2 -> SETXY laRegla .)
    ID              reduce using rule 126 (graphview2 -> SETXY laRegla .)
    ADDITION        reduce using rule 126 (graphview2 -> SETXY laRegla .)
    SUBSTRACTION    reduce using rule 126 (graphview2 -> SETXY laRegla .)
    OPENPAREN       reduce using rule 126 (graphview2 -> SETXY laRegla .)


state 151

    (127) graphview2 -> COLOR_STAR laRegla2 .

    CTEINT          reduce using rule 127 (graphview2 -> COLOR_STAR laRegla2 .)
    CTEFLOAT        reduce using rule 127 (graphview2 -> COLOR_STAR laRegla2 .)
    CTECHAR         reduce using rule 127 (graphview2 -> COLOR_STAR laRegla2 .)
    ID              reduce using rule 127 (graphview2 -> COLOR_STAR laRegla2 .)
    ADDITION        reduce using rule 127 (graphview2 -> COLOR_STAR laRegla2 .)
    SUBSTRACTION    reduce using rule 127 (graphview2 -> COLOR_STAR laRegla2 .)
    OPENPAREN       reduce using rule 127 (graphview2 -> COLOR_STAR laRegla2 .)


state 152

    (128) graphview2 -> SIZE_STAR laRegla2 .

    CTEINT          reduce using rule 128 (graphview2 -> SIZE_STAR laRegla2 .)
    CTEFLOAT        reduce using rule 128 (graphview2 -> SIZE_STAR laRegla2 .)
    CTECHAR         reduce using rule 128 (graphview2 -> SIZE_STAR laRegla2 .)
    ID              reduce using rule 128 (graphview2 -> SIZE_STAR laRegla2 .)
    ADDITION        reduce using rule 128 (graphview2 -> SIZE_STAR laRegla2 .)
    SUBSTRACTION    reduce using rule 128 (graphview2 -> SIZE_STAR laRegla2 .)
    OPENPAREN       reduce using rule 128 (graphview2 -> SIZE_STAR laRegla2 .)


state 153

    (23) function -> FUN functionI function2 inicia_fun declara_vars . function4 termina_fun
    (29) function4 -> . stmt function4
    (30) function4 -> . empty
    (12) stmt -> . assignment
    (13) stmt -> . condition
    (14) stmt -> . print
    (15) stmt -> . loop
    (16) stmt -> . read
    (17) stmt -> . graphstmt
    (18) stmt -> . graphr
    (19) stmt -> . funCall SEMICOLON
    (20) stmt -> . return
    (145) empty -> .
    (49) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (78) condition -> . IF head_cond body condition1
    (42) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (10) loop -> . while
    (11) loop -> . for
    (43) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (100) graphstmt -> . graphfig
    (101) graphstmt -> . graphview
    (102) graphstmt -> . graphmove
    (117) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (68) return -> . RETURN return1 SEMICOLON
    (48) id -> . ID
    (90) while -> . while1 body
    (89) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (103) graphfig -> . graphfig1 SEMICOLON
    (122) graphview -> . graphview1 SEMICOLON
    (108) graphmove -> . graphmove1 SEMICOLON
    (109) graphmove -> . graphmove2 SEMICOLON
    (121) repeat -> . REPEAT
    (91) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (104) graphfig1 -> . CIRCLE laRegla2
    (105) graphfig1 -> . SQUARE laRegla2
    (106) graphfig1 -> . TRIANGLE laRegla
    (107) graphfig1 -> . RECTANGLE laRegla
    (123) graphview1 -> . HIDE_STAR
    (124) graphview1 -> . SHOW_STAR
    (125) graphview1 -> . graphview2 exp
    (110) graphmove1 -> . HAND_DOWN
    (111) graphmove1 -> . HAND_UP
    (112) graphmove2 -> . GO laRegla2
    (113) graphmove2 -> . LEFT laRegla2
    (114) graphmove2 -> . RIGHT laRegla2
    (115) graphmove2 -> . BACK laRegla2
    (116) graphmove2 -> . ARC laRegla
    (92) while_w -> . WHILE
    (126) graphview2 -> . SETXY laRegla
    (127) graphview2 -> . COLOR_STAR laRegla2
    (128) graphview2 -> . SIZE_STAR laRegla2

    CLOSEBRACES     reduce using rule 145 (empty -> .)
    IF              shift and go to state 51
    PRINT           shift and go to state 52
    READ            shift and go to state 55
    ID              shift and go to state 60
    RETURN          shift and go to state 61
    FOR             shift and go to state 63
    REPEAT          shift and go to state 68
    CIRCLE          shift and go to state 70
    SQUARE          shift and go to state 71
    TRIANGLE        shift and go to state 72
    RECTANGLE       shift and go to state 73
    HIDE_STAR       shift and go to state 74
    SHOW_STAR       shift and go to state 75
    HAND_DOWN       shift and go to state 77
    HAND_UP         shift and go to state 78
    GO              shift and go to state 79
    LEFT            shift and go to state 80
    RIGHT           shift and go to state 81
    BACK            shift and go to state 82
    ARC             shift and go to state 83
    WHILE           shift and go to state 84
    SETXY           shift and go to state 85
    COLOR_STAR      shift and go to state 86
    SIZE_STAR       shift and go to state 87

    function4                      shift and go to state 195
    stmt                           shift and go to state 196
    empty                          shift and go to state 197
    assignment                     shift and go to state 41
    condition                      shift and go to state 42
    print                          shift and go to state 43
    loop                           shift and go to state 44
    read                           shift and go to state 45
    graphstmt                      shift and go to state 46
    graphr                         shift and go to state 47
    funCall                        shift and go to state 48
    return                         shift and go to state 49
    id                             shift and go to state 50
    while                          shift and go to state 53
    for                            shift and go to state 54
    graphfig                       shift and go to state 56
    graphview                      shift and go to state 57
    graphmove                      shift and go to state 58
    repeat                         shift and go to state 59
    while1                         shift and go to state 62
    graphfig1                      shift and go to state 64
    graphview1                     shift and go to state 65
    graphmove1                     shift and go to state 66
    graphmove2                     shift and go to state 67
    while_w                        shift and go to state 69
    graphview2                     shift and go to state 76

state 154

    (26) function2 -> OPENPAREN function3 CLOSEPAREN .

    OPENBRACES      reduce using rule 26 (function2 -> OPENPAREN function3 CLOSEPAREN .)


state 155

    (27) function3 -> type ID . function5
    (31) function5 -> . COMMA type ID function5
    (32) function5 -> . empty
    (145) empty -> .

    COMMA           shift and go to state 199
    CLOSEPAREN      reduce using rule 145 (empty -> .)

    function5                      shift and go to state 198
    empty                          shift and go to state 200

state 156

    (33) vars -> type ID vars1 equals exp SEMICOLON .

    INT             reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    FLOAT           reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    CHAR            reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    FUN             reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    MULTIPLICATION  reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    IF              reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    PRINT           reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    READ            reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    ID              reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    RETURN          reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    FOR             reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    REPEAT          reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    CIRCLE          reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    SQUARE          reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    TRIANGLE        reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    RECTANGLE       reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    HIDE_STAR       reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    SHOW_STAR       reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    HAND_DOWN       reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    HAND_UP         reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    GO              reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    LEFT            reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    RIGHT           reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    BACK            reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    ARC             reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    WHILE           reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    SETXY           reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    COLOR_STAR      reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    SIZE_STAR       reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)
    CLOSEBRACES     reduce using rule 33 (vars -> type ID vars1 equals exp SEMICOLON .)


state 157

    (129) exp -> term exp1 .

    SEMICOLON       reduce using rule 129 (exp -> term exp1 .)
    GREATER         reduce using rule 129 (exp -> term exp1 .)
    LESS            reduce using rule 129 (exp -> term exp1 .)
    NOTEQUAL        reduce using rule 129 (exp -> term exp1 .)
    ISEQUAL         reduce using rule 129 (exp -> term exp1 .)
    CLOSEPAREN      reduce using rule 129 (exp -> term exp1 .)
    CLOSEBRACKET    reduce using rule 129 (exp -> term exp1 .)
    COMMA           reduce using rule 129 (exp -> term exp1 .)
    CTEINT          reduce using rule 129 (exp -> term exp1 .)
    CTEFLOAT        reduce using rule 129 (exp -> term exp1 .)
    CTECHAR         reduce using rule 129 (exp -> term exp1 .)
    ID              reduce using rule 129 (exp -> term exp1 .)
    ADDITION        reduce using rule 129 (exp -> term exp1 .)
    SUBSTRACTION    reduce using rule 129 (exp -> term exp1 .)
    OPENPAREN       reduce using rule 129 (exp -> term exp1 .)


state 158

    (130) exp1 -> ADDITION . exp
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    exp                            shift and go to state 201
    term                           shift and go to state 95
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 159

    (131) exp1 -> SUBSTRACTION . exp
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    exp                            shift and go to state 202
    term                           shift and go to state 95
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 160

    (132) exp1 -> empty .

    SEMICOLON       reduce using rule 132 (exp1 -> empty .)
    GREATER         reduce using rule 132 (exp1 -> empty .)
    LESS            reduce using rule 132 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 132 (exp1 -> empty .)
    ISEQUAL         reduce using rule 132 (exp1 -> empty .)
    CLOSEPAREN      reduce using rule 132 (exp1 -> empty .)
    CLOSEBRACKET    reduce using rule 132 (exp1 -> empty .)
    COMMA           reduce using rule 132 (exp1 -> empty .)
    CTEINT          reduce using rule 132 (exp1 -> empty .)
    CTEFLOAT        reduce using rule 132 (exp1 -> empty .)
    CTECHAR         reduce using rule 132 (exp1 -> empty .)
    ID              reduce using rule 132 (exp1 -> empty .)
    ADDITION        reduce using rule 132 (exp1 -> empty .)
    SUBSTRACTION    reduce using rule 132 (exp1 -> empty .)
    OPENPAREN       reduce using rule 132 (exp1 -> empty .)


state 161

    (141) term -> factor term1 .

    ADDITION        reduce using rule 141 (term -> factor term1 .)
    SUBSTRACTION    reduce using rule 141 (term -> factor term1 .)
    SEMICOLON       reduce using rule 141 (term -> factor term1 .)
    GREATER         reduce using rule 141 (term -> factor term1 .)
    LESS            reduce using rule 141 (term -> factor term1 .)
    NOTEQUAL        reduce using rule 141 (term -> factor term1 .)
    ISEQUAL         reduce using rule 141 (term -> factor term1 .)
    CLOSEPAREN      reduce using rule 141 (term -> factor term1 .)
    CLOSEBRACKET    reduce using rule 141 (term -> factor term1 .)
    COMMA           reduce using rule 141 (term -> factor term1 .)
    CTEINT          reduce using rule 141 (term -> factor term1 .)
    CTEFLOAT        reduce using rule 141 (term -> factor term1 .)
    CTECHAR         reduce using rule 141 (term -> factor term1 .)
    ID              reduce using rule 141 (term -> factor term1 .)
    OPENPAREN       reduce using rule 141 (term -> factor term1 .)


state 162

    (142) term1 -> MULTIPLICATION . term
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    term                           shift and go to state 203
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 163

    (143) term1 -> DIVISION . term
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    term                           shift and go to state 204
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 164

    (144) term1 -> empty .

    ADDITION        reduce using rule 144 (term1 -> empty .)
    SUBSTRACTION    reduce using rule 144 (term1 -> empty .)
    SEMICOLON       reduce using rule 144 (term1 -> empty .)
    GREATER         reduce using rule 144 (term1 -> empty .)
    LESS            reduce using rule 144 (term1 -> empty .)
    NOTEQUAL        reduce using rule 144 (term1 -> empty .)
    ISEQUAL         reduce using rule 144 (term1 -> empty .)
    CLOSEPAREN      reduce using rule 144 (term1 -> empty .)
    CLOSEBRACKET    reduce using rule 144 (term1 -> empty .)
    COMMA           reduce using rule 144 (term1 -> empty .)
    CTEINT          reduce using rule 144 (term1 -> empty .)
    CTEFLOAT        reduce using rule 144 (term1 -> empty .)
    CTECHAR         reduce using rule 144 (term1 -> empty .)
    ID              reduce using rule 144 (term1 -> empty .)
    OPENPAREN       reduce using rule 144 (term1 -> empty .)


state 165

    (59) vcte -> id vcte1 .

    MULTIPLICATION  reduce using rule 59 (vcte -> id vcte1 .)
    DIVISION        reduce using rule 59 (vcte -> id vcte1 .)
    ADDITION        reduce using rule 59 (vcte -> id vcte1 .)
    SUBSTRACTION    reduce using rule 59 (vcte -> id vcte1 .)
    SEMICOLON       reduce using rule 59 (vcte -> id vcte1 .)
    GREATER         reduce using rule 59 (vcte -> id vcte1 .)
    LESS            reduce using rule 59 (vcte -> id vcte1 .)
    NOTEQUAL        reduce using rule 59 (vcte -> id vcte1 .)
    ISEQUAL         reduce using rule 59 (vcte -> id vcte1 .)
    CLOSEPAREN      reduce using rule 59 (vcte -> id vcte1 .)
    CLOSEBRACKET    reduce using rule 59 (vcte -> id vcte1 .)
    COMMA           reduce using rule 59 (vcte -> id vcte1 .)
    CTEINT          reduce using rule 59 (vcte -> id vcte1 .)
    CTEFLOAT        reduce using rule 59 (vcte -> id vcte1 .)
    CTECHAR         reduce using rule 59 (vcte -> id vcte1 .)
    ID              reduce using rule 59 (vcte -> id vcte1 .)
    OPENPAREN       reduce using rule 59 (vcte -> id vcte1 .)


state 166

    (61) vcte1 -> OPENBRACKET . exp CLOSEBRACKET vcte3
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    exp                            shift and go to state 205
    term                           shift and go to state 95
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 167

    (62) vcte1 -> empty .

    MULTIPLICATION  reduce using rule 62 (vcte1 -> empty .)
    DIVISION        reduce using rule 62 (vcte1 -> empty .)
    ADDITION        reduce using rule 62 (vcte1 -> empty .)
    SUBSTRACTION    reduce using rule 62 (vcte1 -> empty .)
    SEMICOLON       reduce using rule 62 (vcte1 -> empty .)
    GREATER         reduce using rule 62 (vcte1 -> empty .)
    LESS            reduce using rule 62 (vcte1 -> empty .)
    NOTEQUAL        reduce using rule 62 (vcte1 -> empty .)
    ISEQUAL         reduce using rule 62 (vcte1 -> empty .)
    CLOSEPAREN      reduce using rule 62 (vcte1 -> empty .)
    CLOSEBRACKET    reduce using rule 62 (vcte1 -> empty .)
    COMMA           reduce using rule 62 (vcte1 -> empty .)
    CTEINT          reduce using rule 62 (vcte1 -> empty .)
    CTEFLOAT        reduce using rule 62 (vcte1 -> empty .)
    CTECHAR         reduce using rule 62 (vcte1 -> empty .)
    ID              reduce using rule 62 (vcte1 -> empty .)
    OPENPAREN       reduce using rule 62 (vcte1 -> empty .)


state 168

    (137) factor1 -> factor2 vcte .

    MULTIPLICATION  reduce using rule 137 (factor1 -> factor2 vcte .)
    DIVISION        reduce using rule 137 (factor1 -> factor2 vcte .)
    ADDITION        reduce using rule 137 (factor1 -> factor2 vcte .)
    SUBSTRACTION    reduce using rule 137 (factor1 -> factor2 vcte .)
    SEMICOLON       reduce using rule 137 (factor1 -> factor2 vcte .)
    GREATER         reduce using rule 137 (factor1 -> factor2 vcte .)
    LESS            reduce using rule 137 (factor1 -> factor2 vcte .)
    NOTEQUAL        reduce using rule 137 (factor1 -> factor2 vcte .)
    ISEQUAL         reduce using rule 137 (factor1 -> factor2 vcte .)
    CLOSEPAREN      reduce using rule 137 (factor1 -> factor2 vcte .)
    CLOSEBRACKET    reduce using rule 137 (factor1 -> factor2 vcte .)
    COMMA           reduce using rule 137 (factor1 -> factor2 vcte .)
    CTEINT          reduce using rule 137 (factor1 -> factor2 vcte .)
    CTEFLOAT        reduce using rule 137 (factor1 -> factor2 vcte .)
    CTECHAR         reduce using rule 137 (factor1 -> factor2 vcte .)
    ID              reduce using rule 137 (factor1 -> factor2 vcte .)
    OPENPAREN       reduce using rule 137 (factor1 -> factor2 vcte .)


state 169

    (138) factor1 -> openP expression . closeP
    (134) closeP -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 207

    closeP                         shift and go to state 206

state 170

    (71) expression -> exp . expression1
    (72) expression1 -> . loper exp
    (73) expression1 -> . empty
    (74) loper -> . GREATER
    (75) loper -> . LESS
    (76) loper -> . NOTEQUAL
    (77) loper -> . ISEQUAL
    (145) empty -> .

    GREATER         shift and go to state 211
    LESS            shift and go to state 212
    NOTEQUAL        shift and go to state 213
    ISEQUAL         shift and go to state 214
    CLOSEPAREN      reduce using rule 145 (empty -> .)

    expression1                    shift and go to state 208
    loper                          shift and go to state 209
    empty                          shift and go to state 210

state 171

    (37) vars3 -> OPENBRACKET . CTEINT CLOSEBRACKET

    CTEINT          shift and go to state 215


state 172

    (35) vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .

    SEMICOLON       reduce using rule 35 (vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .)
    EQUALS          reduce using rule 35 (vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .)


state 173

    (38) vars3 -> empty .

    SEMICOLON       reduce using rule 38 (vars3 -> empty .)
    EQUALS          reduce using rule 38 (vars3 -> empty .)


state 174

    (49) assignment -> id assignment1 equals . assignment3 SEMICOLON
    (54) assignment3 -> . exp
    (55) assignment3 -> . read
    (129) exp -> . term exp1
    (43) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    READ            shift and go to state 55
    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    id                             shift and go to state 102
    assignment3                    shift and go to state 216
    exp                            shift and go to state 217
    read                           shift and go to state 218
    term                           shift and go to state 95
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 175

    (51) assignment1 -> assignment2 assignment1 .

    EQUALS          reduce using rule 51 (assignment1 -> assignment2 assignment1 .)


state 176

    (53) assignment2 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 219


state 177

    (78) condition -> IF head_cond body . condition1
    (79) condition1 -> . elseif head_cond body condition1
    (80) condition1 -> . else body
    (81) condition1 -> . empty
    (82) elseif -> . ELSEIF
    (83) else -> . ELSE
    (145) empty -> .

    ELSEIF          shift and go to state 224
    ELSE            shift and go to state 225
    IF              reduce using rule 145 (empty -> .)
    PRINT           reduce using rule 145 (empty -> .)
    READ            reduce using rule 145 (empty -> .)
    ID              reduce using rule 145 (empty -> .)
    RETURN          reduce using rule 145 (empty -> .)
    FOR             reduce using rule 145 (empty -> .)
    REPEAT          reduce using rule 145 (empty -> .)
    CIRCLE          reduce using rule 145 (empty -> .)
    SQUARE          reduce using rule 145 (empty -> .)
    TRIANGLE        reduce using rule 145 (empty -> .)
    RECTANGLE       reduce using rule 145 (empty -> .)
    HIDE_STAR       reduce using rule 145 (empty -> .)
    SHOW_STAR       reduce using rule 145 (empty -> .)
    HAND_DOWN       reduce using rule 145 (empty -> .)
    HAND_UP         reduce using rule 145 (empty -> .)
    GO              reduce using rule 145 (empty -> .)
    LEFT            reduce using rule 145 (empty -> .)
    RIGHT           reduce using rule 145 (empty -> .)
    BACK            reduce using rule 145 (empty -> .)
    ARC             reduce using rule 145 (empty -> .)
    WHILE           reduce using rule 145 (empty -> .)
    SETXY           reduce using rule 145 (empty -> .)
    COLOR_STAR      reduce using rule 145 (empty -> .)
    SIZE_STAR       reduce using rule 145 (empty -> .)
    CLOSEBRACES     reduce using rule 145 (empty -> .)

    condition1                     shift and go to state 220
    elseif                         shift and go to state 221
    else                           shift and go to state 222
    empty                          shift and go to state 223

state 178

    (84) head_cond -> OPENPAREN expression . close_condition
    (86) close_condition -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 227

    close_condition                shift and go to state 226

state 179

    (42) print -> PRINT OPENPAREN expression . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 228


state 180

    (43) read -> READ OPENPAREN id . read1 CLOSEPAREN SEMICOLON
    (44) read1 -> . OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (45) read1 -> . OPENBRACKET exp CLOSEBRACKET
    (46) read1 -> . empty
    (145) empty -> .

    OPENBRACKET     shift and go to state 230
    CLOSEPAREN      reduce using rule 145 (empty -> .)

    read1                          shift and go to state 229
    empty                          shift and go to state 231

state 181

    (48) id -> ID .

    OPENBRACKET     reduce using rule 48 (id -> ID .)
    CLOSEPAREN      reduce using rule 48 (id -> ID .)


state 182

    (117) graphr -> repeat rep OPENBRACES . graphstmt graphr1 CLOSEBRACES
    (100) graphstmt -> . graphfig
    (101) graphstmt -> . graphview
    (102) graphstmt -> . graphmove
    (103) graphfig -> . graphfig1 SEMICOLON
    (122) graphview -> . graphview1 SEMICOLON
    (108) graphmove -> . graphmove1 SEMICOLON
    (109) graphmove -> . graphmove2 SEMICOLON
    (104) graphfig1 -> . CIRCLE laRegla2
    (105) graphfig1 -> . SQUARE laRegla2
    (106) graphfig1 -> . TRIANGLE laRegla
    (107) graphfig1 -> . RECTANGLE laRegla
    (123) graphview1 -> . HIDE_STAR
    (124) graphview1 -> . SHOW_STAR
    (125) graphview1 -> . graphview2 exp
    (110) graphmove1 -> . HAND_DOWN
    (111) graphmove1 -> . HAND_UP
    (112) graphmove2 -> . GO laRegla2
    (113) graphmove2 -> . LEFT laRegla2
    (114) graphmove2 -> . RIGHT laRegla2
    (115) graphmove2 -> . BACK laRegla2
    (116) graphmove2 -> . ARC laRegla
    (126) graphview2 -> . SETXY laRegla
    (127) graphview2 -> . COLOR_STAR laRegla2
    (128) graphview2 -> . SIZE_STAR laRegla2

    CIRCLE          shift and go to state 70
    SQUARE          shift and go to state 71
    TRIANGLE        shift and go to state 72
    RECTANGLE       shift and go to state 73
    HIDE_STAR       shift and go to state 74
    SHOW_STAR       shift and go to state 75
    HAND_DOWN       shift and go to state 77
    HAND_UP         shift and go to state 78
    GO              shift and go to state 79
    LEFT            shift and go to state 80
    RIGHT           shift and go to state 81
    BACK            shift and go to state 82
    ARC             shift and go to state 83
    SETXY           shift and go to state 85
    COLOR_STAR      shift and go to state 86
    SIZE_STAR       shift and go to state 87

    graphstmt                      shift and go to state 232
    graphfig                       shift and go to state 56
    graphview                      shift and go to state 57
    graphmove                      shift and go to state 58
    graphfig1                      shift and go to state 64
    graphview1                     shift and go to state 65
    graphmove1                     shift and go to state 66
    graphmove2                     shift and go to state 67
    graphview2                     shift and go to state 76

state 183

    (120) rep -> OPENPAREN exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 233


state 184

    (93) funCall -> ID OPENPAREN funCall2 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 234


state 185

    (94) funCall2 -> exp . funCall3
    (96) funCall3 -> . COMMA exp funCall2
    (97) funCall3 -> . empty
    (145) empty -> .

    COMMA           shift and go to state 236
    CLOSEPAREN      reduce using rule 145 (empty -> .)

    funCall3                       shift and go to state 235
    empty                          shift and go to state 237

state 186

    (95) funCall2 -> empty .

    CLOSEPAREN      reduce using rule 95 (funCall2 -> empty .)


state 187

    (68) return -> RETURN return1 SEMICOLON .

    IF              reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    PRINT           reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    READ            reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    ID              reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    RETURN          reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    FOR             reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    REPEAT          reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    CIRCLE          reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    SQUARE          reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    TRIANGLE        reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    RECTANGLE       reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    HIDE_STAR       reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    SHOW_STAR       reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    HAND_DOWN       reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    HAND_UP         reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    GO              reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    LEFT            reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    RIGHT           reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    BACK            reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    ARC             reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    WHILE           reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    SETXY           reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    COLOR_STAR      reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    SIZE_STAR       reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 68 (return -> RETURN return1 SEMICOLON .)


state 188

    (85) body -> OPENBRACES body1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 238


state 189

    (87) body1 -> stmt . body1
    (87) body1 -> . stmt body1
    (88) body1 -> . empty
    (12) stmt -> . assignment
    (13) stmt -> . condition
    (14) stmt -> . print
    (15) stmt -> . loop
    (16) stmt -> . read
    (17) stmt -> . graphstmt
    (18) stmt -> . graphr
    (19) stmt -> . funCall SEMICOLON
    (20) stmt -> . return
    (145) empty -> .
    (49) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (78) condition -> . IF head_cond body condition1
    (42) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (10) loop -> . while
    (11) loop -> . for
    (43) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (100) graphstmt -> . graphfig
    (101) graphstmt -> . graphview
    (102) graphstmt -> . graphmove
    (117) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (68) return -> . RETURN return1 SEMICOLON
    (48) id -> . ID
    (90) while -> . while1 body
    (89) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (103) graphfig -> . graphfig1 SEMICOLON
    (122) graphview -> . graphview1 SEMICOLON
    (108) graphmove -> . graphmove1 SEMICOLON
    (109) graphmove -> . graphmove2 SEMICOLON
    (121) repeat -> . REPEAT
    (91) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (104) graphfig1 -> . CIRCLE laRegla2
    (105) graphfig1 -> . SQUARE laRegla2
    (106) graphfig1 -> . TRIANGLE laRegla
    (107) graphfig1 -> . RECTANGLE laRegla
    (123) graphview1 -> . HIDE_STAR
    (124) graphview1 -> . SHOW_STAR
    (125) graphview1 -> . graphview2 exp
    (110) graphmove1 -> . HAND_DOWN
    (111) graphmove1 -> . HAND_UP
    (112) graphmove2 -> . GO laRegla2
    (113) graphmove2 -> . LEFT laRegla2
    (114) graphmove2 -> . RIGHT laRegla2
    (115) graphmove2 -> . BACK laRegla2
    (116) graphmove2 -> . ARC laRegla
    (92) while_w -> . WHILE
    (126) graphview2 -> . SETXY laRegla
    (127) graphview2 -> . COLOR_STAR laRegla2
    (128) graphview2 -> . SIZE_STAR laRegla2

    CLOSEBRACES     reduce using rule 145 (empty -> .)
    IF              shift and go to state 51
    PRINT           shift and go to state 52
    READ            shift and go to state 55
    ID              shift and go to state 60
    RETURN          shift and go to state 61
    FOR             shift and go to state 63
    REPEAT          shift and go to state 68
    CIRCLE          shift and go to state 70
    SQUARE          shift and go to state 71
    TRIANGLE        shift and go to state 72
    RECTANGLE       shift and go to state 73
    HIDE_STAR       shift and go to state 74
    SHOW_STAR       shift and go to state 75
    HAND_DOWN       shift and go to state 77
    HAND_UP         shift and go to state 78
    GO              shift and go to state 79
    LEFT            shift and go to state 80
    RIGHT           shift and go to state 81
    BACK            shift and go to state 82
    ARC             shift and go to state 83
    WHILE           shift and go to state 84
    SETXY           shift and go to state 85
    COLOR_STAR      shift and go to state 86
    SIZE_STAR       shift and go to state 87

    stmt                           shift and go to state 189
    body1                          shift and go to state 239
    empty                          shift and go to state 190
    assignment                     shift and go to state 41
    condition                      shift and go to state 42
    print                          shift and go to state 43
    loop                           shift and go to state 44
    read                           shift and go to state 45
    graphstmt                      shift and go to state 46
    graphr                         shift and go to state 47
    funCall                        shift and go to state 48
    return                         shift and go to state 49
    id                             shift and go to state 50
    while                          shift and go to state 53
    for                            shift and go to state 54
    graphfig                       shift and go to state 56
    graphview                      shift and go to state 57
    graphmove                      shift and go to state 58
    repeat                         shift and go to state 59
    while1                         shift and go to state 62
    graphfig1                      shift and go to state 64
    graphview1                     shift and go to state 65
    graphmove1                     shift and go to state 66
    graphmove2                     shift and go to state 67
    while_w                        shift and go to state 69
    graphview2                     shift and go to state 76

state 190

    (88) body1 -> empty .

    CLOSEBRACES     reduce using rule 88 (body1 -> empty .)


state 191

    (89) for -> FOR OPENPAREN ID . TWODOTS exp CLOSEPAREN body

    TWODOTS         shift and go to state 240


state 192

    (91) while1 -> while_w OPENPAREN expression . CLOSEPAREN

    CLOSEPAREN      shift and go to state 241


state 193

    (99) laRegla2 -> OPENPAREN exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 242


state 194

    (98) laRegla -> OPENPAREN exp . COMMA exp CLOSEPAREN

    COMMA           shift and go to state 243


state 195

    (23) function -> FUN functionI function2 inicia_fun declara_vars function4 . termina_fun
    (25) termina_fun -> . CLOSEBRACES

    CLOSEBRACES     shift and go to state 245

    termina_fun                    shift and go to state 244

state 196

    (29) function4 -> stmt . function4
    (29) function4 -> . stmt function4
    (30) function4 -> . empty
    (12) stmt -> . assignment
    (13) stmt -> . condition
    (14) stmt -> . print
    (15) stmt -> . loop
    (16) stmt -> . read
    (17) stmt -> . graphstmt
    (18) stmt -> . graphr
    (19) stmt -> . funCall SEMICOLON
    (20) stmt -> . return
    (145) empty -> .
    (49) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (78) condition -> . IF head_cond body condition1
    (42) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (10) loop -> . while
    (11) loop -> . for
    (43) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (100) graphstmt -> . graphfig
    (101) graphstmt -> . graphview
    (102) graphstmt -> . graphmove
    (117) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (68) return -> . RETURN return1 SEMICOLON
    (48) id -> . ID
    (90) while -> . while1 body
    (89) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (103) graphfig -> . graphfig1 SEMICOLON
    (122) graphview -> . graphview1 SEMICOLON
    (108) graphmove -> . graphmove1 SEMICOLON
    (109) graphmove -> . graphmove2 SEMICOLON
    (121) repeat -> . REPEAT
    (91) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (104) graphfig1 -> . CIRCLE laRegla2
    (105) graphfig1 -> . SQUARE laRegla2
    (106) graphfig1 -> . TRIANGLE laRegla
    (107) graphfig1 -> . RECTANGLE laRegla
    (123) graphview1 -> . HIDE_STAR
    (124) graphview1 -> . SHOW_STAR
    (125) graphview1 -> . graphview2 exp
    (110) graphmove1 -> . HAND_DOWN
    (111) graphmove1 -> . HAND_UP
    (112) graphmove2 -> . GO laRegla2
    (113) graphmove2 -> . LEFT laRegla2
    (114) graphmove2 -> . RIGHT laRegla2
    (115) graphmove2 -> . BACK laRegla2
    (116) graphmove2 -> . ARC laRegla
    (92) while_w -> . WHILE
    (126) graphview2 -> . SETXY laRegla
    (127) graphview2 -> . COLOR_STAR laRegla2
    (128) graphview2 -> . SIZE_STAR laRegla2

    CLOSEBRACES     reduce using rule 145 (empty -> .)
    IF              shift and go to state 51
    PRINT           shift and go to state 52
    READ            shift and go to state 55
    ID              shift and go to state 60
    RETURN          shift and go to state 61
    FOR             shift and go to state 63
    REPEAT          shift and go to state 68
    CIRCLE          shift and go to state 70
    SQUARE          shift and go to state 71
    TRIANGLE        shift and go to state 72
    RECTANGLE       shift and go to state 73
    HIDE_STAR       shift and go to state 74
    SHOW_STAR       shift and go to state 75
    HAND_DOWN       shift and go to state 77
    HAND_UP         shift and go to state 78
    GO              shift and go to state 79
    LEFT            shift and go to state 80
    RIGHT           shift and go to state 81
    BACK            shift and go to state 82
    ARC             shift and go to state 83
    WHILE           shift and go to state 84
    SETXY           shift and go to state 85
    COLOR_STAR      shift and go to state 86
    SIZE_STAR       shift and go to state 87

    stmt                           shift and go to state 196
    function4                      shift and go to state 246
    empty                          shift and go to state 197
    assignment                     shift and go to state 41
    condition                      shift and go to state 42
    print                          shift and go to state 43
    loop                           shift and go to state 44
    read                           shift and go to state 45
    graphstmt                      shift and go to state 46
    graphr                         shift and go to state 47
    funCall                        shift and go to state 48
    return                         shift and go to state 49
    id                             shift and go to state 50
    while                          shift and go to state 53
    for                            shift and go to state 54
    graphfig                       shift and go to state 56
    graphview                      shift and go to state 57
    graphmove                      shift and go to state 58
    repeat                         shift and go to state 59
    while1                         shift and go to state 62
    graphfig1                      shift and go to state 64
    graphview1                     shift and go to state 65
    graphmove1                     shift and go to state 66
    graphmove2                     shift and go to state 67
    while_w                        shift and go to state 69
    graphview2                     shift and go to state 76

state 197

    (30) function4 -> empty .

    CLOSEBRACES     reduce using rule 30 (function4 -> empty .)


state 198

    (27) function3 -> type ID function5 .

    CLOSEPAREN      reduce using rule 27 (function3 -> type ID function5 .)


state 199

    (31) function5 -> COMMA . type ID function5
    (39) type -> . INT
    (40) type -> . FLOAT
    (41) type -> . CHAR

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    type                           shift and go to state 247

state 200

    (32) function5 -> empty .

    CLOSEPAREN      reduce using rule 32 (function5 -> empty .)


state 201

    (130) exp1 -> ADDITION exp .

    SEMICOLON       reduce using rule 130 (exp1 -> ADDITION exp .)
    GREATER         reduce using rule 130 (exp1 -> ADDITION exp .)
    LESS            reduce using rule 130 (exp1 -> ADDITION exp .)
    NOTEQUAL        reduce using rule 130 (exp1 -> ADDITION exp .)
    ISEQUAL         reduce using rule 130 (exp1 -> ADDITION exp .)
    CLOSEPAREN      reduce using rule 130 (exp1 -> ADDITION exp .)
    CLOSEBRACKET    reduce using rule 130 (exp1 -> ADDITION exp .)
    COMMA           reduce using rule 130 (exp1 -> ADDITION exp .)
    CTEINT          reduce using rule 130 (exp1 -> ADDITION exp .)
    CTEFLOAT        reduce using rule 130 (exp1 -> ADDITION exp .)
    CTECHAR         reduce using rule 130 (exp1 -> ADDITION exp .)
    ID              reduce using rule 130 (exp1 -> ADDITION exp .)
    ADDITION        reduce using rule 130 (exp1 -> ADDITION exp .)
    SUBSTRACTION    reduce using rule 130 (exp1 -> ADDITION exp .)
    OPENPAREN       reduce using rule 130 (exp1 -> ADDITION exp .)


state 202

    (131) exp1 -> SUBSTRACTION exp .

    SEMICOLON       reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    GREATER         reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    LESS            reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    NOTEQUAL        reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    ISEQUAL         reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    CLOSEPAREN      reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    CLOSEBRACKET    reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    COMMA           reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    CTEINT          reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    CTEFLOAT        reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    CTECHAR         reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    ID              reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    ADDITION        reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    SUBSTRACTION    reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    OPENPAREN       reduce using rule 131 (exp1 -> SUBSTRACTION exp .)


state 203

    (142) term1 -> MULTIPLICATION term .

    ADDITION        reduce using rule 142 (term1 -> MULTIPLICATION term .)
    SUBSTRACTION    reduce using rule 142 (term1 -> MULTIPLICATION term .)
    SEMICOLON       reduce using rule 142 (term1 -> MULTIPLICATION term .)
    GREATER         reduce using rule 142 (term1 -> MULTIPLICATION term .)
    LESS            reduce using rule 142 (term1 -> MULTIPLICATION term .)
    NOTEQUAL        reduce using rule 142 (term1 -> MULTIPLICATION term .)
    ISEQUAL         reduce using rule 142 (term1 -> MULTIPLICATION term .)
    CLOSEPAREN      reduce using rule 142 (term1 -> MULTIPLICATION term .)
    CLOSEBRACKET    reduce using rule 142 (term1 -> MULTIPLICATION term .)
    COMMA           reduce using rule 142 (term1 -> MULTIPLICATION term .)
    CTEINT          reduce using rule 142 (term1 -> MULTIPLICATION term .)
    CTEFLOAT        reduce using rule 142 (term1 -> MULTIPLICATION term .)
    CTECHAR         reduce using rule 142 (term1 -> MULTIPLICATION term .)
    ID              reduce using rule 142 (term1 -> MULTIPLICATION term .)
    OPENPAREN       reduce using rule 142 (term1 -> MULTIPLICATION term .)


state 204

    (143) term1 -> DIVISION term .

    ADDITION        reduce using rule 143 (term1 -> DIVISION term .)
    SUBSTRACTION    reduce using rule 143 (term1 -> DIVISION term .)
    SEMICOLON       reduce using rule 143 (term1 -> DIVISION term .)
    GREATER         reduce using rule 143 (term1 -> DIVISION term .)
    LESS            reduce using rule 143 (term1 -> DIVISION term .)
    NOTEQUAL        reduce using rule 143 (term1 -> DIVISION term .)
    ISEQUAL         reduce using rule 143 (term1 -> DIVISION term .)
    CLOSEPAREN      reduce using rule 143 (term1 -> DIVISION term .)
    CLOSEBRACKET    reduce using rule 143 (term1 -> DIVISION term .)
    COMMA           reduce using rule 143 (term1 -> DIVISION term .)
    CTEINT          reduce using rule 143 (term1 -> DIVISION term .)
    CTEFLOAT        reduce using rule 143 (term1 -> DIVISION term .)
    CTECHAR         reduce using rule 143 (term1 -> DIVISION term .)
    ID              reduce using rule 143 (term1 -> DIVISION term .)
    OPENPAREN       reduce using rule 143 (term1 -> DIVISION term .)


state 205

    (61) vcte1 -> OPENBRACKET exp . CLOSEBRACKET vcte3

    CLOSEBRACKET    shift and go to state 248


state 206

    (138) factor1 -> openP expression closeP .

    MULTIPLICATION  reduce using rule 138 (factor1 -> openP expression closeP .)
    DIVISION        reduce using rule 138 (factor1 -> openP expression closeP .)
    ADDITION        reduce using rule 138 (factor1 -> openP expression closeP .)
    SUBSTRACTION    reduce using rule 138 (factor1 -> openP expression closeP .)
    SEMICOLON       reduce using rule 138 (factor1 -> openP expression closeP .)
    GREATER         reduce using rule 138 (factor1 -> openP expression closeP .)
    LESS            reduce using rule 138 (factor1 -> openP expression closeP .)
    NOTEQUAL        reduce using rule 138 (factor1 -> openP expression closeP .)
    ISEQUAL         reduce using rule 138 (factor1 -> openP expression closeP .)
    CLOSEPAREN      reduce using rule 138 (factor1 -> openP expression closeP .)
    CLOSEBRACKET    reduce using rule 138 (factor1 -> openP expression closeP .)
    COMMA           reduce using rule 138 (factor1 -> openP expression closeP .)
    CTEINT          reduce using rule 138 (factor1 -> openP expression closeP .)
    CTEFLOAT        reduce using rule 138 (factor1 -> openP expression closeP .)
    CTECHAR         reduce using rule 138 (factor1 -> openP expression closeP .)
    ID              reduce using rule 138 (factor1 -> openP expression closeP .)
    OPENPAREN       reduce using rule 138 (factor1 -> openP expression closeP .)


state 207

    (134) closeP -> CLOSEPAREN .

    MULTIPLICATION  reduce using rule 134 (closeP -> CLOSEPAREN .)
    DIVISION        reduce using rule 134 (closeP -> CLOSEPAREN .)
    ADDITION        reduce using rule 134 (closeP -> CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 134 (closeP -> CLOSEPAREN .)
    SEMICOLON       reduce using rule 134 (closeP -> CLOSEPAREN .)
    GREATER         reduce using rule 134 (closeP -> CLOSEPAREN .)
    LESS            reduce using rule 134 (closeP -> CLOSEPAREN .)
    NOTEQUAL        reduce using rule 134 (closeP -> CLOSEPAREN .)
    ISEQUAL         reduce using rule 134 (closeP -> CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 134 (closeP -> CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 134 (closeP -> CLOSEPAREN .)
    COMMA           reduce using rule 134 (closeP -> CLOSEPAREN .)
    CTEINT          reduce using rule 134 (closeP -> CLOSEPAREN .)
    CTEFLOAT        reduce using rule 134 (closeP -> CLOSEPAREN .)
    CTECHAR         reduce using rule 134 (closeP -> CLOSEPAREN .)
    ID              reduce using rule 134 (closeP -> CLOSEPAREN .)
    OPENPAREN       reduce using rule 134 (closeP -> CLOSEPAREN .)


state 208

    (71) expression -> exp expression1 .

    CLOSEPAREN      reduce using rule 71 (expression -> exp expression1 .)


state 209

    (72) expression1 -> loper . exp
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    exp                            shift and go to state 249
    term                           shift and go to state 95
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 210

    (73) expression1 -> empty .

    CLOSEPAREN      reduce using rule 73 (expression1 -> empty .)


state 211

    (74) loper -> GREATER .

    CTEINT          reduce using rule 74 (loper -> GREATER .)
    CTEFLOAT        reduce using rule 74 (loper -> GREATER .)
    CTECHAR         reduce using rule 74 (loper -> GREATER .)
    ID              reduce using rule 74 (loper -> GREATER .)
    ADDITION        reduce using rule 74 (loper -> GREATER .)
    SUBSTRACTION    reduce using rule 74 (loper -> GREATER .)
    OPENPAREN       reduce using rule 74 (loper -> GREATER .)


state 212

    (75) loper -> LESS .

    CTEINT          reduce using rule 75 (loper -> LESS .)
    CTEFLOAT        reduce using rule 75 (loper -> LESS .)
    CTECHAR         reduce using rule 75 (loper -> LESS .)
    ID              reduce using rule 75 (loper -> LESS .)
    ADDITION        reduce using rule 75 (loper -> LESS .)
    SUBSTRACTION    reduce using rule 75 (loper -> LESS .)
    OPENPAREN       reduce using rule 75 (loper -> LESS .)


state 213

    (76) loper -> NOTEQUAL .

    CTEINT          reduce using rule 76 (loper -> NOTEQUAL .)
    CTEFLOAT        reduce using rule 76 (loper -> NOTEQUAL .)
    CTECHAR         reduce using rule 76 (loper -> NOTEQUAL .)
    ID              reduce using rule 76 (loper -> NOTEQUAL .)
    ADDITION        reduce using rule 76 (loper -> NOTEQUAL .)
    SUBSTRACTION    reduce using rule 76 (loper -> NOTEQUAL .)
    OPENPAREN       reduce using rule 76 (loper -> NOTEQUAL .)


state 214

    (77) loper -> ISEQUAL .

    CTEINT          reduce using rule 77 (loper -> ISEQUAL .)
    CTEFLOAT        reduce using rule 77 (loper -> ISEQUAL .)
    CTECHAR         reduce using rule 77 (loper -> ISEQUAL .)
    ID              reduce using rule 77 (loper -> ISEQUAL .)
    ADDITION        reduce using rule 77 (loper -> ISEQUAL .)
    SUBSTRACTION    reduce using rule 77 (loper -> ISEQUAL .)
    OPENPAREN       reduce using rule 77 (loper -> ISEQUAL .)


state 215

    (37) vars3 -> OPENBRACKET CTEINT . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 250


state 216

    (49) assignment -> id assignment1 equals assignment3 . SEMICOLON

    SEMICOLON       shift and go to state 251


state 217

    (54) assignment3 -> exp .

    SEMICOLON       reduce using rule 54 (assignment3 -> exp .)


state 218

    (55) assignment3 -> read .

    SEMICOLON       reduce using rule 55 (assignment3 -> read .)


state 219

    (53) assignment2 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     reduce using rule 53 (assignment2 -> OPENBRACKET exp CLOSEBRACKET .)
    EQUALS          reduce using rule 53 (assignment2 -> OPENBRACKET exp CLOSEBRACKET .)


state 220

    (78) condition -> IF head_cond body condition1 .

    IF              reduce using rule 78 (condition -> IF head_cond body condition1 .)
    PRINT           reduce using rule 78 (condition -> IF head_cond body condition1 .)
    READ            reduce using rule 78 (condition -> IF head_cond body condition1 .)
    ID              reduce using rule 78 (condition -> IF head_cond body condition1 .)
    RETURN          reduce using rule 78 (condition -> IF head_cond body condition1 .)
    FOR             reduce using rule 78 (condition -> IF head_cond body condition1 .)
    REPEAT          reduce using rule 78 (condition -> IF head_cond body condition1 .)
    CIRCLE          reduce using rule 78 (condition -> IF head_cond body condition1 .)
    SQUARE          reduce using rule 78 (condition -> IF head_cond body condition1 .)
    TRIANGLE        reduce using rule 78 (condition -> IF head_cond body condition1 .)
    RECTANGLE       reduce using rule 78 (condition -> IF head_cond body condition1 .)
    HIDE_STAR       reduce using rule 78 (condition -> IF head_cond body condition1 .)
    SHOW_STAR       reduce using rule 78 (condition -> IF head_cond body condition1 .)
    HAND_DOWN       reduce using rule 78 (condition -> IF head_cond body condition1 .)
    HAND_UP         reduce using rule 78 (condition -> IF head_cond body condition1 .)
    GO              reduce using rule 78 (condition -> IF head_cond body condition1 .)
    LEFT            reduce using rule 78 (condition -> IF head_cond body condition1 .)
    RIGHT           reduce using rule 78 (condition -> IF head_cond body condition1 .)
    BACK            reduce using rule 78 (condition -> IF head_cond body condition1 .)
    ARC             reduce using rule 78 (condition -> IF head_cond body condition1 .)
    WHILE           reduce using rule 78 (condition -> IF head_cond body condition1 .)
    SETXY           reduce using rule 78 (condition -> IF head_cond body condition1 .)
    COLOR_STAR      reduce using rule 78 (condition -> IF head_cond body condition1 .)
    SIZE_STAR       reduce using rule 78 (condition -> IF head_cond body condition1 .)
    CLOSEBRACES     reduce using rule 78 (condition -> IF head_cond body condition1 .)


state 221

    (79) condition1 -> elseif . head_cond body condition1
    (84) head_cond -> . OPENPAREN expression close_condition

    OPENPAREN       shift and go to state 121

    head_cond                      shift and go to state 252

state 222

    (80) condition1 -> else . body
    (85) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 131

    body                           shift and go to state 253

state 223

    (81) condition1 -> empty .

    IF              reduce using rule 81 (condition1 -> empty .)
    PRINT           reduce using rule 81 (condition1 -> empty .)
    READ            reduce using rule 81 (condition1 -> empty .)
    ID              reduce using rule 81 (condition1 -> empty .)
    RETURN          reduce using rule 81 (condition1 -> empty .)
    FOR             reduce using rule 81 (condition1 -> empty .)
    REPEAT          reduce using rule 81 (condition1 -> empty .)
    CIRCLE          reduce using rule 81 (condition1 -> empty .)
    SQUARE          reduce using rule 81 (condition1 -> empty .)
    TRIANGLE        reduce using rule 81 (condition1 -> empty .)
    RECTANGLE       reduce using rule 81 (condition1 -> empty .)
    HIDE_STAR       reduce using rule 81 (condition1 -> empty .)
    SHOW_STAR       reduce using rule 81 (condition1 -> empty .)
    HAND_DOWN       reduce using rule 81 (condition1 -> empty .)
    HAND_UP         reduce using rule 81 (condition1 -> empty .)
    GO              reduce using rule 81 (condition1 -> empty .)
    LEFT            reduce using rule 81 (condition1 -> empty .)
    RIGHT           reduce using rule 81 (condition1 -> empty .)
    BACK            reduce using rule 81 (condition1 -> empty .)
    ARC             reduce using rule 81 (condition1 -> empty .)
    WHILE           reduce using rule 81 (condition1 -> empty .)
    SETXY           reduce using rule 81 (condition1 -> empty .)
    COLOR_STAR      reduce using rule 81 (condition1 -> empty .)
    SIZE_STAR       reduce using rule 81 (condition1 -> empty .)
    CLOSEBRACES     reduce using rule 81 (condition1 -> empty .)


state 224

    (82) elseif -> ELSEIF .

    OPENPAREN       reduce using rule 82 (elseif -> ELSEIF .)


state 225

    (83) else -> ELSE .

    OPENBRACES      reduce using rule 83 (else -> ELSE .)


state 226

    (84) head_cond -> OPENPAREN expression close_condition .

    OPENBRACES      reduce using rule 84 (head_cond -> OPENPAREN expression close_condition .)


state 227

    (86) close_condition -> CLOSEPAREN .

    OPENBRACES      reduce using rule 86 (close_condition -> CLOSEPAREN .)


state 228

    (42) print -> PRINT OPENPAREN expression CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 254


state 229

    (43) read -> READ OPENPAREN id read1 . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 255


state 230

    (44) read1 -> OPENBRACKET . exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (45) read1 -> OPENBRACKET . exp CLOSEBRACKET
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    exp                            shift and go to state 256
    term                           shift and go to state 95
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 231

    (46) read1 -> empty .

    CLOSEPAREN      reduce using rule 46 (read1 -> empty .)


state 232

    (117) graphr -> repeat rep OPENBRACES graphstmt . graphr1 CLOSEBRACES
    (118) graphr1 -> . graphstmt graphr1
    (119) graphr1 -> . empty
    (100) graphstmt -> . graphfig
    (101) graphstmt -> . graphview
    (102) graphstmt -> . graphmove
    (145) empty -> .
    (103) graphfig -> . graphfig1 SEMICOLON
    (122) graphview -> . graphview1 SEMICOLON
    (108) graphmove -> . graphmove1 SEMICOLON
    (109) graphmove -> . graphmove2 SEMICOLON
    (104) graphfig1 -> . CIRCLE laRegla2
    (105) graphfig1 -> . SQUARE laRegla2
    (106) graphfig1 -> . TRIANGLE laRegla
    (107) graphfig1 -> . RECTANGLE laRegla
    (123) graphview1 -> . HIDE_STAR
    (124) graphview1 -> . SHOW_STAR
    (125) graphview1 -> . graphview2 exp
    (110) graphmove1 -> . HAND_DOWN
    (111) graphmove1 -> . HAND_UP
    (112) graphmove2 -> . GO laRegla2
    (113) graphmove2 -> . LEFT laRegla2
    (114) graphmove2 -> . RIGHT laRegla2
    (115) graphmove2 -> . BACK laRegla2
    (116) graphmove2 -> . ARC laRegla
    (126) graphview2 -> . SETXY laRegla
    (127) graphview2 -> . COLOR_STAR laRegla2
    (128) graphview2 -> . SIZE_STAR laRegla2

    CLOSEBRACES     reduce using rule 145 (empty -> .)
    CIRCLE          shift and go to state 70
    SQUARE          shift and go to state 71
    TRIANGLE        shift and go to state 72
    RECTANGLE       shift and go to state 73
    HIDE_STAR       shift and go to state 74
    SHOW_STAR       shift and go to state 75
    HAND_DOWN       shift and go to state 77
    HAND_UP         shift and go to state 78
    GO              shift and go to state 79
    LEFT            shift and go to state 80
    RIGHT           shift and go to state 81
    BACK            shift and go to state 82
    ARC             shift and go to state 83
    SETXY           shift and go to state 85
    COLOR_STAR      shift and go to state 86
    SIZE_STAR       shift and go to state 87

    graphstmt                      shift and go to state 257
    graphr1                        shift and go to state 258
    empty                          shift and go to state 259
    graphfig                       shift and go to state 56
    graphview                      shift and go to state 57
    graphmove                      shift and go to state 58
    graphfig1                      shift and go to state 64
    graphview1                     shift and go to state 65
    graphmove1                     shift and go to state 66
    graphmove2                     shift and go to state 67
    graphview2                     shift and go to state 76

state 233

    (120) rep -> OPENPAREN exp CLOSEPAREN .

    OPENBRACES      reduce using rule 120 (rep -> OPENPAREN exp CLOSEPAREN .)


state 234

    (93) funCall -> ID OPENPAREN funCall2 CLOSEPAREN .

    SEMICOLON       reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    MULTIPLICATION  reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    DIVISION        reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    ADDITION        reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    GREATER         reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    LESS            reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    NOTEQUAL        reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    ISEQUAL         reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    COMMA           reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    CTEINT          reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    CTEFLOAT        reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    CTECHAR         reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    ID              reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    OPENPAREN       reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)


state 235

    (94) funCall2 -> exp funCall3 .

    CLOSEPAREN      reduce using rule 94 (funCall2 -> exp funCall3 .)


state 236

    (96) funCall3 -> COMMA . exp funCall2
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    exp                            shift and go to state 260
    term                           shift and go to state 95
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 237

    (97) funCall3 -> empty .

    CLOSEPAREN      reduce using rule 97 (funCall3 -> empty .)


state 238

    (85) body -> OPENBRACES body1 CLOSEBRACES .

    IF              reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    PRINT           reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    READ            reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    ID              reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    RETURN          reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    FOR             reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    REPEAT          reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    CIRCLE          reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    SQUARE          reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_UP         reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    GO              reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    LEFT            reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    RIGHT           reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    BACK            reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    ARC             reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    WHILE           reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    SETXY           reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSEIF          reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSE            reduce using rule 85 (body -> OPENBRACES body1 CLOSEBRACES .)


state 239

    (87) body1 -> stmt body1 .

    CLOSEBRACES     reduce using rule 87 (body1 -> stmt body1 .)


state 240

    (89) for -> FOR OPENPAREN ID TWODOTS . exp CLOSEPAREN body
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    exp                            shift and go to state 261
    term                           shift and go to state 95
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 241

    (91) while1 -> while_w OPENPAREN expression CLOSEPAREN .

    OPENBRACES      reduce using rule 91 (while1 -> while_w OPENPAREN expression CLOSEPAREN .)


state 242

    (99) laRegla2 -> OPENPAREN exp CLOSEPAREN .

    SEMICOLON       reduce using rule 99 (laRegla2 -> OPENPAREN exp CLOSEPAREN .)
    CTEINT          reduce using rule 99 (laRegla2 -> OPENPAREN exp CLOSEPAREN .)
    CTEFLOAT        reduce using rule 99 (laRegla2 -> OPENPAREN exp CLOSEPAREN .)
    CTECHAR         reduce using rule 99 (laRegla2 -> OPENPAREN exp CLOSEPAREN .)
    ID              reduce using rule 99 (laRegla2 -> OPENPAREN exp CLOSEPAREN .)
    ADDITION        reduce using rule 99 (laRegla2 -> OPENPAREN exp CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 99 (laRegla2 -> OPENPAREN exp CLOSEPAREN .)
    OPENPAREN       reduce using rule 99 (laRegla2 -> OPENPAREN exp CLOSEPAREN .)


state 243

    (98) laRegla -> OPENPAREN exp COMMA . exp CLOSEPAREN
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    exp                            shift and go to state 262
    term                           shift and go to state 95
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 244

    (23) function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .

    FUN             reduce using rule 23 (function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .)
    MULTIPLICATION  reduce using rule 23 (function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .)


state 245

    (25) termina_fun -> CLOSEBRACES .

    FUN             reduce using rule 25 (termina_fun -> CLOSEBRACES .)
    MULTIPLICATION  reduce using rule 25 (termina_fun -> CLOSEBRACES .)


state 246

    (29) function4 -> stmt function4 .

    CLOSEBRACES     reduce using rule 29 (function4 -> stmt function4 .)


state 247

    (31) function5 -> COMMA type . ID function5

    ID              shift and go to state 263


state 248

    (61) vcte1 -> OPENBRACKET exp CLOSEBRACKET . vcte3
    (63) vcte3 -> . OPENBRACKET exp CLOSEBRACKET
    (64) vcte3 -> . empty
    (145) empty -> .

    OPENBRACKET     shift and go to state 264
    MULTIPLICATION  reduce using rule 145 (empty -> .)
    DIVISION        reduce using rule 145 (empty -> .)
    ADDITION        reduce using rule 145 (empty -> .)
    SUBSTRACTION    reduce using rule 145 (empty -> .)
    SEMICOLON       reduce using rule 145 (empty -> .)
    GREATER         reduce using rule 145 (empty -> .)
    LESS            reduce using rule 145 (empty -> .)
    NOTEQUAL        reduce using rule 145 (empty -> .)
    ISEQUAL         reduce using rule 145 (empty -> .)
    CLOSEPAREN      reduce using rule 145 (empty -> .)
    CLOSEBRACKET    reduce using rule 145 (empty -> .)
    COMMA           reduce using rule 145 (empty -> .)
    CTEINT          reduce using rule 145 (empty -> .)
    CTEFLOAT        reduce using rule 145 (empty -> .)
    CTECHAR         reduce using rule 145 (empty -> .)
    ID              reduce using rule 145 (empty -> .)
    OPENPAREN       reduce using rule 145 (empty -> .)

    vcte3                          shift and go to state 265
    empty                          shift and go to state 266

state 249

    (72) expression1 -> loper exp .

    CLOSEPAREN      reduce using rule 72 (expression1 -> loper exp .)


state 250

    (37) vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .

    SEMICOLON       reduce using rule 37 (vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .)
    EQUALS          reduce using rule 37 (vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .)


state 251

    (49) assignment -> id assignment1 equals assignment3 SEMICOLON .

    IF              reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    PRINT           reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    READ            reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    ID              reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    RETURN          reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    FOR             reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    REPEAT          reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    CIRCLE          reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SQUARE          reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    TRIANGLE        reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    RECTANGLE       reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    HIDE_STAR       reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SHOW_STAR       reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    HAND_DOWN       reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    HAND_UP         reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    GO              reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    LEFT            reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    RIGHT           reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    BACK            reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    ARC             reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    WHILE           reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SETXY           reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    COLOR_STAR      reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SIZE_STAR       reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    CLOSEBRACES     reduce using rule 49 (assignment -> id assignment1 equals assignment3 SEMICOLON .)


state 252

    (79) condition1 -> elseif head_cond . body condition1
    (85) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 131

    body                           shift and go to state 267

state 253

    (80) condition1 -> else body .

    IF              reduce using rule 80 (condition1 -> else body .)
    PRINT           reduce using rule 80 (condition1 -> else body .)
    READ            reduce using rule 80 (condition1 -> else body .)
    ID              reduce using rule 80 (condition1 -> else body .)
    RETURN          reduce using rule 80 (condition1 -> else body .)
    FOR             reduce using rule 80 (condition1 -> else body .)
    REPEAT          reduce using rule 80 (condition1 -> else body .)
    CIRCLE          reduce using rule 80 (condition1 -> else body .)
    SQUARE          reduce using rule 80 (condition1 -> else body .)
    TRIANGLE        reduce using rule 80 (condition1 -> else body .)
    RECTANGLE       reduce using rule 80 (condition1 -> else body .)
    HIDE_STAR       reduce using rule 80 (condition1 -> else body .)
    SHOW_STAR       reduce using rule 80 (condition1 -> else body .)
    HAND_DOWN       reduce using rule 80 (condition1 -> else body .)
    HAND_UP         reduce using rule 80 (condition1 -> else body .)
    GO              reduce using rule 80 (condition1 -> else body .)
    LEFT            reduce using rule 80 (condition1 -> else body .)
    RIGHT           reduce using rule 80 (condition1 -> else body .)
    BACK            reduce using rule 80 (condition1 -> else body .)
    ARC             reduce using rule 80 (condition1 -> else body .)
    WHILE           reduce using rule 80 (condition1 -> else body .)
    SETXY           reduce using rule 80 (condition1 -> else body .)
    COLOR_STAR      reduce using rule 80 (condition1 -> else body .)
    SIZE_STAR       reduce using rule 80 (condition1 -> else body .)
    CLOSEBRACES     reduce using rule 80 (condition1 -> else body .)


state 254

    (42) print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .

    IF              reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 42 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)


state 255

    (43) read -> READ OPENPAREN id read1 CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 268


state 256

    (44) read1 -> OPENBRACKET exp . CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (45) read1 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 269


state 257

    (118) graphr1 -> graphstmt . graphr1
    (118) graphr1 -> . graphstmt graphr1
    (119) graphr1 -> . empty
    (100) graphstmt -> . graphfig
    (101) graphstmt -> . graphview
    (102) graphstmt -> . graphmove
    (145) empty -> .
    (103) graphfig -> . graphfig1 SEMICOLON
    (122) graphview -> . graphview1 SEMICOLON
    (108) graphmove -> . graphmove1 SEMICOLON
    (109) graphmove -> . graphmove2 SEMICOLON
    (104) graphfig1 -> . CIRCLE laRegla2
    (105) graphfig1 -> . SQUARE laRegla2
    (106) graphfig1 -> . TRIANGLE laRegla
    (107) graphfig1 -> . RECTANGLE laRegla
    (123) graphview1 -> . HIDE_STAR
    (124) graphview1 -> . SHOW_STAR
    (125) graphview1 -> . graphview2 exp
    (110) graphmove1 -> . HAND_DOWN
    (111) graphmove1 -> . HAND_UP
    (112) graphmove2 -> . GO laRegla2
    (113) graphmove2 -> . LEFT laRegla2
    (114) graphmove2 -> . RIGHT laRegla2
    (115) graphmove2 -> . BACK laRegla2
    (116) graphmove2 -> . ARC laRegla
    (126) graphview2 -> . SETXY laRegla
    (127) graphview2 -> . COLOR_STAR laRegla2
    (128) graphview2 -> . SIZE_STAR laRegla2

    CLOSEBRACES     reduce using rule 145 (empty -> .)
    CIRCLE          shift and go to state 70
    SQUARE          shift and go to state 71
    TRIANGLE        shift and go to state 72
    RECTANGLE       shift and go to state 73
    HIDE_STAR       shift and go to state 74
    SHOW_STAR       shift and go to state 75
    HAND_DOWN       shift and go to state 77
    HAND_UP         shift and go to state 78
    GO              shift and go to state 79
    LEFT            shift and go to state 80
    RIGHT           shift and go to state 81
    BACK            shift and go to state 82
    ARC             shift and go to state 83
    SETXY           shift and go to state 85
    COLOR_STAR      shift and go to state 86
    SIZE_STAR       shift and go to state 87

    graphstmt                      shift and go to state 257
    graphr1                        shift and go to state 270
    empty                          shift and go to state 259
    graphfig                       shift and go to state 56
    graphview                      shift and go to state 57
    graphmove                      shift and go to state 58
    graphfig1                      shift and go to state 64
    graphview1                     shift and go to state 65
    graphmove1                     shift and go to state 66
    graphmove2                     shift and go to state 67
    graphview2                     shift and go to state 76

state 258

    (117) graphr -> repeat rep OPENBRACES graphstmt graphr1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 271


state 259

    (119) graphr1 -> empty .

    CLOSEBRACES     reduce using rule 119 (graphr1 -> empty .)


state 260

    (96) funCall3 -> COMMA exp . funCall2
    (94) funCall2 -> . exp funCall3
    (95) funCall2 -> . empty
    (129) exp -> . term exp1
    (145) empty -> .
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CLOSEPAREN      reduce using rule 145 (empty -> .)
    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    exp                            shift and go to state 185
    funCall2                       shift and go to state 272
    empty                          shift and go to state 186
    term                           shift and go to state 95
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 261

    (89) for -> FOR OPENPAREN ID TWODOTS exp . CLOSEPAREN body

    CLOSEPAREN      shift and go to state 273


state 262

    (98) laRegla -> OPENPAREN exp COMMA exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 274


state 263

    (31) function5 -> COMMA type ID . function5
    (31) function5 -> . COMMA type ID function5
    (32) function5 -> . empty
    (145) empty -> .

    COMMA           shift and go to state 199
    CLOSEPAREN      reduce using rule 145 (empty -> .)

    function5                      shift and go to state 275
    empty                          shift and go to state 200

state 264

    (63) vcte3 -> OPENBRACKET . exp CLOSEBRACKET
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    exp                            shift and go to state 276
    term                           shift and go to state 95
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 265

    (61) vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .

    MULTIPLICATION  reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    DIVISION        reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ADDITION        reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    SUBSTRACTION    reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    SEMICOLON       reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    GREATER         reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    LESS            reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    NOTEQUAL        reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ISEQUAL         reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CLOSEPAREN      reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CLOSEBRACKET    reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    COMMA           reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CTEINT          reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CTEFLOAT        reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CTECHAR         reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ID              reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    OPENPAREN       reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)


state 266

    (64) vcte3 -> empty .

    MULTIPLICATION  reduce using rule 64 (vcte3 -> empty .)
    DIVISION        reduce using rule 64 (vcte3 -> empty .)
    ADDITION        reduce using rule 64 (vcte3 -> empty .)
    SUBSTRACTION    reduce using rule 64 (vcte3 -> empty .)
    SEMICOLON       reduce using rule 64 (vcte3 -> empty .)
    GREATER         reduce using rule 64 (vcte3 -> empty .)
    LESS            reduce using rule 64 (vcte3 -> empty .)
    NOTEQUAL        reduce using rule 64 (vcte3 -> empty .)
    ISEQUAL         reduce using rule 64 (vcte3 -> empty .)
    CLOSEPAREN      reduce using rule 64 (vcte3 -> empty .)
    CLOSEBRACKET    reduce using rule 64 (vcte3 -> empty .)
    COMMA           reduce using rule 64 (vcte3 -> empty .)
    CTEINT          reduce using rule 64 (vcte3 -> empty .)
    CTEFLOAT        reduce using rule 64 (vcte3 -> empty .)
    CTECHAR         reduce using rule 64 (vcte3 -> empty .)
    ID              reduce using rule 64 (vcte3 -> empty .)
    OPENPAREN       reduce using rule 64 (vcte3 -> empty .)


state 267

    (79) condition1 -> elseif head_cond body . condition1
    (79) condition1 -> . elseif head_cond body condition1
    (80) condition1 -> . else body
    (81) condition1 -> . empty
    (82) elseif -> . ELSEIF
    (83) else -> . ELSE
    (145) empty -> .

    ELSEIF          shift and go to state 224
    ELSE            shift and go to state 225
    IF              reduce using rule 145 (empty -> .)
    PRINT           reduce using rule 145 (empty -> .)
    READ            reduce using rule 145 (empty -> .)
    ID              reduce using rule 145 (empty -> .)
    RETURN          reduce using rule 145 (empty -> .)
    FOR             reduce using rule 145 (empty -> .)
    REPEAT          reduce using rule 145 (empty -> .)
    CIRCLE          reduce using rule 145 (empty -> .)
    SQUARE          reduce using rule 145 (empty -> .)
    TRIANGLE        reduce using rule 145 (empty -> .)
    RECTANGLE       reduce using rule 145 (empty -> .)
    HIDE_STAR       reduce using rule 145 (empty -> .)
    SHOW_STAR       reduce using rule 145 (empty -> .)
    HAND_DOWN       reduce using rule 145 (empty -> .)
    HAND_UP         reduce using rule 145 (empty -> .)
    GO              reduce using rule 145 (empty -> .)
    LEFT            reduce using rule 145 (empty -> .)
    RIGHT           reduce using rule 145 (empty -> .)
    BACK            reduce using rule 145 (empty -> .)
    ARC             reduce using rule 145 (empty -> .)
    WHILE           reduce using rule 145 (empty -> .)
    SETXY           reduce using rule 145 (empty -> .)
    COLOR_STAR      reduce using rule 145 (empty -> .)
    SIZE_STAR       reduce using rule 145 (empty -> .)
    CLOSEBRACES     reduce using rule 145 (empty -> .)

    elseif                         shift and go to state 221
    condition1                     shift and go to state 277
    else                           shift and go to state 222
    empty                          shift and go to state 223

state 268

    (43) read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .

    IF              reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 43 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)


state 269

    (44) read1 -> OPENBRACKET exp CLOSEBRACKET . OPENBRACKET exp CLOSEBRACKET
    (45) read1 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     shift and go to state 278
    CLOSEPAREN      reduce using rule 45 (read1 -> OPENBRACKET exp CLOSEBRACKET .)


state 270

    (118) graphr1 -> graphstmt graphr1 .

    CLOSEBRACES     reduce using rule 118 (graphr1 -> graphstmt graphr1 .)


state 271

    (117) graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .

    IF              reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    PRINT           reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    READ            reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    ID              reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RETURN          reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    FOR             reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    REPEAT          reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    CIRCLE          reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SQUARE          reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HAND_UP         reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    GO              reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    LEFT            reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RIGHT           reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    BACK            reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    ARC             reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    WHILE           reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SETXY           reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 117 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)


state 272

    (96) funCall3 -> COMMA exp funCall2 .

    CLOSEPAREN      reduce using rule 96 (funCall3 -> COMMA exp funCall2 .)


state 273

    (89) for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN . body
    (85) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 131

    body                           shift and go to state 279

state 274

    (98) laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .

    SEMICOLON       reduce using rule 98 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    CTEINT          reduce using rule 98 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    CTEFLOAT        reduce using rule 98 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    CTECHAR         reduce using rule 98 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    ID              reduce using rule 98 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    ADDITION        reduce using rule 98 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 98 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    OPENPAREN       reduce using rule 98 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)


state 275

    (31) function5 -> COMMA type ID function5 .

    CLOSEPAREN      reduce using rule 31 (function5 -> COMMA type ID function5 .)


state 276

    (63) vcte3 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 280


state 277

    (79) condition1 -> elseif head_cond body condition1 .

    IF              reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)
    PRINT           reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)
    READ            reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)
    ID              reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)
    RETURN          reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)
    FOR             reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)
    REPEAT          reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)
    CIRCLE          reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)
    SQUARE          reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)
    TRIANGLE        reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)
    RECTANGLE       reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)
    HIDE_STAR       reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)
    SHOW_STAR       reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)
    HAND_DOWN       reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)
    HAND_UP         reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)
    GO              reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)
    LEFT            reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)
    RIGHT           reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)
    BACK            reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)
    ARC             reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)
    WHILE           reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)
    SETXY           reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)
    COLOR_STAR      reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)
    SIZE_STAR       reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)
    CLOSEBRACES     reduce using rule 79 (condition1 -> elseif head_cond body condition1 .)


state 278

    (44) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET . exp CLOSEBRACKET
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (56) vcte -> . cte_int
    (57) vcte -> . cte_float
    (58) vcte -> . cte_char
    (59) vcte -> . id vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte_int -> . CTEINT
    (66) cte_float -> . CTEFLOAT
    (67) cte_char -> . CTECHAR
    (48) id -> . ID
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CTEINT          shift and go to state 106
    CTEFLOAT        shift and go to state 107
    CTECHAR         shift and go to state 108
    ID              shift and go to state 93
    ADDITION        shift and go to state 110
    SUBSTRACTION    shift and go to state 111
    OPENPAREN       shift and go to state 109

    exp                            shift and go to state 281
    term                           shift and go to state 95
    factor                         shift and go to state 96
    vcte                           shift and go to state 97
    factor1                        shift and go to state 98
    cte_int                        shift and go to state 99
    cte_float                      shift and go to state 100
    cte_char                       shift and go to state 101
    id                             shift and go to state 102
    funCall                        shift and go to state 103
    factor2                        shift and go to state 104
    openP                          shift and go to state 105

state 279

    (89) for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .

    IF              reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    PRINT           reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    READ            reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    ID              reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    RETURN          reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    FOR             reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    REPEAT          reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    CIRCLE          reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SQUARE          reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    TRIANGLE        reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    RECTANGLE       reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    HIDE_STAR       reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SHOW_STAR       reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    HAND_DOWN       reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    HAND_UP         reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    GO              reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    LEFT            reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    RIGHT           reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    BACK            reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    ARC             reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    WHILE           reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SETXY           reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    COLOR_STAR      reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SIZE_STAR       reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    CLOSEBRACES     reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)


state 280

    (63) vcte3 -> OPENBRACKET exp CLOSEBRACKET .

    MULTIPLICATION  reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    DIVISION        reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ADDITION        reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    SUBSTRACTION    reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    SEMICOLON       reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    GREATER         reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    LESS            reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ISEQUAL         reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    COMMA           reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CTEINT          reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CTEFLOAT        reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CTECHAR         reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ID              reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    OPENPAREN       reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)


state 281

    (44) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 282


state 282

    (44) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .

    CLOSEPAREN      reduce using rule 44 (read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OPENPAREN in state 93 resolved as shift
WARNING: shift/reduce conflict for ADDITION in state 95 resolved as shift
WARNING: shift/reduce conflict for SUBSTRACTION in state 95 resolved as shift
WARNING: reduce/reduce conflict in state 117 resolved using rule (assignment1 -> assignment2)
WARNING: rejected rule (empty -> <empty>) in state 117
WARNING: reduce/reduce conflict in state 128 resolved using rule (return1 -> vcte)
WARNING: rejected rule (factor -> vcte) in state 128
