Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    SIMPLEQUOTES
    VARS

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON program_vars program2 star
Rule 2     program_vars -> vars program_vars
Rule 3     program_vars -> empty
Rule 4     program2 -> function program2
Rule 5     program2 -> empty
Rule 6     star -> MULTIPLICATION OPENBRACES star_vars star1 CLOSEBRACES
Rule 7     star1 -> stmt star1
Rule 8     star1 -> empty
Rule 9     star_vars -> vars star_vars
Rule 10    star_vars -> empty
Rule 11    loop -> while
Rule 12    loop -> for
Rule 13    stmt -> assignment
Rule 14    stmt -> condition
Rule 15    stmt -> print
Rule 16    stmt -> loop
Rule 17    stmt -> read
Rule 18    stmt -> graphstmt
Rule 19    stmt -> graphr
Rule 20    stmt -> funCall
Rule 21    stmt -> return
Rule 22    function -> FUN function1 ID function2 inicia_fun fun_vars function4 termina_fun
Rule 23    function1 -> type
Rule 24    function1 -> VOID
Rule 25    inicia_fun -> OPENBRACES
Rule 26    termina_fun -> CLOSEBRACES
Rule 27    function2 -> OPENPAREN function3 CLOSEPAREN
Rule 28    function3 -> type ID function5
Rule 29    function3 -> empty
Rule 30    function4 -> stmt function4
Rule 31    function4 -> empty
Rule 32    function5 -> COMMA type ID function3
Rule 33    fun_vars -> vars fun_vars
Rule 34    fun_vars -> empty
Rule 35    vars -> type ID vars1 SEMICOLON
Rule 36    vars1 -> EQUALS exp
Rule 37    vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3
Rule 38    vars1 -> empty
Rule 39    vars3 -> OPENBRACKET CTEINT CLOSEBRACKET
Rule 40    vars3 -> empty
Rule 41    type -> INT
Rule 42    type -> FLOAT
Rule 43    type -> CHAR
Rule 44    print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
Rule 45    read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
Rule 46    read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
Rule 47    read1 -> OPENBRACKET exp CLOSEBRACKET
Rule 48    read1 -> empty
Rule 49    assignment -> ID assignment1 EQUALS assignment3 SEMICOLON
Rule 50    assignment1 -> assignment2
Rule 51    assignment1 -> assignment2 assignment1
Rule 52    assignment1 -> empty
Rule 53    assignment2 -> OPENBRACKET exp CLOSEBRACKET
Rule 54    assignment3 -> exp
Rule 55    assignment3 -> read
Rule 56    vcte -> cte
Rule 57    vcte -> ID vcte1
Rule 58    vcte -> funCall
Rule 59    vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3
Rule 60    vcte1 -> empty
Rule 61    vcte3 -> OPENBRACKET exp CLOSEBRACKET
Rule 62    vcte3 -> empty
Rule 63    cte -> CTEINT
Rule 64    cte -> CTEFLOAT
Rule 65    cte -> CTECHAR
Rule 66    return -> RETURN return1 SEMICOLON
Rule 67    return1 -> vcte
Rule 68    return1 -> exp
Rule 69    expression -> exp expression1
Rule 70    expression1 -> loper exp
Rule 71    expression1 -> empty
Rule 72    loper -> GREATER
Rule 73    loper -> LESS
Rule 74    loper -> NOTEQUAL
Rule 75    loper -> ISEQUAL
Rule 76    logical -> expression logical1 expression
Rule 77    logical1 -> OR
Rule 78    logical1 -> AND
Rule 79    condition -> IF head body condition1
Rule 80    condition1 -> ELSEIF head body condition1
Rule 81    condition1 -> ELSE body
Rule 82    condition1 -> empty
Rule 83    head -> OPENPAREN head1 CLOSEPAREN
Rule 84    head1 -> expression
Rule 85    head1 -> logical
Rule 86    body -> OPENBRACES body1 CLOSEBRACES
Rule 87    body1 -> stmt body1
Rule 88    body1 -> empty
Rule 89    for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
Rule 90    while -> WHILE head body
Rule 91    funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
Rule 92    funCall2 -> exp funCall3
Rule 93    funCall2 -> empty
Rule 94    funCall3 -> COMMA exp funCall2
Rule 95    funCall3 -> empty
Rule 96    laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN
Rule 97    laRegla2 -> OPENPAREN exp CLOSEPAREN
Rule 98    graphstmt -> graphfig
Rule 99    graphstmt -> graphview
Rule 100   graphstmt -> graphmove
Rule 101   graphfig -> graphfig1 SEMICOLON
Rule 102   graphfig1 -> CIRCLE laRegla2
Rule 103   graphfig1 -> SQUARE laRegla2
Rule 104   graphfig1 -> TRIANGLE laRegla
Rule 105   graphfig1 -> RECTANGLE laRegla
Rule 106   graphmove -> graphmove1 SEMICOLON
Rule 107   graphmove1 -> HAND_DOWN
Rule 108   graphmove1 -> HAND_UP
Rule 109   graphmove1 -> graphmove2
Rule 110   graphmove2 -> GO laRegla2
Rule 111   graphmove2 -> LEFT laRegla2
Rule 112   graphmove2 -> RIGHT laRegla2
Rule 113   graphmove2 -> BACK laRegla2
Rule 114   graphmove2 -> ARC laRegla
Rule 115   graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
Rule 116   graphr1 -> graphstmt graphr1
Rule 117   graphr1 -> empty
Rule 118   graphview -> graphview1 SEMICOLON
Rule 119   graphview1 -> HIDE_STAR
Rule 120   graphview1 -> SHOW_STAR
Rule 121   graphview1 -> graphview2 exp
Rule 122   graphview2 -> SETXY graphview3
Rule 123   graphview2 -> COLOR_STAR
Rule 124   graphview2 -> SIZE_STAR
Rule 125   graphview3 -> exp COMMA
Rule 126   graphview3 -> laRegla
Rule 127   exp -> term exp1
Rule 128   exp1 -> ADDITION exp
Rule 129   exp1 -> SUBSTRACTION exp
Rule 130   exp1 -> empty
Rule 131   openP -> OPENPAREN
Rule 132   closeP -> CLOSEPAREN
Rule 133   factor -> vcte
Rule 134   factor -> factor1
Rule 135   factor1 -> factor2 vcte
Rule 136   factor1 -> openP expression closeP
Rule 137   factor2 -> ADDITION
Rule 138   factor2 -> SUBSTRACTION
Rule 139   term -> factor term1
Rule 140   term1 -> MULTIPLICATION term
Rule 141   term1 -> DIVISION term
Rule 142   term1 -> empty
Rule 143   empty -> <empty>

Terminals, with rules where they appear

ADDITION             : 128 137
AND                  : 78
ARC                  : 114
BACK                 : 113
CHAR                 : 43
CIRCLE               : 102
CLOSEBRACES          : 6 26 86 115
CLOSEBRACKET         : 37 39 46 46 47 53 59 61
CLOSEPAREN           : 27 44 45 83 89 91 96 97 132
COLOR_STAR           : 123
COMMA                : 32 94 96 125
CTECHAR              : 65
CTEFLOAT             : 64
CTEINT               : 37 39 63
DIVISION             : 141
ELSE                 : 81
ELSEIF               : 80
EQUALS               : 36 49
FLOAT                : 42
FOR                  : 89
FUN                  : 22
GO                   : 110
GREATER              : 72
HAND_DOWN            : 107
HAND_UP              : 108
HIDE_STAR            : 119
ID                   : 1 22 28 32 35 45 49 57 89 91
IF                   : 79
INT                  : 41
ISEQUAL              : 75
LEFT                 : 111
LESS                 : 73
MULTIPLICATION       : 6 140
NOTEQUAL             : 74
OPENBRACES           : 6 25 86 115
OPENBRACKET          : 37 39 46 46 47 53 59 61
OPENPAREN            : 27 44 45 83 89 91 96 97 131
OR                   : 77
PRINT                : 44
PROGRAM              : 1
READ                 : 45
RECTANGLE            : 105
REPEAT               : 115
RETURN               : 66
RIGHT                : 112
SEMICOLON            : 1 35 44 45 49 66 91 101 106 118
SETXY                : 122
SHOW_STAR            : 120
SIMPLEQUOTES         : 
SIZE_STAR            : 124
SQUARE               : 103
SUBSTRACTION         : 129 138
TRIANGLE             : 104
TWODOTS              : 89
VARS                 : 
VOID                 : 24
WHILE                : 90
error                : 

Nonterminals, with rules where they appear

assignment           : 13
assignment1          : 49 51
assignment2          : 50 51
assignment3          : 49
body                 : 79 80 81 89 90
body1                : 86 87
closeP               : 136
condition            : 14
condition1           : 79 80
cte                  : 56
empty                : 3 5 8 10 29 31 34 38 40 48 52 60 62 71 82 88 93 95 117 130 142
exp                  : 36 44 46 46 47 53 54 59 61 68 69 70 89 92 94 96 96 97 115 121 125 128 129
exp1                 : 127
expression           : 76 76 84 136
expression1          : 69
factor               : 139
factor1              : 134
factor2              : 135
for                  : 12
funCall              : 20 58
funCall2             : 91 94
funCall3             : 92
fun_vars             : 22 33
function             : 4
function1            : 22
function2            : 22
function3            : 27 32
function4            : 22 30
function5            : 28
graphfig             : 98
graphfig1            : 101
graphmove            : 100
graphmove1           : 106
graphmove2           : 109
graphr               : 19
graphr1              : 115 116
graphstmt            : 18 115 116
graphview            : 99
graphview1           : 118
graphview2           : 121
graphview3           : 122
head                 : 79 80 90
head1                : 83
inicia_fun           : 22
laRegla              : 104 105 114 126
laRegla2             : 102 103 110 111 112 113
logical              : 85
logical1             : 76
loop                 : 16
loper                : 70
openP                : 136
print                : 15
program              : 0
program2             : 1 4
program_vars         : 1 2
read                 : 17 55
read1                : 45
return               : 21
return1              : 66
star                 : 1
star1                : 6 7
star_vars            : 6 9
stmt                 : 7 30 87
term                 : 127 140 141
term1                : 139
termina_fun          : 22
type                 : 23 28 32 35
vars                 : 2 9 33
vars1                : 35
vars3                : 37
vcte                 : 67 133 135
vcte1                : 57
vcte3                : 59
while                : 11

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON program_vars program2 star

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON program_vars program2 star

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON program_vars program2 star

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . program_vars program2 star
    (2) program_vars -> . vars program_vars
    (3) program_vars -> . empty
    (35) vars -> . type ID vars1 SEMICOLON
    (143) empty -> .
    (41) type -> . INT
    (42) type -> . FLOAT
    (43) type -> . CHAR

    FUN             reduce using rule 143 (empty -> .)
    MULTIPLICATION  reduce using rule 143 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    program_vars                   shift and go to state 5
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 5

    (1) program -> PROGRAM ID SEMICOLON program_vars . program2 star
    (4) program2 -> . function program2
    (5) program2 -> . empty
    (22) function -> . FUN function1 ID function2 inicia_fun fun_vars function4 termina_fun
    (143) empty -> .

    FUN             shift and go to state 15
    MULTIPLICATION  reduce using rule 143 (empty -> .)

    program2                       shift and go to state 12
    function                       shift and go to state 13
    empty                          shift and go to state 14

state 6

    (2) program_vars -> vars . program_vars
    (2) program_vars -> . vars program_vars
    (3) program_vars -> . empty
    (35) vars -> . type ID vars1 SEMICOLON
    (143) empty -> .
    (41) type -> . INT
    (42) type -> . FLOAT
    (43) type -> . CHAR

    FUN             reduce using rule 143 (empty -> .)
    MULTIPLICATION  reduce using rule 143 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    vars                           shift and go to state 6
    program_vars                   shift and go to state 16
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 7

    (3) program_vars -> empty .

    FUN             reduce using rule 3 (program_vars -> empty .)
    MULTIPLICATION  reduce using rule 3 (program_vars -> empty .)


state 8

    (35) vars -> type . ID vars1 SEMICOLON

    ID              shift and go to state 17


state 9

    (41) type -> INT .

    ID              reduce using rule 41 (type -> INT .)


state 10

    (42) type -> FLOAT .

    ID              reduce using rule 42 (type -> FLOAT .)


state 11

    (43) type -> CHAR .

    ID              reduce using rule 43 (type -> CHAR .)


state 12

    (1) program -> PROGRAM ID SEMICOLON program_vars program2 . star
    (6) star -> . MULTIPLICATION OPENBRACES star_vars star1 CLOSEBRACES

    MULTIPLICATION  shift and go to state 19

    star                           shift and go to state 18

state 13

    (4) program2 -> function . program2
    (4) program2 -> . function program2
    (5) program2 -> . empty
    (22) function -> . FUN function1 ID function2 inicia_fun fun_vars function4 termina_fun
    (143) empty -> .

    FUN             shift and go to state 15
    MULTIPLICATION  reduce using rule 143 (empty -> .)

    function                       shift and go to state 13
    program2                       shift and go to state 20
    empty                          shift and go to state 14

state 14

    (5) program2 -> empty .

    MULTIPLICATION  reduce using rule 5 (program2 -> empty .)


state 15

    (22) function -> FUN . function1 ID function2 inicia_fun fun_vars function4 termina_fun
    (23) function1 -> . type
    (24) function1 -> . VOID
    (41) type -> . INT
    (42) type -> . FLOAT
    (43) type -> . CHAR

    VOID            shift and go to state 23
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    function1                      shift and go to state 21
    type                           shift and go to state 22

state 16

    (2) program_vars -> vars program_vars .

    FUN             reduce using rule 2 (program_vars -> vars program_vars .)
    MULTIPLICATION  reduce using rule 2 (program_vars -> vars program_vars .)


state 17

    (35) vars -> type ID . vars1 SEMICOLON
    (36) vars1 -> . EQUALS exp
    (37) vars1 -> . OPENBRACKET CTEINT CLOSEBRACKET vars3
    (38) vars1 -> . empty
    (143) empty -> .

    EQUALS          shift and go to state 25
    OPENBRACKET     shift and go to state 26
    SEMICOLON       reduce using rule 143 (empty -> .)

    vars1                          shift and go to state 24
    empty                          shift and go to state 27

state 18

    (1) program -> PROGRAM ID SEMICOLON program_vars program2 star .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON program_vars program2 star .)


state 19

    (6) star -> MULTIPLICATION . OPENBRACES star_vars star1 CLOSEBRACES

    OPENBRACES      shift and go to state 28


state 20

    (4) program2 -> function program2 .

    MULTIPLICATION  reduce using rule 4 (program2 -> function program2 .)


state 21

    (22) function -> FUN function1 . ID function2 inicia_fun fun_vars function4 termina_fun

    ID              shift and go to state 29


state 22

    (23) function1 -> type .

    ID              reduce using rule 23 (function1 -> type .)


state 23

    (24) function1 -> VOID .

    ID              reduce using rule 24 (function1 -> VOID .)


state 24

    (35) vars -> type ID vars1 . SEMICOLON

    SEMICOLON       shift and go to state 30


state 25

    (36) vars1 -> EQUALS . exp
    (127) exp -> . term exp1
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    exp                            shift and go to state 31
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 26

    (37) vars1 -> OPENBRACKET . CTEINT CLOSEBRACKET vars3

    CTEINT          shift and go to state 47


state 27

    (38) vars1 -> empty .

    SEMICOLON       reduce using rule 38 (vars1 -> empty .)


state 28

    (6) star -> MULTIPLICATION OPENBRACES . star_vars star1 CLOSEBRACES
    (9) star_vars -> . vars star_vars
    (10) star_vars -> . empty
    (35) vars -> . type ID vars1 SEMICOLON
    (143) empty -> .
    (41) type -> . INT
    (42) type -> . FLOAT
    (43) type -> . CHAR

    ID              reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    PRINT           reduce using rule 143 (empty -> .)
    READ            reduce using rule 143 (empty -> .)
    REPEAT          reduce using rule 143 (empty -> .)
    RETURN          reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    FOR             reduce using rule 143 (empty -> .)
    CIRCLE          reduce using rule 143 (empty -> .)
    SQUARE          reduce using rule 143 (empty -> .)
    TRIANGLE        reduce using rule 143 (empty -> .)
    RECTANGLE       reduce using rule 143 (empty -> .)
    HIDE_STAR       reduce using rule 143 (empty -> .)
    SHOW_STAR       reduce using rule 143 (empty -> .)
    HAND_DOWN       reduce using rule 143 (empty -> .)
    HAND_UP         reduce using rule 143 (empty -> .)
    SETXY           reduce using rule 143 (empty -> .)
    COLOR_STAR      reduce using rule 143 (empty -> .)
    SIZE_STAR       reduce using rule 143 (empty -> .)
    GO              reduce using rule 143 (empty -> .)
    LEFT            reduce using rule 143 (empty -> .)
    RIGHT           reduce using rule 143 (empty -> .)
    BACK            reduce using rule 143 (empty -> .)
    ARC             reduce using rule 143 (empty -> .)
    CLOSEBRACES     reduce using rule 143 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    star_vars                      shift and go to state 48
    vars                           shift and go to state 49
    empty                          shift and go to state 50
    type                           shift and go to state 8

state 29

    (22) function -> FUN function1 ID . function2 inicia_fun fun_vars function4 termina_fun
    (27) function2 -> . OPENPAREN function3 CLOSEPAREN

    OPENPAREN       shift and go to state 52

    function2                      shift and go to state 51

state 30

    (35) vars -> type ID vars1 SEMICOLON .

    INT             reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    FLOAT           reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    CHAR            reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    FUN             reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    MULTIPLICATION  reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    ID              reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    IF              reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    PRINT           reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    READ            reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    REPEAT          reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    RETURN          reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    WHILE           reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    FOR             reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    CIRCLE          reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    SQUARE          reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    TRIANGLE        reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    RECTANGLE       reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    HIDE_STAR       reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    SHOW_STAR       reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    HAND_DOWN       reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    HAND_UP         reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    SETXY           reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    COLOR_STAR      reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    SIZE_STAR       reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    GO              reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    LEFT            reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    RIGHT           reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    BACK            reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    ARC             reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)


state 31

    (36) vars1 -> EQUALS exp .

    SEMICOLON       reduce using rule 36 (vars1 -> EQUALS exp .)


state 32

    (127) exp -> term . exp1
    (128) exp1 -> . ADDITION exp
    (129) exp1 -> . SUBSTRACTION exp
    (130) exp1 -> . empty
    (143) empty -> .

  ! shift/reduce conflict for ADDITION resolved as shift
  ! shift/reduce conflict for SUBSTRACTION resolved as shift
    ADDITION        shift and go to state 54
    SUBSTRACTION    shift and go to state 55
    SEMICOLON       reduce using rule 143 (empty -> .)
    GREATER         reduce using rule 143 (empty -> .)
    LESS            reduce using rule 143 (empty -> .)
    NOTEQUAL        reduce using rule 143 (empty -> .)
    ISEQUAL         reduce using rule 143 (empty -> .)
    CLOSEPAREN      reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    CLOSEBRACKET    reduce using rule 143 (empty -> .)
    OPENBRACES      reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    ID              reduce using rule 143 (empty -> .)
    CTEINT          reduce using rule 143 (empty -> .)
    CTEFLOAT        reduce using rule 143 (empty -> .)
    CTECHAR         reduce using rule 143 (empty -> .)
    OPENPAREN       reduce using rule 143 (empty -> .)

  ! ADDITION        [ reduce using rule 143 (empty -> .) ]
  ! SUBSTRACTION    [ reduce using rule 143 (empty -> .) ]

    exp1                           shift and go to state 53
    empty                          shift and go to state 56

state 33

    (139) term -> factor . term1
    (140) term1 -> . MULTIPLICATION term
    (141) term1 -> . DIVISION term
    (142) term1 -> . empty
    (143) empty -> .

    MULTIPLICATION  shift and go to state 58
    DIVISION        shift and go to state 59
    ADDITION        reduce using rule 143 (empty -> .)
    SUBSTRACTION    reduce using rule 143 (empty -> .)
    SEMICOLON       reduce using rule 143 (empty -> .)
    GREATER         reduce using rule 143 (empty -> .)
    LESS            reduce using rule 143 (empty -> .)
    NOTEQUAL        reduce using rule 143 (empty -> .)
    ISEQUAL         reduce using rule 143 (empty -> .)
    CLOSEPAREN      reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    CLOSEBRACKET    reduce using rule 143 (empty -> .)
    OPENBRACES      reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    ID              reduce using rule 143 (empty -> .)
    CTEINT          reduce using rule 143 (empty -> .)
    CTEFLOAT        reduce using rule 143 (empty -> .)
    CTECHAR         reduce using rule 143 (empty -> .)
    OPENPAREN       reduce using rule 143 (empty -> .)

    term1                          shift and go to state 57
    empty                          shift and go to state 60

state 34

    (133) factor -> vcte .

    MULTIPLICATION  reduce using rule 133 (factor -> vcte .)
    DIVISION        reduce using rule 133 (factor -> vcte .)
    ADDITION        reduce using rule 133 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 133 (factor -> vcte .)
    SEMICOLON       reduce using rule 133 (factor -> vcte .)
    GREATER         reduce using rule 133 (factor -> vcte .)
    LESS            reduce using rule 133 (factor -> vcte .)
    NOTEQUAL        reduce using rule 133 (factor -> vcte .)
    ISEQUAL         reduce using rule 133 (factor -> vcte .)
    CLOSEPAREN      reduce using rule 133 (factor -> vcte .)
    COMMA           reduce using rule 133 (factor -> vcte .)
    CLOSEBRACKET    reduce using rule 133 (factor -> vcte .)
    OPENBRACES      reduce using rule 133 (factor -> vcte .)
    OR              reduce using rule 133 (factor -> vcte .)
    AND             reduce using rule 133 (factor -> vcte .)
    ID              reduce using rule 133 (factor -> vcte .)
    CTEINT          reduce using rule 133 (factor -> vcte .)
    CTEFLOAT        reduce using rule 133 (factor -> vcte .)
    CTECHAR         reduce using rule 133 (factor -> vcte .)
    OPENPAREN       reduce using rule 133 (factor -> vcte .)


state 35

    (134) factor -> factor1 .

    MULTIPLICATION  reduce using rule 134 (factor -> factor1 .)
    DIVISION        reduce using rule 134 (factor -> factor1 .)
    ADDITION        reduce using rule 134 (factor -> factor1 .)
    SUBSTRACTION    reduce using rule 134 (factor -> factor1 .)
    SEMICOLON       reduce using rule 134 (factor -> factor1 .)
    GREATER         reduce using rule 134 (factor -> factor1 .)
    LESS            reduce using rule 134 (factor -> factor1 .)
    NOTEQUAL        reduce using rule 134 (factor -> factor1 .)
    ISEQUAL         reduce using rule 134 (factor -> factor1 .)
    CLOSEPAREN      reduce using rule 134 (factor -> factor1 .)
    COMMA           reduce using rule 134 (factor -> factor1 .)
    CLOSEBRACKET    reduce using rule 134 (factor -> factor1 .)
    OPENBRACES      reduce using rule 134 (factor -> factor1 .)
    OR              reduce using rule 134 (factor -> factor1 .)
    AND             reduce using rule 134 (factor -> factor1 .)
    ID              reduce using rule 134 (factor -> factor1 .)
    CTEINT          reduce using rule 134 (factor -> factor1 .)
    CTEFLOAT        reduce using rule 134 (factor -> factor1 .)
    CTECHAR         reduce using rule 134 (factor -> factor1 .)
    OPENPAREN       reduce using rule 134 (factor -> factor1 .)


state 36

    (56) vcte -> cte .

    MULTIPLICATION  reduce using rule 56 (vcte -> cte .)
    DIVISION        reduce using rule 56 (vcte -> cte .)
    ADDITION        reduce using rule 56 (vcte -> cte .)
    SUBSTRACTION    reduce using rule 56 (vcte -> cte .)
    SEMICOLON       reduce using rule 56 (vcte -> cte .)
    GREATER         reduce using rule 56 (vcte -> cte .)
    LESS            reduce using rule 56 (vcte -> cte .)
    NOTEQUAL        reduce using rule 56 (vcte -> cte .)
    ISEQUAL         reduce using rule 56 (vcte -> cte .)
    CLOSEPAREN      reduce using rule 56 (vcte -> cte .)
    COMMA           reduce using rule 56 (vcte -> cte .)
    CLOSEBRACKET    reduce using rule 56 (vcte -> cte .)
    OPENBRACES      reduce using rule 56 (vcte -> cte .)
    OR              reduce using rule 56 (vcte -> cte .)
    AND             reduce using rule 56 (vcte -> cte .)
    ID              reduce using rule 56 (vcte -> cte .)
    CTEINT          reduce using rule 56 (vcte -> cte .)
    CTEFLOAT        reduce using rule 56 (vcte -> cte .)
    CTECHAR         reduce using rule 56 (vcte -> cte .)
    OPENPAREN       reduce using rule 56 (vcte -> cte .)


state 37

    (57) vcte -> ID . vcte1
    (91) funCall -> ID . OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (59) vcte1 -> . OPENBRACKET exp CLOSEBRACKET vcte3
    (60) vcte1 -> . empty
    (143) empty -> .

  ! shift/reduce conflict for OPENPAREN resolved as shift
    OPENPAREN       shift and go to state 62
    OPENBRACKET     shift and go to state 63
    MULTIPLICATION  reduce using rule 143 (empty -> .)
    DIVISION        reduce using rule 143 (empty -> .)
    ADDITION        reduce using rule 143 (empty -> .)
    SUBSTRACTION    reduce using rule 143 (empty -> .)
    SEMICOLON       reduce using rule 143 (empty -> .)
    GREATER         reduce using rule 143 (empty -> .)
    LESS            reduce using rule 143 (empty -> .)
    NOTEQUAL        reduce using rule 143 (empty -> .)
    ISEQUAL         reduce using rule 143 (empty -> .)
    CLOSEPAREN      reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    CLOSEBRACKET    reduce using rule 143 (empty -> .)
    OPENBRACES      reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    ID              reduce using rule 143 (empty -> .)
    CTEINT          reduce using rule 143 (empty -> .)
    CTEFLOAT        reduce using rule 143 (empty -> .)
    CTECHAR         reduce using rule 143 (empty -> .)

  ! OPENPAREN       [ reduce using rule 143 (empty -> .) ]

    vcte1                          shift and go to state 61
    empty                          shift and go to state 64

state 38

    (58) vcte -> funCall .

    MULTIPLICATION  reduce using rule 58 (vcte -> funCall .)
    DIVISION        reduce using rule 58 (vcte -> funCall .)
    ADDITION        reduce using rule 58 (vcte -> funCall .)
    SUBSTRACTION    reduce using rule 58 (vcte -> funCall .)
    SEMICOLON       reduce using rule 58 (vcte -> funCall .)
    GREATER         reduce using rule 58 (vcte -> funCall .)
    LESS            reduce using rule 58 (vcte -> funCall .)
    NOTEQUAL        reduce using rule 58 (vcte -> funCall .)
    ISEQUAL         reduce using rule 58 (vcte -> funCall .)
    CLOSEPAREN      reduce using rule 58 (vcte -> funCall .)
    COMMA           reduce using rule 58 (vcte -> funCall .)
    CLOSEBRACKET    reduce using rule 58 (vcte -> funCall .)
    OPENBRACES      reduce using rule 58 (vcte -> funCall .)
    OR              reduce using rule 58 (vcte -> funCall .)
    AND             reduce using rule 58 (vcte -> funCall .)
    ID              reduce using rule 58 (vcte -> funCall .)
    CTEINT          reduce using rule 58 (vcte -> funCall .)
    CTEFLOAT        reduce using rule 58 (vcte -> funCall .)
    CTECHAR         reduce using rule 58 (vcte -> funCall .)
    OPENPAREN       reduce using rule 58 (vcte -> funCall .)


state 39

    (135) factor1 -> factor2 . vcte
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON

    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43

    vcte                           shift and go to state 65
    cte                            shift and go to state 36
    funCall                        shift and go to state 38

state 40

    (136) factor1 -> openP . expression closeP
    (69) expression -> . exp expression1
    (127) exp -> . term exp1
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    openP                          shift and go to state 40
    expression                     shift and go to state 66
    exp                            shift and go to state 67
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39

state 41

    (63) cte -> CTEINT .

    MULTIPLICATION  reduce using rule 63 (cte -> CTEINT .)
    DIVISION        reduce using rule 63 (cte -> CTEINT .)
    ADDITION        reduce using rule 63 (cte -> CTEINT .)
    SUBSTRACTION    reduce using rule 63 (cte -> CTEINT .)
    SEMICOLON       reduce using rule 63 (cte -> CTEINT .)
    GREATER         reduce using rule 63 (cte -> CTEINT .)
    LESS            reduce using rule 63 (cte -> CTEINT .)
    NOTEQUAL        reduce using rule 63 (cte -> CTEINT .)
    ISEQUAL         reduce using rule 63 (cte -> CTEINT .)
    CLOSEPAREN      reduce using rule 63 (cte -> CTEINT .)
    COMMA           reduce using rule 63 (cte -> CTEINT .)
    CLOSEBRACKET    reduce using rule 63 (cte -> CTEINT .)
    OPENBRACES      reduce using rule 63 (cte -> CTEINT .)
    OR              reduce using rule 63 (cte -> CTEINT .)
    AND             reduce using rule 63 (cte -> CTEINT .)
    ID              reduce using rule 63 (cte -> CTEINT .)
    CTEINT          reduce using rule 63 (cte -> CTEINT .)
    CTEFLOAT        reduce using rule 63 (cte -> CTEINT .)
    CTECHAR         reduce using rule 63 (cte -> CTEINT .)
    OPENPAREN       reduce using rule 63 (cte -> CTEINT .)


state 42

    (64) cte -> CTEFLOAT .

    MULTIPLICATION  reduce using rule 64 (cte -> CTEFLOAT .)
    DIVISION        reduce using rule 64 (cte -> CTEFLOAT .)
    ADDITION        reduce using rule 64 (cte -> CTEFLOAT .)
    SUBSTRACTION    reduce using rule 64 (cte -> CTEFLOAT .)
    SEMICOLON       reduce using rule 64 (cte -> CTEFLOAT .)
    GREATER         reduce using rule 64 (cte -> CTEFLOAT .)
    LESS            reduce using rule 64 (cte -> CTEFLOAT .)
    NOTEQUAL        reduce using rule 64 (cte -> CTEFLOAT .)
    ISEQUAL         reduce using rule 64 (cte -> CTEFLOAT .)
    CLOSEPAREN      reduce using rule 64 (cte -> CTEFLOAT .)
    COMMA           reduce using rule 64 (cte -> CTEFLOAT .)
    CLOSEBRACKET    reduce using rule 64 (cte -> CTEFLOAT .)
    OPENBRACES      reduce using rule 64 (cte -> CTEFLOAT .)
    OR              reduce using rule 64 (cte -> CTEFLOAT .)
    AND             reduce using rule 64 (cte -> CTEFLOAT .)
    ID              reduce using rule 64 (cte -> CTEFLOAT .)
    CTEINT          reduce using rule 64 (cte -> CTEFLOAT .)
    CTEFLOAT        reduce using rule 64 (cte -> CTEFLOAT .)
    CTECHAR         reduce using rule 64 (cte -> CTEFLOAT .)
    OPENPAREN       reduce using rule 64 (cte -> CTEFLOAT .)


state 43

    (65) cte -> CTECHAR .

    MULTIPLICATION  reduce using rule 65 (cte -> CTECHAR .)
    DIVISION        reduce using rule 65 (cte -> CTECHAR .)
    ADDITION        reduce using rule 65 (cte -> CTECHAR .)
    SUBSTRACTION    reduce using rule 65 (cte -> CTECHAR .)
    SEMICOLON       reduce using rule 65 (cte -> CTECHAR .)
    GREATER         reduce using rule 65 (cte -> CTECHAR .)
    LESS            reduce using rule 65 (cte -> CTECHAR .)
    NOTEQUAL        reduce using rule 65 (cte -> CTECHAR .)
    ISEQUAL         reduce using rule 65 (cte -> CTECHAR .)
    CLOSEPAREN      reduce using rule 65 (cte -> CTECHAR .)
    COMMA           reduce using rule 65 (cte -> CTECHAR .)
    CLOSEBRACKET    reduce using rule 65 (cte -> CTECHAR .)
    OPENBRACES      reduce using rule 65 (cte -> CTECHAR .)
    OR              reduce using rule 65 (cte -> CTECHAR .)
    AND             reduce using rule 65 (cte -> CTECHAR .)
    ID              reduce using rule 65 (cte -> CTECHAR .)
    CTEINT          reduce using rule 65 (cte -> CTECHAR .)
    CTEFLOAT        reduce using rule 65 (cte -> CTECHAR .)
    CTECHAR         reduce using rule 65 (cte -> CTECHAR .)
    OPENPAREN       reduce using rule 65 (cte -> CTECHAR .)


state 44

    (131) openP -> OPENPAREN .

    ID              reduce using rule 131 (openP -> OPENPAREN .)
    CTEINT          reduce using rule 131 (openP -> OPENPAREN .)
    CTEFLOAT        reduce using rule 131 (openP -> OPENPAREN .)
    CTECHAR         reduce using rule 131 (openP -> OPENPAREN .)
    ADDITION        reduce using rule 131 (openP -> OPENPAREN .)
    SUBSTRACTION    reduce using rule 131 (openP -> OPENPAREN .)
    OPENPAREN       reduce using rule 131 (openP -> OPENPAREN .)


state 45

    (137) factor2 -> ADDITION .

    ID              reduce using rule 137 (factor2 -> ADDITION .)
    CTEINT          reduce using rule 137 (factor2 -> ADDITION .)
    CTEFLOAT        reduce using rule 137 (factor2 -> ADDITION .)
    CTECHAR         reduce using rule 137 (factor2 -> ADDITION .)


state 46

    (138) factor2 -> SUBSTRACTION .

    ID              reduce using rule 138 (factor2 -> SUBSTRACTION .)
    CTEINT          reduce using rule 138 (factor2 -> SUBSTRACTION .)
    CTEFLOAT        reduce using rule 138 (factor2 -> SUBSTRACTION .)
    CTECHAR         reduce using rule 138 (factor2 -> SUBSTRACTION .)


state 47

    (37) vars1 -> OPENBRACKET CTEINT . CLOSEBRACKET vars3

    CLOSEBRACKET    shift and go to state 68


state 48

    (6) star -> MULTIPLICATION OPENBRACES star_vars . star1 CLOSEBRACES
    (7) star1 -> . stmt star1
    (8) star1 -> . empty
    (13) stmt -> . assignment
    (14) stmt -> . condition
    (15) stmt -> . print
    (16) stmt -> . loop
    (17) stmt -> . read
    (18) stmt -> . graphstmt
    (19) stmt -> . graphr
    (20) stmt -> . funCall
    (21) stmt -> . return
    (143) empty -> .
    (49) assignment -> . ID assignment1 EQUALS assignment3 SEMICOLON
    (79) condition -> . IF head body condition1
    (44) print -> . PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
    (11) loop -> . while
    (12) loop -> . for
    (45) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (98) graphstmt -> . graphfig
    (99) graphstmt -> . graphview
    (100) graphstmt -> . graphmove
    (115) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (66) return -> . RETURN return1 SEMICOLON
    (90) while -> . WHILE head body
    (89) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (101) graphfig -> . graphfig1 SEMICOLON
    (118) graphview -> . graphview1 SEMICOLON
    (106) graphmove -> . graphmove1 SEMICOLON
    (102) graphfig1 -> . CIRCLE laRegla2
    (103) graphfig1 -> . SQUARE laRegla2
    (104) graphfig1 -> . TRIANGLE laRegla
    (105) graphfig1 -> . RECTANGLE laRegla
    (119) graphview1 -> . HIDE_STAR
    (120) graphview1 -> . SHOW_STAR
    (121) graphview1 -> . graphview2 exp
    (107) graphmove1 -> . HAND_DOWN
    (108) graphmove1 -> . HAND_UP
    (109) graphmove1 -> . graphmove2
    (122) graphview2 -> . SETXY graphview3
    (123) graphview2 -> . COLOR_STAR
    (124) graphview2 -> . SIZE_STAR
    (110) graphmove2 -> . GO laRegla2
    (111) graphmove2 -> . LEFT laRegla2
    (112) graphmove2 -> . RIGHT laRegla2
    (113) graphmove2 -> . BACK laRegla2
    (114) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 143 (empty -> .)
    ID              shift and go to state 81
    IF              shift and go to state 82
    PRINT           shift and go to state 83
    READ            shift and go to state 86
    REPEAT          shift and go to state 90
    RETURN          shift and go to state 91
    WHILE           shift and go to state 92
    FOR             shift and go to state 93
    CIRCLE          shift and go to state 97
    SQUARE          shift and go to state 98
    TRIANGLE        shift and go to state 99
    RECTANGLE       shift and go to state 100
    HIDE_STAR       shift and go to state 101
    SHOW_STAR       shift and go to state 102
    HAND_DOWN       shift and go to state 104
    HAND_UP         shift and go to state 105
    SETXY           shift and go to state 107
    COLOR_STAR      shift and go to state 108
    SIZE_STAR       shift and go to state 109
    GO              shift and go to state 110
    LEFT            shift and go to state 111
    RIGHT           shift and go to state 112
    BACK            shift and go to state 113
    ARC             shift and go to state 114

    star1                          shift and go to state 69
    stmt                           shift and go to state 70
    empty                          shift and go to state 71
    assignment                     shift and go to state 72
    condition                      shift and go to state 73
    print                          shift and go to state 74
    loop                           shift and go to state 75
    read                           shift and go to state 76
    graphstmt                      shift and go to state 77
    graphr                         shift and go to state 78
    funCall                        shift and go to state 79
    return                         shift and go to state 80
    while                          shift and go to state 84
    for                            shift and go to state 85
    graphfig                       shift and go to state 87
    graphview                      shift and go to state 88
    graphmove                      shift and go to state 89
    graphfig1                      shift and go to state 94
    graphview1                     shift and go to state 95
    graphmove1                     shift and go to state 96
    graphview2                     shift and go to state 103
    graphmove2                     shift and go to state 106

state 49

    (9) star_vars -> vars . star_vars
    (9) star_vars -> . vars star_vars
    (10) star_vars -> . empty
    (35) vars -> . type ID vars1 SEMICOLON
    (143) empty -> .
    (41) type -> . INT
    (42) type -> . FLOAT
    (43) type -> . CHAR

    ID              reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    PRINT           reduce using rule 143 (empty -> .)
    READ            reduce using rule 143 (empty -> .)
    REPEAT          reduce using rule 143 (empty -> .)
    RETURN          reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    FOR             reduce using rule 143 (empty -> .)
    CIRCLE          reduce using rule 143 (empty -> .)
    SQUARE          reduce using rule 143 (empty -> .)
    TRIANGLE        reduce using rule 143 (empty -> .)
    RECTANGLE       reduce using rule 143 (empty -> .)
    HIDE_STAR       reduce using rule 143 (empty -> .)
    SHOW_STAR       reduce using rule 143 (empty -> .)
    HAND_DOWN       reduce using rule 143 (empty -> .)
    HAND_UP         reduce using rule 143 (empty -> .)
    SETXY           reduce using rule 143 (empty -> .)
    COLOR_STAR      reduce using rule 143 (empty -> .)
    SIZE_STAR       reduce using rule 143 (empty -> .)
    GO              reduce using rule 143 (empty -> .)
    LEFT            reduce using rule 143 (empty -> .)
    RIGHT           reduce using rule 143 (empty -> .)
    BACK            reduce using rule 143 (empty -> .)
    ARC             reduce using rule 143 (empty -> .)
    CLOSEBRACES     reduce using rule 143 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    vars                           shift and go to state 49
    star_vars                      shift and go to state 115
    empty                          shift and go to state 50
    type                           shift and go to state 8

state 50

    (10) star_vars -> empty .

    ID              reduce using rule 10 (star_vars -> empty .)
    IF              reduce using rule 10 (star_vars -> empty .)
    PRINT           reduce using rule 10 (star_vars -> empty .)
    READ            reduce using rule 10 (star_vars -> empty .)
    REPEAT          reduce using rule 10 (star_vars -> empty .)
    RETURN          reduce using rule 10 (star_vars -> empty .)
    WHILE           reduce using rule 10 (star_vars -> empty .)
    FOR             reduce using rule 10 (star_vars -> empty .)
    CIRCLE          reduce using rule 10 (star_vars -> empty .)
    SQUARE          reduce using rule 10 (star_vars -> empty .)
    TRIANGLE        reduce using rule 10 (star_vars -> empty .)
    RECTANGLE       reduce using rule 10 (star_vars -> empty .)
    HIDE_STAR       reduce using rule 10 (star_vars -> empty .)
    SHOW_STAR       reduce using rule 10 (star_vars -> empty .)
    HAND_DOWN       reduce using rule 10 (star_vars -> empty .)
    HAND_UP         reduce using rule 10 (star_vars -> empty .)
    SETXY           reduce using rule 10 (star_vars -> empty .)
    COLOR_STAR      reduce using rule 10 (star_vars -> empty .)
    SIZE_STAR       reduce using rule 10 (star_vars -> empty .)
    GO              reduce using rule 10 (star_vars -> empty .)
    LEFT            reduce using rule 10 (star_vars -> empty .)
    RIGHT           reduce using rule 10 (star_vars -> empty .)
    BACK            reduce using rule 10 (star_vars -> empty .)
    ARC             reduce using rule 10 (star_vars -> empty .)
    CLOSEBRACES     reduce using rule 10 (star_vars -> empty .)


state 51

    (22) function -> FUN function1 ID function2 . inicia_fun fun_vars function4 termina_fun
    (25) inicia_fun -> . OPENBRACES

    OPENBRACES      shift and go to state 117

    inicia_fun                     shift and go to state 116

state 52

    (27) function2 -> OPENPAREN . function3 CLOSEPAREN
    (28) function3 -> . type ID function5
    (29) function3 -> . empty
    (41) type -> . INT
    (42) type -> . FLOAT
    (43) type -> . CHAR
    (143) empty -> .

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    CLOSEPAREN      reduce using rule 143 (empty -> .)

    function3                      shift and go to state 118
    type                           shift and go to state 119
    empty                          shift and go to state 120

state 53

    (127) exp -> term exp1 .

    SEMICOLON       reduce using rule 127 (exp -> term exp1 .)
    GREATER         reduce using rule 127 (exp -> term exp1 .)
    LESS            reduce using rule 127 (exp -> term exp1 .)
    NOTEQUAL        reduce using rule 127 (exp -> term exp1 .)
    ISEQUAL         reduce using rule 127 (exp -> term exp1 .)
    CLOSEPAREN      reduce using rule 127 (exp -> term exp1 .)
    COMMA           reduce using rule 127 (exp -> term exp1 .)
    CLOSEBRACKET    reduce using rule 127 (exp -> term exp1 .)
    OPENBRACES      reduce using rule 127 (exp -> term exp1 .)
    OR              reduce using rule 127 (exp -> term exp1 .)
    AND             reduce using rule 127 (exp -> term exp1 .)
    ID              reduce using rule 127 (exp -> term exp1 .)
    CTEINT          reduce using rule 127 (exp -> term exp1 .)
    CTEFLOAT        reduce using rule 127 (exp -> term exp1 .)
    CTECHAR         reduce using rule 127 (exp -> term exp1 .)
    ADDITION        reduce using rule 127 (exp -> term exp1 .)
    SUBSTRACTION    reduce using rule 127 (exp -> term exp1 .)
    OPENPAREN       reduce using rule 127 (exp -> term exp1 .)


state 54

    (128) exp1 -> ADDITION . exp
    (127) exp -> . term exp1
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    exp                            shift and go to state 121
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 55

    (129) exp1 -> SUBSTRACTION . exp
    (127) exp -> . term exp1
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    exp                            shift and go to state 122
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 56

    (130) exp1 -> empty .

    SEMICOLON       reduce using rule 130 (exp1 -> empty .)
    GREATER         reduce using rule 130 (exp1 -> empty .)
    LESS            reduce using rule 130 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 130 (exp1 -> empty .)
    ISEQUAL         reduce using rule 130 (exp1 -> empty .)
    CLOSEPAREN      reduce using rule 130 (exp1 -> empty .)
    COMMA           reduce using rule 130 (exp1 -> empty .)
    CLOSEBRACKET    reduce using rule 130 (exp1 -> empty .)
    OPENBRACES      reduce using rule 130 (exp1 -> empty .)
    OR              reduce using rule 130 (exp1 -> empty .)
    AND             reduce using rule 130 (exp1 -> empty .)
    ID              reduce using rule 130 (exp1 -> empty .)
    CTEINT          reduce using rule 130 (exp1 -> empty .)
    CTEFLOAT        reduce using rule 130 (exp1 -> empty .)
    CTECHAR         reduce using rule 130 (exp1 -> empty .)
    ADDITION        reduce using rule 130 (exp1 -> empty .)
    SUBSTRACTION    reduce using rule 130 (exp1 -> empty .)
    OPENPAREN       reduce using rule 130 (exp1 -> empty .)


state 57

    (139) term -> factor term1 .

    ADDITION        reduce using rule 139 (term -> factor term1 .)
    SUBSTRACTION    reduce using rule 139 (term -> factor term1 .)
    SEMICOLON       reduce using rule 139 (term -> factor term1 .)
    GREATER         reduce using rule 139 (term -> factor term1 .)
    LESS            reduce using rule 139 (term -> factor term1 .)
    NOTEQUAL        reduce using rule 139 (term -> factor term1 .)
    ISEQUAL         reduce using rule 139 (term -> factor term1 .)
    CLOSEPAREN      reduce using rule 139 (term -> factor term1 .)
    COMMA           reduce using rule 139 (term -> factor term1 .)
    CLOSEBRACKET    reduce using rule 139 (term -> factor term1 .)
    OPENBRACES      reduce using rule 139 (term -> factor term1 .)
    OR              reduce using rule 139 (term -> factor term1 .)
    AND             reduce using rule 139 (term -> factor term1 .)
    ID              reduce using rule 139 (term -> factor term1 .)
    CTEINT          reduce using rule 139 (term -> factor term1 .)
    CTEFLOAT        reduce using rule 139 (term -> factor term1 .)
    CTECHAR         reduce using rule 139 (term -> factor term1 .)
    OPENPAREN       reduce using rule 139 (term -> factor term1 .)


state 58

    (140) term1 -> MULTIPLICATION . term
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    term                           shift and go to state 123
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 59

    (141) term1 -> DIVISION . term
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    term                           shift and go to state 124
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 60

    (142) term1 -> empty .

    ADDITION        reduce using rule 142 (term1 -> empty .)
    SUBSTRACTION    reduce using rule 142 (term1 -> empty .)
    SEMICOLON       reduce using rule 142 (term1 -> empty .)
    GREATER         reduce using rule 142 (term1 -> empty .)
    LESS            reduce using rule 142 (term1 -> empty .)
    NOTEQUAL        reduce using rule 142 (term1 -> empty .)
    ISEQUAL         reduce using rule 142 (term1 -> empty .)
    CLOSEPAREN      reduce using rule 142 (term1 -> empty .)
    COMMA           reduce using rule 142 (term1 -> empty .)
    CLOSEBRACKET    reduce using rule 142 (term1 -> empty .)
    OPENBRACES      reduce using rule 142 (term1 -> empty .)
    OR              reduce using rule 142 (term1 -> empty .)
    AND             reduce using rule 142 (term1 -> empty .)
    ID              reduce using rule 142 (term1 -> empty .)
    CTEINT          reduce using rule 142 (term1 -> empty .)
    CTEFLOAT        reduce using rule 142 (term1 -> empty .)
    CTECHAR         reduce using rule 142 (term1 -> empty .)
    OPENPAREN       reduce using rule 142 (term1 -> empty .)


state 61

    (57) vcte -> ID vcte1 .

    MULTIPLICATION  reduce using rule 57 (vcte -> ID vcte1 .)
    DIVISION        reduce using rule 57 (vcte -> ID vcte1 .)
    ADDITION        reduce using rule 57 (vcte -> ID vcte1 .)
    SUBSTRACTION    reduce using rule 57 (vcte -> ID vcte1 .)
    SEMICOLON       reduce using rule 57 (vcte -> ID vcte1 .)
    GREATER         reduce using rule 57 (vcte -> ID vcte1 .)
    LESS            reduce using rule 57 (vcte -> ID vcte1 .)
    NOTEQUAL        reduce using rule 57 (vcte -> ID vcte1 .)
    ISEQUAL         reduce using rule 57 (vcte -> ID vcte1 .)
    CLOSEPAREN      reduce using rule 57 (vcte -> ID vcte1 .)
    COMMA           reduce using rule 57 (vcte -> ID vcte1 .)
    CLOSEBRACKET    reduce using rule 57 (vcte -> ID vcte1 .)
    OPENBRACES      reduce using rule 57 (vcte -> ID vcte1 .)
    OR              reduce using rule 57 (vcte -> ID vcte1 .)
    AND             reduce using rule 57 (vcte -> ID vcte1 .)
    ID              reduce using rule 57 (vcte -> ID vcte1 .)
    CTEINT          reduce using rule 57 (vcte -> ID vcte1 .)
    CTEFLOAT        reduce using rule 57 (vcte -> ID vcte1 .)
    CTECHAR         reduce using rule 57 (vcte -> ID vcte1 .)
    OPENPAREN       reduce using rule 57 (vcte -> ID vcte1 .)


state 62

    (91) funCall -> ID OPENPAREN . funCall2 CLOSEPAREN SEMICOLON
    (92) funCall2 -> . exp funCall3
    (93) funCall2 -> . empty
    (127) exp -> . term exp1
    (143) empty -> .
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    CLOSEPAREN      reduce using rule 143 (empty -> .)
    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    funCall2                       shift and go to state 125
    exp                            shift and go to state 126
    empty                          shift and go to state 127
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 63

    (59) vcte1 -> OPENBRACKET . exp CLOSEBRACKET vcte3
    (127) exp -> . term exp1
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    exp                            shift and go to state 128
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 64

    (60) vcte1 -> empty .

    MULTIPLICATION  reduce using rule 60 (vcte1 -> empty .)
    DIVISION        reduce using rule 60 (vcte1 -> empty .)
    ADDITION        reduce using rule 60 (vcte1 -> empty .)
    SUBSTRACTION    reduce using rule 60 (vcte1 -> empty .)
    SEMICOLON       reduce using rule 60 (vcte1 -> empty .)
    GREATER         reduce using rule 60 (vcte1 -> empty .)
    LESS            reduce using rule 60 (vcte1 -> empty .)
    NOTEQUAL        reduce using rule 60 (vcte1 -> empty .)
    ISEQUAL         reduce using rule 60 (vcte1 -> empty .)
    CLOSEPAREN      reduce using rule 60 (vcte1 -> empty .)
    COMMA           reduce using rule 60 (vcte1 -> empty .)
    CLOSEBRACKET    reduce using rule 60 (vcte1 -> empty .)
    OPENBRACES      reduce using rule 60 (vcte1 -> empty .)
    OR              reduce using rule 60 (vcte1 -> empty .)
    AND             reduce using rule 60 (vcte1 -> empty .)
    ID              reduce using rule 60 (vcte1 -> empty .)
    CTEINT          reduce using rule 60 (vcte1 -> empty .)
    CTEFLOAT        reduce using rule 60 (vcte1 -> empty .)
    CTECHAR         reduce using rule 60 (vcte1 -> empty .)
    OPENPAREN       reduce using rule 60 (vcte1 -> empty .)


state 65

    (135) factor1 -> factor2 vcte .

    MULTIPLICATION  reduce using rule 135 (factor1 -> factor2 vcte .)
    DIVISION        reduce using rule 135 (factor1 -> factor2 vcte .)
    ADDITION        reduce using rule 135 (factor1 -> factor2 vcte .)
    SUBSTRACTION    reduce using rule 135 (factor1 -> factor2 vcte .)
    SEMICOLON       reduce using rule 135 (factor1 -> factor2 vcte .)
    GREATER         reduce using rule 135 (factor1 -> factor2 vcte .)
    LESS            reduce using rule 135 (factor1 -> factor2 vcte .)
    NOTEQUAL        reduce using rule 135 (factor1 -> factor2 vcte .)
    ISEQUAL         reduce using rule 135 (factor1 -> factor2 vcte .)
    CLOSEPAREN      reduce using rule 135 (factor1 -> factor2 vcte .)
    COMMA           reduce using rule 135 (factor1 -> factor2 vcte .)
    CLOSEBRACKET    reduce using rule 135 (factor1 -> factor2 vcte .)
    OPENBRACES      reduce using rule 135 (factor1 -> factor2 vcte .)
    OR              reduce using rule 135 (factor1 -> factor2 vcte .)
    AND             reduce using rule 135 (factor1 -> factor2 vcte .)
    ID              reduce using rule 135 (factor1 -> factor2 vcte .)
    CTEINT          reduce using rule 135 (factor1 -> factor2 vcte .)
    CTEFLOAT        reduce using rule 135 (factor1 -> factor2 vcte .)
    CTECHAR         reduce using rule 135 (factor1 -> factor2 vcte .)
    OPENPAREN       reduce using rule 135 (factor1 -> factor2 vcte .)


state 66

    (136) factor1 -> openP expression . closeP
    (132) closeP -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 130

    closeP                         shift and go to state 129

state 67

    (69) expression -> exp . expression1
    (70) expression1 -> . loper exp
    (71) expression1 -> . empty
    (72) loper -> . GREATER
    (73) loper -> . LESS
    (74) loper -> . NOTEQUAL
    (75) loper -> . ISEQUAL
    (143) empty -> .

    GREATER         shift and go to state 134
    LESS            shift and go to state 135
    NOTEQUAL        shift and go to state 136
    ISEQUAL         shift and go to state 137
    CLOSEPAREN      reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)

    expression1                    shift and go to state 131
    loper                          shift and go to state 132
    empty                          shift and go to state 133

state 68

    (37) vars1 -> OPENBRACKET CTEINT CLOSEBRACKET . vars3
    (39) vars3 -> . OPENBRACKET CTEINT CLOSEBRACKET
    (40) vars3 -> . empty
    (143) empty -> .

    OPENBRACKET     shift and go to state 138
    SEMICOLON       reduce using rule 143 (empty -> .)

    vars3                          shift and go to state 139
    empty                          shift and go to state 140

state 69

    (6) star -> MULTIPLICATION OPENBRACES star_vars star1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 141


state 70

    (7) star1 -> stmt . star1
    (7) star1 -> . stmt star1
    (8) star1 -> . empty
    (13) stmt -> . assignment
    (14) stmt -> . condition
    (15) stmt -> . print
    (16) stmt -> . loop
    (17) stmt -> . read
    (18) stmt -> . graphstmt
    (19) stmt -> . graphr
    (20) stmt -> . funCall
    (21) stmt -> . return
    (143) empty -> .
    (49) assignment -> . ID assignment1 EQUALS assignment3 SEMICOLON
    (79) condition -> . IF head body condition1
    (44) print -> . PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
    (11) loop -> . while
    (12) loop -> . for
    (45) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (98) graphstmt -> . graphfig
    (99) graphstmt -> . graphview
    (100) graphstmt -> . graphmove
    (115) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (66) return -> . RETURN return1 SEMICOLON
    (90) while -> . WHILE head body
    (89) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (101) graphfig -> . graphfig1 SEMICOLON
    (118) graphview -> . graphview1 SEMICOLON
    (106) graphmove -> . graphmove1 SEMICOLON
    (102) graphfig1 -> . CIRCLE laRegla2
    (103) graphfig1 -> . SQUARE laRegla2
    (104) graphfig1 -> . TRIANGLE laRegla
    (105) graphfig1 -> . RECTANGLE laRegla
    (119) graphview1 -> . HIDE_STAR
    (120) graphview1 -> . SHOW_STAR
    (121) graphview1 -> . graphview2 exp
    (107) graphmove1 -> . HAND_DOWN
    (108) graphmove1 -> . HAND_UP
    (109) graphmove1 -> . graphmove2
    (122) graphview2 -> . SETXY graphview3
    (123) graphview2 -> . COLOR_STAR
    (124) graphview2 -> . SIZE_STAR
    (110) graphmove2 -> . GO laRegla2
    (111) graphmove2 -> . LEFT laRegla2
    (112) graphmove2 -> . RIGHT laRegla2
    (113) graphmove2 -> . BACK laRegla2
    (114) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 143 (empty -> .)
    ID              shift and go to state 81
    IF              shift and go to state 82
    PRINT           shift and go to state 83
    READ            shift and go to state 86
    REPEAT          shift and go to state 90
    RETURN          shift and go to state 91
    WHILE           shift and go to state 92
    FOR             shift and go to state 93
    CIRCLE          shift and go to state 97
    SQUARE          shift and go to state 98
    TRIANGLE        shift and go to state 99
    RECTANGLE       shift and go to state 100
    HIDE_STAR       shift and go to state 101
    SHOW_STAR       shift and go to state 102
    HAND_DOWN       shift and go to state 104
    HAND_UP         shift and go to state 105
    SETXY           shift and go to state 107
    COLOR_STAR      shift and go to state 108
    SIZE_STAR       shift and go to state 109
    GO              shift and go to state 110
    LEFT            shift and go to state 111
    RIGHT           shift and go to state 112
    BACK            shift and go to state 113
    ARC             shift and go to state 114

    stmt                           shift and go to state 70
    star1                          shift and go to state 142
    empty                          shift and go to state 71
    assignment                     shift and go to state 72
    condition                      shift and go to state 73
    print                          shift and go to state 74
    loop                           shift and go to state 75
    read                           shift and go to state 76
    graphstmt                      shift and go to state 77
    graphr                         shift and go to state 78
    funCall                        shift and go to state 79
    return                         shift and go to state 80
    while                          shift and go to state 84
    for                            shift and go to state 85
    graphfig                       shift and go to state 87
    graphview                      shift and go to state 88
    graphmove                      shift and go to state 89
    graphfig1                      shift and go to state 94
    graphview1                     shift and go to state 95
    graphmove1                     shift and go to state 96
    graphview2                     shift and go to state 103
    graphmove2                     shift and go to state 106

state 71

    (8) star1 -> empty .

    CLOSEBRACES     reduce using rule 8 (star1 -> empty .)


state 72

    (13) stmt -> assignment .

    ID              reduce using rule 13 (stmt -> assignment .)
    IF              reduce using rule 13 (stmt -> assignment .)
    PRINT           reduce using rule 13 (stmt -> assignment .)
    READ            reduce using rule 13 (stmt -> assignment .)
    REPEAT          reduce using rule 13 (stmt -> assignment .)
    RETURN          reduce using rule 13 (stmt -> assignment .)
    WHILE           reduce using rule 13 (stmt -> assignment .)
    FOR             reduce using rule 13 (stmt -> assignment .)
    CIRCLE          reduce using rule 13 (stmt -> assignment .)
    SQUARE          reduce using rule 13 (stmt -> assignment .)
    TRIANGLE        reduce using rule 13 (stmt -> assignment .)
    RECTANGLE       reduce using rule 13 (stmt -> assignment .)
    HIDE_STAR       reduce using rule 13 (stmt -> assignment .)
    SHOW_STAR       reduce using rule 13 (stmt -> assignment .)
    HAND_DOWN       reduce using rule 13 (stmt -> assignment .)
    HAND_UP         reduce using rule 13 (stmt -> assignment .)
    SETXY           reduce using rule 13 (stmt -> assignment .)
    COLOR_STAR      reduce using rule 13 (stmt -> assignment .)
    SIZE_STAR       reduce using rule 13 (stmt -> assignment .)
    GO              reduce using rule 13 (stmt -> assignment .)
    LEFT            reduce using rule 13 (stmt -> assignment .)
    RIGHT           reduce using rule 13 (stmt -> assignment .)
    BACK            reduce using rule 13 (stmt -> assignment .)
    ARC             reduce using rule 13 (stmt -> assignment .)
    CLOSEBRACES     reduce using rule 13 (stmt -> assignment .)


state 73

    (14) stmt -> condition .

    ID              reduce using rule 14 (stmt -> condition .)
    IF              reduce using rule 14 (stmt -> condition .)
    PRINT           reduce using rule 14 (stmt -> condition .)
    READ            reduce using rule 14 (stmt -> condition .)
    REPEAT          reduce using rule 14 (stmt -> condition .)
    RETURN          reduce using rule 14 (stmt -> condition .)
    WHILE           reduce using rule 14 (stmt -> condition .)
    FOR             reduce using rule 14 (stmt -> condition .)
    CIRCLE          reduce using rule 14 (stmt -> condition .)
    SQUARE          reduce using rule 14 (stmt -> condition .)
    TRIANGLE        reduce using rule 14 (stmt -> condition .)
    RECTANGLE       reduce using rule 14 (stmt -> condition .)
    HIDE_STAR       reduce using rule 14 (stmt -> condition .)
    SHOW_STAR       reduce using rule 14 (stmt -> condition .)
    HAND_DOWN       reduce using rule 14 (stmt -> condition .)
    HAND_UP         reduce using rule 14 (stmt -> condition .)
    SETXY           reduce using rule 14 (stmt -> condition .)
    COLOR_STAR      reduce using rule 14 (stmt -> condition .)
    SIZE_STAR       reduce using rule 14 (stmt -> condition .)
    GO              reduce using rule 14 (stmt -> condition .)
    LEFT            reduce using rule 14 (stmt -> condition .)
    RIGHT           reduce using rule 14 (stmt -> condition .)
    BACK            reduce using rule 14 (stmt -> condition .)
    ARC             reduce using rule 14 (stmt -> condition .)
    CLOSEBRACES     reduce using rule 14 (stmt -> condition .)


state 74

    (15) stmt -> print .

    ID              reduce using rule 15 (stmt -> print .)
    IF              reduce using rule 15 (stmt -> print .)
    PRINT           reduce using rule 15 (stmt -> print .)
    READ            reduce using rule 15 (stmt -> print .)
    REPEAT          reduce using rule 15 (stmt -> print .)
    RETURN          reduce using rule 15 (stmt -> print .)
    WHILE           reduce using rule 15 (stmt -> print .)
    FOR             reduce using rule 15 (stmt -> print .)
    CIRCLE          reduce using rule 15 (stmt -> print .)
    SQUARE          reduce using rule 15 (stmt -> print .)
    TRIANGLE        reduce using rule 15 (stmt -> print .)
    RECTANGLE       reduce using rule 15 (stmt -> print .)
    HIDE_STAR       reduce using rule 15 (stmt -> print .)
    SHOW_STAR       reduce using rule 15 (stmt -> print .)
    HAND_DOWN       reduce using rule 15 (stmt -> print .)
    HAND_UP         reduce using rule 15 (stmt -> print .)
    SETXY           reduce using rule 15 (stmt -> print .)
    COLOR_STAR      reduce using rule 15 (stmt -> print .)
    SIZE_STAR       reduce using rule 15 (stmt -> print .)
    GO              reduce using rule 15 (stmt -> print .)
    LEFT            reduce using rule 15 (stmt -> print .)
    RIGHT           reduce using rule 15 (stmt -> print .)
    BACK            reduce using rule 15 (stmt -> print .)
    ARC             reduce using rule 15 (stmt -> print .)
    CLOSEBRACES     reduce using rule 15 (stmt -> print .)


state 75

    (16) stmt -> loop .

    ID              reduce using rule 16 (stmt -> loop .)
    IF              reduce using rule 16 (stmt -> loop .)
    PRINT           reduce using rule 16 (stmt -> loop .)
    READ            reduce using rule 16 (stmt -> loop .)
    REPEAT          reduce using rule 16 (stmt -> loop .)
    RETURN          reduce using rule 16 (stmt -> loop .)
    WHILE           reduce using rule 16 (stmt -> loop .)
    FOR             reduce using rule 16 (stmt -> loop .)
    CIRCLE          reduce using rule 16 (stmt -> loop .)
    SQUARE          reduce using rule 16 (stmt -> loop .)
    TRIANGLE        reduce using rule 16 (stmt -> loop .)
    RECTANGLE       reduce using rule 16 (stmt -> loop .)
    HIDE_STAR       reduce using rule 16 (stmt -> loop .)
    SHOW_STAR       reduce using rule 16 (stmt -> loop .)
    HAND_DOWN       reduce using rule 16 (stmt -> loop .)
    HAND_UP         reduce using rule 16 (stmt -> loop .)
    SETXY           reduce using rule 16 (stmt -> loop .)
    COLOR_STAR      reduce using rule 16 (stmt -> loop .)
    SIZE_STAR       reduce using rule 16 (stmt -> loop .)
    GO              reduce using rule 16 (stmt -> loop .)
    LEFT            reduce using rule 16 (stmt -> loop .)
    RIGHT           reduce using rule 16 (stmt -> loop .)
    BACK            reduce using rule 16 (stmt -> loop .)
    ARC             reduce using rule 16 (stmt -> loop .)
    CLOSEBRACES     reduce using rule 16 (stmt -> loop .)


state 76

    (17) stmt -> read .

    ID              reduce using rule 17 (stmt -> read .)
    IF              reduce using rule 17 (stmt -> read .)
    PRINT           reduce using rule 17 (stmt -> read .)
    READ            reduce using rule 17 (stmt -> read .)
    REPEAT          reduce using rule 17 (stmt -> read .)
    RETURN          reduce using rule 17 (stmt -> read .)
    WHILE           reduce using rule 17 (stmt -> read .)
    FOR             reduce using rule 17 (stmt -> read .)
    CIRCLE          reduce using rule 17 (stmt -> read .)
    SQUARE          reduce using rule 17 (stmt -> read .)
    TRIANGLE        reduce using rule 17 (stmt -> read .)
    RECTANGLE       reduce using rule 17 (stmt -> read .)
    HIDE_STAR       reduce using rule 17 (stmt -> read .)
    SHOW_STAR       reduce using rule 17 (stmt -> read .)
    HAND_DOWN       reduce using rule 17 (stmt -> read .)
    HAND_UP         reduce using rule 17 (stmt -> read .)
    SETXY           reduce using rule 17 (stmt -> read .)
    COLOR_STAR      reduce using rule 17 (stmt -> read .)
    SIZE_STAR       reduce using rule 17 (stmt -> read .)
    GO              reduce using rule 17 (stmt -> read .)
    LEFT            reduce using rule 17 (stmt -> read .)
    RIGHT           reduce using rule 17 (stmt -> read .)
    BACK            reduce using rule 17 (stmt -> read .)
    ARC             reduce using rule 17 (stmt -> read .)
    CLOSEBRACES     reduce using rule 17 (stmt -> read .)


state 77

    (18) stmt -> graphstmt .

    ID              reduce using rule 18 (stmt -> graphstmt .)
    IF              reduce using rule 18 (stmt -> graphstmt .)
    PRINT           reduce using rule 18 (stmt -> graphstmt .)
    READ            reduce using rule 18 (stmt -> graphstmt .)
    REPEAT          reduce using rule 18 (stmt -> graphstmt .)
    RETURN          reduce using rule 18 (stmt -> graphstmt .)
    WHILE           reduce using rule 18 (stmt -> graphstmt .)
    FOR             reduce using rule 18 (stmt -> graphstmt .)
    CIRCLE          reduce using rule 18 (stmt -> graphstmt .)
    SQUARE          reduce using rule 18 (stmt -> graphstmt .)
    TRIANGLE        reduce using rule 18 (stmt -> graphstmt .)
    RECTANGLE       reduce using rule 18 (stmt -> graphstmt .)
    HIDE_STAR       reduce using rule 18 (stmt -> graphstmt .)
    SHOW_STAR       reduce using rule 18 (stmt -> graphstmt .)
    HAND_DOWN       reduce using rule 18 (stmt -> graphstmt .)
    HAND_UP         reduce using rule 18 (stmt -> graphstmt .)
    SETXY           reduce using rule 18 (stmt -> graphstmt .)
    COLOR_STAR      reduce using rule 18 (stmt -> graphstmt .)
    SIZE_STAR       reduce using rule 18 (stmt -> graphstmt .)
    GO              reduce using rule 18 (stmt -> graphstmt .)
    LEFT            reduce using rule 18 (stmt -> graphstmt .)
    RIGHT           reduce using rule 18 (stmt -> graphstmt .)
    BACK            reduce using rule 18 (stmt -> graphstmt .)
    ARC             reduce using rule 18 (stmt -> graphstmt .)
    CLOSEBRACES     reduce using rule 18 (stmt -> graphstmt .)


state 78

    (19) stmt -> graphr .

    ID              reduce using rule 19 (stmt -> graphr .)
    IF              reduce using rule 19 (stmt -> graphr .)
    PRINT           reduce using rule 19 (stmt -> graphr .)
    READ            reduce using rule 19 (stmt -> graphr .)
    REPEAT          reduce using rule 19 (stmt -> graphr .)
    RETURN          reduce using rule 19 (stmt -> graphr .)
    WHILE           reduce using rule 19 (stmt -> graphr .)
    FOR             reduce using rule 19 (stmt -> graphr .)
    CIRCLE          reduce using rule 19 (stmt -> graphr .)
    SQUARE          reduce using rule 19 (stmt -> graphr .)
    TRIANGLE        reduce using rule 19 (stmt -> graphr .)
    RECTANGLE       reduce using rule 19 (stmt -> graphr .)
    HIDE_STAR       reduce using rule 19 (stmt -> graphr .)
    SHOW_STAR       reduce using rule 19 (stmt -> graphr .)
    HAND_DOWN       reduce using rule 19 (stmt -> graphr .)
    HAND_UP         reduce using rule 19 (stmt -> graphr .)
    SETXY           reduce using rule 19 (stmt -> graphr .)
    COLOR_STAR      reduce using rule 19 (stmt -> graphr .)
    SIZE_STAR       reduce using rule 19 (stmt -> graphr .)
    GO              reduce using rule 19 (stmt -> graphr .)
    LEFT            reduce using rule 19 (stmt -> graphr .)
    RIGHT           reduce using rule 19 (stmt -> graphr .)
    BACK            reduce using rule 19 (stmt -> graphr .)
    ARC             reduce using rule 19 (stmt -> graphr .)
    CLOSEBRACES     reduce using rule 19 (stmt -> graphr .)


state 79

    (20) stmt -> funCall .

    ID              reduce using rule 20 (stmt -> funCall .)
    IF              reduce using rule 20 (stmt -> funCall .)
    PRINT           reduce using rule 20 (stmt -> funCall .)
    READ            reduce using rule 20 (stmt -> funCall .)
    REPEAT          reduce using rule 20 (stmt -> funCall .)
    RETURN          reduce using rule 20 (stmt -> funCall .)
    WHILE           reduce using rule 20 (stmt -> funCall .)
    FOR             reduce using rule 20 (stmt -> funCall .)
    CIRCLE          reduce using rule 20 (stmt -> funCall .)
    SQUARE          reduce using rule 20 (stmt -> funCall .)
    TRIANGLE        reduce using rule 20 (stmt -> funCall .)
    RECTANGLE       reduce using rule 20 (stmt -> funCall .)
    HIDE_STAR       reduce using rule 20 (stmt -> funCall .)
    SHOW_STAR       reduce using rule 20 (stmt -> funCall .)
    HAND_DOWN       reduce using rule 20 (stmt -> funCall .)
    HAND_UP         reduce using rule 20 (stmt -> funCall .)
    SETXY           reduce using rule 20 (stmt -> funCall .)
    COLOR_STAR      reduce using rule 20 (stmt -> funCall .)
    SIZE_STAR       reduce using rule 20 (stmt -> funCall .)
    GO              reduce using rule 20 (stmt -> funCall .)
    LEFT            reduce using rule 20 (stmt -> funCall .)
    RIGHT           reduce using rule 20 (stmt -> funCall .)
    BACK            reduce using rule 20 (stmt -> funCall .)
    ARC             reduce using rule 20 (stmt -> funCall .)
    CLOSEBRACES     reduce using rule 20 (stmt -> funCall .)


state 80

    (21) stmt -> return .

    ID              reduce using rule 21 (stmt -> return .)
    IF              reduce using rule 21 (stmt -> return .)
    PRINT           reduce using rule 21 (stmt -> return .)
    READ            reduce using rule 21 (stmt -> return .)
    REPEAT          reduce using rule 21 (stmt -> return .)
    RETURN          reduce using rule 21 (stmt -> return .)
    WHILE           reduce using rule 21 (stmt -> return .)
    FOR             reduce using rule 21 (stmt -> return .)
    CIRCLE          reduce using rule 21 (stmt -> return .)
    SQUARE          reduce using rule 21 (stmt -> return .)
    TRIANGLE        reduce using rule 21 (stmt -> return .)
    RECTANGLE       reduce using rule 21 (stmt -> return .)
    HIDE_STAR       reduce using rule 21 (stmt -> return .)
    SHOW_STAR       reduce using rule 21 (stmt -> return .)
    HAND_DOWN       reduce using rule 21 (stmt -> return .)
    HAND_UP         reduce using rule 21 (stmt -> return .)
    SETXY           reduce using rule 21 (stmt -> return .)
    COLOR_STAR      reduce using rule 21 (stmt -> return .)
    SIZE_STAR       reduce using rule 21 (stmt -> return .)
    GO              reduce using rule 21 (stmt -> return .)
    LEFT            reduce using rule 21 (stmt -> return .)
    RIGHT           reduce using rule 21 (stmt -> return .)
    BACK            reduce using rule 21 (stmt -> return .)
    ARC             reduce using rule 21 (stmt -> return .)
    CLOSEBRACES     reduce using rule 21 (stmt -> return .)


state 81

    (49) assignment -> ID . assignment1 EQUALS assignment3 SEMICOLON
    (91) funCall -> ID . OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (50) assignment1 -> . assignment2
    (51) assignment1 -> . assignment2 assignment1
    (52) assignment1 -> . empty
    (53) assignment2 -> . OPENBRACKET exp CLOSEBRACKET
    (143) empty -> .

    OPENPAREN       shift and go to state 62
    OPENBRACKET     shift and go to state 146
    EQUALS          reduce using rule 143 (empty -> .)

    assignment1                    shift and go to state 143
    assignment2                    shift and go to state 144
    empty                          shift and go to state 145

state 82

    (79) condition -> IF . head body condition1
    (83) head -> . OPENPAREN head1 CLOSEPAREN

    OPENPAREN       shift and go to state 148

    head                           shift and go to state 147

state 83

    (44) print -> PRINT . OPENPAREN exp CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 149


state 84

    (11) loop -> while .

    ID              reduce using rule 11 (loop -> while .)
    IF              reduce using rule 11 (loop -> while .)
    PRINT           reduce using rule 11 (loop -> while .)
    READ            reduce using rule 11 (loop -> while .)
    REPEAT          reduce using rule 11 (loop -> while .)
    RETURN          reduce using rule 11 (loop -> while .)
    WHILE           reduce using rule 11 (loop -> while .)
    FOR             reduce using rule 11 (loop -> while .)
    CIRCLE          reduce using rule 11 (loop -> while .)
    SQUARE          reduce using rule 11 (loop -> while .)
    TRIANGLE        reduce using rule 11 (loop -> while .)
    RECTANGLE       reduce using rule 11 (loop -> while .)
    HIDE_STAR       reduce using rule 11 (loop -> while .)
    SHOW_STAR       reduce using rule 11 (loop -> while .)
    HAND_DOWN       reduce using rule 11 (loop -> while .)
    HAND_UP         reduce using rule 11 (loop -> while .)
    SETXY           reduce using rule 11 (loop -> while .)
    COLOR_STAR      reduce using rule 11 (loop -> while .)
    SIZE_STAR       reduce using rule 11 (loop -> while .)
    GO              reduce using rule 11 (loop -> while .)
    LEFT            reduce using rule 11 (loop -> while .)
    RIGHT           reduce using rule 11 (loop -> while .)
    BACK            reduce using rule 11 (loop -> while .)
    ARC             reduce using rule 11 (loop -> while .)
    CLOSEBRACES     reduce using rule 11 (loop -> while .)


state 85

    (12) loop -> for .

    ID              reduce using rule 12 (loop -> for .)
    IF              reduce using rule 12 (loop -> for .)
    PRINT           reduce using rule 12 (loop -> for .)
    READ            reduce using rule 12 (loop -> for .)
    REPEAT          reduce using rule 12 (loop -> for .)
    RETURN          reduce using rule 12 (loop -> for .)
    WHILE           reduce using rule 12 (loop -> for .)
    FOR             reduce using rule 12 (loop -> for .)
    CIRCLE          reduce using rule 12 (loop -> for .)
    SQUARE          reduce using rule 12 (loop -> for .)
    TRIANGLE        reduce using rule 12 (loop -> for .)
    RECTANGLE       reduce using rule 12 (loop -> for .)
    HIDE_STAR       reduce using rule 12 (loop -> for .)
    SHOW_STAR       reduce using rule 12 (loop -> for .)
    HAND_DOWN       reduce using rule 12 (loop -> for .)
    HAND_UP         reduce using rule 12 (loop -> for .)
    SETXY           reduce using rule 12 (loop -> for .)
    COLOR_STAR      reduce using rule 12 (loop -> for .)
    SIZE_STAR       reduce using rule 12 (loop -> for .)
    GO              reduce using rule 12 (loop -> for .)
    LEFT            reduce using rule 12 (loop -> for .)
    RIGHT           reduce using rule 12 (loop -> for .)
    BACK            reduce using rule 12 (loop -> for .)
    ARC             reduce using rule 12 (loop -> for .)
    CLOSEBRACES     reduce using rule 12 (loop -> for .)


state 86

    (45) read -> READ . OPENPAREN ID read1 CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 150


state 87

    (98) graphstmt -> graphfig .

    ID              reduce using rule 98 (graphstmt -> graphfig .)
    IF              reduce using rule 98 (graphstmt -> graphfig .)
    PRINT           reduce using rule 98 (graphstmt -> graphfig .)
    READ            reduce using rule 98 (graphstmt -> graphfig .)
    REPEAT          reduce using rule 98 (graphstmt -> graphfig .)
    RETURN          reduce using rule 98 (graphstmt -> graphfig .)
    WHILE           reduce using rule 98 (graphstmt -> graphfig .)
    FOR             reduce using rule 98 (graphstmt -> graphfig .)
    CIRCLE          reduce using rule 98 (graphstmt -> graphfig .)
    SQUARE          reduce using rule 98 (graphstmt -> graphfig .)
    TRIANGLE        reduce using rule 98 (graphstmt -> graphfig .)
    RECTANGLE       reduce using rule 98 (graphstmt -> graphfig .)
    HIDE_STAR       reduce using rule 98 (graphstmt -> graphfig .)
    SHOW_STAR       reduce using rule 98 (graphstmt -> graphfig .)
    HAND_DOWN       reduce using rule 98 (graphstmt -> graphfig .)
    HAND_UP         reduce using rule 98 (graphstmt -> graphfig .)
    SETXY           reduce using rule 98 (graphstmt -> graphfig .)
    COLOR_STAR      reduce using rule 98 (graphstmt -> graphfig .)
    SIZE_STAR       reduce using rule 98 (graphstmt -> graphfig .)
    GO              reduce using rule 98 (graphstmt -> graphfig .)
    LEFT            reduce using rule 98 (graphstmt -> graphfig .)
    RIGHT           reduce using rule 98 (graphstmt -> graphfig .)
    BACK            reduce using rule 98 (graphstmt -> graphfig .)
    ARC             reduce using rule 98 (graphstmt -> graphfig .)
    CLOSEBRACES     reduce using rule 98 (graphstmt -> graphfig .)


state 88

    (99) graphstmt -> graphview .

    ID              reduce using rule 99 (graphstmt -> graphview .)
    IF              reduce using rule 99 (graphstmt -> graphview .)
    PRINT           reduce using rule 99 (graphstmt -> graphview .)
    READ            reduce using rule 99 (graphstmt -> graphview .)
    REPEAT          reduce using rule 99 (graphstmt -> graphview .)
    RETURN          reduce using rule 99 (graphstmt -> graphview .)
    WHILE           reduce using rule 99 (graphstmt -> graphview .)
    FOR             reduce using rule 99 (graphstmt -> graphview .)
    CIRCLE          reduce using rule 99 (graphstmt -> graphview .)
    SQUARE          reduce using rule 99 (graphstmt -> graphview .)
    TRIANGLE        reduce using rule 99 (graphstmt -> graphview .)
    RECTANGLE       reduce using rule 99 (graphstmt -> graphview .)
    HIDE_STAR       reduce using rule 99 (graphstmt -> graphview .)
    SHOW_STAR       reduce using rule 99 (graphstmt -> graphview .)
    HAND_DOWN       reduce using rule 99 (graphstmt -> graphview .)
    HAND_UP         reduce using rule 99 (graphstmt -> graphview .)
    SETXY           reduce using rule 99 (graphstmt -> graphview .)
    COLOR_STAR      reduce using rule 99 (graphstmt -> graphview .)
    SIZE_STAR       reduce using rule 99 (graphstmt -> graphview .)
    GO              reduce using rule 99 (graphstmt -> graphview .)
    LEFT            reduce using rule 99 (graphstmt -> graphview .)
    RIGHT           reduce using rule 99 (graphstmt -> graphview .)
    BACK            reduce using rule 99 (graphstmt -> graphview .)
    ARC             reduce using rule 99 (graphstmt -> graphview .)
    CLOSEBRACES     reduce using rule 99 (graphstmt -> graphview .)


state 89

    (100) graphstmt -> graphmove .

    ID              reduce using rule 100 (graphstmt -> graphmove .)
    IF              reduce using rule 100 (graphstmt -> graphmove .)
    PRINT           reduce using rule 100 (graphstmt -> graphmove .)
    READ            reduce using rule 100 (graphstmt -> graphmove .)
    REPEAT          reduce using rule 100 (graphstmt -> graphmove .)
    RETURN          reduce using rule 100 (graphstmt -> graphmove .)
    WHILE           reduce using rule 100 (graphstmt -> graphmove .)
    FOR             reduce using rule 100 (graphstmt -> graphmove .)
    CIRCLE          reduce using rule 100 (graphstmt -> graphmove .)
    SQUARE          reduce using rule 100 (graphstmt -> graphmove .)
    TRIANGLE        reduce using rule 100 (graphstmt -> graphmove .)
    RECTANGLE       reduce using rule 100 (graphstmt -> graphmove .)
    HIDE_STAR       reduce using rule 100 (graphstmt -> graphmove .)
    SHOW_STAR       reduce using rule 100 (graphstmt -> graphmove .)
    HAND_DOWN       reduce using rule 100 (graphstmt -> graphmove .)
    HAND_UP         reduce using rule 100 (graphstmt -> graphmove .)
    SETXY           reduce using rule 100 (graphstmt -> graphmove .)
    COLOR_STAR      reduce using rule 100 (graphstmt -> graphmove .)
    SIZE_STAR       reduce using rule 100 (graphstmt -> graphmove .)
    GO              reduce using rule 100 (graphstmt -> graphmove .)
    LEFT            reduce using rule 100 (graphstmt -> graphmove .)
    RIGHT           reduce using rule 100 (graphstmt -> graphmove .)
    BACK            reduce using rule 100 (graphstmt -> graphmove .)
    ARC             reduce using rule 100 (graphstmt -> graphmove .)
    CLOSEBRACES     reduce using rule 100 (graphstmt -> graphmove .)


state 90

    (115) graphr -> REPEAT . exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (127) exp -> . term exp1
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    exp                            shift and go to state 151
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 91

    (66) return -> RETURN . return1 SEMICOLON
    (67) return1 -> . vcte
    (68) return1 -> . exp
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (127) exp -> . term exp1
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    return1                        shift and go to state 152
    vcte                           shift and go to state 153
    exp                            shift and go to state 154
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    term                           shift and go to state 32
    factor                         shift and go to state 33
    factor1                        shift and go to state 35
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 92

    (90) while -> WHILE . head body
    (83) head -> . OPENPAREN head1 CLOSEPAREN

    OPENPAREN       shift and go to state 148

    head                           shift and go to state 155

state 93

    (89) for -> FOR . OPENPAREN ID TWODOTS exp CLOSEPAREN body

    OPENPAREN       shift and go to state 156


state 94

    (101) graphfig -> graphfig1 . SEMICOLON

    SEMICOLON       shift and go to state 157


state 95

    (118) graphview -> graphview1 . SEMICOLON

    SEMICOLON       shift and go to state 158


state 96

    (106) graphmove -> graphmove1 . SEMICOLON

    SEMICOLON       shift and go to state 159


state 97

    (102) graphfig1 -> CIRCLE . laRegla2
    (97) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 161

    laRegla2                       shift and go to state 160

state 98

    (103) graphfig1 -> SQUARE . laRegla2
    (97) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 161

    laRegla2                       shift and go to state 162

state 99

    (104) graphfig1 -> TRIANGLE . laRegla
    (96) laRegla -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 164

    laRegla                        shift and go to state 163

state 100

    (105) graphfig1 -> RECTANGLE . laRegla
    (96) laRegla -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 164

    laRegla                        shift and go to state 165

state 101

    (119) graphview1 -> HIDE_STAR .

    SEMICOLON       reduce using rule 119 (graphview1 -> HIDE_STAR .)


state 102

    (120) graphview1 -> SHOW_STAR .

    SEMICOLON       reduce using rule 120 (graphview1 -> SHOW_STAR .)


state 103

    (121) graphview1 -> graphview2 . exp
    (127) exp -> . term exp1
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    exp                            shift and go to state 166
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 104

    (107) graphmove1 -> HAND_DOWN .

    SEMICOLON       reduce using rule 107 (graphmove1 -> HAND_DOWN .)


state 105

    (108) graphmove1 -> HAND_UP .

    SEMICOLON       reduce using rule 108 (graphmove1 -> HAND_UP .)


state 106

    (109) graphmove1 -> graphmove2 .

    SEMICOLON       reduce using rule 109 (graphmove1 -> graphmove2 .)


state 107

    (122) graphview2 -> SETXY . graphview3
    (125) graphview3 -> . exp COMMA
    (126) graphview3 -> . laRegla
    (127) exp -> . term exp1
    (96) laRegla -> . OPENPAREN exp COMMA exp CLOSEPAREN
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    OPENPAREN       shift and go to state 170
    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46

    graphview3                     shift and go to state 167
    exp                            shift and go to state 168
    laRegla                        shift and go to state 169
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 108

    (123) graphview2 -> COLOR_STAR .

    ID              reduce using rule 123 (graphview2 -> COLOR_STAR .)
    CTEINT          reduce using rule 123 (graphview2 -> COLOR_STAR .)
    CTEFLOAT        reduce using rule 123 (graphview2 -> COLOR_STAR .)
    CTECHAR         reduce using rule 123 (graphview2 -> COLOR_STAR .)
    ADDITION        reduce using rule 123 (graphview2 -> COLOR_STAR .)
    SUBSTRACTION    reduce using rule 123 (graphview2 -> COLOR_STAR .)
    OPENPAREN       reduce using rule 123 (graphview2 -> COLOR_STAR .)


state 109

    (124) graphview2 -> SIZE_STAR .

    ID              reduce using rule 124 (graphview2 -> SIZE_STAR .)
    CTEINT          reduce using rule 124 (graphview2 -> SIZE_STAR .)
    CTEFLOAT        reduce using rule 124 (graphview2 -> SIZE_STAR .)
    CTECHAR         reduce using rule 124 (graphview2 -> SIZE_STAR .)
    ADDITION        reduce using rule 124 (graphview2 -> SIZE_STAR .)
    SUBSTRACTION    reduce using rule 124 (graphview2 -> SIZE_STAR .)
    OPENPAREN       reduce using rule 124 (graphview2 -> SIZE_STAR .)


state 110

    (110) graphmove2 -> GO . laRegla2
    (97) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 161

    laRegla2                       shift and go to state 171

state 111

    (111) graphmove2 -> LEFT . laRegla2
    (97) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 161

    laRegla2                       shift and go to state 172

state 112

    (112) graphmove2 -> RIGHT . laRegla2
    (97) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 161

    laRegla2                       shift and go to state 173

state 113

    (113) graphmove2 -> BACK . laRegla2
    (97) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 161

    laRegla2                       shift and go to state 174

state 114

    (114) graphmove2 -> ARC . laRegla
    (96) laRegla -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 164

    laRegla                        shift and go to state 175

state 115

    (9) star_vars -> vars star_vars .

    ID              reduce using rule 9 (star_vars -> vars star_vars .)
    IF              reduce using rule 9 (star_vars -> vars star_vars .)
    PRINT           reduce using rule 9 (star_vars -> vars star_vars .)
    READ            reduce using rule 9 (star_vars -> vars star_vars .)
    REPEAT          reduce using rule 9 (star_vars -> vars star_vars .)
    RETURN          reduce using rule 9 (star_vars -> vars star_vars .)
    WHILE           reduce using rule 9 (star_vars -> vars star_vars .)
    FOR             reduce using rule 9 (star_vars -> vars star_vars .)
    CIRCLE          reduce using rule 9 (star_vars -> vars star_vars .)
    SQUARE          reduce using rule 9 (star_vars -> vars star_vars .)
    TRIANGLE        reduce using rule 9 (star_vars -> vars star_vars .)
    RECTANGLE       reduce using rule 9 (star_vars -> vars star_vars .)
    HIDE_STAR       reduce using rule 9 (star_vars -> vars star_vars .)
    SHOW_STAR       reduce using rule 9 (star_vars -> vars star_vars .)
    HAND_DOWN       reduce using rule 9 (star_vars -> vars star_vars .)
    HAND_UP         reduce using rule 9 (star_vars -> vars star_vars .)
    SETXY           reduce using rule 9 (star_vars -> vars star_vars .)
    COLOR_STAR      reduce using rule 9 (star_vars -> vars star_vars .)
    SIZE_STAR       reduce using rule 9 (star_vars -> vars star_vars .)
    GO              reduce using rule 9 (star_vars -> vars star_vars .)
    LEFT            reduce using rule 9 (star_vars -> vars star_vars .)
    RIGHT           reduce using rule 9 (star_vars -> vars star_vars .)
    BACK            reduce using rule 9 (star_vars -> vars star_vars .)
    ARC             reduce using rule 9 (star_vars -> vars star_vars .)
    CLOSEBRACES     reduce using rule 9 (star_vars -> vars star_vars .)


state 116

    (22) function -> FUN function1 ID function2 inicia_fun . fun_vars function4 termina_fun
    (33) fun_vars -> . vars fun_vars
    (34) fun_vars -> . empty
    (35) vars -> . type ID vars1 SEMICOLON
    (143) empty -> .
    (41) type -> . INT
    (42) type -> . FLOAT
    (43) type -> . CHAR

    ID              reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    PRINT           reduce using rule 143 (empty -> .)
    READ            reduce using rule 143 (empty -> .)
    REPEAT          reduce using rule 143 (empty -> .)
    RETURN          reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    FOR             reduce using rule 143 (empty -> .)
    CIRCLE          reduce using rule 143 (empty -> .)
    SQUARE          reduce using rule 143 (empty -> .)
    TRIANGLE        reduce using rule 143 (empty -> .)
    RECTANGLE       reduce using rule 143 (empty -> .)
    HIDE_STAR       reduce using rule 143 (empty -> .)
    SHOW_STAR       reduce using rule 143 (empty -> .)
    HAND_DOWN       reduce using rule 143 (empty -> .)
    HAND_UP         reduce using rule 143 (empty -> .)
    SETXY           reduce using rule 143 (empty -> .)
    COLOR_STAR      reduce using rule 143 (empty -> .)
    SIZE_STAR       reduce using rule 143 (empty -> .)
    GO              reduce using rule 143 (empty -> .)
    LEFT            reduce using rule 143 (empty -> .)
    RIGHT           reduce using rule 143 (empty -> .)
    BACK            reduce using rule 143 (empty -> .)
    ARC             reduce using rule 143 (empty -> .)
    CLOSEBRACES     reduce using rule 143 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    fun_vars                       shift and go to state 176
    vars                           shift and go to state 177
    empty                          shift and go to state 178
    type                           shift and go to state 8

state 117

    (25) inicia_fun -> OPENBRACES .

    INT             reduce using rule 25 (inicia_fun -> OPENBRACES .)
    FLOAT           reduce using rule 25 (inicia_fun -> OPENBRACES .)
    CHAR            reduce using rule 25 (inicia_fun -> OPENBRACES .)
    ID              reduce using rule 25 (inicia_fun -> OPENBRACES .)
    IF              reduce using rule 25 (inicia_fun -> OPENBRACES .)
    PRINT           reduce using rule 25 (inicia_fun -> OPENBRACES .)
    READ            reduce using rule 25 (inicia_fun -> OPENBRACES .)
    REPEAT          reduce using rule 25 (inicia_fun -> OPENBRACES .)
    RETURN          reduce using rule 25 (inicia_fun -> OPENBRACES .)
    WHILE           reduce using rule 25 (inicia_fun -> OPENBRACES .)
    FOR             reduce using rule 25 (inicia_fun -> OPENBRACES .)
    CIRCLE          reduce using rule 25 (inicia_fun -> OPENBRACES .)
    SQUARE          reduce using rule 25 (inicia_fun -> OPENBRACES .)
    TRIANGLE        reduce using rule 25 (inicia_fun -> OPENBRACES .)
    RECTANGLE       reduce using rule 25 (inicia_fun -> OPENBRACES .)
    HIDE_STAR       reduce using rule 25 (inicia_fun -> OPENBRACES .)
    SHOW_STAR       reduce using rule 25 (inicia_fun -> OPENBRACES .)
    HAND_DOWN       reduce using rule 25 (inicia_fun -> OPENBRACES .)
    HAND_UP         reduce using rule 25 (inicia_fun -> OPENBRACES .)
    SETXY           reduce using rule 25 (inicia_fun -> OPENBRACES .)
    COLOR_STAR      reduce using rule 25 (inicia_fun -> OPENBRACES .)
    SIZE_STAR       reduce using rule 25 (inicia_fun -> OPENBRACES .)
    GO              reduce using rule 25 (inicia_fun -> OPENBRACES .)
    LEFT            reduce using rule 25 (inicia_fun -> OPENBRACES .)
    RIGHT           reduce using rule 25 (inicia_fun -> OPENBRACES .)
    BACK            reduce using rule 25 (inicia_fun -> OPENBRACES .)
    ARC             reduce using rule 25 (inicia_fun -> OPENBRACES .)
    CLOSEBRACES     reduce using rule 25 (inicia_fun -> OPENBRACES .)


state 118

    (27) function2 -> OPENPAREN function3 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 179


state 119

    (28) function3 -> type . ID function5

    ID              shift and go to state 180


state 120

    (29) function3 -> empty .

    CLOSEPAREN      reduce using rule 29 (function3 -> empty .)


state 121

    (128) exp1 -> ADDITION exp .

    SEMICOLON       reduce using rule 128 (exp1 -> ADDITION exp .)
    GREATER         reduce using rule 128 (exp1 -> ADDITION exp .)
    LESS            reduce using rule 128 (exp1 -> ADDITION exp .)
    NOTEQUAL        reduce using rule 128 (exp1 -> ADDITION exp .)
    ISEQUAL         reduce using rule 128 (exp1 -> ADDITION exp .)
    CLOSEPAREN      reduce using rule 128 (exp1 -> ADDITION exp .)
    COMMA           reduce using rule 128 (exp1 -> ADDITION exp .)
    CLOSEBRACKET    reduce using rule 128 (exp1 -> ADDITION exp .)
    OPENBRACES      reduce using rule 128 (exp1 -> ADDITION exp .)
    OR              reduce using rule 128 (exp1 -> ADDITION exp .)
    AND             reduce using rule 128 (exp1 -> ADDITION exp .)
    ID              reduce using rule 128 (exp1 -> ADDITION exp .)
    CTEINT          reduce using rule 128 (exp1 -> ADDITION exp .)
    CTEFLOAT        reduce using rule 128 (exp1 -> ADDITION exp .)
    CTECHAR         reduce using rule 128 (exp1 -> ADDITION exp .)
    ADDITION        reduce using rule 128 (exp1 -> ADDITION exp .)
    SUBSTRACTION    reduce using rule 128 (exp1 -> ADDITION exp .)
    OPENPAREN       reduce using rule 128 (exp1 -> ADDITION exp .)


state 122

    (129) exp1 -> SUBSTRACTION exp .

    SEMICOLON       reduce using rule 129 (exp1 -> SUBSTRACTION exp .)
    GREATER         reduce using rule 129 (exp1 -> SUBSTRACTION exp .)
    LESS            reduce using rule 129 (exp1 -> SUBSTRACTION exp .)
    NOTEQUAL        reduce using rule 129 (exp1 -> SUBSTRACTION exp .)
    ISEQUAL         reduce using rule 129 (exp1 -> SUBSTRACTION exp .)
    CLOSEPAREN      reduce using rule 129 (exp1 -> SUBSTRACTION exp .)
    COMMA           reduce using rule 129 (exp1 -> SUBSTRACTION exp .)
    CLOSEBRACKET    reduce using rule 129 (exp1 -> SUBSTRACTION exp .)
    OPENBRACES      reduce using rule 129 (exp1 -> SUBSTRACTION exp .)
    OR              reduce using rule 129 (exp1 -> SUBSTRACTION exp .)
    AND             reduce using rule 129 (exp1 -> SUBSTRACTION exp .)
    ID              reduce using rule 129 (exp1 -> SUBSTRACTION exp .)
    CTEINT          reduce using rule 129 (exp1 -> SUBSTRACTION exp .)
    CTEFLOAT        reduce using rule 129 (exp1 -> SUBSTRACTION exp .)
    CTECHAR         reduce using rule 129 (exp1 -> SUBSTRACTION exp .)
    ADDITION        reduce using rule 129 (exp1 -> SUBSTRACTION exp .)
    SUBSTRACTION    reduce using rule 129 (exp1 -> SUBSTRACTION exp .)
    OPENPAREN       reduce using rule 129 (exp1 -> SUBSTRACTION exp .)


state 123

    (140) term1 -> MULTIPLICATION term .

    ADDITION        reduce using rule 140 (term1 -> MULTIPLICATION term .)
    SUBSTRACTION    reduce using rule 140 (term1 -> MULTIPLICATION term .)
    SEMICOLON       reduce using rule 140 (term1 -> MULTIPLICATION term .)
    GREATER         reduce using rule 140 (term1 -> MULTIPLICATION term .)
    LESS            reduce using rule 140 (term1 -> MULTIPLICATION term .)
    NOTEQUAL        reduce using rule 140 (term1 -> MULTIPLICATION term .)
    ISEQUAL         reduce using rule 140 (term1 -> MULTIPLICATION term .)
    CLOSEPAREN      reduce using rule 140 (term1 -> MULTIPLICATION term .)
    COMMA           reduce using rule 140 (term1 -> MULTIPLICATION term .)
    CLOSEBRACKET    reduce using rule 140 (term1 -> MULTIPLICATION term .)
    OPENBRACES      reduce using rule 140 (term1 -> MULTIPLICATION term .)
    OR              reduce using rule 140 (term1 -> MULTIPLICATION term .)
    AND             reduce using rule 140 (term1 -> MULTIPLICATION term .)
    ID              reduce using rule 140 (term1 -> MULTIPLICATION term .)
    CTEINT          reduce using rule 140 (term1 -> MULTIPLICATION term .)
    CTEFLOAT        reduce using rule 140 (term1 -> MULTIPLICATION term .)
    CTECHAR         reduce using rule 140 (term1 -> MULTIPLICATION term .)
    OPENPAREN       reduce using rule 140 (term1 -> MULTIPLICATION term .)


state 124

    (141) term1 -> DIVISION term .

    ADDITION        reduce using rule 141 (term1 -> DIVISION term .)
    SUBSTRACTION    reduce using rule 141 (term1 -> DIVISION term .)
    SEMICOLON       reduce using rule 141 (term1 -> DIVISION term .)
    GREATER         reduce using rule 141 (term1 -> DIVISION term .)
    LESS            reduce using rule 141 (term1 -> DIVISION term .)
    NOTEQUAL        reduce using rule 141 (term1 -> DIVISION term .)
    ISEQUAL         reduce using rule 141 (term1 -> DIVISION term .)
    CLOSEPAREN      reduce using rule 141 (term1 -> DIVISION term .)
    COMMA           reduce using rule 141 (term1 -> DIVISION term .)
    CLOSEBRACKET    reduce using rule 141 (term1 -> DIVISION term .)
    OPENBRACES      reduce using rule 141 (term1 -> DIVISION term .)
    OR              reduce using rule 141 (term1 -> DIVISION term .)
    AND             reduce using rule 141 (term1 -> DIVISION term .)
    ID              reduce using rule 141 (term1 -> DIVISION term .)
    CTEINT          reduce using rule 141 (term1 -> DIVISION term .)
    CTEFLOAT        reduce using rule 141 (term1 -> DIVISION term .)
    CTECHAR         reduce using rule 141 (term1 -> DIVISION term .)
    OPENPAREN       reduce using rule 141 (term1 -> DIVISION term .)


state 125

    (91) funCall -> ID OPENPAREN funCall2 . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 181


state 126

    (92) funCall2 -> exp . funCall3
    (94) funCall3 -> . COMMA exp funCall2
    (95) funCall3 -> . empty
    (143) empty -> .

    COMMA           shift and go to state 183
    CLOSEPAREN      reduce using rule 143 (empty -> .)

    funCall3                       shift and go to state 182
    empty                          shift and go to state 184

state 127

    (93) funCall2 -> empty .

    CLOSEPAREN      reduce using rule 93 (funCall2 -> empty .)


state 128

    (59) vcte1 -> OPENBRACKET exp . CLOSEBRACKET vcte3

    CLOSEBRACKET    shift and go to state 185


state 129

    (136) factor1 -> openP expression closeP .

    MULTIPLICATION  reduce using rule 136 (factor1 -> openP expression closeP .)
    DIVISION        reduce using rule 136 (factor1 -> openP expression closeP .)
    ADDITION        reduce using rule 136 (factor1 -> openP expression closeP .)
    SUBSTRACTION    reduce using rule 136 (factor1 -> openP expression closeP .)
    SEMICOLON       reduce using rule 136 (factor1 -> openP expression closeP .)
    GREATER         reduce using rule 136 (factor1 -> openP expression closeP .)
    LESS            reduce using rule 136 (factor1 -> openP expression closeP .)
    NOTEQUAL        reduce using rule 136 (factor1 -> openP expression closeP .)
    ISEQUAL         reduce using rule 136 (factor1 -> openP expression closeP .)
    CLOSEPAREN      reduce using rule 136 (factor1 -> openP expression closeP .)
    COMMA           reduce using rule 136 (factor1 -> openP expression closeP .)
    CLOSEBRACKET    reduce using rule 136 (factor1 -> openP expression closeP .)
    OPENBRACES      reduce using rule 136 (factor1 -> openP expression closeP .)
    OR              reduce using rule 136 (factor1 -> openP expression closeP .)
    AND             reduce using rule 136 (factor1 -> openP expression closeP .)
    ID              reduce using rule 136 (factor1 -> openP expression closeP .)
    CTEINT          reduce using rule 136 (factor1 -> openP expression closeP .)
    CTEFLOAT        reduce using rule 136 (factor1 -> openP expression closeP .)
    CTECHAR         reduce using rule 136 (factor1 -> openP expression closeP .)
    OPENPAREN       reduce using rule 136 (factor1 -> openP expression closeP .)


state 130

    (132) closeP -> CLOSEPAREN .

    MULTIPLICATION  reduce using rule 132 (closeP -> CLOSEPAREN .)
    DIVISION        reduce using rule 132 (closeP -> CLOSEPAREN .)
    ADDITION        reduce using rule 132 (closeP -> CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 132 (closeP -> CLOSEPAREN .)
    SEMICOLON       reduce using rule 132 (closeP -> CLOSEPAREN .)
    GREATER         reduce using rule 132 (closeP -> CLOSEPAREN .)
    LESS            reduce using rule 132 (closeP -> CLOSEPAREN .)
    NOTEQUAL        reduce using rule 132 (closeP -> CLOSEPAREN .)
    ISEQUAL         reduce using rule 132 (closeP -> CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 132 (closeP -> CLOSEPAREN .)
    COMMA           reduce using rule 132 (closeP -> CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 132 (closeP -> CLOSEPAREN .)
    OPENBRACES      reduce using rule 132 (closeP -> CLOSEPAREN .)
    OR              reduce using rule 132 (closeP -> CLOSEPAREN .)
    AND             reduce using rule 132 (closeP -> CLOSEPAREN .)
    ID              reduce using rule 132 (closeP -> CLOSEPAREN .)
    CTEINT          reduce using rule 132 (closeP -> CLOSEPAREN .)
    CTEFLOAT        reduce using rule 132 (closeP -> CLOSEPAREN .)
    CTECHAR         reduce using rule 132 (closeP -> CLOSEPAREN .)
    OPENPAREN       reduce using rule 132 (closeP -> CLOSEPAREN .)


state 131

    (69) expression -> exp expression1 .

    CLOSEPAREN      reduce using rule 69 (expression -> exp expression1 .)
    OR              reduce using rule 69 (expression -> exp expression1 .)
    AND             reduce using rule 69 (expression -> exp expression1 .)


state 132

    (70) expression1 -> loper . exp
    (127) exp -> . term exp1
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    exp                            shift and go to state 186
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 133

    (71) expression1 -> empty .

    CLOSEPAREN      reduce using rule 71 (expression1 -> empty .)
    OR              reduce using rule 71 (expression1 -> empty .)
    AND             reduce using rule 71 (expression1 -> empty .)


state 134

    (72) loper -> GREATER .

    ID              reduce using rule 72 (loper -> GREATER .)
    CTEINT          reduce using rule 72 (loper -> GREATER .)
    CTEFLOAT        reduce using rule 72 (loper -> GREATER .)
    CTECHAR         reduce using rule 72 (loper -> GREATER .)
    ADDITION        reduce using rule 72 (loper -> GREATER .)
    SUBSTRACTION    reduce using rule 72 (loper -> GREATER .)
    OPENPAREN       reduce using rule 72 (loper -> GREATER .)


state 135

    (73) loper -> LESS .

    ID              reduce using rule 73 (loper -> LESS .)
    CTEINT          reduce using rule 73 (loper -> LESS .)
    CTEFLOAT        reduce using rule 73 (loper -> LESS .)
    CTECHAR         reduce using rule 73 (loper -> LESS .)
    ADDITION        reduce using rule 73 (loper -> LESS .)
    SUBSTRACTION    reduce using rule 73 (loper -> LESS .)
    OPENPAREN       reduce using rule 73 (loper -> LESS .)


state 136

    (74) loper -> NOTEQUAL .

    ID              reduce using rule 74 (loper -> NOTEQUAL .)
    CTEINT          reduce using rule 74 (loper -> NOTEQUAL .)
    CTEFLOAT        reduce using rule 74 (loper -> NOTEQUAL .)
    CTECHAR         reduce using rule 74 (loper -> NOTEQUAL .)
    ADDITION        reduce using rule 74 (loper -> NOTEQUAL .)
    SUBSTRACTION    reduce using rule 74 (loper -> NOTEQUAL .)
    OPENPAREN       reduce using rule 74 (loper -> NOTEQUAL .)


state 137

    (75) loper -> ISEQUAL .

    ID              reduce using rule 75 (loper -> ISEQUAL .)
    CTEINT          reduce using rule 75 (loper -> ISEQUAL .)
    CTEFLOAT        reduce using rule 75 (loper -> ISEQUAL .)
    CTECHAR         reduce using rule 75 (loper -> ISEQUAL .)
    ADDITION        reduce using rule 75 (loper -> ISEQUAL .)
    SUBSTRACTION    reduce using rule 75 (loper -> ISEQUAL .)
    OPENPAREN       reduce using rule 75 (loper -> ISEQUAL .)


state 138

    (39) vars3 -> OPENBRACKET . CTEINT CLOSEBRACKET

    CTEINT          shift and go to state 187


state 139

    (37) vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .

    SEMICOLON       reduce using rule 37 (vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .)


state 140

    (40) vars3 -> empty .

    SEMICOLON       reduce using rule 40 (vars3 -> empty .)


state 141

    (6) star -> MULTIPLICATION OPENBRACES star_vars star1 CLOSEBRACES .

    $end            reduce using rule 6 (star -> MULTIPLICATION OPENBRACES star_vars star1 CLOSEBRACES .)


state 142

    (7) star1 -> stmt star1 .

    CLOSEBRACES     reduce using rule 7 (star1 -> stmt star1 .)


state 143

    (49) assignment -> ID assignment1 . EQUALS assignment3 SEMICOLON

    EQUALS          shift and go to state 188


state 144

    (50) assignment1 -> assignment2 .
    (51) assignment1 -> assignment2 . assignment1
    (50) assignment1 -> . assignment2
    (51) assignment1 -> . assignment2 assignment1
    (52) assignment1 -> . empty
    (53) assignment2 -> . OPENBRACKET exp CLOSEBRACKET
    (143) empty -> .

  ! reduce/reduce conflict for EQUALS resolved using rule 50 (assignment1 -> assignment2 .)
    EQUALS          reduce using rule 50 (assignment1 -> assignment2 .)
    OPENBRACKET     shift and go to state 146

  ! EQUALS          [ reduce using rule 143 (empty -> .) ]

    assignment2                    shift and go to state 144
    assignment1                    shift and go to state 189
    empty                          shift and go to state 145

state 145

    (52) assignment1 -> empty .

    EQUALS          reduce using rule 52 (assignment1 -> empty .)


state 146

    (53) assignment2 -> OPENBRACKET . exp CLOSEBRACKET
    (127) exp -> . term exp1
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    exp                            shift and go to state 190
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 147

    (79) condition -> IF head . body condition1
    (86) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 192

    body                           shift and go to state 191

state 148

    (83) head -> OPENPAREN . head1 CLOSEPAREN
    (84) head1 -> . expression
    (85) head1 -> . logical
    (69) expression -> . exp expression1
    (76) logical -> . expression logical1 expression
    (127) exp -> . term exp1
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    head1                          shift and go to state 193
    expression                     shift and go to state 194
    logical                        shift and go to state 195
    exp                            shift and go to state 67
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 149

    (44) print -> PRINT OPENPAREN . exp CLOSEPAREN SEMICOLON
    (127) exp -> . term exp1
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    exp                            shift and go to state 196
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 150

    (45) read -> READ OPENPAREN . ID read1 CLOSEPAREN SEMICOLON

    ID              shift and go to state 197


state 151

    (115) graphr -> REPEAT exp . OPENBRACES graphstmt graphr1 CLOSEBRACES

    OPENBRACES      shift and go to state 198


state 152

    (66) return -> RETURN return1 . SEMICOLON

    SEMICOLON       shift and go to state 199


state 153

    (67) return1 -> vcte .
    (133) factor -> vcte .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 67 (return1 -> vcte .)
    SEMICOLON       reduce using rule 67 (return1 -> vcte .)
    MULTIPLICATION  reduce using rule 133 (factor -> vcte .)
    DIVISION        reduce using rule 133 (factor -> vcte .)
    ADDITION        reduce using rule 133 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 133 (factor -> vcte .)

  ! SEMICOLON       [ reduce using rule 133 (factor -> vcte .) ]


state 154

    (68) return1 -> exp .

    SEMICOLON       reduce using rule 68 (return1 -> exp .)


state 155

    (90) while -> WHILE head . body
    (86) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 192

    body                           shift and go to state 200

state 156

    (89) for -> FOR OPENPAREN . ID TWODOTS exp CLOSEPAREN body

    ID              shift and go to state 201


state 157

    (101) graphfig -> graphfig1 SEMICOLON .

    ID              reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)
    IF              reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)
    PRINT           reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)
    READ            reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)
    REPEAT          reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)
    RETURN          reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)
    WHILE           reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)
    FOR             reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)
    CIRCLE          reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)
    SQUARE          reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)
    TRIANGLE        reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)
    RECTANGLE       reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)
    HIDE_STAR       reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)
    SHOW_STAR       reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)
    HAND_DOWN       reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)
    HAND_UP         reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)
    SETXY           reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)
    COLOR_STAR      reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)
    SIZE_STAR       reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)
    GO              reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)
    LEFT            reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)
    RIGHT           reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)
    BACK            reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)
    ARC             reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 101 (graphfig -> graphfig1 SEMICOLON .)


state 158

    (118) graphview -> graphview1 SEMICOLON .

    ID              reduce using rule 118 (graphview -> graphview1 SEMICOLON .)
    IF              reduce using rule 118 (graphview -> graphview1 SEMICOLON .)
    PRINT           reduce using rule 118 (graphview -> graphview1 SEMICOLON .)
    READ            reduce using rule 118 (graphview -> graphview1 SEMICOLON .)
    REPEAT          reduce using rule 118 (graphview -> graphview1 SEMICOLON .)
    RETURN          reduce using rule 118 (graphview -> graphview1 SEMICOLON .)
    WHILE           reduce using rule 118 (graphview -> graphview1 SEMICOLON .)
    FOR             reduce using rule 118 (graphview -> graphview1 SEMICOLON .)
    CIRCLE          reduce using rule 118 (graphview -> graphview1 SEMICOLON .)
    SQUARE          reduce using rule 118 (graphview -> graphview1 SEMICOLON .)
    TRIANGLE        reduce using rule 118 (graphview -> graphview1 SEMICOLON .)
    RECTANGLE       reduce using rule 118 (graphview -> graphview1 SEMICOLON .)
    HIDE_STAR       reduce using rule 118 (graphview -> graphview1 SEMICOLON .)
    SHOW_STAR       reduce using rule 118 (graphview -> graphview1 SEMICOLON .)
    HAND_DOWN       reduce using rule 118 (graphview -> graphview1 SEMICOLON .)
    HAND_UP         reduce using rule 118 (graphview -> graphview1 SEMICOLON .)
    SETXY           reduce using rule 118 (graphview -> graphview1 SEMICOLON .)
    COLOR_STAR      reduce using rule 118 (graphview -> graphview1 SEMICOLON .)
    SIZE_STAR       reduce using rule 118 (graphview -> graphview1 SEMICOLON .)
    GO              reduce using rule 118 (graphview -> graphview1 SEMICOLON .)
    LEFT            reduce using rule 118 (graphview -> graphview1 SEMICOLON .)
    RIGHT           reduce using rule 118 (graphview -> graphview1 SEMICOLON .)
    BACK            reduce using rule 118 (graphview -> graphview1 SEMICOLON .)
    ARC             reduce using rule 118 (graphview -> graphview1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 118 (graphview -> graphview1 SEMICOLON .)


state 159

    (106) graphmove -> graphmove1 SEMICOLON .

    ID              reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)
    IF              reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)
    PRINT           reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)
    READ            reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)
    REPEAT          reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)
    RETURN          reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)
    WHILE           reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)
    FOR             reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)
    CIRCLE          reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)
    SQUARE          reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)
    TRIANGLE        reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)
    RECTANGLE       reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)
    HIDE_STAR       reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)
    SHOW_STAR       reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)
    HAND_DOWN       reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)
    HAND_UP         reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)
    SETXY           reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)
    COLOR_STAR      reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)
    SIZE_STAR       reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)
    GO              reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)
    LEFT            reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)
    RIGHT           reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)
    BACK            reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)
    ARC             reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 106 (graphmove -> graphmove1 SEMICOLON .)


state 160

    (102) graphfig1 -> CIRCLE laRegla2 .

    SEMICOLON       reduce using rule 102 (graphfig1 -> CIRCLE laRegla2 .)


state 161

    (97) laRegla2 -> OPENPAREN . exp CLOSEPAREN
    (127) exp -> . term exp1
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    exp                            shift and go to state 202
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 162

    (103) graphfig1 -> SQUARE laRegla2 .

    SEMICOLON       reduce using rule 103 (graphfig1 -> SQUARE laRegla2 .)


state 163

    (104) graphfig1 -> TRIANGLE laRegla .

    SEMICOLON       reduce using rule 104 (graphfig1 -> TRIANGLE laRegla .)


state 164

    (96) laRegla -> OPENPAREN . exp COMMA exp CLOSEPAREN
    (127) exp -> . term exp1
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    exp                            shift and go to state 203
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 165

    (105) graphfig1 -> RECTANGLE laRegla .

    SEMICOLON       reduce using rule 105 (graphfig1 -> RECTANGLE laRegla .)


state 166

    (121) graphview1 -> graphview2 exp .

    SEMICOLON       reduce using rule 121 (graphview1 -> graphview2 exp .)


state 167

    (122) graphview2 -> SETXY graphview3 .

    ID              reduce using rule 122 (graphview2 -> SETXY graphview3 .)
    CTEINT          reduce using rule 122 (graphview2 -> SETXY graphview3 .)
    CTEFLOAT        reduce using rule 122 (graphview2 -> SETXY graphview3 .)
    CTECHAR         reduce using rule 122 (graphview2 -> SETXY graphview3 .)
    ADDITION        reduce using rule 122 (graphview2 -> SETXY graphview3 .)
    SUBSTRACTION    reduce using rule 122 (graphview2 -> SETXY graphview3 .)
    OPENPAREN       reduce using rule 122 (graphview2 -> SETXY graphview3 .)


state 168

    (125) graphview3 -> exp . COMMA

    COMMA           shift and go to state 204


state 169

    (126) graphview3 -> laRegla .

    ID              reduce using rule 126 (graphview3 -> laRegla .)
    CTEINT          reduce using rule 126 (graphview3 -> laRegla .)
    CTEFLOAT        reduce using rule 126 (graphview3 -> laRegla .)
    CTECHAR         reduce using rule 126 (graphview3 -> laRegla .)
    ADDITION        reduce using rule 126 (graphview3 -> laRegla .)
    SUBSTRACTION    reduce using rule 126 (graphview3 -> laRegla .)
    OPENPAREN       reduce using rule 126 (graphview3 -> laRegla .)


state 170

    (96) laRegla -> OPENPAREN . exp COMMA exp CLOSEPAREN
    (131) openP -> OPENPAREN .
    (127) exp -> . term exp1
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTEINT resolved as shift
  ! shift/reduce conflict for CTEFLOAT resolved as shift
  ! shift/reduce conflict for CTECHAR resolved as shift
  ! shift/reduce conflict for ADDITION resolved as shift
  ! shift/reduce conflict for SUBSTRACTION resolved as shift
  ! shift/reduce conflict for OPENPAREN resolved as shift
    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

  ! ID              [ reduce using rule 131 (openP -> OPENPAREN .) ]
  ! CTEINT          [ reduce using rule 131 (openP -> OPENPAREN .) ]
  ! CTEFLOAT        [ reduce using rule 131 (openP -> OPENPAREN .) ]
  ! CTECHAR         [ reduce using rule 131 (openP -> OPENPAREN .) ]
  ! ADDITION        [ reduce using rule 131 (openP -> OPENPAREN .) ]
  ! SUBSTRACTION    [ reduce using rule 131 (openP -> OPENPAREN .) ]
  ! OPENPAREN       [ reduce using rule 131 (openP -> OPENPAREN .) ]

    exp                            shift and go to state 203
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 171

    (110) graphmove2 -> GO laRegla2 .

    SEMICOLON       reduce using rule 110 (graphmove2 -> GO laRegla2 .)


state 172

    (111) graphmove2 -> LEFT laRegla2 .

    SEMICOLON       reduce using rule 111 (graphmove2 -> LEFT laRegla2 .)


state 173

    (112) graphmove2 -> RIGHT laRegla2 .

    SEMICOLON       reduce using rule 112 (graphmove2 -> RIGHT laRegla2 .)


state 174

    (113) graphmove2 -> BACK laRegla2 .

    SEMICOLON       reduce using rule 113 (graphmove2 -> BACK laRegla2 .)


state 175

    (114) graphmove2 -> ARC laRegla .

    SEMICOLON       reduce using rule 114 (graphmove2 -> ARC laRegla .)


state 176

    (22) function -> FUN function1 ID function2 inicia_fun fun_vars . function4 termina_fun
    (30) function4 -> . stmt function4
    (31) function4 -> . empty
    (13) stmt -> . assignment
    (14) stmt -> . condition
    (15) stmt -> . print
    (16) stmt -> . loop
    (17) stmt -> . read
    (18) stmt -> . graphstmt
    (19) stmt -> . graphr
    (20) stmt -> . funCall
    (21) stmt -> . return
    (143) empty -> .
    (49) assignment -> . ID assignment1 EQUALS assignment3 SEMICOLON
    (79) condition -> . IF head body condition1
    (44) print -> . PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
    (11) loop -> . while
    (12) loop -> . for
    (45) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (98) graphstmt -> . graphfig
    (99) graphstmt -> . graphview
    (100) graphstmt -> . graphmove
    (115) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (66) return -> . RETURN return1 SEMICOLON
    (90) while -> . WHILE head body
    (89) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (101) graphfig -> . graphfig1 SEMICOLON
    (118) graphview -> . graphview1 SEMICOLON
    (106) graphmove -> . graphmove1 SEMICOLON
    (102) graphfig1 -> . CIRCLE laRegla2
    (103) graphfig1 -> . SQUARE laRegla2
    (104) graphfig1 -> . TRIANGLE laRegla
    (105) graphfig1 -> . RECTANGLE laRegla
    (119) graphview1 -> . HIDE_STAR
    (120) graphview1 -> . SHOW_STAR
    (121) graphview1 -> . graphview2 exp
    (107) graphmove1 -> . HAND_DOWN
    (108) graphmove1 -> . HAND_UP
    (109) graphmove1 -> . graphmove2
    (122) graphview2 -> . SETXY graphview3
    (123) graphview2 -> . COLOR_STAR
    (124) graphview2 -> . SIZE_STAR
    (110) graphmove2 -> . GO laRegla2
    (111) graphmove2 -> . LEFT laRegla2
    (112) graphmove2 -> . RIGHT laRegla2
    (113) graphmove2 -> . BACK laRegla2
    (114) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 143 (empty -> .)
    ID              shift and go to state 81
    IF              shift and go to state 82
    PRINT           shift and go to state 83
    READ            shift and go to state 86
    REPEAT          shift and go to state 90
    RETURN          shift and go to state 91
    WHILE           shift and go to state 92
    FOR             shift and go to state 93
    CIRCLE          shift and go to state 97
    SQUARE          shift and go to state 98
    TRIANGLE        shift and go to state 99
    RECTANGLE       shift and go to state 100
    HIDE_STAR       shift and go to state 101
    SHOW_STAR       shift and go to state 102
    HAND_DOWN       shift and go to state 104
    HAND_UP         shift and go to state 105
    SETXY           shift and go to state 107
    COLOR_STAR      shift and go to state 108
    SIZE_STAR       shift and go to state 109
    GO              shift and go to state 110
    LEFT            shift and go to state 111
    RIGHT           shift and go to state 112
    BACK            shift and go to state 113
    ARC             shift and go to state 114

    function4                      shift and go to state 205
    stmt                           shift and go to state 206
    empty                          shift and go to state 207
    assignment                     shift and go to state 72
    condition                      shift and go to state 73
    print                          shift and go to state 74
    loop                           shift and go to state 75
    read                           shift and go to state 76
    graphstmt                      shift and go to state 77
    graphr                         shift and go to state 78
    funCall                        shift and go to state 79
    return                         shift and go to state 80
    while                          shift and go to state 84
    for                            shift and go to state 85
    graphfig                       shift and go to state 87
    graphview                      shift and go to state 88
    graphmove                      shift and go to state 89
    graphfig1                      shift and go to state 94
    graphview1                     shift and go to state 95
    graphmove1                     shift and go to state 96
    graphview2                     shift and go to state 103
    graphmove2                     shift and go to state 106

state 177

    (33) fun_vars -> vars . fun_vars
    (33) fun_vars -> . vars fun_vars
    (34) fun_vars -> . empty
    (35) vars -> . type ID vars1 SEMICOLON
    (143) empty -> .
    (41) type -> . INT
    (42) type -> . FLOAT
    (43) type -> . CHAR

    ID              reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    PRINT           reduce using rule 143 (empty -> .)
    READ            reduce using rule 143 (empty -> .)
    REPEAT          reduce using rule 143 (empty -> .)
    RETURN          reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    FOR             reduce using rule 143 (empty -> .)
    CIRCLE          reduce using rule 143 (empty -> .)
    SQUARE          reduce using rule 143 (empty -> .)
    TRIANGLE        reduce using rule 143 (empty -> .)
    RECTANGLE       reduce using rule 143 (empty -> .)
    HIDE_STAR       reduce using rule 143 (empty -> .)
    SHOW_STAR       reduce using rule 143 (empty -> .)
    HAND_DOWN       reduce using rule 143 (empty -> .)
    HAND_UP         reduce using rule 143 (empty -> .)
    SETXY           reduce using rule 143 (empty -> .)
    COLOR_STAR      reduce using rule 143 (empty -> .)
    SIZE_STAR       reduce using rule 143 (empty -> .)
    GO              reduce using rule 143 (empty -> .)
    LEFT            reduce using rule 143 (empty -> .)
    RIGHT           reduce using rule 143 (empty -> .)
    BACK            reduce using rule 143 (empty -> .)
    ARC             reduce using rule 143 (empty -> .)
    CLOSEBRACES     reduce using rule 143 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    vars                           shift and go to state 177
    fun_vars                       shift and go to state 208
    empty                          shift and go to state 178
    type                           shift and go to state 8

state 178

    (34) fun_vars -> empty .

    ID              reduce using rule 34 (fun_vars -> empty .)
    IF              reduce using rule 34 (fun_vars -> empty .)
    PRINT           reduce using rule 34 (fun_vars -> empty .)
    READ            reduce using rule 34 (fun_vars -> empty .)
    REPEAT          reduce using rule 34 (fun_vars -> empty .)
    RETURN          reduce using rule 34 (fun_vars -> empty .)
    WHILE           reduce using rule 34 (fun_vars -> empty .)
    FOR             reduce using rule 34 (fun_vars -> empty .)
    CIRCLE          reduce using rule 34 (fun_vars -> empty .)
    SQUARE          reduce using rule 34 (fun_vars -> empty .)
    TRIANGLE        reduce using rule 34 (fun_vars -> empty .)
    RECTANGLE       reduce using rule 34 (fun_vars -> empty .)
    HIDE_STAR       reduce using rule 34 (fun_vars -> empty .)
    SHOW_STAR       reduce using rule 34 (fun_vars -> empty .)
    HAND_DOWN       reduce using rule 34 (fun_vars -> empty .)
    HAND_UP         reduce using rule 34 (fun_vars -> empty .)
    SETXY           reduce using rule 34 (fun_vars -> empty .)
    COLOR_STAR      reduce using rule 34 (fun_vars -> empty .)
    SIZE_STAR       reduce using rule 34 (fun_vars -> empty .)
    GO              reduce using rule 34 (fun_vars -> empty .)
    LEFT            reduce using rule 34 (fun_vars -> empty .)
    RIGHT           reduce using rule 34 (fun_vars -> empty .)
    BACK            reduce using rule 34 (fun_vars -> empty .)
    ARC             reduce using rule 34 (fun_vars -> empty .)
    CLOSEBRACES     reduce using rule 34 (fun_vars -> empty .)


state 179

    (27) function2 -> OPENPAREN function3 CLOSEPAREN .

    OPENBRACES      reduce using rule 27 (function2 -> OPENPAREN function3 CLOSEPAREN .)


state 180

    (28) function3 -> type ID . function5
    (32) function5 -> . COMMA type ID function3

    COMMA           shift and go to state 210

    function5                      shift and go to state 209

state 181

    (91) funCall -> ID OPENPAREN funCall2 CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 211


state 182

    (92) funCall2 -> exp funCall3 .

    CLOSEPAREN      reduce using rule 92 (funCall2 -> exp funCall3 .)


state 183

    (94) funCall3 -> COMMA . exp funCall2
    (127) exp -> . term exp1
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    exp                            shift and go to state 212
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 184

    (95) funCall3 -> empty .

    CLOSEPAREN      reduce using rule 95 (funCall3 -> empty .)


state 185

    (59) vcte1 -> OPENBRACKET exp CLOSEBRACKET . vcte3
    (61) vcte3 -> . OPENBRACKET exp CLOSEBRACKET
    (62) vcte3 -> . empty
    (143) empty -> .

    OPENBRACKET     shift and go to state 213
    MULTIPLICATION  reduce using rule 143 (empty -> .)
    DIVISION        reduce using rule 143 (empty -> .)
    ADDITION        reduce using rule 143 (empty -> .)
    SUBSTRACTION    reduce using rule 143 (empty -> .)
    SEMICOLON       reduce using rule 143 (empty -> .)
    GREATER         reduce using rule 143 (empty -> .)
    LESS            reduce using rule 143 (empty -> .)
    NOTEQUAL        reduce using rule 143 (empty -> .)
    ISEQUAL         reduce using rule 143 (empty -> .)
    CLOSEPAREN      reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    CLOSEBRACKET    reduce using rule 143 (empty -> .)
    OPENBRACES      reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    ID              reduce using rule 143 (empty -> .)
    CTEINT          reduce using rule 143 (empty -> .)
    CTEFLOAT        reduce using rule 143 (empty -> .)
    CTECHAR         reduce using rule 143 (empty -> .)
    OPENPAREN       reduce using rule 143 (empty -> .)

    vcte3                          shift and go to state 214
    empty                          shift and go to state 215

state 186

    (70) expression1 -> loper exp .

    CLOSEPAREN      reduce using rule 70 (expression1 -> loper exp .)
    OR              reduce using rule 70 (expression1 -> loper exp .)
    AND             reduce using rule 70 (expression1 -> loper exp .)


state 187

    (39) vars3 -> OPENBRACKET CTEINT . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 216


state 188

    (49) assignment -> ID assignment1 EQUALS . assignment3 SEMICOLON
    (54) assignment3 -> . exp
    (55) assignment3 -> . read
    (127) exp -> . term exp1
    (45) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    READ            shift and go to state 86
    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    assignment3                    shift and go to state 217
    exp                            shift and go to state 218
    read                           shift and go to state 219
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 189

    (51) assignment1 -> assignment2 assignment1 .

    EQUALS          reduce using rule 51 (assignment1 -> assignment2 assignment1 .)


state 190

    (53) assignment2 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 220


state 191

    (79) condition -> IF head body . condition1
    (80) condition1 -> . ELSEIF head body condition1
    (81) condition1 -> . ELSE body
    (82) condition1 -> . empty
    (143) empty -> .

    ELSEIF          shift and go to state 222
    ELSE            shift and go to state 223
    ID              reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    PRINT           reduce using rule 143 (empty -> .)
    READ            reduce using rule 143 (empty -> .)
    REPEAT          reduce using rule 143 (empty -> .)
    RETURN          reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    FOR             reduce using rule 143 (empty -> .)
    CIRCLE          reduce using rule 143 (empty -> .)
    SQUARE          reduce using rule 143 (empty -> .)
    TRIANGLE        reduce using rule 143 (empty -> .)
    RECTANGLE       reduce using rule 143 (empty -> .)
    HIDE_STAR       reduce using rule 143 (empty -> .)
    SHOW_STAR       reduce using rule 143 (empty -> .)
    HAND_DOWN       reduce using rule 143 (empty -> .)
    HAND_UP         reduce using rule 143 (empty -> .)
    SETXY           reduce using rule 143 (empty -> .)
    COLOR_STAR      reduce using rule 143 (empty -> .)
    SIZE_STAR       reduce using rule 143 (empty -> .)
    GO              reduce using rule 143 (empty -> .)
    LEFT            reduce using rule 143 (empty -> .)
    RIGHT           reduce using rule 143 (empty -> .)
    BACK            reduce using rule 143 (empty -> .)
    ARC             reduce using rule 143 (empty -> .)
    CLOSEBRACES     reduce using rule 143 (empty -> .)

    condition1                     shift and go to state 221
    empty                          shift and go to state 224

state 192

    (86) body -> OPENBRACES . body1 CLOSEBRACES
    (87) body1 -> . stmt body1
    (88) body1 -> . empty
    (13) stmt -> . assignment
    (14) stmt -> . condition
    (15) stmt -> . print
    (16) stmt -> . loop
    (17) stmt -> . read
    (18) stmt -> . graphstmt
    (19) stmt -> . graphr
    (20) stmt -> . funCall
    (21) stmt -> . return
    (143) empty -> .
    (49) assignment -> . ID assignment1 EQUALS assignment3 SEMICOLON
    (79) condition -> . IF head body condition1
    (44) print -> . PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
    (11) loop -> . while
    (12) loop -> . for
    (45) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (98) graphstmt -> . graphfig
    (99) graphstmt -> . graphview
    (100) graphstmt -> . graphmove
    (115) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (66) return -> . RETURN return1 SEMICOLON
    (90) while -> . WHILE head body
    (89) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (101) graphfig -> . graphfig1 SEMICOLON
    (118) graphview -> . graphview1 SEMICOLON
    (106) graphmove -> . graphmove1 SEMICOLON
    (102) graphfig1 -> . CIRCLE laRegla2
    (103) graphfig1 -> . SQUARE laRegla2
    (104) graphfig1 -> . TRIANGLE laRegla
    (105) graphfig1 -> . RECTANGLE laRegla
    (119) graphview1 -> . HIDE_STAR
    (120) graphview1 -> . SHOW_STAR
    (121) graphview1 -> . graphview2 exp
    (107) graphmove1 -> . HAND_DOWN
    (108) graphmove1 -> . HAND_UP
    (109) graphmove1 -> . graphmove2
    (122) graphview2 -> . SETXY graphview3
    (123) graphview2 -> . COLOR_STAR
    (124) graphview2 -> . SIZE_STAR
    (110) graphmove2 -> . GO laRegla2
    (111) graphmove2 -> . LEFT laRegla2
    (112) graphmove2 -> . RIGHT laRegla2
    (113) graphmove2 -> . BACK laRegla2
    (114) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 143 (empty -> .)
    ID              shift and go to state 81
    IF              shift and go to state 82
    PRINT           shift and go to state 83
    READ            shift and go to state 86
    REPEAT          shift and go to state 90
    RETURN          shift and go to state 91
    WHILE           shift and go to state 92
    FOR             shift and go to state 93
    CIRCLE          shift and go to state 97
    SQUARE          shift and go to state 98
    TRIANGLE        shift and go to state 99
    RECTANGLE       shift and go to state 100
    HIDE_STAR       shift and go to state 101
    SHOW_STAR       shift and go to state 102
    HAND_DOWN       shift and go to state 104
    HAND_UP         shift and go to state 105
    SETXY           shift and go to state 107
    COLOR_STAR      shift and go to state 108
    SIZE_STAR       shift and go to state 109
    GO              shift and go to state 110
    LEFT            shift and go to state 111
    RIGHT           shift and go to state 112
    BACK            shift and go to state 113
    ARC             shift and go to state 114

    body1                          shift and go to state 225
    stmt                           shift and go to state 226
    empty                          shift and go to state 227
    assignment                     shift and go to state 72
    condition                      shift and go to state 73
    print                          shift and go to state 74
    loop                           shift and go to state 75
    read                           shift and go to state 76
    graphstmt                      shift and go to state 77
    graphr                         shift and go to state 78
    funCall                        shift and go to state 79
    return                         shift and go to state 80
    while                          shift and go to state 84
    for                            shift and go to state 85
    graphfig                       shift and go to state 87
    graphview                      shift and go to state 88
    graphmove                      shift and go to state 89
    graphfig1                      shift and go to state 94
    graphview1                     shift and go to state 95
    graphmove1                     shift and go to state 96
    graphview2                     shift and go to state 103
    graphmove2                     shift and go to state 106

state 193

    (83) head -> OPENPAREN head1 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 228


state 194

    (84) head1 -> expression .
    (76) logical -> expression . logical1 expression
    (77) logical1 -> . OR
    (78) logical1 -> . AND

    CLOSEPAREN      reduce using rule 84 (head1 -> expression .)
    OR              shift and go to state 230
    AND             shift and go to state 231

    logical1                       shift and go to state 229

state 195

    (85) head1 -> logical .

    CLOSEPAREN      reduce using rule 85 (head1 -> logical .)


state 196

    (44) print -> PRINT OPENPAREN exp . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 232


state 197

    (45) read -> READ OPENPAREN ID . read1 CLOSEPAREN SEMICOLON
    (46) read1 -> . OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (47) read1 -> . OPENBRACKET exp CLOSEBRACKET
    (48) read1 -> . empty
    (143) empty -> .

    OPENBRACKET     shift and go to state 234
    CLOSEPAREN      reduce using rule 143 (empty -> .)

    read1                          shift and go to state 233
    empty                          shift and go to state 235

state 198

    (115) graphr -> REPEAT exp OPENBRACES . graphstmt graphr1 CLOSEBRACES
    (98) graphstmt -> . graphfig
    (99) graphstmt -> . graphview
    (100) graphstmt -> . graphmove
    (101) graphfig -> . graphfig1 SEMICOLON
    (118) graphview -> . graphview1 SEMICOLON
    (106) graphmove -> . graphmove1 SEMICOLON
    (102) graphfig1 -> . CIRCLE laRegla2
    (103) graphfig1 -> . SQUARE laRegla2
    (104) graphfig1 -> . TRIANGLE laRegla
    (105) graphfig1 -> . RECTANGLE laRegla
    (119) graphview1 -> . HIDE_STAR
    (120) graphview1 -> . SHOW_STAR
    (121) graphview1 -> . graphview2 exp
    (107) graphmove1 -> . HAND_DOWN
    (108) graphmove1 -> . HAND_UP
    (109) graphmove1 -> . graphmove2
    (122) graphview2 -> . SETXY graphview3
    (123) graphview2 -> . COLOR_STAR
    (124) graphview2 -> . SIZE_STAR
    (110) graphmove2 -> . GO laRegla2
    (111) graphmove2 -> . LEFT laRegla2
    (112) graphmove2 -> . RIGHT laRegla2
    (113) graphmove2 -> . BACK laRegla2
    (114) graphmove2 -> . ARC laRegla

    CIRCLE          shift and go to state 97
    SQUARE          shift and go to state 98
    TRIANGLE        shift and go to state 99
    RECTANGLE       shift and go to state 100
    HIDE_STAR       shift and go to state 101
    SHOW_STAR       shift and go to state 102
    HAND_DOWN       shift and go to state 104
    HAND_UP         shift and go to state 105
    SETXY           shift and go to state 107
    COLOR_STAR      shift and go to state 108
    SIZE_STAR       shift and go to state 109
    GO              shift and go to state 110
    LEFT            shift and go to state 111
    RIGHT           shift and go to state 112
    BACK            shift and go to state 113
    ARC             shift and go to state 114

    graphstmt                      shift and go to state 236
    graphfig                       shift and go to state 87
    graphview                      shift and go to state 88
    graphmove                      shift and go to state 89
    graphfig1                      shift and go to state 94
    graphview1                     shift and go to state 95
    graphmove1                     shift and go to state 96
    graphview2                     shift and go to state 103
    graphmove2                     shift and go to state 106

state 199

    (66) return -> RETURN return1 SEMICOLON .

    ID              reduce using rule 66 (return -> RETURN return1 SEMICOLON .)
    IF              reduce using rule 66 (return -> RETURN return1 SEMICOLON .)
    PRINT           reduce using rule 66 (return -> RETURN return1 SEMICOLON .)
    READ            reduce using rule 66 (return -> RETURN return1 SEMICOLON .)
    REPEAT          reduce using rule 66 (return -> RETURN return1 SEMICOLON .)
    RETURN          reduce using rule 66 (return -> RETURN return1 SEMICOLON .)
    WHILE           reduce using rule 66 (return -> RETURN return1 SEMICOLON .)
    FOR             reduce using rule 66 (return -> RETURN return1 SEMICOLON .)
    CIRCLE          reduce using rule 66 (return -> RETURN return1 SEMICOLON .)
    SQUARE          reduce using rule 66 (return -> RETURN return1 SEMICOLON .)
    TRIANGLE        reduce using rule 66 (return -> RETURN return1 SEMICOLON .)
    RECTANGLE       reduce using rule 66 (return -> RETURN return1 SEMICOLON .)
    HIDE_STAR       reduce using rule 66 (return -> RETURN return1 SEMICOLON .)
    SHOW_STAR       reduce using rule 66 (return -> RETURN return1 SEMICOLON .)
    HAND_DOWN       reduce using rule 66 (return -> RETURN return1 SEMICOLON .)
    HAND_UP         reduce using rule 66 (return -> RETURN return1 SEMICOLON .)
    SETXY           reduce using rule 66 (return -> RETURN return1 SEMICOLON .)
    COLOR_STAR      reduce using rule 66 (return -> RETURN return1 SEMICOLON .)
    SIZE_STAR       reduce using rule 66 (return -> RETURN return1 SEMICOLON .)
    GO              reduce using rule 66 (return -> RETURN return1 SEMICOLON .)
    LEFT            reduce using rule 66 (return -> RETURN return1 SEMICOLON .)
    RIGHT           reduce using rule 66 (return -> RETURN return1 SEMICOLON .)
    BACK            reduce using rule 66 (return -> RETURN return1 SEMICOLON .)
    ARC             reduce using rule 66 (return -> RETURN return1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 66 (return -> RETURN return1 SEMICOLON .)


state 200

    (90) while -> WHILE head body .

    ID              reduce using rule 90 (while -> WHILE head body .)
    IF              reduce using rule 90 (while -> WHILE head body .)
    PRINT           reduce using rule 90 (while -> WHILE head body .)
    READ            reduce using rule 90 (while -> WHILE head body .)
    REPEAT          reduce using rule 90 (while -> WHILE head body .)
    RETURN          reduce using rule 90 (while -> WHILE head body .)
    WHILE           reduce using rule 90 (while -> WHILE head body .)
    FOR             reduce using rule 90 (while -> WHILE head body .)
    CIRCLE          reduce using rule 90 (while -> WHILE head body .)
    SQUARE          reduce using rule 90 (while -> WHILE head body .)
    TRIANGLE        reduce using rule 90 (while -> WHILE head body .)
    RECTANGLE       reduce using rule 90 (while -> WHILE head body .)
    HIDE_STAR       reduce using rule 90 (while -> WHILE head body .)
    SHOW_STAR       reduce using rule 90 (while -> WHILE head body .)
    HAND_DOWN       reduce using rule 90 (while -> WHILE head body .)
    HAND_UP         reduce using rule 90 (while -> WHILE head body .)
    SETXY           reduce using rule 90 (while -> WHILE head body .)
    COLOR_STAR      reduce using rule 90 (while -> WHILE head body .)
    SIZE_STAR       reduce using rule 90 (while -> WHILE head body .)
    GO              reduce using rule 90 (while -> WHILE head body .)
    LEFT            reduce using rule 90 (while -> WHILE head body .)
    RIGHT           reduce using rule 90 (while -> WHILE head body .)
    BACK            reduce using rule 90 (while -> WHILE head body .)
    ARC             reduce using rule 90 (while -> WHILE head body .)
    CLOSEBRACES     reduce using rule 90 (while -> WHILE head body .)


state 201

    (89) for -> FOR OPENPAREN ID . TWODOTS exp CLOSEPAREN body

    TWODOTS         shift and go to state 237


state 202

    (97) laRegla2 -> OPENPAREN exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 238


state 203

    (96) laRegla -> OPENPAREN exp . COMMA exp CLOSEPAREN

    COMMA           shift and go to state 239


state 204

    (125) graphview3 -> exp COMMA .

    ID              reduce using rule 125 (graphview3 -> exp COMMA .)
    CTEINT          reduce using rule 125 (graphview3 -> exp COMMA .)
    CTEFLOAT        reduce using rule 125 (graphview3 -> exp COMMA .)
    CTECHAR         reduce using rule 125 (graphview3 -> exp COMMA .)
    ADDITION        reduce using rule 125 (graphview3 -> exp COMMA .)
    SUBSTRACTION    reduce using rule 125 (graphview3 -> exp COMMA .)
    OPENPAREN       reduce using rule 125 (graphview3 -> exp COMMA .)


state 205

    (22) function -> FUN function1 ID function2 inicia_fun fun_vars function4 . termina_fun
    (26) termina_fun -> . CLOSEBRACES

    CLOSEBRACES     shift and go to state 241

    termina_fun                    shift and go to state 240

state 206

    (30) function4 -> stmt . function4
    (30) function4 -> . stmt function4
    (31) function4 -> . empty
    (13) stmt -> . assignment
    (14) stmt -> . condition
    (15) stmt -> . print
    (16) stmt -> . loop
    (17) stmt -> . read
    (18) stmt -> . graphstmt
    (19) stmt -> . graphr
    (20) stmt -> . funCall
    (21) stmt -> . return
    (143) empty -> .
    (49) assignment -> . ID assignment1 EQUALS assignment3 SEMICOLON
    (79) condition -> . IF head body condition1
    (44) print -> . PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
    (11) loop -> . while
    (12) loop -> . for
    (45) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (98) graphstmt -> . graphfig
    (99) graphstmt -> . graphview
    (100) graphstmt -> . graphmove
    (115) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (66) return -> . RETURN return1 SEMICOLON
    (90) while -> . WHILE head body
    (89) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (101) graphfig -> . graphfig1 SEMICOLON
    (118) graphview -> . graphview1 SEMICOLON
    (106) graphmove -> . graphmove1 SEMICOLON
    (102) graphfig1 -> . CIRCLE laRegla2
    (103) graphfig1 -> . SQUARE laRegla2
    (104) graphfig1 -> . TRIANGLE laRegla
    (105) graphfig1 -> . RECTANGLE laRegla
    (119) graphview1 -> . HIDE_STAR
    (120) graphview1 -> . SHOW_STAR
    (121) graphview1 -> . graphview2 exp
    (107) graphmove1 -> . HAND_DOWN
    (108) graphmove1 -> . HAND_UP
    (109) graphmove1 -> . graphmove2
    (122) graphview2 -> . SETXY graphview3
    (123) graphview2 -> . COLOR_STAR
    (124) graphview2 -> . SIZE_STAR
    (110) graphmove2 -> . GO laRegla2
    (111) graphmove2 -> . LEFT laRegla2
    (112) graphmove2 -> . RIGHT laRegla2
    (113) graphmove2 -> . BACK laRegla2
    (114) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 143 (empty -> .)
    ID              shift and go to state 81
    IF              shift and go to state 82
    PRINT           shift and go to state 83
    READ            shift and go to state 86
    REPEAT          shift and go to state 90
    RETURN          shift and go to state 91
    WHILE           shift and go to state 92
    FOR             shift and go to state 93
    CIRCLE          shift and go to state 97
    SQUARE          shift and go to state 98
    TRIANGLE        shift and go to state 99
    RECTANGLE       shift and go to state 100
    HIDE_STAR       shift and go to state 101
    SHOW_STAR       shift and go to state 102
    HAND_DOWN       shift and go to state 104
    HAND_UP         shift and go to state 105
    SETXY           shift and go to state 107
    COLOR_STAR      shift and go to state 108
    SIZE_STAR       shift and go to state 109
    GO              shift and go to state 110
    LEFT            shift and go to state 111
    RIGHT           shift and go to state 112
    BACK            shift and go to state 113
    ARC             shift and go to state 114

    stmt                           shift and go to state 206
    function4                      shift and go to state 242
    empty                          shift and go to state 207
    assignment                     shift and go to state 72
    condition                      shift and go to state 73
    print                          shift and go to state 74
    loop                           shift and go to state 75
    read                           shift and go to state 76
    graphstmt                      shift and go to state 77
    graphr                         shift and go to state 78
    funCall                        shift and go to state 79
    return                         shift and go to state 80
    while                          shift and go to state 84
    for                            shift and go to state 85
    graphfig                       shift and go to state 87
    graphview                      shift and go to state 88
    graphmove                      shift and go to state 89
    graphfig1                      shift and go to state 94
    graphview1                     shift and go to state 95
    graphmove1                     shift and go to state 96
    graphview2                     shift and go to state 103
    graphmove2                     shift and go to state 106

state 207

    (31) function4 -> empty .

    CLOSEBRACES     reduce using rule 31 (function4 -> empty .)


state 208

    (33) fun_vars -> vars fun_vars .

    ID              reduce using rule 33 (fun_vars -> vars fun_vars .)
    IF              reduce using rule 33 (fun_vars -> vars fun_vars .)
    PRINT           reduce using rule 33 (fun_vars -> vars fun_vars .)
    READ            reduce using rule 33 (fun_vars -> vars fun_vars .)
    REPEAT          reduce using rule 33 (fun_vars -> vars fun_vars .)
    RETURN          reduce using rule 33 (fun_vars -> vars fun_vars .)
    WHILE           reduce using rule 33 (fun_vars -> vars fun_vars .)
    FOR             reduce using rule 33 (fun_vars -> vars fun_vars .)
    CIRCLE          reduce using rule 33 (fun_vars -> vars fun_vars .)
    SQUARE          reduce using rule 33 (fun_vars -> vars fun_vars .)
    TRIANGLE        reduce using rule 33 (fun_vars -> vars fun_vars .)
    RECTANGLE       reduce using rule 33 (fun_vars -> vars fun_vars .)
    HIDE_STAR       reduce using rule 33 (fun_vars -> vars fun_vars .)
    SHOW_STAR       reduce using rule 33 (fun_vars -> vars fun_vars .)
    HAND_DOWN       reduce using rule 33 (fun_vars -> vars fun_vars .)
    HAND_UP         reduce using rule 33 (fun_vars -> vars fun_vars .)
    SETXY           reduce using rule 33 (fun_vars -> vars fun_vars .)
    COLOR_STAR      reduce using rule 33 (fun_vars -> vars fun_vars .)
    SIZE_STAR       reduce using rule 33 (fun_vars -> vars fun_vars .)
    GO              reduce using rule 33 (fun_vars -> vars fun_vars .)
    LEFT            reduce using rule 33 (fun_vars -> vars fun_vars .)
    RIGHT           reduce using rule 33 (fun_vars -> vars fun_vars .)
    BACK            reduce using rule 33 (fun_vars -> vars fun_vars .)
    ARC             reduce using rule 33 (fun_vars -> vars fun_vars .)
    CLOSEBRACES     reduce using rule 33 (fun_vars -> vars fun_vars .)


state 209

    (28) function3 -> type ID function5 .

    CLOSEPAREN      reduce using rule 28 (function3 -> type ID function5 .)


state 210

    (32) function5 -> COMMA . type ID function3
    (41) type -> . INT
    (42) type -> . FLOAT
    (43) type -> . CHAR

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    type                           shift and go to state 243

state 211

    (91) funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .

    MULTIPLICATION  reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    DIVISION        reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    ADDITION        reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    SUBSTRACTION    reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    GREATER         reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    LESS            reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    ISEQUAL         reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CLOSEPAREN      reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    COMMA           reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CLOSEBRACKET    reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    OPENBRACES      reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    OR              reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    AND             reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CTEINT          reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CTEFLOAT        reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CTECHAR         reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    OPENPAREN       reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 91 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)


state 212

    (94) funCall3 -> COMMA exp . funCall2
    (92) funCall2 -> . exp funCall3
    (93) funCall2 -> . empty
    (127) exp -> . term exp1
    (143) empty -> .
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    CLOSEPAREN      reduce using rule 143 (empty -> .)
    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    exp                            shift and go to state 126
    funCall2                       shift and go to state 244
    empty                          shift and go to state 127
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 213

    (61) vcte3 -> OPENBRACKET . exp CLOSEBRACKET
    (127) exp -> . term exp1
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    exp                            shift and go to state 245
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 214

    (59) vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .

    MULTIPLICATION  reduce using rule 59 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    DIVISION        reduce using rule 59 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ADDITION        reduce using rule 59 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    SUBSTRACTION    reduce using rule 59 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    SEMICOLON       reduce using rule 59 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    GREATER         reduce using rule 59 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    LESS            reduce using rule 59 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    NOTEQUAL        reduce using rule 59 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ISEQUAL         reduce using rule 59 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CLOSEPAREN      reduce using rule 59 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    COMMA           reduce using rule 59 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CLOSEBRACKET    reduce using rule 59 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    OPENBRACES      reduce using rule 59 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    OR              reduce using rule 59 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    AND             reduce using rule 59 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ID              reduce using rule 59 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CTEINT          reduce using rule 59 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CTEFLOAT        reduce using rule 59 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CTECHAR         reduce using rule 59 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    OPENPAREN       reduce using rule 59 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)


state 215

    (62) vcte3 -> empty .

    MULTIPLICATION  reduce using rule 62 (vcte3 -> empty .)
    DIVISION        reduce using rule 62 (vcte3 -> empty .)
    ADDITION        reduce using rule 62 (vcte3 -> empty .)
    SUBSTRACTION    reduce using rule 62 (vcte3 -> empty .)
    SEMICOLON       reduce using rule 62 (vcte3 -> empty .)
    GREATER         reduce using rule 62 (vcte3 -> empty .)
    LESS            reduce using rule 62 (vcte3 -> empty .)
    NOTEQUAL        reduce using rule 62 (vcte3 -> empty .)
    ISEQUAL         reduce using rule 62 (vcte3 -> empty .)
    CLOSEPAREN      reduce using rule 62 (vcte3 -> empty .)
    COMMA           reduce using rule 62 (vcte3 -> empty .)
    CLOSEBRACKET    reduce using rule 62 (vcte3 -> empty .)
    OPENBRACES      reduce using rule 62 (vcte3 -> empty .)
    OR              reduce using rule 62 (vcte3 -> empty .)
    AND             reduce using rule 62 (vcte3 -> empty .)
    ID              reduce using rule 62 (vcte3 -> empty .)
    CTEINT          reduce using rule 62 (vcte3 -> empty .)
    CTEFLOAT        reduce using rule 62 (vcte3 -> empty .)
    CTECHAR         reduce using rule 62 (vcte3 -> empty .)
    OPENPAREN       reduce using rule 62 (vcte3 -> empty .)


state 216

    (39) vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .

    SEMICOLON       reduce using rule 39 (vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .)


state 217

    (49) assignment -> ID assignment1 EQUALS assignment3 . SEMICOLON

    SEMICOLON       shift and go to state 246


state 218

    (54) assignment3 -> exp .

    SEMICOLON       reduce using rule 54 (assignment3 -> exp .)


state 219

    (55) assignment3 -> read .

    SEMICOLON       reduce using rule 55 (assignment3 -> read .)


state 220

    (53) assignment2 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     reduce using rule 53 (assignment2 -> OPENBRACKET exp CLOSEBRACKET .)
    EQUALS          reduce using rule 53 (assignment2 -> OPENBRACKET exp CLOSEBRACKET .)


state 221

    (79) condition -> IF head body condition1 .

    ID              reduce using rule 79 (condition -> IF head body condition1 .)
    IF              reduce using rule 79 (condition -> IF head body condition1 .)
    PRINT           reduce using rule 79 (condition -> IF head body condition1 .)
    READ            reduce using rule 79 (condition -> IF head body condition1 .)
    REPEAT          reduce using rule 79 (condition -> IF head body condition1 .)
    RETURN          reduce using rule 79 (condition -> IF head body condition1 .)
    WHILE           reduce using rule 79 (condition -> IF head body condition1 .)
    FOR             reduce using rule 79 (condition -> IF head body condition1 .)
    CIRCLE          reduce using rule 79 (condition -> IF head body condition1 .)
    SQUARE          reduce using rule 79 (condition -> IF head body condition1 .)
    TRIANGLE        reduce using rule 79 (condition -> IF head body condition1 .)
    RECTANGLE       reduce using rule 79 (condition -> IF head body condition1 .)
    HIDE_STAR       reduce using rule 79 (condition -> IF head body condition1 .)
    SHOW_STAR       reduce using rule 79 (condition -> IF head body condition1 .)
    HAND_DOWN       reduce using rule 79 (condition -> IF head body condition1 .)
    HAND_UP         reduce using rule 79 (condition -> IF head body condition1 .)
    SETXY           reduce using rule 79 (condition -> IF head body condition1 .)
    COLOR_STAR      reduce using rule 79 (condition -> IF head body condition1 .)
    SIZE_STAR       reduce using rule 79 (condition -> IF head body condition1 .)
    GO              reduce using rule 79 (condition -> IF head body condition1 .)
    LEFT            reduce using rule 79 (condition -> IF head body condition1 .)
    RIGHT           reduce using rule 79 (condition -> IF head body condition1 .)
    BACK            reduce using rule 79 (condition -> IF head body condition1 .)
    ARC             reduce using rule 79 (condition -> IF head body condition1 .)
    CLOSEBRACES     reduce using rule 79 (condition -> IF head body condition1 .)


state 222

    (80) condition1 -> ELSEIF . head body condition1
    (83) head -> . OPENPAREN head1 CLOSEPAREN

    OPENPAREN       shift and go to state 148

    head                           shift and go to state 247

state 223

    (81) condition1 -> ELSE . body
    (86) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 192

    body                           shift and go to state 248

state 224

    (82) condition1 -> empty .

    ID              reduce using rule 82 (condition1 -> empty .)
    IF              reduce using rule 82 (condition1 -> empty .)
    PRINT           reduce using rule 82 (condition1 -> empty .)
    READ            reduce using rule 82 (condition1 -> empty .)
    REPEAT          reduce using rule 82 (condition1 -> empty .)
    RETURN          reduce using rule 82 (condition1 -> empty .)
    WHILE           reduce using rule 82 (condition1 -> empty .)
    FOR             reduce using rule 82 (condition1 -> empty .)
    CIRCLE          reduce using rule 82 (condition1 -> empty .)
    SQUARE          reduce using rule 82 (condition1 -> empty .)
    TRIANGLE        reduce using rule 82 (condition1 -> empty .)
    RECTANGLE       reduce using rule 82 (condition1 -> empty .)
    HIDE_STAR       reduce using rule 82 (condition1 -> empty .)
    SHOW_STAR       reduce using rule 82 (condition1 -> empty .)
    HAND_DOWN       reduce using rule 82 (condition1 -> empty .)
    HAND_UP         reduce using rule 82 (condition1 -> empty .)
    SETXY           reduce using rule 82 (condition1 -> empty .)
    COLOR_STAR      reduce using rule 82 (condition1 -> empty .)
    SIZE_STAR       reduce using rule 82 (condition1 -> empty .)
    GO              reduce using rule 82 (condition1 -> empty .)
    LEFT            reduce using rule 82 (condition1 -> empty .)
    RIGHT           reduce using rule 82 (condition1 -> empty .)
    BACK            reduce using rule 82 (condition1 -> empty .)
    ARC             reduce using rule 82 (condition1 -> empty .)
    CLOSEBRACES     reduce using rule 82 (condition1 -> empty .)


state 225

    (86) body -> OPENBRACES body1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 249


state 226

    (87) body1 -> stmt . body1
    (87) body1 -> . stmt body1
    (88) body1 -> . empty
    (13) stmt -> . assignment
    (14) stmt -> . condition
    (15) stmt -> . print
    (16) stmt -> . loop
    (17) stmt -> . read
    (18) stmt -> . graphstmt
    (19) stmt -> . graphr
    (20) stmt -> . funCall
    (21) stmt -> . return
    (143) empty -> .
    (49) assignment -> . ID assignment1 EQUALS assignment3 SEMICOLON
    (79) condition -> . IF head body condition1
    (44) print -> . PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
    (11) loop -> . while
    (12) loop -> . for
    (45) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (98) graphstmt -> . graphfig
    (99) graphstmt -> . graphview
    (100) graphstmt -> . graphmove
    (115) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (66) return -> . RETURN return1 SEMICOLON
    (90) while -> . WHILE head body
    (89) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (101) graphfig -> . graphfig1 SEMICOLON
    (118) graphview -> . graphview1 SEMICOLON
    (106) graphmove -> . graphmove1 SEMICOLON
    (102) graphfig1 -> . CIRCLE laRegla2
    (103) graphfig1 -> . SQUARE laRegla2
    (104) graphfig1 -> . TRIANGLE laRegla
    (105) graphfig1 -> . RECTANGLE laRegla
    (119) graphview1 -> . HIDE_STAR
    (120) graphview1 -> . SHOW_STAR
    (121) graphview1 -> . graphview2 exp
    (107) graphmove1 -> . HAND_DOWN
    (108) graphmove1 -> . HAND_UP
    (109) graphmove1 -> . graphmove2
    (122) graphview2 -> . SETXY graphview3
    (123) graphview2 -> . COLOR_STAR
    (124) graphview2 -> . SIZE_STAR
    (110) graphmove2 -> . GO laRegla2
    (111) graphmove2 -> . LEFT laRegla2
    (112) graphmove2 -> . RIGHT laRegla2
    (113) graphmove2 -> . BACK laRegla2
    (114) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 143 (empty -> .)
    ID              shift and go to state 81
    IF              shift and go to state 82
    PRINT           shift and go to state 83
    READ            shift and go to state 86
    REPEAT          shift and go to state 90
    RETURN          shift and go to state 91
    WHILE           shift and go to state 92
    FOR             shift and go to state 93
    CIRCLE          shift and go to state 97
    SQUARE          shift and go to state 98
    TRIANGLE        shift and go to state 99
    RECTANGLE       shift and go to state 100
    HIDE_STAR       shift and go to state 101
    SHOW_STAR       shift and go to state 102
    HAND_DOWN       shift and go to state 104
    HAND_UP         shift and go to state 105
    SETXY           shift and go to state 107
    COLOR_STAR      shift and go to state 108
    SIZE_STAR       shift and go to state 109
    GO              shift and go to state 110
    LEFT            shift and go to state 111
    RIGHT           shift and go to state 112
    BACK            shift and go to state 113
    ARC             shift and go to state 114

    stmt                           shift and go to state 226
    body1                          shift and go to state 250
    empty                          shift and go to state 227
    assignment                     shift and go to state 72
    condition                      shift and go to state 73
    print                          shift and go to state 74
    loop                           shift and go to state 75
    read                           shift and go to state 76
    graphstmt                      shift and go to state 77
    graphr                         shift and go to state 78
    funCall                        shift and go to state 79
    return                         shift and go to state 80
    while                          shift and go to state 84
    for                            shift and go to state 85
    graphfig                       shift and go to state 87
    graphview                      shift and go to state 88
    graphmove                      shift and go to state 89
    graphfig1                      shift and go to state 94
    graphview1                     shift and go to state 95
    graphmove1                     shift and go to state 96
    graphview2                     shift and go to state 103
    graphmove2                     shift and go to state 106

state 227

    (88) body1 -> empty .

    CLOSEBRACES     reduce using rule 88 (body1 -> empty .)


state 228

    (83) head -> OPENPAREN head1 CLOSEPAREN .

    OPENBRACES      reduce using rule 83 (head -> OPENPAREN head1 CLOSEPAREN .)


state 229

    (76) logical -> expression logical1 . expression
    (69) expression -> . exp expression1
    (127) exp -> . term exp1
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    expression                     shift and go to state 251
    exp                            shift and go to state 67
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 230

    (77) logical1 -> OR .

    ID              reduce using rule 77 (logical1 -> OR .)
    CTEINT          reduce using rule 77 (logical1 -> OR .)
    CTEFLOAT        reduce using rule 77 (logical1 -> OR .)
    CTECHAR         reduce using rule 77 (logical1 -> OR .)
    ADDITION        reduce using rule 77 (logical1 -> OR .)
    SUBSTRACTION    reduce using rule 77 (logical1 -> OR .)
    OPENPAREN       reduce using rule 77 (logical1 -> OR .)


state 231

    (78) logical1 -> AND .

    ID              reduce using rule 78 (logical1 -> AND .)
    CTEINT          reduce using rule 78 (logical1 -> AND .)
    CTEFLOAT        reduce using rule 78 (logical1 -> AND .)
    CTECHAR         reduce using rule 78 (logical1 -> AND .)
    ADDITION        reduce using rule 78 (logical1 -> AND .)
    SUBSTRACTION    reduce using rule 78 (logical1 -> AND .)
    OPENPAREN       reduce using rule 78 (logical1 -> AND .)


state 232

    (44) print -> PRINT OPENPAREN exp CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 252


state 233

    (45) read -> READ OPENPAREN ID read1 . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 253


state 234

    (46) read1 -> OPENBRACKET . exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (47) read1 -> OPENBRACKET . exp CLOSEBRACKET
    (127) exp -> . term exp1
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    exp                            shift and go to state 254
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 235

    (48) read1 -> empty .

    CLOSEPAREN      reduce using rule 48 (read1 -> empty .)


state 236

    (115) graphr -> REPEAT exp OPENBRACES graphstmt . graphr1 CLOSEBRACES
    (116) graphr1 -> . graphstmt graphr1
    (117) graphr1 -> . empty
    (98) graphstmt -> . graphfig
    (99) graphstmt -> . graphview
    (100) graphstmt -> . graphmove
    (143) empty -> .
    (101) graphfig -> . graphfig1 SEMICOLON
    (118) graphview -> . graphview1 SEMICOLON
    (106) graphmove -> . graphmove1 SEMICOLON
    (102) graphfig1 -> . CIRCLE laRegla2
    (103) graphfig1 -> . SQUARE laRegla2
    (104) graphfig1 -> . TRIANGLE laRegla
    (105) graphfig1 -> . RECTANGLE laRegla
    (119) graphview1 -> . HIDE_STAR
    (120) graphview1 -> . SHOW_STAR
    (121) graphview1 -> . graphview2 exp
    (107) graphmove1 -> . HAND_DOWN
    (108) graphmove1 -> . HAND_UP
    (109) graphmove1 -> . graphmove2
    (122) graphview2 -> . SETXY graphview3
    (123) graphview2 -> . COLOR_STAR
    (124) graphview2 -> . SIZE_STAR
    (110) graphmove2 -> . GO laRegla2
    (111) graphmove2 -> . LEFT laRegla2
    (112) graphmove2 -> . RIGHT laRegla2
    (113) graphmove2 -> . BACK laRegla2
    (114) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 143 (empty -> .)
    CIRCLE          shift and go to state 97
    SQUARE          shift and go to state 98
    TRIANGLE        shift and go to state 99
    RECTANGLE       shift and go to state 100
    HIDE_STAR       shift and go to state 101
    SHOW_STAR       shift and go to state 102
    HAND_DOWN       shift and go to state 104
    HAND_UP         shift and go to state 105
    SETXY           shift and go to state 107
    COLOR_STAR      shift and go to state 108
    SIZE_STAR       shift and go to state 109
    GO              shift and go to state 110
    LEFT            shift and go to state 111
    RIGHT           shift and go to state 112
    BACK            shift and go to state 113
    ARC             shift and go to state 114

    graphstmt                      shift and go to state 255
    graphr1                        shift and go to state 256
    empty                          shift and go to state 257
    graphfig                       shift and go to state 87
    graphview                      shift and go to state 88
    graphmove                      shift and go to state 89
    graphfig1                      shift and go to state 94
    graphview1                     shift and go to state 95
    graphmove1                     shift and go to state 96
    graphview2                     shift and go to state 103
    graphmove2                     shift and go to state 106

state 237

    (89) for -> FOR OPENPAREN ID TWODOTS . exp CLOSEPAREN body
    (127) exp -> . term exp1
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    exp                            shift and go to state 258
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 238

    (97) laRegla2 -> OPENPAREN exp CLOSEPAREN .

    SEMICOLON       reduce using rule 97 (laRegla2 -> OPENPAREN exp CLOSEPAREN .)


state 239

    (96) laRegla -> OPENPAREN exp COMMA . exp CLOSEPAREN
    (127) exp -> . term exp1
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    exp                            shift and go to state 259
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 240

    (22) function -> FUN function1 ID function2 inicia_fun fun_vars function4 termina_fun .

    FUN             reduce using rule 22 (function -> FUN function1 ID function2 inicia_fun fun_vars function4 termina_fun .)
    MULTIPLICATION  reduce using rule 22 (function -> FUN function1 ID function2 inicia_fun fun_vars function4 termina_fun .)


state 241

    (26) termina_fun -> CLOSEBRACES .

    FUN             reduce using rule 26 (termina_fun -> CLOSEBRACES .)
    MULTIPLICATION  reduce using rule 26 (termina_fun -> CLOSEBRACES .)


state 242

    (30) function4 -> stmt function4 .

    CLOSEBRACES     reduce using rule 30 (function4 -> stmt function4 .)


state 243

    (32) function5 -> COMMA type . ID function3

    ID              shift and go to state 260


state 244

    (94) funCall3 -> COMMA exp funCall2 .

    CLOSEPAREN      reduce using rule 94 (funCall3 -> COMMA exp funCall2 .)


state 245

    (61) vcte3 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 261


state 246

    (49) assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .

    ID              reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    IF              reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    PRINT           reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    READ            reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    REPEAT          reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    RETURN          reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    WHILE           reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    FOR             reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    CIRCLE          reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    SQUARE          reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    TRIANGLE        reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    RECTANGLE       reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    HIDE_STAR       reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    SHOW_STAR       reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    HAND_DOWN       reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    HAND_UP         reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    SETXY           reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    COLOR_STAR      reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    SIZE_STAR       reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    GO              reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    LEFT            reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    RIGHT           reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    BACK            reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    ARC             reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    CLOSEBRACES     reduce using rule 49 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)


state 247

    (80) condition1 -> ELSEIF head . body condition1
    (86) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 192

    body                           shift and go to state 262

state 248

    (81) condition1 -> ELSE body .

    ID              reduce using rule 81 (condition1 -> ELSE body .)
    IF              reduce using rule 81 (condition1 -> ELSE body .)
    PRINT           reduce using rule 81 (condition1 -> ELSE body .)
    READ            reduce using rule 81 (condition1 -> ELSE body .)
    REPEAT          reduce using rule 81 (condition1 -> ELSE body .)
    RETURN          reduce using rule 81 (condition1 -> ELSE body .)
    WHILE           reduce using rule 81 (condition1 -> ELSE body .)
    FOR             reduce using rule 81 (condition1 -> ELSE body .)
    CIRCLE          reduce using rule 81 (condition1 -> ELSE body .)
    SQUARE          reduce using rule 81 (condition1 -> ELSE body .)
    TRIANGLE        reduce using rule 81 (condition1 -> ELSE body .)
    RECTANGLE       reduce using rule 81 (condition1 -> ELSE body .)
    HIDE_STAR       reduce using rule 81 (condition1 -> ELSE body .)
    SHOW_STAR       reduce using rule 81 (condition1 -> ELSE body .)
    HAND_DOWN       reduce using rule 81 (condition1 -> ELSE body .)
    HAND_UP         reduce using rule 81 (condition1 -> ELSE body .)
    SETXY           reduce using rule 81 (condition1 -> ELSE body .)
    COLOR_STAR      reduce using rule 81 (condition1 -> ELSE body .)
    SIZE_STAR       reduce using rule 81 (condition1 -> ELSE body .)
    GO              reduce using rule 81 (condition1 -> ELSE body .)
    LEFT            reduce using rule 81 (condition1 -> ELSE body .)
    RIGHT           reduce using rule 81 (condition1 -> ELSE body .)
    BACK            reduce using rule 81 (condition1 -> ELSE body .)
    ARC             reduce using rule 81 (condition1 -> ELSE body .)
    CLOSEBRACES     reduce using rule 81 (condition1 -> ELSE body .)


state 249

    (86) body -> OPENBRACES body1 CLOSEBRACES .

    ELSEIF          reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSE            reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    ID              reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    IF              reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    PRINT           reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    READ            reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    REPEAT          reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    RETURN          reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    WHILE           reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    FOR             reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    CIRCLE          reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    SQUARE          reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_UP         reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    SETXY           reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    GO              reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    LEFT            reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    RIGHT           reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    BACK            reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    ARC             reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 86 (body -> OPENBRACES body1 CLOSEBRACES .)


state 250

    (87) body1 -> stmt body1 .

    CLOSEBRACES     reduce using rule 87 (body1 -> stmt body1 .)


state 251

    (76) logical -> expression logical1 expression .

    CLOSEPAREN      reduce using rule 76 (logical -> expression logical1 expression .)


state 252

    (44) print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .

    ID              reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 44 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)


state 253

    (45) read -> READ OPENPAREN ID read1 CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 263


state 254

    (46) read1 -> OPENBRACKET exp . CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (47) read1 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 264


state 255

    (116) graphr1 -> graphstmt . graphr1
    (116) graphr1 -> . graphstmt graphr1
    (117) graphr1 -> . empty
    (98) graphstmt -> . graphfig
    (99) graphstmt -> . graphview
    (100) graphstmt -> . graphmove
    (143) empty -> .
    (101) graphfig -> . graphfig1 SEMICOLON
    (118) graphview -> . graphview1 SEMICOLON
    (106) graphmove -> . graphmove1 SEMICOLON
    (102) graphfig1 -> . CIRCLE laRegla2
    (103) graphfig1 -> . SQUARE laRegla2
    (104) graphfig1 -> . TRIANGLE laRegla
    (105) graphfig1 -> . RECTANGLE laRegla
    (119) graphview1 -> . HIDE_STAR
    (120) graphview1 -> . SHOW_STAR
    (121) graphview1 -> . graphview2 exp
    (107) graphmove1 -> . HAND_DOWN
    (108) graphmove1 -> . HAND_UP
    (109) graphmove1 -> . graphmove2
    (122) graphview2 -> . SETXY graphview3
    (123) graphview2 -> . COLOR_STAR
    (124) graphview2 -> . SIZE_STAR
    (110) graphmove2 -> . GO laRegla2
    (111) graphmove2 -> . LEFT laRegla2
    (112) graphmove2 -> . RIGHT laRegla2
    (113) graphmove2 -> . BACK laRegla2
    (114) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 143 (empty -> .)
    CIRCLE          shift and go to state 97
    SQUARE          shift and go to state 98
    TRIANGLE        shift and go to state 99
    RECTANGLE       shift and go to state 100
    HIDE_STAR       shift and go to state 101
    SHOW_STAR       shift and go to state 102
    HAND_DOWN       shift and go to state 104
    HAND_UP         shift and go to state 105
    SETXY           shift and go to state 107
    COLOR_STAR      shift and go to state 108
    SIZE_STAR       shift and go to state 109
    GO              shift and go to state 110
    LEFT            shift and go to state 111
    RIGHT           shift and go to state 112
    BACK            shift and go to state 113
    ARC             shift and go to state 114

    graphstmt                      shift and go to state 255
    graphr1                        shift and go to state 265
    empty                          shift and go to state 257
    graphfig                       shift and go to state 87
    graphview                      shift and go to state 88
    graphmove                      shift and go to state 89
    graphfig1                      shift and go to state 94
    graphview1                     shift and go to state 95
    graphmove1                     shift and go to state 96
    graphview2                     shift and go to state 103
    graphmove2                     shift and go to state 106

state 256

    (115) graphr -> REPEAT exp OPENBRACES graphstmt graphr1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 266


state 257

    (117) graphr1 -> empty .

    CLOSEBRACES     reduce using rule 117 (graphr1 -> empty .)


state 258

    (89) for -> FOR OPENPAREN ID TWODOTS exp . CLOSEPAREN body

    CLOSEPAREN      shift and go to state 267


state 259

    (96) laRegla -> OPENPAREN exp COMMA exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 268


state 260

    (32) function5 -> COMMA type ID . function3
    (28) function3 -> . type ID function5
    (29) function3 -> . empty
    (41) type -> . INT
    (42) type -> . FLOAT
    (43) type -> . CHAR
    (143) empty -> .

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    CLOSEPAREN      reduce using rule 143 (empty -> .)

    type                           shift and go to state 119
    function3                      shift and go to state 269
    empty                          shift and go to state 120

state 261

    (61) vcte3 -> OPENBRACKET exp CLOSEBRACKET .

    MULTIPLICATION  reduce using rule 61 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    DIVISION        reduce using rule 61 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ADDITION        reduce using rule 61 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    SUBSTRACTION    reduce using rule 61 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    SEMICOLON       reduce using rule 61 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    GREATER         reduce using rule 61 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    LESS            reduce using rule 61 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 61 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ISEQUAL         reduce using rule 61 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 61 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    COMMA           reduce using rule 61 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 61 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    OPENBRACES      reduce using rule 61 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    OR              reduce using rule 61 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    AND             reduce using rule 61 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ID              reduce using rule 61 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CTEINT          reduce using rule 61 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CTEFLOAT        reduce using rule 61 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CTECHAR         reduce using rule 61 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    OPENPAREN       reduce using rule 61 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)


state 262

    (80) condition1 -> ELSEIF head body . condition1
    (80) condition1 -> . ELSEIF head body condition1
    (81) condition1 -> . ELSE body
    (82) condition1 -> . empty
    (143) empty -> .

    ELSEIF          shift and go to state 222
    ELSE            shift and go to state 223
    ID              reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    PRINT           reduce using rule 143 (empty -> .)
    READ            reduce using rule 143 (empty -> .)
    REPEAT          reduce using rule 143 (empty -> .)
    RETURN          reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    FOR             reduce using rule 143 (empty -> .)
    CIRCLE          reduce using rule 143 (empty -> .)
    SQUARE          reduce using rule 143 (empty -> .)
    TRIANGLE        reduce using rule 143 (empty -> .)
    RECTANGLE       reduce using rule 143 (empty -> .)
    HIDE_STAR       reduce using rule 143 (empty -> .)
    SHOW_STAR       reduce using rule 143 (empty -> .)
    HAND_DOWN       reduce using rule 143 (empty -> .)
    HAND_UP         reduce using rule 143 (empty -> .)
    SETXY           reduce using rule 143 (empty -> .)
    COLOR_STAR      reduce using rule 143 (empty -> .)
    SIZE_STAR       reduce using rule 143 (empty -> .)
    GO              reduce using rule 143 (empty -> .)
    LEFT            reduce using rule 143 (empty -> .)
    RIGHT           reduce using rule 143 (empty -> .)
    BACK            reduce using rule 143 (empty -> .)
    ARC             reduce using rule 143 (empty -> .)
    CLOSEBRACES     reduce using rule 143 (empty -> .)

    condition1                     shift and go to state 270
    empty                          shift and go to state 224

state 263

    (45) read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .

    ID              reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 45 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)


state 264

    (46) read1 -> OPENBRACKET exp CLOSEBRACKET . OPENBRACKET exp CLOSEBRACKET
    (47) read1 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     shift and go to state 271
    CLOSEPAREN      reduce using rule 47 (read1 -> OPENBRACKET exp CLOSEBRACKET .)


state 265

    (116) graphr1 -> graphstmt graphr1 .

    CLOSEBRACES     reduce using rule 116 (graphr1 -> graphstmt graphr1 .)


state 266

    (115) graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .

    ID              reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    IF              reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    PRINT           reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    READ            reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    REPEAT          reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RETURN          reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    WHILE           reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    FOR             reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    CIRCLE          reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SQUARE          reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HAND_UP         reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SETXY           reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    GO              reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    LEFT            reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RIGHT           reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    BACK            reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    ARC             reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 115 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)


state 267

    (89) for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN . body
    (86) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 192

    body                           shift and go to state 272

state 268

    (96) laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .

    SEMICOLON       reduce using rule 96 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    ID              reduce using rule 96 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    CTEINT          reduce using rule 96 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    CTEFLOAT        reduce using rule 96 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    CTECHAR         reduce using rule 96 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    ADDITION        reduce using rule 96 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 96 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    OPENPAREN       reduce using rule 96 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)


state 269

    (32) function5 -> COMMA type ID function3 .

    CLOSEPAREN      reduce using rule 32 (function5 -> COMMA type ID function3 .)


state 270

    (80) condition1 -> ELSEIF head body condition1 .

    ID              reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)
    IF              reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)
    PRINT           reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)
    READ            reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)
    REPEAT          reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)
    RETURN          reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)
    WHILE           reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)
    FOR             reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)
    CIRCLE          reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)
    SQUARE          reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)
    TRIANGLE        reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)
    RECTANGLE       reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)
    HIDE_STAR       reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)
    SHOW_STAR       reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)
    HAND_DOWN       reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)
    HAND_UP         reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)
    SETXY           reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)
    COLOR_STAR      reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)
    SIZE_STAR       reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)
    GO              reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)
    LEFT            reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)
    RIGHT           reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)
    BACK            reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)
    ARC             reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)
    CLOSEBRACES     reduce using rule 80 (condition1 -> ELSEIF head body condition1 .)


state 271

    (46) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET . exp CLOSEBRACKET
    (127) exp -> . term exp1
    (139) term -> . factor term1
    (133) factor -> . vcte
    (134) factor -> . factor1
    (56) vcte -> . cte
    (57) vcte -> . ID vcte1
    (58) vcte -> . funCall
    (135) factor1 -> . factor2 vcte
    (136) factor1 -> . openP expression closeP
    (63) cte -> . CTEINT
    (64) cte -> . CTEFLOAT
    (65) cte -> . CTECHAR
    (91) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (137) factor2 -> . ADDITION
    (138) factor2 -> . SUBSTRACTION
    (131) openP -> . OPENPAREN

    ID              shift and go to state 37
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    ADDITION        shift and go to state 45
    SUBSTRACTION    shift and go to state 46
    OPENPAREN       shift and go to state 44

    exp                            shift and go to state 273
    term                           shift and go to state 32
    factor                         shift and go to state 33
    vcte                           shift and go to state 34
    factor1                        shift and go to state 35
    cte                            shift and go to state 36
    funCall                        shift and go to state 38
    factor2                        shift and go to state 39
    openP                          shift and go to state 40

state 272

    (89) for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .

    ID              reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    IF              reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    PRINT           reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    READ            reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    REPEAT          reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    RETURN          reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    WHILE           reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    FOR             reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    CIRCLE          reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SQUARE          reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    TRIANGLE        reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    RECTANGLE       reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    HIDE_STAR       reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SHOW_STAR       reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    HAND_DOWN       reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    HAND_UP         reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SETXY           reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    COLOR_STAR      reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SIZE_STAR       reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    GO              reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    LEFT            reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    RIGHT           reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    BACK            reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    ARC             reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    CLOSEBRACES     reduce using rule 89 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)


state 273

    (46) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 274


state 274

    (46) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .

    CLOSEPAREN      reduce using rule 46 (read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ADDITION in state 32 resolved as shift
WARNING: shift/reduce conflict for SUBSTRACTION in state 32 resolved as shift
WARNING: shift/reduce conflict for OPENPAREN in state 37 resolved as shift
WARNING: shift/reduce conflict for ID in state 170 resolved as shift
WARNING: shift/reduce conflict for CTEINT in state 170 resolved as shift
WARNING: shift/reduce conflict for CTEFLOAT in state 170 resolved as shift
WARNING: shift/reduce conflict for CTECHAR in state 170 resolved as shift
WARNING: shift/reduce conflict for ADDITION in state 170 resolved as shift
WARNING: shift/reduce conflict for SUBSTRACTION in state 170 resolved as shift
WARNING: shift/reduce conflict for OPENPAREN in state 170 resolved as shift
WARNING: reduce/reduce conflict in state 144 resolved using rule (assignment1 -> assignment2)
WARNING: rejected rule (empty -> <empty>) in state 144
WARNING: reduce/reduce conflict in state 153 resolved using rule (return1 -> vcte)
WARNING: rejected rule (factor -> vcte) in state 153
