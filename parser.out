Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    SIMPLEQUOTES
    VARS

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON program_vars program2 star
Rule 2     program_vars -> vars program_vars
Rule 3     program_vars -> empty
Rule 4     program2 -> function program2
Rule 5     program2 -> empty
Rule 6     star -> MULTIPLICATION OPENBRACES star_vars star1 CLOSEBRACES
Rule 7     star1 -> stmt star1
Rule 8     star1 -> empty
Rule 9     star_vars -> vars star_vars
Rule 10    star_vars -> empty
Rule 11    loop -> while
Rule 12    loop -> for
Rule 13    stmt -> assignment
Rule 14    stmt -> condition
Rule 15    stmt -> print
Rule 16    stmt -> loop
Rule 17    stmt -> read
Rule 18    stmt -> graphstmt
Rule 19    stmt -> graphr
Rule 20    stmt -> funCall
Rule 21    stmt -> return
Rule 22    function -> FUN function1 ID function2 inicia_fun fun_vars function4 termina_fun
Rule 23    function1 -> type
Rule 24    function1 -> VOID
Rule 25    inicia_fun -> OPENBRACES
Rule 26    termina_fun -> CLOSEBRACES
Rule 27    function2 -> OPENPAREN function3 CLOSEPAREN
Rule 28    function3 -> type ID function5
Rule 29    function3 -> empty
Rule 30    function4 -> stmt function4
Rule 31    function4 -> empty
Rule 32    function5 -> COMMA type ID function3
Rule 33    fun_vars -> vars fun_vars
Rule 34    fun_vars -> empty
Rule 35    vars -> type ID vars1 SEMICOLON
Rule 36    vars1 -> EQUALS exp vars2
Rule 37    vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3
Rule 38    vars1 -> vars2
Rule 39    vars2 -> COMMA ID vars1
Rule 40    vars2 -> empty
Rule 41    vars3 -> OPENBRACKET CTEINT CLOSEBRACKET
Rule 42    vars3 -> empty
Rule 43    type -> INT
Rule 44    type -> FLOAT
Rule 45    type -> CHAR
Rule 46    print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
Rule 47    read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
Rule 48    read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
Rule 49    read1 -> OPENBRACKET exp CLOSEBRACKET
Rule 50    read1 -> empty
Rule 51    assignment -> ID assignment1 EQUALS assignment3 SEMICOLON
Rule 52    assignment1 -> assignment2
Rule 53    assignment1 -> assignment2 assignment1
Rule 54    assignment1 -> empty
Rule 55    assignment2 -> OPENBRACKET exp CLOSEBRACKET
Rule 56    assignment3 -> exp
Rule 57    assignment3 -> read
Rule 58    vcte -> cte
Rule 59    vcte -> ID vcte1
Rule 60    vcte -> funCall
Rule 61    vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3
Rule 62    vcte1 -> empty
Rule 63    vcte3 -> OPENBRACKET exp CLOSEBRACKET
Rule 64    vcte3 -> empty
Rule 65    cte -> CTEINT
Rule 66    cte -> CTEFLOAT
Rule 67    cte -> CTECHAR
Rule 68    return -> RETURN return1 SEMICOLON
Rule 69    return1 -> vcte
Rule 70    return1 -> exp
Rule 71    expression -> exp expression1
Rule 72    expression1 -> loper exp
Rule 73    expression1 -> empty
Rule 74    loper -> GREATER
Rule 75    loper -> LESS
Rule 76    loper -> NOTEQUAL
Rule 77    loper -> ISEQUAL
Rule 78    logical -> expression logical1 expression
Rule 79    logical1 -> OR
Rule 80    logical1 -> AND
Rule 81    condition -> IF head body condition1
Rule 82    condition1 -> ELSEIF head body condition1
Rule 83    condition1 -> ELSE body
Rule 84    condition1 -> empty
Rule 85    head -> OPENPAREN head1 CLOSEPAREN
Rule 86    head1 -> expression
Rule 87    head1 -> logical
Rule 88    body -> OPENBRACES body1 CLOSEBRACES
Rule 89    body1 -> stmt body1
Rule 90    body1 -> empty
Rule 91    for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
Rule 92    while -> WHILE head body
Rule 93    funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
Rule 94    funCall2 -> exp funCall3
Rule 95    funCall2 -> empty
Rule 96    funCall3 -> COMMA exp funCall2
Rule 97    funCall3 -> empty
Rule 98    laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN
Rule 99    laRegla2 -> OPENPAREN exp CLOSEPAREN
Rule 100   graphstmt -> graphfig
Rule 101   graphstmt -> graphview
Rule 102   graphstmt -> graphmove
Rule 103   graphfig -> graphfig1 SEMICOLON
Rule 104   graphfig1 -> CIRCLE laRegla2
Rule 105   graphfig1 -> SQUARE laRegla2
Rule 106   graphfig1 -> TRIANGLE laRegla
Rule 107   graphfig1 -> RECTANGLE laRegla
Rule 108   graphmove -> graphmove1 SEMICOLON
Rule 109   graphmove1 -> HAND_DOWN
Rule 110   graphmove1 -> HAND_UP
Rule 111   graphmove1 -> graphmove2
Rule 112   graphmove2 -> GO laRegla2
Rule 113   graphmove2 -> LEFT laRegla2
Rule 114   graphmove2 -> RIGHT laRegla2
Rule 115   graphmove2 -> BACK laRegla2
Rule 116   graphmove2 -> ARC laRegla
Rule 117   graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
Rule 118   graphr1 -> graphstmt graphr1
Rule 119   graphr1 -> empty
Rule 120   graphview -> graphview1 SEMICOLON
Rule 121   graphview1 -> HIDE_STAR
Rule 122   graphview1 -> SHOW_STAR
Rule 123   graphview1 -> graphview2 exp
Rule 124   graphview2 -> SETXY graphview3
Rule 125   graphview2 -> COLOR_STAR
Rule 126   graphview2 -> SIZE_STAR
Rule 127   graphview3 -> exp COMMA
Rule 128   graphview3 -> laRegla
Rule 129   exp -> term exp1
Rule 130   exp1 -> ADDITION exp
Rule 131   exp1 -> SUBSTRACTION exp
Rule 132   exp1 -> empty
Rule 133   openP -> OPENPAREN
Rule 134   closeP -> CLOSEPAREN
Rule 135   factor -> vcte
Rule 136   factor -> factor1
Rule 137   factor1 -> factor2 vcte
Rule 138   factor1 -> openP expression closeP
Rule 139   factor2 -> ADDITION
Rule 140   factor2 -> SUBSTRACTION
Rule 141   term -> factor term1
Rule 142   term1 -> MULTIPLICATION term
Rule 143   term1 -> DIVISION term
Rule 144   term1 -> empty
Rule 145   empty -> <empty>

Terminals, with rules where they appear

ADDITION             : 130 139
AND                  : 80
ARC                  : 116
BACK                 : 115
CHAR                 : 45
CIRCLE               : 104
CLOSEBRACES          : 6 26 88 117
CLOSEBRACKET         : 37 41 48 48 49 55 61 63
CLOSEPAREN           : 27 46 47 85 91 93 98 99 134
COLOR_STAR           : 125
COMMA                : 32 39 96 98 127
CTECHAR              : 67
CTEFLOAT             : 66
CTEINT               : 37 41 65
DIVISION             : 143
ELSE                 : 83
ELSEIF               : 82
EQUALS               : 36 51
FLOAT                : 44
FOR                  : 91
FUN                  : 22
GO                   : 112
GREATER              : 74
HAND_DOWN            : 109
HAND_UP              : 110
HIDE_STAR            : 121
ID                   : 1 22 28 32 35 39 47 51 59 91 93
IF                   : 81
INT                  : 43
ISEQUAL              : 77
LEFT                 : 113
LESS                 : 75
MULTIPLICATION       : 6 142
NOTEQUAL             : 76
OPENBRACES           : 6 25 88 117
OPENBRACKET          : 37 41 48 48 49 55 61 63
OPENPAREN            : 27 46 47 85 91 93 98 99 133
OR                   : 79
PRINT                : 46
PROGRAM              : 1
READ                 : 47
RECTANGLE            : 107
REPEAT               : 117
RETURN               : 68
RIGHT                : 114
SEMICOLON            : 1 35 46 47 51 68 93 103 108 120
SETXY                : 124
SHOW_STAR            : 122
SIMPLEQUOTES         : 
SIZE_STAR            : 126
SQUARE               : 105
SUBSTRACTION         : 131 140
TRIANGLE             : 106
TWODOTS              : 91
VARS                 : 
VOID                 : 24
WHILE                : 92
error                : 

Nonterminals, with rules where they appear

assignment           : 13
assignment1          : 51 53
assignment2          : 52 53
assignment3          : 51
body                 : 81 82 83 91 92
body1                : 88 89
closeP               : 138
condition            : 14
condition1           : 81 82
cte                  : 58
empty                : 3 5 8 10 29 31 34 40 42 50 54 62 64 73 84 90 95 97 119 132 144
exp                  : 36 46 48 48 49 55 56 61 63 70 71 72 91 94 96 98 98 99 117 123 127 130 131
exp1                 : 129
expression           : 78 78 86 138
expression1          : 71
factor               : 141
factor1              : 136
factor2              : 137
for                  : 12
funCall              : 20 60
funCall2             : 93 96
funCall3             : 94
fun_vars             : 22 33
function             : 4
function1            : 22
function2            : 22
function3            : 27 32
function4            : 22 30
function5            : 28
graphfig             : 100
graphfig1            : 103
graphmove            : 102
graphmove1           : 108
graphmove2           : 111
graphr               : 19
graphr1              : 117 118
graphstmt            : 18 117 118
graphview            : 101
graphview1           : 120
graphview2           : 123
graphview3           : 124
head                 : 81 82 92
head1                : 85
inicia_fun           : 22
laRegla              : 106 107 116 128
laRegla2             : 104 105 112 113 114 115
logical              : 87
logical1             : 78
loop                 : 16
loper                : 72
openP                : 138
print                : 15
program              : 0
program2             : 1 4
program_vars         : 1 2
read                 : 17 57
read1                : 47
return               : 21
return1              : 68
star                 : 1
star1                : 6 7
star_vars            : 6 9
stmt                 : 7 30 89
term                 : 129 142 143
term1                : 141
termina_fun          : 22
type                 : 23 28 32 35
vars                 : 2 9 33
vars1                : 35 39
vars2                : 36 38
vars3                : 37
vcte                 : 69 135 137
vcte1                : 59
vcte3                : 61
while                : 11

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON program_vars program2 star

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON program_vars program2 star

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON program_vars program2 star

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . program_vars program2 star
    (2) program_vars -> . vars program_vars
    (3) program_vars -> . empty
    (35) vars -> . type ID vars1 SEMICOLON
    (145) empty -> .
    (43) type -> . INT
    (44) type -> . FLOAT
    (45) type -> . CHAR

    FUN             reduce using rule 145 (empty -> .)
    MULTIPLICATION  reduce using rule 145 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    program_vars                   shift and go to state 5
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 5

    (1) program -> PROGRAM ID SEMICOLON program_vars . program2 star
    (4) program2 -> . function program2
    (5) program2 -> . empty
    (22) function -> . FUN function1 ID function2 inicia_fun fun_vars function4 termina_fun
    (145) empty -> .

    FUN             shift and go to state 15
    MULTIPLICATION  reduce using rule 145 (empty -> .)

    program2                       shift and go to state 12
    function                       shift and go to state 13
    empty                          shift and go to state 14

state 6

    (2) program_vars -> vars . program_vars
    (2) program_vars -> . vars program_vars
    (3) program_vars -> . empty
    (35) vars -> . type ID vars1 SEMICOLON
    (145) empty -> .
    (43) type -> . INT
    (44) type -> . FLOAT
    (45) type -> . CHAR

    FUN             reduce using rule 145 (empty -> .)
    MULTIPLICATION  reduce using rule 145 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    vars                           shift and go to state 6
    program_vars                   shift and go to state 16
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 7

    (3) program_vars -> empty .

    FUN             reduce using rule 3 (program_vars -> empty .)
    MULTIPLICATION  reduce using rule 3 (program_vars -> empty .)


state 8

    (35) vars -> type . ID vars1 SEMICOLON

    ID              shift and go to state 17


state 9

    (43) type -> INT .

    ID              reduce using rule 43 (type -> INT .)


state 10

    (44) type -> FLOAT .

    ID              reduce using rule 44 (type -> FLOAT .)


state 11

    (45) type -> CHAR .

    ID              reduce using rule 45 (type -> CHAR .)


state 12

    (1) program -> PROGRAM ID SEMICOLON program_vars program2 . star
    (6) star -> . MULTIPLICATION OPENBRACES star_vars star1 CLOSEBRACES

    MULTIPLICATION  shift and go to state 19

    star                           shift and go to state 18

state 13

    (4) program2 -> function . program2
    (4) program2 -> . function program2
    (5) program2 -> . empty
    (22) function -> . FUN function1 ID function2 inicia_fun fun_vars function4 termina_fun
    (145) empty -> .

    FUN             shift and go to state 15
    MULTIPLICATION  reduce using rule 145 (empty -> .)

    function                       shift and go to state 13
    program2                       shift and go to state 20
    empty                          shift and go to state 14

state 14

    (5) program2 -> empty .

    MULTIPLICATION  reduce using rule 5 (program2 -> empty .)


state 15

    (22) function -> FUN . function1 ID function2 inicia_fun fun_vars function4 termina_fun
    (23) function1 -> . type
    (24) function1 -> . VOID
    (43) type -> . INT
    (44) type -> . FLOAT
    (45) type -> . CHAR

    VOID            shift and go to state 23
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    function1                      shift and go to state 21
    type                           shift and go to state 22

state 16

    (2) program_vars -> vars program_vars .

    FUN             reduce using rule 2 (program_vars -> vars program_vars .)
    MULTIPLICATION  reduce using rule 2 (program_vars -> vars program_vars .)


state 17

    (35) vars -> type ID . vars1 SEMICOLON
    (36) vars1 -> . EQUALS exp vars2
    (37) vars1 -> . OPENBRACKET CTEINT CLOSEBRACKET vars3
    (38) vars1 -> . vars2
    (39) vars2 -> . COMMA ID vars1
    (40) vars2 -> . empty
    (145) empty -> .

    EQUALS          shift and go to state 25
    OPENBRACKET     shift and go to state 27
    COMMA           shift and go to state 28
    SEMICOLON       reduce using rule 145 (empty -> .)

    vars1                          shift and go to state 24
    vars2                          shift and go to state 26
    empty                          shift and go to state 29

state 18

    (1) program -> PROGRAM ID SEMICOLON program_vars program2 star .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON program_vars program2 star .)


state 19

    (6) star -> MULTIPLICATION . OPENBRACES star_vars star1 CLOSEBRACES

    OPENBRACES      shift and go to state 30


state 20

    (4) program2 -> function program2 .

    MULTIPLICATION  reduce using rule 4 (program2 -> function program2 .)


state 21

    (22) function -> FUN function1 . ID function2 inicia_fun fun_vars function4 termina_fun

    ID              shift and go to state 31


state 22

    (23) function1 -> type .

    ID              reduce using rule 23 (function1 -> type .)


state 23

    (24) function1 -> VOID .

    ID              reduce using rule 24 (function1 -> VOID .)


state 24

    (35) vars -> type ID vars1 . SEMICOLON

    SEMICOLON       shift and go to state 32


state 25

    (36) vars1 -> EQUALS . exp vars2
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    exp                            shift and go to state 33
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 26

    (38) vars1 -> vars2 .

    SEMICOLON       reduce using rule 38 (vars1 -> vars2 .)


state 27

    (37) vars1 -> OPENBRACKET . CTEINT CLOSEBRACKET vars3

    CTEINT          shift and go to state 49


state 28

    (39) vars2 -> COMMA . ID vars1

    ID              shift and go to state 50


state 29

    (40) vars2 -> empty .

    SEMICOLON       reduce using rule 40 (vars2 -> empty .)


state 30

    (6) star -> MULTIPLICATION OPENBRACES . star_vars star1 CLOSEBRACES
    (9) star_vars -> . vars star_vars
    (10) star_vars -> . empty
    (35) vars -> . type ID vars1 SEMICOLON
    (145) empty -> .
    (43) type -> . INT
    (44) type -> . FLOAT
    (45) type -> . CHAR

    ID              reduce using rule 145 (empty -> .)
    IF              reduce using rule 145 (empty -> .)
    PRINT           reduce using rule 145 (empty -> .)
    READ            reduce using rule 145 (empty -> .)
    REPEAT          reduce using rule 145 (empty -> .)
    RETURN          reduce using rule 145 (empty -> .)
    WHILE           reduce using rule 145 (empty -> .)
    FOR             reduce using rule 145 (empty -> .)
    CIRCLE          reduce using rule 145 (empty -> .)
    SQUARE          reduce using rule 145 (empty -> .)
    TRIANGLE        reduce using rule 145 (empty -> .)
    RECTANGLE       reduce using rule 145 (empty -> .)
    HIDE_STAR       reduce using rule 145 (empty -> .)
    SHOW_STAR       reduce using rule 145 (empty -> .)
    HAND_DOWN       reduce using rule 145 (empty -> .)
    HAND_UP         reduce using rule 145 (empty -> .)
    SETXY           reduce using rule 145 (empty -> .)
    COLOR_STAR      reduce using rule 145 (empty -> .)
    SIZE_STAR       reduce using rule 145 (empty -> .)
    GO              reduce using rule 145 (empty -> .)
    LEFT            reduce using rule 145 (empty -> .)
    RIGHT           reduce using rule 145 (empty -> .)
    BACK            reduce using rule 145 (empty -> .)
    ARC             reduce using rule 145 (empty -> .)
    CLOSEBRACES     reduce using rule 145 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    star_vars                      shift and go to state 51
    vars                           shift and go to state 52
    empty                          shift and go to state 53
    type                           shift and go to state 8

state 31

    (22) function -> FUN function1 ID . function2 inicia_fun fun_vars function4 termina_fun
    (27) function2 -> . OPENPAREN function3 CLOSEPAREN

    OPENPAREN       shift and go to state 55

    function2                      shift and go to state 54

state 32

    (35) vars -> type ID vars1 SEMICOLON .

    INT             reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    FLOAT           reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    CHAR            reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    FUN             reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    MULTIPLICATION  reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    ID              reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    IF              reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    PRINT           reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    READ            reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    REPEAT          reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    RETURN          reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    WHILE           reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    FOR             reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    CIRCLE          reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    SQUARE          reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    TRIANGLE        reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    RECTANGLE       reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    HIDE_STAR       reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    SHOW_STAR       reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    HAND_DOWN       reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    HAND_UP         reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    SETXY           reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    COLOR_STAR      reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    SIZE_STAR       reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    GO              reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    LEFT            reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    RIGHT           reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    BACK            reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    ARC             reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 35 (vars -> type ID vars1 SEMICOLON .)


state 33

    (36) vars1 -> EQUALS exp . vars2
    (39) vars2 -> . COMMA ID vars1
    (40) vars2 -> . empty
    (145) empty -> .

    COMMA           shift and go to state 28
    SEMICOLON       reduce using rule 145 (empty -> .)

    vars2                          shift and go to state 56
    empty                          shift and go to state 29

state 34

    (129) exp -> term . exp1
    (130) exp1 -> . ADDITION exp
    (131) exp1 -> . SUBSTRACTION exp
    (132) exp1 -> . empty
    (145) empty -> .

  ! shift/reduce conflict for ADDITION resolved as shift
  ! shift/reduce conflict for SUBSTRACTION resolved as shift
    ADDITION        shift and go to state 58
    SUBSTRACTION    shift and go to state 59
    COMMA           reduce using rule 145 (empty -> .)
    SEMICOLON       reduce using rule 145 (empty -> .)
    GREATER         reduce using rule 145 (empty -> .)
    LESS            reduce using rule 145 (empty -> .)
    NOTEQUAL        reduce using rule 145 (empty -> .)
    ISEQUAL         reduce using rule 145 (empty -> .)
    CLOSEPAREN      reduce using rule 145 (empty -> .)
    CLOSEBRACKET    reduce using rule 145 (empty -> .)
    OPENBRACES      reduce using rule 145 (empty -> .)
    OR              reduce using rule 145 (empty -> .)
    AND             reduce using rule 145 (empty -> .)
    ID              reduce using rule 145 (empty -> .)
    CTEINT          reduce using rule 145 (empty -> .)
    CTEFLOAT        reduce using rule 145 (empty -> .)
    CTECHAR         reduce using rule 145 (empty -> .)
    OPENPAREN       reduce using rule 145 (empty -> .)

  ! ADDITION        [ reduce using rule 145 (empty -> .) ]
  ! SUBSTRACTION    [ reduce using rule 145 (empty -> .) ]

    exp1                           shift and go to state 57
    empty                          shift and go to state 60

state 35

    (141) term -> factor . term1
    (142) term1 -> . MULTIPLICATION term
    (143) term1 -> . DIVISION term
    (144) term1 -> . empty
    (145) empty -> .

    MULTIPLICATION  shift and go to state 62
    DIVISION        shift and go to state 63
    ADDITION        reduce using rule 145 (empty -> .)
    SUBSTRACTION    reduce using rule 145 (empty -> .)
    COMMA           reduce using rule 145 (empty -> .)
    SEMICOLON       reduce using rule 145 (empty -> .)
    GREATER         reduce using rule 145 (empty -> .)
    LESS            reduce using rule 145 (empty -> .)
    NOTEQUAL        reduce using rule 145 (empty -> .)
    ISEQUAL         reduce using rule 145 (empty -> .)
    CLOSEPAREN      reduce using rule 145 (empty -> .)
    CLOSEBRACKET    reduce using rule 145 (empty -> .)
    OPENBRACES      reduce using rule 145 (empty -> .)
    OR              reduce using rule 145 (empty -> .)
    AND             reduce using rule 145 (empty -> .)
    ID              reduce using rule 145 (empty -> .)
    CTEINT          reduce using rule 145 (empty -> .)
    CTEFLOAT        reduce using rule 145 (empty -> .)
    CTECHAR         reduce using rule 145 (empty -> .)
    OPENPAREN       reduce using rule 145 (empty -> .)

    term1                          shift and go to state 61
    empty                          shift and go to state 64

state 36

    (135) factor -> vcte .

    MULTIPLICATION  reduce using rule 135 (factor -> vcte .)
    DIVISION        reduce using rule 135 (factor -> vcte .)
    ADDITION        reduce using rule 135 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 135 (factor -> vcte .)
    COMMA           reduce using rule 135 (factor -> vcte .)
    SEMICOLON       reduce using rule 135 (factor -> vcte .)
    GREATER         reduce using rule 135 (factor -> vcte .)
    LESS            reduce using rule 135 (factor -> vcte .)
    NOTEQUAL        reduce using rule 135 (factor -> vcte .)
    ISEQUAL         reduce using rule 135 (factor -> vcte .)
    CLOSEPAREN      reduce using rule 135 (factor -> vcte .)
    CLOSEBRACKET    reduce using rule 135 (factor -> vcte .)
    OPENBRACES      reduce using rule 135 (factor -> vcte .)
    OR              reduce using rule 135 (factor -> vcte .)
    AND             reduce using rule 135 (factor -> vcte .)
    ID              reduce using rule 135 (factor -> vcte .)
    CTEINT          reduce using rule 135 (factor -> vcte .)
    CTEFLOAT        reduce using rule 135 (factor -> vcte .)
    CTECHAR         reduce using rule 135 (factor -> vcte .)
    OPENPAREN       reduce using rule 135 (factor -> vcte .)


state 37

    (136) factor -> factor1 .

    MULTIPLICATION  reduce using rule 136 (factor -> factor1 .)
    DIVISION        reduce using rule 136 (factor -> factor1 .)
    ADDITION        reduce using rule 136 (factor -> factor1 .)
    SUBSTRACTION    reduce using rule 136 (factor -> factor1 .)
    COMMA           reduce using rule 136 (factor -> factor1 .)
    SEMICOLON       reduce using rule 136 (factor -> factor1 .)
    GREATER         reduce using rule 136 (factor -> factor1 .)
    LESS            reduce using rule 136 (factor -> factor1 .)
    NOTEQUAL        reduce using rule 136 (factor -> factor1 .)
    ISEQUAL         reduce using rule 136 (factor -> factor1 .)
    CLOSEPAREN      reduce using rule 136 (factor -> factor1 .)
    CLOSEBRACKET    reduce using rule 136 (factor -> factor1 .)
    OPENBRACES      reduce using rule 136 (factor -> factor1 .)
    OR              reduce using rule 136 (factor -> factor1 .)
    AND             reduce using rule 136 (factor -> factor1 .)
    ID              reduce using rule 136 (factor -> factor1 .)
    CTEINT          reduce using rule 136 (factor -> factor1 .)
    CTEFLOAT        reduce using rule 136 (factor -> factor1 .)
    CTECHAR         reduce using rule 136 (factor -> factor1 .)
    OPENPAREN       reduce using rule 136 (factor -> factor1 .)


state 38

    (58) vcte -> cte .

    MULTIPLICATION  reduce using rule 58 (vcte -> cte .)
    DIVISION        reduce using rule 58 (vcte -> cte .)
    ADDITION        reduce using rule 58 (vcte -> cte .)
    SUBSTRACTION    reduce using rule 58 (vcte -> cte .)
    COMMA           reduce using rule 58 (vcte -> cte .)
    SEMICOLON       reduce using rule 58 (vcte -> cte .)
    GREATER         reduce using rule 58 (vcte -> cte .)
    LESS            reduce using rule 58 (vcte -> cte .)
    NOTEQUAL        reduce using rule 58 (vcte -> cte .)
    ISEQUAL         reduce using rule 58 (vcte -> cte .)
    CLOSEPAREN      reduce using rule 58 (vcte -> cte .)
    CLOSEBRACKET    reduce using rule 58 (vcte -> cte .)
    OPENBRACES      reduce using rule 58 (vcte -> cte .)
    OR              reduce using rule 58 (vcte -> cte .)
    AND             reduce using rule 58 (vcte -> cte .)
    ID              reduce using rule 58 (vcte -> cte .)
    CTEINT          reduce using rule 58 (vcte -> cte .)
    CTEFLOAT        reduce using rule 58 (vcte -> cte .)
    CTECHAR         reduce using rule 58 (vcte -> cte .)
    OPENPAREN       reduce using rule 58 (vcte -> cte .)


state 39

    (59) vcte -> ID . vcte1
    (93) funCall -> ID . OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (61) vcte1 -> . OPENBRACKET exp CLOSEBRACKET vcte3
    (62) vcte1 -> . empty
    (145) empty -> .

  ! shift/reduce conflict for OPENPAREN resolved as shift
    OPENPAREN       shift and go to state 66
    OPENBRACKET     shift and go to state 67
    MULTIPLICATION  reduce using rule 145 (empty -> .)
    DIVISION        reduce using rule 145 (empty -> .)
    ADDITION        reduce using rule 145 (empty -> .)
    SUBSTRACTION    reduce using rule 145 (empty -> .)
    COMMA           reduce using rule 145 (empty -> .)
    SEMICOLON       reduce using rule 145 (empty -> .)
    GREATER         reduce using rule 145 (empty -> .)
    LESS            reduce using rule 145 (empty -> .)
    NOTEQUAL        reduce using rule 145 (empty -> .)
    ISEQUAL         reduce using rule 145 (empty -> .)
    CLOSEPAREN      reduce using rule 145 (empty -> .)
    CLOSEBRACKET    reduce using rule 145 (empty -> .)
    OPENBRACES      reduce using rule 145 (empty -> .)
    OR              reduce using rule 145 (empty -> .)
    AND             reduce using rule 145 (empty -> .)
    ID              reduce using rule 145 (empty -> .)
    CTEINT          reduce using rule 145 (empty -> .)
    CTEFLOAT        reduce using rule 145 (empty -> .)
    CTECHAR         reduce using rule 145 (empty -> .)

  ! OPENPAREN       [ reduce using rule 145 (empty -> .) ]

    vcte1                          shift and go to state 65
    empty                          shift and go to state 68

state 40

    (60) vcte -> funCall .

    MULTIPLICATION  reduce using rule 60 (vcte -> funCall .)
    DIVISION        reduce using rule 60 (vcte -> funCall .)
    ADDITION        reduce using rule 60 (vcte -> funCall .)
    SUBSTRACTION    reduce using rule 60 (vcte -> funCall .)
    COMMA           reduce using rule 60 (vcte -> funCall .)
    SEMICOLON       reduce using rule 60 (vcte -> funCall .)
    GREATER         reduce using rule 60 (vcte -> funCall .)
    LESS            reduce using rule 60 (vcte -> funCall .)
    NOTEQUAL        reduce using rule 60 (vcte -> funCall .)
    ISEQUAL         reduce using rule 60 (vcte -> funCall .)
    CLOSEPAREN      reduce using rule 60 (vcte -> funCall .)
    CLOSEBRACKET    reduce using rule 60 (vcte -> funCall .)
    OPENBRACES      reduce using rule 60 (vcte -> funCall .)
    OR              reduce using rule 60 (vcte -> funCall .)
    AND             reduce using rule 60 (vcte -> funCall .)
    ID              reduce using rule 60 (vcte -> funCall .)
    CTEINT          reduce using rule 60 (vcte -> funCall .)
    CTEFLOAT        reduce using rule 60 (vcte -> funCall .)
    CTECHAR         reduce using rule 60 (vcte -> funCall .)
    OPENPAREN       reduce using rule 60 (vcte -> funCall .)


state 41

    (137) factor1 -> factor2 . vcte
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON

    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45

    vcte                           shift and go to state 69
    cte                            shift and go to state 38
    funCall                        shift and go to state 40

state 42

    (138) factor1 -> openP . expression closeP
    (71) expression -> . exp expression1
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    openP                          shift and go to state 42
    expression                     shift and go to state 70
    exp                            shift and go to state 71
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41

state 43

    (65) cte -> CTEINT .

    MULTIPLICATION  reduce using rule 65 (cte -> CTEINT .)
    DIVISION        reduce using rule 65 (cte -> CTEINT .)
    ADDITION        reduce using rule 65 (cte -> CTEINT .)
    SUBSTRACTION    reduce using rule 65 (cte -> CTEINT .)
    COMMA           reduce using rule 65 (cte -> CTEINT .)
    SEMICOLON       reduce using rule 65 (cte -> CTEINT .)
    GREATER         reduce using rule 65 (cte -> CTEINT .)
    LESS            reduce using rule 65 (cte -> CTEINT .)
    NOTEQUAL        reduce using rule 65 (cte -> CTEINT .)
    ISEQUAL         reduce using rule 65 (cte -> CTEINT .)
    CLOSEPAREN      reduce using rule 65 (cte -> CTEINT .)
    CLOSEBRACKET    reduce using rule 65 (cte -> CTEINT .)
    OPENBRACES      reduce using rule 65 (cte -> CTEINT .)
    OR              reduce using rule 65 (cte -> CTEINT .)
    AND             reduce using rule 65 (cte -> CTEINT .)
    ID              reduce using rule 65 (cte -> CTEINT .)
    CTEINT          reduce using rule 65 (cte -> CTEINT .)
    CTEFLOAT        reduce using rule 65 (cte -> CTEINT .)
    CTECHAR         reduce using rule 65 (cte -> CTEINT .)
    OPENPAREN       reduce using rule 65 (cte -> CTEINT .)


state 44

    (66) cte -> CTEFLOAT .

    MULTIPLICATION  reduce using rule 66 (cte -> CTEFLOAT .)
    DIVISION        reduce using rule 66 (cte -> CTEFLOAT .)
    ADDITION        reduce using rule 66 (cte -> CTEFLOAT .)
    SUBSTRACTION    reduce using rule 66 (cte -> CTEFLOAT .)
    COMMA           reduce using rule 66 (cte -> CTEFLOAT .)
    SEMICOLON       reduce using rule 66 (cte -> CTEFLOAT .)
    GREATER         reduce using rule 66 (cte -> CTEFLOAT .)
    LESS            reduce using rule 66 (cte -> CTEFLOAT .)
    NOTEQUAL        reduce using rule 66 (cte -> CTEFLOAT .)
    ISEQUAL         reduce using rule 66 (cte -> CTEFLOAT .)
    CLOSEPAREN      reduce using rule 66 (cte -> CTEFLOAT .)
    CLOSEBRACKET    reduce using rule 66 (cte -> CTEFLOAT .)
    OPENBRACES      reduce using rule 66 (cte -> CTEFLOAT .)
    OR              reduce using rule 66 (cte -> CTEFLOAT .)
    AND             reduce using rule 66 (cte -> CTEFLOAT .)
    ID              reduce using rule 66 (cte -> CTEFLOAT .)
    CTEINT          reduce using rule 66 (cte -> CTEFLOAT .)
    CTEFLOAT        reduce using rule 66 (cte -> CTEFLOAT .)
    CTECHAR         reduce using rule 66 (cte -> CTEFLOAT .)
    OPENPAREN       reduce using rule 66 (cte -> CTEFLOAT .)


state 45

    (67) cte -> CTECHAR .

    MULTIPLICATION  reduce using rule 67 (cte -> CTECHAR .)
    DIVISION        reduce using rule 67 (cte -> CTECHAR .)
    ADDITION        reduce using rule 67 (cte -> CTECHAR .)
    SUBSTRACTION    reduce using rule 67 (cte -> CTECHAR .)
    COMMA           reduce using rule 67 (cte -> CTECHAR .)
    SEMICOLON       reduce using rule 67 (cte -> CTECHAR .)
    GREATER         reduce using rule 67 (cte -> CTECHAR .)
    LESS            reduce using rule 67 (cte -> CTECHAR .)
    NOTEQUAL        reduce using rule 67 (cte -> CTECHAR .)
    ISEQUAL         reduce using rule 67 (cte -> CTECHAR .)
    CLOSEPAREN      reduce using rule 67 (cte -> CTECHAR .)
    CLOSEBRACKET    reduce using rule 67 (cte -> CTECHAR .)
    OPENBRACES      reduce using rule 67 (cte -> CTECHAR .)
    OR              reduce using rule 67 (cte -> CTECHAR .)
    AND             reduce using rule 67 (cte -> CTECHAR .)
    ID              reduce using rule 67 (cte -> CTECHAR .)
    CTEINT          reduce using rule 67 (cte -> CTECHAR .)
    CTEFLOAT        reduce using rule 67 (cte -> CTECHAR .)
    CTECHAR         reduce using rule 67 (cte -> CTECHAR .)
    OPENPAREN       reduce using rule 67 (cte -> CTECHAR .)


state 46

    (133) openP -> OPENPAREN .

    ID              reduce using rule 133 (openP -> OPENPAREN .)
    CTEINT          reduce using rule 133 (openP -> OPENPAREN .)
    CTEFLOAT        reduce using rule 133 (openP -> OPENPAREN .)
    CTECHAR         reduce using rule 133 (openP -> OPENPAREN .)
    ADDITION        reduce using rule 133 (openP -> OPENPAREN .)
    SUBSTRACTION    reduce using rule 133 (openP -> OPENPAREN .)
    OPENPAREN       reduce using rule 133 (openP -> OPENPAREN .)


state 47

    (139) factor2 -> ADDITION .

    ID              reduce using rule 139 (factor2 -> ADDITION .)
    CTEINT          reduce using rule 139 (factor2 -> ADDITION .)
    CTEFLOAT        reduce using rule 139 (factor2 -> ADDITION .)
    CTECHAR         reduce using rule 139 (factor2 -> ADDITION .)


state 48

    (140) factor2 -> SUBSTRACTION .

    ID              reduce using rule 140 (factor2 -> SUBSTRACTION .)
    CTEINT          reduce using rule 140 (factor2 -> SUBSTRACTION .)
    CTEFLOAT        reduce using rule 140 (factor2 -> SUBSTRACTION .)
    CTECHAR         reduce using rule 140 (factor2 -> SUBSTRACTION .)


state 49

    (37) vars1 -> OPENBRACKET CTEINT . CLOSEBRACKET vars3

    CLOSEBRACKET    shift and go to state 72


state 50

    (39) vars2 -> COMMA ID . vars1
    (36) vars1 -> . EQUALS exp vars2
    (37) vars1 -> . OPENBRACKET CTEINT CLOSEBRACKET vars3
    (38) vars1 -> . vars2
    (39) vars2 -> . COMMA ID vars1
    (40) vars2 -> . empty
    (145) empty -> .

    EQUALS          shift and go to state 25
    OPENBRACKET     shift and go to state 27
    COMMA           shift and go to state 28
    SEMICOLON       reduce using rule 145 (empty -> .)

    vars1                          shift and go to state 73
    vars2                          shift and go to state 26
    empty                          shift and go to state 29

state 51

    (6) star -> MULTIPLICATION OPENBRACES star_vars . star1 CLOSEBRACES
    (7) star1 -> . stmt star1
    (8) star1 -> . empty
    (13) stmt -> . assignment
    (14) stmt -> . condition
    (15) stmt -> . print
    (16) stmt -> . loop
    (17) stmt -> . read
    (18) stmt -> . graphstmt
    (19) stmt -> . graphr
    (20) stmt -> . funCall
    (21) stmt -> . return
    (145) empty -> .
    (51) assignment -> . ID assignment1 EQUALS assignment3 SEMICOLON
    (81) condition -> . IF head body condition1
    (46) print -> . PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
    (11) loop -> . while
    (12) loop -> . for
    (47) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (100) graphstmt -> . graphfig
    (101) graphstmt -> . graphview
    (102) graphstmt -> . graphmove
    (117) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (68) return -> . RETURN return1 SEMICOLON
    (92) while -> . WHILE head body
    (91) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (103) graphfig -> . graphfig1 SEMICOLON
    (120) graphview -> . graphview1 SEMICOLON
    (108) graphmove -> . graphmove1 SEMICOLON
    (104) graphfig1 -> . CIRCLE laRegla2
    (105) graphfig1 -> . SQUARE laRegla2
    (106) graphfig1 -> . TRIANGLE laRegla
    (107) graphfig1 -> . RECTANGLE laRegla
    (121) graphview1 -> . HIDE_STAR
    (122) graphview1 -> . SHOW_STAR
    (123) graphview1 -> . graphview2 exp
    (109) graphmove1 -> . HAND_DOWN
    (110) graphmove1 -> . HAND_UP
    (111) graphmove1 -> . graphmove2
    (124) graphview2 -> . SETXY graphview3
    (125) graphview2 -> . COLOR_STAR
    (126) graphview2 -> . SIZE_STAR
    (112) graphmove2 -> . GO laRegla2
    (113) graphmove2 -> . LEFT laRegla2
    (114) graphmove2 -> . RIGHT laRegla2
    (115) graphmove2 -> . BACK laRegla2
    (116) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 145 (empty -> .)
    ID              shift and go to state 86
    IF              shift and go to state 87
    PRINT           shift and go to state 88
    READ            shift and go to state 91
    REPEAT          shift and go to state 95
    RETURN          shift and go to state 96
    WHILE           shift and go to state 97
    FOR             shift and go to state 98
    CIRCLE          shift and go to state 102
    SQUARE          shift and go to state 103
    TRIANGLE        shift and go to state 104
    RECTANGLE       shift and go to state 105
    HIDE_STAR       shift and go to state 106
    SHOW_STAR       shift and go to state 107
    HAND_DOWN       shift and go to state 109
    HAND_UP         shift and go to state 110
    SETXY           shift and go to state 112
    COLOR_STAR      shift and go to state 113
    SIZE_STAR       shift and go to state 114
    GO              shift and go to state 115
    LEFT            shift and go to state 116
    RIGHT           shift and go to state 117
    BACK            shift and go to state 118
    ARC             shift and go to state 119

    star1                          shift and go to state 74
    stmt                           shift and go to state 75
    empty                          shift and go to state 76
    assignment                     shift and go to state 77
    condition                      shift and go to state 78
    print                          shift and go to state 79
    loop                           shift and go to state 80
    read                           shift and go to state 81
    graphstmt                      shift and go to state 82
    graphr                         shift and go to state 83
    funCall                        shift and go to state 84
    return                         shift and go to state 85
    while                          shift and go to state 89
    for                            shift and go to state 90
    graphfig                       shift and go to state 92
    graphview                      shift and go to state 93
    graphmove                      shift and go to state 94
    graphfig1                      shift and go to state 99
    graphview1                     shift and go to state 100
    graphmove1                     shift and go to state 101
    graphview2                     shift and go to state 108
    graphmove2                     shift and go to state 111

state 52

    (9) star_vars -> vars . star_vars
    (9) star_vars -> . vars star_vars
    (10) star_vars -> . empty
    (35) vars -> . type ID vars1 SEMICOLON
    (145) empty -> .
    (43) type -> . INT
    (44) type -> . FLOAT
    (45) type -> . CHAR

    ID              reduce using rule 145 (empty -> .)
    IF              reduce using rule 145 (empty -> .)
    PRINT           reduce using rule 145 (empty -> .)
    READ            reduce using rule 145 (empty -> .)
    REPEAT          reduce using rule 145 (empty -> .)
    RETURN          reduce using rule 145 (empty -> .)
    WHILE           reduce using rule 145 (empty -> .)
    FOR             reduce using rule 145 (empty -> .)
    CIRCLE          reduce using rule 145 (empty -> .)
    SQUARE          reduce using rule 145 (empty -> .)
    TRIANGLE        reduce using rule 145 (empty -> .)
    RECTANGLE       reduce using rule 145 (empty -> .)
    HIDE_STAR       reduce using rule 145 (empty -> .)
    SHOW_STAR       reduce using rule 145 (empty -> .)
    HAND_DOWN       reduce using rule 145 (empty -> .)
    HAND_UP         reduce using rule 145 (empty -> .)
    SETXY           reduce using rule 145 (empty -> .)
    COLOR_STAR      reduce using rule 145 (empty -> .)
    SIZE_STAR       reduce using rule 145 (empty -> .)
    GO              reduce using rule 145 (empty -> .)
    LEFT            reduce using rule 145 (empty -> .)
    RIGHT           reduce using rule 145 (empty -> .)
    BACK            reduce using rule 145 (empty -> .)
    ARC             reduce using rule 145 (empty -> .)
    CLOSEBRACES     reduce using rule 145 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    vars                           shift and go to state 52
    star_vars                      shift and go to state 120
    empty                          shift and go to state 53
    type                           shift and go to state 8

state 53

    (10) star_vars -> empty .

    ID              reduce using rule 10 (star_vars -> empty .)
    IF              reduce using rule 10 (star_vars -> empty .)
    PRINT           reduce using rule 10 (star_vars -> empty .)
    READ            reduce using rule 10 (star_vars -> empty .)
    REPEAT          reduce using rule 10 (star_vars -> empty .)
    RETURN          reduce using rule 10 (star_vars -> empty .)
    WHILE           reduce using rule 10 (star_vars -> empty .)
    FOR             reduce using rule 10 (star_vars -> empty .)
    CIRCLE          reduce using rule 10 (star_vars -> empty .)
    SQUARE          reduce using rule 10 (star_vars -> empty .)
    TRIANGLE        reduce using rule 10 (star_vars -> empty .)
    RECTANGLE       reduce using rule 10 (star_vars -> empty .)
    HIDE_STAR       reduce using rule 10 (star_vars -> empty .)
    SHOW_STAR       reduce using rule 10 (star_vars -> empty .)
    HAND_DOWN       reduce using rule 10 (star_vars -> empty .)
    HAND_UP         reduce using rule 10 (star_vars -> empty .)
    SETXY           reduce using rule 10 (star_vars -> empty .)
    COLOR_STAR      reduce using rule 10 (star_vars -> empty .)
    SIZE_STAR       reduce using rule 10 (star_vars -> empty .)
    GO              reduce using rule 10 (star_vars -> empty .)
    LEFT            reduce using rule 10 (star_vars -> empty .)
    RIGHT           reduce using rule 10 (star_vars -> empty .)
    BACK            reduce using rule 10 (star_vars -> empty .)
    ARC             reduce using rule 10 (star_vars -> empty .)
    CLOSEBRACES     reduce using rule 10 (star_vars -> empty .)


state 54

    (22) function -> FUN function1 ID function2 . inicia_fun fun_vars function4 termina_fun
    (25) inicia_fun -> . OPENBRACES

    OPENBRACES      shift and go to state 122

    inicia_fun                     shift and go to state 121

state 55

    (27) function2 -> OPENPAREN . function3 CLOSEPAREN
    (28) function3 -> . type ID function5
    (29) function3 -> . empty
    (43) type -> . INT
    (44) type -> . FLOAT
    (45) type -> . CHAR
    (145) empty -> .

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    CLOSEPAREN      reduce using rule 145 (empty -> .)

    function3                      shift and go to state 123
    type                           shift and go to state 124
    empty                          shift and go to state 125

state 56

    (36) vars1 -> EQUALS exp vars2 .

    SEMICOLON       reduce using rule 36 (vars1 -> EQUALS exp vars2 .)


state 57

    (129) exp -> term exp1 .

    COMMA           reduce using rule 129 (exp -> term exp1 .)
    SEMICOLON       reduce using rule 129 (exp -> term exp1 .)
    GREATER         reduce using rule 129 (exp -> term exp1 .)
    LESS            reduce using rule 129 (exp -> term exp1 .)
    NOTEQUAL        reduce using rule 129 (exp -> term exp1 .)
    ISEQUAL         reduce using rule 129 (exp -> term exp1 .)
    CLOSEPAREN      reduce using rule 129 (exp -> term exp1 .)
    CLOSEBRACKET    reduce using rule 129 (exp -> term exp1 .)
    OPENBRACES      reduce using rule 129 (exp -> term exp1 .)
    OR              reduce using rule 129 (exp -> term exp1 .)
    AND             reduce using rule 129 (exp -> term exp1 .)
    ID              reduce using rule 129 (exp -> term exp1 .)
    CTEINT          reduce using rule 129 (exp -> term exp1 .)
    CTEFLOAT        reduce using rule 129 (exp -> term exp1 .)
    CTECHAR         reduce using rule 129 (exp -> term exp1 .)
    ADDITION        reduce using rule 129 (exp -> term exp1 .)
    SUBSTRACTION    reduce using rule 129 (exp -> term exp1 .)
    OPENPAREN       reduce using rule 129 (exp -> term exp1 .)


state 58

    (130) exp1 -> ADDITION . exp
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    exp                            shift and go to state 126
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 59

    (131) exp1 -> SUBSTRACTION . exp
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    exp                            shift and go to state 127
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 60

    (132) exp1 -> empty .

    COMMA           reduce using rule 132 (exp1 -> empty .)
    SEMICOLON       reduce using rule 132 (exp1 -> empty .)
    GREATER         reduce using rule 132 (exp1 -> empty .)
    LESS            reduce using rule 132 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 132 (exp1 -> empty .)
    ISEQUAL         reduce using rule 132 (exp1 -> empty .)
    CLOSEPAREN      reduce using rule 132 (exp1 -> empty .)
    CLOSEBRACKET    reduce using rule 132 (exp1 -> empty .)
    OPENBRACES      reduce using rule 132 (exp1 -> empty .)
    OR              reduce using rule 132 (exp1 -> empty .)
    AND             reduce using rule 132 (exp1 -> empty .)
    ID              reduce using rule 132 (exp1 -> empty .)
    CTEINT          reduce using rule 132 (exp1 -> empty .)
    CTEFLOAT        reduce using rule 132 (exp1 -> empty .)
    CTECHAR         reduce using rule 132 (exp1 -> empty .)
    ADDITION        reduce using rule 132 (exp1 -> empty .)
    SUBSTRACTION    reduce using rule 132 (exp1 -> empty .)
    OPENPAREN       reduce using rule 132 (exp1 -> empty .)


state 61

    (141) term -> factor term1 .

    ADDITION        reduce using rule 141 (term -> factor term1 .)
    SUBSTRACTION    reduce using rule 141 (term -> factor term1 .)
    COMMA           reduce using rule 141 (term -> factor term1 .)
    SEMICOLON       reduce using rule 141 (term -> factor term1 .)
    GREATER         reduce using rule 141 (term -> factor term1 .)
    LESS            reduce using rule 141 (term -> factor term1 .)
    NOTEQUAL        reduce using rule 141 (term -> factor term1 .)
    ISEQUAL         reduce using rule 141 (term -> factor term1 .)
    CLOSEPAREN      reduce using rule 141 (term -> factor term1 .)
    CLOSEBRACKET    reduce using rule 141 (term -> factor term1 .)
    OPENBRACES      reduce using rule 141 (term -> factor term1 .)
    OR              reduce using rule 141 (term -> factor term1 .)
    AND             reduce using rule 141 (term -> factor term1 .)
    ID              reduce using rule 141 (term -> factor term1 .)
    CTEINT          reduce using rule 141 (term -> factor term1 .)
    CTEFLOAT        reduce using rule 141 (term -> factor term1 .)
    CTECHAR         reduce using rule 141 (term -> factor term1 .)
    OPENPAREN       reduce using rule 141 (term -> factor term1 .)


state 62

    (142) term1 -> MULTIPLICATION . term
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    term                           shift and go to state 128
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 63

    (143) term1 -> DIVISION . term
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    term                           shift and go to state 129
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 64

    (144) term1 -> empty .

    ADDITION        reduce using rule 144 (term1 -> empty .)
    SUBSTRACTION    reduce using rule 144 (term1 -> empty .)
    COMMA           reduce using rule 144 (term1 -> empty .)
    SEMICOLON       reduce using rule 144 (term1 -> empty .)
    GREATER         reduce using rule 144 (term1 -> empty .)
    LESS            reduce using rule 144 (term1 -> empty .)
    NOTEQUAL        reduce using rule 144 (term1 -> empty .)
    ISEQUAL         reduce using rule 144 (term1 -> empty .)
    CLOSEPAREN      reduce using rule 144 (term1 -> empty .)
    CLOSEBRACKET    reduce using rule 144 (term1 -> empty .)
    OPENBRACES      reduce using rule 144 (term1 -> empty .)
    OR              reduce using rule 144 (term1 -> empty .)
    AND             reduce using rule 144 (term1 -> empty .)
    ID              reduce using rule 144 (term1 -> empty .)
    CTEINT          reduce using rule 144 (term1 -> empty .)
    CTEFLOAT        reduce using rule 144 (term1 -> empty .)
    CTECHAR         reduce using rule 144 (term1 -> empty .)
    OPENPAREN       reduce using rule 144 (term1 -> empty .)


state 65

    (59) vcte -> ID vcte1 .

    MULTIPLICATION  reduce using rule 59 (vcte -> ID vcte1 .)
    DIVISION        reduce using rule 59 (vcte -> ID vcte1 .)
    ADDITION        reduce using rule 59 (vcte -> ID vcte1 .)
    SUBSTRACTION    reduce using rule 59 (vcte -> ID vcte1 .)
    COMMA           reduce using rule 59 (vcte -> ID vcte1 .)
    SEMICOLON       reduce using rule 59 (vcte -> ID vcte1 .)
    GREATER         reduce using rule 59 (vcte -> ID vcte1 .)
    LESS            reduce using rule 59 (vcte -> ID vcte1 .)
    NOTEQUAL        reduce using rule 59 (vcte -> ID vcte1 .)
    ISEQUAL         reduce using rule 59 (vcte -> ID vcte1 .)
    CLOSEPAREN      reduce using rule 59 (vcte -> ID vcte1 .)
    CLOSEBRACKET    reduce using rule 59 (vcte -> ID vcte1 .)
    OPENBRACES      reduce using rule 59 (vcte -> ID vcte1 .)
    OR              reduce using rule 59 (vcte -> ID vcte1 .)
    AND             reduce using rule 59 (vcte -> ID vcte1 .)
    ID              reduce using rule 59 (vcte -> ID vcte1 .)
    CTEINT          reduce using rule 59 (vcte -> ID vcte1 .)
    CTEFLOAT        reduce using rule 59 (vcte -> ID vcte1 .)
    CTECHAR         reduce using rule 59 (vcte -> ID vcte1 .)
    OPENPAREN       reduce using rule 59 (vcte -> ID vcte1 .)


state 66

    (93) funCall -> ID OPENPAREN . funCall2 CLOSEPAREN SEMICOLON
    (94) funCall2 -> . exp funCall3
    (95) funCall2 -> . empty
    (129) exp -> . term exp1
    (145) empty -> .
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CLOSEPAREN      reduce using rule 145 (empty -> .)
    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    funCall2                       shift and go to state 130
    exp                            shift and go to state 131
    empty                          shift and go to state 132
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 67

    (61) vcte1 -> OPENBRACKET . exp CLOSEBRACKET vcte3
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    exp                            shift and go to state 133
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 68

    (62) vcte1 -> empty .

    MULTIPLICATION  reduce using rule 62 (vcte1 -> empty .)
    DIVISION        reduce using rule 62 (vcte1 -> empty .)
    ADDITION        reduce using rule 62 (vcte1 -> empty .)
    SUBSTRACTION    reduce using rule 62 (vcte1 -> empty .)
    COMMA           reduce using rule 62 (vcte1 -> empty .)
    SEMICOLON       reduce using rule 62 (vcte1 -> empty .)
    GREATER         reduce using rule 62 (vcte1 -> empty .)
    LESS            reduce using rule 62 (vcte1 -> empty .)
    NOTEQUAL        reduce using rule 62 (vcte1 -> empty .)
    ISEQUAL         reduce using rule 62 (vcte1 -> empty .)
    CLOSEPAREN      reduce using rule 62 (vcte1 -> empty .)
    CLOSEBRACKET    reduce using rule 62 (vcte1 -> empty .)
    OPENBRACES      reduce using rule 62 (vcte1 -> empty .)
    OR              reduce using rule 62 (vcte1 -> empty .)
    AND             reduce using rule 62 (vcte1 -> empty .)
    ID              reduce using rule 62 (vcte1 -> empty .)
    CTEINT          reduce using rule 62 (vcte1 -> empty .)
    CTEFLOAT        reduce using rule 62 (vcte1 -> empty .)
    CTECHAR         reduce using rule 62 (vcte1 -> empty .)
    OPENPAREN       reduce using rule 62 (vcte1 -> empty .)


state 69

    (137) factor1 -> factor2 vcte .

    MULTIPLICATION  reduce using rule 137 (factor1 -> factor2 vcte .)
    DIVISION        reduce using rule 137 (factor1 -> factor2 vcte .)
    ADDITION        reduce using rule 137 (factor1 -> factor2 vcte .)
    SUBSTRACTION    reduce using rule 137 (factor1 -> factor2 vcte .)
    COMMA           reduce using rule 137 (factor1 -> factor2 vcte .)
    SEMICOLON       reduce using rule 137 (factor1 -> factor2 vcte .)
    GREATER         reduce using rule 137 (factor1 -> factor2 vcte .)
    LESS            reduce using rule 137 (factor1 -> factor2 vcte .)
    NOTEQUAL        reduce using rule 137 (factor1 -> factor2 vcte .)
    ISEQUAL         reduce using rule 137 (factor1 -> factor2 vcte .)
    CLOSEPAREN      reduce using rule 137 (factor1 -> factor2 vcte .)
    CLOSEBRACKET    reduce using rule 137 (factor1 -> factor2 vcte .)
    OPENBRACES      reduce using rule 137 (factor1 -> factor2 vcte .)
    OR              reduce using rule 137 (factor1 -> factor2 vcte .)
    AND             reduce using rule 137 (factor1 -> factor2 vcte .)
    ID              reduce using rule 137 (factor1 -> factor2 vcte .)
    CTEINT          reduce using rule 137 (factor1 -> factor2 vcte .)
    CTEFLOAT        reduce using rule 137 (factor1 -> factor2 vcte .)
    CTECHAR         reduce using rule 137 (factor1 -> factor2 vcte .)
    OPENPAREN       reduce using rule 137 (factor1 -> factor2 vcte .)


state 70

    (138) factor1 -> openP expression . closeP
    (134) closeP -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 135

    closeP                         shift and go to state 134

state 71

    (71) expression -> exp . expression1
    (72) expression1 -> . loper exp
    (73) expression1 -> . empty
    (74) loper -> . GREATER
    (75) loper -> . LESS
    (76) loper -> . NOTEQUAL
    (77) loper -> . ISEQUAL
    (145) empty -> .

    GREATER         shift and go to state 139
    LESS            shift and go to state 140
    NOTEQUAL        shift and go to state 141
    ISEQUAL         shift and go to state 142
    CLOSEPAREN      reduce using rule 145 (empty -> .)
    OR              reduce using rule 145 (empty -> .)
    AND             reduce using rule 145 (empty -> .)

    expression1                    shift and go to state 136
    loper                          shift and go to state 137
    empty                          shift and go to state 138

state 72

    (37) vars1 -> OPENBRACKET CTEINT CLOSEBRACKET . vars3
    (41) vars3 -> . OPENBRACKET CTEINT CLOSEBRACKET
    (42) vars3 -> . empty
    (145) empty -> .

    OPENBRACKET     shift and go to state 143
    SEMICOLON       reduce using rule 145 (empty -> .)

    vars3                          shift and go to state 144
    empty                          shift and go to state 145

state 73

    (39) vars2 -> COMMA ID vars1 .

    SEMICOLON       reduce using rule 39 (vars2 -> COMMA ID vars1 .)


state 74

    (6) star -> MULTIPLICATION OPENBRACES star_vars star1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 146


state 75

    (7) star1 -> stmt . star1
    (7) star1 -> . stmt star1
    (8) star1 -> . empty
    (13) stmt -> . assignment
    (14) stmt -> . condition
    (15) stmt -> . print
    (16) stmt -> . loop
    (17) stmt -> . read
    (18) stmt -> . graphstmt
    (19) stmt -> . graphr
    (20) stmt -> . funCall
    (21) stmt -> . return
    (145) empty -> .
    (51) assignment -> . ID assignment1 EQUALS assignment3 SEMICOLON
    (81) condition -> . IF head body condition1
    (46) print -> . PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
    (11) loop -> . while
    (12) loop -> . for
    (47) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (100) graphstmt -> . graphfig
    (101) graphstmt -> . graphview
    (102) graphstmt -> . graphmove
    (117) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (68) return -> . RETURN return1 SEMICOLON
    (92) while -> . WHILE head body
    (91) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (103) graphfig -> . graphfig1 SEMICOLON
    (120) graphview -> . graphview1 SEMICOLON
    (108) graphmove -> . graphmove1 SEMICOLON
    (104) graphfig1 -> . CIRCLE laRegla2
    (105) graphfig1 -> . SQUARE laRegla2
    (106) graphfig1 -> . TRIANGLE laRegla
    (107) graphfig1 -> . RECTANGLE laRegla
    (121) graphview1 -> . HIDE_STAR
    (122) graphview1 -> . SHOW_STAR
    (123) graphview1 -> . graphview2 exp
    (109) graphmove1 -> . HAND_DOWN
    (110) graphmove1 -> . HAND_UP
    (111) graphmove1 -> . graphmove2
    (124) graphview2 -> . SETXY graphview3
    (125) graphview2 -> . COLOR_STAR
    (126) graphview2 -> . SIZE_STAR
    (112) graphmove2 -> . GO laRegla2
    (113) graphmove2 -> . LEFT laRegla2
    (114) graphmove2 -> . RIGHT laRegla2
    (115) graphmove2 -> . BACK laRegla2
    (116) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 145 (empty -> .)
    ID              shift and go to state 86
    IF              shift and go to state 87
    PRINT           shift and go to state 88
    READ            shift and go to state 91
    REPEAT          shift and go to state 95
    RETURN          shift and go to state 96
    WHILE           shift and go to state 97
    FOR             shift and go to state 98
    CIRCLE          shift and go to state 102
    SQUARE          shift and go to state 103
    TRIANGLE        shift and go to state 104
    RECTANGLE       shift and go to state 105
    HIDE_STAR       shift and go to state 106
    SHOW_STAR       shift and go to state 107
    HAND_DOWN       shift and go to state 109
    HAND_UP         shift and go to state 110
    SETXY           shift and go to state 112
    COLOR_STAR      shift and go to state 113
    SIZE_STAR       shift and go to state 114
    GO              shift and go to state 115
    LEFT            shift and go to state 116
    RIGHT           shift and go to state 117
    BACK            shift and go to state 118
    ARC             shift and go to state 119

    stmt                           shift and go to state 75
    star1                          shift and go to state 147
    empty                          shift and go to state 76
    assignment                     shift and go to state 77
    condition                      shift and go to state 78
    print                          shift and go to state 79
    loop                           shift and go to state 80
    read                           shift and go to state 81
    graphstmt                      shift and go to state 82
    graphr                         shift and go to state 83
    funCall                        shift and go to state 84
    return                         shift and go to state 85
    while                          shift and go to state 89
    for                            shift and go to state 90
    graphfig                       shift and go to state 92
    graphview                      shift and go to state 93
    graphmove                      shift and go to state 94
    graphfig1                      shift and go to state 99
    graphview1                     shift and go to state 100
    graphmove1                     shift and go to state 101
    graphview2                     shift and go to state 108
    graphmove2                     shift and go to state 111

state 76

    (8) star1 -> empty .

    CLOSEBRACES     reduce using rule 8 (star1 -> empty .)


state 77

    (13) stmt -> assignment .

    ID              reduce using rule 13 (stmt -> assignment .)
    IF              reduce using rule 13 (stmt -> assignment .)
    PRINT           reduce using rule 13 (stmt -> assignment .)
    READ            reduce using rule 13 (stmt -> assignment .)
    REPEAT          reduce using rule 13 (stmt -> assignment .)
    RETURN          reduce using rule 13 (stmt -> assignment .)
    WHILE           reduce using rule 13 (stmt -> assignment .)
    FOR             reduce using rule 13 (stmt -> assignment .)
    CIRCLE          reduce using rule 13 (stmt -> assignment .)
    SQUARE          reduce using rule 13 (stmt -> assignment .)
    TRIANGLE        reduce using rule 13 (stmt -> assignment .)
    RECTANGLE       reduce using rule 13 (stmt -> assignment .)
    HIDE_STAR       reduce using rule 13 (stmt -> assignment .)
    SHOW_STAR       reduce using rule 13 (stmt -> assignment .)
    HAND_DOWN       reduce using rule 13 (stmt -> assignment .)
    HAND_UP         reduce using rule 13 (stmt -> assignment .)
    SETXY           reduce using rule 13 (stmt -> assignment .)
    COLOR_STAR      reduce using rule 13 (stmt -> assignment .)
    SIZE_STAR       reduce using rule 13 (stmt -> assignment .)
    GO              reduce using rule 13 (stmt -> assignment .)
    LEFT            reduce using rule 13 (stmt -> assignment .)
    RIGHT           reduce using rule 13 (stmt -> assignment .)
    BACK            reduce using rule 13 (stmt -> assignment .)
    ARC             reduce using rule 13 (stmt -> assignment .)
    CLOSEBRACES     reduce using rule 13 (stmt -> assignment .)


state 78

    (14) stmt -> condition .

    ID              reduce using rule 14 (stmt -> condition .)
    IF              reduce using rule 14 (stmt -> condition .)
    PRINT           reduce using rule 14 (stmt -> condition .)
    READ            reduce using rule 14 (stmt -> condition .)
    REPEAT          reduce using rule 14 (stmt -> condition .)
    RETURN          reduce using rule 14 (stmt -> condition .)
    WHILE           reduce using rule 14 (stmt -> condition .)
    FOR             reduce using rule 14 (stmt -> condition .)
    CIRCLE          reduce using rule 14 (stmt -> condition .)
    SQUARE          reduce using rule 14 (stmt -> condition .)
    TRIANGLE        reduce using rule 14 (stmt -> condition .)
    RECTANGLE       reduce using rule 14 (stmt -> condition .)
    HIDE_STAR       reduce using rule 14 (stmt -> condition .)
    SHOW_STAR       reduce using rule 14 (stmt -> condition .)
    HAND_DOWN       reduce using rule 14 (stmt -> condition .)
    HAND_UP         reduce using rule 14 (stmt -> condition .)
    SETXY           reduce using rule 14 (stmt -> condition .)
    COLOR_STAR      reduce using rule 14 (stmt -> condition .)
    SIZE_STAR       reduce using rule 14 (stmt -> condition .)
    GO              reduce using rule 14 (stmt -> condition .)
    LEFT            reduce using rule 14 (stmt -> condition .)
    RIGHT           reduce using rule 14 (stmt -> condition .)
    BACK            reduce using rule 14 (stmt -> condition .)
    ARC             reduce using rule 14 (stmt -> condition .)
    CLOSEBRACES     reduce using rule 14 (stmt -> condition .)


state 79

    (15) stmt -> print .

    ID              reduce using rule 15 (stmt -> print .)
    IF              reduce using rule 15 (stmt -> print .)
    PRINT           reduce using rule 15 (stmt -> print .)
    READ            reduce using rule 15 (stmt -> print .)
    REPEAT          reduce using rule 15 (stmt -> print .)
    RETURN          reduce using rule 15 (stmt -> print .)
    WHILE           reduce using rule 15 (stmt -> print .)
    FOR             reduce using rule 15 (stmt -> print .)
    CIRCLE          reduce using rule 15 (stmt -> print .)
    SQUARE          reduce using rule 15 (stmt -> print .)
    TRIANGLE        reduce using rule 15 (stmt -> print .)
    RECTANGLE       reduce using rule 15 (stmt -> print .)
    HIDE_STAR       reduce using rule 15 (stmt -> print .)
    SHOW_STAR       reduce using rule 15 (stmt -> print .)
    HAND_DOWN       reduce using rule 15 (stmt -> print .)
    HAND_UP         reduce using rule 15 (stmt -> print .)
    SETXY           reduce using rule 15 (stmt -> print .)
    COLOR_STAR      reduce using rule 15 (stmt -> print .)
    SIZE_STAR       reduce using rule 15 (stmt -> print .)
    GO              reduce using rule 15 (stmt -> print .)
    LEFT            reduce using rule 15 (stmt -> print .)
    RIGHT           reduce using rule 15 (stmt -> print .)
    BACK            reduce using rule 15 (stmt -> print .)
    ARC             reduce using rule 15 (stmt -> print .)
    CLOSEBRACES     reduce using rule 15 (stmt -> print .)


state 80

    (16) stmt -> loop .

    ID              reduce using rule 16 (stmt -> loop .)
    IF              reduce using rule 16 (stmt -> loop .)
    PRINT           reduce using rule 16 (stmt -> loop .)
    READ            reduce using rule 16 (stmt -> loop .)
    REPEAT          reduce using rule 16 (stmt -> loop .)
    RETURN          reduce using rule 16 (stmt -> loop .)
    WHILE           reduce using rule 16 (stmt -> loop .)
    FOR             reduce using rule 16 (stmt -> loop .)
    CIRCLE          reduce using rule 16 (stmt -> loop .)
    SQUARE          reduce using rule 16 (stmt -> loop .)
    TRIANGLE        reduce using rule 16 (stmt -> loop .)
    RECTANGLE       reduce using rule 16 (stmt -> loop .)
    HIDE_STAR       reduce using rule 16 (stmt -> loop .)
    SHOW_STAR       reduce using rule 16 (stmt -> loop .)
    HAND_DOWN       reduce using rule 16 (stmt -> loop .)
    HAND_UP         reduce using rule 16 (stmt -> loop .)
    SETXY           reduce using rule 16 (stmt -> loop .)
    COLOR_STAR      reduce using rule 16 (stmt -> loop .)
    SIZE_STAR       reduce using rule 16 (stmt -> loop .)
    GO              reduce using rule 16 (stmt -> loop .)
    LEFT            reduce using rule 16 (stmt -> loop .)
    RIGHT           reduce using rule 16 (stmt -> loop .)
    BACK            reduce using rule 16 (stmt -> loop .)
    ARC             reduce using rule 16 (stmt -> loop .)
    CLOSEBRACES     reduce using rule 16 (stmt -> loop .)


state 81

    (17) stmt -> read .

    ID              reduce using rule 17 (stmt -> read .)
    IF              reduce using rule 17 (stmt -> read .)
    PRINT           reduce using rule 17 (stmt -> read .)
    READ            reduce using rule 17 (stmt -> read .)
    REPEAT          reduce using rule 17 (stmt -> read .)
    RETURN          reduce using rule 17 (stmt -> read .)
    WHILE           reduce using rule 17 (stmt -> read .)
    FOR             reduce using rule 17 (stmt -> read .)
    CIRCLE          reduce using rule 17 (stmt -> read .)
    SQUARE          reduce using rule 17 (stmt -> read .)
    TRIANGLE        reduce using rule 17 (stmt -> read .)
    RECTANGLE       reduce using rule 17 (stmt -> read .)
    HIDE_STAR       reduce using rule 17 (stmt -> read .)
    SHOW_STAR       reduce using rule 17 (stmt -> read .)
    HAND_DOWN       reduce using rule 17 (stmt -> read .)
    HAND_UP         reduce using rule 17 (stmt -> read .)
    SETXY           reduce using rule 17 (stmt -> read .)
    COLOR_STAR      reduce using rule 17 (stmt -> read .)
    SIZE_STAR       reduce using rule 17 (stmt -> read .)
    GO              reduce using rule 17 (stmt -> read .)
    LEFT            reduce using rule 17 (stmt -> read .)
    RIGHT           reduce using rule 17 (stmt -> read .)
    BACK            reduce using rule 17 (stmt -> read .)
    ARC             reduce using rule 17 (stmt -> read .)
    CLOSEBRACES     reduce using rule 17 (stmt -> read .)


state 82

    (18) stmt -> graphstmt .

    ID              reduce using rule 18 (stmt -> graphstmt .)
    IF              reduce using rule 18 (stmt -> graphstmt .)
    PRINT           reduce using rule 18 (stmt -> graphstmt .)
    READ            reduce using rule 18 (stmt -> graphstmt .)
    REPEAT          reduce using rule 18 (stmt -> graphstmt .)
    RETURN          reduce using rule 18 (stmt -> graphstmt .)
    WHILE           reduce using rule 18 (stmt -> graphstmt .)
    FOR             reduce using rule 18 (stmt -> graphstmt .)
    CIRCLE          reduce using rule 18 (stmt -> graphstmt .)
    SQUARE          reduce using rule 18 (stmt -> graphstmt .)
    TRIANGLE        reduce using rule 18 (stmt -> graphstmt .)
    RECTANGLE       reduce using rule 18 (stmt -> graphstmt .)
    HIDE_STAR       reduce using rule 18 (stmt -> graphstmt .)
    SHOW_STAR       reduce using rule 18 (stmt -> graphstmt .)
    HAND_DOWN       reduce using rule 18 (stmt -> graphstmt .)
    HAND_UP         reduce using rule 18 (stmt -> graphstmt .)
    SETXY           reduce using rule 18 (stmt -> graphstmt .)
    COLOR_STAR      reduce using rule 18 (stmt -> graphstmt .)
    SIZE_STAR       reduce using rule 18 (stmt -> graphstmt .)
    GO              reduce using rule 18 (stmt -> graphstmt .)
    LEFT            reduce using rule 18 (stmt -> graphstmt .)
    RIGHT           reduce using rule 18 (stmt -> graphstmt .)
    BACK            reduce using rule 18 (stmt -> graphstmt .)
    ARC             reduce using rule 18 (stmt -> graphstmt .)
    CLOSEBRACES     reduce using rule 18 (stmt -> graphstmt .)


state 83

    (19) stmt -> graphr .

    ID              reduce using rule 19 (stmt -> graphr .)
    IF              reduce using rule 19 (stmt -> graphr .)
    PRINT           reduce using rule 19 (stmt -> graphr .)
    READ            reduce using rule 19 (stmt -> graphr .)
    REPEAT          reduce using rule 19 (stmt -> graphr .)
    RETURN          reduce using rule 19 (stmt -> graphr .)
    WHILE           reduce using rule 19 (stmt -> graphr .)
    FOR             reduce using rule 19 (stmt -> graphr .)
    CIRCLE          reduce using rule 19 (stmt -> graphr .)
    SQUARE          reduce using rule 19 (stmt -> graphr .)
    TRIANGLE        reduce using rule 19 (stmt -> graphr .)
    RECTANGLE       reduce using rule 19 (stmt -> graphr .)
    HIDE_STAR       reduce using rule 19 (stmt -> graphr .)
    SHOW_STAR       reduce using rule 19 (stmt -> graphr .)
    HAND_DOWN       reduce using rule 19 (stmt -> graphr .)
    HAND_UP         reduce using rule 19 (stmt -> graphr .)
    SETXY           reduce using rule 19 (stmt -> graphr .)
    COLOR_STAR      reduce using rule 19 (stmt -> graphr .)
    SIZE_STAR       reduce using rule 19 (stmt -> graphr .)
    GO              reduce using rule 19 (stmt -> graphr .)
    LEFT            reduce using rule 19 (stmt -> graphr .)
    RIGHT           reduce using rule 19 (stmt -> graphr .)
    BACK            reduce using rule 19 (stmt -> graphr .)
    ARC             reduce using rule 19 (stmt -> graphr .)
    CLOSEBRACES     reduce using rule 19 (stmt -> graphr .)


state 84

    (20) stmt -> funCall .

    ID              reduce using rule 20 (stmt -> funCall .)
    IF              reduce using rule 20 (stmt -> funCall .)
    PRINT           reduce using rule 20 (stmt -> funCall .)
    READ            reduce using rule 20 (stmt -> funCall .)
    REPEAT          reduce using rule 20 (stmt -> funCall .)
    RETURN          reduce using rule 20 (stmt -> funCall .)
    WHILE           reduce using rule 20 (stmt -> funCall .)
    FOR             reduce using rule 20 (stmt -> funCall .)
    CIRCLE          reduce using rule 20 (stmt -> funCall .)
    SQUARE          reduce using rule 20 (stmt -> funCall .)
    TRIANGLE        reduce using rule 20 (stmt -> funCall .)
    RECTANGLE       reduce using rule 20 (stmt -> funCall .)
    HIDE_STAR       reduce using rule 20 (stmt -> funCall .)
    SHOW_STAR       reduce using rule 20 (stmt -> funCall .)
    HAND_DOWN       reduce using rule 20 (stmt -> funCall .)
    HAND_UP         reduce using rule 20 (stmt -> funCall .)
    SETXY           reduce using rule 20 (stmt -> funCall .)
    COLOR_STAR      reduce using rule 20 (stmt -> funCall .)
    SIZE_STAR       reduce using rule 20 (stmt -> funCall .)
    GO              reduce using rule 20 (stmt -> funCall .)
    LEFT            reduce using rule 20 (stmt -> funCall .)
    RIGHT           reduce using rule 20 (stmt -> funCall .)
    BACK            reduce using rule 20 (stmt -> funCall .)
    ARC             reduce using rule 20 (stmt -> funCall .)
    CLOSEBRACES     reduce using rule 20 (stmt -> funCall .)


state 85

    (21) stmt -> return .

    ID              reduce using rule 21 (stmt -> return .)
    IF              reduce using rule 21 (stmt -> return .)
    PRINT           reduce using rule 21 (stmt -> return .)
    READ            reduce using rule 21 (stmt -> return .)
    REPEAT          reduce using rule 21 (stmt -> return .)
    RETURN          reduce using rule 21 (stmt -> return .)
    WHILE           reduce using rule 21 (stmt -> return .)
    FOR             reduce using rule 21 (stmt -> return .)
    CIRCLE          reduce using rule 21 (stmt -> return .)
    SQUARE          reduce using rule 21 (stmt -> return .)
    TRIANGLE        reduce using rule 21 (stmt -> return .)
    RECTANGLE       reduce using rule 21 (stmt -> return .)
    HIDE_STAR       reduce using rule 21 (stmt -> return .)
    SHOW_STAR       reduce using rule 21 (stmt -> return .)
    HAND_DOWN       reduce using rule 21 (stmt -> return .)
    HAND_UP         reduce using rule 21 (stmt -> return .)
    SETXY           reduce using rule 21 (stmt -> return .)
    COLOR_STAR      reduce using rule 21 (stmt -> return .)
    SIZE_STAR       reduce using rule 21 (stmt -> return .)
    GO              reduce using rule 21 (stmt -> return .)
    LEFT            reduce using rule 21 (stmt -> return .)
    RIGHT           reduce using rule 21 (stmt -> return .)
    BACK            reduce using rule 21 (stmt -> return .)
    ARC             reduce using rule 21 (stmt -> return .)
    CLOSEBRACES     reduce using rule 21 (stmt -> return .)


state 86

    (51) assignment -> ID . assignment1 EQUALS assignment3 SEMICOLON
    (93) funCall -> ID . OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (52) assignment1 -> . assignment2
    (53) assignment1 -> . assignment2 assignment1
    (54) assignment1 -> . empty
    (55) assignment2 -> . OPENBRACKET exp CLOSEBRACKET
    (145) empty -> .

    OPENPAREN       shift and go to state 66
    OPENBRACKET     shift and go to state 151
    EQUALS          reduce using rule 145 (empty -> .)

    assignment1                    shift and go to state 148
    assignment2                    shift and go to state 149
    empty                          shift and go to state 150

state 87

    (81) condition -> IF . head body condition1
    (85) head -> . OPENPAREN head1 CLOSEPAREN

    OPENPAREN       shift and go to state 153

    head                           shift and go to state 152

state 88

    (46) print -> PRINT . OPENPAREN exp CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 154


state 89

    (11) loop -> while .

    ID              reduce using rule 11 (loop -> while .)
    IF              reduce using rule 11 (loop -> while .)
    PRINT           reduce using rule 11 (loop -> while .)
    READ            reduce using rule 11 (loop -> while .)
    REPEAT          reduce using rule 11 (loop -> while .)
    RETURN          reduce using rule 11 (loop -> while .)
    WHILE           reduce using rule 11 (loop -> while .)
    FOR             reduce using rule 11 (loop -> while .)
    CIRCLE          reduce using rule 11 (loop -> while .)
    SQUARE          reduce using rule 11 (loop -> while .)
    TRIANGLE        reduce using rule 11 (loop -> while .)
    RECTANGLE       reduce using rule 11 (loop -> while .)
    HIDE_STAR       reduce using rule 11 (loop -> while .)
    SHOW_STAR       reduce using rule 11 (loop -> while .)
    HAND_DOWN       reduce using rule 11 (loop -> while .)
    HAND_UP         reduce using rule 11 (loop -> while .)
    SETXY           reduce using rule 11 (loop -> while .)
    COLOR_STAR      reduce using rule 11 (loop -> while .)
    SIZE_STAR       reduce using rule 11 (loop -> while .)
    GO              reduce using rule 11 (loop -> while .)
    LEFT            reduce using rule 11 (loop -> while .)
    RIGHT           reduce using rule 11 (loop -> while .)
    BACK            reduce using rule 11 (loop -> while .)
    ARC             reduce using rule 11 (loop -> while .)
    CLOSEBRACES     reduce using rule 11 (loop -> while .)


state 90

    (12) loop -> for .

    ID              reduce using rule 12 (loop -> for .)
    IF              reduce using rule 12 (loop -> for .)
    PRINT           reduce using rule 12 (loop -> for .)
    READ            reduce using rule 12 (loop -> for .)
    REPEAT          reduce using rule 12 (loop -> for .)
    RETURN          reduce using rule 12 (loop -> for .)
    WHILE           reduce using rule 12 (loop -> for .)
    FOR             reduce using rule 12 (loop -> for .)
    CIRCLE          reduce using rule 12 (loop -> for .)
    SQUARE          reduce using rule 12 (loop -> for .)
    TRIANGLE        reduce using rule 12 (loop -> for .)
    RECTANGLE       reduce using rule 12 (loop -> for .)
    HIDE_STAR       reduce using rule 12 (loop -> for .)
    SHOW_STAR       reduce using rule 12 (loop -> for .)
    HAND_DOWN       reduce using rule 12 (loop -> for .)
    HAND_UP         reduce using rule 12 (loop -> for .)
    SETXY           reduce using rule 12 (loop -> for .)
    COLOR_STAR      reduce using rule 12 (loop -> for .)
    SIZE_STAR       reduce using rule 12 (loop -> for .)
    GO              reduce using rule 12 (loop -> for .)
    LEFT            reduce using rule 12 (loop -> for .)
    RIGHT           reduce using rule 12 (loop -> for .)
    BACK            reduce using rule 12 (loop -> for .)
    ARC             reduce using rule 12 (loop -> for .)
    CLOSEBRACES     reduce using rule 12 (loop -> for .)


state 91

    (47) read -> READ . OPENPAREN ID read1 CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 155


state 92

    (100) graphstmt -> graphfig .

    ID              reduce using rule 100 (graphstmt -> graphfig .)
    IF              reduce using rule 100 (graphstmt -> graphfig .)
    PRINT           reduce using rule 100 (graphstmt -> graphfig .)
    READ            reduce using rule 100 (graphstmt -> graphfig .)
    REPEAT          reduce using rule 100 (graphstmt -> graphfig .)
    RETURN          reduce using rule 100 (graphstmt -> graphfig .)
    WHILE           reduce using rule 100 (graphstmt -> graphfig .)
    FOR             reduce using rule 100 (graphstmt -> graphfig .)
    CIRCLE          reduce using rule 100 (graphstmt -> graphfig .)
    SQUARE          reduce using rule 100 (graphstmt -> graphfig .)
    TRIANGLE        reduce using rule 100 (graphstmt -> graphfig .)
    RECTANGLE       reduce using rule 100 (graphstmt -> graphfig .)
    HIDE_STAR       reduce using rule 100 (graphstmt -> graphfig .)
    SHOW_STAR       reduce using rule 100 (graphstmt -> graphfig .)
    HAND_DOWN       reduce using rule 100 (graphstmt -> graphfig .)
    HAND_UP         reduce using rule 100 (graphstmt -> graphfig .)
    SETXY           reduce using rule 100 (graphstmt -> graphfig .)
    COLOR_STAR      reduce using rule 100 (graphstmt -> graphfig .)
    SIZE_STAR       reduce using rule 100 (graphstmt -> graphfig .)
    GO              reduce using rule 100 (graphstmt -> graphfig .)
    LEFT            reduce using rule 100 (graphstmt -> graphfig .)
    RIGHT           reduce using rule 100 (graphstmt -> graphfig .)
    BACK            reduce using rule 100 (graphstmt -> graphfig .)
    ARC             reduce using rule 100 (graphstmt -> graphfig .)
    CLOSEBRACES     reduce using rule 100 (graphstmt -> graphfig .)


state 93

    (101) graphstmt -> graphview .

    ID              reduce using rule 101 (graphstmt -> graphview .)
    IF              reduce using rule 101 (graphstmt -> graphview .)
    PRINT           reduce using rule 101 (graphstmt -> graphview .)
    READ            reduce using rule 101 (graphstmt -> graphview .)
    REPEAT          reduce using rule 101 (graphstmt -> graphview .)
    RETURN          reduce using rule 101 (graphstmt -> graphview .)
    WHILE           reduce using rule 101 (graphstmt -> graphview .)
    FOR             reduce using rule 101 (graphstmt -> graphview .)
    CIRCLE          reduce using rule 101 (graphstmt -> graphview .)
    SQUARE          reduce using rule 101 (graphstmt -> graphview .)
    TRIANGLE        reduce using rule 101 (graphstmt -> graphview .)
    RECTANGLE       reduce using rule 101 (graphstmt -> graphview .)
    HIDE_STAR       reduce using rule 101 (graphstmt -> graphview .)
    SHOW_STAR       reduce using rule 101 (graphstmt -> graphview .)
    HAND_DOWN       reduce using rule 101 (graphstmt -> graphview .)
    HAND_UP         reduce using rule 101 (graphstmt -> graphview .)
    SETXY           reduce using rule 101 (graphstmt -> graphview .)
    COLOR_STAR      reduce using rule 101 (graphstmt -> graphview .)
    SIZE_STAR       reduce using rule 101 (graphstmt -> graphview .)
    GO              reduce using rule 101 (graphstmt -> graphview .)
    LEFT            reduce using rule 101 (graphstmt -> graphview .)
    RIGHT           reduce using rule 101 (graphstmt -> graphview .)
    BACK            reduce using rule 101 (graphstmt -> graphview .)
    ARC             reduce using rule 101 (graphstmt -> graphview .)
    CLOSEBRACES     reduce using rule 101 (graphstmt -> graphview .)


state 94

    (102) graphstmt -> graphmove .

    ID              reduce using rule 102 (graphstmt -> graphmove .)
    IF              reduce using rule 102 (graphstmt -> graphmove .)
    PRINT           reduce using rule 102 (graphstmt -> graphmove .)
    READ            reduce using rule 102 (graphstmt -> graphmove .)
    REPEAT          reduce using rule 102 (graphstmt -> graphmove .)
    RETURN          reduce using rule 102 (graphstmt -> graphmove .)
    WHILE           reduce using rule 102 (graphstmt -> graphmove .)
    FOR             reduce using rule 102 (graphstmt -> graphmove .)
    CIRCLE          reduce using rule 102 (graphstmt -> graphmove .)
    SQUARE          reduce using rule 102 (graphstmt -> graphmove .)
    TRIANGLE        reduce using rule 102 (graphstmt -> graphmove .)
    RECTANGLE       reduce using rule 102 (graphstmt -> graphmove .)
    HIDE_STAR       reduce using rule 102 (graphstmt -> graphmove .)
    SHOW_STAR       reduce using rule 102 (graphstmt -> graphmove .)
    HAND_DOWN       reduce using rule 102 (graphstmt -> graphmove .)
    HAND_UP         reduce using rule 102 (graphstmt -> graphmove .)
    SETXY           reduce using rule 102 (graphstmt -> graphmove .)
    COLOR_STAR      reduce using rule 102 (graphstmt -> graphmove .)
    SIZE_STAR       reduce using rule 102 (graphstmt -> graphmove .)
    GO              reduce using rule 102 (graphstmt -> graphmove .)
    LEFT            reduce using rule 102 (graphstmt -> graphmove .)
    RIGHT           reduce using rule 102 (graphstmt -> graphmove .)
    BACK            reduce using rule 102 (graphstmt -> graphmove .)
    ARC             reduce using rule 102 (graphstmt -> graphmove .)
    CLOSEBRACES     reduce using rule 102 (graphstmt -> graphmove .)


state 95

    (117) graphr -> REPEAT . exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    exp                            shift and go to state 156
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 96

    (68) return -> RETURN . return1 SEMICOLON
    (69) return1 -> . vcte
    (70) return1 -> . exp
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (129) exp -> . term exp1
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    return1                        shift and go to state 157
    vcte                           shift and go to state 158
    exp                            shift and go to state 159
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    term                           shift and go to state 34
    factor                         shift and go to state 35
    factor1                        shift and go to state 37
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 97

    (92) while -> WHILE . head body
    (85) head -> . OPENPAREN head1 CLOSEPAREN

    OPENPAREN       shift and go to state 153

    head                           shift and go to state 160

state 98

    (91) for -> FOR . OPENPAREN ID TWODOTS exp CLOSEPAREN body

    OPENPAREN       shift and go to state 161


state 99

    (103) graphfig -> graphfig1 . SEMICOLON

    SEMICOLON       shift and go to state 162


state 100

    (120) graphview -> graphview1 . SEMICOLON

    SEMICOLON       shift and go to state 163


state 101

    (108) graphmove -> graphmove1 . SEMICOLON

    SEMICOLON       shift and go to state 164


state 102

    (104) graphfig1 -> CIRCLE . laRegla2
    (99) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 166

    laRegla2                       shift and go to state 165

state 103

    (105) graphfig1 -> SQUARE . laRegla2
    (99) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 166

    laRegla2                       shift and go to state 167

state 104

    (106) graphfig1 -> TRIANGLE . laRegla
    (98) laRegla -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 169

    laRegla                        shift and go to state 168

state 105

    (107) graphfig1 -> RECTANGLE . laRegla
    (98) laRegla -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 169

    laRegla                        shift and go to state 170

state 106

    (121) graphview1 -> HIDE_STAR .

    SEMICOLON       reduce using rule 121 (graphview1 -> HIDE_STAR .)


state 107

    (122) graphview1 -> SHOW_STAR .

    SEMICOLON       reduce using rule 122 (graphview1 -> SHOW_STAR .)


state 108

    (123) graphview1 -> graphview2 . exp
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    exp                            shift and go to state 171
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 109

    (109) graphmove1 -> HAND_DOWN .

    SEMICOLON       reduce using rule 109 (graphmove1 -> HAND_DOWN .)


state 110

    (110) graphmove1 -> HAND_UP .

    SEMICOLON       reduce using rule 110 (graphmove1 -> HAND_UP .)


state 111

    (111) graphmove1 -> graphmove2 .

    SEMICOLON       reduce using rule 111 (graphmove1 -> graphmove2 .)


state 112

    (124) graphview2 -> SETXY . graphview3
    (127) graphview3 -> . exp COMMA
    (128) graphview3 -> . laRegla
    (129) exp -> . term exp1
    (98) laRegla -> . OPENPAREN exp COMMA exp CLOSEPAREN
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    OPENPAREN       shift and go to state 175
    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48

    graphview3                     shift and go to state 172
    exp                            shift and go to state 173
    laRegla                        shift and go to state 174
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 113

    (125) graphview2 -> COLOR_STAR .

    ID              reduce using rule 125 (graphview2 -> COLOR_STAR .)
    CTEINT          reduce using rule 125 (graphview2 -> COLOR_STAR .)
    CTEFLOAT        reduce using rule 125 (graphview2 -> COLOR_STAR .)
    CTECHAR         reduce using rule 125 (graphview2 -> COLOR_STAR .)
    ADDITION        reduce using rule 125 (graphview2 -> COLOR_STAR .)
    SUBSTRACTION    reduce using rule 125 (graphview2 -> COLOR_STAR .)
    OPENPAREN       reduce using rule 125 (graphview2 -> COLOR_STAR .)


state 114

    (126) graphview2 -> SIZE_STAR .

    ID              reduce using rule 126 (graphview2 -> SIZE_STAR .)
    CTEINT          reduce using rule 126 (graphview2 -> SIZE_STAR .)
    CTEFLOAT        reduce using rule 126 (graphview2 -> SIZE_STAR .)
    CTECHAR         reduce using rule 126 (graphview2 -> SIZE_STAR .)
    ADDITION        reduce using rule 126 (graphview2 -> SIZE_STAR .)
    SUBSTRACTION    reduce using rule 126 (graphview2 -> SIZE_STAR .)
    OPENPAREN       reduce using rule 126 (graphview2 -> SIZE_STAR .)


state 115

    (112) graphmove2 -> GO . laRegla2
    (99) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 166

    laRegla2                       shift and go to state 176

state 116

    (113) graphmove2 -> LEFT . laRegla2
    (99) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 166

    laRegla2                       shift and go to state 177

state 117

    (114) graphmove2 -> RIGHT . laRegla2
    (99) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 166

    laRegla2                       shift and go to state 178

state 118

    (115) graphmove2 -> BACK . laRegla2
    (99) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 166

    laRegla2                       shift and go to state 179

state 119

    (116) graphmove2 -> ARC . laRegla
    (98) laRegla -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 169

    laRegla                        shift and go to state 180

state 120

    (9) star_vars -> vars star_vars .

    ID              reduce using rule 9 (star_vars -> vars star_vars .)
    IF              reduce using rule 9 (star_vars -> vars star_vars .)
    PRINT           reduce using rule 9 (star_vars -> vars star_vars .)
    READ            reduce using rule 9 (star_vars -> vars star_vars .)
    REPEAT          reduce using rule 9 (star_vars -> vars star_vars .)
    RETURN          reduce using rule 9 (star_vars -> vars star_vars .)
    WHILE           reduce using rule 9 (star_vars -> vars star_vars .)
    FOR             reduce using rule 9 (star_vars -> vars star_vars .)
    CIRCLE          reduce using rule 9 (star_vars -> vars star_vars .)
    SQUARE          reduce using rule 9 (star_vars -> vars star_vars .)
    TRIANGLE        reduce using rule 9 (star_vars -> vars star_vars .)
    RECTANGLE       reduce using rule 9 (star_vars -> vars star_vars .)
    HIDE_STAR       reduce using rule 9 (star_vars -> vars star_vars .)
    SHOW_STAR       reduce using rule 9 (star_vars -> vars star_vars .)
    HAND_DOWN       reduce using rule 9 (star_vars -> vars star_vars .)
    HAND_UP         reduce using rule 9 (star_vars -> vars star_vars .)
    SETXY           reduce using rule 9 (star_vars -> vars star_vars .)
    COLOR_STAR      reduce using rule 9 (star_vars -> vars star_vars .)
    SIZE_STAR       reduce using rule 9 (star_vars -> vars star_vars .)
    GO              reduce using rule 9 (star_vars -> vars star_vars .)
    LEFT            reduce using rule 9 (star_vars -> vars star_vars .)
    RIGHT           reduce using rule 9 (star_vars -> vars star_vars .)
    BACK            reduce using rule 9 (star_vars -> vars star_vars .)
    ARC             reduce using rule 9 (star_vars -> vars star_vars .)
    CLOSEBRACES     reduce using rule 9 (star_vars -> vars star_vars .)


state 121

    (22) function -> FUN function1 ID function2 inicia_fun . fun_vars function4 termina_fun
    (33) fun_vars -> . vars fun_vars
    (34) fun_vars -> . empty
    (35) vars -> . type ID vars1 SEMICOLON
    (145) empty -> .
    (43) type -> . INT
    (44) type -> . FLOAT
    (45) type -> . CHAR

    ID              reduce using rule 145 (empty -> .)
    IF              reduce using rule 145 (empty -> .)
    PRINT           reduce using rule 145 (empty -> .)
    READ            reduce using rule 145 (empty -> .)
    REPEAT          reduce using rule 145 (empty -> .)
    RETURN          reduce using rule 145 (empty -> .)
    WHILE           reduce using rule 145 (empty -> .)
    FOR             reduce using rule 145 (empty -> .)
    CIRCLE          reduce using rule 145 (empty -> .)
    SQUARE          reduce using rule 145 (empty -> .)
    TRIANGLE        reduce using rule 145 (empty -> .)
    RECTANGLE       reduce using rule 145 (empty -> .)
    HIDE_STAR       reduce using rule 145 (empty -> .)
    SHOW_STAR       reduce using rule 145 (empty -> .)
    HAND_DOWN       reduce using rule 145 (empty -> .)
    HAND_UP         reduce using rule 145 (empty -> .)
    SETXY           reduce using rule 145 (empty -> .)
    COLOR_STAR      reduce using rule 145 (empty -> .)
    SIZE_STAR       reduce using rule 145 (empty -> .)
    GO              reduce using rule 145 (empty -> .)
    LEFT            reduce using rule 145 (empty -> .)
    RIGHT           reduce using rule 145 (empty -> .)
    BACK            reduce using rule 145 (empty -> .)
    ARC             reduce using rule 145 (empty -> .)
    CLOSEBRACES     reduce using rule 145 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    fun_vars                       shift and go to state 181
    vars                           shift and go to state 182
    empty                          shift and go to state 183
    type                           shift and go to state 8

state 122

    (25) inicia_fun -> OPENBRACES .

    INT             reduce using rule 25 (inicia_fun -> OPENBRACES .)
    FLOAT           reduce using rule 25 (inicia_fun -> OPENBRACES .)
    CHAR            reduce using rule 25 (inicia_fun -> OPENBRACES .)
    ID              reduce using rule 25 (inicia_fun -> OPENBRACES .)
    IF              reduce using rule 25 (inicia_fun -> OPENBRACES .)
    PRINT           reduce using rule 25 (inicia_fun -> OPENBRACES .)
    READ            reduce using rule 25 (inicia_fun -> OPENBRACES .)
    REPEAT          reduce using rule 25 (inicia_fun -> OPENBRACES .)
    RETURN          reduce using rule 25 (inicia_fun -> OPENBRACES .)
    WHILE           reduce using rule 25 (inicia_fun -> OPENBRACES .)
    FOR             reduce using rule 25 (inicia_fun -> OPENBRACES .)
    CIRCLE          reduce using rule 25 (inicia_fun -> OPENBRACES .)
    SQUARE          reduce using rule 25 (inicia_fun -> OPENBRACES .)
    TRIANGLE        reduce using rule 25 (inicia_fun -> OPENBRACES .)
    RECTANGLE       reduce using rule 25 (inicia_fun -> OPENBRACES .)
    HIDE_STAR       reduce using rule 25 (inicia_fun -> OPENBRACES .)
    SHOW_STAR       reduce using rule 25 (inicia_fun -> OPENBRACES .)
    HAND_DOWN       reduce using rule 25 (inicia_fun -> OPENBRACES .)
    HAND_UP         reduce using rule 25 (inicia_fun -> OPENBRACES .)
    SETXY           reduce using rule 25 (inicia_fun -> OPENBRACES .)
    COLOR_STAR      reduce using rule 25 (inicia_fun -> OPENBRACES .)
    SIZE_STAR       reduce using rule 25 (inicia_fun -> OPENBRACES .)
    GO              reduce using rule 25 (inicia_fun -> OPENBRACES .)
    LEFT            reduce using rule 25 (inicia_fun -> OPENBRACES .)
    RIGHT           reduce using rule 25 (inicia_fun -> OPENBRACES .)
    BACK            reduce using rule 25 (inicia_fun -> OPENBRACES .)
    ARC             reduce using rule 25 (inicia_fun -> OPENBRACES .)
    CLOSEBRACES     reduce using rule 25 (inicia_fun -> OPENBRACES .)


state 123

    (27) function2 -> OPENPAREN function3 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 184


state 124

    (28) function3 -> type . ID function5

    ID              shift and go to state 185


state 125

    (29) function3 -> empty .

    CLOSEPAREN      reduce using rule 29 (function3 -> empty .)


state 126

    (130) exp1 -> ADDITION exp .

    COMMA           reduce using rule 130 (exp1 -> ADDITION exp .)
    SEMICOLON       reduce using rule 130 (exp1 -> ADDITION exp .)
    GREATER         reduce using rule 130 (exp1 -> ADDITION exp .)
    LESS            reduce using rule 130 (exp1 -> ADDITION exp .)
    NOTEQUAL        reduce using rule 130 (exp1 -> ADDITION exp .)
    ISEQUAL         reduce using rule 130 (exp1 -> ADDITION exp .)
    CLOSEPAREN      reduce using rule 130 (exp1 -> ADDITION exp .)
    CLOSEBRACKET    reduce using rule 130 (exp1 -> ADDITION exp .)
    OPENBRACES      reduce using rule 130 (exp1 -> ADDITION exp .)
    OR              reduce using rule 130 (exp1 -> ADDITION exp .)
    AND             reduce using rule 130 (exp1 -> ADDITION exp .)
    ID              reduce using rule 130 (exp1 -> ADDITION exp .)
    CTEINT          reduce using rule 130 (exp1 -> ADDITION exp .)
    CTEFLOAT        reduce using rule 130 (exp1 -> ADDITION exp .)
    CTECHAR         reduce using rule 130 (exp1 -> ADDITION exp .)
    ADDITION        reduce using rule 130 (exp1 -> ADDITION exp .)
    SUBSTRACTION    reduce using rule 130 (exp1 -> ADDITION exp .)
    OPENPAREN       reduce using rule 130 (exp1 -> ADDITION exp .)


state 127

    (131) exp1 -> SUBSTRACTION exp .

    COMMA           reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    SEMICOLON       reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    GREATER         reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    LESS            reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    NOTEQUAL        reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    ISEQUAL         reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    CLOSEPAREN      reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    CLOSEBRACKET    reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    OPENBRACES      reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    OR              reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    AND             reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    ID              reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    CTEINT          reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    CTEFLOAT        reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    CTECHAR         reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    ADDITION        reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    SUBSTRACTION    reduce using rule 131 (exp1 -> SUBSTRACTION exp .)
    OPENPAREN       reduce using rule 131 (exp1 -> SUBSTRACTION exp .)


state 128

    (142) term1 -> MULTIPLICATION term .

    ADDITION        reduce using rule 142 (term1 -> MULTIPLICATION term .)
    SUBSTRACTION    reduce using rule 142 (term1 -> MULTIPLICATION term .)
    COMMA           reduce using rule 142 (term1 -> MULTIPLICATION term .)
    SEMICOLON       reduce using rule 142 (term1 -> MULTIPLICATION term .)
    GREATER         reduce using rule 142 (term1 -> MULTIPLICATION term .)
    LESS            reduce using rule 142 (term1 -> MULTIPLICATION term .)
    NOTEQUAL        reduce using rule 142 (term1 -> MULTIPLICATION term .)
    ISEQUAL         reduce using rule 142 (term1 -> MULTIPLICATION term .)
    CLOSEPAREN      reduce using rule 142 (term1 -> MULTIPLICATION term .)
    CLOSEBRACKET    reduce using rule 142 (term1 -> MULTIPLICATION term .)
    OPENBRACES      reduce using rule 142 (term1 -> MULTIPLICATION term .)
    OR              reduce using rule 142 (term1 -> MULTIPLICATION term .)
    AND             reduce using rule 142 (term1 -> MULTIPLICATION term .)
    ID              reduce using rule 142 (term1 -> MULTIPLICATION term .)
    CTEINT          reduce using rule 142 (term1 -> MULTIPLICATION term .)
    CTEFLOAT        reduce using rule 142 (term1 -> MULTIPLICATION term .)
    CTECHAR         reduce using rule 142 (term1 -> MULTIPLICATION term .)
    OPENPAREN       reduce using rule 142 (term1 -> MULTIPLICATION term .)


state 129

    (143) term1 -> DIVISION term .

    ADDITION        reduce using rule 143 (term1 -> DIVISION term .)
    SUBSTRACTION    reduce using rule 143 (term1 -> DIVISION term .)
    COMMA           reduce using rule 143 (term1 -> DIVISION term .)
    SEMICOLON       reduce using rule 143 (term1 -> DIVISION term .)
    GREATER         reduce using rule 143 (term1 -> DIVISION term .)
    LESS            reduce using rule 143 (term1 -> DIVISION term .)
    NOTEQUAL        reduce using rule 143 (term1 -> DIVISION term .)
    ISEQUAL         reduce using rule 143 (term1 -> DIVISION term .)
    CLOSEPAREN      reduce using rule 143 (term1 -> DIVISION term .)
    CLOSEBRACKET    reduce using rule 143 (term1 -> DIVISION term .)
    OPENBRACES      reduce using rule 143 (term1 -> DIVISION term .)
    OR              reduce using rule 143 (term1 -> DIVISION term .)
    AND             reduce using rule 143 (term1 -> DIVISION term .)
    ID              reduce using rule 143 (term1 -> DIVISION term .)
    CTEINT          reduce using rule 143 (term1 -> DIVISION term .)
    CTEFLOAT        reduce using rule 143 (term1 -> DIVISION term .)
    CTECHAR         reduce using rule 143 (term1 -> DIVISION term .)
    OPENPAREN       reduce using rule 143 (term1 -> DIVISION term .)


state 130

    (93) funCall -> ID OPENPAREN funCall2 . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 186


state 131

    (94) funCall2 -> exp . funCall3
    (96) funCall3 -> . COMMA exp funCall2
    (97) funCall3 -> . empty
    (145) empty -> .

    COMMA           shift and go to state 188
    CLOSEPAREN      reduce using rule 145 (empty -> .)

    funCall3                       shift and go to state 187
    empty                          shift and go to state 189

state 132

    (95) funCall2 -> empty .

    CLOSEPAREN      reduce using rule 95 (funCall2 -> empty .)


state 133

    (61) vcte1 -> OPENBRACKET exp . CLOSEBRACKET vcte3

    CLOSEBRACKET    shift and go to state 190


state 134

    (138) factor1 -> openP expression closeP .

    MULTIPLICATION  reduce using rule 138 (factor1 -> openP expression closeP .)
    DIVISION        reduce using rule 138 (factor1 -> openP expression closeP .)
    ADDITION        reduce using rule 138 (factor1 -> openP expression closeP .)
    SUBSTRACTION    reduce using rule 138 (factor1 -> openP expression closeP .)
    COMMA           reduce using rule 138 (factor1 -> openP expression closeP .)
    SEMICOLON       reduce using rule 138 (factor1 -> openP expression closeP .)
    GREATER         reduce using rule 138 (factor1 -> openP expression closeP .)
    LESS            reduce using rule 138 (factor1 -> openP expression closeP .)
    NOTEQUAL        reduce using rule 138 (factor1 -> openP expression closeP .)
    ISEQUAL         reduce using rule 138 (factor1 -> openP expression closeP .)
    CLOSEPAREN      reduce using rule 138 (factor1 -> openP expression closeP .)
    CLOSEBRACKET    reduce using rule 138 (factor1 -> openP expression closeP .)
    OPENBRACES      reduce using rule 138 (factor1 -> openP expression closeP .)
    OR              reduce using rule 138 (factor1 -> openP expression closeP .)
    AND             reduce using rule 138 (factor1 -> openP expression closeP .)
    ID              reduce using rule 138 (factor1 -> openP expression closeP .)
    CTEINT          reduce using rule 138 (factor1 -> openP expression closeP .)
    CTEFLOAT        reduce using rule 138 (factor1 -> openP expression closeP .)
    CTECHAR         reduce using rule 138 (factor1 -> openP expression closeP .)
    OPENPAREN       reduce using rule 138 (factor1 -> openP expression closeP .)


state 135

    (134) closeP -> CLOSEPAREN .

    MULTIPLICATION  reduce using rule 134 (closeP -> CLOSEPAREN .)
    DIVISION        reduce using rule 134 (closeP -> CLOSEPAREN .)
    ADDITION        reduce using rule 134 (closeP -> CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 134 (closeP -> CLOSEPAREN .)
    COMMA           reduce using rule 134 (closeP -> CLOSEPAREN .)
    SEMICOLON       reduce using rule 134 (closeP -> CLOSEPAREN .)
    GREATER         reduce using rule 134 (closeP -> CLOSEPAREN .)
    LESS            reduce using rule 134 (closeP -> CLOSEPAREN .)
    NOTEQUAL        reduce using rule 134 (closeP -> CLOSEPAREN .)
    ISEQUAL         reduce using rule 134 (closeP -> CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 134 (closeP -> CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 134 (closeP -> CLOSEPAREN .)
    OPENBRACES      reduce using rule 134 (closeP -> CLOSEPAREN .)
    OR              reduce using rule 134 (closeP -> CLOSEPAREN .)
    AND             reduce using rule 134 (closeP -> CLOSEPAREN .)
    ID              reduce using rule 134 (closeP -> CLOSEPAREN .)
    CTEINT          reduce using rule 134 (closeP -> CLOSEPAREN .)
    CTEFLOAT        reduce using rule 134 (closeP -> CLOSEPAREN .)
    CTECHAR         reduce using rule 134 (closeP -> CLOSEPAREN .)
    OPENPAREN       reduce using rule 134 (closeP -> CLOSEPAREN .)


state 136

    (71) expression -> exp expression1 .

    CLOSEPAREN      reduce using rule 71 (expression -> exp expression1 .)
    OR              reduce using rule 71 (expression -> exp expression1 .)
    AND             reduce using rule 71 (expression -> exp expression1 .)


state 137

    (72) expression1 -> loper . exp
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    exp                            shift and go to state 191
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 138

    (73) expression1 -> empty .

    CLOSEPAREN      reduce using rule 73 (expression1 -> empty .)
    OR              reduce using rule 73 (expression1 -> empty .)
    AND             reduce using rule 73 (expression1 -> empty .)


state 139

    (74) loper -> GREATER .

    ID              reduce using rule 74 (loper -> GREATER .)
    CTEINT          reduce using rule 74 (loper -> GREATER .)
    CTEFLOAT        reduce using rule 74 (loper -> GREATER .)
    CTECHAR         reduce using rule 74 (loper -> GREATER .)
    ADDITION        reduce using rule 74 (loper -> GREATER .)
    SUBSTRACTION    reduce using rule 74 (loper -> GREATER .)
    OPENPAREN       reduce using rule 74 (loper -> GREATER .)


state 140

    (75) loper -> LESS .

    ID              reduce using rule 75 (loper -> LESS .)
    CTEINT          reduce using rule 75 (loper -> LESS .)
    CTEFLOAT        reduce using rule 75 (loper -> LESS .)
    CTECHAR         reduce using rule 75 (loper -> LESS .)
    ADDITION        reduce using rule 75 (loper -> LESS .)
    SUBSTRACTION    reduce using rule 75 (loper -> LESS .)
    OPENPAREN       reduce using rule 75 (loper -> LESS .)


state 141

    (76) loper -> NOTEQUAL .

    ID              reduce using rule 76 (loper -> NOTEQUAL .)
    CTEINT          reduce using rule 76 (loper -> NOTEQUAL .)
    CTEFLOAT        reduce using rule 76 (loper -> NOTEQUAL .)
    CTECHAR         reduce using rule 76 (loper -> NOTEQUAL .)
    ADDITION        reduce using rule 76 (loper -> NOTEQUAL .)
    SUBSTRACTION    reduce using rule 76 (loper -> NOTEQUAL .)
    OPENPAREN       reduce using rule 76 (loper -> NOTEQUAL .)


state 142

    (77) loper -> ISEQUAL .

    ID              reduce using rule 77 (loper -> ISEQUAL .)
    CTEINT          reduce using rule 77 (loper -> ISEQUAL .)
    CTEFLOAT        reduce using rule 77 (loper -> ISEQUAL .)
    CTECHAR         reduce using rule 77 (loper -> ISEQUAL .)
    ADDITION        reduce using rule 77 (loper -> ISEQUAL .)
    SUBSTRACTION    reduce using rule 77 (loper -> ISEQUAL .)
    OPENPAREN       reduce using rule 77 (loper -> ISEQUAL .)


state 143

    (41) vars3 -> OPENBRACKET . CTEINT CLOSEBRACKET

    CTEINT          shift and go to state 192


state 144

    (37) vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .

    SEMICOLON       reduce using rule 37 (vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .)


state 145

    (42) vars3 -> empty .

    SEMICOLON       reduce using rule 42 (vars3 -> empty .)


state 146

    (6) star -> MULTIPLICATION OPENBRACES star_vars star1 CLOSEBRACES .

    $end            reduce using rule 6 (star -> MULTIPLICATION OPENBRACES star_vars star1 CLOSEBRACES .)


state 147

    (7) star1 -> stmt star1 .

    CLOSEBRACES     reduce using rule 7 (star1 -> stmt star1 .)


state 148

    (51) assignment -> ID assignment1 . EQUALS assignment3 SEMICOLON

    EQUALS          shift and go to state 193


state 149

    (52) assignment1 -> assignment2 .
    (53) assignment1 -> assignment2 . assignment1
    (52) assignment1 -> . assignment2
    (53) assignment1 -> . assignment2 assignment1
    (54) assignment1 -> . empty
    (55) assignment2 -> . OPENBRACKET exp CLOSEBRACKET
    (145) empty -> .

  ! reduce/reduce conflict for EQUALS resolved using rule 52 (assignment1 -> assignment2 .)
    EQUALS          reduce using rule 52 (assignment1 -> assignment2 .)
    OPENBRACKET     shift and go to state 151

  ! EQUALS          [ reduce using rule 145 (empty -> .) ]

    assignment2                    shift and go to state 149
    assignment1                    shift and go to state 194
    empty                          shift and go to state 150

state 150

    (54) assignment1 -> empty .

    EQUALS          reduce using rule 54 (assignment1 -> empty .)


state 151

    (55) assignment2 -> OPENBRACKET . exp CLOSEBRACKET
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    exp                            shift and go to state 195
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 152

    (81) condition -> IF head . body condition1
    (88) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 197

    body                           shift and go to state 196

state 153

    (85) head -> OPENPAREN . head1 CLOSEPAREN
    (86) head1 -> . expression
    (87) head1 -> . logical
    (71) expression -> . exp expression1
    (78) logical -> . expression logical1 expression
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    head1                          shift and go to state 198
    expression                     shift and go to state 199
    logical                        shift and go to state 200
    exp                            shift and go to state 71
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 154

    (46) print -> PRINT OPENPAREN . exp CLOSEPAREN SEMICOLON
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    exp                            shift and go to state 201
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 155

    (47) read -> READ OPENPAREN . ID read1 CLOSEPAREN SEMICOLON

    ID              shift and go to state 202


state 156

    (117) graphr -> REPEAT exp . OPENBRACES graphstmt graphr1 CLOSEBRACES

    OPENBRACES      shift and go to state 203


state 157

    (68) return -> RETURN return1 . SEMICOLON

    SEMICOLON       shift and go to state 204


state 158

    (69) return1 -> vcte .
    (135) factor -> vcte .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 69 (return1 -> vcte .)
    SEMICOLON       reduce using rule 69 (return1 -> vcte .)
    MULTIPLICATION  reduce using rule 135 (factor -> vcte .)
    DIVISION        reduce using rule 135 (factor -> vcte .)
    ADDITION        reduce using rule 135 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 135 (factor -> vcte .)

  ! SEMICOLON       [ reduce using rule 135 (factor -> vcte .) ]


state 159

    (70) return1 -> exp .

    SEMICOLON       reduce using rule 70 (return1 -> exp .)


state 160

    (92) while -> WHILE head . body
    (88) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 197

    body                           shift and go to state 205

state 161

    (91) for -> FOR OPENPAREN . ID TWODOTS exp CLOSEPAREN body

    ID              shift and go to state 206


state 162

    (103) graphfig -> graphfig1 SEMICOLON .

    ID              reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    IF              reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    PRINT           reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    READ            reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    REPEAT          reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    RETURN          reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    WHILE           reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    FOR             reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    CIRCLE          reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    SQUARE          reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    TRIANGLE        reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    RECTANGLE       reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    HIDE_STAR       reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    SHOW_STAR       reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    HAND_DOWN       reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    HAND_UP         reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    SETXY           reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    COLOR_STAR      reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    SIZE_STAR       reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    GO              reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    LEFT            reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    RIGHT           reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    BACK            reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    ARC             reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 103 (graphfig -> graphfig1 SEMICOLON .)


state 163

    (120) graphview -> graphview1 SEMICOLON .

    ID              reduce using rule 120 (graphview -> graphview1 SEMICOLON .)
    IF              reduce using rule 120 (graphview -> graphview1 SEMICOLON .)
    PRINT           reduce using rule 120 (graphview -> graphview1 SEMICOLON .)
    READ            reduce using rule 120 (graphview -> graphview1 SEMICOLON .)
    REPEAT          reduce using rule 120 (graphview -> graphview1 SEMICOLON .)
    RETURN          reduce using rule 120 (graphview -> graphview1 SEMICOLON .)
    WHILE           reduce using rule 120 (graphview -> graphview1 SEMICOLON .)
    FOR             reduce using rule 120 (graphview -> graphview1 SEMICOLON .)
    CIRCLE          reduce using rule 120 (graphview -> graphview1 SEMICOLON .)
    SQUARE          reduce using rule 120 (graphview -> graphview1 SEMICOLON .)
    TRIANGLE        reduce using rule 120 (graphview -> graphview1 SEMICOLON .)
    RECTANGLE       reduce using rule 120 (graphview -> graphview1 SEMICOLON .)
    HIDE_STAR       reduce using rule 120 (graphview -> graphview1 SEMICOLON .)
    SHOW_STAR       reduce using rule 120 (graphview -> graphview1 SEMICOLON .)
    HAND_DOWN       reduce using rule 120 (graphview -> graphview1 SEMICOLON .)
    HAND_UP         reduce using rule 120 (graphview -> graphview1 SEMICOLON .)
    SETXY           reduce using rule 120 (graphview -> graphview1 SEMICOLON .)
    COLOR_STAR      reduce using rule 120 (graphview -> graphview1 SEMICOLON .)
    SIZE_STAR       reduce using rule 120 (graphview -> graphview1 SEMICOLON .)
    GO              reduce using rule 120 (graphview -> graphview1 SEMICOLON .)
    LEFT            reduce using rule 120 (graphview -> graphview1 SEMICOLON .)
    RIGHT           reduce using rule 120 (graphview -> graphview1 SEMICOLON .)
    BACK            reduce using rule 120 (graphview -> graphview1 SEMICOLON .)
    ARC             reduce using rule 120 (graphview -> graphview1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 120 (graphview -> graphview1 SEMICOLON .)


state 164

    (108) graphmove -> graphmove1 SEMICOLON .

    ID              reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    IF              reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    PRINT           reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    READ            reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    REPEAT          reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    RETURN          reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    WHILE           reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    FOR             reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    CIRCLE          reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    SQUARE          reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    TRIANGLE        reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    RECTANGLE       reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    HIDE_STAR       reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    SHOW_STAR       reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    HAND_DOWN       reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    HAND_UP         reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    SETXY           reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    COLOR_STAR      reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    SIZE_STAR       reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    GO              reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    LEFT            reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    RIGHT           reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    BACK            reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    ARC             reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 108 (graphmove -> graphmove1 SEMICOLON .)


state 165

    (104) graphfig1 -> CIRCLE laRegla2 .

    SEMICOLON       reduce using rule 104 (graphfig1 -> CIRCLE laRegla2 .)


state 166

    (99) laRegla2 -> OPENPAREN . exp CLOSEPAREN
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    exp                            shift and go to state 207
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 167

    (105) graphfig1 -> SQUARE laRegla2 .

    SEMICOLON       reduce using rule 105 (graphfig1 -> SQUARE laRegla2 .)


state 168

    (106) graphfig1 -> TRIANGLE laRegla .

    SEMICOLON       reduce using rule 106 (graphfig1 -> TRIANGLE laRegla .)


state 169

    (98) laRegla -> OPENPAREN . exp COMMA exp CLOSEPAREN
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    exp                            shift and go to state 208
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 170

    (107) graphfig1 -> RECTANGLE laRegla .

    SEMICOLON       reduce using rule 107 (graphfig1 -> RECTANGLE laRegla .)


state 171

    (123) graphview1 -> graphview2 exp .

    SEMICOLON       reduce using rule 123 (graphview1 -> graphview2 exp .)


state 172

    (124) graphview2 -> SETXY graphview3 .

    ID              reduce using rule 124 (graphview2 -> SETXY graphview3 .)
    CTEINT          reduce using rule 124 (graphview2 -> SETXY graphview3 .)
    CTEFLOAT        reduce using rule 124 (graphview2 -> SETXY graphview3 .)
    CTECHAR         reduce using rule 124 (graphview2 -> SETXY graphview3 .)
    ADDITION        reduce using rule 124 (graphview2 -> SETXY graphview3 .)
    SUBSTRACTION    reduce using rule 124 (graphview2 -> SETXY graphview3 .)
    OPENPAREN       reduce using rule 124 (graphview2 -> SETXY graphview3 .)


state 173

    (127) graphview3 -> exp . COMMA

    COMMA           shift and go to state 209


state 174

    (128) graphview3 -> laRegla .

    ID              reduce using rule 128 (graphview3 -> laRegla .)
    CTEINT          reduce using rule 128 (graphview3 -> laRegla .)
    CTEFLOAT        reduce using rule 128 (graphview3 -> laRegla .)
    CTECHAR         reduce using rule 128 (graphview3 -> laRegla .)
    ADDITION        reduce using rule 128 (graphview3 -> laRegla .)
    SUBSTRACTION    reduce using rule 128 (graphview3 -> laRegla .)
    OPENPAREN       reduce using rule 128 (graphview3 -> laRegla .)


state 175

    (98) laRegla -> OPENPAREN . exp COMMA exp CLOSEPAREN
    (133) openP -> OPENPAREN .
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTEINT resolved as shift
  ! shift/reduce conflict for CTEFLOAT resolved as shift
  ! shift/reduce conflict for CTECHAR resolved as shift
  ! shift/reduce conflict for ADDITION resolved as shift
  ! shift/reduce conflict for SUBSTRACTION resolved as shift
  ! shift/reduce conflict for OPENPAREN resolved as shift
    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

  ! ID              [ reduce using rule 133 (openP -> OPENPAREN .) ]
  ! CTEINT          [ reduce using rule 133 (openP -> OPENPAREN .) ]
  ! CTEFLOAT        [ reduce using rule 133 (openP -> OPENPAREN .) ]
  ! CTECHAR         [ reduce using rule 133 (openP -> OPENPAREN .) ]
  ! ADDITION        [ reduce using rule 133 (openP -> OPENPAREN .) ]
  ! SUBSTRACTION    [ reduce using rule 133 (openP -> OPENPAREN .) ]
  ! OPENPAREN       [ reduce using rule 133 (openP -> OPENPAREN .) ]

    exp                            shift and go to state 208
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 176

    (112) graphmove2 -> GO laRegla2 .

    SEMICOLON       reduce using rule 112 (graphmove2 -> GO laRegla2 .)


state 177

    (113) graphmove2 -> LEFT laRegla2 .

    SEMICOLON       reduce using rule 113 (graphmove2 -> LEFT laRegla2 .)


state 178

    (114) graphmove2 -> RIGHT laRegla2 .

    SEMICOLON       reduce using rule 114 (graphmove2 -> RIGHT laRegla2 .)


state 179

    (115) graphmove2 -> BACK laRegla2 .

    SEMICOLON       reduce using rule 115 (graphmove2 -> BACK laRegla2 .)


state 180

    (116) graphmove2 -> ARC laRegla .

    SEMICOLON       reduce using rule 116 (graphmove2 -> ARC laRegla .)


state 181

    (22) function -> FUN function1 ID function2 inicia_fun fun_vars . function4 termina_fun
    (30) function4 -> . stmt function4
    (31) function4 -> . empty
    (13) stmt -> . assignment
    (14) stmt -> . condition
    (15) stmt -> . print
    (16) stmt -> . loop
    (17) stmt -> . read
    (18) stmt -> . graphstmt
    (19) stmt -> . graphr
    (20) stmt -> . funCall
    (21) stmt -> . return
    (145) empty -> .
    (51) assignment -> . ID assignment1 EQUALS assignment3 SEMICOLON
    (81) condition -> . IF head body condition1
    (46) print -> . PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
    (11) loop -> . while
    (12) loop -> . for
    (47) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (100) graphstmt -> . graphfig
    (101) graphstmt -> . graphview
    (102) graphstmt -> . graphmove
    (117) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (68) return -> . RETURN return1 SEMICOLON
    (92) while -> . WHILE head body
    (91) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (103) graphfig -> . graphfig1 SEMICOLON
    (120) graphview -> . graphview1 SEMICOLON
    (108) graphmove -> . graphmove1 SEMICOLON
    (104) graphfig1 -> . CIRCLE laRegla2
    (105) graphfig1 -> . SQUARE laRegla2
    (106) graphfig1 -> . TRIANGLE laRegla
    (107) graphfig1 -> . RECTANGLE laRegla
    (121) graphview1 -> . HIDE_STAR
    (122) graphview1 -> . SHOW_STAR
    (123) graphview1 -> . graphview2 exp
    (109) graphmove1 -> . HAND_DOWN
    (110) graphmove1 -> . HAND_UP
    (111) graphmove1 -> . graphmove2
    (124) graphview2 -> . SETXY graphview3
    (125) graphview2 -> . COLOR_STAR
    (126) graphview2 -> . SIZE_STAR
    (112) graphmove2 -> . GO laRegla2
    (113) graphmove2 -> . LEFT laRegla2
    (114) graphmove2 -> . RIGHT laRegla2
    (115) graphmove2 -> . BACK laRegla2
    (116) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 145 (empty -> .)
    ID              shift and go to state 86
    IF              shift and go to state 87
    PRINT           shift and go to state 88
    READ            shift and go to state 91
    REPEAT          shift and go to state 95
    RETURN          shift and go to state 96
    WHILE           shift and go to state 97
    FOR             shift and go to state 98
    CIRCLE          shift and go to state 102
    SQUARE          shift and go to state 103
    TRIANGLE        shift and go to state 104
    RECTANGLE       shift and go to state 105
    HIDE_STAR       shift and go to state 106
    SHOW_STAR       shift and go to state 107
    HAND_DOWN       shift and go to state 109
    HAND_UP         shift and go to state 110
    SETXY           shift and go to state 112
    COLOR_STAR      shift and go to state 113
    SIZE_STAR       shift and go to state 114
    GO              shift and go to state 115
    LEFT            shift and go to state 116
    RIGHT           shift and go to state 117
    BACK            shift and go to state 118
    ARC             shift and go to state 119

    function4                      shift and go to state 210
    stmt                           shift and go to state 211
    empty                          shift and go to state 212
    assignment                     shift and go to state 77
    condition                      shift and go to state 78
    print                          shift and go to state 79
    loop                           shift and go to state 80
    read                           shift and go to state 81
    graphstmt                      shift and go to state 82
    graphr                         shift and go to state 83
    funCall                        shift and go to state 84
    return                         shift and go to state 85
    while                          shift and go to state 89
    for                            shift and go to state 90
    graphfig                       shift and go to state 92
    graphview                      shift and go to state 93
    graphmove                      shift and go to state 94
    graphfig1                      shift and go to state 99
    graphview1                     shift and go to state 100
    graphmove1                     shift and go to state 101
    graphview2                     shift and go to state 108
    graphmove2                     shift and go to state 111

state 182

    (33) fun_vars -> vars . fun_vars
    (33) fun_vars -> . vars fun_vars
    (34) fun_vars -> . empty
    (35) vars -> . type ID vars1 SEMICOLON
    (145) empty -> .
    (43) type -> . INT
    (44) type -> . FLOAT
    (45) type -> . CHAR

    ID              reduce using rule 145 (empty -> .)
    IF              reduce using rule 145 (empty -> .)
    PRINT           reduce using rule 145 (empty -> .)
    READ            reduce using rule 145 (empty -> .)
    REPEAT          reduce using rule 145 (empty -> .)
    RETURN          reduce using rule 145 (empty -> .)
    WHILE           reduce using rule 145 (empty -> .)
    FOR             reduce using rule 145 (empty -> .)
    CIRCLE          reduce using rule 145 (empty -> .)
    SQUARE          reduce using rule 145 (empty -> .)
    TRIANGLE        reduce using rule 145 (empty -> .)
    RECTANGLE       reduce using rule 145 (empty -> .)
    HIDE_STAR       reduce using rule 145 (empty -> .)
    SHOW_STAR       reduce using rule 145 (empty -> .)
    HAND_DOWN       reduce using rule 145 (empty -> .)
    HAND_UP         reduce using rule 145 (empty -> .)
    SETXY           reduce using rule 145 (empty -> .)
    COLOR_STAR      reduce using rule 145 (empty -> .)
    SIZE_STAR       reduce using rule 145 (empty -> .)
    GO              reduce using rule 145 (empty -> .)
    LEFT            reduce using rule 145 (empty -> .)
    RIGHT           reduce using rule 145 (empty -> .)
    BACK            reduce using rule 145 (empty -> .)
    ARC             reduce using rule 145 (empty -> .)
    CLOSEBRACES     reduce using rule 145 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    vars                           shift and go to state 182
    fun_vars                       shift and go to state 213
    empty                          shift and go to state 183
    type                           shift and go to state 8

state 183

    (34) fun_vars -> empty .

    ID              reduce using rule 34 (fun_vars -> empty .)
    IF              reduce using rule 34 (fun_vars -> empty .)
    PRINT           reduce using rule 34 (fun_vars -> empty .)
    READ            reduce using rule 34 (fun_vars -> empty .)
    REPEAT          reduce using rule 34 (fun_vars -> empty .)
    RETURN          reduce using rule 34 (fun_vars -> empty .)
    WHILE           reduce using rule 34 (fun_vars -> empty .)
    FOR             reduce using rule 34 (fun_vars -> empty .)
    CIRCLE          reduce using rule 34 (fun_vars -> empty .)
    SQUARE          reduce using rule 34 (fun_vars -> empty .)
    TRIANGLE        reduce using rule 34 (fun_vars -> empty .)
    RECTANGLE       reduce using rule 34 (fun_vars -> empty .)
    HIDE_STAR       reduce using rule 34 (fun_vars -> empty .)
    SHOW_STAR       reduce using rule 34 (fun_vars -> empty .)
    HAND_DOWN       reduce using rule 34 (fun_vars -> empty .)
    HAND_UP         reduce using rule 34 (fun_vars -> empty .)
    SETXY           reduce using rule 34 (fun_vars -> empty .)
    COLOR_STAR      reduce using rule 34 (fun_vars -> empty .)
    SIZE_STAR       reduce using rule 34 (fun_vars -> empty .)
    GO              reduce using rule 34 (fun_vars -> empty .)
    LEFT            reduce using rule 34 (fun_vars -> empty .)
    RIGHT           reduce using rule 34 (fun_vars -> empty .)
    BACK            reduce using rule 34 (fun_vars -> empty .)
    ARC             reduce using rule 34 (fun_vars -> empty .)
    CLOSEBRACES     reduce using rule 34 (fun_vars -> empty .)


state 184

    (27) function2 -> OPENPAREN function3 CLOSEPAREN .

    OPENBRACES      reduce using rule 27 (function2 -> OPENPAREN function3 CLOSEPAREN .)


state 185

    (28) function3 -> type ID . function5
    (32) function5 -> . COMMA type ID function3

    COMMA           shift and go to state 215

    function5                      shift and go to state 214

state 186

    (93) funCall -> ID OPENPAREN funCall2 CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 216


state 187

    (94) funCall2 -> exp funCall3 .

    CLOSEPAREN      reduce using rule 94 (funCall2 -> exp funCall3 .)


state 188

    (96) funCall3 -> COMMA . exp funCall2
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    exp                            shift and go to state 217
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 189

    (97) funCall3 -> empty .

    CLOSEPAREN      reduce using rule 97 (funCall3 -> empty .)


state 190

    (61) vcte1 -> OPENBRACKET exp CLOSEBRACKET . vcte3
    (63) vcte3 -> . OPENBRACKET exp CLOSEBRACKET
    (64) vcte3 -> . empty
    (145) empty -> .

    OPENBRACKET     shift and go to state 218
    MULTIPLICATION  reduce using rule 145 (empty -> .)
    DIVISION        reduce using rule 145 (empty -> .)
    ADDITION        reduce using rule 145 (empty -> .)
    SUBSTRACTION    reduce using rule 145 (empty -> .)
    COMMA           reduce using rule 145 (empty -> .)
    SEMICOLON       reduce using rule 145 (empty -> .)
    GREATER         reduce using rule 145 (empty -> .)
    LESS            reduce using rule 145 (empty -> .)
    NOTEQUAL        reduce using rule 145 (empty -> .)
    ISEQUAL         reduce using rule 145 (empty -> .)
    CLOSEPAREN      reduce using rule 145 (empty -> .)
    CLOSEBRACKET    reduce using rule 145 (empty -> .)
    OPENBRACES      reduce using rule 145 (empty -> .)
    OR              reduce using rule 145 (empty -> .)
    AND             reduce using rule 145 (empty -> .)
    ID              reduce using rule 145 (empty -> .)
    CTEINT          reduce using rule 145 (empty -> .)
    CTEFLOAT        reduce using rule 145 (empty -> .)
    CTECHAR         reduce using rule 145 (empty -> .)
    OPENPAREN       reduce using rule 145 (empty -> .)

    vcte3                          shift and go to state 219
    empty                          shift and go to state 220

state 191

    (72) expression1 -> loper exp .

    CLOSEPAREN      reduce using rule 72 (expression1 -> loper exp .)
    OR              reduce using rule 72 (expression1 -> loper exp .)
    AND             reduce using rule 72 (expression1 -> loper exp .)


state 192

    (41) vars3 -> OPENBRACKET CTEINT . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 221


state 193

    (51) assignment -> ID assignment1 EQUALS . assignment3 SEMICOLON
    (56) assignment3 -> . exp
    (57) assignment3 -> . read
    (129) exp -> . term exp1
    (47) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    READ            shift and go to state 91
    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    assignment3                    shift and go to state 222
    exp                            shift and go to state 223
    read                           shift and go to state 224
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 194

    (53) assignment1 -> assignment2 assignment1 .

    EQUALS          reduce using rule 53 (assignment1 -> assignment2 assignment1 .)


state 195

    (55) assignment2 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 225


state 196

    (81) condition -> IF head body . condition1
    (82) condition1 -> . ELSEIF head body condition1
    (83) condition1 -> . ELSE body
    (84) condition1 -> . empty
    (145) empty -> .

    ELSEIF          shift and go to state 227
    ELSE            shift and go to state 228
    ID              reduce using rule 145 (empty -> .)
    IF              reduce using rule 145 (empty -> .)
    PRINT           reduce using rule 145 (empty -> .)
    READ            reduce using rule 145 (empty -> .)
    REPEAT          reduce using rule 145 (empty -> .)
    RETURN          reduce using rule 145 (empty -> .)
    WHILE           reduce using rule 145 (empty -> .)
    FOR             reduce using rule 145 (empty -> .)
    CIRCLE          reduce using rule 145 (empty -> .)
    SQUARE          reduce using rule 145 (empty -> .)
    TRIANGLE        reduce using rule 145 (empty -> .)
    RECTANGLE       reduce using rule 145 (empty -> .)
    HIDE_STAR       reduce using rule 145 (empty -> .)
    SHOW_STAR       reduce using rule 145 (empty -> .)
    HAND_DOWN       reduce using rule 145 (empty -> .)
    HAND_UP         reduce using rule 145 (empty -> .)
    SETXY           reduce using rule 145 (empty -> .)
    COLOR_STAR      reduce using rule 145 (empty -> .)
    SIZE_STAR       reduce using rule 145 (empty -> .)
    GO              reduce using rule 145 (empty -> .)
    LEFT            reduce using rule 145 (empty -> .)
    RIGHT           reduce using rule 145 (empty -> .)
    BACK            reduce using rule 145 (empty -> .)
    ARC             reduce using rule 145 (empty -> .)
    CLOSEBRACES     reduce using rule 145 (empty -> .)

    condition1                     shift and go to state 226
    empty                          shift and go to state 229

state 197

    (88) body -> OPENBRACES . body1 CLOSEBRACES
    (89) body1 -> . stmt body1
    (90) body1 -> . empty
    (13) stmt -> . assignment
    (14) stmt -> . condition
    (15) stmt -> . print
    (16) stmt -> . loop
    (17) stmt -> . read
    (18) stmt -> . graphstmt
    (19) stmt -> . graphr
    (20) stmt -> . funCall
    (21) stmt -> . return
    (145) empty -> .
    (51) assignment -> . ID assignment1 EQUALS assignment3 SEMICOLON
    (81) condition -> . IF head body condition1
    (46) print -> . PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
    (11) loop -> . while
    (12) loop -> . for
    (47) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (100) graphstmt -> . graphfig
    (101) graphstmt -> . graphview
    (102) graphstmt -> . graphmove
    (117) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (68) return -> . RETURN return1 SEMICOLON
    (92) while -> . WHILE head body
    (91) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (103) graphfig -> . graphfig1 SEMICOLON
    (120) graphview -> . graphview1 SEMICOLON
    (108) graphmove -> . graphmove1 SEMICOLON
    (104) graphfig1 -> . CIRCLE laRegla2
    (105) graphfig1 -> . SQUARE laRegla2
    (106) graphfig1 -> . TRIANGLE laRegla
    (107) graphfig1 -> . RECTANGLE laRegla
    (121) graphview1 -> . HIDE_STAR
    (122) graphview1 -> . SHOW_STAR
    (123) graphview1 -> . graphview2 exp
    (109) graphmove1 -> . HAND_DOWN
    (110) graphmove1 -> . HAND_UP
    (111) graphmove1 -> . graphmove2
    (124) graphview2 -> . SETXY graphview3
    (125) graphview2 -> . COLOR_STAR
    (126) graphview2 -> . SIZE_STAR
    (112) graphmove2 -> . GO laRegla2
    (113) graphmove2 -> . LEFT laRegla2
    (114) graphmove2 -> . RIGHT laRegla2
    (115) graphmove2 -> . BACK laRegla2
    (116) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 145 (empty -> .)
    ID              shift and go to state 86
    IF              shift and go to state 87
    PRINT           shift and go to state 88
    READ            shift and go to state 91
    REPEAT          shift and go to state 95
    RETURN          shift and go to state 96
    WHILE           shift and go to state 97
    FOR             shift and go to state 98
    CIRCLE          shift and go to state 102
    SQUARE          shift and go to state 103
    TRIANGLE        shift and go to state 104
    RECTANGLE       shift and go to state 105
    HIDE_STAR       shift and go to state 106
    SHOW_STAR       shift and go to state 107
    HAND_DOWN       shift and go to state 109
    HAND_UP         shift and go to state 110
    SETXY           shift and go to state 112
    COLOR_STAR      shift and go to state 113
    SIZE_STAR       shift and go to state 114
    GO              shift and go to state 115
    LEFT            shift and go to state 116
    RIGHT           shift and go to state 117
    BACK            shift and go to state 118
    ARC             shift and go to state 119

    body1                          shift and go to state 230
    stmt                           shift and go to state 231
    empty                          shift and go to state 232
    assignment                     shift and go to state 77
    condition                      shift and go to state 78
    print                          shift and go to state 79
    loop                           shift and go to state 80
    read                           shift and go to state 81
    graphstmt                      shift and go to state 82
    graphr                         shift and go to state 83
    funCall                        shift and go to state 84
    return                         shift and go to state 85
    while                          shift and go to state 89
    for                            shift and go to state 90
    graphfig                       shift and go to state 92
    graphview                      shift and go to state 93
    graphmove                      shift and go to state 94
    graphfig1                      shift and go to state 99
    graphview1                     shift and go to state 100
    graphmove1                     shift and go to state 101
    graphview2                     shift and go to state 108
    graphmove2                     shift and go to state 111

state 198

    (85) head -> OPENPAREN head1 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 233


state 199

    (86) head1 -> expression .
    (78) logical -> expression . logical1 expression
    (79) logical1 -> . OR
    (80) logical1 -> . AND

    CLOSEPAREN      reduce using rule 86 (head1 -> expression .)
    OR              shift and go to state 235
    AND             shift and go to state 236

    logical1                       shift and go to state 234

state 200

    (87) head1 -> logical .

    CLOSEPAREN      reduce using rule 87 (head1 -> logical .)


state 201

    (46) print -> PRINT OPENPAREN exp . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 237


state 202

    (47) read -> READ OPENPAREN ID . read1 CLOSEPAREN SEMICOLON
    (48) read1 -> . OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (49) read1 -> . OPENBRACKET exp CLOSEBRACKET
    (50) read1 -> . empty
    (145) empty -> .

    OPENBRACKET     shift and go to state 239
    CLOSEPAREN      reduce using rule 145 (empty -> .)

    read1                          shift and go to state 238
    empty                          shift and go to state 240

state 203

    (117) graphr -> REPEAT exp OPENBRACES . graphstmt graphr1 CLOSEBRACES
    (100) graphstmt -> . graphfig
    (101) graphstmt -> . graphview
    (102) graphstmt -> . graphmove
    (103) graphfig -> . graphfig1 SEMICOLON
    (120) graphview -> . graphview1 SEMICOLON
    (108) graphmove -> . graphmove1 SEMICOLON
    (104) graphfig1 -> . CIRCLE laRegla2
    (105) graphfig1 -> . SQUARE laRegla2
    (106) graphfig1 -> . TRIANGLE laRegla
    (107) graphfig1 -> . RECTANGLE laRegla
    (121) graphview1 -> . HIDE_STAR
    (122) graphview1 -> . SHOW_STAR
    (123) graphview1 -> . graphview2 exp
    (109) graphmove1 -> . HAND_DOWN
    (110) graphmove1 -> . HAND_UP
    (111) graphmove1 -> . graphmove2
    (124) graphview2 -> . SETXY graphview3
    (125) graphview2 -> . COLOR_STAR
    (126) graphview2 -> . SIZE_STAR
    (112) graphmove2 -> . GO laRegla2
    (113) graphmove2 -> . LEFT laRegla2
    (114) graphmove2 -> . RIGHT laRegla2
    (115) graphmove2 -> . BACK laRegla2
    (116) graphmove2 -> . ARC laRegla

    CIRCLE          shift and go to state 102
    SQUARE          shift and go to state 103
    TRIANGLE        shift and go to state 104
    RECTANGLE       shift and go to state 105
    HIDE_STAR       shift and go to state 106
    SHOW_STAR       shift and go to state 107
    HAND_DOWN       shift and go to state 109
    HAND_UP         shift and go to state 110
    SETXY           shift and go to state 112
    COLOR_STAR      shift and go to state 113
    SIZE_STAR       shift and go to state 114
    GO              shift and go to state 115
    LEFT            shift and go to state 116
    RIGHT           shift and go to state 117
    BACK            shift and go to state 118
    ARC             shift and go to state 119

    graphstmt                      shift and go to state 241
    graphfig                       shift and go to state 92
    graphview                      shift and go to state 93
    graphmove                      shift and go to state 94
    graphfig1                      shift and go to state 99
    graphview1                     shift and go to state 100
    graphmove1                     shift and go to state 101
    graphview2                     shift and go to state 108
    graphmove2                     shift and go to state 111

state 204

    (68) return -> RETURN return1 SEMICOLON .

    ID              reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    IF              reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    PRINT           reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    READ            reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    REPEAT          reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    RETURN          reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    WHILE           reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    FOR             reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    CIRCLE          reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    SQUARE          reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    TRIANGLE        reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    RECTANGLE       reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    HIDE_STAR       reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    SHOW_STAR       reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    HAND_DOWN       reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    HAND_UP         reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    SETXY           reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    COLOR_STAR      reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    SIZE_STAR       reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    GO              reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    LEFT            reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    RIGHT           reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    BACK            reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    ARC             reduce using rule 68 (return -> RETURN return1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 68 (return -> RETURN return1 SEMICOLON .)


state 205

    (92) while -> WHILE head body .

    ID              reduce using rule 92 (while -> WHILE head body .)
    IF              reduce using rule 92 (while -> WHILE head body .)
    PRINT           reduce using rule 92 (while -> WHILE head body .)
    READ            reduce using rule 92 (while -> WHILE head body .)
    REPEAT          reduce using rule 92 (while -> WHILE head body .)
    RETURN          reduce using rule 92 (while -> WHILE head body .)
    WHILE           reduce using rule 92 (while -> WHILE head body .)
    FOR             reduce using rule 92 (while -> WHILE head body .)
    CIRCLE          reduce using rule 92 (while -> WHILE head body .)
    SQUARE          reduce using rule 92 (while -> WHILE head body .)
    TRIANGLE        reduce using rule 92 (while -> WHILE head body .)
    RECTANGLE       reduce using rule 92 (while -> WHILE head body .)
    HIDE_STAR       reduce using rule 92 (while -> WHILE head body .)
    SHOW_STAR       reduce using rule 92 (while -> WHILE head body .)
    HAND_DOWN       reduce using rule 92 (while -> WHILE head body .)
    HAND_UP         reduce using rule 92 (while -> WHILE head body .)
    SETXY           reduce using rule 92 (while -> WHILE head body .)
    COLOR_STAR      reduce using rule 92 (while -> WHILE head body .)
    SIZE_STAR       reduce using rule 92 (while -> WHILE head body .)
    GO              reduce using rule 92 (while -> WHILE head body .)
    LEFT            reduce using rule 92 (while -> WHILE head body .)
    RIGHT           reduce using rule 92 (while -> WHILE head body .)
    BACK            reduce using rule 92 (while -> WHILE head body .)
    ARC             reduce using rule 92 (while -> WHILE head body .)
    CLOSEBRACES     reduce using rule 92 (while -> WHILE head body .)


state 206

    (91) for -> FOR OPENPAREN ID . TWODOTS exp CLOSEPAREN body

    TWODOTS         shift and go to state 242


state 207

    (99) laRegla2 -> OPENPAREN exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 243


state 208

    (98) laRegla -> OPENPAREN exp . COMMA exp CLOSEPAREN

    COMMA           shift and go to state 244


state 209

    (127) graphview3 -> exp COMMA .

    ID              reduce using rule 127 (graphview3 -> exp COMMA .)
    CTEINT          reduce using rule 127 (graphview3 -> exp COMMA .)
    CTEFLOAT        reduce using rule 127 (graphview3 -> exp COMMA .)
    CTECHAR         reduce using rule 127 (graphview3 -> exp COMMA .)
    ADDITION        reduce using rule 127 (graphview3 -> exp COMMA .)
    SUBSTRACTION    reduce using rule 127 (graphview3 -> exp COMMA .)
    OPENPAREN       reduce using rule 127 (graphview3 -> exp COMMA .)


state 210

    (22) function -> FUN function1 ID function2 inicia_fun fun_vars function4 . termina_fun
    (26) termina_fun -> . CLOSEBRACES

    CLOSEBRACES     shift and go to state 246

    termina_fun                    shift and go to state 245

state 211

    (30) function4 -> stmt . function4
    (30) function4 -> . stmt function4
    (31) function4 -> . empty
    (13) stmt -> . assignment
    (14) stmt -> . condition
    (15) stmt -> . print
    (16) stmt -> . loop
    (17) stmt -> . read
    (18) stmt -> . graphstmt
    (19) stmt -> . graphr
    (20) stmt -> . funCall
    (21) stmt -> . return
    (145) empty -> .
    (51) assignment -> . ID assignment1 EQUALS assignment3 SEMICOLON
    (81) condition -> . IF head body condition1
    (46) print -> . PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
    (11) loop -> . while
    (12) loop -> . for
    (47) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (100) graphstmt -> . graphfig
    (101) graphstmt -> . graphview
    (102) graphstmt -> . graphmove
    (117) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (68) return -> . RETURN return1 SEMICOLON
    (92) while -> . WHILE head body
    (91) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (103) graphfig -> . graphfig1 SEMICOLON
    (120) graphview -> . graphview1 SEMICOLON
    (108) graphmove -> . graphmove1 SEMICOLON
    (104) graphfig1 -> . CIRCLE laRegla2
    (105) graphfig1 -> . SQUARE laRegla2
    (106) graphfig1 -> . TRIANGLE laRegla
    (107) graphfig1 -> . RECTANGLE laRegla
    (121) graphview1 -> . HIDE_STAR
    (122) graphview1 -> . SHOW_STAR
    (123) graphview1 -> . graphview2 exp
    (109) graphmove1 -> . HAND_DOWN
    (110) graphmove1 -> . HAND_UP
    (111) graphmove1 -> . graphmove2
    (124) graphview2 -> . SETXY graphview3
    (125) graphview2 -> . COLOR_STAR
    (126) graphview2 -> . SIZE_STAR
    (112) graphmove2 -> . GO laRegla2
    (113) graphmove2 -> . LEFT laRegla2
    (114) graphmove2 -> . RIGHT laRegla2
    (115) graphmove2 -> . BACK laRegla2
    (116) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 145 (empty -> .)
    ID              shift and go to state 86
    IF              shift and go to state 87
    PRINT           shift and go to state 88
    READ            shift and go to state 91
    REPEAT          shift and go to state 95
    RETURN          shift and go to state 96
    WHILE           shift and go to state 97
    FOR             shift and go to state 98
    CIRCLE          shift and go to state 102
    SQUARE          shift and go to state 103
    TRIANGLE        shift and go to state 104
    RECTANGLE       shift and go to state 105
    HIDE_STAR       shift and go to state 106
    SHOW_STAR       shift and go to state 107
    HAND_DOWN       shift and go to state 109
    HAND_UP         shift and go to state 110
    SETXY           shift and go to state 112
    COLOR_STAR      shift and go to state 113
    SIZE_STAR       shift and go to state 114
    GO              shift and go to state 115
    LEFT            shift and go to state 116
    RIGHT           shift and go to state 117
    BACK            shift and go to state 118
    ARC             shift and go to state 119

    stmt                           shift and go to state 211
    function4                      shift and go to state 247
    empty                          shift and go to state 212
    assignment                     shift and go to state 77
    condition                      shift and go to state 78
    print                          shift and go to state 79
    loop                           shift and go to state 80
    read                           shift and go to state 81
    graphstmt                      shift and go to state 82
    graphr                         shift and go to state 83
    funCall                        shift and go to state 84
    return                         shift and go to state 85
    while                          shift and go to state 89
    for                            shift and go to state 90
    graphfig                       shift and go to state 92
    graphview                      shift and go to state 93
    graphmove                      shift and go to state 94
    graphfig1                      shift and go to state 99
    graphview1                     shift and go to state 100
    graphmove1                     shift and go to state 101
    graphview2                     shift and go to state 108
    graphmove2                     shift and go to state 111

state 212

    (31) function4 -> empty .

    CLOSEBRACES     reduce using rule 31 (function4 -> empty .)


state 213

    (33) fun_vars -> vars fun_vars .

    ID              reduce using rule 33 (fun_vars -> vars fun_vars .)
    IF              reduce using rule 33 (fun_vars -> vars fun_vars .)
    PRINT           reduce using rule 33 (fun_vars -> vars fun_vars .)
    READ            reduce using rule 33 (fun_vars -> vars fun_vars .)
    REPEAT          reduce using rule 33 (fun_vars -> vars fun_vars .)
    RETURN          reduce using rule 33 (fun_vars -> vars fun_vars .)
    WHILE           reduce using rule 33 (fun_vars -> vars fun_vars .)
    FOR             reduce using rule 33 (fun_vars -> vars fun_vars .)
    CIRCLE          reduce using rule 33 (fun_vars -> vars fun_vars .)
    SQUARE          reduce using rule 33 (fun_vars -> vars fun_vars .)
    TRIANGLE        reduce using rule 33 (fun_vars -> vars fun_vars .)
    RECTANGLE       reduce using rule 33 (fun_vars -> vars fun_vars .)
    HIDE_STAR       reduce using rule 33 (fun_vars -> vars fun_vars .)
    SHOW_STAR       reduce using rule 33 (fun_vars -> vars fun_vars .)
    HAND_DOWN       reduce using rule 33 (fun_vars -> vars fun_vars .)
    HAND_UP         reduce using rule 33 (fun_vars -> vars fun_vars .)
    SETXY           reduce using rule 33 (fun_vars -> vars fun_vars .)
    COLOR_STAR      reduce using rule 33 (fun_vars -> vars fun_vars .)
    SIZE_STAR       reduce using rule 33 (fun_vars -> vars fun_vars .)
    GO              reduce using rule 33 (fun_vars -> vars fun_vars .)
    LEFT            reduce using rule 33 (fun_vars -> vars fun_vars .)
    RIGHT           reduce using rule 33 (fun_vars -> vars fun_vars .)
    BACK            reduce using rule 33 (fun_vars -> vars fun_vars .)
    ARC             reduce using rule 33 (fun_vars -> vars fun_vars .)
    CLOSEBRACES     reduce using rule 33 (fun_vars -> vars fun_vars .)


state 214

    (28) function3 -> type ID function5 .

    CLOSEPAREN      reduce using rule 28 (function3 -> type ID function5 .)


state 215

    (32) function5 -> COMMA . type ID function3
    (43) type -> . INT
    (44) type -> . FLOAT
    (45) type -> . CHAR

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    type                           shift and go to state 248

state 216

    (93) funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .

    MULTIPLICATION  reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    DIVISION        reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    ADDITION        reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    SUBSTRACTION    reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    COMMA           reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    GREATER         reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    LESS            reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    ISEQUAL         reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CLOSEPAREN      reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CLOSEBRACKET    reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    OPENBRACES      reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    OR              reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    AND             reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CTEINT          reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CTEFLOAT        reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CTECHAR         reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    OPENPAREN       reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 93 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)


state 217

    (96) funCall3 -> COMMA exp . funCall2
    (94) funCall2 -> . exp funCall3
    (95) funCall2 -> . empty
    (129) exp -> . term exp1
    (145) empty -> .
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    CLOSEPAREN      reduce using rule 145 (empty -> .)
    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    exp                            shift and go to state 131
    funCall2                       shift and go to state 249
    empty                          shift and go to state 132
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 218

    (63) vcte3 -> OPENBRACKET . exp CLOSEBRACKET
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    exp                            shift and go to state 250
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 219

    (61) vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .

    MULTIPLICATION  reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    DIVISION        reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ADDITION        reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    SUBSTRACTION    reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    COMMA           reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    SEMICOLON       reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    GREATER         reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    LESS            reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    NOTEQUAL        reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ISEQUAL         reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CLOSEPAREN      reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CLOSEBRACKET    reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    OPENBRACES      reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    OR              reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    AND             reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ID              reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CTEINT          reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CTEFLOAT        reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CTECHAR         reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    OPENPAREN       reduce using rule 61 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)


state 220

    (64) vcte3 -> empty .

    MULTIPLICATION  reduce using rule 64 (vcte3 -> empty .)
    DIVISION        reduce using rule 64 (vcte3 -> empty .)
    ADDITION        reduce using rule 64 (vcte3 -> empty .)
    SUBSTRACTION    reduce using rule 64 (vcte3 -> empty .)
    COMMA           reduce using rule 64 (vcte3 -> empty .)
    SEMICOLON       reduce using rule 64 (vcte3 -> empty .)
    GREATER         reduce using rule 64 (vcte3 -> empty .)
    LESS            reduce using rule 64 (vcte3 -> empty .)
    NOTEQUAL        reduce using rule 64 (vcte3 -> empty .)
    ISEQUAL         reduce using rule 64 (vcte3 -> empty .)
    CLOSEPAREN      reduce using rule 64 (vcte3 -> empty .)
    CLOSEBRACKET    reduce using rule 64 (vcte3 -> empty .)
    OPENBRACES      reduce using rule 64 (vcte3 -> empty .)
    OR              reduce using rule 64 (vcte3 -> empty .)
    AND             reduce using rule 64 (vcte3 -> empty .)
    ID              reduce using rule 64 (vcte3 -> empty .)
    CTEINT          reduce using rule 64 (vcte3 -> empty .)
    CTEFLOAT        reduce using rule 64 (vcte3 -> empty .)
    CTECHAR         reduce using rule 64 (vcte3 -> empty .)
    OPENPAREN       reduce using rule 64 (vcte3 -> empty .)


state 221

    (41) vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .

    SEMICOLON       reduce using rule 41 (vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .)


state 222

    (51) assignment -> ID assignment1 EQUALS assignment3 . SEMICOLON

    SEMICOLON       shift and go to state 251


state 223

    (56) assignment3 -> exp .

    SEMICOLON       reduce using rule 56 (assignment3 -> exp .)


state 224

    (57) assignment3 -> read .

    SEMICOLON       reduce using rule 57 (assignment3 -> read .)


state 225

    (55) assignment2 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     reduce using rule 55 (assignment2 -> OPENBRACKET exp CLOSEBRACKET .)
    EQUALS          reduce using rule 55 (assignment2 -> OPENBRACKET exp CLOSEBRACKET .)


state 226

    (81) condition -> IF head body condition1 .

    ID              reduce using rule 81 (condition -> IF head body condition1 .)
    IF              reduce using rule 81 (condition -> IF head body condition1 .)
    PRINT           reduce using rule 81 (condition -> IF head body condition1 .)
    READ            reduce using rule 81 (condition -> IF head body condition1 .)
    REPEAT          reduce using rule 81 (condition -> IF head body condition1 .)
    RETURN          reduce using rule 81 (condition -> IF head body condition1 .)
    WHILE           reduce using rule 81 (condition -> IF head body condition1 .)
    FOR             reduce using rule 81 (condition -> IF head body condition1 .)
    CIRCLE          reduce using rule 81 (condition -> IF head body condition1 .)
    SQUARE          reduce using rule 81 (condition -> IF head body condition1 .)
    TRIANGLE        reduce using rule 81 (condition -> IF head body condition1 .)
    RECTANGLE       reduce using rule 81 (condition -> IF head body condition1 .)
    HIDE_STAR       reduce using rule 81 (condition -> IF head body condition1 .)
    SHOW_STAR       reduce using rule 81 (condition -> IF head body condition1 .)
    HAND_DOWN       reduce using rule 81 (condition -> IF head body condition1 .)
    HAND_UP         reduce using rule 81 (condition -> IF head body condition1 .)
    SETXY           reduce using rule 81 (condition -> IF head body condition1 .)
    COLOR_STAR      reduce using rule 81 (condition -> IF head body condition1 .)
    SIZE_STAR       reduce using rule 81 (condition -> IF head body condition1 .)
    GO              reduce using rule 81 (condition -> IF head body condition1 .)
    LEFT            reduce using rule 81 (condition -> IF head body condition1 .)
    RIGHT           reduce using rule 81 (condition -> IF head body condition1 .)
    BACK            reduce using rule 81 (condition -> IF head body condition1 .)
    ARC             reduce using rule 81 (condition -> IF head body condition1 .)
    CLOSEBRACES     reduce using rule 81 (condition -> IF head body condition1 .)


state 227

    (82) condition1 -> ELSEIF . head body condition1
    (85) head -> . OPENPAREN head1 CLOSEPAREN

    OPENPAREN       shift and go to state 153

    head                           shift and go to state 252

state 228

    (83) condition1 -> ELSE . body
    (88) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 197

    body                           shift and go to state 253

state 229

    (84) condition1 -> empty .

    ID              reduce using rule 84 (condition1 -> empty .)
    IF              reduce using rule 84 (condition1 -> empty .)
    PRINT           reduce using rule 84 (condition1 -> empty .)
    READ            reduce using rule 84 (condition1 -> empty .)
    REPEAT          reduce using rule 84 (condition1 -> empty .)
    RETURN          reduce using rule 84 (condition1 -> empty .)
    WHILE           reduce using rule 84 (condition1 -> empty .)
    FOR             reduce using rule 84 (condition1 -> empty .)
    CIRCLE          reduce using rule 84 (condition1 -> empty .)
    SQUARE          reduce using rule 84 (condition1 -> empty .)
    TRIANGLE        reduce using rule 84 (condition1 -> empty .)
    RECTANGLE       reduce using rule 84 (condition1 -> empty .)
    HIDE_STAR       reduce using rule 84 (condition1 -> empty .)
    SHOW_STAR       reduce using rule 84 (condition1 -> empty .)
    HAND_DOWN       reduce using rule 84 (condition1 -> empty .)
    HAND_UP         reduce using rule 84 (condition1 -> empty .)
    SETXY           reduce using rule 84 (condition1 -> empty .)
    COLOR_STAR      reduce using rule 84 (condition1 -> empty .)
    SIZE_STAR       reduce using rule 84 (condition1 -> empty .)
    GO              reduce using rule 84 (condition1 -> empty .)
    LEFT            reduce using rule 84 (condition1 -> empty .)
    RIGHT           reduce using rule 84 (condition1 -> empty .)
    BACK            reduce using rule 84 (condition1 -> empty .)
    ARC             reduce using rule 84 (condition1 -> empty .)
    CLOSEBRACES     reduce using rule 84 (condition1 -> empty .)


state 230

    (88) body -> OPENBRACES body1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 254


state 231

    (89) body1 -> stmt . body1
    (89) body1 -> . stmt body1
    (90) body1 -> . empty
    (13) stmt -> . assignment
    (14) stmt -> . condition
    (15) stmt -> . print
    (16) stmt -> . loop
    (17) stmt -> . read
    (18) stmt -> . graphstmt
    (19) stmt -> . graphr
    (20) stmt -> . funCall
    (21) stmt -> . return
    (145) empty -> .
    (51) assignment -> . ID assignment1 EQUALS assignment3 SEMICOLON
    (81) condition -> . IF head body condition1
    (46) print -> . PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
    (11) loop -> . while
    (12) loop -> . for
    (47) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (100) graphstmt -> . graphfig
    (101) graphstmt -> . graphview
    (102) graphstmt -> . graphmove
    (117) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (68) return -> . RETURN return1 SEMICOLON
    (92) while -> . WHILE head body
    (91) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (103) graphfig -> . graphfig1 SEMICOLON
    (120) graphview -> . graphview1 SEMICOLON
    (108) graphmove -> . graphmove1 SEMICOLON
    (104) graphfig1 -> . CIRCLE laRegla2
    (105) graphfig1 -> . SQUARE laRegla2
    (106) graphfig1 -> . TRIANGLE laRegla
    (107) graphfig1 -> . RECTANGLE laRegla
    (121) graphview1 -> . HIDE_STAR
    (122) graphview1 -> . SHOW_STAR
    (123) graphview1 -> . graphview2 exp
    (109) graphmove1 -> . HAND_DOWN
    (110) graphmove1 -> . HAND_UP
    (111) graphmove1 -> . graphmove2
    (124) graphview2 -> . SETXY graphview3
    (125) graphview2 -> . COLOR_STAR
    (126) graphview2 -> . SIZE_STAR
    (112) graphmove2 -> . GO laRegla2
    (113) graphmove2 -> . LEFT laRegla2
    (114) graphmove2 -> . RIGHT laRegla2
    (115) graphmove2 -> . BACK laRegla2
    (116) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 145 (empty -> .)
    ID              shift and go to state 86
    IF              shift and go to state 87
    PRINT           shift and go to state 88
    READ            shift and go to state 91
    REPEAT          shift and go to state 95
    RETURN          shift and go to state 96
    WHILE           shift and go to state 97
    FOR             shift and go to state 98
    CIRCLE          shift and go to state 102
    SQUARE          shift and go to state 103
    TRIANGLE        shift and go to state 104
    RECTANGLE       shift and go to state 105
    HIDE_STAR       shift and go to state 106
    SHOW_STAR       shift and go to state 107
    HAND_DOWN       shift and go to state 109
    HAND_UP         shift and go to state 110
    SETXY           shift and go to state 112
    COLOR_STAR      shift and go to state 113
    SIZE_STAR       shift and go to state 114
    GO              shift and go to state 115
    LEFT            shift and go to state 116
    RIGHT           shift and go to state 117
    BACK            shift and go to state 118
    ARC             shift and go to state 119

    stmt                           shift and go to state 231
    body1                          shift and go to state 255
    empty                          shift and go to state 232
    assignment                     shift and go to state 77
    condition                      shift and go to state 78
    print                          shift and go to state 79
    loop                           shift and go to state 80
    read                           shift and go to state 81
    graphstmt                      shift and go to state 82
    graphr                         shift and go to state 83
    funCall                        shift and go to state 84
    return                         shift and go to state 85
    while                          shift and go to state 89
    for                            shift and go to state 90
    graphfig                       shift and go to state 92
    graphview                      shift and go to state 93
    graphmove                      shift and go to state 94
    graphfig1                      shift and go to state 99
    graphview1                     shift and go to state 100
    graphmove1                     shift and go to state 101
    graphview2                     shift and go to state 108
    graphmove2                     shift and go to state 111

state 232

    (90) body1 -> empty .

    CLOSEBRACES     reduce using rule 90 (body1 -> empty .)


state 233

    (85) head -> OPENPAREN head1 CLOSEPAREN .

    OPENBRACES      reduce using rule 85 (head -> OPENPAREN head1 CLOSEPAREN .)


state 234

    (78) logical -> expression logical1 . expression
    (71) expression -> . exp expression1
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    expression                     shift and go to state 256
    exp                            shift and go to state 71
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 235

    (79) logical1 -> OR .

    ID              reduce using rule 79 (logical1 -> OR .)
    CTEINT          reduce using rule 79 (logical1 -> OR .)
    CTEFLOAT        reduce using rule 79 (logical1 -> OR .)
    CTECHAR         reduce using rule 79 (logical1 -> OR .)
    ADDITION        reduce using rule 79 (logical1 -> OR .)
    SUBSTRACTION    reduce using rule 79 (logical1 -> OR .)
    OPENPAREN       reduce using rule 79 (logical1 -> OR .)


state 236

    (80) logical1 -> AND .

    ID              reduce using rule 80 (logical1 -> AND .)
    CTEINT          reduce using rule 80 (logical1 -> AND .)
    CTEFLOAT        reduce using rule 80 (logical1 -> AND .)
    CTECHAR         reduce using rule 80 (logical1 -> AND .)
    ADDITION        reduce using rule 80 (logical1 -> AND .)
    SUBSTRACTION    reduce using rule 80 (logical1 -> AND .)
    OPENPAREN       reduce using rule 80 (logical1 -> AND .)


state 237

    (46) print -> PRINT OPENPAREN exp CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 257


state 238

    (47) read -> READ OPENPAREN ID read1 . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 258


state 239

    (48) read1 -> OPENBRACKET . exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (49) read1 -> OPENBRACKET . exp CLOSEBRACKET
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    exp                            shift and go to state 259
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 240

    (50) read1 -> empty .

    CLOSEPAREN      reduce using rule 50 (read1 -> empty .)


state 241

    (117) graphr -> REPEAT exp OPENBRACES graphstmt . graphr1 CLOSEBRACES
    (118) graphr1 -> . graphstmt graphr1
    (119) graphr1 -> . empty
    (100) graphstmt -> . graphfig
    (101) graphstmt -> . graphview
    (102) graphstmt -> . graphmove
    (145) empty -> .
    (103) graphfig -> . graphfig1 SEMICOLON
    (120) graphview -> . graphview1 SEMICOLON
    (108) graphmove -> . graphmove1 SEMICOLON
    (104) graphfig1 -> . CIRCLE laRegla2
    (105) graphfig1 -> . SQUARE laRegla2
    (106) graphfig1 -> . TRIANGLE laRegla
    (107) graphfig1 -> . RECTANGLE laRegla
    (121) graphview1 -> . HIDE_STAR
    (122) graphview1 -> . SHOW_STAR
    (123) graphview1 -> . graphview2 exp
    (109) graphmove1 -> . HAND_DOWN
    (110) graphmove1 -> . HAND_UP
    (111) graphmove1 -> . graphmove2
    (124) graphview2 -> . SETXY graphview3
    (125) graphview2 -> . COLOR_STAR
    (126) graphview2 -> . SIZE_STAR
    (112) graphmove2 -> . GO laRegla2
    (113) graphmove2 -> . LEFT laRegla2
    (114) graphmove2 -> . RIGHT laRegla2
    (115) graphmove2 -> . BACK laRegla2
    (116) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 145 (empty -> .)
    CIRCLE          shift and go to state 102
    SQUARE          shift and go to state 103
    TRIANGLE        shift and go to state 104
    RECTANGLE       shift and go to state 105
    HIDE_STAR       shift and go to state 106
    SHOW_STAR       shift and go to state 107
    HAND_DOWN       shift and go to state 109
    HAND_UP         shift and go to state 110
    SETXY           shift and go to state 112
    COLOR_STAR      shift and go to state 113
    SIZE_STAR       shift and go to state 114
    GO              shift and go to state 115
    LEFT            shift and go to state 116
    RIGHT           shift and go to state 117
    BACK            shift and go to state 118
    ARC             shift and go to state 119

    graphstmt                      shift and go to state 260
    graphr1                        shift and go to state 261
    empty                          shift and go to state 262
    graphfig                       shift and go to state 92
    graphview                      shift and go to state 93
    graphmove                      shift and go to state 94
    graphfig1                      shift and go to state 99
    graphview1                     shift and go to state 100
    graphmove1                     shift and go to state 101
    graphview2                     shift and go to state 108
    graphmove2                     shift and go to state 111

state 242

    (91) for -> FOR OPENPAREN ID TWODOTS . exp CLOSEPAREN body
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    exp                            shift and go to state 263
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 243

    (99) laRegla2 -> OPENPAREN exp CLOSEPAREN .

    SEMICOLON       reduce using rule 99 (laRegla2 -> OPENPAREN exp CLOSEPAREN .)


state 244

    (98) laRegla -> OPENPAREN exp COMMA . exp CLOSEPAREN
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    exp                            shift and go to state 264
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 245

    (22) function -> FUN function1 ID function2 inicia_fun fun_vars function4 termina_fun .

    FUN             reduce using rule 22 (function -> FUN function1 ID function2 inicia_fun fun_vars function4 termina_fun .)
    MULTIPLICATION  reduce using rule 22 (function -> FUN function1 ID function2 inicia_fun fun_vars function4 termina_fun .)


state 246

    (26) termina_fun -> CLOSEBRACES .

    FUN             reduce using rule 26 (termina_fun -> CLOSEBRACES .)
    MULTIPLICATION  reduce using rule 26 (termina_fun -> CLOSEBRACES .)


state 247

    (30) function4 -> stmt function4 .

    CLOSEBRACES     reduce using rule 30 (function4 -> stmt function4 .)


state 248

    (32) function5 -> COMMA type . ID function3

    ID              shift and go to state 265


state 249

    (96) funCall3 -> COMMA exp funCall2 .

    CLOSEPAREN      reduce using rule 96 (funCall3 -> COMMA exp funCall2 .)


state 250

    (63) vcte3 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 266


state 251

    (51) assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .

    ID              reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    IF              reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    PRINT           reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    READ            reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    REPEAT          reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    RETURN          reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    WHILE           reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    FOR             reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    CIRCLE          reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    SQUARE          reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    TRIANGLE        reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    RECTANGLE       reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    HIDE_STAR       reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    SHOW_STAR       reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    HAND_DOWN       reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    HAND_UP         reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    SETXY           reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    COLOR_STAR      reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    SIZE_STAR       reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    GO              reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    LEFT            reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    RIGHT           reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    BACK            reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    ARC             reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    CLOSEBRACES     reduce using rule 51 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)


state 252

    (82) condition1 -> ELSEIF head . body condition1
    (88) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 197

    body                           shift and go to state 267

state 253

    (83) condition1 -> ELSE body .

    ID              reduce using rule 83 (condition1 -> ELSE body .)
    IF              reduce using rule 83 (condition1 -> ELSE body .)
    PRINT           reduce using rule 83 (condition1 -> ELSE body .)
    READ            reduce using rule 83 (condition1 -> ELSE body .)
    REPEAT          reduce using rule 83 (condition1 -> ELSE body .)
    RETURN          reduce using rule 83 (condition1 -> ELSE body .)
    WHILE           reduce using rule 83 (condition1 -> ELSE body .)
    FOR             reduce using rule 83 (condition1 -> ELSE body .)
    CIRCLE          reduce using rule 83 (condition1 -> ELSE body .)
    SQUARE          reduce using rule 83 (condition1 -> ELSE body .)
    TRIANGLE        reduce using rule 83 (condition1 -> ELSE body .)
    RECTANGLE       reduce using rule 83 (condition1 -> ELSE body .)
    HIDE_STAR       reduce using rule 83 (condition1 -> ELSE body .)
    SHOW_STAR       reduce using rule 83 (condition1 -> ELSE body .)
    HAND_DOWN       reduce using rule 83 (condition1 -> ELSE body .)
    HAND_UP         reduce using rule 83 (condition1 -> ELSE body .)
    SETXY           reduce using rule 83 (condition1 -> ELSE body .)
    COLOR_STAR      reduce using rule 83 (condition1 -> ELSE body .)
    SIZE_STAR       reduce using rule 83 (condition1 -> ELSE body .)
    GO              reduce using rule 83 (condition1 -> ELSE body .)
    LEFT            reduce using rule 83 (condition1 -> ELSE body .)
    RIGHT           reduce using rule 83 (condition1 -> ELSE body .)
    BACK            reduce using rule 83 (condition1 -> ELSE body .)
    ARC             reduce using rule 83 (condition1 -> ELSE body .)
    CLOSEBRACES     reduce using rule 83 (condition1 -> ELSE body .)


state 254

    (88) body -> OPENBRACES body1 CLOSEBRACES .

    ELSEIF          reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSE            reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    ID              reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    IF              reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    PRINT           reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    READ            reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    REPEAT          reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    RETURN          reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    WHILE           reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    FOR             reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    CIRCLE          reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    SQUARE          reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_UP         reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    SETXY           reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    GO              reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    LEFT            reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    RIGHT           reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    BACK            reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    ARC             reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)


state 255

    (89) body1 -> stmt body1 .

    CLOSEBRACES     reduce using rule 89 (body1 -> stmt body1 .)


state 256

    (78) logical -> expression logical1 expression .

    CLOSEPAREN      reduce using rule 78 (logical -> expression logical1 expression .)


state 257

    (46) print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .

    ID              reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 46 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)


state 258

    (47) read -> READ OPENPAREN ID read1 CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 268


state 259

    (48) read1 -> OPENBRACKET exp . CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (49) read1 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 269


state 260

    (118) graphr1 -> graphstmt . graphr1
    (118) graphr1 -> . graphstmt graphr1
    (119) graphr1 -> . empty
    (100) graphstmt -> . graphfig
    (101) graphstmt -> . graphview
    (102) graphstmt -> . graphmove
    (145) empty -> .
    (103) graphfig -> . graphfig1 SEMICOLON
    (120) graphview -> . graphview1 SEMICOLON
    (108) graphmove -> . graphmove1 SEMICOLON
    (104) graphfig1 -> . CIRCLE laRegla2
    (105) graphfig1 -> . SQUARE laRegla2
    (106) graphfig1 -> . TRIANGLE laRegla
    (107) graphfig1 -> . RECTANGLE laRegla
    (121) graphview1 -> . HIDE_STAR
    (122) graphview1 -> . SHOW_STAR
    (123) graphview1 -> . graphview2 exp
    (109) graphmove1 -> . HAND_DOWN
    (110) graphmove1 -> . HAND_UP
    (111) graphmove1 -> . graphmove2
    (124) graphview2 -> . SETXY graphview3
    (125) graphview2 -> . COLOR_STAR
    (126) graphview2 -> . SIZE_STAR
    (112) graphmove2 -> . GO laRegla2
    (113) graphmove2 -> . LEFT laRegla2
    (114) graphmove2 -> . RIGHT laRegla2
    (115) graphmove2 -> . BACK laRegla2
    (116) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 145 (empty -> .)
    CIRCLE          shift and go to state 102
    SQUARE          shift and go to state 103
    TRIANGLE        shift and go to state 104
    RECTANGLE       shift and go to state 105
    HIDE_STAR       shift and go to state 106
    SHOW_STAR       shift and go to state 107
    HAND_DOWN       shift and go to state 109
    HAND_UP         shift and go to state 110
    SETXY           shift and go to state 112
    COLOR_STAR      shift and go to state 113
    SIZE_STAR       shift and go to state 114
    GO              shift and go to state 115
    LEFT            shift and go to state 116
    RIGHT           shift and go to state 117
    BACK            shift and go to state 118
    ARC             shift and go to state 119

    graphstmt                      shift and go to state 260
    graphr1                        shift and go to state 270
    empty                          shift and go to state 262
    graphfig                       shift and go to state 92
    graphview                      shift and go to state 93
    graphmove                      shift and go to state 94
    graphfig1                      shift and go to state 99
    graphview1                     shift and go to state 100
    graphmove1                     shift and go to state 101
    graphview2                     shift and go to state 108
    graphmove2                     shift and go to state 111

state 261

    (117) graphr -> REPEAT exp OPENBRACES graphstmt graphr1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 271


state 262

    (119) graphr1 -> empty .

    CLOSEBRACES     reduce using rule 119 (graphr1 -> empty .)


state 263

    (91) for -> FOR OPENPAREN ID TWODOTS exp . CLOSEPAREN body

    CLOSEPAREN      shift and go to state 272


state 264

    (98) laRegla -> OPENPAREN exp COMMA exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 273


state 265

    (32) function5 -> COMMA type ID . function3
    (28) function3 -> . type ID function5
    (29) function3 -> . empty
    (43) type -> . INT
    (44) type -> . FLOAT
    (45) type -> . CHAR
    (145) empty -> .

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    CLOSEPAREN      reduce using rule 145 (empty -> .)

    type                           shift and go to state 124
    function3                      shift and go to state 274
    empty                          shift and go to state 125

state 266

    (63) vcte3 -> OPENBRACKET exp CLOSEBRACKET .

    MULTIPLICATION  reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    DIVISION        reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ADDITION        reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    SUBSTRACTION    reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    COMMA           reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    SEMICOLON       reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    GREATER         reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    LESS            reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ISEQUAL         reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    OPENBRACES      reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    OR              reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    AND             reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ID              reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CTEINT          reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CTEFLOAT        reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CTECHAR         reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    OPENPAREN       reduce using rule 63 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)


state 267

    (82) condition1 -> ELSEIF head body . condition1
    (82) condition1 -> . ELSEIF head body condition1
    (83) condition1 -> . ELSE body
    (84) condition1 -> . empty
    (145) empty -> .

    ELSEIF          shift and go to state 227
    ELSE            shift and go to state 228
    ID              reduce using rule 145 (empty -> .)
    IF              reduce using rule 145 (empty -> .)
    PRINT           reduce using rule 145 (empty -> .)
    READ            reduce using rule 145 (empty -> .)
    REPEAT          reduce using rule 145 (empty -> .)
    RETURN          reduce using rule 145 (empty -> .)
    WHILE           reduce using rule 145 (empty -> .)
    FOR             reduce using rule 145 (empty -> .)
    CIRCLE          reduce using rule 145 (empty -> .)
    SQUARE          reduce using rule 145 (empty -> .)
    TRIANGLE        reduce using rule 145 (empty -> .)
    RECTANGLE       reduce using rule 145 (empty -> .)
    HIDE_STAR       reduce using rule 145 (empty -> .)
    SHOW_STAR       reduce using rule 145 (empty -> .)
    HAND_DOWN       reduce using rule 145 (empty -> .)
    HAND_UP         reduce using rule 145 (empty -> .)
    SETXY           reduce using rule 145 (empty -> .)
    COLOR_STAR      reduce using rule 145 (empty -> .)
    SIZE_STAR       reduce using rule 145 (empty -> .)
    GO              reduce using rule 145 (empty -> .)
    LEFT            reduce using rule 145 (empty -> .)
    RIGHT           reduce using rule 145 (empty -> .)
    BACK            reduce using rule 145 (empty -> .)
    ARC             reduce using rule 145 (empty -> .)
    CLOSEBRACES     reduce using rule 145 (empty -> .)

    condition1                     shift and go to state 275
    empty                          shift and go to state 229

state 268

    (47) read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .

    ID              reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 47 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)


state 269

    (48) read1 -> OPENBRACKET exp CLOSEBRACKET . OPENBRACKET exp CLOSEBRACKET
    (49) read1 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     shift and go to state 276
    CLOSEPAREN      reduce using rule 49 (read1 -> OPENBRACKET exp CLOSEBRACKET .)


state 270

    (118) graphr1 -> graphstmt graphr1 .

    CLOSEBRACES     reduce using rule 118 (graphr1 -> graphstmt graphr1 .)


state 271

    (117) graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .

    ID              reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    IF              reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    PRINT           reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    READ            reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    REPEAT          reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RETURN          reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    WHILE           reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    FOR             reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    CIRCLE          reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SQUARE          reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HAND_UP         reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SETXY           reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    GO              reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    LEFT            reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RIGHT           reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    BACK            reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    ARC             reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 117 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)


state 272

    (91) for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN . body
    (88) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 197

    body                           shift and go to state 277

state 273

    (98) laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .

    SEMICOLON       reduce using rule 98 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    ID              reduce using rule 98 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    CTEINT          reduce using rule 98 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    CTEFLOAT        reduce using rule 98 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    CTECHAR         reduce using rule 98 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    ADDITION        reduce using rule 98 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 98 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    OPENPAREN       reduce using rule 98 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)


state 274

    (32) function5 -> COMMA type ID function3 .

    CLOSEPAREN      reduce using rule 32 (function5 -> COMMA type ID function3 .)


state 275

    (82) condition1 -> ELSEIF head body condition1 .

    ID              reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)
    IF              reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)
    PRINT           reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)
    READ            reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)
    REPEAT          reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)
    RETURN          reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)
    WHILE           reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)
    FOR             reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)
    CIRCLE          reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)
    SQUARE          reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)
    TRIANGLE        reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)
    RECTANGLE       reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)
    HIDE_STAR       reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)
    SHOW_STAR       reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)
    HAND_DOWN       reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)
    HAND_UP         reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)
    SETXY           reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)
    COLOR_STAR      reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)
    SIZE_STAR       reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)
    GO              reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)
    LEFT            reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)
    RIGHT           reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)
    BACK            reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)
    ARC             reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)
    CLOSEBRACES     reduce using rule 82 (condition1 -> ELSEIF head body condition1 .)


state 276

    (48) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET . exp CLOSEBRACKET
    (129) exp -> . term exp1
    (141) term -> . factor term1
    (135) factor -> . vcte
    (136) factor -> . factor1
    (58) vcte -> . cte
    (59) vcte -> . ID vcte1
    (60) vcte -> . funCall
    (137) factor1 -> . factor2 vcte
    (138) factor1 -> . openP expression closeP
    (65) cte -> . CTEINT
    (66) cte -> . CTEFLOAT
    (67) cte -> . CTECHAR
    (93) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (139) factor2 -> . ADDITION
    (140) factor2 -> . SUBSTRACTION
    (133) openP -> . OPENPAREN

    ID              shift and go to state 39
    CTEINT          shift and go to state 43
    CTEFLOAT        shift and go to state 44
    CTECHAR         shift and go to state 45
    ADDITION        shift and go to state 47
    SUBSTRACTION    shift and go to state 48
    OPENPAREN       shift and go to state 46

    exp                            shift and go to state 278
    term                           shift and go to state 34
    factor                         shift and go to state 35
    vcte                           shift and go to state 36
    factor1                        shift and go to state 37
    cte                            shift and go to state 38
    funCall                        shift and go to state 40
    factor2                        shift and go to state 41
    openP                          shift and go to state 42

state 277

    (91) for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .

    ID              reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    IF              reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    PRINT           reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    READ            reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    REPEAT          reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    RETURN          reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    WHILE           reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    FOR             reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    CIRCLE          reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SQUARE          reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    TRIANGLE        reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    RECTANGLE       reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    HIDE_STAR       reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SHOW_STAR       reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    HAND_DOWN       reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    HAND_UP         reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SETXY           reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    COLOR_STAR      reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SIZE_STAR       reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    GO              reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    LEFT            reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    RIGHT           reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    BACK            reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    ARC             reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    CLOSEBRACES     reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)


state 278

    (48) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 279


state 279

    (48) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .

    CLOSEPAREN      reduce using rule 48 (read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ADDITION in state 34 resolved as shift
WARNING: shift/reduce conflict for SUBSTRACTION in state 34 resolved as shift
WARNING: shift/reduce conflict for OPENPAREN in state 39 resolved as shift
WARNING: shift/reduce conflict for ID in state 175 resolved as shift
WARNING: shift/reduce conflict for CTEINT in state 175 resolved as shift
WARNING: shift/reduce conflict for CTEFLOAT in state 175 resolved as shift
WARNING: shift/reduce conflict for CTECHAR in state 175 resolved as shift
WARNING: shift/reduce conflict for ADDITION in state 175 resolved as shift
WARNING: shift/reduce conflict for SUBSTRACTION in state 175 resolved as shift
WARNING: shift/reduce conflict for OPENPAREN in state 175 resolved as shift
WARNING: reduce/reduce conflict in state 149 resolved using rule (assignment1 -> assignment2)
WARNING: rejected rule (empty -> <empty>) in state 149
WARNING: reduce/reduce conflict in state 158 resolved using rule (return1 -> vcte)
WARNING: rejected rule (factor -> vcte) in state 158
