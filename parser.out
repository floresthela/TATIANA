Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> programp ID SEMICOLON declara_vars program_modules
Rule 2     program_modules -> program_fun star
Rule 3     programp -> PROGRAM
Rule 4     program_fun -> function program_fun
Rule 5     program_fun -> empty
Rule 6     star -> starI declara_vars star1 CLOSEBRACES
Rule 7     starI -> star_sign OPENBRACES
Rule 8     star_sign -> MULTIPLICATION
Rule 9     star1 -> stmt star1
Rule 10    star1 -> empty
Rule 11    declara_vars -> vars declara_vars
Rule 12    declara_vars -> empty
Rule 13    vars -> type ID dimensionada equals exp SEMICOLON
Rule 14    vars -> type ID dimensionada SEMICOLON
Rule 15    dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET
Rule 16    dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET
Rule 17    dimensionada -> empty
Rule 18    loop -> while
Rule 19    loop -> for
Rule 20    stmt -> assignment
Rule 21    stmt -> condition
Rule 22    stmt -> print
Rule 23    stmt -> loop
Rule 24    stmt -> read
Rule 25    stmt -> graphstmt
Rule 26    stmt -> funCall SEMICOLON
Rule 27    stmt -> return
Rule 28    assignment -> id equals assignment3 SEMICOLON
Rule 29    assignment3 -> exp
Rule 30    assignment3 -> read
Rule 31    vcte -> cte_int
Rule 32    vcte -> cte_float
Rule 33    vcte -> cte_string
Rule 34    vcte -> id
Rule 35    vcte -> funCall
Rule 36    vcte -> vectormatriz
Rule 37    vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET
Rule 38    vectormatriz -> vm1
Rule 39    vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
Rule 40    vm1 -> OPENBRACKET vm2 CLOSEBRACKET
Rule 41    vm2 -> exp COMMA vm2
Rule 42    vm2 -> exp
Rule 43    vm2 -> empty
Rule 44    functionI -> type ID
Rule 45    functionI -> VOID ID
Rule 46    function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun
Rule 47    inicia_fun -> OPENBRACES
Rule 48    termina_fun -> CLOSEBRACES
Rule 49    function2 -> OPENPAREN function3 CLOSEPAREN
Rule 50    function3 -> funParam function5
Rule 51    function3 -> empty
Rule 52    function4 -> stmt function4
Rule 53    function4 -> empty
Rule 54    function5 -> COMMA funParam function5
Rule 55    function5 -> empty
Rule 56    funParam -> type ID
Rule 57    type -> INT
Rule 58    type -> FLOAT
Rule 59    type -> STRING
Rule 60    print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
Rule 61    read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
Rule 62    read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
Rule 63    read1 -> OPENBRACKET exp CLOSEBRACKET
Rule 64    read1 -> empty
Rule 65    equals -> EQUALS
Rule 66    id -> ID vectormatriz
Rule 67    funCall -> ID iniciaFunCall funCall2 terminaFunCall
Rule 68    iniciaFunCall -> OPENPAREN
Rule 69    terminaFunCall -> CLOSEPAREN
Rule 70    funCall2 -> funCallParam funCall3
Rule 71    funCall2 -> empty
Rule 72    funCall3 -> COMMA funCallParam funCall3
Rule 73    funCall3 -> empty
Rule 74    funCallParam -> exp
Rule 75    cte_int -> CTEINT
Rule 76    cte_float -> CTEFLOAT
Rule 77    cte_string -> CTESTRING
Rule 78    return -> RETURN return1 SEMICOLON
Rule 79    return1 -> vcte
Rule 80    return1 -> exp
Rule 81    loper -> GREATER
Rule 82    loper -> LESS
Rule 83    loper -> NOTEQUAL
Rule 84    loper -> ISEQUAL
Rule 85    condition -> IF head_cond body condition1
Rule 86    condition1 -> elseif head_cond body condition1
Rule 87    condition1 -> else body
Rule 88    condition1 -> empty
Rule 89    elseif -> ELSEIF
Rule 90    else -> ELSE
Rule 91    head_cond -> OPENPAREN expression close_condition
Rule 92    body -> OPENBRACES body1 CLOSEBRACES
Rule 93    close_condition -> CLOSEPAREN
Rule 94    body1 -> stmt body1
Rule 95    body1 -> empty
Rule 96    for -> for1 body
Rule 97    for1 -> forInit OPENPAREN ID for2
Rule 98    for2 -> TWODOTS exp for3
Rule 99    for3 -> CLOSEPAREN
Rule 100   forInit -> FOR
Rule 101   while -> while1 body
Rule 102   while1 -> while_w OPENPAREN expression CLOSEPAREN
Rule 103   while_w -> WHILE
Rule 104   dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN
Rule 105   unaExp -> OPENPAREN exp CLOSEPAREN
Rule 106   graphstmt -> graphfig
Rule 107   graphstmt -> graphview
Rule 108   graphstmt -> graphmove
Rule 109   graphfig -> graphfig1 SEMICOLON
Rule 110   graphfig -> graphfig2 SEMICOLON
Rule 111   graphfig1 -> CIRCLE unaExp
Rule 112   graphfig1 -> SQUARE unaExp
Rule 113   graphfig2 -> TRIANGLE dosExp
Rule 114   graphfig2 -> RECTANGLE dosExp
Rule 115   graphmove -> graphmove0 SEMICOLON
Rule 116   graphmove -> graphmove1 SEMICOLON
Rule 117   graphmove -> graphmove2 SEMICOLON
Rule 118   graphmove0 -> HAND_DOWN
Rule 119   graphmove0 -> HAND_UP
Rule 120   graphmove1 -> GO unaExp
Rule 121   graphmove1 -> LEFT unaExp
Rule 122   graphmove1 -> RIGHT unaExp
Rule 123   graphmove1 -> BACK unaExp
Rule 124   graphmove2 -> ARC dosExp
Rule 125   graphview -> graphview0 SEMICOLON
Rule 126   graphview -> graphview1 SEMICOLON
Rule 127   graphview -> graphview2 SEMICOLON
Rule 128   graphview0 -> HIDE_STAR
Rule 129   graphview0 -> SHOW_STAR
Rule 130   graphview1 -> COLOR_STAR unaExp
Rule 131   graphview1 -> SIZE_STAR unaExp
Rule 132   graphview2 -> SETXY dosExp
Rule 133   expression -> exp loper exp
Rule 134   expression -> exp
Rule 135   exp -> term
Rule 136   exp -> term exp_o exp
Rule 137   exp_o -> ADDITION
Rule 138   exp_o -> SUBSTRACTION
Rule 139   openP -> OPENPAREN
Rule 140   closeP -> CLOSEPAREN
Rule 141   term -> factor term_o term
Rule 142   term -> factor
Rule 143   term_o -> MULTIPLICATION
Rule 144   term_o -> DIVISION
Rule 145   factor -> vcte
Rule 146   factor -> openP expression closeP
Rule 147   empty -> <empty>

Terminals, with rules where they appear

ADDITION             : 137
ARC                  : 124
BACK                 : 123
CIRCLE               : 111
CLOSEBRACES          : 6 48 92
CLOSEBRACKET         : 15 16 16 37 39 40 62 62 63
CLOSEPAREN           : 49 60 61 69 93 99 102 104 105 140
COLOR_STAR           : 130
COMMA                : 39 41 54 72 104
CTEFLOAT             : 76
CTEINT               : 15 16 16 75
CTESTRING            : 77
DIVISION             : 144
ELSE                 : 90
ELSEIF               : 89
EQUALS               : 65
FLOAT                : 58
FOR                  : 100
FUN                  : 46
GO                   : 120
GREATER              : 81
HAND_DOWN            : 118
HAND_UP              : 119
HIDE_STAR            : 128
ID                   : 1 13 14 44 45 56 66 67 97
IF                   : 85
INT                  : 57
ISEQUAL              : 84
LEFT                 : 121
LESS                 : 82
MULTIPLICATION       : 8 143
NOTEQUAL             : 83
OPENBRACES           : 7 47 92
OPENBRACKET          : 15 16 16 37 39 40 62 62 63
OPENPAREN            : 49 60 61 68 91 97 102 104 105 139
PRINT                : 60
PROGRAM              : 3
READ                 : 61
RECTANGLE            : 114
RETURN               : 78
RIGHT                : 122
SEMICOLON            : 1 13 14 26 28 60 61 78 109 110 115 116 117 125 126 127
SETXY                : 132
SHOW_STAR            : 129
SIZE_STAR            : 131
SQUARE               : 112
STRING               : 59
SUBSTRACTION         : 138
TRIANGLE             : 113
TWODOTS              : 98
VOID                 : 45
WHILE                : 103
error                : 

Nonterminals, with rules where they appear

assignment           : 20
assignment3          : 28
body                 : 85 86 87 96 101
body1                : 92 94
closeP               : 146
close_condition      : 91
condition            : 21
condition1           : 85 86
cte_float            : 32
cte_int              : 31
cte_string           : 33
declara_vars         : 1 6 11 46
dimensionada         : 13 14
dosExp               : 113 114 124 132
else                 : 87
elseif               : 86
empty                : 5 10 12 17 43 51 53 55 64 71 73 88 95
equals               : 13 28
exp                  : 13 29 41 42 62 62 63 74 80 98 104 104 105 133 133 134 136
exp_o                : 136
expression           : 60 91 102 146
factor               : 141 142
for                  : 19
for1                 : 96
for2                 : 97
for3                 : 98
forInit              : 97
funCall              : 26 35
funCall2             : 67
funCall3             : 70 72
funCallParam         : 70 72
funParam             : 50 54
function             : 4
function2            : 46
function3            : 49
function4            : 46 52
function5            : 50 54
functionI            : 46
graphfig             : 106
graphfig1            : 109
graphfig2            : 110
graphmove            : 108
graphmove0           : 115
graphmove1           : 116
graphmove2           : 117
graphstmt            : 25
graphview            : 107
graphview0           : 125
graphview1           : 126
graphview2           : 127
head_cond            : 85 86
id                   : 28 34 61
iniciaFunCall        : 67
inicia_fun           : 46
loop                 : 23
loper                : 133
openP                : 146
print                : 22
program              : 0
program_fun          : 2 4
program_modules      : 1
programp             : 1
read                 : 24 30
read1                : 61
return               : 27
return1              : 78
star                 : 2
star1                : 6 9
starI                : 6
star_sign            : 7
stmt                 : 9 52 94
term                 : 135 136 141
term_o               : 141
terminaFunCall       : 67
termina_fun          : 46
type                 : 13 14 44 56
unaExp               : 111 112 120 121 122 123 130 131
vars                 : 11
vcte                 : 79 145
vectormatriz         : 36 66
vm1                  : 37 38 39
vm2                  : 39 40 41
while                : 18
while1               : 101
while_w              : 102

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . programp ID SEMICOLON declara_vars program_modules
    (3) programp -> . PROGRAM

    PROGRAM         shift and go to state 3

    program                        shift and go to state 1
    programp                       shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> programp . ID SEMICOLON declara_vars program_modules

    ID              shift and go to state 4


state 3

    (3) programp -> PROGRAM .

    ID              reduce using rule 3 (programp -> PROGRAM .)


state 4

    (1) program -> programp ID . SEMICOLON declara_vars program_modules

    SEMICOLON       shift and go to state 5


state 5

    (1) program -> programp ID SEMICOLON . declara_vars program_modules
    (11) declara_vars -> . vars declara_vars
    (12) declara_vars -> . empty
    (13) vars -> . type ID dimensionada equals exp SEMICOLON
    (14) vars -> . type ID dimensionada SEMICOLON
    (147) empty -> .
    (57) type -> . INT
    (58) type -> . FLOAT
    (59) type -> . STRING

    FUN             reduce using rule 147 (empty -> .)
    MULTIPLICATION  reduce using rule 147 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    STRING          shift and go to state 12

    declara_vars                   shift and go to state 6
    vars                           shift and go to state 7
    empty                          shift and go to state 8
    type                           shift and go to state 9

state 6

    (1) program -> programp ID SEMICOLON declara_vars . program_modules
    (2) program_modules -> . program_fun star
    (4) program_fun -> . function program_fun
    (5) program_fun -> . empty
    (46) function -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (147) empty -> .

    FUN             shift and go to state 17
    MULTIPLICATION  reduce using rule 147 (empty -> .)

    program_modules                shift and go to state 13
    program_fun                    shift and go to state 14
    function                       shift and go to state 15
    empty                          shift and go to state 16

state 7

    (11) declara_vars -> vars . declara_vars
    (11) declara_vars -> . vars declara_vars
    (12) declara_vars -> . empty
    (13) vars -> . type ID dimensionada equals exp SEMICOLON
    (14) vars -> . type ID dimensionada SEMICOLON
    (147) empty -> .
    (57) type -> . INT
    (58) type -> . FLOAT
    (59) type -> . STRING

    FUN             reduce using rule 147 (empty -> .)
    MULTIPLICATION  reduce using rule 147 (empty -> .)
    IF              reduce using rule 147 (empty -> .)
    PRINT           reduce using rule 147 (empty -> .)
    READ            reduce using rule 147 (empty -> .)
    ID              reduce using rule 147 (empty -> .)
    RETURN          reduce using rule 147 (empty -> .)
    CIRCLE          reduce using rule 147 (empty -> .)
    SQUARE          reduce using rule 147 (empty -> .)
    TRIANGLE        reduce using rule 147 (empty -> .)
    RECTANGLE       reduce using rule 147 (empty -> .)
    HIDE_STAR       reduce using rule 147 (empty -> .)
    SHOW_STAR       reduce using rule 147 (empty -> .)
    COLOR_STAR      reduce using rule 147 (empty -> .)
    SIZE_STAR       reduce using rule 147 (empty -> .)
    SETXY           reduce using rule 147 (empty -> .)
    HAND_DOWN       reduce using rule 147 (empty -> .)
    HAND_UP         reduce using rule 147 (empty -> .)
    GO              reduce using rule 147 (empty -> .)
    LEFT            reduce using rule 147 (empty -> .)
    RIGHT           reduce using rule 147 (empty -> .)
    BACK            reduce using rule 147 (empty -> .)
    ARC             reduce using rule 147 (empty -> .)
    WHILE           reduce using rule 147 (empty -> .)
    FOR             reduce using rule 147 (empty -> .)
    CLOSEBRACES     reduce using rule 147 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    STRING          shift and go to state 12

    vars                           shift and go to state 7
    declara_vars                   shift and go to state 18
    empty                          shift and go to state 8
    type                           shift and go to state 9

state 8

    (12) declara_vars -> empty .

    FUN             reduce using rule 12 (declara_vars -> empty .)
    MULTIPLICATION  reduce using rule 12 (declara_vars -> empty .)
    IF              reduce using rule 12 (declara_vars -> empty .)
    PRINT           reduce using rule 12 (declara_vars -> empty .)
    READ            reduce using rule 12 (declara_vars -> empty .)
    ID              reduce using rule 12 (declara_vars -> empty .)
    RETURN          reduce using rule 12 (declara_vars -> empty .)
    CIRCLE          reduce using rule 12 (declara_vars -> empty .)
    SQUARE          reduce using rule 12 (declara_vars -> empty .)
    TRIANGLE        reduce using rule 12 (declara_vars -> empty .)
    RECTANGLE       reduce using rule 12 (declara_vars -> empty .)
    HIDE_STAR       reduce using rule 12 (declara_vars -> empty .)
    SHOW_STAR       reduce using rule 12 (declara_vars -> empty .)
    COLOR_STAR      reduce using rule 12 (declara_vars -> empty .)
    SIZE_STAR       reduce using rule 12 (declara_vars -> empty .)
    SETXY           reduce using rule 12 (declara_vars -> empty .)
    HAND_DOWN       reduce using rule 12 (declara_vars -> empty .)
    HAND_UP         reduce using rule 12 (declara_vars -> empty .)
    GO              reduce using rule 12 (declara_vars -> empty .)
    LEFT            reduce using rule 12 (declara_vars -> empty .)
    RIGHT           reduce using rule 12 (declara_vars -> empty .)
    BACK            reduce using rule 12 (declara_vars -> empty .)
    ARC             reduce using rule 12 (declara_vars -> empty .)
    WHILE           reduce using rule 12 (declara_vars -> empty .)
    FOR             reduce using rule 12 (declara_vars -> empty .)
    CLOSEBRACES     reduce using rule 12 (declara_vars -> empty .)


state 9

    (13) vars -> type . ID dimensionada equals exp SEMICOLON
    (14) vars -> type . ID dimensionada SEMICOLON

    ID              shift and go to state 19


state 10

    (57) type -> INT .

    ID              reduce using rule 57 (type -> INT .)


state 11

    (58) type -> FLOAT .

    ID              reduce using rule 58 (type -> FLOAT .)


state 12

    (59) type -> STRING .

    ID              reduce using rule 59 (type -> STRING .)


state 13

    (1) program -> programp ID SEMICOLON declara_vars program_modules .

    $end            reduce using rule 1 (program -> programp ID SEMICOLON declara_vars program_modules .)


state 14

    (2) program_modules -> program_fun . star
    (6) star -> . starI declara_vars star1 CLOSEBRACES
    (7) starI -> . star_sign OPENBRACES
    (8) star_sign -> . MULTIPLICATION

    MULTIPLICATION  shift and go to state 23

    star                           shift and go to state 20
    starI                          shift and go to state 21
    star_sign                      shift and go to state 22

state 15

    (4) program_fun -> function . program_fun
    (4) program_fun -> . function program_fun
    (5) program_fun -> . empty
    (46) function -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (147) empty -> .

    FUN             shift and go to state 17
    MULTIPLICATION  reduce using rule 147 (empty -> .)

    function                       shift and go to state 15
    program_fun                    shift and go to state 24
    empty                          shift and go to state 16

state 16

    (5) program_fun -> empty .

    MULTIPLICATION  reduce using rule 5 (program_fun -> empty .)


state 17

    (46) function -> FUN . functionI function2 inicia_fun declara_vars function4 termina_fun
    (44) functionI -> . type ID
    (45) functionI -> . VOID ID
    (57) type -> . INT
    (58) type -> . FLOAT
    (59) type -> . STRING

    VOID            shift and go to state 27
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    STRING          shift and go to state 12

    functionI                      shift and go to state 25
    type                           shift and go to state 26

state 18

    (11) declara_vars -> vars declara_vars .

    FUN             reduce using rule 11 (declara_vars -> vars declara_vars .)
    MULTIPLICATION  reduce using rule 11 (declara_vars -> vars declara_vars .)
    IF              reduce using rule 11 (declara_vars -> vars declara_vars .)
    PRINT           reduce using rule 11 (declara_vars -> vars declara_vars .)
    READ            reduce using rule 11 (declara_vars -> vars declara_vars .)
    ID              reduce using rule 11 (declara_vars -> vars declara_vars .)
    RETURN          reduce using rule 11 (declara_vars -> vars declara_vars .)
    CIRCLE          reduce using rule 11 (declara_vars -> vars declara_vars .)
    SQUARE          reduce using rule 11 (declara_vars -> vars declara_vars .)
    TRIANGLE        reduce using rule 11 (declara_vars -> vars declara_vars .)
    RECTANGLE       reduce using rule 11 (declara_vars -> vars declara_vars .)
    HIDE_STAR       reduce using rule 11 (declara_vars -> vars declara_vars .)
    SHOW_STAR       reduce using rule 11 (declara_vars -> vars declara_vars .)
    COLOR_STAR      reduce using rule 11 (declara_vars -> vars declara_vars .)
    SIZE_STAR       reduce using rule 11 (declara_vars -> vars declara_vars .)
    SETXY           reduce using rule 11 (declara_vars -> vars declara_vars .)
    HAND_DOWN       reduce using rule 11 (declara_vars -> vars declara_vars .)
    HAND_UP         reduce using rule 11 (declara_vars -> vars declara_vars .)
    GO              reduce using rule 11 (declara_vars -> vars declara_vars .)
    LEFT            reduce using rule 11 (declara_vars -> vars declara_vars .)
    RIGHT           reduce using rule 11 (declara_vars -> vars declara_vars .)
    BACK            reduce using rule 11 (declara_vars -> vars declara_vars .)
    ARC             reduce using rule 11 (declara_vars -> vars declara_vars .)
    WHILE           reduce using rule 11 (declara_vars -> vars declara_vars .)
    FOR             reduce using rule 11 (declara_vars -> vars declara_vars .)
    CLOSEBRACES     reduce using rule 11 (declara_vars -> vars declara_vars .)


state 19

    (13) vars -> type ID . dimensionada equals exp SEMICOLON
    (14) vars -> type ID . dimensionada SEMICOLON
    (15) dimensionada -> . OPENBRACKET CTEINT CLOSEBRACKET
    (16) dimensionada -> . OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET
    (17) dimensionada -> . empty
    (147) empty -> .

    OPENBRACKET     shift and go to state 29
    SEMICOLON       reduce using rule 147 (empty -> .)
    EQUALS          reduce using rule 147 (empty -> .)

    dimensionada                   shift and go to state 28
    empty                          shift and go to state 30

state 20

    (2) program_modules -> program_fun star .

    $end            reduce using rule 2 (program_modules -> program_fun star .)


state 21

    (6) star -> starI . declara_vars star1 CLOSEBRACES
    (11) declara_vars -> . vars declara_vars
    (12) declara_vars -> . empty
    (13) vars -> . type ID dimensionada equals exp SEMICOLON
    (14) vars -> . type ID dimensionada SEMICOLON
    (147) empty -> .
    (57) type -> . INT
    (58) type -> . FLOAT
    (59) type -> . STRING

    IF              reduce using rule 147 (empty -> .)
    PRINT           reduce using rule 147 (empty -> .)
    READ            reduce using rule 147 (empty -> .)
    ID              reduce using rule 147 (empty -> .)
    RETURN          reduce using rule 147 (empty -> .)
    CIRCLE          reduce using rule 147 (empty -> .)
    SQUARE          reduce using rule 147 (empty -> .)
    TRIANGLE        reduce using rule 147 (empty -> .)
    RECTANGLE       reduce using rule 147 (empty -> .)
    HIDE_STAR       reduce using rule 147 (empty -> .)
    SHOW_STAR       reduce using rule 147 (empty -> .)
    COLOR_STAR      reduce using rule 147 (empty -> .)
    SIZE_STAR       reduce using rule 147 (empty -> .)
    SETXY           reduce using rule 147 (empty -> .)
    HAND_DOWN       reduce using rule 147 (empty -> .)
    HAND_UP         reduce using rule 147 (empty -> .)
    GO              reduce using rule 147 (empty -> .)
    LEFT            reduce using rule 147 (empty -> .)
    RIGHT           reduce using rule 147 (empty -> .)
    BACK            reduce using rule 147 (empty -> .)
    ARC             reduce using rule 147 (empty -> .)
    WHILE           reduce using rule 147 (empty -> .)
    FOR             reduce using rule 147 (empty -> .)
    CLOSEBRACES     reduce using rule 147 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    STRING          shift and go to state 12

    declara_vars                   shift and go to state 31
    vars                           shift and go to state 7
    empty                          shift and go to state 8
    type                           shift and go to state 9

state 22

    (7) starI -> star_sign . OPENBRACES

    OPENBRACES      shift and go to state 32


state 23

    (8) star_sign -> MULTIPLICATION .

    OPENBRACES      reduce using rule 8 (star_sign -> MULTIPLICATION .)


state 24

    (4) program_fun -> function program_fun .

    MULTIPLICATION  reduce using rule 4 (program_fun -> function program_fun .)


state 25

    (46) function -> FUN functionI . function2 inicia_fun declara_vars function4 termina_fun
    (49) function2 -> . OPENPAREN function3 CLOSEPAREN

    OPENPAREN       shift and go to state 34

    function2                      shift and go to state 33

state 26

    (44) functionI -> type . ID

    ID              shift and go to state 35


state 27

    (45) functionI -> VOID . ID

    ID              shift and go to state 36


state 28

    (13) vars -> type ID dimensionada . equals exp SEMICOLON
    (14) vars -> type ID dimensionada . SEMICOLON
    (65) equals -> . EQUALS

    SEMICOLON       shift and go to state 38
    EQUALS          shift and go to state 39

    equals                         shift and go to state 37

state 29

    (15) dimensionada -> OPENBRACKET . CTEINT CLOSEBRACKET
    (16) dimensionada -> OPENBRACKET . CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET

    CTEINT          shift and go to state 40


state 30

    (17) dimensionada -> empty .

    SEMICOLON       reduce using rule 17 (dimensionada -> empty .)
    EQUALS          reduce using rule 17 (dimensionada -> empty .)


state 31

    (6) star -> starI declara_vars . star1 CLOSEBRACES
    (9) star1 -> . stmt star1
    (10) star1 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . funCall SEMICOLON
    (27) stmt -> . return
    (147) empty -> .
    (28) assignment -> . id equals assignment3 SEMICOLON
    (85) condition -> . IF head_cond body condition1
    (60) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for
    (61) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (106) graphstmt -> . graphfig
    (107) graphstmt -> . graphview
    (108) graphstmt -> . graphmove
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (78) return -> . RETURN return1 SEMICOLON
    (66) id -> . ID vectormatriz
    (101) while -> . while1 body
    (96) for -> . for1 body
    (109) graphfig -> . graphfig1 SEMICOLON
    (110) graphfig -> . graphfig2 SEMICOLON
    (125) graphview -> . graphview0 SEMICOLON
    (126) graphview -> . graphview1 SEMICOLON
    (127) graphview -> . graphview2 SEMICOLON
    (115) graphmove -> . graphmove0 SEMICOLON
    (116) graphmove -> . graphmove1 SEMICOLON
    (117) graphmove -> . graphmove2 SEMICOLON
    (102) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (97) for1 -> . forInit OPENPAREN ID for2
    (111) graphfig1 -> . CIRCLE unaExp
    (112) graphfig1 -> . SQUARE unaExp
    (113) graphfig2 -> . TRIANGLE dosExp
    (114) graphfig2 -> . RECTANGLE dosExp
    (128) graphview0 -> . HIDE_STAR
    (129) graphview0 -> . SHOW_STAR
    (130) graphview1 -> . COLOR_STAR unaExp
    (131) graphview1 -> . SIZE_STAR unaExp
    (132) graphview2 -> . SETXY dosExp
    (118) graphmove0 -> . HAND_DOWN
    (119) graphmove0 -> . HAND_UP
    (120) graphmove1 -> . GO unaExp
    (121) graphmove1 -> . LEFT unaExp
    (122) graphmove1 -> . RIGHT unaExp
    (123) graphmove1 -> . BACK unaExp
    (124) graphmove2 -> . ARC dosExp
    (103) while_w -> . WHILE
    (100) forInit -> . FOR

    CLOSEBRACES     reduce using rule 147 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    ID              shift and go to state 61
    RETURN          shift and go to state 62
    CIRCLE          shift and go to state 75
    SQUARE          shift and go to state 76
    TRIANGLE        shift and go to state 77
    RECTANGLE       shift and go to state 78
    HIDE_STAR       shift and go to state 79
    SHOW_STAR       shift and go to state 80
    COLOR_STAR      shift and go to state 81
    SIZE_STAR       shift and go to state 82
    SETXY           shift and go to state 83
    HAND_DOWN       shift and go to state 84
    HAND_UP         shift and go to state 85
    GO              shift and go to state 86
    LEFT            shift and go to state 87
    RIGHT           shift and go to state 88
    BACK            shift and go to state 89
    ARC             shift and go to state 90
    WHILE           shift and go to state 91
    FOR             shift and go to state 92

    star1                          shift and go to state 41
    stmt                           shift and go to state 42
    empty                          shift and go to state 43
    assignment                     shift and go to state 44
    condition                      shift and go to state 45
    print                          shift and go to state 46
    loop                           shift and go to state 47
    read                           shift and go to state 48
    graphstmt                      shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    while1                         shift and go to state 63
    for1                           shift and go to state 64
    graphfig1                      shift and go to state 65
    graphfig2                      shift and go to state 66
    graphview0                     shift and go to state 67
    graphview1                     shift and go to state 68
    graphview2                     shift and go to state 69
    graphmove0                     shift and go to state 70
    graphmove1                     shift and go to state 71
    graphmove2                     shift and go to state 72
    while_w                        shift and go to state 73
    forInit                        shift and go to state 74

state 32

    (7) starI -> star_sign OPENBRACES .

    INT             reduce using rule 7 (starI -> star_sign OPENBRACES .)
    FLOAT           reduce using rule 7 (starI -> star_sign OPENBRACES .)
    STRING          reduce using rule 7 (starI -> star_sign OPENBRACES .)
    IF              reduce using rule 7 (starI -> star_sign OPENBRACES .)
    PRINT           reduce using rule 7 (starI -> star_sign OPENBRACES .)
    READ            reduce using rule 7 (starI -> star_sign OPENBRACES .)
    ID              reduce using rule 7 (starI -> star_sign OPENBRACES .)
    RETURN          reduce using rule 7 (starI -> star_sign OPENBRACES .)
    CIRCLE          reduce using rule 7 (starI -> star_sign OPENBRACES .)
    SQUARE          reduce using rule 7 (starI -> star_sign OPENBRACES .)
    TRIANGLE        reduce using rule 7 (starI -> star_sign OPENBRACES .)
    RECTANGLE       reduce using rule 7 (starI -> star_sign OPENBRACES .)
    HIDE_STAR       reduce using rule 7 (starI -> star_sign OPENBRACES .)
    SHOW_STAR       reduce using rule 7 (starI -> star_sign OPENBRACES .)
    COLOR_STAR      reduce using rule 7 (starI -> star_sign OPENBRACES .)
    SIZE_STAR       reduce using rule 7 (starI -> star_sign OPENBRACES .)
    SETXY           reduce using rule 7 (starI -> star_sign OPENBRACES .)
    HAND_DOWN       reduce using rule 7 (starI -> star_sign OPENBRACES .)
    HAND_UP         reduce using rule 7 (starI -> star_sign OPENBRACES .)
    GO              reduce using rule 7 (starI -> star_sign OPENBRACES .)
    LEFT            reduce using rule 7 (starI -> star_sign OPENBRACES .)
    RIGHT           reduce using rule 7 (starI -> star_sign OPENBRACES .)
    BACK            reduce using rule 7 (starI -> star_sign OPENBRACES .)
    ARC             reduce using rule 7 (starI -> star_sign OPENBRACES .)
    WHILE           reduce using rule 7 (starI -> star_sign OPENBRACES .)
    FOR             reduce using rule 7 (starI -> star_sign OPENBRACES .)
    CLOSEBRACES     reduce using rule 7 (starI -> star_sign OPENBRACES .)


state 33

    (46) function -> FUN functionI function2 . inicia_fun declara_vars function4 termina_fun
    (47) inicia_fun -> . OPENBRACES

    OPENBRACES      shift and go to state 94

    inicia_fun                     shift and go to state 93

state 34

    (49) function2 -> OPENPAREN . function3 CLOSEPAREN
    (50) function3 -> . funParam function5
    (51) function3 -> . empty
    (56) funParam -> . type ID
    (147) empty -> .
    (57) type -> . INT
    (58) type -> . FLOAT
    (59) type -> . STRING

    CLOSEPAREN      reduce using rule 147 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    STRING          shift and go to state 12

    function3                      shift and go to state 95
    funParam                       shift and go to state 96
    empty                          shift and go to state 97
    type                           shift and go to state 98

state 35

    (44) functionI -> type ID .

    OPENPAREN       reduce using rule 44 (functionI -> type ID .)


state 36

    (45) functionI -> VOID ID .

    OPENPAREN       reduce using rule 45 (functionI -> VOID ID .)


state 37

    (13) vars -> type ID dimensionada equals . exp SEMICOLON
    (135) exp -> . term
    (136) exp -> . term exp_o exp
    (141) term -> . factor term_o term
    (142) term -> . factor
    (145) factor -> . vcte
    (146) factor -> . openP expression closeP
    (31) vcte -> . cte_int
    (32) vcte -> . cte_float
    (33) vcte -> . cte_string
    (34) vcte -> . id
    (35) vcte -> . funCall
    (36) vcte -> . vectormatriz
    (139) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (66) id -> . ID vectormatriz
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 111
    CTEINT          shift and go to state 112
    CTEFLOAT        shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 99
    OPENBRACKET     shift and go to state 115

    exp                            shift and go to state 100
    term                           shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openP                          shift and go to state 104
    cte_int                        shift and go to state 105
    cte_float                      shift and go to state 106
    cte_string                     shift and go to state 107
    id                             shift and go to state 108
    funCall                        shift and go to state 109
    vectormatriz                   shift and go to state 110
    vm1                            shift and go to state 116

state 38

    (14) vars -> type ID dimensionada SEMICOLON .

    INT             reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    FLOAT           reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    STRING          reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    FUN             reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    MULTIPLICATION  reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    IF              reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    PRINT           reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    READ            reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    ID              reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    RETURN          reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    CIRCLE          reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    SQUARE          reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    TRIANGLE        reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    RECTANGLE       reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    HIDE_STAR       reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    SHOW_STAR       reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    COLOR_STAR      reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    SIZE_STAR       reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    SETXY           reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    HAND_DOWN       reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    HAND_UP         reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    GO              reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    LEFT            reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    RIGHT           reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    BACK            reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    ARC             reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    WHILE           reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    FOR             reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    CLOSEBRACES     reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)


state 39

    (65) equals -> EQUALS .

    OPENPAREN       reduce using rule 65 (equals -> EQUALS .)
    CTEINT          reduce using rule 65 (equals -> EQUALS .)
    CTEFLOAT        reduce using rule 65 (equals -> EQUALS .)
    CTESTRING       reduce using rule 65 (equals -> EQUALS .)
    ID              reduce using rule 65 (equals -> EQUALS .)
    OPENBRACKET     reduce using rule 65 (equals -> EQUALS .)
    READ            reduce using rule 65 (equals -> EQUALS .)


state 40

    (15) dimensionada -> OPENBRACKET CTEINT . CLOSEBRACKET
    (16) dimensionada -> OPENBRACKET CTEINT . CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 117


state 41

    (6) star -> starI declara_vars star1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 118


state 42

    (9) star1 -> stmt . star1
    (9) star1 -> . stmt star1
    (10) star1 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . funCall SEMICOLON
    (27) stmt -> . return
    (147) empty -> .
    (28) assignment -> . id equals assignment3 SEMICOLON
    (85) condition -> . IF head_cond body condition1
    (60) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for
    (61) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (106) graphstmt -> . graphfig
    (107) graphstmt -> . graphview
    (108) graphstmt -> . graphmove
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (78) return -> . RETURN return1 SEMICOLON
    (66) id -> . ID vectormatriz
    (101) while -> . while1 body
    (96) for -> . for1 body
    (109) graphfig -> . graphfig1 SEMICOLON
    (110) graphfig -> . graphfig2 SEMICOLON
    (125) graphview -> . graphview0 SEMICOLON
    (126) graphview -> . graphview1 SEMICOLON
    (127) graphview -> . graphview2 SEMICOLON
    (115) graphmove -> . graphmove0 SEMICOLON
    (116) graphmove -> . graphmove1 SEMICOLON
    (117) graphmove -> . graphmove2 SEMICOLON
    (102) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (97) for1 -> . forInit OPENPAREN ID for2
    (111) graphfig1 -> . CIRCLE unaExp
    (112) graphfig1 -> . SQUARE unaExp
    (113) graphfig2 -> . TRIANGLE dosExp
    (114) graphfig2 -> . RECTANGLE dosExp
    (128) graphview0 -> . HIDE_STAR
    (129) graphview0 -> . SHOW_STAR
    (130) graphview1 -> . COLOR_STAR unaExp
    (131) graphview1 -> . SIZE_STAR unaExp
    (132) graphview2 -> . SETXY dosExp
    (118) graphmove0 -> . HAND_DOWN
    (119) graphmove0 -> . HAND_UP
    (120) graphmove1 -> . GO unaExp
    (121) graphmove1 -> . LEFT unaExp
    (122) graphmove1 -> . RIGHT unaExp
    (123) graphmove1 -> . BACK unaExp
    (124) graphmove2 -> . ARC dosExp
    (103) while_w -> . WHILE
    (100) forInit -> . FOR

    CLOSEBRACES     reduce using rule 147 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    ID              shift and go to state 61
    RETURN          shift and go to state 62
    CIRCLE          shift and go to state 75
    SQUARE          shift and go to state 76
    TRIANGLE        shift and go to state 77
    RECTANGLE       shift and go to state 78
    HIDE_STAR       shift and go to state 79
    SHOW_STAR       shift and go to state 80
    COLOR_STAR      shift and go to state 81
    SIZE_STAR       shift and go to state 82
    SETXY           shift and go to state 83
    HAND_DOWN       shift and go to state 84
    HAND_UP         shift and go to state 85
    GO              shift and go to state 86
    LEFT            shift and go to state 87
    RIGHT           shift and go to state 88
    BACK            shift and go to state 89
    ARC             shift and go to state 90
    WHILE           shift and go to state 91
    FOR             shift and go to state 92

    stmt                           shift and go to state 42
    star1                          shift and go to state 119
    empty                          shift and go to state 43
    assignment                     shift and go to state 44
    condition                      shift and go to state 45
    print                          shift and go to state 46
    loop                           shift and go to state 47
    read                           shift and go to state 48
    graphstmt                      shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    while1                         shift and go to state 63
    for1                           shift and go to state 64
    graphfig1                      shift and go to state 65
    graphfig2                      shift and go to state 66
    graphview0                     shift and go to state 67
    graphview1                     shift and go to state 68
    graphview2                     shift and go to state 69
    graphmove0                     shift and go to state 70
    graphmove1                     shift and go to state 71
    graphmove2                     shift and go to state 72
    while_w                        shift and go to state 73
    forInit                        shift and go to state 74

state 43

    (10) star1 -> empty .

    CLOSEBRACES     reduce using rule 10 (star1 -> empty .)


state 44

    (20) stmt -> assignment .

    IF              reduce using rule 20 (stmt -> assignment .)
    PRINT           reduce using rule 20 (stmt -> assignment .)
    READ            reduce using rule 20 (stmt -> assignment .)
    ID              reduce using rule 20 (stmt -> assignment .)
    RETURN          reduce using rule 20 (stmt -> assignment .)
    CIRCLE          reduce using rule 20 (stmt -> assignment .)
    SQUARE          reduce using rule 20 (stmt -> assignment .)
    TRIANGLE        reduce using rule 20 (stmt -> assignment .)
    RECTANGLE       reduce using rule 20 (stmt -> assignment .)
    HIDE_STAR       reduce using rule 20 (stmt -> assignment .)
    SHOW_STAR       reduce using rule 20 (stmt -> assignment .)
    COLOR_STAR      reduce using rule 20 (stmt -> assignment .)
    SIZE_STAR       reduce using rule 20 (stmt -> assignment .)
    SETXY           reduce using rule 20 (stmt -> assignment .)
    HAND_DOWN       reduce using rule 20 (stmt -> assignment .)
    HAND_UP         reduce using rule 20 (stmt -> assignment .)
    GO              reduce using rule 20 (stmt -> assignment .)
    LEFT            reduce using rule 20 (stmt -> assignment .)
    RIGHT           reduce using rule 20 (stmt -> assignment .)
    BACK            reduce using rule 20 (stmt -> assignment .)
    ARC             reduce using rule 20 (stmt -> assignment .)
    WHILE           reduce using rule 20 (stmt -> assignment .)
    FOR             reduce using rule 20 (stmt -> assignment .)
    CLOSEBRACES     reduce using rule 20 (stmt -> assignment .)


state 45

    (21) stmt -> condition .

    IF              reduce using rule 21 (stmt -> condition .)
    PRINT           reduce using rule 21 (stmt -> condition .)
    READ            reduce using rule 21 (stmt -> condition .)
    ID              reduce using rule 21 (stmt -> condition .)
    RETURN          reduce using rule 21 (stmt -> condition .)
    CIRCLE          reduce using rule 21 (stmt -> condition .)
    SQUARE          reduce using rule 21 (stmt -> condition .)
    TRIANGLE        reduce using rule 21 (stmt -> condition .)
    RECTANGLE       reduce using rule 21 (stmt -> condition .)
    HIDE_STAR       reduce using rule 21 (stmt -> condition .)
    SHOW_STAR       reduce using rule 21 (stmt -> condition .)
    COLOR_STAR      reduce using rule 21 (stmt -> condition .)
    SIZE_STAR       reduce using rule 21 (stmt -> condition .)
    SETXY           reduce using rule 21 (stmt -> condition .)
    HAND_DOWN       reduce using rule 21 (stmt -> condition .)
    HAND_UP         reduce using rule 21 (stmt -> condition .)
    GO              reduce using rule 21 (stmt -> condition .)
    LEFT            reduce using rule 21 (stmt -> condition .)
    RIGHT           reduce using rule 21 (stmt -> condition .)
    BACK            reduce using rule 21 (stmt -> condition .)
    ARC             reduce using rule 21 (stmt -> condition .)
    WHILE           reduce using rule 21 (stmt -> condition .)
    FOR             reduce using rule 21 (stmt -> condition .)
    CLOSEBRACES     reduce using rule 21 (stmt -> condition .)


state 46

    (22) stmt -> print .

    IF              reduce using rule 22 (stmt -> print .)
    PRINT           reduce using rule 22 (stmt -> print .)
    READ            reduce using rule 22 (stmt -> print .)
    ID              reduce using rule 22 (stmt -> print .)
    RETURN          reduce using rule 22 (stmt -> print .)
    CIRCLE          reduce using rule 22 (stmt -> print .)
    SQUARE          reduce using rule 22 (stmt -> print .)
    TRIANGLE        reduce using rule 22 (stmt -> print .)
    RECTANGLE       reduce using rule 22 (stmt -> print .)
    HIDE_STAR       reduce using rule 22 (stmt -> print .)
    SHOW_STAR       reduce using rule 22 (stmt -> print .)
    COLOR_STAR      reduce using rule 22 (stmt -> print .)
    SIZE_STAR       reduce using rule 22 (stmt -> print .)
    SETXY           reduce using rule 22 (stmt -> print .)
    HAND_DOWN       reduce using rule 22 (stmt -> print .)
    HAND_UP         reduce using rule 22 (stmt -> print .)
    GO              reduce using rule 22 (stmt -> print .)
    LEFT            reduce using rule 22 (stmt -> print .)
    RIGHT           reduce using rule 22 (stmt -> print .)
    BACK            reduce using rule 22 (stmt -> print .)
    ARC             reduce using rule 22 (stmt -> print .)
    WHILE           reduce using rule 22 (stmt -> print .)
    FOR             reduce using rule 22 (stmt -> print .)
    CLOSEBRACES     reduce using rule 22 (stmt -> print .)


state 47

    (23) stmt -> loop .

    IF              reduce using rule 23 (stmt -> loop .)
    PRINT           reduce using rule 23 (stmt -> loop .)
    READ            reduce using rule 23 (stmt -> loop .)
    ID              reduce using rule 23 (stmt -> loop .)
    RETURN          reduce using rule 23 (stmt -> loop .)
    CIRCLE          reduce using rule 23 (stmt -> loop .)
    SQUARE          reduce using rule 23 (stmt -> loop .)
    TRIANGLE        reduce using rule 23 (stmt -> loop .)
    RECTANGLE       reduce using rule 23 (stmt -> loop .)
    HIDE_STAR       reduce using rule 23 (stmt -> loop .)
    SHOW_STAR       reduce using rule 23 (stmt -> loop .)
    COLOR_STAR      reduce using rule 23 (stmt -> loop .)
    SIZE_STAR       reduce using rule 23 (stmt -> loop .)
    SETXY           reduce using rule 23 (stmt -> loop .)
    HAND_DOWN       reduce using rule 23 (stmt -> loop .)
    HAND_UP         reduce using rule 23 (stmt -> loop .)
    GO              reduce using rule 23 (stmt -> loop .)
    LEFT            reduce using rule 23 (stmt -> loop .)
    RIGHT           reduce using rule 23 (stmt -> loop .)
    BACK            reduce using rule 23 (stmt -> loop .)
    ARC             reduce using rule 23 (stmt -> loop .)
    WHILE           reduce using rule 23 (stmt -> loop .)
    FOR             reduce using rule 23 (stmt -> loop .)
    CLOSEBRACES     reduce using rule 23 (stmt -> loop .)


state 48

    (24) stmt -> read .

    IF              reduce using rule 24 (stmt -> read .)
    PRINT           reduce using rule 24 (stmt -> read .)
    READ            reduce using rule 24 (stmt -> read .)
    ID              reduce using rule 24 (stmt -> read .)
    RETURN          reduce using rule 24 (stmt -> read .)
    CIRCLE          reduce using rule 24 (stmt -> read .)
    SQUARE          reduce using rule 24 (stmt -> read .)
    TRIANGLE        reduce using rule 24 (stmt -> read .)
    RECTANGLE       reduce using rule 24 (stmt -> read .)
    HIDE_STAR       reduce using rule 24 (stmt -> read .)
    SHOW_STAR       reduce using rule 24 (stmt -> read .)
    COLOR_STAR      reduce using rule 24 (stmt -> read .)
    SIZE_STAR       reduce using rule 24 (stmt -> read .)
    SETXY           reduce using rule 24 (stmt -> read .)
    HAND_DOWN       reduce using rule 24 (stmt -> read .)
    HAND_UP         reduce using rule 24 (stmt -> read .)
    GO              reduce using rule 24 (stmt -> read .)
    LEFT            reduce using rule 24 (stmt -> read .)
    RIGHT           reduce using rule 24 (stmt -> read .)
    BACK            reduce using rule 24 (stmt -> read .)
    ARC             reduce using rule 24 (stmt -> read .)
    WHILE           reduce using rule 24 (stmt -> read .)
    FOR             reduce using rule 24 (stmt -> read .)
    CLOSEBRACES     reduce using rule 24 (stmt -> read .)


state 49

    (25) stmt -> graphstmt .

    IF              reduce using rule 25 (stmt -> graphstmt .)
    PRINT           reduce using rule 25 (stmt -> graphstmt .)
    READ            reduce using rule 25 (stmt -> graphstmt .)
    ID              reduce using rule 25 (stmt -> graphstmt .)
    RETURN          reduce using rule 25 (stmt -> graphstmt .)
    CIRCLE          reduce using rule 25 (stmt -> graphstmt .)
    SQUARE          reduce using rule 25 (stmt -> graphstmt .)
    TRIANGLE        reduce using rule 25 (stmt -> graphstmt .)
    RECTANGLE       reduce using rule 25 (stmt -> graphstmt .)
    HIDE_STAR       reduce using rule 25 (stmt -> graphstmt .)
    SHOW_STAR       reduce using rule 25 (stmt -> graphstmt .)
    COLOR_STAR      reduce using rule 25 (stmt -> graphstmt .)
    SIZE_STAR       reduce using rule 25 (stmt -> graphstmt .)
    SETXY           reduce using rule 25 (stmt -> graphstmt .)
    HAND_DOWN       reduce using rule 25 (stmt -> graphstmt .)
    HAND_UP         reduce using rule 25 (stmt -> graphstmt .)
    GO              reduce using rule 25 (stmt -> graphstmt .)
    LEFT            reduce using rule 25 (stmt -> graphstmt .)
    RIGHT           reduce using rule 25 (stmt -> graphstmt .)
    BACK            reduce using rule 25 (stmt -> graphstmt .)
    ARC             reduce using rule 25 (stmt -> graphstmt .)
    WHILE           reduce using rule 25 (stmt -> graphstmt .)
    FOR             reduce using rule 25 (stmt -> graphstmt .)
    CLOSEBRACES     reduce using rule 25 (stmt -> graphstmt .)


state 50

    (26) stmt -> funCall . SEMICOLON

    SEMICOLON       shift and go to state 120


state 51

    (27) stmt -> return .

    IF              reduce using rule 27 (stmt -> return .)
    PRINT           reduce using rule 27 (stmt -> return .)
    READ            reduce using rule 27 (stmt -> return .)
    ID              reduce using rule 27 (stmt -> return .)
    RETURN          reduce using rule 27 (stmt -> return .)
    CIRCLE          reduce using rule 27 (stmt -> return .)
    SQUARE          reduce using rule 27 (stmt -> return .)
    TRIANGLE        reduce using rule 27 (stmt -> return .)
    RECTANGLE       reduce using rule 27 (stmt -> return .)
    HIDE_STAR       reduce using rule 27 (stmt -> return .)
    SHOW_STAR       reduce using rule 27 (stmt -> return .)
    COLOR_STAR      reduce using rule 27 (stmt -> return .)
    SIZE_STAR       reduce using rule 27 (stmt -> return .)
    SETXY           reduce using rule 27 (stmt -> return .)
    HAND_DOWN       reduce using rule 27 (stmt -> return .)
    HAND_UP         reduce using rule 27 (stmt -> return .)
    GO              reduce using rule 27 (stmt -> return .)
    LEFT            reduce using rule 27 (stmt -> return .)
    RIGHT           reduce using rule 27 (stmt -> return .)
    BACK            reduce using rule 27 (stmt -> return .)
    ARC             reduce using rule 27 (stmt -> return .)
    WHILE           reduce using rule 27 (stmt -> return .)
    FOR             reduce using rule 27 (stmt -> return .)
    CLOSEBRACES     reduce using rule 27 (stmt -> return .)


state 52

    (28) assignment -> id . equals assignment3 SEMICOLON
    (65) equals -> . EQUALS

    EQUALS          shift and go to state 39

    equals                         shift and go to state 121

state 53

    (85) condition -> IF . head_cond body condition1
    (91) head_cond -> . OPENPAREN expression close_condition

    OPENPAREN       shift and go to state 123

    head_cond                      shift and go to state 122

state 54

    (60) print -> PRINT . OPENPAREN expression CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 124


state 55

    (18) loop -> while .

    IF              reduce using rule 18 (loop -> while .)
    PRINT           reduce using rule 18 (loop -> while .)
    READ            reduce using rule 18 (loop -> while .)
    ID              reduce using rule 18 (loop -> while .)
    RETURN          reduce using rule 18 (loop -> while .)
    CIRCLE          reduce using rule 18 (loop -> while .)
    SQUARE          reduce using rule 18 (loop -> while .)
    TRIANGLE        reduce using rule 18 (loop -> while .)
    RECTANGLE       reduce using rule 18 (loop -> while .)
    HIDE_STAR       reduce using rule 18 (loop -> while .)
    SHOW_STAR       reduce using rule 18 (loop -> while .)
    COLOR_STAR      reduce using rule 18 (loop -> while .)
    SIZE_STAR       reduce using rule 18 (loop -> while .)
    SETXY           reduce using rule 18 (loop -> while .)
    HAND_DOWN       reduce using rule 18 (loop -> while .)
    HAND_UP         reduce using rule 18 (loop -> while .)
    GO              reduce using rule 18 (loop -> while .)
    LEFT            reduce using rule 18 (loop -> while .)
    RIGHT           reduce using rule 18 (loop -> while .)
    BACK            reduce using rule 18 (loop -> while .)
    ARC             reduce using rule 18 (loop -> while .)
    WHILE           reduce using rule 18 (loop -> while .)
    FOR             reduce using rule 18 (loop -> while .)
    CLOSEBRACES     reduce using rule 18 (loop -> while .)


state 56

    (19) loop -> for .

    IF              reduce using rule 19 (loop -> for .)
    PRINT           reduce using rule 19 (loop -> for .)
    READ            reduce using rule 19 (loop -> for .)
    ID              reduce using rule 19 (loop -> for .)
    RETURN          reduce using rule 19 (loop -> for .)
    CIRCLE          reduce using rule 19 (loop -> for .)
    SQUARE          reduce using rule 19 (loop -> for .)
    TRIANGLE        reduce using rule 19 (loop -> for .)
    RECTANGLE       reduce using rule 19 (loop -> for .)
    HIDE_STAR       reduce using rule 19 (loop -> for .)
    SHOW_STAR       reduce using rule 19 (loop -> for .)
    COLOR_STAR      reduce using rule 19 (loop -> for .)
    SIZE_STAR       reduce using rule 19 (loop -> for .)
    SETXY           reduce using rule 19 (loop -> for .)
    HAND_DOWN       reduce using rule 19 (loop -> for .)
    HAND_UP         reduce using rule 19 (loop -> for .)
    GO              reduce using rule 19 (loop -> for .)
    LEFT            reduce using rule 19 (loop -> for .)
    RIGHT           reduce using rule 19 (loop -> for .)
    BACK            reduce using rule 19 (loop -> for .)
    ARC             reduce using rule 19 (loop -> for .)
    WHILE           reduce using rule 19 (loop -> for .)
    FOR             reduce using rule 19 (loop -> for .)
    CLOSEBRACES     reduce using rule 19 (loop -> for .)


state 57

    (61) read -> READ . OPENPAREN id read1 CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 125


state 58

    (106) graphstmt -> graphfig .

    IF              reduce using rule 106 (graphstmt -> graphfig .)
    PRINT           reduce using rule 106 (graphstmt -> graphfig .)
    READ            reduce using rule 106 (graphstmt -> graphfig .)
    ID              reduce using rule 106 (graphstmt -> graphfig .)
    RETURN          reduce using rule 106 (graphstmt -> graphfig .)
    CIRCLE          reduce using rule 106 (graphstmt -> graphfig .)
    SQUARE          reduce using rule 106 (graphstmt -> graphfig .)
    TRIANGLE        reduce using rule 106 (graphstmt -> graphfig .)
    RECTANGLE       reduce using rule 106 (graphstmt -> graphfig .)
    HIDE_STAR       reduce using rule 106 (graphstmt -> graphfig .)
    SHOW_STAR       reduce using rule 106 (graphstmt -> graphfig .)
    COLOR_STAR      reduce using rule 106 (graphstmt -> graphfig .)
    SIZE_STAR       reduce using rule 106 (graphstmt -> graphfig .)
    SETXY           reduce using rule 106 (graphstmt -> graphfig .)
    HAND_DOWN       reduce using rule 106 (graphstmt -> graphfig .)
    HAND_UP         reduce using rule 106 (graphstmt -> graphfig .)
    GO              reduce using rule 106 (graphstmt -> graphfig .)
    LEFT            reduce using rule 106 (graphstmt -> graphfig .)
    RIGHT           reduce using rule 106 (graphstmt -> graphfig .)
    BACK            reduce using rule 106 (graphstmt -> graphfig .)
    ARC             reduce using rule 106 (graphstmt -> graphfig .)
    WHILE           reduce using rule 106 (graphstmt -> graphfig .)
    FOR             reduce using rule 106 (graphstmt -> graphfig .)
    CLOSEBRACES     reduce using rule 106 (graphstmt -> graphfig .)


state 59

    (107) graphstmt -> graphview .

    IF              reduce using rule 107 (graphstmt -> graphview .)
    PRINT           reduce using rule 107 (graphstmt -> graphview .)
    READ            reduce using rule 107 (graphstmt -> graphview .)
    ID              reduce using rule 107 (graphstmt -> graphview .)
    RETURN          reduce using rule 107 (graphstmt -> graphview .)
    CIRCLE          reduce using rule 107 (graphstmt -> graphview .)
    SQUARE          reduce using rule 107 (graphstmt -> graphview .)
    TRIANGLE        reduce using rule 107 (graphstmt -> graphview .)
    RECTANGLE       reduce using rule 107 (graphstmt -> graphview .)
    HIDE_STAR       reduce using rule 107 (graphstmt -> graphview .)
    SHOW_STAR       reduce using rule 107 (graphstmt -> graphview .)
    COLOR_STAR      reduce using rule 107 (graphstmt -> graphview .)
    SIZE_STAR       reduce using rule 107 (graphstmt -> graphview .)
    SETXY           reduce using rule 107 (graphstmt -> graphview .)
    HAND_DOWN       reduce using rule 107 (graphstmt -> graphview .)
    HAND_UP         reduce using rule 107 (graphstmt -> graphview .)
    GO              reduce using rule 107 (graphstmt -> graphview .)
    LEFT            reduce using rule 107 (graphstmt -> graphview .)
    RIGHT           reduce using rule 107 (graphstmt -> graphview .)
    BACK            reduce using rule 107 (graphstmt -> graphview .)
    ARC             reduce using rule 107 (graphstmt -> graphview .)
    WHILE           reduce using rule 107 (graphstmt -> graphview .)
    FOR             reduce using rule 107 (graphstmt -> graphview .)
    CLOSEBRACES     reduce using rule 107 (graphstmt -> graphview .)


state 60

    (108) graphstmt -> graphmove .

    IF              reduce using rule 108 (graphstmt -> graphmove .)
    PRINT           reduce using rule 108 (graphstmt -> graphmove .)
    READ            reduce using rule 108 (graphstmt -> graphmove .)
    ID              reduce using rule 108 (graphstmt -> graphmove .)
    RETURN          reduce using rule 108 (graphstmt -> graphmove .)
    CIRCLE          reduce using rule 108 (graphstmt -> graphmove .)
    SQUARE          reduce using rule 108 (graphstmt -> graphmove .)
    TRIANGLE        reduce using rule 108 (graphstmt -> graphmove .)
    RECTANGLE       reduce using rule 108 (graphstmt -> graphmove .)
    HIDE_STAR       reduce using rule 108 (graphstmt -> graphmove .)
    SHOW_STAR       reduce using rule 108 (graphstmt -> graphmove .)
    COLOR_STAR      reduce using rule 108 (graphstmt -> graphmove .)
    SIZE_STAR       reduce using rule 108 (graphstmt -> graphmove .)
    SETXY           reduce using rule 108 (graphstmt -> graphmove .)
    HAND_DOWN       reduce using rule 108 (graphstmt -> graphmove .)
    HAND_UP         reduce using rule 108 (graphstmt -> graphmove .)
    GO              reduce using rule 108 (graphstmt -> graphmove .)
    LEFT            reduce using rule 108 (graphstmt -> graphmove .)
    RIGHT           reduce using rule 108 (graphstmt -> graphmove .)
    BACK            reduce using rule 108 (graphstmt -> graphmove .)
    ARC             reduce using rule 108 (graphstmt -> graphmove .)
    WHILE           reduce using rule 108 (graphstmt -> graphmove .)
    FOR             reduce using rule 108 (graphstmt -> graphmove .)
    CLOSEBRACES     reduce using rule 108 (graphstmt -> graphmove .)


state 61

    (67) funCall -> ID . iniciaFunCall funCall2 terminaFunCall
    (66) id -> ID . vectormatriz
    (68) iniciaFunCall -> . OPENPAREN
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 128
    OPENBRACKET     shift and go to state 115

    iniciaFunCall                  shift and go to state 126
    vectormatriz                   shift and go to state 127
    vm1                            shift and go to state 116

state 62

    (78) return -> RETURN . return1 SEMICOLON
    (79) return1 -> . vcte
    (80) return1 -> . exp
    (31) vcte -> . cte_int
    (32) vcte -> . cte_float
    (33) vcte -> . cte_string
    (34) vcte -> . id
    (35) vcte -> . funCall
    (36) vcte -> . vectormatriz
    (135) exp -> . term
    (136) exp -> . term exp_o exp
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (66) id -> . ID vectormatriz
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1
    (141) term -> . factor term_o term
    (142) term -> . factor
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (145) factor -> . vcte
    (146) factor -> . openP expression closeP
    (139) openP -> . OPENPAREN

    CTEINT          shift and go to state 112
    CTEFLOAT        shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 99
    OPENBRACKET     shift and go to state 115
    OPENPAREN       shift and go to state 111

    return1                        shift and go to state 129
    vcte                           shift and go to state 130
    exp                            shift and go to state 131
    cte_int                        shift and go to state 105
    cte_float                      shift and go to state 106
    cte_string                     shift and go to state 107
    id                             shift and go to state 108
    funCall                        shift and go to state 109
    vectormatriz                   shift and go to state 110
    term                           shift and go to state 101
    vm1                            shift and go to state 116
    factor                         shift and go to state 102
    openP                          shift and go to state 104

state 63

    (101) while -> while1 . body
    (92) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 133

    body                           shift and go to state 132

state 64

    (96) for -> for1 . body
    (92) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 133

    body                           shift and go to state 134

state 65

    (109) graphfig -> graphfig1 . SEMICOLON

    SEMICOLON       shift and go to state 135


state 66

    (110) graphfig -> graphfig2 . SEMICOLON

    SEMICOLON       shift and go to state 136


state 67

    (125) graphview -> graphview0 . SEMICOLON

    SEMICOLON       shift and go to state 137


state 68

    (126) graphview -> graphview1 . SEMICOLON

    SEMICOLON       shift and go to state 138


state 69

    (127) graphview -> graphview2 . SEMICOLON

    SEMICOLON       shift and go to state 139


state 70

    (115) graphmove -> graphmove0 . SEMICOLON

    SEMICOLON       shift and go to state 140


state 71

    (116) graphmove -> graphmove1 . SEMICOLON

    SEMICOLON       shift and go to state 141


state 72

    (117) graphmove -> graphmove2 . SEMICOLON

    SEMICOLON       shift and go to state 142


state 73

    (102) while1 -> while_w . OPENPAREN expression CLOSEPAREN

    OPENPAREN       shift and go to state 143


state 74

    (97) for1 -> forInit . OPENPAREN ID for2

    OPENPAREN       shift and go to state 144


state 75

    (111) graphfig1 -> CIRCLE . unaExp
    (105) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    unaExp                         shift and go to state 145

state 76

    (112) graphfig1 -> SQUARE . unaExp
    (105) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    unaExp                         shift and go to state 147

state 77

    (113) graphfig2 -> TRIANGLE . dosExp
    (104) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 149

    dosExp                         shift and go to state 148

state 78

    (114) graphfig2 -> RECTANGLE . dosExp
    (104) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 149

    dosExp                         shift and go to state 150

state 79

    (128) graphview0 -> HIDE_STAR .

    SEMICOLON       reduce using rule 128 (graphview0 -> HIDE_STAR .)


state 80

    (129) graphview0 -> SHOW_STAR .

    SEMICOLON       reduce using rule 129 (graphview0 -> SHOW_STAR .)


state 81

    (130) graphview1 -> COLOR_STAR . unaExp
    (105) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    unaExp                         shift and go to state 151

state 82

    (131) graphview1 -> SIZE_STAR . unaExp
    (105) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    unaExp                         shift and go to state 152

state 83

    (132) graphview2 -> SETXY . dosExp
    (104) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 149

    dosExp                         shift and go to state 153

state 84

    (118) graphmove0 -> HAND_DOWN .

    SEMICOLON       reduce using rule 118 (graphmove0 -> HAND_DOWN .)


state 85

    (119) graphmove0 -> HAND_UP .

    SEMICOLON       reduce using rule 119 (graphmove0 -> HAND_UP .)


state 86

    (120) graphmove1 -> GO . unaExp
    (105) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    unaExp                         shift and go to state 154

state 87

    (121) graphmove1 -> LEFT . unaExp
    (105) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    unaExp                         shift and go to state 155

state 88

    (122) graphmove1 -> RIGHT . unaExp
    (105) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    unaExp                         shift and go to state 156

state 89

    (123) graphmove1 -> BACK . unaExp
    (105) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    unaExp                         shift and go to state 157

state 90

    (124) graphmove2 -> ARC . dosExp
    (104) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 149

    dosExp                         shift and go to state 158

state 91

    (103) while_w -> WHILE .

    OPENPAREN       reduce using rule 103 (while_w -> WHILE .)


state 92

    (100) forInit -> FOR .

    OPENPAREN       reduce using rule 100 (forInit -> FOR .)


state 93

    (46) function -> FUN functionI function2 inicia_fun . declara_vars function4 termina_fun
    (11) declara_vars -> . vars declara_vars
    (12) declara_vars -> . empty
    (13) vars -> . type ID dimensionada equals exp SEMICOLON
    (14) vars -> . type ID dimensionada SEMICOLON
    (147) empty -> .
    (57) type -> . INT
    (58) type -> . FLOAT
    (59) type -> . STRING

    IF              reduce using rule 147 (empty -> .)
    PRINT           reduce using rule 147 (empty -> .)
    READ            reduce using rule 147 (empty -> .)
    ID              reduce using rule 147 (empty -> .)
    RETURN          reduce using rule 147 (empty -> .)
    CIRCLE          reduce using rule 147 (empty -> .)
    SQUARE          reduce using rule 147 (empty -> .)
    TRIANGLE        reduce using rule 147 (empty -> .)
    RECTANGLE       reduce using rule 147 (empty -> .)
    HIDE_STAR       reduce using rule 147 (empty -> .)
    SHOW_STAR       reduce using rule 147 (empty -> .)
    COLOR_STAR      reduce using rule 147 (empty -> .)
    SIZE_STAR       reduce using rule 147 (empty -> .)
    SETXY           reduce using rule 147 (empty -> .)
    HAND_DOWN       reduce using rule 147 (empty -> .)
    HAND_UP         reduce using rule 147 (empty -> .)
    GO              reduce using rule 147 (empty -> .)
    LEFT            reduce using rule 147 (empty -> .)
    RIGHT           reduce using rule 147 (empty -> .)
    BACK            reduce using rule 147 (empty -> .)
    ARC             reduce using rule 147 (empty -> .)
    WHILE           reduce using rule 147 (empty -> .)
    FOR             reduce using rule 147 (empty -> .)
    CLOSEBRACES     reduce using rule 147 (empty -> .)
    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    STRING          shift and go to state 12

    declara_vars                   shift and go to state 159
    vars                           shift and go to state 7
    empty                          shift and go to state 8
    type                           shift and go to state 9

state 94

    (47) inicia_fun -> OPENBRACES .

    INT             reduce using rule 47 (inicia_fun -> OPENBRACES .)
    FLOAT           reduce using rule 47 (inicia_fun -> OPENBRACES .)
    STRING          reduce using rule 47 (inicia_fun -> OPENBRACES .)
    IF              reduce using rule 47 (inicia_fun -> OPENBRACES .)
    PRINT           reduce using rule 47 (inicia_fun -> OPENBRACES .)
    READ            reduce using rule 47 (inicia_fun -> OPENBRACES .)
    ID              reduce using rule 47 (inicia_fun -> OPENBRACES .)
    RETURN          reduce using rule 47 (inicia_fun -> OPENBRACES .)
    CIRCLE          reduce using rule 47 (inicia_fun -> OPENBRACES .)
    SQUARE          reduce using rule 47 (inicia_fun -> OPENBRACES .)
    TRIANGLE        reduce using rule 47 (inicia_fun -> OPENBRACES .)
    RECTANGLE       reduce using rule 47 (inicia_fun -> OPENBRACES .)
    HIDE_STAR       reduce using rule 47 (inicia_fun -> OPENBRACES .)
    SHOW_STAR       reduce using rule 47 (inicia_fun -> OPENBRACES .)
    COLOR_STAR      reduce using rule 47 (inicia_fun -> OPENBRACES .)
    SIZE_STAR       reduce using rule 47 (inicia_fun -> OPENBRACES .)
    SETXY           reduce using rule 47 (inicia_fun -> OPENBRACES .)
    HAND_DOWN       reduce using rule 47 (inicia_fun -> OPENBRACES .)
    HAND_UP         reduce using rule 47 (inicia_fun -> OPENBRACES .)
    GO              reduce using rule 47 (inicia_fun -> OPENBRACES .)
    LEFT            reduce using rule 47 (inicia_fun -> OPENBRACES .)
    RIGHT           reduce using rule 47 (inicia_fun -> OPENBRACES .)
    BACK            reduce using rule 47 (inicia_fun -> OPENBRACES .)
    ARC             reduce using rule 47 (inicia_fun -> OPENBRACES .)
    WHILE           reduce using rule 47 (inicia_fun -> OPENBRACES .)
    FOR             reduce using rule 47 (inicia_fun -> OPENBRACES .)
    CLOSEBRACES     reduce using rule 47 (inicia_fun -> OPENBRACES .)


state 95

    (49) function2 -> OPENPAREN function3 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 160


state 96

    (50) function3 -> funParam . function5
    (54) function5 -> . COMMA funParam function5
    (55) function5 -> . empty
    (147) empty -> .

    COMMA           shift and go to state 162
    CLOSEPAREN      reduce using rule 147 (empty -> .)

    function5                      shift and go to state 161
    empty                          shift and go to state 163

state 97

    (51) function3 -> empty .

    CLOSEPAREN      reduce using rule 51 (function3 -> empty .)


state 98

    (56) funParam -> type . ID

    ID              shift and go to state 164


state 99

    (66) id -> ID . vectormatriz
    (67) funCall -> ID . iniciaFunCall funCall2 terminaFunCall
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1
    (68) iniciaFunCall -> . OPENPAREN
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENBRACKET     shift and go to state 115
    OPENPAREN       shift and go to state 128

    vectormatriz                   shift and go to state 127
    iniciaFunCall                  shift and go to state 126
    vm1                            shift and go to state 116

state 100

    (13) vars -> type ID dimensionada equals exp . SEMICOLON

    SEMICOLON       shift and go to state 165


state 101

    (135) exp -> term .
    (136) exp -> term . exp_o exp
    (137) exp_o -> . ADDITION
    (138) exp_o -> . SUBSTRACTION

    SEMICOLON       reduce using rule 135 (exp -> term .)
    GREATER         reduce using rule 135 (exp -> term .)
    LESS            reduce using rule 135 (exp -> term .)
    NOTEQUAL        reduce using rule 135 (exp -> term .)
    ISEQUAL         reduce using rule 135 (exp -> term .)
    CLOSEPAREN      reduce using rule 135 (exp -> term .)
    COMMA           reduce using rule 135 (exp -> term .)
    CLOSEBRACKET    reduce using rule 135 (exp -> term .)
    ADDITION        shift and go to state 167
    SUBSTRACTION    shift and go to state 168

    exp_o                          shift and go to state 166

state 102

    (141) term -> factor . term_o term
    (142) term -> factor .
    (143) term_o -> . MULTIPLICATION
    (144) term_o -> . DIVISION

    ADDITION        reduce using rule 142 (term -> factor .)
    SUBSTRACTION    reduce using rule 142 (term -> factor .)
    SEMICOLON       reduce using rule 142 (term -> factor .)
    GREATER         reduce using rule 142 (term -> factor .)
    LESS            reduce using rule 142 (term -> factor .)
    NOTEQUAL        reduce using rule 142 (term -> factor .)
    ISEQUAL         reduce using rule 142 (term -> factor .)
    CLOSEPAREN      reduce using rule 142 (term -> factor .)
    COMMA           reduce using rule 142 (term -> factor .)
    CLOSEBRACKET    reduce using rule 142 (term -> factor .)
    MULTIPLICATION  shift and go to state 170
    DIVISION        shift and go to state 171

    term_o                         shift and go to state 169

state 103

    (145) factor -> vcte .

    MULTIPLICATION  reduce using rule 145 (factor -> vcte .)
    DIVISION        reduce using rule 145 (factor -> vcte .)
    ADDITION        reduce using rule 145 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 145 (factor -> vcte .)
    SEMICOLON       reduce using rule 145 (factor -> vcte .)
    GREATER         reduce using rule 145 (factor -> vcte .)
    LESS            reduce using rule 145 (factor -> vcte .)
    NOTEQUAL        reduce using rule 145 (factor -> vcte .)
    ISEQUAL         reduce using rule 145 (factor -> vcte .)
    CLOSEPAREN      reduce using rule 145 (factor -> vcte .)
    COMMA           reduce using rule 145 (factor -> vcte .)
    CLOSEBRACKET    reduce using rule 145 (factor -> vcte .)


state 104

    (146) factor -> openP . expression closeP
    (133) expression -> . exp loper exp
    (134) expression -> . exp
    (135) exp -> . term
    (136) exp -> . term exp_o exp
    (141) term -> . factor term_o term
    (142) term -> . factor
    (145) factor -> . vcte
    (146) factor -> . openP expression closeP
    (31) vcte -> . cte_int
    (32) vcte -> . cte_float
    (33) vcte -> . cte_string
    (34) vcte -> . id
    (35) vcte -> . funCall
    (36) vcte -> . vectormatriz
    (139) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (66) id -> . ID vectormatriz
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 111
    CTEINT          shift and go to state 112
    CTEFLOAT        shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 99
    OPENBRACKET     shift and go to state 115

    openP                          shift and go to state 104
    expression                     shift and go to state 172
    exp                            shift and go to state 173
    term                           shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    cte_int                        shift and go to state 105
    cte_float                      shift and go to state 106
    cte_string                     shift and go to state 107
    id                             shift and go to state 108
    funCall                        shift and go to state 109
    vectormatriz                   shift and go to state 110
    vm1                            shift and go to state 116

state 105

    (31) vcte -> cte_int .

    MULTIPLICATION  reduce using rule 31 (vcte -> cte_int .)
    DIVISION        reduce using rule 31 (vcte -> cte_int .)
    ADDITION        reduce using rule 31 (vcte -> cte_int .)
    SUBSTRACTION    reduce using rule 31 (vcte -> cte_int .)
    SEMICOLON       reduce using rule 31 (vcte -> cte_int .)
    GREATER         reduce using rule 31 (vcte -> cte_int .)
    LESS            reduce using rule 31 (vcte -> cte_int .)
    NOTEQUAL        reduce using rule 31 (vcte -> cte_int .)
    ISEQUAL         reduce using rule 31 (vcte -> cte_int .)
    CLOSEPAREN      reduce using rule 31 (vcte -> cte_int .)
    COMMA           reduce using rule 31 (vcte -> cte_int .)
    CLOSEBRACKET    reduce using rule 31 (vcte -> cte_int .)


state 106

    (32) vcte -> cte_float .

    MULTIPLICATION  reduce using rule 32 (vcte -> cte_float .)
    DIVISION        reduce using rule 32 (vcte -> cte_float .)
    ADDITION        reduce using rule 32 (vcte -> cte_float .)
    SUBSTRACTION    reduce using rule 32 (vcte -> cte_float .)
    SEMICOLON       reduce using rule 32 (vcte -> cte_float .)
    GREATER         reduce using rule 32 (vcte -> cte_float .)
    LESS            reduce using rule 32 (vcte -> cte_float .)
    NOTEQUAL        reduce using rule 32 (vcte -> cte_float .)
    ISEQUAL         reduce using rule 32 (vcte -> cte_float .)
    CLOSEPAREN      reduce using rule 32 (vcte -> cte_float .)
    COMMA           reduce using rule 32 (vcte -> cte_float .)
    CLOSEBRACKET    reduce using rule 32 (vcte -> cte_float .)


state 107

    (33) vcte -> cte_string .

    MULTIPLICATION  reduce using rule 33 (vcte -> cte_string .)
    DIVISION        reduce using rule 33 (vcte -> cte_string .)
    ADDITION        reduce using rule 33 (vcte -> cte_string .)
    SUBSTRACTION    reduce using rule 33 (vcte -> cte_string .)
    SEMICOLON       reduce using rule 33 (vcte -> cte_string .)
    GREATER         reduce using rule 33 (vcte -> cte_string .)
    LESS            reduce using rule 33 (vcte -> cte_string .)
    NOTEQUAL        reduce using rule 33 (vcte -> cte_string .)
    ISEQUAL         reduce using rule 33 (vcte -> cte_string .)
    CLOSEPAREN      reduce using rule 33 (vcte -> cte_string .)
    COMMA           reduce using rule 33 (vcte -> cte_string .)
    CLOSEBRACKET    reduce using rule 33 (vcte -> cte_string .)


state 108

    (34) vcte -> id .

    MULTIPLICATION  reduce using rule 34 (vcte -> id .)
    DIVISION        reduce using rule 34 (vcte -> id .)
    ADDITION        reduce using rule 34 (vcte -> id .)
    SUBSTRACTION    reduce using rule 34 (vcte -> id .)
    SEMICOLON       reduce using rule 34 (vcte -> id .)
    GREATER         reduce using rule 34 (vcte -> id .)
    LESS            reduce using rule 34 (vcte -> id .)
    NOTEQUAL        reduce using rule 34 (vcte -> id .)
    ISEQUAL         reduce using rule 34 (vcte -> id .)
    CLOSEPAREN      reduce using rule 34 (vcte -> id .)
    COMMA           reduce using rule 34 (vcte -> id .)
    CLOSEBRACKET    reduce using rule 34 (vcte -> id .)


state 109

    (35) vcte -> funCall .

    MULTIPLICATION  reduce using rule 35 (vcte -> funCall .)
    DIVISION        reduce using rule 35 (vcte -> funCall .)
    ADDITION        reduce using rule 35 (vcte -> funCall .)
    SUBSTRACTION    reduce using rule 35 (vcte -> funCall .)
    SEMICOLON       reduce using rule 35 (vcte -> funCall .)
    GREATER         reduce using rule 35 (vcte -> funCall .)
    LESS            reduce using rule 35 (vcte -> funCall .)
    NOTEQUAL        reduce using rule 35 (vcte -> funCall .)
    ISEQUAL         reduce using rule 35 (vcte -> funCall .)
    CLOSEPAREN      reduce using rule 35 (vcte -> funCall .)
    COMMA           reduce using rule 35 (vcte -> funCall .)
    CLOSEBRACKET    reduce using rule 35 (vcte -> funCall .)


state 110

    (36) vcte -> vectormatriz .

    MULTIPLICATION  reduce using rule 36 (vcte -> vectormatriz .)
    DIVISION        reduce using rule 36 (vcte -> vectormatriz .)
    ADDITION        reduce using rule 36 (vcte -> vectormatriz .)
    SUBSTRACTION    reduce using rule 36 (vcte -> vectormatriz .)
    SEMICOLON       reduce using rule 36 (vcte -> vectormatriz .)
    GREATER         reduce using rule 36 (vcte -> vectormatriz .)
    LESS            reduce using rule 36 (vcte -> vectormatriz .)
    NOTEQUAL        reduce using rule 36 (vcte -> vectormatriz .)
    ISEQUAL         reduce using rule 36 (vcte -> vectormatriz .)
    CLOSEPAREN      reduce using rule 36 (vcte -> vectormatriz .)
    COMMA           reduce using rule 36 (vcte -> vectormatriz .)
    CLOSEBRACKET    reduce using rule 36 (vcte -> vectormatriz .)


state 111

    (139) openP -> OPENPAREN .

    OPENPAREN       reduce using rule 139 (openP -> OPENPAREN .)
    CTEINT          reduce using rule 139 (openP -> OPENPAREN .)
    CTEFLOAT        reduce using rule 139 (openP -> OPENPAREN .)
    CTESTRING       reduce using rule 139 (openP -> OPENPAREN .)
    ID              reduce using rule 139 (openP -> OPENPAREN .)
    OPENBRACKET     reduce using rule 139 (openP -> OPENPAREN .)


state 112

    (75) cte_int -> CTEINT .

    MULTIPLICATION  reduce using rule 75 (cte_int -> CTEINT .)
    DIVISION        reduce using rule 75 (cte_int -> CTEINT .)
    ADDITION        reduce using rule 75 (cte_int -> CTEINT .)
    SUBSTRACTION    reduce using rule 75 (cte_int -> CTEINT .)
    SEMICOLON       reduce using rule 75 (cte_int -> CTEINT .)
    GREATER         reduce using rule 75 (cte_int -> CTEINT .)
    LESS            reduce using rule 75 (cte_int -> CTEINT .)
    NOTEQUAL        reduce using rule 75 (cte_int -> CTEINT .)
    ISEQUAL         reduce using rule 75 (cte_int -> CTEINT .)
    CLOSEPAREN      reduce using rule 75 (cte_int -> CTEINT .)
    COMMA           reduce using rule 75 (cte_int -> CTEINT .)
    CLOSEBRACKET    reduce using rule 75 (cte_int -> CTEINT .)


state 113

    (76) cte_float -> CTEFLOAT .

    MULTIPLICATION  reduce using rule 76 (cte_float -> CTEFLOAT .)
    DIVISION        reduce using rule 76 (cte_float -> CTEFLOAT .)
    ADDITION        reduce using rule 76 (cte_float -> CTEFLOAT .)
    SUBSTRACTION    reduce using rule 76 (cte_float -> CTEFLOAT .)
    SEMICOLON       reduce using rule 76 (cte_float -> CTEFLOAT .)
    GREATER         reduce using rule 76 (cte_float -> CTEFLOAT .)
    LESS            reduce using rule 76 (cte_float -> CTEFLOAT .)
    NOTEQUAL        reduce using rule 76 (cte_float -> CTEFLOAT .)
    ISEQUAL         reduce using rule 76 (cte_float -> CTEFLOAT .)
    CLOSEPAREN      reduce using rule 76 (cte_float -> CTEFLOAT .)
    COMMA           reduce using rule 76 (cte_float -> CTEFLOAT .)
    CLOSEBRACKET    reduce using rule 76 (cte_float -> CTEFLOAT .)


state 114

    (77) cte_string -> CTESTRING .

    MULTIPLICATION  reduce using rule 77 (cte_string -> CTESTRING .)
    DIVISION        reduce using rule 77 (cte_string -> CTESTRING .)
    ADDITION        reduce using rule 77 (cte_string -> CTESTRING .)
    SUBSTRACTION    reduce using rule 77 (cte_string -> CTESTRING .)
    SEMICOLON       reduce using rule 77 (cte_string -> CTESTRING .)
    GREATER         reduce using rule 77 (cte_string -> CTESTRING .)
    LESS            reduce using rule 77 (cte_string -> CTESTRING .)
    NOTEQUAL        reduce using rule 77 (cte_string -> CTESTRING .)
    ISEQUAL         reduce using rule 77 (cte_string -> CTESTRING .)
    CLOSEPAREN      reduce using rule 77 (cte_string -> CTESTRING .)
    COMMA           reduce using rule 77 (cte_string -> CTESTRING .)
    CLOSEBRACKET    reduce using rule 77 (cte_string -> CTESTRING .)


state 115

    (37) vectormatriz -> OPENBRACKET . vm1 CLOSEBRACKET
    (39) vm1 -> OPENBRACKET . vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> OPENBRACKET . vm2 CLOSEBRACKET
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (41) vm2 -> . exp COMMA vm2
    (42) vm2 -> . exp
    (43) vm2 -> . empty
    (135) exp -> . term
    (136) exp -> . term exp_o exp
    (147) empty -> .
    (141) term -> . factor term_o term
    (142) term -> . factor
    (145) factor -> . vcte
    (146) factor -> . openP expression closeP
    (31) vcte -> . cte_int
    (32) vcte -> . cte_float
    (33) vcte -> . cte_string
    (34) vcte -> . id
    (35) vcte -> . funCall
    (36) vcte -> . vectormatriz
    (139) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (66) id -> . ID vectormatriz
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1

    OPENBRACKET     shift and go to state 174
    CLOSEBRACKET    reduce using rule 147 (empty -> .)
    OPENPAREN       shift and go to state 111
    CTEINT          shift and go to state 112
    CTEFLOAT        shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 99

    vm1                            shift and go to state 175
    vm2                            shift and go to state 176
    exp                            shift and go to state 177
    empty                          shift and go to state 178
    term                           shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openP                          shift and go to state 104
    cte_int                        shift and go to state 105
    cte_float                      shift and go to state 106
    cte_string                     shift and go to state 107
    id                             shift and go to state 108
    funCall                        shift and go to state 109
    vectormatriz                   shift and go to state 110

state 116

    (38) vectormatriz -> vm1 .

    MULTIPLICATION  reduce using rule 38 (vectormatriz -> vm1 .)
    DIVISION        reduce using rule 38 (vectormatriz -> vm1 .)
    ADDITION        reduce using rule 38 (vectormatriz -> vm1 .)
    SUBSTRACTION    reduce using rule 38 (vectormatriz -> vm1 .)
    SEMICOLON       reduce using rule 38 (vectormatriz -> vm1 .)
    EQUALS          reduce using rule 38 (vectormatriz -> vm1 .)
    GREATER         reduce using rule 38 (vectormatriz -> vm1 .)
    LESS            reduce using rule 38 (vectormatriz -> vm1 .)
    NOTEQUAL        reduce using rule 38 (vectormatriz -> vm1 .)
    ISEQUAL         reduce using rule 38 (vectormatriz -> vm1 .)
    CLOSEPAREN      reduce using rule 38 (vectormatriz -> vm1 .)
    COMMA           reduce using rule 38 (vectormatriz -> vm1 .)
    CLOSEBRACKET    reduce using rule 38 (vectormatriz -> vm1 .)
    OPENBRACKET     reduce using rule 38 (vectormatriz -> vm1 .)


state 117

    (15) dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET .
    (16) dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET . OPENBRACKET CTEINT CLOSEBRACKET

    SEMICOLON       reduce using rule 15 (dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET .)
    EQUALS          reduce using rule 15 (dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET .)
    OPENBRACKET     shift and go to state 179


state 118

    (6) star -> starI declara_vars star1 CLOSEBRACES .

    $end            reduce using rule 6 (star -> starI declara_vars star1 CLOSEBRACES .)


state 119

    (9) star1 -> stmt star1 .

    CLOSEBRACES     reduce using rule 9 (star1 -> stmt star1 .)


state 120

    (26) stmt -> funCall SEMICOLON .

    IF              reduce using rule 26 (stmt -> funCall SEMICOLON .)
    PRINT           reduce using rule 26 (stmt -> funCall SEMICOLON .)
    READ            reduce using rule 26 (stmt -> funCall SEMICOLON .)
    ID              reduce using rule 26 (stmt -> funCall SEMICOLON .)
    RETURN          reduce using rule 26 (stmt -> funCall SEMICOLON .)
    CIRCLE          reduce using rule 26 (stmt -> funCall SEMICOLON .)
    SQUARE          reduce using rule 26 (stmt -> funCall SEMICOLON .)
    TRIANGLE        reduce using rule 26 (stmt -> funCall SEMICOLON .)
    RECTANGLE       reduce using rule 26 (stmt -> funCall SEMICOLON .)
    HIDE_STAR       reduce using rule 26 (stmt -> funCall SEMICOLON .)
    SHOW_STAR       reduce using rule 26 (stmt -> funCall SEMICOLON .)
    COLOR_STAR      reduce using rule 26 (stmt -> funCall SEMICOLON .)
    SIZE_STAR       reduce using rule 26 (stmt -> funCall SEMICOLON .)
    SETXY           reduce using rule 26 (stmt -> funCall SEMICOLON .)
    HAND_DOWN       reduce using rule 26 (stmt -> funCall SEMICOLON .)
    HAND_UP         reduce using rule 26 (stmt -> funCall SEMICOLON .)
    GO              reduce using rule 26 (stmt -> funCall SEMICOLON .)
    LEFT            reduce using rule 26 (stmt -> funCall SEMICOLON .)
    RIGHT           reduce using rule 26 (stmt -> funCall SEMICOLON .)
    BACK            reduce using rule 26 (stmt -> funCall SEMICOLON .)
    ARC             reduce using rule 26 (stmt -> funCall SEMICOLON .)
    WHILE           reduce using rule 26 (stmt -> funCall SEMICOLON .)
    FOR             reduce using rule 26 (stmt -> funCall SEMICOLON .)
    CLOSEBRACES     reduce using rule 26 (stmt -> funCall SEMICOLON .)


state 121

    (28) assignment -> id equals . assignment3 SEMICOLON
    (29) assignment3 -> . exp
    (30) assignment3 -> . read
    (135) exp -> . term
    (136) exp -> . term exp_o exp
    (61) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (141) term -> . factor term_o term
    (142) term -> . factor
    (145) factor -> . vcte
    (146) factor -> . openP expression closeP
    (31) vcte -> . cte_int
    (32) vcte -> . cte_float
    (33) vcte -> . cte_string
    (34) vcte -> . id
    (35) vcte -> . funCall
    (36) vcte -> . vectormatriz
    (139) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (66) id -> . ID vectormatriz
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    READ            shift and go to state 57
    OPENPAREN       shift and go to state 111
    CTEINT          shift and go to state 112
    CTEFLOAT        shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 99
    OPENBRACKET     shift and go to state 115

    id                             shift and go to state 108
    assignment3                    shift and go to state 180
    exp                            shift and go to state 181
    read                           shift and go to state 182
    term                           shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openP                          shift and go to state 104
    cte_int                        shift and go to state 105
    cte_float                      shift and go to state 106
    cte_string                     shift and go to state 107
    funCall                        shift and go to state 109
    vectormatriz                   shift and go to state 110
    vm1                            shift and go to state 116

state 122

    (85) condition -> IF head_cond . body condition1
    (92) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 133

    body                           shift and go to state 183

state 123

    (91) head_cond -> OPENPAREN . expression close_condition
    (133) expression -> . exp loper exp
    (134) expression -> . exp
    (135) exp -> . term
    (136) exp -> . term exp_o exp
    (141) term -> . factor term_o term
    (142) term -> . factor
    (145) factor -> . vcte
    (146) factor -> . openP expression closeP
    (31) vcte -> . cte_int
    (32) vcte -> . cte_float
    (33) vcte -> . cte_string
    (34) vcte -> . id
    (35) vcte -> . funCall
    (36) vcte -> . vectormatriz
    (139) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (66) id -> . ID vectormatriz
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 111
    CTEINT          shift and go to state 112
    CTEFLOAT        shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 99
    OPENBRACKET     shift and go to state 115

    expression                     shift and go to state 184
    exp                            shift and go to state 173
    term                           shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openP                          shift and go to state 104
    cte_int                        shift and go to state 105
    cte_float                      shift and go to state 106
    cte_string                     shift and go to state 107
    id                             shift and go to state 108
    funCall                        shift and go to state 109
    vectormatriz                   shift and go to state 110
    vm1                            shift and go to state 116

state 124

    (60) print -> PRINT OPENPAREN . expression CLOSEPAREN SEMICOLON
    (133) expression -> . exp loper exp
    (134) expression -> . exp
    (135) exp -> . term
    (136) exp -> . term exp_o exp
    (141) term -> . factor term_o term
    (142) term -> . factor
    (145) factor -> . vcte
    (146) factor -> . openP expression closeP
    (31) vcte -> . cte_int
    (32) vcte -> . cte_float
    (33) vcte -> . cte_string
    (34) vcte -> . id
    (35) vcte -> . funCall
    (36) vcte -> . vectormatriz
    (139) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (66) id -> . ID vectormatriz
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 111
    CTEINT          shift and go to state 112
    CTEFLOAT        shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 99
    OPENBRACKET     shift and go to state 115

    expression                     shift and go to state 185
    exp                            shift and go to state 173
    term                           shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openP                          shift and go to state 104
    cte_int                        shift and go to state 105
    cte_float                      shift and go to state 106
    cte_string                     shift and go to state 107
    id                             shift and go to state 108
    funCall                        shift and go to state 109
    vectormatriz                   shift and go to state 110
    vm1                            shift and go to state 116

state 125

    (61) read -> READ OPENPAREN . id read1 CLOSEPAREN SEMICOLON
    (66) id -> . ID vectormatriz

    ID              shift and go to state 187

    id                             shift and go to state 186

state 126

    (67) funCall -> ID iniciaFunCall . funCall2 terminaFunCall
    (70) funCall2 -> . funCallParam funCall3
    (71) funCall2 -> . empty
    (74) funCallParam -> . exp
    (147) empty -> .
    (135) exp -> . term
    (136) exp -> . term exp_o exp
    (141) term -> . factor term_o term
    (142) term -> . factor
    (145) factor -> . vcte
    (146) factor -> . openP expression closeP
    (31) vcte -> . cte_int
    (32) vcte -> . cte_float
    (33) vcte -> . cte_string
    (34) vcte -> . id
    (35) vcte -> . funCall
    (36) vcte -> . vectormatriz
    (139) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (66) id -> . ID vectormatriz
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    CLOSEPAREN      reduce using rule 147 (empty -> .)
    OPENPAREN       shift and go to state 111
    CTEINT          shift and go to state 112
    CTEFLOAT        shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 99
    OPENBRACKET     shift and go to state 115

    funCall2                       shift and go to state 188
    funCallParam                   shift and go to state 189
    empty                          shift and go to state 190
    exp                            shift and go to state 191
    term                           shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openP                          shift and go to state 104
    cte_int                        shift and go to state 105
    cte_float                      shift and go to state 106
    cte_string                     shift and go to state 107
    id                             shift and go to state 108
    funCall                        shift and go to state 109
    vectormatriz                   shift and go to state 110
    vm1                            shift and go to state 116

state 127

    (66) id -> ID vectormatriz .

    EQUALS          reduce using rule 66 (id -> ID vectormatriz .)
    MULTIPLICATION  reduce using rule 66 (id -> ID vectormatriz .)
    DIVISION        reduce using rule 66 (id -> ID vectormatriz .)
    ADDITION        reduce using rule 66 (id -> ID vectormatriz .)
    SUBSTRACTION    reduce using rule 66 (id -> ID vectormatriz .)
    SEMICOLON       reduce using rule 66 (id -> ID vectormatriz .)
    GREATER         reduce using rule 66 (id -> ID vectormatriz .)
    LESS            reduce using rule 66 (id -> ID vectormatriz .)
    NOTEQUAL        reduce using rule 66 (id -> ID vectormatriz .)
    ISEQUAL         reduce using rule 66 (id -> ID vectormatriz .)
    CLOSEPAREN      reduce using rule 66 (id -> ID vectormatriz .)
    COMMA           reduce using rule 66 (id -> ID vectormatriz .)
    CLOSEBRACKET    reduce using rule 66 (id -> ID vectormatriz .)
    OPENBRACKET     reduce using rule 66 (id -> ID vectormatriz .)


state 128

    (68) iniciaFunCall -> OPENPAREN .

    OPENPAREN       reduce using rule 68 (iniciaFunCall -> OPENPAREN .)
    CTEINT          reduce using rule 68 (iniciaFunCall -> OPENPAREN .)
    CTEFLOAT        reduce using rule 68 (iniciaFunCall -> OPENPAREN .)
    CTESTRING       reduce using rule 68 (iniciaFunCall -> OPENPAREN .)
    ID              reduce using rule 68 (iniciaFunCall -> OPENPAREN .)
    OPENBRACKET     reduce using rule 68 (iniciaFunCall -> OPENPAREN .)
    CLOSEPAREN      reduce using rule 68 (iniciaFunCall -> OPENPAREN .)


state 129

    (78) return -> RETURN return1 . SEMICOLON

    SEMICOLON       shift and go to state 192


state 130

    (79) return1 -> vcte .
    (145) factor -> vcte .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 79 (return1 -> vcte .)
    SEMICOLON       reduce using rule 79 (return1 -> vcte .)
    MULTIPLICATION  reduce using rule 145 (factor -> vcte .)
    DIVISION        reduce using rule 145 (factor -> vcte .)
    ADDITION        reduce using rule 145 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 145 (factor -> vcte .)

  ! SEMICOLON       [ reduce using rule 145 (factor -> vcte .) ]


state 131

    (80) return1 -> exp .

    SEMICOLON       reduce using rule 80 (return1 -> exp .)


state 132

    (101) while -> while1 body .

    IF              reduce using rule 101 (while -> while1 body .)
    PRINT           reduce using rule 101 (while -> while1 body .)
    READ            reduce using rule 101 (while -> while1 body .)
    ID              reduce using rule 101 (while -> while1 body .)
    RETURN          reduce using rule 101 (while -> while1 body .)
    CIRCLE          reduce using rule 101 (while -> while1 body .)
    SQUARE          reduce using rule 101 (while -> while1 body .)
    TRIANGLE        reduce using rule 101 (while -> while1 body .)
    RECTANGLE       reduce using rule 101 (while -> while1 body .)
    HIDE_STAR       reduce using rule 101 (while -> while1 body .)
    SHOW_STAR       reduce using rule 101 (while -> while1 body .)
    COLOR_STAR      reduce using rule 101 (while -> while1 body .)
    SIZE_STAR       reduce using rule 101 (while -> while1 body .)
    SETXY           reduce using rule 101 (while -> while1 body .)
    HAND_DOWN       reduce using rule 101 (while -> while1 body .)
    HAND_UP         reduce using rule 101 (while -> while1 body .)
    GO              reduce using rule 101 (while -> while1 body .)
    LEFT            reduce using rule 101 (while -> while1 body .)
    RIGHT           reduce using rule 101 (while -> while1 body .)
    BACK            reduce using rule 101 (while -> while1 body .)
    ARC             reduce using rule 101 (while -> while1 body .)
    WHILE           reduce using rule 101 (while -> while1 body .)
    FOR             reduce using rule 101 (while -> while1 body .)
    CLOSEBRACES     reduce using rule 101 (while -> while1 body .)


state 133

    (92) body -> OPENBRACES . body1 CLOSEBRACES
    (94) body1 -> . stmt body1
    (95) body1 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . funCall SEMICOLON
    (27) stmt -> . return
    (147) empty -> .
    (28) assignment -> . id equals assignment3 SEMICOLON
    (85) condition -> . IF head_cond body condition1
    (60) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for
    (61) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (106) graphstmt -> . graphfig
    (107) graphstmt -> . graphview
    (108) graphstmt -> . graphmove
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (78) return -> . RETURN return1 SEMICOLON
    (66) id -> . ID vectormatriz
    (101) while -> . while1 body
    (96) for -> . for1 body
    (109) graphfig -> . graphfig1 SEMICOLON
    (110) graphfig -> . graphfig2 SEMICOLON
    (125) graphview -> . graphview0 SEMICOLON
    (126) graphview -> . graphview1 SEMICOLON
    (127) graphview -> . graphview2 SEMICOLON
    (115) graphmove -> . graphmove0 SEMICOLON
    (116) graphmove -> . graphmove1 SEMICOLON
    (117) graphmove -> . graphmove2 SEMICOLON
    (102) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (97) for1 -> . forInit OPENPAREN ID for2
    (111) graphfig1 -> . CIRCLE unaExp
    (112) graphfig1 -> . SQUARE unaExp
    (113) graphfig2 -> . TRIANGLE dosExp
    (114) graphfig2 -> . RECTANGLE dosExp
    (128) graphview0 -> . HIDE_STAR
    (129) graphview0 -> . SHOW_STAR
    (130) graphview1 -> . COLOR_STAR unaExp
    (131) graphview1 -> . SIZE_STAR unaExp
    (132) graphview2 -> . SETXY dosExp
    (118) graphmove0 -> . HAND_DOWN
    (119) graphmove0 -> . HAND_UP
    (120) graphmove1 -> . GO unaExp
    (121) graphmove1 -> . LEFT unaExp
    (122) graphmove1 -> . RIGHT unaExp
    (123) graphmove1 -> . BACK unaExp
    (124) graphmove2 -> . ARC dosExp
    (103) while_w -> . WHILE
    (100) forInit -> . FOR

    CLOSEBRACES     reduce using rule 147 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    ID              shift and go to state 61
    RETURN          shift and go to state 62
    CIRCLE          shift and go to state 75
    SQUARE          shift and go to state 76
    TRIANGLE        shift and go to state 77
    RECTANGLE       shift and go to state 78
    HIDE_STAR       shift and go to state 79
    SHOW_STAR       shift and go to state 80
    COLOR_STAR      shift and go to state 81
    SIZE_STAR       shift and go to state 82
    SETXY           shift and go to state 83
    HAND_DOWN       shift and go to state 84
    HAND_UP         shift and go to state 85
    GO              shift and go to state 86
    LEFT            shift and go to state 87
    RIGHT           shift and go to state 88
    BACK            shift and go to state 89
    ARC             shift and go to state 90
    WHILE           shift and go to state 91
    FOR             shift and go to state 92

    body1                          shift and go to state 193
    stmt                           shift and go to state 194
    empty                          shift and go to state 195
    assignment                     shift and go to state 44
    condition                      shift and go to state 45
    print                          shift and go to state 46
    loop                           shift and go to state 47
    read                           shift and go to state 48
    graphstmt                      shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    while1                         shift and go to state 63
    for1                           shift and go to state 64
    graphfig1                      shift and go to state 65
    graphfig2                      shift and go to state 66
    graphview0                     shift and go to state 67
    graphview1                     shift and go to state 68
    graphview2                     shift and go to state 69
    graphmove0                     shift and go to state 70
    graphmove1                     shift and go to state 71
    graphmove2                     shift and go to state 72
    while_w                        shift and go to state 73
    forInit                        shift and go to state 74

state 134

    (96) for -> for1 body .

    IF              reduce using rule 96 (for -> for1 body .)
    PRINT           reduce using rule 96 (for -> for1 body .)
    READ            reduce using rule 96 (for -> for1 body .)
    ID              reduce using rule 96 (for -> for1 body .)
    RETURN          reduce using rule 96 (for -> for1 body .)
    CIRCLE          reduce using rule 96 (for -> for1 body .)
    SQUARE          reduce using rule 96 (for -> for1 body .)
    TRIANGLE        reduce using rule 96 (for -> for1 body .)
    RECTANGLE       reduce using rule 96 (for -> for1 body .)
    HIDE_STAR       reduce using rule 96 (for -> for1 body .)
    SHOW_STAR       reduce using rule 96 (for -> for1 body .)
    COLOR_STAR      reduce using rule 96 (for -> for1 body .)
    SIZE_STAR       reduce using rule 96 (for -> for1 body .)
    SETXY           reduce using rule 96 (for -> for1 body .)
    HAND_DOWN       reduce using rule 96 (for -> for1 body .)
    HAND_UP         reduce using rule 96 (for -> for1 body .)
    GO              reduce using rule 96 (for -> for1 body .)
    LEFT            reduce using rule 96 (for -> for1 body .)
    RIGHT           reduce using rule 96 (for -> for1 body .)
    BACK            reduce using rule 96 (for -> for1 body .)
    ARC             reduce using rule 96 (for -> for1 body .)
    WHILE           reduce using rule 96 (for -> for1 body .)
    FOR             reduce using rule 96 (for -> for1 body .)
    CLOSEBRACES     reduce using rule 96 (for -> for1 body .)


state 135

    (109) graphfig -> graphfig1 SEMICOLON .

    IF              reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    PRINT           reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    READ            reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    ID              reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    RETURN          reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    CIRCLE          reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    SQUARE          reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    TRIANGLE        reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    RECTANGLE       reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    HIDE_STAR       reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    SHOW_STAR       reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    COLOR_STAR      reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    SIZE_STAR       reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    SETXY           reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    HAND_DOWN       reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    HAND_UP         reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    GO              reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    LEFT            reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    RIGHT           reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    BACK            reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    ARC             reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    WHILE           reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    FOR             reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 109 (graphfig -> graphfig1 SEMICOLON .)


state 136

    (110) graphfig -> graphfig2 SEMICOLON .

    IF              reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    PRINT           reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    READ            reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    ID              reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    RETURN          reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    CIRCLE          reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    SQUARE          reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    TRIANGLE        reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    RECTANGLE       reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    HIDE_STAR       reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    SHOW_STAR       reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    COLOR_STAR      reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    SIZE_STAR       reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    SETXY           reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    HAND_DOWN       reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    HAND_UP         reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    GO              reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    LEFT            reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    RIGHT           reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    BACK            reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    ARC             reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    WHILE           reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    FOR             reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 110 (graphfig -> graphfig2 SEMICOLON .)


state 137

    (125) graphview -> graphview0 SEMICOLON .

    IF              reduce using rule 125 (graphview -> graphview0 SEMICOLON .)
    PRINT           reduce using rule 125 (graphview -> graphview0 SEMICOLON .)
    READ            reduce using rule 125 (graphview -> graphview0 SEMICOLON .)
    ID              reduce using rule 125 (graphview -> graphview0 SEMICOLON .)
    RETURN          reduce using rule 125 (graphview -> graphview0 SEMICOLON .)
    CIRCLE          reduce using rule 125 (graphview -> graphview0 SEMICOLON .)
    SQUARE          reduce using rule 125 (graphview -> graphview0 SEMICOLON .)
    TRIANGLE        reduce using rule 125 (graphview -> graphview0 SEMICOLON .)
    RECTANGLE       reduce using rule 125 (graphview -> graphview0 SEMICOLON .)
    HIDE_STAR       reduce using rule 125 (graphview -> graphview0 SEMICOLON .)
    SHOW_STAR       reduce using rule 125 (graphview -> graphview0 SEMICOLON .)
    COLOR_STAR      reduce using rule 125 (graphview -> graphview0 SEMICOLON .)
    SIZE_STAR       reduce using rule 125 (graphview -> graphview0 SEMICOLON .)
    SETXY           reduce using rule 125 (graphview -> graphview0 SEMICOLON .)
    HAND_DOWN       reduce using rule 125 (graphview -> graphview0 SEMICOLON .)
    HAND_UP         reduce using rule 125 (graphview -> graphview0 SEMICOLON .)
    GO              reduce using rule 125 (graphview -> graphview0 SEMICOLON .)
    LEFT            reduce using rule 125 (graphview -> graphview0 SEMICOLON .)
    RIGHT           reduce using rule 125 (graphview -> graphview0 SEMICOLON .)
    BACK            reduce using rule 125 (graphview -> graphview0 SEMICOLON .)
    ARC             reduce using rule 125 (graphview -> graphview0 SEMICOLON .)
    WHILE           reduce using rule 125 (graphview -> graphview0 SEMICOLON .)
    FOR             reduce using rule 125 (graphview -> graphview0 SEMICOLON .)
    CLOSEBRACES     reduce using rule 125 (graphview -> graphview0 SEMICOLON .)


state 138

    (126) graphview -> graphview1 SEMICOLON .

    IF              reduce using rule 126 (graphview -> graphview1 SEMICOLON .)
    PRINT           reduce using rule 126 (graphview -> graphview1 SEMICOLON .)
    READ            reduce using rule 126 (graphview -> graphview1 SEMICOLON .)
    ID              reduce using rule 126 (graphview -> graphview1 SEMICOLON .)
    RETURN          reduce using rule 126 (graphview -> graphview1 SEMICOLON .)
    CIRCLE          reduce using rule 126 (graphview -> graphview1 SEMICOLON .)
    SQUARE          reduce using rule 126 (graphview -> graphview1 SEMICOLON .)
    TRIANGLE        reduce using rule 126 (graphview -> graphview1 SEMICOLON .)
    RECTANGLE       reduce using rule 126 (graphview -> graphview1 SEMICOLON .)
    HIDE_STAR       reduce using rule 126 (graphview -> graphview1 SEMICOLON .)
    SHOW_STAR       reduce using rule 126 (graphview -> graphview1 SEMICOLON .)
    COLOR_STAR      reduce using rule 126 (graphview -> graphview1 SEMICOLON .)
    SIZE_STAR       reduce using rule 126 (graphview -> graphview1 SEMICOLON .)
    SETXY           reduce using rule 126 (graphview -> graphview1 SEMICOLON .)
    HAND_DOWN       reduce using rule 126 (graphview -> graphview1 SEMICOLON .)
    HAND_UP         reduce using rule 126 (graphview -> graphview1 SEMICOLON .)
    GO              reduce using rule 126 (graphview -> graphview1 SEMICOLON .)
    LEFT            reduce using rule 126 (graphview -> graphview1 SEMICOLON .)
    RIGHT           reduce using rule 126 (graphview -> graphview1 SEMICOLON .)
    BACK            reduce using rule 126 (graphview -> graphview1 SEMICOLON .)
    ARC             reduce using rule 126 (graphview -> graphview1 SEMICOLON .)
    WHILE           reduce using rule 126 (graphview -> graphview1 SEMICOLON .)
    FOR             reduce using rule 126 (graphview -> graphview1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 126 (graphview -> graphview1 SEMICOLON .)


state 139

    (127) graphview -> graphview2 SEMICOLON .

    IF              reduce using rule 127 (graphview -> graphview2 SEMICOLON .)
    PRINT           reduce using rule 127 (graphview -> graphview2 SEMICOLON .)
    READ            reduce using rule 127 (graphview -> graphview2 SEMICOLON .)
    ID              reduce using rule 127 (graphview -> graphview2 SEMICOLON .)
    RETURN          reduce using rule 127 (graphview -> graphview2 SEMICOLON .)
    CIRCLE          reduce using rule 127 (graphview -> graphview2 SEMICOLON .)
    SQUARE          reduce using rule 127 (graphview -> graphview2 SEMICOLON .)
    TRIANGLE        reduce using rule 127 (graphview -> graphview2 SEMICOLON .)
    RECTANGLE       reduce using rule 127 (graphview -> graphview2 SEMICOLON .)
    HIDE_STAR       reduce using rule 127 (graphview -> graphview2 SEMICOLON .)
    SHOW_STAR       reduce using rule 127 (graphview -> graphview2 SEMICOLON .)
    COLOR_STAR      reduce using rule 127 (graphview -> graphview2 SEMICOLON .)
    SIZE_STAR       reduce using rule 127 (graphview -> graphview2 SEMICOLON .)
    SETXY           reduce using rule 127 (graphview -> graphview2 SEMICOLON .)
    HAND_DOWN       reduce using rule 127 (graphview -> graphview2 SEMICOLON .)
    HAND_UP         reduce using rule 127 (graphview -> graphview2 SEMICOLON .)
    GO              reduce using rule 127 (graphview -> graphview2 SEMICOLON .)
    LEFT            reduce using rule 127 (graphview -> graphview2 SEMICOLON .)
    RIGHT           reduce using rule 127 (graphview -> graphview2 SEMICOLON .)
    BACK            reduce using rule 127 (graphview -> graphview2 SEMICOLON .)
    ARC             reduce using rule 127 (graphview -> graphview2 SEMICOLON .)
    WHILE           reduce using rule 127 (graphview -> graphview2 SEMICOLON .)
    FOR             reduce using rule 127 (graphview -> graphview2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 127 (graphview -> graphview2 SEMICOLON .)


state 140

    (115) graphmove -> graphmove0 SEMICOLON .

    IF              reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    PRINT           reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    READ            reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    ID              reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    RETURN          reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    CIRCLE          reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    SQUARE          reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    TRIANGLE        reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    RECTANGLE       reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    HIDE_STAR       reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    SHOW_STAR       reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    COLOR_STAR      reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    SIZE_STAR       reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    SETXY           reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    HAND_DOWN       reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    HAND_UP         reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    GO              reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    LEFT            reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    RIGHT           reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    BACK            reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    ARC             reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    WHILE           reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    FOR             reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)
    CLOSEBRACES     reduce using rule 115 (graphmove -> graphmove0 SEMICOLON .)


state 141

    (116) graphmove -> graphmove1 SEMICOLON .

    IF              reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    PRINT           reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    READ            reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    ID              reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    RETURN          reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    CIRCLE          reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    SQUARE          reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    TRIANGLE        reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    RECTANGLE       reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    HIDE_STAR       reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    SHOW_STAR       reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    COLOR_STAR      reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    SIZE_STAR       reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    SETXY           reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    HAND_DOWN       reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    HAND_UP         reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    GO              reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    LEFT            reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    RIGHT           reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    BACK            reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    ARC             reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    WHILE           reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    FOR             reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 116 (graphmove -> graphmove1 SEMICOLON .)


state 142

    (117) graphmove -> graphmove2 SEMICOLON .

    IF              reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    PRINT           reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    READ            reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    ID              reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    RETURN          reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    CIRCLE          reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    SQUARE          reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    TRIANGLE        reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    RECTANGLE       reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    HIDE_STAR       reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    SHOW_STAR       reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    COLOR_STAR      reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    SIZE_STAR       reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    SETXY           reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    HAND_DOWN       reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    HAND_UP         reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    GO              reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    LEFT            reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    RIGHT           reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    BACK            reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    ARC             reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    WHILE           reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    FOR             reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 117 (graphmove -> graphmove2 SEMICOLON .)


state 143

    (102) while1 -> while_w OPENPAREN . expression CLOSEPAREN
    (133) expression -> . exp loper exp
    (134) expression -> . exp
    (135) exp -> . term
    (136) exp -> . term exp_o exp
    (141) term -> . factor term_o term
    (142) term -> . factor
    (145) factor -> . vcte
    (146) factor -> . openP expression closeP
    (31) vcte -> . cte_int
    (32) vcte -> . cte_float
    (33) vcte -> . cte_string
    (34) vcte -> . id
    (35) vcte -> . funCall
    (36) vcte -> . vectormatriz
    (139) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (66) id -> . ID vectormatriz
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 111
    CTEINT          shift and go to state 112
    CTEFLOAT        shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 99
    OPENBRACKET     shift and go to state 115

    expression                     shift and go to state 196
    exp                            shift and go to state 173
    term                           shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openP                          shift and go to state 104
    cte_int                        shift and go to state 105
    cte_float                      shift and go to state 106
    cte_string                     shift and go to state 107
    id                             shift and go to state 108
    funCall                        shift and go to state 109
    vectormatriz                   shift and go to state 110
    vm1                            shift and go to state 116

state 144

    (97) for1 -> forInit OPENPAREN . ID for2

    ID              shift and go to state 197


state 145

    (111) graphfig1 -> CIRCLE unaExp .

    SEMICOLON       reduce using rule 111 (graphfig1 -> CIRCLE unaExp .)


state 146

    (105) unaExp -> OPENPAREN . exp CLOSEPAREN
    (135) exp -> . term
    (136) exp -> . term exp_o exp
    (141) term -> . factor term_o term
    (142) term -> . factor
    (145) factor -> . vcte
    (146) factor -> . openP expression closeP
    (31) vcte -> . cte_int
    (32) vcte -> . cte_float
    (33) vcte -> . cte_string
    (34) vcte -> . id
    (35) vcte -> . funCall
    (36) vcte -> . vectormatriz
    (139) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (66) id -> . ID vectormatriz
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 111
    CTEINT          shift and go to state 112
    CTEFLOAT        shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 99
    OPENBRACKET     shift and go to state 115

    exp                            shift and go to state 198
    term                           shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openP                          shift and go to state 104
    cte_int                        shift and go to state 105
    cte_float                      shift and go to state 106
    cte_string                     shift and go to state 107
    id                             shift and go to state 108
    funCall                        shift and go to state 109
    vectormatriz                   shift and go to state 110
    vm1                            shift and go to state 116

state 147

    (112) graphfig1 -> SQUARE unaExp .

    SEMICOLON       reduce using rule 112 (graphfig1 -> SQUARE unaExp .)


state 148

    (113) graphfig2 -> TRIANGLE dosExp .

    SEMICOLON       reduce using rule 113 (graphfig2 -> TRIANGLE dosExp .)


state 149

    (104) dosExp -> OPENPAREN . exp COMMA exp CLOSEPAREN
    (135) exp -> . term
    (136) exp -> . term exp_o exp
    (141) term -> . factor term_o term
    (142) term -> . factor
    (145) factor -> . vcte
    (146) factor -> . openP expression closeP
    (31) vcte -> . cte_int
    (32) vcte -> . cte_float
    (33) vcte -> . cte_string
    (34) vcte -> . id
    (35) vcte -> . funCall
    (36) vcte -> . vectormatriz
    (139) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (66) id -> . ID vectormatriz
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 111
    CTEINT          shift and go to state 112
    CTEFLOAT        shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 99
    OPENBRACKET     shift and go to state 115

    exp                            shift and go to state 199
    term                           shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openP                          shift and go to state 104
    cte_int                        shift and go to state 105
    cte_float                      shift and go to state 106
    cte_string                     shift and go to state 107
    id                             shift and go to state 108
    funCall                        shift and go to state 109
    vectormatriz                   shift and go to state 110
    vm1                            shift and go to state 116

state 150

    (114) graphfig2 -> RECTANGLE dosExp .

    SEMICOLON       reduce using rule 114 (graphfig2 -> RECTANGLE dosExp .)


state 151

    (130) graphview1 -> COLOR_STAR unaExp .

    SEMICOLON       reduce using rule 130 (graphview1 -> COLOR_STAR unaExp .)


state 152

    (131) graphview1 -> SIZE_STAR unaExp .

    SEMICOLON       reduce using rule 131 (graphview1 -> SIZE_STAR unaExp .)


state 153

    (132) graphview2 -> SETXY dosExp .

    SEMICOLON       reduce using rule 132 (graphview2 -> SETXY dosExp .)


state 154

    (120) graphmove1 -> GO unaExp .

    SEMICOLON       reduce using rule 120 (graphmove1 -> GO unaExp .)


state 155

    (121) graphmove1 -> LEFT unaExp .

    SEMICOLON       reduce using rule 121 (graphmove1 -> LEFT unaExp .)


state 156

    (122) graphmove1 -> RIGHT unaExp .

    SEMICOLON       reduce using rule 122 (graphmove1 -> RIGHT unaExp .)


state 157

    (123) graphmove1 -> BACK unaExp .

    SEMICOLON       reduce using rule 123 (graphmove1 -> BACK unaExp .)


state 158

    (124) graphmove2 -> ARC dosExp .

    SEMICOLON       reduce using rule 124 (graphmove2 -> ARC dosExp .)


state 159

    (46) function -> FUN functionI function2 inicia_fun declara_vars . function4 termina_fun
    (52) function4 -> . stmt function4
    (53) function4 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . funCall SEMICOLON
    (27) stmt -> . return
    (147) empty -> .
    (28) assignment -> . id equals assignment3 SEMICOLON
    (85) condition -> . IF head_cond body condition1
    (60) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for
    (61) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (106) graphstmt -> . graphfig
    (107) graphstmt -> . graphview
    (108) graphstmt -> . graphmove
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (78) return -> . RETURN return1 SEMICOLON
    (66) id -> . ID vectormatriz
    (101) while -> . while1 body
    (96) for -> . for1 body
    (109) graphfig -> . graphfig1 SEMICOLON
    (110) graphfig -> . graphfig2 SEMICOLON
    (125) graphview -> . graphview0 SEMICOLON
    (126) graphview -> . graphview1 SEMICOLON
    (127) graphview -> . graphview2 SEMICOLON
    (115) graphmove -> . graphmove0 SEMICOLON
    (116) graphmove -> . graphmove1 SEMICOLON
    (117) graphmove -> . graphmove2 SEMICOLON
    (102) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (97) for1 -> . forInit OPENPAREN ID for2
    (111) graphfig1 -> . CIRCLE unaExp
    (112) graphfig1 -> . SQUARE unaExp
    (113) graphfig2 -> . TRIANGLE dosExp
    (114) graphfig2 -> . RECTANGLE dosExp
    (128) graphview0 -> . HIDE_STAR
    (129) graphview0 -> . SHOW_STAR
    (130) graphview1 -> . COLOR_STAR unaExp
    (131) graphview1 -> . SIZE_STAR unaExp
    (132) graphview2 -> . SETXY dosExp
    (118) graphmove0 -> . HAND_DOWN
    (119) graphmove0 -> . HAND_UP
    (120) graphmove1 -> . GO unaExp
    (121) graphmove1 -> . LEFT unaExp
    (122) graphmove1 -> . RIGHT unaExp
    (123) graphmove1 -> . BACK unaExp
    (124) graphmove2 -> . ARC dosExp
    (103) while_w -> . WHILE
    (100) forInit -> . FOR

    CLOSEBRACES     reduce using rule 147 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    ID              shift and go to state 61
    RETURN          shift and go to state 62
    CIRCLE          shift and go to state 75
    SQUARE          shift and go to state 76
    TRIANGLE        shift and go to state 77
    RECTANGLE       shift and go to state 78
    HIDE_STAR       shift and go to state 79
    SHOW_STAR       shift and go to state 80
    COLOR_STAR      shift and go to state 81
    SIZE_STAR       shift and go to state 82
    SETXY           shift and go to state 83
    HAND_DOWN       shift and go to state 84
    HAND_UP         shift and go to state 85
    GO              shift and go to state 86
    LEFT            shift and go to state 87
    RIGHT           shift and go to state 88
    BACK            shift and go to state 89
    ARC             shift and go to state 90
    WHILE           shift and go to state 91
    FOR             shift and go to state 92

    function4                      shift and go to state 200
    stmt                           shift and go to state 201
    empty                          shift and go to state 202
    assignment                     shift and go to state 44
    condition                      shift and go to state 45
    print                          shift and go to state 46
    loop                           shift and go to state 47
    read                           shift and go to state 48
    graphstmt                      shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    while1                         shift and go to state 63
    for1                           shift and go to state 64
    graphfig1                      shift and go to state 65
    graphfig2                      shift and go to state 66
    graphview0                     shift and go to state 67
    graphview1                     shift and go to state 68
    graphview2                     shift and go to state 69
    graphmove0                     shift and go to state 70
    graphmove1                     shift and go to state 71
    graphmove2                     shift and go to state 72
    while_w                        shift and go to state 73
    forInit                        shift and go to state 74

state 160

    (49) function2 -> OPENPAREN function3 CLOSEPAREN .

    OPENBRACES      reduce using rule 49 (function2 -> OPENPAREN function3 CLOSEPAREN .)


state 161

    (50) function3 -> funParam function5 .

    CLOSEPAREN      reduce using rule 50 (function3 -> funParam function5 .)


state 162

    (54) function5 -> COMMA . funParam function5
    (56) funParam -> . type ID
    (57) type -> . INT
    (58) type -> . FLOAT
    (59) type -> . STRING

    INT             shift and go to state 10
    FLOAT           shift and go to state 11
    STRING          shift and go to state 12

    funParam                       shift and go to state 203
    type                           shift and go to state 98

state 163

    (55) function5 -> empty .

    CLOSEPAREN      reduce using rule 55 (function5 -> empty .)


state 164

    (56) funParam -> type ID .

    COMMA           reduce using rule 56 (funParam -> type ID .)
    CLOSEPAREN      reduce using rule 56 (funParam -> type ID .)


state 165

    (13) vars -> type ID dimensionada equals exp SEMICOLON .

    INT             reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    FLOAT           reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    STRING          reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    FUN             reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    MULTIPLICATION  reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    IF              reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    PRINT           reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    READ            reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    ID              reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    RETURN          reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    CIRCLE          reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    SQUARE          reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    TRIANGLE        reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    RECTANGLE       reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    HIDE_STAR       reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    SHOW_STAR       reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    COLOR_STAR      reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    SIZE_STAR       reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    SETXY           reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    HAND_DOWN       reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    HAND_UP         reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    GO              reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    LEFT            reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    RIGHT           reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    BACK            reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    ARC             reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    WHILE           reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    FOR             reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    CLOSEBRACES     reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)


state 166

    (136) exp -> term exp_o . exp
    (135) exp -> . term
    (136) exp -> . term exp_o exp
    (141) term -> . factor term_o term
    (142) term -> . factor
    (145) factor -> . vcte
    (146) factor -> . openP expression closeP
    (31) vcte -> . cte_int
    (32) vcte -> . cte_float
    (33) vcte -> . cte_string
    (34) vcte -> . id
    (35) vcte -> . funCall
    (36) vcte -> . vectormatriz
    (139) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (66) id -> . ID vectormatriz
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 111
    CTEINT          shift and go to state 112
    CTEFLOAT        shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 99
    OPENBRACKET     shift and go to state 115

    term                           shift and go to state 101
    exp                            shift and go to state 204
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openP                          shift and go to state 104
    cte_int                        shift and go to state 105
    cte_float                      shift and go to state 106
    cte_string                     shift and go to state 107
    id                             shift and go to state 108
    funCall                        shift and go to state 109
    vectormatriz                   shift and go to state 110
    vm1                            shift and go to state 116

state 167

    (137) exp_o -> ADDITION .

    OPENPAREN       reduce using rule 137 (exp_o -> ADDITION .)
    CTEINT          reduce using rule 137 (exp_o -> ADDITION .)
    CTEFLOAT        reduce using rule 137 (exp_o -> ADDITION .)
    CTESTRING       reduce using rule 137 (exp_o -> ADDITION .)
    ID              reduce using rule 137 (exp_o -> ADDITION .)
    OPENBRACKET     reduce using rule 137 (exp_o -> ADDITION .)


state 168

    (138) exp_o -> SUBSTRACTION .

    OPENPAREN       reduce using rule 138 (exp_o -> SUBSTRACTION .)
    CTEINT          reduce using rule 138 (exp_o -> SUBSTRACTION .)
    CTEFLOAT        reduce using rule 138 (exp_o -> SUBSTRACTION .)
    CTESTRING       reduce using rule 138 (exp_o -> SUBSTRACTION .)
    ID              reduce using rule 138 (exp_o -> SUBSTRACTION .)
    OPENBRACKET     reduce using rule 138 (exp_o -> SUBSTRACTION .)


state 169

    (141) term -> factor term_o . term
    (141) term -> . factor term_o term
    (142) term -> . factor
    (145) factor -> . vcte
    (146) factor -> . openP expression closeP
    (31) vcte -> . cte_int
    (32) vcte -> . cte_float
    (33) vcte -> . cte_string
    (34) vcte -> . id
    (35) vcte -> . funCall
    (36) vcte -> . vectormatriz
    (139) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (66) id -> . ID vectormatriz
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 111
    CTEINT          shift and go to state 112
    CTEFLOAT        shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 99
    OPENBRACKET     shift and go to state 115

    factor                         shift and go to state 102
    term                           shift and go to state 205
    vcte                           shift and go to state 103
    openP                          shift and go to state 104
    cte_int                        shift and go to state 105
    cte_float                      shift and go to state 106
    cte_string                     shift and go to state 107
    id                             shift and go to state 108
    funCall                        shift and go to state 109
    vectormatriz                   shift and go to state 110
    vm1                            shift and go to state 116

state 170

    (143) term_o -> MULTIPLICATION .

    OPENPAREN       reduce using rule 143 (term_o -> MULTIPLICATION .)
    CTEINT          reduce using rule 143 (term_o -> MULTIPLICATION .)
    CTEFLOAT        reduce using rule 143 (term_o -> MULTIPLICATION .)
    CTESTRING       reduce using rule 143 (term_o -> MULTIPLICATION .)
    ID              reduce using rule 143 (term_o -> MULTIPLICATION .)
    OPENBRACKET     reduce using rule 143 (term_o -> MULTIPLICATION .)


state 171

    (144) term_o -> DIVISION .

    OPENPAREN       reduce using rule 144 (term_o -> DIVISION .)
    CTEINT          reduce using rule 144 (term_o -> DIVISION .)
    CTEFLOAT        reduce using rule 144 (term_o -> DIVISION .)
    CTESTRING       reduce using rule 144 (term_o -> DIVISION .)
    ID              reduce using rule 144 (term_o -> DIVISION .)
    OPENBRACKET     reduce using rule 144 (term_o -> DIVISION .)


state 172

    (146) factor -> openP expression . closeP
    (140) closeP -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 207

    closeP                         shift and go to state 206

state 173

    (133) expression -> exp . loper exp
    (134) expression -> exp .
    (81) loper -> . GREATER
    (82) loper -> . LESS
    (83) loper -> . NOTEQUAL
    (84) loper -> . ISEQUAL

    CLOSEPAREN      reduce using rule 134 (expression -> exp .)
    GREATER         shift and go to state 209
    LESS            shift and go to state 210
    NOTEQUAL        shift and go to state 211
    ISEQUAL         shift and go to state 212

    loper                          shift and go to state 208

state 174

    (39) vm1 -> OPENBRACKET . vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> OPENBRACKET . vm2 CLOSEBRACKET
    (37) vectormatriz -> OPENBRACKET . vm1 CLOSEBRACKET
    (41) vm2 -> . exp COMMA vm2
    (42) vm2 -> . exp
    (43) vm2 -> . empty
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (135) exp -> . term
    (136) exp -> . term exp_o exp
    (147) empty -> .
    (141) term -> . factor term_o term
    (142) term -> . factor
    (145) factor -> . vcte
    (146) factor -> . openP expression closeP
    (31) vcte -> . cte_int
    (32) vcte -> . cte_float
    (33) vcte -> . cte_string
    (34) vcte -> . id
    (35) vcte -> . funCall
    (36) vcte -> . vectormatriz
    (139) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (66) id -> . ID vectormatriz
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1

    OPENBRACKET     shift and go to state 174
    CLOSEBRACKET    reduce using rule 147 (empty -> .)
    OPENPAREN       shift and go to state 111
    CTEINT          shift and go to state 112
    CTEFLOAT        shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 99

    vm2                            shift and go to state 176
    vm1                            shift and go to state 175
    exp                            shift and go to state 177
    empty                          shift and go to state 178
    term                           shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openP                          shift and go to state 104
    cte_int                        shift and go to state 105
    cte_float                      shift and go to state 106
    cte_string                     shift and go to state 107
    id                             shift and go to state 108
    funCall                        shift and go to state 109
    vectormatriz                   shift and go to state 110

state 175

    (37) vectormatriz -> OPENBRACKET vm1 . CLOSEBRACKET
    (38) vectormatriz -> vm1 .

  ! shift/reduce conflict for CLOSEBRACKET resolved as shift
    CLOSEBRACKET    shift and go to state 213
    MULTIPLICATION  reduce using rule 38 (vectormatriz -> vm1 .)
    DIVISION        reduce using rule 38 (vectormatriz -> vm1 .)
    ADDITION        reduce using rule 38 (vectormatriz -> vm1 .)
    SUBSTRACTION    reduce using rule 38 (vectormatriz -> vm1 .)
    COMMA           reduce using rule 38 (vectormatriz -> vm1 .)

  ! CLOSEBRACKET    [ reduce using rule 38 (vectormatriz -> vm1 .) ]


state 176

    (39) vm1 -> OPENBRACKET vm2 . CLOSEBRACKET COMMA vm1
    (40) vm1 -> OPENBRACKET vm2 . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 214


state 177

    (41) vm2 -> exp . COMMA vm2
    (42) vm2 -> exp .

    COMMA           shift and go to state 215
    CLOSEBRACKET    reduce using rule 42 (vm2 -> exp .)


state 178

    (43) vm2 -> empty .

    CLOSEBRACKET    reduce using rule 43 (vm2 -> empty .)


state 179

    (16) dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET . CTEINT CLOSEBRACKET

    CTEINT          shift and go to state 216


state 180

    (28) assignment -> id equals assignment3 . SEMICOLON

    SEMICOLON       shift and go to state 217


state 181

    (29) assignment3 -> exp .

    SEMICOLON       reduce using rule 29 (assignment3 -> exp .)


state 182

    (30) assignment3 -> read .

    SEMICOLON       reduce using rule 30 (assignment3 -> read .)


state 183

    (85) condition -> IF head_cond body . condition1
    (86) condition1 -> . elseif head_cond body condition1
    (87) condition1 -> . else body
    (88) condition1 -> . empty
    (89) elseif -> . ELSEIF
    (90) else -> . ELSE
    (147) empty -> .

    ELSEIF          shift and go to state 222
    ELSE            shift and go to state 223
    IF              reduce using rule 147 (empty -> .)
    PRINT           reduce using rule 147 (empty -> .)
    READ            reduce using rule 147 (empty -> .)
    ID              reduce using rule 147 (empty -> .)
    RETURN          reduce using rule 147 (empty -> .)
    CIRCLE          reduce using rule 147 (empty -> .)
    SQUARE          reduce using rule 147 (empty -> .)
    TRIANGLE        reduce using rule 147 (empty -> .)
    RECTANGLE       reduce using rule 147 (empty -> .)
    HIDE_STAR       reduce using rule 147 (empty -> .)
    SHOW_STAR       reduce using rule 147 (empty -> .)
    COLOR_STAR      reduce using rule 147 (empty -> .)
    SIZE_STAR       reduce using rule 147 (empty -> .)
    SETXY           reduce using rule 147 (empty -> .)
    HAND_DOWN       reduce using rule 147 (empty -> .)
    HAND_UP         reduce using rule 147 (empty -> .)
    GO              reduce using rule 147 (empty -> .)
    LEFT            reduce using rule 147 (empty -> .)
    RIGHT           reduce using rule 147 (empty -> .)
    BACK            reduce using rule 147 (empty -> .)
    ARC             reduce using rule 147 (empty -> .)
    WHILE           reduce using rule 147 (empty -> .)
    FOR             reduce using rule 147 (empty -> .)
    CLOSEBRACES     reduce using rule 147 (empty -> .)

    condition1                     shift and go to state 218
    elseif                         shift and go to state 219
    else                           shift and go to state 220
    empty                          shift and go to state 221

state 184

    (91) head_cond -> OPENPAREN expression . close_condition
    (93) close_condition -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 225

    close_condition                shift and go to state 224

state 185

    (60) print -> PRINT OPENPAREN expression . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 226


state 186

    (61) read -> READ OPENPAREN id . read1 CLOSEPAREN SEMICOLON
    (62) read1 -> . OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (63) read1 -> . OPENBRACKET exp CLOSEBRACKET
    (64) read1 -> . empty
    (147) empty -> .

    OPENBRACKET     shift and go to state 228
    CLOSEPAREN      reduce using rule 147 (empty -> .)

    read1                          shift and go to state 227
    empty                          shift and go to state 229

state 187

    (66) id -> ID . vectormatriz
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENBRACKET     shift and go to state 115

    vectormatriz                   shift and go to state 127
    vm1                            shift and go to state 116

state 188

    (67) funCall -> ID iniciaFunCall funCall2 . terminaFunCall
    (69) terminaFunCall -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 231

    terminaFunCall                 shift and go to state 230

state 189

    (70) funCall2 -> funCallParam . funCall3
    (72) funCall3 -> . COMMA funCallParam funCall3
    (73) funCall3 -> . empty
    (147) empty -> .

    COMMA           shift and go to state 233
    CLOSEPAREN      reduce using rule 147 (empty -> .)

    funCall3                       shift and go to state 232
    empty                          shift and go to state 234

state 190

    (71) funCall2 -> empty .

    CLOSEPAREN      reduce using rule 71 (funCall2 -> empty .)


state 191

    (74) funCallParam -> exp .

    COMMA           reduce using rule 74 (funCallParam -> exp .)
    CLOSEPAREN      reduce using rule 74 (funCallParam -> exp .)


state 192

    (78) return -> RETURN return1 SEMICOLON .

    IF              reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    PRINT           reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    READ            reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    ID              reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    RETURN          reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    CIRCLE          reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    SQUARE          reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    TRIANGLE        reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    RECTANGLE       reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    HIDE_STAR       reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    SHOW_STAR       reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    COLOR_STAR      reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    SIZE_STAR       reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    SETXY           reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    HAND_DOWN       reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    HAND_UP         reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    GO              reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    LEFT            reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    RIGHT           reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    BACK            reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    ARC             reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    WHILE           reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    FOR             reduce using rule 78 (return -> RETURN return1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 78 (return -> RETURN return1 SEMICOLON .)


state 193

    (92) body -> OPENBRACES body1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 235


state 194

    (94) body1 -> stmt . body1
    (94) body1 -> . stmt body1
    (95) body1 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . funCall SEMICOLON
    (27) stmt -> . return
    (147) empty -> .
    (28) assignment -> . id equals assignment3 SEMICOLON
    (85) condition -> . IF head_cond body condition1
    (60) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for
    (61) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (106) graphstmt -> . graphfig
    (107) graphstmt -> . graphview
    (108) graphstmt -> . graphmove
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (78) return -> . RETURN return1 SEMICOLON
    (66) id -> . ID vectormatriz
    (101) while -> . while1 body
    (96) for -> . for1 body
    (109) graphfig -> . graphfig1 SEMICOLON
    (110) graphfig -> . graphfig2 SEMICOLON
    (125) graphview -> . graphview0 SEMICOLON
    (126) graphview -> . graphview1 SEMICOLON
    (127) graphview -> . graphview2 SEMICOLON
    (115) graphmove -> . graphmove0 SEMICOLON
    (116) graphmove -> . graphmove1 SEMICOLON
    (117) graphmove -> . graphmove2 SEMICOLON
    (102) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (97) for1 -> . forInit OPENPAREN ID for2
    (111) graphfig1 -> . CIRCLE unaExp
    (112) graphfig1 -> . SQUARE unaExp
    (113) graphfig2 -> . TRIANGLE dosExp
    (114) graphfig2 -> . RECTANGLE dosExp
    (128) graphview0 -> . HIDE_STAR
    (129) graphview0 -> . SHOW_STAR
    (130) graphview1 -> . COLOR_STAR unaExp
    (131) graphview1 -> . SIZE_STAR unaExp
    (132) graphview2 -> . SETXY dosExp
    (118) graphmove0 -> . HAND_DOWN
    (119) graphmove0 -> . HAND_UP
    (120) graphmove1 -> . GO unaExp
    (121) graphmove1 -> . LEFT unaExp
    (122) graphmove1 -> . RIGHT unaExp
    (123) graphmove1 -> . BACK unaExp
    (124) graphmove2 -> . ARC dosExp
    (103) while_w -> . WHILE
    (100) forInit -> . FOR

    CLOSEBRACES     reduce using rule 147 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    ID              shift and go to state 61
    RETURN          shift and go to state 62
    CIRCLE          shift and go to state 75
    SQUARE          shift and go to state 76
    TRIANGLE        shift and go to state 77
    RECTANGLE       shift and go to state 78
    HIDE_STAR       shift and go to state 79
    SHOW_STAR       shift and go to state 80
    COLOR_STAR      shift and go to state 81
    SIZE_STAR       shift and go to state 82
    SETXY           shift and go to state 83
    HAND_DOWN       shift and go to state 84
    HAND_UP         shift and go to state 85
    GO              shift and go to state 86
    LEFT            shift and go to state 87
    RIGHT           shift and go to state 88
    BACK            shift and go to state 89
    ARC             shift and go to state 90
    WHILE           shift and go to state 91
    FOR             shift and go to state 92

    stmt                           shift and go to state 194
    body1                          shift and go to state 236
    empty                          shift and go to state 195
    assignment                     shift and go to state 44
    condition                      shift and go to state 45
    print                          shift and go to state 46
    loop                           shift and go to state 47
    read                           shift and go to state 48
    graphstmt                      shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    while1                         shift and go to state 63
    for1                           shift and go to state 64
    graphfig1                      shift and go to state 65
    graphfig2                      shift and go to state 66
    graphview0                     shift and go to state 67
    graphview1                     shift and go to state 68
    graphview2                     shift and go to state 69
    graphmove0                     shift and go to state 70
    graphmove1                     shift and go to state 71
    graphmove2                     shift and go to state 72
    while_w                        shift and go to state 73
    forInit                        shift and go to state 74

state 195

    (95) body1 -> empty .

    CLOSEBRACES     reduce using rule 95 (body1 -> empty .)


state 196

    (102) while1 -> while_w OPENPAREN expression . CLOSEPAREN

    CLOSEPAREN      shift and go to state 237


state 197

    (97) for1 -> forInit OPENPAREN ID . for2
    (98) for2 -> . TWODOTS exp for3

    TWODOTS         shift and go to state 239

    for2                           shift and go to state 238

state 198

    (105) unaExp -> OPENPAREN exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 240


state 199

    (104) dosExp -> OPENPAREN exp . COMMA exp CLOSEPAREN

    COMMA           shift and go to state 241


state 200

    (46) function -> FUN functionI function2 inicia_fun declara_vars function4 . termina_fun
    (48) termina_fun -> . CLOSEBRACES

    CLOSEBRACES     shift and go to state 243

    termina_fun                    shift and go to state 242

state 201

    (52) function4 -> stmt . function4
    (52) function4 -> . stmt function4
    (53) function4 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . funCall SEMICOLON
    (27) stmt -> . return
    (147) empty -> .
    (28) assignment -> . id equals assignment3 SEMICOLON
    (85) condition -> . IF head_cond body condition1
    (60) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for
    (61) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (106) graphstmt -> . graphfig
    (107) graphstmt -> . graphview
    (108) graphstmt -> . graphmove
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (78) return -> . RETURN return1 SEMICOLON
    (66) id -> . ID vectormatriz
    (101) while -> . while1 body
    (96) for -> . for1 body
    (109) graphfig -> . graphfig1 SEMICOLON
    (110) graphfig -> . graphfig2 SEMICOLON
    (125) graphview -> . graphview0 SEMICOLON
    (126) graphview -> . graphview1 SEMICOLON
    (127) graphview -> . graphview2 SEMICOLON
    (115) graphmove -> . graphmove0 SEMICOLON
    (116) graphmove -> . graphmove1 SEMICOLON
    (117) graphmove -> . graphmove2 SEMICOLON
    (102) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (97) for1 -> . forInit OPENPAREN ID for2
    (111) graphfig1 -> . CIRCLE unaExp
    (112) graphfig1 -> . SQUARE unaExp
    (113) graphfig2 -> . TRIANGLE dosExp
    (114) graphfig2 -> . RECTANGLE dosExp
    (128) graphview0 -> . HIDE_STAR
    (129) graphview0 -> . SHOW_STAR
    (130) graphview1 -> . COLOR_STAR unaExp
    (131) graphview1 -> . SIZE_STAR unaExp
    (132) graphview2 -> . SETXY dosExp
    (118) graphmove0 -> . HAND_DOWN
    (119) graphmove0 -> . HAND_UP
    (120) graphmove1 -> . GO unaExp
    (121) graphmove1 -> . LEFT unaExp
    (122) graphmove1 -> . RIGHT unaExp
    (123) graphmove1 -> . BACK unaExp
    (124) graphmove2 -> . ARC dosExp
    (103) while_w -> . WHILE
    (100) forInit -> . FOR

    CLOSEBRACES     reduce using rule 147 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    ID              shift and go to state 61
    RETURN          shift and go to state 62
    CIRCLE          shift and go to state 75
    SQUARE          shift and go to state 76
    TRIANGLE        shift and go to state 77
    RECTANGLE       shift and go to state 78
    HIDE_STAR       shift and go to state 79
    SHOW_STAR       shift and go to state 80
    COLOR_STAR      shift and go to state 81
    SIZE_STAR       shift and go to state 82
    SETXY           shift and go to state 83
    HAND_DOWN       shift and go to state 84
    HAND_UP         shift and go to state 85
    GO              shift and go to state 86
    LEFT            shift and go to state 87
    RIGHT           shift and go to state 88
    BACK            shift and go to state 89
    ARC             shift and go to state 90
    WHILE           shift and go to state 91
    FOR             shift and go to state 92

    stmt                           shift and go to state 201
    function4                      shift and go to state 244
    empty                          shift and go to state 202
    assignment                     shift and go to state 44
    condition                      shift and go to state 45
    print                          shift and go to state 46
    loop                           shift and go to state 47
    read                           shift and go to state 48
    graphstmt                      shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    while1                         shift and go to state 63
    for1                           shift and go to state 64
    graphfig1                      shift and go to state 65
    graphfig2                      shift and go to state 66
    graphview0                     shift and go to state 67
    graphview1                     shift and go to state 68
    graphview2                     shift and go to state 69
    graphmove0                     shift and go to state 70
    graphmove1                     shift and go to state 71
    graphmove2                     shift and go to state 72
    while_w                        shift and go to state 73
    forInit                        shift and go to state 74

state 202

    (53) function4 -> empty .

    CLOSEBRACES     reduce using rule 53 (function4 -> empty .)


state 203

    (54) function5 -> COMMA funParam . function5
    (54) function5 -> . COMMA funParam function5
    (55) function5 -> . empty
    (147) empty -> .

    COMMA           shift and go to state 162
    CLOSEPAREN      reduce using rule 147 (empty -> .)

    function5                      shift and go to state 245
    empty                          shift and go to state 163

state 204

    (136) exp -> term exp_o exp .

    SEMICOLON       reduce using rule 136 (exp -> term exp_o exp .)
    GREATER         reduce using rule 136 (exp -> term exp_o exp .)
    LESS            reduce using rule 136 (exp -> term exp_o exp .)
    NOTEQUAL        reduce using rule 136 (exp -> term exp_o exp .)
    ISEQUAL         reduce using rule 136 (exp -> term exp_o exp .)
    CLOSEPAREN      reduce using rule 136 (exp -> term exp_o exp .)
    COMMA           reduce using rule 136 (exp -> term exp_o exp .)
    CLOSEBRACKET    reduce using rule 136 (exp -> term exp_o exp .)


state 205

    (141) term -> factor term_o term .

    ADDITION        reduce using rule 141 (term -> factor term_o term .)
    SUBSTRACTION    reduce using rule 141 (term -> factor term_o term .)
    SEMICOLON       reduce using rule 141 (term -> factor term_o term .)
    GREATER         reduce using rule 141 (term -> factor term_o term .)
    LESS            reduce using rule 141 (term -> factor term_o term .)
    NOTEQUAL        reduce using rule 141 (term -> factor term_o term .)
    ISEQUAL         reduce using rule 141 (term -> factor term_o term .)
    CLOSEPAREN      reduce using rule 141 (term -> factor term_o term .)
    COMMA           reduce using rule 141 (term -> factor term_o term .)
    CLOSEBRACKET    reduce using rule 141 (term -> factor term_o term .)


state 206

    (146) factor -> openP expression closeP .

    MULTIPLICATION  reduce using rule 146 (factor -> openP expression closeP .)
    DIVISION        reduce using rule 146 (factor -> openP expression closeP .)
    ADDITION        reduce using rule 146 (factor -> openP expression closeP .)
    SUBSTRACTION    reduce using rule 146 (factor -> openP expression closeP .)
    SEMICOLON       reduce using rule 146 (factor -> openP expression closeP .)
    GREATER         reduce using rule 146 (factor -> openP expression closeP .)
    LESS            reduce using rule 146 (factor -> openP expression closeP .)
    NOTEQUAL        reduce using rule 146 (factor -> openP expression closeP .)
    ISEQUAL         reduce using rule 146 (factor -> openP expression closeP .)
    CLOSEPAREN      reduce using rule 146 (factor -> openP expression closeP .)
    COMMA           reduce using rule 146 (factor -> openP expression closeP .)
    CLOSEBRACKET    reduce using rule 146 (factor -> openP expression closeP .)


state 207

    (140) closeP -> CLOSEPAREN .

    MULTIPLICATION  reduce using rule 140 (closeP -> CLOSEPAREN .)
    DIVISION        reduce using rule 140 (closeP -> CLOSEPAREN .)
    ADDITION        reduce using rule 140 (closeP -> CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 140 (closeP -> CLOSEPAREN .)
    SEMICOLON       reduce using rule 140 (closeP -> CLOSEPAREN .)
    GREATER         reduce using rule 140 (closeP -> CLOSEPAREN .)
    LESS            reduce using rule 140 (closeP -> CLOSEPAREN .)
    NOTEQUAL        reduce using rule 140 (closeP -> CLOSEPAREN .)
    ISEQUAL         reduce using rule 140 (closeP -> CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 140 (closeP -> CLOSEPAREN .)
    COMMA           reduce using rule 140 (closeP -> CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 140 (closeP -> CLOSEPAREN .)


state 208

    (133) expression -> exp loper . exp
    (135) exp -> . term
    (136) exp -> . term exp_o exp
    (141) term -> . factor term_o term
    (142) term -> . factor
    (145) factor -> . vcte
    (146) factor -> . openP expression closeP
    (31) vcte -> . cte_int
    (32) vcte -> . cte_float
    (33) vcte -> . cte_string
    (34) vcte -> . id
    (35) vcte -> . funCall
    (36) vcte -> . vectormatriz
    (139) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (66) id -> . ID vectormatriz
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 111
    CTEINT          shift and go to state 112
    CTEFLOAT        shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 99
    OPENBRACKET     shift and go to state 115

    exp                            shift and go to state 246
    term                           shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openP                          shift and go to state 104
    cte_int                        shift and go to state 105
    cte_float                      shift and go to state 106
    cte_string                     shift and go to state 107
    id                             shift and go to state 108
    funCall                        shift and go to state 109
    vectormatriz                   shift and go to state 110
    vm1                            shift and go to state 116

state 209

    (81) loper -> GREATER .

    OPENPAREN       reduce using rule 81 (loper -> GREATER .)
    CTEINT          reduce using rule 81 (loper -> GREATER .)
    CTEFLOAT        reduce using rule 81 (loper -> GREATER .)
    CTESTRING       reduce using rule 81 (loper -> GREATER .)
    ID              reduce using rule 81 (loper -> GREATER .)
    OPENBRACKET     reduce using rule 81 (loper -> GREATER .)


state 210

    (82) loper -> LESS .

    OPENPAREN       reduce using rule 82 (loper -> LESS .)
    CTEINT          reduce using rule 82 (loper -> LESS .)
    CTEFLOAT        reduce using rule 82 (loper -> LESS .)
    CTESTRING       reduce using rule 82 (loper -> LESS .)
    ID              reduce using rule 82 (loper -> LESS .)
    OPENBRACKET     reduce using rule 82 (loper -> LESS .)


state 211

    (83) loper -> NOTEQUAL .

    OPENPAREN       reduce using rule 83 (loper -> NOTEQUAL .)
    CTEINT          reduce using rule 83 (loper -> NOTEQUAL .)
    CTEFLOAT        reduce using rule 83 (loper -> NOTEQUAL .)
    CTESTRING       reduce using rule 83 (loper -> NOTEQUAL .)
    ID              reduce using rule 83 (loper -> NOTEQUAL .)
    OPENBRACKET     reduce using rule 83 (loper -> NOTEQUAL .)


state 212

    (84) loper -> ISEQUAL .

    OPENPAREN       reduce using rule 84 (loper -> ISEQUAL .)
    CTEINT          reduce using rule 84 (loper -> ISEQUAL .)
    CTEFLOAT        reduce using rule 84 (loper -> ISEQUAL .)
    CTESTRING       reduce using rule 84 (loper -> ISEQUAL .)
    ID              reduce using rule 84 (loper -> ISEQUAL .)
    OPENBRACKET     reduce using rule 84 (loper -> ISEQUAL .)


state 213

    (37) vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .

    MULTIPLICATION  reduce using rule 37 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    DIVISION        reduce using rule 37 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    ADDITION        reduce using rule 37 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    SUBSTRACTION    reduce using rule 37 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    SEMICOLON       reduce using rule 37 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    EQUALS          reduce using rule 37 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    GREATER         reduce using rule 37 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    LESS            reduce using rule 37 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 37 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    ISEQUAL         reduce using rule 37 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 37 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    COMMA           reduce using rule 37 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 37 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    OPENBRACKET     reduce using rule 37 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)


state 214

    (39) vm1 -> OPENBRACKET vm2 CLOSEBRACKET . COMMA vm1
    (40) vm1 -> OPENBRACKET vm2 CLOSEBRACKET .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 247
    MULTIPLICATION  reduce using rule 40 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    DIVISION        reduce using rule 40 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    ADDITION        reduce using rule 40 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    SUBSTRACTION    reduce using rule 40 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    SEMICOLON       reduce using rule 40 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    EQUALS          reduce using rule 40 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    GREATER         reduce using rule 40 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    LESS            reduce using rule 40 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 40 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    ISEQUAL         reduce using rule 40 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 40 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 40 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    OPENBRACKET     reduce using rule 40 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)

  ! COMMA           [ reduce using rule 40 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .) ]


state 215

    (41) vm2 -> exp COMMA . vm2
    (41) vm2 -> . exp COMMA vm2
    (42) vm2 -> . exp
    (43) vm2 -> . empty
    (135) exp -> . term
    (136) exp -> . term exp_o exp
    (147) empty -> .
    (141) term -> . factor term_o term
    (142) term -> . factor
    (145) factor -> . vcte
    (146) factor -> . openP expression closeP
    (31) vcte -> . cte_int
    (32) vcte -> . cte_float
    (33) vcte -> . cte_string
    (34) vcte -> . id
    (35) vcte -> . funCall
    (36) vcte -> . vectormatriz
    (139) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (66) id -> . ID vectormatriz
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    CLOSEBRACKET    reduce using rule 147 (empty -> .)
    OPENPAREN       shift and go to state 111
    CTEINT          shift and go to state 112
    CTEFLOAT        shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 99
    OPENBRACKET     shift and go to state 115

    exp                            shift and go to state 177
    vm2                            shift and go to state 248
    empty                          shift and go to state 178
    term                           shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openP                          shift and go to state 104
    cte_int                        shift and go to state 105
    cte_float                      shift and go to state 106
    cte_string                     shift and go to state 107
    id                             shift and go to state 108
    funCall                        shift and go to state 109
    vectormatriz                   shift and go to state 110
    vm1                            shift and go to state 116

state 216

    (16) dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 249


state 217

    (28) assignment -> id equals assignment3 SEMICOLON .

    IF              reduce using rule 28 (assignment -> id equals assignment3 SEMICOLON .)
    PRINT           reduce using rule 28 (assignment -> id equals assignment3 SEMICOLON .)
    READ            reduce using rule 28 (assignment -> id equals assignment3 SEMICOLON .)
    ID              reduce using rule 28 (assignment -> id equals assignment3 SEMICOLON .)
    RETURN          reduce using rule 28 (assignment -> id equals assignment3 SEMICOLON .)
    CIRCLE          reduce using rule 28 (assignment -> id equals assignment3 SEMICOLON .)
    SQUARE          reduce using rule 28 (assignment -> id equals assignment3 SEMICOLON .)
    TRIANGLE        reduce using rule 28 (assignment -> id equals assignment3 SEMICOLON .)
    RECTANGLE       reduce using rule 28 (assignment -> id equals assignment3 SEMICOLON .)
    HIDE_STAR       reduce using rule 28 (assignment -> id equals assignment3 SEMICOLON .)
    SHOW_STAR       reduce using rule 28 (assignment -> id equals assignment3 SEMICOLON .)
    COLOR_STAR      reduce using rule 28 (assignment -> id equals assignment3 SEMICOLON .)
    SIZE_STAR       reduce using rule 28 (assignment -> id equals assignment3 SEMICOLON .)
    SETXY           reduce using rule 28 (assignment -> id equals assignment3 SEMICOLON .)
    HAND_DOWN       reduce using rule 28 (assignment -> id equals assignment3 SEMICOLON .)
    HAND_UP         reduce using rule 28 (assignment -> id equals assignment3 SEMICOLON .)
    GO              reduce using rule 28 (assignment -> id equals assignment3 SEMICOLON .)
    LEFT            reduce using rule 28 (assignment -> id equals assignment3 SEMICOLON .)
    RIGHT           reduce using rule 28 (assignment -> id equals assignment3 SEMICOLON .)
    BACK            reduce using rule 28 (assignment -> id equals assignment3 SEMICOLON .)
    ARC             reduce using rule 28 (assignment -> id equals assignment3 SEMICOLON .)
    WHILE           reduce using rule 28 (assignment -> id equals assignment3 SEMICOLON .)
    FOR             reduce using rule 28 (assignment -> id equals assignment3 SEMICOLON .)
    CLOSEBRACES     reduce using rule 28 (assignment -> id equals assignment3 SEMICOLON .)


state 218

    (85) condition -> IF head_cond body condition1 .

    IF              reduce using rule 85 (condition -> IF head_cond body condition1 .)
    PRINT           reduce using rule 85 (condition -> IF head_cond body condition1 .)
    READ            reduce using rule 85 (condition -> IF head_cond body condition1 .)
    ID              reduce using rule 85 (condition -> IF head_cond body condition1 .)
    RETURN          reduce using rule 85 (condition -> IF head_cond body condition1 .)
    CIRCLE          reduce using rule 85 (condition -> IF head_cond body condition1 .)
    SQUARE          reduce using rule 85 (condition -> IF head_cond body condition1 .)
    TRIANGLE        reduce using rule 85 (condition -> IF head_cond body condition1 .)
    RECTANGLE       reduce using rule 85 (condition -> IF head_cond body condition1 .)
    HIDE_STAR       reduce using rule 85 (condition -> IF head_cond body condition1 .)
    SHOW_STAR       reduce using rule 85 (condition -> IF head_cond body condition1 .)
    COLOR_STAR      reduce using rule 85 (condition -> IF head_cond body condition1 .)
    SIZE_STAR       reduce using rule 85 (condition -> IF head_cond body condition1 .)
    SETXY           reduce using rule 85 (condition -> IF head_cond body condition1 .)
    HAND_DOWN       reduce using rule 85 (condition -> IF head_cond body condition1 .)
    HAND_UP         reduce using rule 85 (condition -> IF head_cond body condition1 .)
    GO              reduce using rule 85 (condition -> IF head_cond body condition1 .)
    LEFT            reduce using rule 85 (condition -> IF head_cond body condition1 .)
    RIGHT           reduce using rule 85 (condition -> IF head_cond body condition1 .)
    BACK            reduce using rule 85 (condition -> IF head_cond body condition1 .)
    ARC             reduce using rule 85 (condition -> IF head_cond body condition1 .)
    WHILE           reduce using rule 85 (condition -> IF head_cond body condition1 .)
    FOR             reduce using rule 85 (condition -> IF head_cond body condition1 .)
    CLOSEBRACES     reduce using rule 85 (condition -> IF head_cond body condition1 .)


state 219

    (86) condition1 -> elseif . head_cond body condition1
    (91) head_cond -> . OPENPAREN expression close_condition

    OPENPAREN       shift and go to state 123

    head_cond                      shift and go to state 250

state 220

    (87) condition1 -> else . body
    (92) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 133

    body                           shift and go to state 251

state 221

    (88) condition1 -> empty .

    IF              reduce using rule 88 (condition1 -> empty .)
    PRINT           reduce using rule 88 (condition1 -> empty .)
    READ            reduce using rule 88 (condition1 -> empty .)
    ID              reduce using rule 88 (condition1 -> empty .)
    RETURN          reduce using rule 88 (condition1 -> empty .)
    CIRCLE          reduce using rule 88 (condition1 -> empty .)
    SQUARE          reduce using rule 88 (condition1 -> empty .)
    TRIANGLE        reduce using rule 88 (condition1 -> empty .)
    RECTANGLE       reduce using rule 88 (condition1 -> empty .)
    HIDE_STAR       reduce using rule 88 (condition1 -> empty .)
    SHOW_STAR       reduce using rule 88 (condition1 -> empty .)
    COLOR_STAR      reduce using rule 88 (condition1 -> empty .)
    SIZE_STAR       reduce using rule 88 (condition1 -> empty .)
    SETXY           reduce using rule 88 (condition1 -> empty .)
    HAND_DOWN       reduce using rule 88 (condition1 -> empty .)
    HAND_UP         reduce using rule 88 (condition1 -> empty .)
    GO              reduce using rule 88 (condition1 -> empty .)
    LEFT            reduce using rule 88 (condition1 -> empty .)
    RIGHT           reduce using rule 88 (condition1 -> empty .)
    BACK            reduce using rule 88 (condition1 -> empty .)
    ARC             reduce using rule 88 (condition1 -> empty .)
    WHILE           reduce using rule 88 (condition1 -> empty .)
    FOR             reduce using rule 88 (condition1 -> empty .)
    CLOSEBRACES     reduce using rule 88 (condition1 -> empty .)


state 222

    (89) elseif -> ELSEIF .

    OPENPAREN       reduce using rule 89 (elseif -> ELSEIF .)


state 223

    (90) else -> ELSE .

    OPENBRACES      reduce using rule 90 (else -> ELSE .)


state 224

    (91) head_cond -> OPENPAREN expression close_condition .

    OPENBRACES      reduce using rule 91 (head_cond -> OPENPAREN expression close_condition .)


state 225

    (93) close_condition -> CLOSEPAREN .

    OPENBRACES      reduce using rule 93 (close_condition -> CLOSEPAREN .)


state 226

    (60) print -> PRINT OPENPAREN expression CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 252


state 227

    (61) read -> READ OPENPAREN id read1 . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 253


state 228

    (62) read1 -> OPENBRACKET . exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (63) read1 -> OPENBRACKET . exp CLOSEBRACKET
    (135) exp -> . term
    (136) exp -> . term exp_o exp
    (141) term -> . factor term_o term
    (142) term -> . factor
    (145) factor -> . vcte
    (146) factor -> . openP expression closeP
    (31) vcte -> . cte_int
    (32) vcte -> . cte_float
    (33) vcte -> . cte_string
    (34) vcte -> . id
    (35) vcte -> . funCall
    (36) vcte -> . vectormatriz
    (139) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (66) id -> . ID vectormatriz
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 111
    CTEINT          shift and go to state 112
    CTEFLOAT        shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 99
    OPENBRACKET     shift and go to state 115

    exp                            shift and go to state 254
    term                           shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openP                          shift and go to state 104
    cte_int                        shift and go to state 105
    cte_float                      shift and go to state 106
    cte_string                     shift and go to state 107
    id                             shift and go to state 108
    funCall                        shift and go to state 109
    vectormatriz                   shift and go to state 110
    vm1                            shift and go to state 116

state 229

    (64) read1 -> empty .

    CLOSEPAREN      reduce using rule 64 (read1 -> empty .)


state 230

    (67) funCall -> ID iniciaFunCall funCall2 terminaFunCall .

    SEMICOLON       reduce using rule 67 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    MULTIPLICATION  reduce using rule 67 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    DIVISION        reduce using rule 67 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    ADDITION        reduce using rule 67 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    SUBSTRACTION    reduce using rule 67 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    GREATER         reduce using rule 67 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    LESS            reduce using rule 67 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    NOTEQUAL        reduce using rule 67 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    ISEQUAL         reduce using rule 67 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    CLOSEPAREN      reduce using rule 67 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    COMMA           reduce using rule 67 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    CLOSEBRACKET    reduce using rule 67 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)


state 231

    (69) terminaFunCall -> CLOSEPAREN .

    SEMICOLON       reduce using rule 69 (terminaFunCall -> CLOSEPAREN .)
    MULTIPLICATION  reduce using rule 69 (terminaFunCall -> CLOSEPAREN .)
    DIVISION        reduce using rule 69 (terminaFunCall -> CLOSEPAREN .)
    ADDITION        reduce using rule 69 (terminaFunCall -> CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 69 (terminaFunCall -> CLOSEPAREN .)
    GREATER         reduce using rule 69 (terminaFunCall -> CLOSEPAREN .)
    LESS            reduce using rule 69 (terminaFunCall -> CLOSEPAREN .)
    NOTEQUAL        reduce using rule 69 (terminaFunCall -> CLOSEPAREN .)
    ISEQUAL         reduce using rule 69 (terminaFunCall -> CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 69 (terminaFunCall -> CLOSEPAREN .)
    COMMA           reduce using rule 69 (terminaFunCall -> CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 69 (terminaFunCall -> CLOSEPAREN .)


state 232

    (70) funCall2 -> funCallParam funCall3 .

    CLOSEPAREN      reduce using rule 70 (funCall2 -> funCallParam funCall3 .)


state 233

    (72) funCall3 -> COMMA . funCallParam funCall3
    (74) funCallParam -> . exp
    (135) exp -> . term
    (136) exp -> . term exp_o exp
    (141) term -> . factor term_o term
    (142) term -> . factor
    (145) factor -> . vcte
    (146) factor -> . openP expression closeP
    (31) vcte -> . cte_int
    (32) vcte -> . cte_float
    (33) vcte -> . cte_string
    (34) vcte -> . id
    (35) vcte -> . funCall
    (36) vcte -> . vectormatriz
    (139) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (66) id -> . ID vectormatriz
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 111
    CTEINT          shift and go to state 112
    CTEFLOAT        shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 99
    OPENBRACKET     shift and go to state 115

    funCallParam                   shift and go to state 255
    exp                            shift and go to state 191
    term                           shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openP                          shift and go to state 104
    cte_int                        shift and go to state 105
    cte_float                      shift and go to state 106
    cte_string                     shift and go to state 107
    id                             shift and go to state 108
    funCall                        shift and go to state 109
    vectormatriz                   shift and go to state 110
    vm1                            shift and go to state 116

state 234

    (73) funCall3 -> empty .

    CLOSEPAREN      reduce using rule 73 (funCall3 -> empty .)


state 235

    (92) body -> OPENBRACES body1 CLOSEBRACES .

    IF              reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    PRINT           reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    READ            reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    ID              reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    RETURN          reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    CIRCLE          reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    SQUARE          reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    SETXY           reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_UP         reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    GO              reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    LEFT            reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    RIGHT           reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    BACK            reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    ARC             reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    WHILE           reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    FOR             reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSEIF          reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSE            reduce using rule 92 (body -> OPENBRACES body1 CLOSEBRACES .)


state 236

    (94) body1 -> stmt body1 .

    CLOSEBRACES     reduce using rule 94 (body1 -> stmt body1 .)


state 237

    (102) while1 -> while_w OPENPAREN expression CLOSEPAREN .

    OPENBRACES      reduce using rule 102 (while1 -> while_w OPENPAREN expression CLOSEPAREN .)


state 238

    (97) for1 -> forInit OPENPAREN ID for2 .

    OPENBRACES      reduce using rule 97 (for1 -> forInit OPENPAREN ID for2 .)


state 239

    (98) for2 -> TWODOTS . exp for3
    (135) exp -> . term
    (136) exp -> . term exp_o exp
    (141) term -> . factor term_o term
    (142) term -> . factor
    (145) factor -> . vcte
    (146) factor -> . openP expression closeP
    (31) vcte -> . cte_int
    (32) vcte -> . cte_float
    (33) vcte -> . cte_string
    (34) vcte -> . id
    (35) vcte -> . funCall
    (36) vcte -> . vectormatriz
    (139) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (66) id -> . ID vectormatriz
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 111
    CTEINT          shift and go to state 112
    CTEFLOAT        shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 99
    OPENBRACKET     shift and go to state 115

    exp                            shift and go to state 256
    term                           shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openP                          shift and go to state 104
    cte_int                        shift and go to state 105
    cte_float                      shift and go to state 106
    cte_string                     shift and go to state 107
    id                             shift and go to state 108
    funCall                        shift and go to state 109
    vectormatriz                   shift and go to state 110
    vm1                            shift and go to state 116

state 240

    (105) unaExp -> OPENPAREN exp CLOSEPAREN .

    SEMICOLON       reduce using rule 105 (unaExp -> OPENPAREN exp CLOSEPAREN .)


state 241

    (104) dosExp -> OPENPAREN exp COMMA . exp CLOSEPAREN
    (135) exp -> . term
    (136) exp -> . term exp_o exp
    (141) term -> . factor term_o term
    (142) term -> . factor
    (145) factor -> . vcte
    (146) factor -> . openP expression closeP
    (31) vcte -> . cte_int
    (32) vcte -> . cte_float
    (33) vcte -> . cte_string
    (34) vcte -> . id
    (35) vcte -> . funCall
    (36) vcte -> . vectormatriz
    (139) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (66) id -> . ID vectormatriz
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 111
    CTEINT          shift and go to state 112
    CTEFLOAT        shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 99
    OPENBRACKET     shift and go to state 115

    exp                            shift and go to state 257
    term                           shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openP                          shift and go to state 104
    cte_int                        shift and go to state 105
    cte_float                      shift and go to state 106
    cte_string                     shift and go to state 107
    id                             shift and go to state 108
    funCall                        shift and go to state 109
    vectormatriz                   shift and go to state 110
    vm1                            shift and go to state 116

state 242

    (46) function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .

    FUN             reduce using rule 46 (function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .)
    MULTIPLICATION  reduce using rule 46 (function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .)


state 243

    (48) termina_fun -> CLOSEBRACES .

    FUN             reduce using rule 48 (termina_fun -> CLOSEBRACES .)
    MULTIPLICATION  reduce using rule 48 (termina_fun -> CLOSEBRACES .)


state 244

    (52) function4 -> stmt function4 .

    CLOSEBRACES     reduce using rule 52 (function4 -> stmt function4 .)


state 245

    (54) function5 -> COMMA funParam function5 .

    CLOSEPAREN      reduce using rule 54 (function5 -> COMMA funParam function5 .)


state 246

    (133) expression -> exp loper exp .

    CLOSEPAREN      reduce using rule 133 (expression -> exp loper exp .)


state 247

    (39) vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA . vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENBRACKET     shift and go to state 258

    vm1                            shift and go to state 259

state 248

    (41) vm2 -> exp COMMA vm2 .

    CLOSEBRACKET    reduce using rule 41 (vm2 -> exp COMMA vm2 .)


state 249

    (16) dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET .

    SEMICOLON       reduce using rule 16 (dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET .)
    EQUALS          reduce using rule 16 (dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET .)


state 250

    (86) condition1 -> elseif head_cond . body condition1
    (92) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 133

    body                           shift and go to state 260

state 251

    (87) condition1 -> else body .

    IF              reduce using rule 87 (condition1 -> else body .)
    PRINT           reduce using rule 87 (condition1 -> else body .)
    READ            reduce using rule 87 (condition1 -> else body .)
    ID              reduce using rule 87 (condition1 -> else body .)
    RETURN          reduce using rule 87 (condition1 -> else body .)
    CIRCLE          reduce using rule 87 (condition1 -> else body .)
    SQUARE          reduce using rule 87 (condition1 -> else body .)
    TRIANGLE        reduce using rule 87 (condition1 -> else body .)
    RECTANGLE       reduce using rule 87 (condition1 -> else body .)
    HIDE_STAR       reduce using rule 87 (condition1 -> else body .)
    SHOW_STAR       reduce using rule 87 (condition1 -> else body .)
    COLOR_STAR      reduce using rule 87 (condition1 -> else body .)
    SIZE_STAR       reduce using rule 87 (condition1 -> else body .)
    SETXY           reduce using rule 87 (condition1 -> else body .)
    HAND_DOWN       reduce using rule 87 (condition1 -> else body .)
    HAND_UP         reduce using rule 87 (condition1 -> else body .)
    GO              reduce using rule 87 (condition1 -> else body .)
    LEFT            reduce using rule 87 (condition1 -> else body .)
    RIGHT           reduce using rule 87 (condition1 -> else body .)
    BACK            reduce using rule 87 (condition1 -> else body .)
    ARC             reduce using rule 87 (condition1 -> else body .)
    WHILE           reduce using rule 87 (condition1 -> else body .)
    FOR             reduce using rule 87 (condition1 -> else body .)
    CLOSEBRACES     reduce using rule 87 (condition1 -> else body .)


state 252

    (60) print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .

    IF              reduce using rule 60 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 60 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 60 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 60 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 60 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 60 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 60 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 60 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 60 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 60 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 60 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 60 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 60 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 60 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 60 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 60 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 60 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 60 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 60 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 60 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 60 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 60 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 60 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 60 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)


state 253

    (61) read -> READ OPENPAREN id read1 CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 261


state 254

    (62) read1 -> OPENBRACKET exp . CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (63) read1 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 262


state 255

    (72) funCall3 -> COMMA funCallParam . funCall3
    (72) funCall3 -> . COMMA funCallParam funCall3
    (73) funCall3 -> . empty
    (147) empty -> .

    COMMA           shift and go to state 233
    CLOSEPAREN      reduce using rule 147 (empty -> .)

    funCall3                       shift and go to state 263
    empty                          shift and go to state 234

state 256

    (98) for2 -> TWODOTS exp . for3
    (99) for3 -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 265

    for3                           shift and go to state 264

state 257

    (104) dosExp -> OPENPAREN exp COMMA exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 266


state 258

    (39) vm1 -> OPENBRACKET . vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> OPENBRACKET . vm2 CLOSEBRACKET
    (41) vm2 -> . exp COMMA vm2
    (42) vm2 -> . exp
    (43) vm2 -> . empty
    (135) exp -> . term
    (136) exp -> . term exp_o exp
    (147) empty -> .
    (141) term -> . factor term_o term
    (142) term -> . factor
    (145) factor -> . vcte
    (146) factor -> . openP expression closeP
    (31) vcte -> . cte_int
    (32) vcte -> . cte_float
    (33) vcte -> . cte_string
    (34) vcte -> . id
    (35) vcte -> . funCall
    (36) vcte -> . vectormatriz
    (139) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (66) id -> . ID vectormatriz
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    CLOSEBRACKET    reduce using rule 147 (empty -> .)
    OPENPAREN       shift and go to state 111
    CTEINT          shift and go to state 112
    CTEFLOAT        shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 99
    OPENBRACKET     shift and go to state 115

    vm2                            shift and go to state 176
    vm1                            shift and go to state 116
    exp                            shift and go to state 177
    empty                          shift and go to state 178
    term                           shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openP                          shift and go to state 104
    cte_int                        shift and go to state 105
    cte_float                      shift and go to state 106
    cte_string                     shift and go to state 107
    id                             shift and go to state 108
    funCall                        shift and go to state 109
    vectormatriz                   shift and go to state 110

state 259

    (39) vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .

    MULTIPLICATION  reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    DIVISION        reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    ADDITION        reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    SUBSTRACTION    reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    SEMICOLON       reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    EQUALS          reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    GREATER         reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    LESS            reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    NOTEQUAL        reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    ISEQUAL         reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    CLOSEPAREN      reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    COMMA           reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    CLOSEBRACKET    reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    OPENBRACKET     reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)


state 260

    (86) condition1 -> elseif head_cond body . condition1
    (86) condition1 -> . elseif head_cond body condition1
    (87) condition1 -> . else body
    (88) condition1 -> . empty
    (89) elseif -> . ELSEIF
    (90) else -> . ELSE
    (147) empty -> .

    ELSEIF          shift and go to state 222
    ELSE            shift and go to state 223
    IF              reduce using rule 147 (empty -> .)
    PRINT           reduce using rule 147 (empty -> .)
    READ            reduce using rule 147 (empty -> .)
    ID              reduce using rule 147 (empty -> .)
    RETURN          reduce using rule 147 (empty -> .)
    CIRCLE          reduce using rule 147 (empty -> .)
    SQUARE          reduce using rule 147 (empty -> .)
    TRIANGLE        reduce using rule 147 (empty -> .)
    RECTANGLE       reduce using rule 147 (empty -> .)
    HIDE_STAR       reduce using rule 147 (empty -> .)
    SHOW_STAR       reduce using rule 147 (empty -> .)
    COLOR_STAR      reduce using rule 147 (empty -> .)
    SIZE_STAR       reduce using rule 147 (empty -> .)
    SETXY           reduce using rule 147 (empty -> .)
    HAND_DOWN       reduce using rule 147 (empty -> .)
    HAND_UP         reduce using rule 147 (empty -> .)
    GO              reduce using rule 147 (empty -> .)
    LEFT            reduce using rule 147 (empty -> .)
    RIGHT           reduce using rule 147 (empty -> .)
    BACK            reduce using rule 147 (empty -> .)
    ARC             reduce using rule 147 (empty -> .)
    WHILE           reduce using rule 147 (empty -> .)
    FOR             reduce using rule 147 (empty -> .)
    CLOSEBRACES     reduce using rule 147 (empty -> .)

    elseif                         shift and go to state 219
    condition1                     shift and go to state 267
    else                           shift and go to state 220
    empty                          shift and go to state 221

state 261

    (61) read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .

    IF              reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 61 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)


state 262

    (62) read1 -> OPENBRACKET exp CLOSEBRACKET . OPENBRACKET exp CLOSEBRACKET
    (63) read1 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     shift and go to state 268
    CLOSEPAREN      reduce using rule 63 (read1 -> OPENBRACKET exp CLOSEBRACKET .)


state 263

    (72) funCall3 -> COMMA funCallParam funCall3 .

    CLOSEPAREN      reduce using rule 72 (funCall3 -> COMMA funCallParam funCall3 .)


state 264

    (98) for2 -> TWODOTS exp for3 .

    OPENBRACES      reduce using rule 98 (for2 -> TWODOTS exp for3 .)


state 265

    (99) for3 -> CLOSEPAREN .

    OPENBRACES      reduce using rule 99 (for3 -> CLOSEPAREN .)


state 266

    (104) dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN .

    SEMICOLON       reduce using rule 104 (dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN .)


state 267

    (86) condition1 -> elseif head_cond body condition1 .

    IF              reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    PRINT           reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    READ            reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    ID              reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    RETURN          reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    CIRCLE          reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    SQUARE          reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    TRIANGLE        reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    RECTANGLE       reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    HIDE_STAR       reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    SHOW_STAR       reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    COLOR_STAR      reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    SIZE_STAR       reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    SETXY           reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    HAND_DOWN       reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    HAND_UP         reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    GO              reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    LEFT            reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    RIGHT           reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    BACK            reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    ARC             reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    WHILE           reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    FOR             reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)
    CLOSEBRACES     reduce using rule 86 (condition1 -> elseif head_cond body condition1 .)


state 268

    (62) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET . exp CLOSEBRACKET
    (135) exp -> . term
    (136) exp -> . term exp_o exp
    (141) term -> . factor term_o term
    (142) term -> . factor
    (145) factor -> . vcte
    (146) factor -> . openP expression closeP
    (31) vcte -> . cte_int
    (32) vcte -> . cte_float
    (33) vcte -> . cte_string
    (34) vcte -> . id
    (35) vcte -> . funCall
    (36) vcte -> . vectormatriz
    (139) openP -> . OPENPAREN
    (75) cte_int -> . CTEINT
    (76) cte_float -> . CTEFLOAT
    (77) cte_string -> . CTESTRING
    (66) id -> . ID vectormatriz
    (67) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (37) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (38) vectormatriz -> . vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (40) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 111
    CTEINT          shift and go to state 112
    CTEFLOAT        shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 99
    OPENBRACKET     shift and go to state 115

    exp                            shift and go to state 269
    term                           shift and go to state 101
    factor                         shift and go to state 102
    vcte                           shift and go to state 103
    openP                          shift and go to state 104
    cte_int                        shift and go to state 105
    cte_float                      shift and go to state 106
    cte_string                     shift and go to state 107
    id                             shift and go to state 108
    funCall                        shift and go to state 109
    vectormatriz                   shift and go to state 110
    vm1                            shift and go to state 116

state 269

    (62) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 270


state 270

    (62) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .

    CLOSEPAREN      reduce using rule 62 (read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CLOSEBRACKET in state 175 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 214 resolved as shift
WARNING: reduce/reduce conflict in state 130 resolved using rule (return1 -> vcte)
WARNING: rejected rule (factor -> vcte) in state 130
