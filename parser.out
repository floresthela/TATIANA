Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON declara_vars program_fun star
Rule 2     program_fun -> funs
Rule 3     funs -> function_t funs
Rule 4     funs -> function_v funs
Rule 5     funs -> empty
Rule 6     star -> starI declara_vars star1 CLOSEBRACES
Rule 7     starI -> star_sign OPENBRACES
Rule 8     star_sign -> MULTIPLICATION
Rule 9     star1 -> stmt_v star1
Rule 10    star1 -> empty
Rule 11    declara_vars -> vars declara_vars
Rule 12    declara_vars -> empty
Rule 13    vars -> type ID dimensionada equals exp SEMICOLON
Rule 14    vars -> type ID dimensionada SEMICOLON
Rule 15    dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET
Rule 16    dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET
Rule 17    dimensionada -> empty
Rule 18    loop -> while
Rule 19    loop -> for_v2
Rule 20    stmt -> assignment
Rule 21    stmt -> condition
Rule 22    stmt -> print
Rule 23    stmt -> loop
Rule 24    stmt -> read
Rule 25    stmt -> graphstmt
Rule 26    stmt -> funCall SEMICOLON
Rule 27    stmt -> return
Rule 28    stmt_v -> assignment
Rule 29    stmt_v -> condition
Rule 30    stmt_v -> print
Rule 31    stmt_v -> loop
Rule 32    stmt_v -> read
Rule 33    stmt_v -> graphstmt
Rule 34    stmt_v -> funCall SEMICOLON
Rule 35    assignment -> id equals assignment3 SEMICOLON
Rule 36    assignment3 -> exp
Rule 37    assignment3 -> read
Rule 38    vcte -> cte_int
Rule 39    vcte -> cte_float
Rule 40    vcte -> cte_string
Rule 41    vcte -> id
Rule 42    vcte -> funCall
Rule 43    vcte -> vectormatriz
Rule 44    vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET
Rule 45    vectormatriz -> vm1
Rule 46    vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
Rule 47    vm1 -> OPENBRACKET vm2 CLOSEBRACKET
Rule 48    vm2 -> exp COMMA vm2
Rule 49    vm2 -> exp
Rule 50    vm2 -> empty
Rule 51    functionI -> type ID
Rule 52    functionV -> VOID ID
Rule 53    function_t -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun
Rule 54    function_v -> FUN functionV function2 inicia_fun declara_vars function9 termina_fun
Rule 55    inicia_fun -> OPENBRACES
Rule 56    termina_fun -> CLOSEBRACES
Rule 57    function2 -> OPENPAREN function3 CLOSEPAREN
Rule 58    function3 -> funParam function5
Rule 59    function3 -> empty
Rule 60    function4 -> stmt function4
Rule 61    function4 -> empty
Rule 62    function9 -> stmt_v function9
Rule 63    function9 -> empty
Rule 64    function5 -> COMMA funParam function5
Rule 65    function5 -> empty
Rule 66    funParam -> type ID
Rule 67    type -> INT
Rule 68    type -> FLOAT
Rule 69    type -> STRING
Rule 70    print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
Rule 71    read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
Rule 72    read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
Rule 73    read1 -> OPENBRACKET exp CLOSEBRACKET
Rule 74    read1 -> empty
Rule 75    equals -> EQUALS
Rule 76    indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
Rule 77    indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET
Rule 78    indice_dimensionada -> empty
Rule 79    aidi -> ID
Rule 80    id -> aidi indice_dimensionada
Rule 81    funCall -> ID iniciaFunCall funCall2 terminaFunCall
Rule 82    iniciaFunCall -> OPENPAREN
Rule 83    terminaFunCall -> CLOSEPAREN
Rule 84    funCall2 -> funCallParam funCall3
Rule 85    funCall2 -> empty
Rule 86    funCall3 -> COMMA funCallParam funCall3
Rule 87    funCall3 -> empty
Rule 88    funCallParam -> exp
Rule 89    cte_int -> negativo CTEINT
Rule 90    cte_float -> negativo CTEFLOAT
Rule 91    cte_string -> CTESTRING
Rule 92    return -> RETURN return1 SEMICOLON
Rule 93    return1 -> vcte
Rule 94    return1 -> exp
Rule 95    loper -> GREATER
Rule 96    loper -> LESS
Rule 97    loper -> GREATEREQ
Rule 98    loper -> LESSEQ
Rule 99    loper -> NOTEQUAL
Rule 100   loper -> ISEQUAL
Rule 101   condition -> IF head_cond body condition1
Rule 102   condition1 -> elseif head_cond body condition1
Rule 103   condition1 -> else body
Rule 104   condition1 -> empty
Rule 105   elseif -> ELSEIF
Rule 106   else -> ELSE
Rule 107   head_cond -> OPENPAREN expression close_condition
Rule 108   body -> OPENBRACES body1 CLOSEBRACES
Rule 109   close_condition -> CLOSEPAREN
Rule 110   body1 -> stmt body1
Rule 111   body1 -> empty
Rule 112   for_v2 -> nuevo_for forBody
Rule 113   nuevo_for -> FOR OPENPAREN ID TWODOTS for2 CLOSEPAREN
Rule 114   for -> FOR for1 TWODOTS for2 forClose forBody
Rule 115   forInit -> FOR
Rule 116   for1 -> OPENPAREN ID
Rule 117   for2 -> exp
Rule 118   forClose -> CLOSEPAREN
Rule 119   forBody -> body
Rule 120   while -> while1 body
Rule 121   while1 -> while_w OPENPAREN expression CLOSEPAREN
Rule 122   while_w -> WHILE
Rule 123   dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN
Rule 124   unaExp -> OPENPAREN exp CLOSEPAREN
Rule 125   graphstmt -> graphfig
Rule 126   graphstmt -> graphview
Rule 127   graphstmt -> graphmove
Rule 128   graphfig -> graphfig1 SEMICOLON
Rule 129   graphfig -> graphfig2 SEMICOLON
Rule 130   graphfig1 -> CIRCLE unaExp
Rule 131   graphfig1 -> SQUARE unaExp
Rule 132   graphfig1 -> TRIANGLE unaExp
Rule 133   graphfig2 -> RECTANGLE dosExp
Rule 134   graphmove -> graphmove0 SEMICOLON
Rule 135   graphmove -> graphmove1 SEMICOLON
Rule 136   graphmove -> graphmove2 SEMICOLON
Rule 137   graphmove0 -> HAND_DOWN
Rule 138   graphmove0 -> HAND_UP
Rule 139   graphmove1 -> GO unaExp
Rule 140   graphmove1 -> LEFT unaExp
Rule 141   graphmove1 -> RIGHT unaExp
Rule 142   graphmove1 -> BACK unaExp
Rule 143   graphmove2 -> ARC dosExp
Rule 144   graphview -> graphview0 SEMICOLON
Rule 145   graphview -> graphview1 SEMICOLON
Rule 146   graphview -> graphview2 SEMICOLON
Rule 147   graphview0 -> HIDE_STAR
Rule 148   graphview0 -> SHOW_STAR
Rule 149   graphview0 -> EXITONCLICK
Rule 150   graphview0 -> CLEAR
Rule 151   graphview0 -> BEGINFILL
Rule 152   graphview0 -> ENDFILL
Rule 153   graphview1 -> COLOR_STAR unaExp
Rule 154   graphview1 -> SIZE_STAR unaExp
Rule 155   graphview1 -> SPEED unaExp
Rule 156   graphview2 -> POSITION dosExp
Rule 157   expression -> exp loper exp
Rule 158   expression -> exp
Rule 159   exp -> term
Rule 160   exp -> term exp_o exp
Rule 161   exp_o -> ADDITION
Rule 162   exp_o -> SUBSTRACTION
Rule 163   openP -> OPENPAREN
Rule 164   closeP -> CLOSEPAREN
Rule 165   term -> factor term_o term
Rule 166   term -> factor
Rule 167   term_o -> MULTIPLICATION
Rule 168   term_o -> DIVISION
Rule 169   factor -> vcte
Rule 170   factor -> openP expression closeP
Rule 171   negativo -> SUBSTRACTION
Rule 172   negativo -> empty
Rule 173   empty -> <empty>

Terminals, with rules where they appear

ADDITION             : 161
ARC                  : 143
BACK                 : 142
BEGINFILL            : 151
CIRCLE               : 130
CLEAR                : 150
CLOSEBRACES          : 6 56 108
CLOSEBRACKET         : 15 16 16 44 46 47 72 72 73 76 76 77
CLOSEPAREN           : 57 70 71 83 109 113 118 121 123 124 164
COLOR_STAR           : 153
COMMA                : 46 48 64 86 123
CTEFLOAT             : 90
CTEINT               : 15 16 16 89
CTESTRING            : 91
DIVISION             : 168
ELSE                 : 106
ELSEIF               : 105
ENDFILL              : 152
EQUALS               : 75
EXITONCLICK          : 149
FLOAT                : 68
FOR                  : 113 114 115
FUN                  : 53 54
GO                   : 139
GREATER              : 95
GREATEREQ            : 97
HAND_DOWN            : 137
HAND_UP              : 138
HIDE_STAR            : 147
ID                   : 1 13 14 51 52 66 79 81 113 116
IF                   : 101
INT                  : 67
ISEQUAL              : 100
LEFT                 : 140
LESS                 : 96
LESSEQ               : 98
MULTIPLICATION       : 8 167
NOTEQUAL             : 99
OPENBRACES           : 7 55 108
OPENBRACKET          : 15 16 16 44 46 47 72 72 73 76 76 77
OPENPAREN            : 57 70 71 82 107 113 116 121 123 124 163
POSITION             : 156
PRINT                : 70
PROGRAM              : 1
READ                 : 71
RECTANGLE            : 133
RETURN               : 92
RIGHT                : 141
SEMICOLON            : 1 13 14 26 34 35 70 71 92 128 129 134 135 136 144 145 146
SHOW_STAR            : 148
SIZE_STAR            : 154
SPEED                : 155
SQUARE               : 131
STRING               : 69
SUBSTRACTION         : 162 171
TRIANGLE             : 132
TWODOTS              : 113 114
VOID                 : 52
WHILE                : 122
error                : 

Nonterminals, with rules where they appear

aidi                 : 80
assignment           : 20 28
assignment3          : 35
body                 : 101 102 103 119 120
body1                : 108 110
closeP               : 170
close_condition      : 107
condition            : 21 29
condition1           : 101 102
cte_float            : 39
cte_int              : 38
cte_string           : 40
declara_vars         : 1 6 11 53 54
dimensionada         : 13 14
dosExp               : 133 143 156
else                 : 103
elseif               : 102
empty                : 5 10 12 17 50 59 61 63 65 74 78 85 87 104 111 172
equals               : 13 35
exp                  : 13 36 48 49 72 72 73 76 76 77 88 94 117 123 123 124 157 157 158 160
exp_o                : 160
expression           : 70 107 121 170
factor               : 165 166
for                  : 
for1                 : 114
for2                 : 113 114
forBody              : 112 114
forClose             : 114
forInit              : 
for_v2               : 19
funCall              : 26 34 42
funCall2             : 81
funCall3             : 84 86
funCallParam         : 84 86
funParam             : 58 64
function2            : 53 54
function3            : 57
function4            : 53 60
function5            : 58 64
function9            : 54 62
functionI            : 53
functionV            : 54
function_t           : 3
function_v           : 4
funs                 : 2 3 4
graphfig             : 125
graphfig1            : 128
graphfig2            : 129
graphmove            : 127
graphmove0           : 134
graphmove1           : 135
graphmove2           : 136
graphstmt            : 25 33
graphview            : 126
graphview0           : 144
graphview1           : 145
graphview2           : 146
head_cond            : 101 102
id                   : 35 41 71
indice_dimensionada  : 80
iniciaFunCall        : 81
inicia_fun           : 53 54
loop                 : 23 31
loper                : 157
negativo             : 89 90
nuevo_for            : 112
openP                : 170
print                : 22 30
program              : 0
program_fun          : 1
read                 : 24 32 37
read1                : 71
return               : 27
return1              : 92
star                 : 1
star1                : 6 9
starI                : 6
star_sign            : 7
stmt                 : 60 110
stmt_v               : 9 62
term                 : 159 160 165
term_o               : 165
terminaFunCall       : 81
termina_fun          : 53 54
type                 : 13 14 51 66
unaExp               : 130 131 132 139 140 141 142 153 154 155
vars                 : 11
vcte                 : 93 169
vectormatriz         : 43
vm1                  : 44 45 46
vm2                  : 46 47 48
while                : 18
while1               : 120
while_w              : 121

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON declara_vars program_fun star

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON declara_vars program_fun star

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON declara_vars program_fun star

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . declara_vars program_fun star
    (11) declara_vars -> . vars declara_vars
    (12) declara_vars -> . empty
    (13) vars -> . type ID dimensionada equals exp SEMICOLON
    (14) vars -> . type ID dimensionada SEMICOLON
    (173) empty -> .
    (67) type -> . INT
    (68) type -> . FLOAT
    (69) type -> . STRING

    FUN             reduce using rule 173 (empty -> .)
    MULTIPLICATION  reduce using rule 173 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    declara_vars                   shift and go to state 5
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 5

    (1) program -> PROGRAM ID SEMICOLON declara_vars . program_fun star
    (2) program_fun -> . funs
    (3) funs -> . function_t funs
    (4) funs -> . function_v funs
    (5) funs -> . empty
    (53) function_t -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (54) function_v -> . FUN functionV function2 inicia_fun declara_vars function9 termina_fun
    (173) empty -> .

    FUN             shift and go to state 17
    MULTIPLICATION  reduce using rule 173 (empty -> .)

    program_fun                    shift and go to state 12
    funs                           shift and go to state 13
    function_t                     shift and go to state 14
    function_v                     shift and go to state 15
    empty                          shift and go to state 16

state 6

    (11) declara_vars -> vars . declara_vars
    (11) declara_vars -> . vars declara_vars
    (12) declara_vars -> . empty
    (13) vars -> . type ID dimensionada equals exp SEMICOLON
    (14) vars -> . type ID dimensionada SEMICOLON
    (173) empty -> .
    (67) type -> . INT
    (68) type -> . FLOAT
    (69) type -> . STRING

    FUN             reduce using rule 173 (empty -> .)
    MULTIPLICATION  reduce using rule 173 (empty -> .)
    IF              reduce using rule 173 (empty -> .)
    PRINT           reduce using rule 173 (empty -> .)
    READ            reduce using rule 173 (empty -> .)
    ID              reduce using rule 173 (empty -> .)
    FOR             reduce using rule 173 (empty -> .)
    CIRCLE          reduce using rule 173 (empty -> .)
    SQUARE          reduce using rule 173 (empty -> .)
    TRIANGLE        reduce using rule 173 (empty -> .)
    RECTANGLE       reduce using rule 173 (empty -> .)
    HIDE_STAR       reduce using rule 173 (empty -> .)
    SHOW_STAR       reduce using rule 173 (empty -> .)
    EXITONCLICK     reduce using rule 173 (empty -> .)
    CLEAR           reduce using rule 173 (empty -> .)
    BEGINFILL       reduce using rule 173 (empty -> .)
    ENDFILL         reduce using rule 173 (empty -> .)
    COLOR_STAR      reduce using rule 173 (empty -> .)
    SIZE_STAR       reduce using rule 173 (empty -> .)
    SPEED           reduce using rule 173 (empty -> .)
    POSITION        reduce using rule 173 (empty -> .)
    HAND_DOWN       reduce using rule 173 (empty -> .)
    HAND_UP         reduce using rule 173 (empty -> .)
    GO              reduce using rule 173 (empty -> .)
    LEFT            reduce using rule 173 (empty -> .)
    RIGHT           reduce using rule 173 (empty -> .)
    BACK            reduce using rule 173 (empty -> .)
    ARC             reduce using rule 173 (empty -> .)
    WHILE           reduce using rule 173 (empty -> .)
    CLOSEBRACES     reduce using rule 173 (empty -> .)
    RETURN          reduce using rule 173 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    vars                           shift and go to state 6
    declara_vars                   shift and go to state 18
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 7

    (12) declara_vars -> empty .

    FUN             reduce using rule 12 (declara_vars -> empty .)
    MULTIPLICATION  reduce using rule 12 (declara_vars -> empty .)
    IF              reduce using rule 12 (declara_vars -> empty .)
    PRINT           reduce using rule 12 (declara_vars -> empty .)
    READ            reduce using rule 12 (declara_vars -> empty .)
    ID              reduce using rule 12 (declara_vars -> empty .)
    FOR             reduce using rule 12 (declara_vars -> empty .)
    CIRCLE          reduce using rule 12 (declara_vars -> empty .)
    SQUARE          reduce using rule 12 (declara_vars -> empty .)
    TRIANGLE        reduce using rule 12 (declara_vars -> empty .)
    RECTANGLE       reduce using rule 12 (declara_vars -> empty .)
    HIDE_STAR       reduce using rule 12 (declara_vars -> empty .)
    SHOW_STAR       reduce using rule 12 (declara_vars -> empty .)
    EXITONCLICK     reduce using rule 12 (declara_vars -> empty .)
    CLEAR           reduce using rule 12 (declara_vars -> empty .)
    BEGINFILL       reduce using rule 12 (declara_vars -> empty .)
    ENDFILL         reduce using rule 12 (declara_vars -> empty .)
    COLOR_STAR      reduce using rule 12 (declara_vars -> empty .)
    SIZE_STAR       reduce using rule 12 (declara_vars -> empty .)
    SPEED           reduce using rule 12 (declara_vars -> empty .)
    POSITION        reduce using rule 12 (declara_vars -> empty .)
    HAND_DOWN       reduce using rule 12 (declara_vars -> empty .)
    HAND_UP         reduce using rule 12 (declara_vars -> empty .)
    GO              reduce using rule 12 (declara_vars -> empty .)
    LEFT            reduce using rule 12 (declara_vars -> empty .)
    RIGHT           reduce using rule 12 (declara_vars -> empty .)
    BACK            reduce using rule 12 (declara_vars -> empty .)
    ARC             reduce using rule 12 (declara_vars -> empty .)
    WHILE           reduce using rule 12 (declara_vars -> empty .)
    CLOSEBRACES     reduce using rule 12 (declara_vars -> empty .)
    RETURN          reduce using rule 12 (declara_vars -> empty .)


state 8

    (13) vars -> type . ID dimensionada equals exp SEMICOLON
    (14) vars -> type . ID dimensionada SEMICOLON

    ID              shift and go to state 19


state 9

    (67) type -> INT .

    ID              reduce using rule 67 (type -> INT .)


state 10

    (68) type -> FLOAT .

    ID              reduce using rule 68 (type -> FLOAT .)


state 11

    (69) type -> STRING .

    ID              reduce using rule 69 (type -> STRING .)


state 12

    (1) program -> PROGRAM ID SEMICOLON declara_vars program_fun . star
    (6) star -> . starI declara_vars star1 CLOSEBRACES
    (7) starI -> . star_sign OPENBRACES
    (8) star_sign -> . MULTIPLICATION

    MULTIPLICATION  shift and go to state 23

    star                           shift and go to state 20
    starI                          shift and go to state 21
    star_sign                      shift and go to state 22

state 13

    (2) program_fun -> funs .

    MULTIPLICATION  reduce using rule 2 (program_fun -> funs .)


state 14

    (3) funs -> function_t . funs
    (3) funs -> . function_t funs
    (4) funs -> . function_v funs
    (5) funs -> . empty
    (53) function_t -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (54) function_v -> . FUN functionV function2 inicia_fun declara_vars function9 termina_fun
    (173) empty -> .

    FUN             shift and go to state 17
    MULTIPLICATION  reduce using rule 173 (empty -> .)

    function_t                     shift and go to state 14
    funs                           shift and go to state 24
    function_v                     shift and go to state 15
    empty                          shift and go to state 16

state 15

    (4) funs -> function_v . funs
    (3) funs -> . function_t funs
    (4) funs -> . function_v funs
    (5) funs -> . empty
    (53) function_t -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (54) function_v -> . FUN functionV function2 inicia_fun declara_vars function9 termina_fun
    (173) empty -> .

    FUN             shift and go to state 17
    MULTIPLICATION  reduce using rule 173 (empty -> .)

    function_v                     shift and go to state 15
    funs                           shift and go to state 25
    function_t                     shift and go to state 14
    empty                          shift and go to state 16

state 16

    (5) funs -> empty .

    MULTIPLICATION  reduce using rule 5 (funs -> empty .)


state 17

    (53) function_t -> FUN . functionI function2 inicia_fun declara_vars function4 termina_fun
    (54) function_v -> FUN . functionV function2 inicia_fun declara_vars function9 termina_fun
    (51) functionI -> . type ID
    (52) functionV -> . VOID ID
    (67) type -> . INT
    (68) type -> . FLOAT
    (69) type -> . STRING

    VOID            shift and go to state 29
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    functionI                      shift and go to state 26
    functionV                      shift and go to state 27
    type                           shift and go to state 28

state 18

    (11) declara_vars -> vars declara_vars .

    FUN             reduce using rule 11 (declara_vars -> vars declara_vars .)
    MULTIPLICATION  reduce using rule 11 (declara_vars -> vars declara_vars .)
    IF              reduce using rule 11 (declara_vars -> vars declara_vars .)
    PRINT           reduce using rule 11 (declara_vars -> vars declara_vars .)
    READ            reduce using rule 11 (declara_vars -> vars declara_vars .)
    ID              reduce using rule 11 (declara_vars -> vars declara_vars .)
    FOR             reduce using rule 11 (declara_vars -> vars declara_vars .)
    CIRCLE          reduce using rule 11 (declara_vars -> vars declara_vars .)
    SQUARE          reduce using rule 11 (declara_vars -> vars declara_vars .)
    TRIANGLE        reduce using rule 11 (declara_vars -> vars declara_vars .)
    RECTANGLE       reduce using rule 11 (declara_vars -> vars declara_vars .)
    HIDE_STAR       reduce using rule 11 (declara_vars -> vars declara_vars .)
    SHOW_STAR       reduce using rule 11 (declara_vars -> vars declara_vars .)
    EXITONCLICK     reduce using rule 11 (declara_vars -> vars declara_vars .)
    CLEAR           reduce using rule 11 (declara_vars -> vars declara_vars .)
    BEGINFILL       reduce using rule 11 (declara_vars -> vars declara_vars .)
    ENDFILL         reduce using rule 11 (declara_vars -> vars declara_vars .)
    COLOR_STAR      reduce using rule 11 (declara_vars -> vars declara_vars .)
    SIZE_STAR       reduce using rule 11 (declara_vars -> vars declara_vars .)
    SPEED           reduce using rule 11 (declara_vars -> vars declara_vars .)
    POSITION        reduce using rule 11 (declara_vars -> vars declara_vars .)
    HAND_DOWN       reduce using rule 11 (declara_vars -> vars declara_vars .)
    HAND_UP         reduce using rule 11 (declara_vars -> vars declara_vars .)
    GO              reduce using rule 11 (declara_vars -> vars declara_vars .)
    LEFT            reduce using rule 11 (declara_vars -> vars declara_vars .)
    RIGHT           reduce using rule 11 (declara_vars -> vars declara_vars .)
    BACK            reduce using rule 11 (declara_vars -> vars declara_vars .)
    ARC             reduce using rule 11 (declara_vars -> vars declara_vars .)
    WHILE           reduce using rule 11 (declara_vars -> vars declara_vars .)
    CLOSEBRACES     reduce using rule 11 (declara_vars -> vars declara_vars .)
    RETURN          reduce using rule 11 (declara_vars -> vars declara_vars .)


state 19

    (13) vars -> type ID . dimensionada equals exp SEMICOLON
    (14) vars -> type ID . dimensionada SEMICOLON
    (15) dimensionada -> . OPENBRACKET CTEINT CLOSEBRACKET
    (16) dimensionada -> . OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET
    (17) dimensionada -> . empty
    (173) empty -> .

    OPENBRACKET     shift and go to state 31
    SEMICOLON       reduce using rule 173 (empty -> .)
    EQUALS          reduce using rule 173 (empty -> .)

    dimensionada                   shift and go to state 30
    empty                          shift and go to state 32

state 20

    (1) program -> PROGRAM ID SEMICOLON declara_vars program_fun star .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON declara_vars program_fun star .)


state 21

    (6) star -> starI . declara_vars star1 CLOSEBRACES
    (11) declara_vars -> . vars declara_vars
    (12) declara_vars -> . empty
    (13) vars -> . type ID dimensionada equals exp SEMICOLON
    (14) vars -> . type ID dimensionada SEMICOLON
    (173) empty -> .
    (67) type -> . INT
    (68) type -> . FLOAT
    (69) type -> . STRING

    IF              reduce using rule 173 (empty -> .)
    PRINT           reduce using rule 173 (empty -> .)
    READ            reduce using rule 173 (empty -> .)
    ID              reduce using rule 173 (empty -> .)
    FOR             reduce using rule 173 (empty -> .)
    CIRCLE          reduce using rule 173 (empty -> .)
    SQUARE          reduce using rule 173 (empty -> .)
    TRIANGLE        reduce using rule 173 (empty -> .)
    RECTANGLE       reduce using rule 173 (empty -> .)
    HIDE_STAR       reduce using rule 173 (empty -> .)
    SHOW_STAR       reduce using rule 173 (empty -> .)
    EXITONCLICK     reduce using rule 173 (empty -> .)
    CLEAR           reduce using rule 173 (empty -> .)
    BEGINFILL       reduce using rule 173 (empty -> .)
    ENDFILL         reduce using rule 173 (empty -> .)
    COLOR_STAR      reduce using rule 173 (empty -> .)
    SIZE_STAR       reduce using rule 173 (empty -> .)
    SPEED           reduce using rule 173 (empty -> .)
    POSITION        reduce using rule 173 (empty -> .)
    HAND_DOWN       reduce using rule 173 (empty -> .)
    HAND_UP         reduce using rule 173 (empty -> .)
    GO              reduce using rule 173 (empty -> .)
    LEFT            reduce using rule 173 (empty -> .)
    RIGHT           reduce using rule 173 (empty -> .)
    BACK            reduce using rule 173 (empty -> .)
    ARC             reduce using rule 173 (empty -> .)
    WHILE           reduce using rule 173 (empty -> .)
    CLOSEBRACES     reduce using rule 173 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    declara_vars                   shift and go to state 33
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 22

    (7) starI -> star_sign . OPENBRACES

    OPENBRACES      shift and go to state 34


state 23

    (8) star_sign -> MULTIPLICATION .

    OPENBRACES      reduce using rule 8 (star_sign -> MULTIPLICATION .)


state 24

    (3) funs -> function_t funs .

    MULTIPLICATION  reduce using rule 3 (funs -> function_t funs .)


state 25

    (4) funs -> function_v funs .

    MULTIPLICATION  reduce using rule 4 (funs -> function_v funs .)


state 26

    (53) function_t -> FUN functionI . function2 inicia_fun declara_vars function4 termina_fun
    (57) function2 -> . OPENPAREN function3 CLOSEPAREN

    OPENPAREN       shift and go to state 36

    function2                      shift and go to state 35

state 27

    (54) function_v -> FUN functionV . function2 inicia_fun declara_vars function9 termina_fun
    (57) function2 -> . OPENPAREN function3 CLOSEPAREN

    OPENPAREN       shift and go to state 36

    function2                      shift and go to state 37

state 28

    (51) functionI -> type . ID

    ID              shift and go to state 38


state 29

    (52) functionV -> VOID . ID

    ID              shift and go to state 39


state 30

    (13) vars -> type ID dimensionada . equals exp SEMICOLON
    (14) vars -> type ID dimensionada . SEMICOLON
    (75) equals -> . EQUALS

    SEMICOLON       shift and go to state 41
    EQUALS          shift and go to state 42

    equals                         shift and go to state 40

state 31

    (15) dimensionada -> OPENBRACKET . CTEINT CLOSEBRACKET
    (16) dimensionada -> OPENBRACKET . CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET

    CTEINT          shift and go to state 43


state 32

    (17) dimensionada -> empty .

    SEMICOLON       reduce using rule 17 (dimensionada -> empty .)
    EQUALS          reduce using rule 17 (dimensionada -> empty .)


state 33

    (6) star -> starI declara_vars . star1 CLOSEBRACES
    (9) star1 -> . stmt_v star1
    (10) star1 -> . empty
    (28) stmt_v -> . assignment
    (29) stmt_v -> . condition
    (30) stmt_v -> . print
    (31) stmt_v -> . loop
    (32) stmt_v -> . read
    (33) stmt_v -> . graphstmt
    (34) stmt_v -> . funCall SEMICOLON
    (173) empty -> .
    (35) assignment -> . id equals assignment3 SEMICOLON
    (101) condition -> . IF head_cond body condition1
    (70) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for_v2
    (71) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (125) graphstmt -> . graphfig
    (126) graphstmt -> . graphview
    (127) graphstmt -> . graphmove
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (80) id -> . aidi indice_dimensionada
    (120) while -> . while1 body
    (112) for_v2 -> . nuevo_for forBody
    (128) graphfig -> . graphfig1 SEMICOLON
    (129) graphfig -> . graphfig2 SEMICOLON
    (144) graphview -> . graphview0 SEMICOLON
    (145) graphview -> . graphview1 SEMICOLON
    (146) graphview -> . graphview2 SEMICOLON
    (134) graphmove -> . graphmove0 SEMICOLON
    (135) graphmove -> . graphmove1 SEMICOLON
    (136) graphmove -> . graphmove2 SEMICOLON
    (79) aidi -> . ID
    (121) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (113) nuevo_for -> . FOR OPENPAREN ID TWODOTS for2 CLOSEPAREN
    (130) graphfig1 -> . CIRCLE unaExp
    (131) graphfig1 -> . SQUARE unaExp
    (132) graphfig1 -> . TRIANGLE unaExp
    (133) graphfig2 -> . RECTANGLE dosExp
    (147) graphview0 -> . HIDE_STAR
    (148) graphview0 -> . SHOW_STAR
    (149) graphview0 -> . EXITONCLICK
    (150) graphview0 -> . CLEAR
    (151) graphview0 -> . BEGINFILL
    (152) graphview0 -> . ENDFILL
    (153) graphview1 -> . COLOR_STAR unaExp
    (154) graphview1 -> . SIZE_STAR unaExp
    (155) graphview1 -> . SPEED unaExp
    (156) graphview2 -> . POSITION dosExp
    (137) graphmove0 -> . HAND_DOWN
    (138) graphmove0 -> . HAND_UP
    (139) graphmove1 -> . GO unaExp
    (140) graphmove1 -> . LEFT unaExp
    (141) graphmove1 -> . RIGHT unaExp
    (142) graphmove1 -> . BACK unaExp
    (143) graphmove2 -> . ARC dosExp
    (122) while_w -> . WHILE

    CLOSEBRACES     reduce using rule 173 (empty -> .)
    IF              shift and go to state 55
    PRINT           shift and go to state 56
    READ            shift and go to state 59
    ID              shift and go to state 63
    FOR             shift and go to state 76
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    EXITONCLICK     shift and go to state 83
    CLEAR           shift and go to state 84
    BEGINFILL       shift and go to state 85
    ENDFILL         shift and go to state 86
    COLOR_STAR      shift and go to state 87
    SIZE_STAR       shift and go to state 88
    SPEED           shift and go to state 89
    POSITION        shift and go to state 90
    HAND_DOWN       shift and go to state 91
    HAND_UP         shift and go to state 92
    GO              shift and go to state 93
    LEFT            shift and go to state 94
    RIGHT           shift and go to state 95
    BACK            shift and go to state 96
    ARC             shift and go to state 97
    WHILE           shift and go to state 98

    star1                          shift and go to state 44
    stmt_v                         shift and go to state 45
    empty                          shift and go to state 46
    assignment                     shift and go to state 47
    condition                      shift and go to state 48
    print                          shift and go to state 49
    loop                           shift and go to state 50
    read                           shift and go to state 51
    graphstmt                      shift and go to state 52
    funCall                        shift and go to state 53
    id                             shift and go to state 54
    while                          shift and go to state 57
    for_v2                         shift and go to state 58
    graphfig                       shift and go to state 60
    graphview                      shift and go to state 61
    graphmove                      shift and go to state 62
    aidi                           shift and go to state 64
    while1                         shift and go to state 65
    nuevo_for                      shift and go to state 66
    graphfig1                      shift and go to state 67
    graphfig2                      shift and go to state 68
    graphview0                     shift and go to state 69
    graphview1                     shift and go to state 70
    graphview2                     shift and go to state 71
    graphmove0                     shift and go to state 72
    graphmove1                     shift and go to state 73
    graphmove2                     shift and go to state 74
    while_w                        shift and go to state 75

state 34

    (7) starI -> star_sign OPENBRACES .

    INT             reduce using rule 7 (starI -> star_sign OPENBRACES .)
    FLOAT           reduce using rule 7 (starI -> star_sign OPENBRACES .)
    STRING          reduce using rule 7 (starI -> star_sign OPENBRACES .)
    IF              reduce using rule 7 (starI -> star_sign OPENBRACES .)
    PRINT           reduce using rule 7 (starI -> star_sign OPENBRACES .)
    READ            reduce using rule 7 (starI -> star_sign OPENBRACES .)
    ID              reduce using rule 7 (starI -> star_sign OPENBRACES .)
    FOR             reduce using rule 7 (starI -> star_sign OPENBRACES .)
    CIRCLE          reduce using rule 7 (starI -> star_sign OPENBRACES .)
    SQUARE          reduce using rule 7 (starI -> star_sign OPENBRACES .)
    TRIANGLE        reduce using rule 7 (starI -> star_sign OPENBRACES .)
    RECTANGLE       reduce using rule 7 (starI -> star_sign OPENBRACES .)
    HIDE_STAR       reduce using rule 7 (starI -> star_sign OPENBRACES .)
    SHOW_STAR       reduce using rule 7 (starI -> star_sign OPENBRACES .)
    EXITONCLICK     reduce using rule 7 (starI -> star_sign OPENBRACES .)
    CLEAR           reduce using rule 7 (starI -> star_sign OPENBRACES .)
    BEGINFILL       reduce using rule 7 (starI -> star_sign OPENBRACES .)
    ENDFILL         reduce using rule 7 (starI -> star_sign OPENBRACES .)
    COLOR_STAR      reduce using rule 7 (starI -> star_sign OPENBRACES .)
    SIZE_STAR       reduce using rule 7 (starI -> star_sign OPENBRACES .)
    SPEED           reduce using rule 7 (starI -> star_sign OPENBRACES .)
    POSITION        reduce using rule 7 (starI -> star_sign OPENBRACES .)
    HAND_DOWN       reduce using rule 7 (starI -> star_sign OPENBRACES .)
    HAND_UP         reduce using rule 7 (starI -> star_sign OPENBRACES .)
    GO              reduce using rule 7 (starI -> star_sign OPENBRACES .)
    LEFT            reduce using rule 7 (starI -> star_sign OPENBRACES .)
    RIGHT           reduce using rule 7 (starI -> star_sign OPENBRACES .)
    BACK            reduce using rule 7 (starI -> star_sign OPENBRACES .)
    ARC             reduce using rule 7 (starI -> star_sign OPENBRACES .)
    WHILE           reduce using rule 7 (starI -> star_sign OPENBRACES .)
    CLOSEBRACES     reduce using rule 7 (starI -> star_sign OPENBRACES .)


state 35

    (53) function_t -> FUN functionI function2 . inicia_fun declara_vars function4 termina_fun
    (55) inicia_fun -> . OPENBRACES

    OPENBRACES      shift and go to state 100

    inicia_fun                     shift and go to state 99

state 36

    (57) function2 -> OPENPAREN . function3 CLOSEPAREN
    (58) function3 -> . funParam function5
    (59) function3 -> . empty
    (66) funParam -> . type ID
    (173) empty -> .
    (67) type -> . INT
    (68) type -> . FLOAT
    (69) type -> . STRING

    CLOSEPAREN      reduce using rule 173 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    function3                      shift and go to state 101
    funParam                       shift and go to state 102
    empty                          shift and go to state 103
    type                           shift and go to state 104

state 37

    (54) function_v -> FUN functionV function2 . inicia_fun declara_vars function9 termina_fun
    (55) inicia_fun -> . OPENBRACES

    OPENBRACES      shift and go to state 100

    inicia_fun                     shift and go to state 105

state 38

    (51) functionI -> type ID .

    OPENPAREN       reduce using rule 51 (functionI -> type ID .)


state 39

    (52) functionV -> VOID ID .

    OPENPAREN       reduce using rule 52 (functionV -> VOID ID .)


state 40

    (13) vars -> type ID dimensionada equals . exp SEMICOLON
    (159) exp -> . term
    (160) exp -> . term exp_o exp
    (165) term -> . factor term_o term
    (166) term -> . factor
    (169) factor -> . vcte
    (170) factor -> . openP expression closeP
    (38) vcte -> . cte_int
    (39) vcte -> . cte_float
    (40) vcte -> . cte_string
    (41) vcte -> . id
    (42) vcte -> . funCall
    (43) vcte -> . vectormatriz
    (163) openP -> . OPENPAREN
    (89) cte_int -> . negativo CTEINT
    (90) cte_float -> . negativo CTEFLOAT
    (91) cte_string -> . CTESTRING
    (80) id -> . aidi indice_dimensionada
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (44) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (45) vectormatriz -> . vm1
    (171) negativo -> . SUBSTRACTION
    (172) negativo -> . empty
    (79) aidi -> . ID
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (173) empty -> .

    OPENPAREN       shift and go to state 117
    CTESTRING       shift and go to state 119
    ID              shift and go to state 63
    OPENBRACKET     shift and go to state 120
    SUBSTRACTION    shift and go to state 122
    CTEINT          reduce using rule 173 (empty -> .)
    CTEFLOAT        reduce using rule 173 (empty -> .)

    exp                            shift and go to state 106
    term                           shift and go to state 107
    factor                         shift and go to state 108
    vcte                           shift and go to state 109
    openP                          shift and go to state 110
    cte_int                        shift and go to state 111
    cte_float                      shift and go to state 112
    cte_string                     shift and go to state 113
    id                             shift and go to state 114
    funCall                        shift and go to state 115
    vectormatriz                   shift and go to state 116
    negativo                       shift and go to state 118
    aidi                           shift and go to state 64
    vm1                            shift and go to state 121
    empty                          shift and go to state 123

state 41

    (14) vars -> type ID dimensionada SEMICOLON .

    INT             reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    FLOAT           reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    STRING          reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    FUN             reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    MULTIPLICATION  reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    IF              reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    PRINT           reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    READ            reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    ID              reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    FOR             reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    CIRCLE          reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    SQUARE          reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    TRIANGLE        reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    RECTANGLE       reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    HIDE_STAR       reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    SHOW_STAR       reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    EXITONCLICK     reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    CLEAR           reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    BEGINFILL       reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    ENDFILL         reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    COLOR_STAR      reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    SIZE_STAR       reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    SPEED           reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    POSITION        reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    HAND_DOWN       reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    HAND_UP         reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    GO              reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    LEFT            reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    RIGHT           reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    BACK            reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    ARC             reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    WHILE           reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    CLOSEBRACES     reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)
    RETURN          reduce using rule 14 (vars -> type ID dimensionada SEMICOLON .)


state 42

    (75) equals -> EQUALS .

    OPENPAREN       reduce using rule 75 (equals -> EQUALS .)
    CTESTRING       reduce using rule 75 (equals -> EQUALS .)
    ID              reduce using rule 75 (equals -> EQUALS .)
    OPENBRACKET     reduce using rule 75 (equals -> EQUALS .)
    SUBSTRACTION    reduce using rule 75 (equals -> EQUALS .)
    CTEINT          reduce using rule 75 (equals -> EQUALS .)
    CTEFLOAT        reduce using rule 75 (equals -> EQUALS .)
    READ            reduce using rule 75 (equals -> EQUALS .)


state 43

    (15) dimensionada -> OPENBRACKET CTEINT . CLOSEBRACKET
    (16) dimensionada -> OPENBRACKET CTEINT . CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 124


state 44

    (6) star -> starI declara_vars star1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 125


state 45

    (9) star1 -> stmt_v . star1
    (9) star1 -> . stmt_v star1
    (10) star1 -> . empty
    (28) stmt_v -> . assignment
    (29) stmt_v -> . condition
    (30) stmt_v -> . print
    (31) stmt_v -> . loop
    (32) stmt_v -> . read
    (33) stmt_v -> . graphstmt
    (34) stmt_v -> . funCall SEMICOLON
    (173) empty -> .
    (35) assignment -> . id equals assignment3 SEMICOLON
    (101) condition -> . IF head_cond body condition1
    (70) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for_v2
    (71) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (125) graphstmt -> . graphfig
    (126) graphstmt -> . graphview
    (127) graphstmt -> . graphmove
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (80) id -> . aidi indice_dimensionada
    (120) while -> . while1 body
    (112) for_v2 -> . nuevo_for forBody
    (128) graphfig -> . graphfig1 SEMICOLON
    (129) graphfig -> . graphfig2 SEMICOLON
    (144) graphview -> . graphview0 SEMICOLON
    (145) graphview -> . graphview1 SEMICOLON
    (146) graphview -> . graphview2 SEMICOLON
    (134) graphmove -> . graphmove0 SEMICOLON
    (135) graphmove -> . graphmove1 SEMICOLON
    (136) graphmove -> . graphmove2 SEMICOLON
    (79) aidi -> . ID
    (121) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (113) nuevo_for -> . FOR OPENPAREN ID TWODOTS for2 CLOSEPAREN
    (130) graphfig1 -> . CIRCLE unaExp
    (131) graphfig1 -> . SQUARE unaExp
    (132) graphfig1 -> . TRIANGLE unaExp
    (133) graphfig2 -> . RECTANGLE dosExp
    (147) graphview0 -> . HIDE_STAR
    (148) graphview0 -> . SHOW_STAR
    (149) graphview0 -> . EXITONCLICK
    (150) graphview0 -> . CLEAR
    (151) graphview0 -> . BEGINFILL
    (152) graphview0 -> . ENDFILL
    (153) graphview1 -> . COLOR_STAR unaExp
    (154) graphview1 -> . SIZE_STAR unaExp
    (155) graphview1 -> . SPEED unaExp
    (156) graphview2 -> . POSITION dosExp
    (137) graphmove0 -> . HAND_DOWN
    (138) graphmove0 -> . HAND_UP
    (139) graphmove1 -> . GO unaExp
    (140) graphmove1 -> . LEFT unaExp
    (141) graphmove1 -> . RIGHT unaExp
    (142) graphmove1 -> . BACK unaExp
    (143) graphmove2 -> . ARC dosExp
    (122) while_w -> . WHILE

    CLOSEBRACES     reduce using rule 173 (empty -> .)
    IF              shift and go to state 55
    PRINT           shift and go to state 56
    READ            shift and go to state 59
    ID              shift and go to state 63
    FOR             shift and go to state 76
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    EXITONCLICK     shift and go to state 83
    CLEAR           shift and go to state 84
    BEGINFILL       shift and go to state 85
    ENDFILL         shift and go to state 86
    COLOR_STAR      shift and go to state 87
    SIZE_STAR       shift and go to state 88
    SPEED           shift and go to state 89
    POSITION        shift and go to state 90
    HAND_DOWN       shift and go to state 91
    HAND_UP         shift and go to state 92
    GO              shift and go to state 93
    LEFT            shift and go to state 94
    RIGHT           shift and go to state 95
    BACK            shift and go to state 96
    ARC             shift and go to state 97
    WHILE           shift and go to state 98

    stmt_v                         shift and go to state 45
    star1                          shift and go to state 126
    empty                          shift and go to state 46
    assignment                     shift and go to state 47
    condition                      shift and go to state 48
    print                          shift and go to state 49
    loop                           shift and go to state 50
    read                           shift and go to state 51
    graphstmt                      shift and go to state 52
    funCall                        shift and go to state 53
    id                             shift and go to state 54
    while                          shift and go to state 57
    for_v2                         shift and go to state 58
    graphfig                       shift and go to state 60
    graphview                      shift and go to state 61
    graphmove                      shift and go to state 62
    aidi                           shift and go to state 64
    while1                         shift and go to state 65
    nuevo_for                      shift and go to state 66
    graphfig1                      shift and go to state 67
    graphfig2                      shift and go to state 68
    graphview0                     shift and go to state 69
    graphview1                     shift and go to state 70
    graphview2                     shift and go to state 71
    graphmove0                     shift and go to state 72
    graphmove1                     shift and go to state 73
    graphmove2                     shift and go to state 74
    while_w                        shift and go to state 75

state 46

    (10) star1 -> empty .

    CLOSEBRACES     reduce using rule 10 (star1 -> empty .)


state 47

    (28) stmt_v -> assignment .

    IF              reduce using rule 28 (stmt_v -> assignment .)
    PRINT           reduce using rule 28 (stmt_v -> assignment .)
    READ            reduce using rule 28 (stmt_v -> assignment .)
    ID              reduce using rule 28 (stmt_v -> assignment .)
    FOR             reduce using rule 28 (stmt_v -> assignment .)
    CIRCLE          reduce using rule 28 (stmt_v -> assignment .)
    SQUARE          reduce using rule 28 (stmt_v -> assignment .)
    TRIANGLE        reduce using rule 28 (stmt_v -> assignment .)
    RECTANGLE       reduce using rule 28 (stmt_v -> assignment .)
    HIDE_STAR       reduce using rule 28 (stmt_v -> assignment .)
    SHOW_STAR       reduce using rule 28 (stmt_v -> assignment .)
    EXITONCLICK     reduce using rule 28 (stmt_v -> assignment .)
    CLEAR           reduce using rule 28 (stmt_v -> assignment .)
    BEGINFILL       reduce using rule 28 (stmt_v -> assignment .)
    ENDFILL         reduce using rule 28 (stmt_v -> assignment .)
    COLOR_STAR      reduce using rule 28 (stmt_v -> assignment .)
    SIZE_STAR       reduce using rule 28 (stmt_v -> assignment .)
    SPEED           reduce using rule 28 (stmt_v -> assignment .)
    POSITION        reduce using rule 28 (stmt_v -> assignment .)
    HAND_DOWN       reduce using rule 28 (stmt_v -> assignment .)
    HAND_UP         reduce using rule 28 (stmt_v -> assignment .)
    GO              reduce using rule 28 (stmt_v -> assignment .)
    LEFT            reduce using rule 28 (stmt_v -> assignment .)
    RIGHT           reduce using rule 28 (stmt_v -> assignment .)
    BACK            reduce using rule 28 (stmt_v -> assignment .)
    ARC             reduce using rule 28 (stmt_v -> assignment .)
    WHILE           reduce using rule 28 (stmt_v -> assignment .)
    CLOSEBRACES     reduce using rule 28 (stmt_v -> assignment .)


state 48

    (29) stmt_v -> condition .

    IF              reduce using rule 29 (stmt_v -> condition .)
    PRINT           reduce using rule 29 (stmt_v -> condition .)
    READ            reduce using rule 29 (stmt_v -> condition .)
    ID              reduce using rule 29 (stmt_v -> condition .)
    FOR             reduce using rule 29 (stmt_v -> condition .)
    CIRCLE          reduce using rule 29 (stmt_v -> condition .)
    SQUARE          reduce using rule 29 (stmt_v -> condition .)
    TRIANGLE        reduce using rule 29 (stmt_v -> condition .)
    RECTANGLE       reduce using rule 29 (stmt_v -> condition .)
    HIDE_STAR       reduce using rule 29 (stmt_v -> condition .)
    SHOW_STAR       reduce using rule 29 (stmt_v -> condition .)
    EXITONCLICK     reduce using rule 29 (stmt_v -> condition .)
    CLEAR           reduce using rule 29 (stmt_v -> condition .)
    BEGINFILL       reduce using rule 29 (stmt_v -> condition .)
    ENDFILL         reduce using rule 29 (stmt_v -> condition .)
    COLOR_STAR      reduce using rule 29 (stmt_v -> condition .)
    SIZE_STAR       reduce using rule 29 (stmt_v -> condition .)
    SPEED           reduce using rule 29 (stmt_v -> condition .)
    POSITION        reduce using rule 29 (stmt_v -> condition .)
    HAND_DOWN       reduce using rule 29 (stmt_v -> condition .)
    HAND_UP         reduce using rule 29 (stmt_v -> condition .)
    GO              reduce using rule 29 (stmt_v -> condition .)
    LEFT            reduce using rule 29 (stmt_v -> condition .)
    RIGHT           reduce using rule 29 (stmt_v -> condition .)
    BACK            reduce using rule 29 (stmt_v -> condition .)
    ARC             reduce using rule 29 (stmt_v -> condition .)
    WHILE           reduce using rule 29 (stmt_v -> condition .)
    CLOSEBRACES     reduce using rule 29 (stmt_v -> condition .)


state 49

    (30) stmt_v -> print .

    IF              reduce using rule 30 (stmt_v -> print .)
    PRINT           reduce using rule 30 (stmt_v -> print .)
    READ            reduce using rule 30 (stmt_v -> print .)
    ID              reduce using rule 30 (stmt_v -> print .)
    FOR             reduce using rule 30 (stmt_v -> print .)
    CIRCLE          reduce using rule 30 (stmt_v -> print .)
    SQUARE          reduce using rule 30 (stmt_v -> print .)
    TRIANGLE        reduce using rule 30 (stmt_v -> print .)
    RECTANGLE       reduce using rule 30 (stmt_v -> print .)
    HIDE_STAR       reduce using rule 30 (stmt_v -> print .)
    SHOW_STAR       reduce using rule 30 (stmt_v -> print .)
    EXITONCLICK     reduce using rule 30 (stmt_v -> print .)
    CLEAR           reduce using rule 30 (stmt_v -> print .)
    BEGINFILL       reduce using rule 30 (stmt_v -> print .)
    ENDFILL         reduce using rule 30 (stmt_v -> print .)
    COLOR_STAR      reduce using rule 30 (stmt_v -> print .)
    SIZE_STAR       reduce using rule 30 (stmt_v -> print .)
    SPEED           reduce using rule 30 (stmt_v -> print .)
    POSITION        reduce using rule 30 (stmt_v -> print .)
    HAND_DOWN       reduce using rule 30 (stmt_v -> print .)
    HAND_UP         reduce using rule 30 (stmt_v -> print .)
    GO              reduce using rule 30 (stmt_v -> print .)
    LEFT            reduce using rule 30 (stmt_v -> print .)
    RIGHT           reduce using rule 30 (stmt_v -> print .)
    BACK            reduce using rule 30 (stmt_v -> print .)
    ARC             reduce using rule 30 (stmt_v -> print .)
    WHILE           reduce using rule 30 (stmt_v -> print .)
    CLOSEBRACES     reduce using rule 30 (stmt_v -> print .)


state 50

    (31) stmt_v -> loop .

    IF              reduce using rule 31 (stmt_v -> loop .)
    PRINT           reduce using rule 31 (stmt_v -> loop .)
    READ            reduce using rule 31 (stmt_v -> loop .)
    ID              reduce using rule 31 (stmt_v -> loop .)
    FOR             reduce using rule 31 (stmt_v -> loop .)
    CIRCLE          reduce using rule 31 (stmt_v -> loop .)
    SQUARE          reduce using rule 31 (stmt_v -> loop .)
    TRIANGLE        reduce using rule 31 (stmt_v -> loop .)
    RECTANGLE       reduce using rule 31 (stmt_v -> loop .)
    HIDE_STAR       reduce using rule 31 (stmt_v -> loop .)
    SHOW_STAR       reduce using rule 31 (stmt_v -> loop .)
    EXITONCLICK     reduce using rule 31 (stmt_v -> loop .)
    CLEAR           reduce using rule 31 (stmt_v -> loop .)
    BEGINFILL       reduce using rule 31 (stmt_v -> loop .)
    ENDFILL         reduce using rule 31 (stmt_v -> loop .)
    COLOR_STAR      reduce using rule 31 (stmt_v -> loop .)
    SIZE_STAR       reduce using rule 31 (stmt_v -> loop .)
    SPEED           reduce using rule 31 (stmt_v -> loop .)
    POSITION        reduce using rule 31 (stmt_v -> loop .)
    HAND_DOWN       reduce using rule 31 (stmt_v -> loop .)
    HAND_UP         reduce using rule 31 (stmt_v -> loop .)
    GO              reduce using rule 31 (stmt_v -> loop .)
    LEFT            reduce using rule 31 (stmt_v -> loop .)
    RIGHT           reduce using rule 31 (stmt_v -> loop .)
    BACK            reduce using rule 31 (stmt_v -> loop .)
    ARC             reduce using rule 31 (stmt_v -> loop .)
    WHILE           reduce using rule 31 (stmt_v -> loop .)
    CLOSEBRACES     reduce using rule 31 (stmt_v -> loop .)


state 51

    (32) stmt_v -> read .

    IF              reduce using rule 32 (stmt_v -> read .)
    PRINT           reduce using rule 32 (stmt_v -> read .)
    READ            reduce using rule 32 (stmt_v -> read .)
    ID              reduce using rule 32 (stmt_v -> read .)
    FOR             reduce using rule 32 (stmt_v -> read .)
    CIRCLE          reduce using rule 32 (stmt_v -> read .)
    SQUARE          reduce using rule 32 (stmt_v -> read .)
    TRIANGLE        reduce using rule 32 (stmt_v -> read .)
    RECTANGLE       reduce using rule 32 (stmt_v -> read .)
    HIDE_STAR       reduce using rule 32 (stmt_v -> read .)
    SHOW_STAR       reduce using rule 32 (stmt_v -> read .)
    EXITONCLICK     reduce using rule 32 (stmt_v -> read .)
    CLEAR           reduce using rule 32 (stmt_v -> read .)
    BEGINFILL       reduce using rule 32 (stmt_v -> read .)
    ENDFILL         reduce using rule 32 (stmt_v -> read .)
    COLOR_STAR      reduce using rule 32 (stmt_v -> read .)
    SIZE_STAR       reduce using rule 32 (stmt_v -> read .)
    SPEED           reduce using rule 32 (stmt_v -> read .)
    POSITION        reduce using rule 32 (stmt_v -> read .)
    HAND_DOWN       reduce using rule 32 (stmt_v -> read .)
    HAND_UP         reduce using rule 32 (stmt_v -> read .)
    GO              reduce using rule 32 (stmt_v -> read .)
    LEFT            reduce using rule 32 (stmt_v -> read .)
    RIGHT           reduce using rule 32 (stmt_v -> read .)
    BACK            reduce using rule 32 (stmt_v -> read .)
    ARC             reduce using rule 32 (stmt_v -> read .)
    WHILE           reduce using rule 32 (stmt_v -> read .)
    CLOSEBRACES     reduce using rule 32 (stmt_v -> read .)


state 52

    (33) stmt_v -> graphstmt .

    IF              reduce using rule 33 (stmt_v -> graphstmt .)
    PRINT           reduce using rule 33 (stmt_v -> graphstmt .)
    READ            reduce using rule 33 (stmt_v -> graphstmt .)
    ID              reduce using rule 33 (stmt_v -> graphstmt .)
    FOR             reduce using rule 33 (stmt_v -> graphstmt .)
    CIRCLE          reduce using rule 33 (stmt_v -> graphstmt .)
    SQUARE          reduce using rule 33 (stmt_v -> graphstmt .)
    TRIANGLE        reduce using rule 33 (stmt_v -> graphstmt .)
    RECTANGLE       reduce using rule 33 (stmt_v -> graphstmt .)
    HIDE_STAR       reduce using rule 33 (stmt_v -> graphstmt .)
    SHOW_STAR       reduce using rule 33 (stmt_v -> graphstmt .)
    EXITONCLICK     reduce using rule 33 (stmt_v -> graphstmt .)
    CLEAR           reduce using rule 33 (stmt_v -> graphstmt .)
    BEGINFILL       reduce using rule 33 (stmt_v -> graphstmt .)
    ENDFILL         reduce using rule 33 (stmt_v -> graphstmt .)
    COLOR_STAR      reduce using rule 33 (stmt_v -> graphstmt .)
    SIZE_STAR       reduce using rule 33 (stmt_v -> graphstmt .)
    SPEED           reduce using rule 33 (stmt_v -> graphstmt .)
    POSITION        reduce using rule 33 (stmt_v -> graphstmt .)
    HAND_DOWN       reduce using rule 33 (stmt_v -> graphstmt .)
    HAND_UP         reduce using rule 33 (stmt_v -> graphstmt .)
    GO              reduce using rule 33 (stmt_v -> graphstmt .)
    LEFT            reduce using rule 33 (stmt_v -> graphstmt .)
    RIGHT           reduce using rule 33 (stmt_v -> graphstmt .)
    BACK            reduce using rule 33 (stmt_v -> graphstmt .)
    ARC             reduce using rule 33 (stmt_v -> graphstmt .)
    WHILE           reduce using rule 33 (stmt_v -> graphstmt .)
    CLOSEBRACES     reduce using rule 33 (stmt_v -> graphstmt .)


state 53

    (34) stmt_v -> funCall . SEMICOLON

    SEMICOLON       shift and go to state 127


state 54

    (35) assignment -> id . equals assignment3 SEMICOLON
    (75) equals -> . EQUALS

    EQUALS          shift and go to state 42

    equals                         shift and go to state 128

state 55

    (101) condition -> IF . head_cond body condition1
    (107) head_cond -> . OPENPAREN expression close_condition

    OPENPAREN       shift and go to state 130

    head_cond                      shift and go to state 129

state 56

    (70) print -> PRINT . OPENPAREN expression CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 131


state 57

    (18) loop -> while .

    IF              reduce using rule 18 (loop -> while .)
    PRINT           reduce using rule 18 (loop -> while .)
    READ            reduce using rule 18 (loop -> while .)
    ID              reduce using rule 18 (loop -> while .)
    FOR             reduce using rule 18 (loop -> while .)
    CIRCLE          reduce using rule 18 (loop -> while .)
    SQUARE          reduce using rule 18 (loop -> while .)
    TRIANGLE        reduce using rule 18 (loop -> while .)
    RECTANGLE       reduce using rule 18 (loop -> while .)
    HIDE_STAR       reduce using rule 18 (loop -> while .)
    SHOW_STAR       reduce using rule 18 (loop -> while .)
    EXITONCLICK     reduce using rule 18 (loop -> while .)
    CLEAR           reduce using rule 18 (loop -> while .)
    BEGINFILL       reduce using rule 18 (loop -> while .)
    ENDFILL         reduce using rule 18 (loop -> while .)
    COLOR_STAR      reduce using rule 18 (loop -> while .)
    SIZE_STAR       reduce using rule 18 (loop -> while .)
    SPEED           reduce using rule 18 (loop -> while .)
    POSITION        reduce using rule 18 (loop -> while .)
    HAND_DOWN       reduce using rule 18 (loop -> while .)
    HAND_UP         reduce using rule 18 (loop -> while .)
    GO              reduce using rule 18 (loop -> while .)
    LEFT            reduce using rule 18 (loop -> while .)
    RIGHT           reduce using rule 18 (loop -> while .)
    BACK            reduce using rule 18 (loop -> while .)
    ARC             reduce using rule 18 (loop -> while .)
    WHILE           reduce using rule 18 (loop -> while .)
    CLOSEBRACES     reduce using rule 18 (loop -> while .)
    RETURN          reduce using rule 18 (loop -> while .)


state 58

    (19) loop -> for_v2 .

    IF              reduce using rule 19 (loop -> for_v2 .)
    PRINT           reduce using rule 19 (loop -> for_v2 .)
    READ            reduce using rule 19 (loop -> for_v2 .)
    ID              reduce using rule 19 (loop -> for_v2 .)
    FOR             reduce using rule 19 (loop -> for_v2 .)
    CIRCLE          reduce using rule 19 (loop -> for_v2 .)
    SQUARE          reduce using rule 19 (loop -> for_v2 .)
    TRIANGLE        reduce using rule 19 (loop -> for_v2 .)
    RECTANGLE       reduce using rule 19 (loop -> for_v2 .)
    HIDE_STAR       reduce using rule 19 (loop -> for_v2 .)
    SHOW_STAR       reduce using rule 19 (loop -> for_v2 .)
    EXITONCLICK     reduce using rule 19 (loop -> for_v2 .)
    CLEAR           reduce using rule 19 (loop -> for_v2 .)
    BEGINFILL       reduce using rule 19 (loop -> for_v2 .)
    ENDFILL         reduce using rule 19 (loop -> for_v2 .)
    COLOR_STAR      reduce using rule 19 (loop -> for_v2 .)
    SIZE_STAR       reduce using rule 19 (loop -> for_v2 .)
    SPEED           reduce using rule 19 (loop -> for_v2 .)
    POSITION        reduce using rule 19 (loop -> for_v2 .)
    HAND_DOWN       reduce using rule 19 (loop -> for_v2 .)
    HAND_UP         reduce using rule 19 (loop -> for_v2 .)
    GO              reduce using rule 19 (loop -> for_v2 .)
    LEFT            reduce using rule 19 (loop -> for_v2 .)
    RIGHT           reduce using rule 19 (loop -> for_v2 .)
    BACK            reduce using rule 19 (loop -> for_v2 .)
    ARC             reduce using rule 19 (loop -> for_v2 .)
    WHILE           reduce using rule 19 (loop -> for_v2 .)
    CLOSEBRACES     reduce using rule 19 (loop -> for_v2 .)
    RETURN          reduce using rule 19 (loop -> for_v2 .)


state 59

    (71) read -> READ . OPENPAREN id read1 CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 132


state 60

    (125) graphstmt -> graphfig .

    IF              reduce using rule 125 (graphstmt -> graphfig .)
    PRINT           reduce using rule 125 (graphstmt -> graphfig .)
    READ            reduce using rule 125 (graphstmt -> graphfig .)
    ID              reduce using rule 125 (graphstmt -> graphfig .)
    FOR             reduce using rule 125 (graphstmt -> graphfig .)
    CIRCLE          reduce using rule 125 (graphstmt -> graphfig .)
    SQUARE          reduce using rule 125 (graphstmt -> graphfig .)
    TRIANGLE        reduce using rule 125 (graphstmt -> graphfig .)
    RECTANGLE       reduce using rule 125 (graphstmt -> graphfig .)
    HIDE_STAR       reduce using rule 125 (graphstmt -> graphfig .)
    SHOW_STAR       reduce using rule 125 (graphstmt -> graphfig .)
    EXITONCLICK     reduce using rule 125 (graphstmt -> graphfig .)
    CLEAR           reduce using rule 125 (graphstmt -> graphfig .)
    BEGINFILL       reduce using rule 125 (graphstmt -> graphfig .)
    ENDFILL         reduce using rule 125 (graphstmt -> graphfig .)
    COLOR_STAR      reduce using rule 125 (graphstmt -> graphfig .)
    SIZE_STAR       reduce using rule 125 (graphstmt -> graphfig .)
    SPEED           reduce using rule 125 (graphstmt -> graphfig .)
    POSITION        reduce using rule 125 (graphstmt -> graphfig .)
    HAND_DOWN       reduce using rule 125 (graphstmt -> graphfig .)
    HAND_UP         reduce using rule 125 (graphstmt -> graphfig .)
    GO              reduce using rule 125 (graphstmt -> graphfig .)
    LEFT            reduce using rule 125 (graphstmt -> graphfig .)
    RIGHT           reduce using rule 125 (graphstmt -> graphfig .)
    BACK            reduce using rule 125 (graphstmt -> graphfig .)
    ARC             reduce using rule 125 (graphstmt -> graphfig .)
    WHILE           reduce using rule 125 (graphstmt -> graphfig .)
    CLOSEBRACES     reduce using rule 125 (graphstmt -> graphfig .)
    RETURN          reduce using rule 125 (graphstmt -> graphfig .)


state 61

    (126) graphstmt -> graphview .

    IF              reduce using rule 126 (graphstmt -> graphview .)
    PRINT           reduce using rule 126 (graphstmt -> graphview .)
    READ            reduce using rule 126 (graphstmt -> graphview .)
    ID              reduce using rule 126 (graphstmt -> graphview .)
    FOR             reduce using rule 126 (graphstmt -> graphview .)
    CIRCLE          reduce using rule 126 (graphstmt -> graphview .)
    SQUARE          reduce using rule 126 (graphstmt -> graphview .)
    TRIANGLE        reduce using rule 126 (graphstmt -> graphview .)
    RECTANGLE       reduce using rule 126 (graphstmt -> graphview .)
    HIDE_STAR       reduce using rule 126 (graphstmt -> graphview .)
    SHOW_STAR       reduce using rule 126 (graphstmt -> graphview .)
    EXITONCLICK     reduce using rule 126 (graphstmt -> graphview .)
    CLEAR           reduce using rule 126 (graphstmt -> graphview .)
    BEGINFILL       reduce using rule 126 (graphstmt -> graphview .)
    ENDFILL         reduce using rule 126 (graphstmt -> graphview .)
    COLOR_STAR      reduce using rule 126 (graphstmt -> graphview .)
    SIZE_STAR       reduce using rule 126 (graphstmt -> graphview .)
    SPEED           reduce using rule 126 (graphstmt -> graphview .)
    POSITION        reduce using rule 126 (graphstmt -> graphview .)
    HAND_DOWN       reduce using rule 126 (graphstmt -> graphview .)
    HAND_UP         reduce using rule 126 (graphstmt -> graphview .)
    GO              reduce using rule 126 (graphstmt -> graphview .)
    LEFT            reduce using rule 126 (graphstmt -> graphview .)
    RIGHT           reduce using rule 126 (graphstmt -> graphview .)
    BACK            reduce using rule 126 (graphstmt -> graphview .)
    ARC             reduce using rule 126 (graphstmt -> graphview .)
    WHILE           reduce using rule 126 (graphstmt -> graphview .)
    CLOSEBRACES     reduce using rule 126 (graphstmt -> graphview .)
    RETURN          reduce using rule 126 (graphstmt -> graphview .)


state 62

    (127) graphstmt -> graphmove .

    IF              reduce using rule 127 (graphstmt -> graphmove .)
    PRINT           reduce using rule 127 (graphstmt -> graphmove .)
    READ            reduce using rule 127 (graphstmt -> graphmove .)
    ID              reduce using rule 127 (graphstmt -> graphmove .)
    FOR             reduce using rule 127 (graphstmt -> graphmove .)
    CIRCLE          reduce using rule 127 (graphstmt -> graphmove .)
    SQUARE          reduce using rule 127 (graphstmt -> graphmove .)
    TRIANGLE        reduce using rule 127 (graphstmt -> graphmove .)
    RECTANGLE       reduce using rule 127 (graphstmt -> graphmove .)
    HIDE_STAR       reduce using rule 127 (graphstmt -> graphmove .)
    SHOW_STAR       reduce using rule 127 (graphstmt -> graphmove .)
    EXITONCLICK     reduce using rule 127 (graphstmt -> graphmove .)
    CLEAR           reduce using rule 127 (graphstmt -> graphmove .)
    BEGINFILL       reduce using rule 127 (graphstmt -> graphmove .)
    ENDFILL         reduce using rule 127 (graphstmt -> graphmove .)
    COLOR_STAR      reduce using rule 127 (graphstmt -> graphmove .)
    SIZE_STAR       reduce using rule 127 (graphstmt -> graphmove .)
    SPEED           reduce using rule 127 (graphstmt -> graphmove .)
    POSITION        reduce using rule 127 (graphstmt -> graphmove .)
    HAND_DOWN       reduce using rule 127 (graphstmt -> graphmove .)
    HAND_UP         reduce using rule 127 (graphstmt -> graphmove .)
    GO              reduce using rule 127 (graphstmt -> graphmove .)
    LEFT            reduce using rule 127 (graphstmt -> graphmove .)
    RIGHT           reduce using rule 127 (graphstmt -> graphmove .)
    BACK            reduce using rule 127 (graphstmt -> graphmove .)
    ARC             reduce using rule 127 (graphstmt -> graphmove .)
    WHILE           reduce using rule 127 (graphstmt -> graphmove .)
    CLOSEBRACES     reduce using rule 127 (graphstmt -> graphmove .)
    RETURN          reduce using rule 127 (graphstmt -> graphmove .)


state 63

    (81) funCall -> ID . iniciaFunCall funCall2 terminaFunCall
    (79) aidi -> ID .
    (82) iniciaFunCall -> . OPENPAREN

    OPENBRACKET     reduce using rule 79 (aidi -> ID .)
    EQUALS          reduce using rule 79 (aidi -> ID .)
    MULTIPLICATION  reduce using rule 79 (aidi -> ID .)
    DIVISION        reduce using rule 79 (aidi -> ID .)
    ADDITION        reduce using rule 79 (aidi -> ID .)
    SUBSTRACTION    reduce using rule 79 (aidi -> ID .)
    SEMICOLON       reduce using rule 79 (aidi -> ID .)
    GREATER         reduce using rule 79 (aidi -> ID .)
    LESS            reduce using rule 79 (aidi -> ID .)
    GREATEREQ       reduce using rule 79 (aidi -> ID .)
    LESSEQ          reduce using rule 79 (aidi -> ID .)
    NOTEQUAL        reduce using rule 79 (aidi -> ID .)
    ISEQUAL         reduce using rule 79 (aidi -> ID .)
    CLOSEPAREN      reduce using rule 79 (aidi -> ID .)
    COMMA           reduce using rule 79 (aidi -> ID .)
    CLOSEBRACKET    reduce using rule 79 (aidi -> ID .)
    OPENPAREN       shift and go to state 134

    iniciaFunCall                  shift and go to state 133

state 64

    (80) id -> aidi . indice_dimensionada
    (76) indice_dimensionada -> . OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (77) indice_dimensionada -> . OPENBRACKET exp CLOSEBRACKET
    (78) indice_dimensionada -> . empty
    (173) empty -> .

  ! shift/reduce conflict for OPENBRACKET resolved as shift
    OPENBRACKET     shift and go to state 136
    EQUALS          reduce using rule 173 (empty -> .)
    MULTIPLICATION  reduce using rule 173 (empty -> .)
    DIVISION        reduce using rule 173 (empty -> .)
    ADDITION        reduce using rule 173 (empty -> .)
    SUBSTRACTION    reduce using rule 173 (empty -> .)
    SEMICOLON       reduce using rule 173 (empty -> .)
    GREATER         reduce using rule 173 (empty -> .)
    LESS            reduce using rule 173 (empty -> .)
    GREATEREQ       reduce using rule 173 (empty -> .)
    LESSEQ          reduce using rule 173 (empty -> .)
    NOTEQUAL        reduce using rule 173 (empty -> .)
    ISEQUAL         reduce using rule 173 (empty -> .)
    CLOSEPAREN      reduce using rule 173 (empty -> .)
    COMMA           reduce using rule 173 (empty -> .)
    CLOSEBRACKET    reduce using rule 173 (empty -> .)

  ! OPENBRACKET     [ reduce using rule 173 (empty -> .) ]

    indice_dimensionada            shift and go to state 135
    empty                          shift and go to state 137

state 65

    (120) while -> while1 . body
    (108) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 139

    body                           shift and go to state 138

state 66

    (112) for_v2 -> nuevo_for . forBody
    (119) forBody -> . body
    (108) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 139

    forBody                        shift and go to state 140
    body                           shift and go to state 141

state 67

    (128) graphfig -> graphfig1 . SEMICOLON

    SEMICOLON       shift and go to state 142


state 68

    (129) graphfig -> graphfig2 . SEMICOLON

    SEMICOLON       shift and go to state 143


state 69

    (144) graphview -> graphview0 . SEMICOLON

    SEMICOLON       shift and go to state 144


state 70

    (145) graphview -> graphview1 . SEMICOLON

    SEMICOLON       shift and go to state 145


state 71

    (146) graphview -> graphview2 . SEMICOLON

    SEMICOLON       shift and go to state 146


state 72

    (134) graphmove -> graphmove0 . SEMICOLON

    SEMICOLON       shift and go to state 147


state 73

    (135) graphmove -> graphmove1 . SEMICOLON

    SEMICOLON       shift and go to state 148


state 74

    (136) graphmove -> graphmove2 . SEMICOLON

    SEMICOLON       shift and go to state 149


state 75

    (121) while1 -> while_w . OPENPAREN expression CLOSEPAREN

    OPENPAREN       shift and go to state 150


state 76

    (113) nuevo_for -> FOR . OPENPAREN ID TWODOTS for2 CLOSEPAREN

    OPENPAREN       shift and go to state 151


state 77

    (130) graphfig1 -> CIRCLE . unaExp
    (124) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 153

    unaExp                         shift and go to state 152

state 78

    (131) graphfig1 -> SQUARE . unaExp
    (124) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 153

    unaExp                         shift and go to state 154

state 79

    (132) graphfig1 -> TRIANGLE . unaExp
    (124) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 153

    unaExp                         shift and go to state 155

state 80

    (133) graphfig2 -> RECTANGLE . dosExp
    (123) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 157

    dosExp                         shift and go to state 156

state 81

    (147) graphview0 -> HIDE_STAR .

    SEMICOLON       reduce using rule 147 (graphview0 -> HIDE_STAR .)


state 82

    (148) graphview0 -> SHOW_STAR .

    SEMICOLON       reduce using rule 148 (graphview0 -> SHOW_STAR .)


state 83

    (149) graphview0 -> EXITONCLICK .

    SEMICOLON       reduce using rule 149 (graphview0 -> EXITONCLICK .)


state 84

    (150) graphview0 -> CLEAR .

    SEMICOLON       reduce using rule 150 (graphview0 -> CLEAR .)


state 85

    (151) graphview0 -> BEGINFILL .

    SEMICOLON       reduce using rule 151 (graphview0 -> BEGINFILL .)


state 86

    (152) graphview0 -> ENDFILL .

    SEMICOLON       reduce using rule 152 (graphview0 -> ENDFILL .)


state 87

    (153) graphview1 -> COLOR_STAR . unaExp
    (124) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 153

    unaExp                         shift and go to state 158

state 88

    (154) graphview1 -> SIZE_STAR . unaExp
    (124) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 153

    unaExp                         shift and go to state 159

state 89

    (155) graphview1 -> SPEED . unaExp
    (124) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 153

    unaExp                         shift and go to state 160

state 90

    (156) graphview2 -> POSITION . dosExp
    (123) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 157

    dosExp                         shift and go to state 161

state 91

    (137) graphmove0 -> HAND_DOWN .

    SEMICOLON       reduce using rule 137 (graphmove0 -> HAND_DOWN .)


state 92

    (138) graphmove0 -> HAND_UP .

    SEMICOLON       reduce using rule 138 (graphmove0 -> HAND_UP .)


state 93

    (139) graphmove1 -> GO . unaExp
    (124) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 153

    unaExp                         shift and go to state 162

state 94

    (140) graphmove1 -> LEFT . unaExp
    (124) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 153

    unaExp                         shift and go to state 163

state 95

    (141) graphmove1 -> RIGHT . unaExp
    (124) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 153

    unaExp                         shift and go to state 164

state 96

    (142) graphmove1 -> BACK . unaExp
    (124) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 153

    unaExp                         shift and go to state 165

state 97

    (143) graphmove2 -> ARC . dosExp
    (123) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 157

    dosExp                         shift and go to state 166

state 98

    (122) while_w -> WHILE .

    OPENPAREN       reduce using rule 122 (while_w -> WHILE .)


state 99

    (53) function_t -> FUN functionI function2 inicia_fun . declara_vars function4 termina_fun
    (11) declara_vars -> . vars declara_vars
    (12) declara_vars -> . empty
    (13) vars -> . type ID dimensionada equals exp SEMICOLON
    (14) vars -> . type ID dimensionada SEMICOLON
    (173) empty -> .
    (67) type -> . INT
    (68) type -> . FLOAT
    (69) type -> . STRING

    IF              reduce using rule 173 (empty -> .)
    PRINT           reduce using rule 173 (empty -> .)
    READ            reduce using rule 173 (empty -> .)
    ID              reduce using rule 173 (empty -> .)
    RETURN          reduce using rule 173 (empty -> .)
    FOR             reduce using rule 173 (empty -> .)
    CIRCLE          reduce using rule 173 (empty -> .)
    SQUARE          reduce using rule 173 (empty -> .)
    TRIANGLE        reduce using rule 173 (empty -> .)
    RECTANGLE       reduce using rule 173 (empty -> .)
    HIDE_STAR       reduce using rule 173 (empty -> .)
    SHOW_STAR       reduce using rule 173 (empty -> .)
    EXITONCLICK     reduce using rule 173 (empty -> .)
    CLEAR           reduce using rule 173 (empty -> .)
    BEGINFILL       reduce using rule 173 (empty -> .)
    ENDFILL         reduce using rule 173 (empty -> .)
    COLOR_STAR      reduce using rule 173 (empty -> .)
    SIZE_STAR       reduce using rule 173 (empty -> .)
    SPEED           reduce using rule 173 (empty -> .)
    POSITION        reduce using rule 173 (empty -> .)
    HAND_DOWN       reduce using rule 173 (empty -> .)
    HAND_UP         reduce using rule 173 (empty -> .)
    GO              reduce using rule 173 (empty -> .)
    LEFT            reduce using rule 173 (empty -> .)
    RIGHT           reduce using rule 173 (empty -> .)
    BACK            reduce using rule 173 (empty -> .)
    ARC             reduce using rule 173 (empty -> .)
    WHILE           reduce using rule 173 (empty -> .)
    CLOSEBRACES     reduce using rule 173 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    declara_vars                   shift and go to state 167
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 100

    (55) inicia_fun -> OPENBRACES .

    INT             reduce using rule 55 (inicia_fun -> OPENBRACES .)
    FLOAT           reduce using rule 55 (inicia_fun -> OPENBRACES .)
    STRING          reduce using rule 55 (inicia_fun -> OPENBRACES .)
    IF              reduce using rule 55 (inicia_fun -> OPENBRACES .)
    PRINT           reduce using rule 55 (inicia_fun -> OPENBRACES .)
    READ            reduce using rule 55 (inicia_fun -> OPENBRACES .)
    ID              reduce using rule 55 (inicia_fun -> OPENBRACES .)
    RETURN          reduce using rule 55 (inicia_fun -> OPENBRACES .)
    FOR             reduce using rule 55 (inicia_fun -> OPENBRACES .)
    CIRCLE          reduce using rule 55 (inicia_fun -> OPENBRACES .)
    SQUARE          reduce using rule 55 (inicia_fun -> OPENBRACES .)
    TRIANGLE        reduce using rule 55 (inicia_fun -> OPENBRACES .)
    RECTANGLE       reduce using rule 55 (inicia_fun -> OPENBRACES .)
    HIDE_STAR       reduce using rule 55 (inicia_fun -> OPENBRACES .)
    SHOW_STAR       reduce using rule 55 (inicia_fun -> OPENBRACES .)
    EXITONCLICK     reduce using rule 55 (inicia_fun -> OPENBRACES .)
    CLEAR           reduce using rule 55 (inicia_fun -> OPENBRACES .)
    BEGINFILL       reduce using rule 55 (inicia_fun -> OPENBRACES .)
    ENDFILL         reduce using rule 55 (inicia_fun -> OPENBRACES .)
    COLOR_STAR      reduce using rule 55 (inicia_fun -> OPENBRACES .)
    SIZE_STAR       reduce using rule 55 (inicia_fun -> OPENBRACES .)
    SPEED           reduce using rule 55 (inicia_fun -> OPENBRACES .)
    POSITION        reduce using rule 55 (inicia_fun -> OPENBRACES .)
    HAND_DOWN       reduce using rule 55 (inicia_fun -> OPENBRACES .)
    HAND_UP         reduce using rule 55 (inicia_fun -> OPENBRACES .)
    GO              reduce using rule 55 (inicia_fun -> OPENBRACES .)
    LEFT            reduce using rule 55 (inicia_fun -> OPENBRACES .)
    RIGHT           reduce using rule 55 (inicia_fun -> OPENBRACES .)
    BACK            reduce using rule 55 (inicia_fun -> OPENBRACES .)
    ARC             reduce using rule 55 (inicia_fun -> OPENBRACES .)
    WHILE           reduce using rule 55 (inicia_fun -> OPENBRACES .)
    CLOSEBRACES     reduce using rule 55 (inicia_fun -> OPENBRACES .)


state 101

    (57) function2 -> OPENPAREN function3 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 168


state 102

    (58) function3 -> funParam . function5
    (64) function5 -> . COMMA funParam function5
    (65) function5 -> . empty
    (173) empty -> .

    COMMA           shift and go to state 170
    CLOSEPAREN      reduce using rule 173 (empty -> .)

    function5                      shift and go to state 169
    empty                          shift and go to state 171

state 103

    (59) function3 -> empty .

    CLOSEPAREN      reduce using rule 59 (function3 -> empty .)


state 104

    (66) funParam -> type . ID

    ID              shift and go to state 172


state 105

    (54) function_v -> FUN functionV function2 inicia_fun . declara_vars function9 termina_fun
    (11) declara_vars -> . vars declara_vars
    (12) declara_vars -> . empty
    (13) vars -> . type ID dimensionada equals exp SEMICOLON
    (14) vars -> . type ID dimensionada SEMICOLON
    (173) empty -> .
    (67) type -> . INT
    (68) type -> . FLOAT
    (69) type -> . STRING

    IF              reduce using rule 173 (empty -> .)
    PRINT           reduce using rule 173 (empty -> .)
    READ            reduce using rule 173 (empty -> .)
    ID              reduce using rule 173 (empty -> .)
    FOR             reduce using rule 173 (empty -> .)
    CIRCLE          reduce using rule 173 (empty -> .)
    SQUARE          reduce using rule 173 (empty -> .)
    TRIANGLE        reduce using rule 173 (empty -> .)
    RECTANGLE       reduce using rule 173 (empty -> .)
    HIDE_STAR       reduce using rule 173 (empty -> .)
    SHOW_STAR       reduce using rule 173 (empty -> .)
    EXITONCLICK     reduce using rule 173 (empty -> .)
    CLEAR           reduce using rule 173 (empty -> .)
    BEGINFILL       reduce using rule 173 (empty -> .)
    ENDFILL         reduce using rule 173 (empty -> .)
    COLOR_STAR      reduce using rule 173 (empty -> .)
    SIZE_STAR       reduce using rule 173 (empty -> .)
    SPEED           reduce using rule 173 (empty -> .)
    POSITION        reduce using rule 173 (empty -> .)
    HAND_DOWN       reduce using rule 173 (empty -> .)
    HAND_UP         reduce using rule 173 (empty -> .)
    GO              reduce using rule 173 (empty -> .)
    LEFT            reduce using rule 173 (empty -> .)
    RIGHT           reduce using rule 173 (empty -> .)
    BACK            reduce using rule 173 (empty -> .)
    ARC             reduce using rule 173 (empty -> .)
    WHILE           reduce using rule 173 (empty -> .)
    CLOSEBRACES     reduce using rule 173 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    declara_vars                   shift and go to state 173
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 106

    (13) vars -> type ID dimensionada equals exp . SEMICOLON

    SEMICOLON       shift and go to state 174


state 107

    (159) exp -> term .
    (160) exp -> term . exp_o exp
    (161) exp_o -> . ADDITION
    (162) exp_o -> . SUBSTRACTION

    SEMICOLON       reduce using rule 159 (exp -> term .)
    GREATER         reduce using rule 159 (exp -> term .)
    LESS            reduce using rule 159 (exp -> term .)
    GREATEREQ       reduce using rule 159 (exp -> term .)
    LESSEQ          reduce using rule 159 (exp -> term .)
    NOTEQUAL        reduce using rule 159 (exp -> term .)
    ISEQUAL         reduce using rule 159 (exp -> term .)
    CLOSEPAREN      reduce using rule 159 (exp -> term .)
    COMMA           reduce using rule 159 (exp -> term .)
    CLOSEBRACKET    reduce using rule 159 (exp -> term .)
    ADDITION        shift and go to state 176
    SUBSTRACTION    shift and go to state 177

    exp_o                          shift and go to state 175

state 108

    (165) term -> factor . term_o term
    (166) term -> factor .
    (167) term_o -> . MULTIPLICATION
    (168) term_o -> . DIVISION

    ADDITION        reduce using rule 166 (term -> factor .)
    SUBSTRACTION    reduce using rule 166 (term -> factor .)
    SEMICOLON       reduce using rule 166 (term -> factor .)
    GREATER         reduce using rule 166 (term -> factor .)
    LESS            reduce using rule 166 (term -> factor .)
    GREATEREQ       reduce using rule 166 (term -> factor .)
    LESSEQ          reduce using rule 166 (term -> factor .)
    NOTEQUAL        reduce using rule 166 (term -> factor .)
    ISEQUAL         reduce using rule 166 (term -> factor .)
    CLOSEPAREN      reduce using rule 166 (term -> factor .)
    COMMA           reduce using rule 166 (term -> factor .)
    CLOSEBRACKET    reduce using rule 166 (term -> factor .)
    MULTIPLICATION  shift and go to state 179
    DIVISION        shift and go to state 180

    term_o                         shift and go to state 178

state 109

    (169) factor -> vcte .

    MULTIPLICATION  reduce using rule 169 (factor -> vcte .)
    DIVISION        reduce using rule 169 (factor -> vcte .)
    ADDITION        reduce using rule 169 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 169 (factor -> vcte .)
    SEMICOLON       reduce using rule 169 (factor -> vcte .)
    GREATER         reduce using rule 169 (factor -> vcte .)
    LESS            reduce using rule 169 (factor -> vcte .)
    GREATEREQ       reduce using rule 169 (factor -> vcte .)
    LESSEQ          reduce using rule 169 (factor -> vcte .)
    NOTEQUAL        reduce using rule 169 (factor -> vcte .)
    ISEQUAL         reduce using rule 169 (factor -> vcte .)
    CLOSEPAREN      reduce using rule 169 (factor -> vcte .)
    COMMA           reduce using rule 169 (factor -> vcte .)
    CLOSEBRACKET    reduce using rule 169 (factor -> vcte .)


state 110

    (170) factor -> openP . expression closeP
    (157) expression -> . exp loper exp
    (158) expression -> . exp
    (159) exp -> . term
    (160) exp -> . term exp_o exp
    (165) term -> . factor term_o term
    (166) term -> . factor
    (169) factor -> . vcte
    (170) factor -> . openP expression closeP
    (38) vcte -> . cte_int
    (39) vcte -> . cte_float
    (40) vcte -> . cte_string
    (41) vcte -> . id
    (42) vcte -> . funCall
    (43) vcte -> . vectormatriz
    (163) openP -> . OPENPAREN
    (89) cte_int -> . negativo CTEINT
    (90) cte_float -> . negativo CTEFLOAT
    (91) cte_string -> . CTESTRING
    (80) id -> . aidi indice_dimensionada
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (44) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (45) vectormatriz -> . vm1
    (171) negativo -> . SUBSTRACTION
    (172) negativo -> . empty
    (79) aidi -> . ID
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (173) empty -> .

    OPENPAREN       shift and go to state 117
    CTESTRING       shift and go to state 119
    ID              shift and go to state 63
    OPENBRACKET     shift and go to state 120
    SUBSTRACTION    shift and go to state 122
    CTEINT          reduce using rule 173 (empty -> .)
    CTEFLOAT        reduce using rule 173 (empty -> .)

    openP                          shift and go to state 110
    expression                     shift and go to state 181
    exp                            shift and go to state 182
    term                           shift and go to state 107
    factor                         shift and go to state 108
    vcte                           shift and go to state 109
    cte_int                        shift and go to state 111
    cte_float                      shift and go to state 112
    cte_string                     shift and go to state 113
    id                             shift and go to state 114
    funCall                        shift and go to state 115
    vectormatriz                   shift and go to state 116
    negativo                       shift and go to state 118
    aidi                           shift and go to state 64
    vm1                            shift and go to state 121
    empty                          shift and go to state 123

state 111

    (38) vcte -> cte_int .

    MULTIPLICATION  reduce using rule 38 (vcte -> cte_int .)
    DIVISION        reduce using rule 38 (vcte -> cte_int .)
    ADDITION        reduce using rule 38 (vcte -> cte_int .)
    SUBSTRACTION    reduce using rule 38 (vcte -> cte_int .)
    SEMICOLON       reduce using rule 38 (vcte -> cte_int .)
    GREATER         reduce using rule 38 (vcte -> cte_int .)
    LESS            reduce using rule 38 (vcte -> cte_int .)
    GREATEREQ       reduce using rule 38 (vcte -> cte_int .)
    LESSEQ          reduce using rule 38 (vcte -> cte_int .)
    NOTEQUAL        reduce using rule 38 (vcte -> cte_int .)
    ISEQUAL         reduce using rule 38 (vcte -> cte_int .)
    CLOSEPAREN      reduce using rule 38 (vcte -> cte_int .)
    COMMA           reduce using rule 38 (vcte -> cte_int .)
    CLOSEBRACKET    reduce using rule 38 (vcte -> cte_int .)


state 112

    (39) vcte -> cte_float .

    MULTIPLICATION  reduce using rule 39 (vcte -> cte_float .)
    DIVISION        reduce using rule 39 (vcte -> cte_float .)
    ADDITION        reduce using rule 39 (vcte -> cte_float .)
    SUBSTRACTION    reduce using rule 39 (vcte -> cte_float .)
    SEMICOLON       reduce using rule 39 (vcte -> cte_float .)
    GREATER         reduce using rule 39 (vcte -> cte_float .)
    LESS            reduce using rule 39 (vcte -> cte_float .)
    GREATEREQ       reduce using rule 39 (vcte -> cte_float .)
    LESSEQ          reduce using rule 39 (vcte -> cte_float .)
    NOTEQUAL        reduce using rule 39 (vcte -> cte_float .)
    ISEQUAL         reduce using rule 39 (vcte -> cte_float .)
    CLOSEPAREN      reduce using rule 39 (vcte -> cte_float .)
    COMMA           reduce using rule 39 (vcte -> cte_float .)
    CLOSEBRACKET    reduce using rule 39 (vcte -> cte_float .)


state 113

    (40) vcte -> cte_string .

    MULTIPLICATION  reduce using rule 40 (vcte -> cte_string .)
    DIVISION        reduce using rule 40 (vcte -> cte_string .)
    ADDITION        reduce using rule 40 (vcte -> cte_string .)
    SUBSTRACTION    reduce using rule 40 (vcte -> cte_string .)
    SEMICOLON       reduce using rule 40 (vcte -> cte_string .)
    GREATER         reduce using rule 40 (vcte -> cte_string .)
    LESS            reduce using rule 40 (vcte -> cte_string .)
    GREATEREQ       reduce using rule 40 (vcte -> cte_string .)
    LESSEQ          reduce using rule 40 (vcte -> cte_string .)
    NOTEQUAL        reduce using rule 40 (vcte -> cte_string .)
    ISEQUAL         reduce using rule 40 (vcte -> cte_string .)
    CLOSEPAREN      reduce using rule 40 (vcte -> cte_string .)
    COMMA           reduce using rule 40 (vcte -> cte_string .)
    CLOSEBRACKET    reduce using rule 40 (vcte -> cte_string .)


state 114

    (41) vcte -> id .

    MULTIPLICATION  reduce using rule 41 (vcte -> id .)
    DIVISION        reduce using rule 41 (vcte -> id .)
    ADDITION        reduce using rule 41 (vcte -> id .)
    SUBSTRACTION    reduce using rule 41 (vcte -> id .)
    SEMICOLON       reduce using rule 41 (vcte -> id .)
    GREATER         reduce using rule 41 (vcte -> id .)
    LESS            reduce using rule 41 (vcte -> id .)
    GREATEREQ       reduce using rule 41 (vcte -> id .)
    LESSEQ          reduce using rule 41 (vcte -> id .)
    NOTEQUAL        reduce using rule 41 (vcte -> id .)
    ISEQUAL         reduce using rule 41 (vcte -> id .)
    CLOSEPAREN      reduce using rule 41 (vcte -> id .)
    COMMA           reduce using rule 41 (vcte -> id .)
    CLOSEBRACKET    reduce using rule 41 (vcte -> id .)


state 115

    (42) vcte -> funCall .

    MULTIPLICATION  reduce using rule 42 (vcte -> funCall .)
    DIVISION        reduce using rule 42 (vcte -> funCall .)
    ADDITION        reduce using rule 42 (vcte -> funCall .)
    SUBSTRACTION    reduce using rule 42 (vcte -> funCall .)
    SEMICOLON       reduce using rule 42 (vcte -> funCall .)
    GREATER         reduce using rule 42 (vcte -> funCall .)
    LESS            reduce using rule 42 (vcte -> funCall .)
    GREATEREQ       reduce using rule 42 (vcte -> funCall .)
    LESSEQ          reduce using rule 42 (vcte -> funCall .)
    NOTEQUAL        reduce using rule 42 (vcte -> funCall .)
    ISEQUAL         reduce using rule 42 (vcte -> funCall .)
    CLOSEPAREN      reduce using rule 42 (vcte -> funCall .)
    COMMA           reduce using rule 42 (vcte -> funCall .)
    CLOSEBRACKET    reduce using rule 42 (vcte -> funCall .)


state 116

    (43) vcte -> vectormatriz .

    MULTIPLICATION  reduce using rule 43 (vcte -> vectormatriz .)
    DIVISION        reduce using rule 43 (vcte -> vectormatriz .)
    ADDITION        reduce using rule 43 (vcte -> vectormatriz .)
    SUBSTRACTION    reduce using rule 43 (vcte -> vectormatriz .)
    SEMICOLON       reduce using rule 43 (vcte -> vectormatriz .)
    GREATER         reduce using rule 43 (vcte -> vectormatriz .)
    LESS            reduce using rule 43 (vcte -> vectormatriz .)
    GREATEREQ       reduce using rule 43 (vcte -> vectormatriz .)
    LESSEQ          reduce using rule 43 (vcte -> vectormatriz .)
    NOTEQUAL        reduce using rule 43 (vcte -> vectormatriz .)
    ISEQUAL         reduce using rule 43 (vcte -> vectormatriz .)
    CLOSEPAREN      reduce using rule 43 (vcte -> vectormatriz .)
    COMMA           reduce using rule 43 (vcte -> vectormatriz .)
    CLOSEBRACKET    reduce using rule 43 (vcte -> vectormatriz .)


state 117

    (163) openP -> OPENPAREN .

    OPENPAREN       reduce using rule 163 (openP -> OPENPAREN .)
    CTESTRING       reduce using rule 163 (openP -> OPENPAREN .)
    ID              reduce using rule 163 (openP -> OPENPAREN .)
    OPENBRACKET     reduce using rule 163 (openP -> OPENPAREN .)
    SUBSTRACTION    reduce using rule 163 (openP -> OPENPAREN .)
    CTEINT          reduce using rule 163 (openP -> OPENPAREN .)
    CTEFLOAT        reduce using rule 163 (openP -> OPENPAREN .)


state 118

    (89) cte_int -> negativo . CTEINT
    (90) cte_float -> negativo . CTEFLOAT

    CTEINT          shift and go to state 183
    CTEFLOAT        shift and go to state 184


state 119

    (91) cte_string -> CTESTRING .

    MULTIPLICATION  reduce using rule 91 (cte_string -> CTESTRING .)
    DIVISION        reduce using rule 91 (cte_string -> CTESTRING .)
    ADDITION        reduce using rule 91 (cte_string -> CTESTRING .)
    SUBSTRACTION    reduce using rule 91 (cte_string -> CTESTRING .)
    SEMICOLON       reduce using rule 91 (cte_string -> CTESTRING .)
    GREATER         reduce using rule 91 (cte_string -> CTESTRING .)
    LESS            reduce using rule 91 (cte_string -> CTESTRING .)
    GREATEREQ       reduce using rule 91 (cte_string -> CTESTRING .)
    LESSEQ          reduce using rule 91 (cte_string -> CTESTRING .)
    NOTEQUAL        reduce using rule 91 (cte_string -> CTESTRING .)
    ISEQUAL         reduce using rule 91 (cte_string -> CTESTRING .)
    CLOSEPAREN      reduce using rule 91 (cte_string -> CTESTRING .)
    COMMA           reduce using rule 91 (cte_string -> CTESTRING .)
    CLOSEBRACKET    reduce using rule 91 (cte_string -> CTESTRING .)


state 120

    (44) vectormatriz -> OPENBRACKET . vm1 CLOSEBRACKET
    (46) vm1 -> OPENBRACKET . vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> OPENBRACKET . vm2 CLOSEBRACKET
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (48) vm2 -> . exp COMMA vm2
    (49) vm2 -> . exp
    (50) vm2 -> . empty
    (159) exp -> . term
    (160) exp -> . term exp_o exp
    (173) empty -> .
    (165) term -> . factor term_o term
    (166) term -> . factor
    (169) factor -> . vcte
    (170) factor -> . openP expression closeP
    (38) vcte -> . cte_int
    (39) vcte -> . cte_float
    (40) vcte -> . cte_string
    (41) vcte -> . id
    (42) vcte -> . funCall
    (43) vcte -> . vectormatriz
    (163) openP -> . OPENPAREN
    (89) cte_int -> . negativo CTEINT
    (90) cte_float -> . negativo CTEFLOAT
    (91) cte_string -> . CTESTRING
    (80) id -> . aidi indice_dimensionada
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (44) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (45) vectormatriz -> . vm1
    (171) negativo -> . SUBSTRACTION
    (172) negativo -> . empty
    (79) aidi -> . ID

    OPENBRACKET     shift and go to state 185
    CLOSEBRACKET    reduce using rule 173 (empty -> .)
    CTEINT          reduce using rule 173 (empty -> .)
    CTEFLOAT        reduce using rule 173 (empty -> .)
    OPENPAREN       shift and go to state 117
    CTESTRING       shift and go to state 119
    ID              shift and go to state 63
    SUBSTRACTION    shift and go to state 122

    vm1                            shift and go to state 186
    vm2                            shift and go to state 187
    exp                            shift and go to state 188
    empty                          shift and go to state 189
    term                           shift and go to state 107
    factor                         shift and go to state 108
    vcte                           shift and go to state 109
    openP                          shift and go to state 110
    cte_int                        shift and go to state 111
    cte_float                      shift and go to state 112
    cte_string                     shift and go to state 113
    id                             shift and go to state 114
    funCall                        shift and go to state 115
    vectormatriz                   shift and go to state 116
    negativo                       shift and go to state 118
    aidi                           shift and go to state 64

state 121

    (45) vectormatriz -> vm1 .

    MULTIPLICATION  reduce using rule 45 (vectormatriz -> vm1 .)
    DIVISION        reduce using rule 45 (vectormatriz -> vm1 .)
    ADDITION        reduce using rule 45 (vectormatriz -> vm1 .)
    SUBSTRACTION    reduce using rule 45 (vectormatriz -> vm1 .)
    SEMICOLON       reduce using rule 45 (vectormatriz -> vm1 .)
    GREATER         reduce using rule 45 (vectormatriz -> vm1 .)
    LESS            reduce using rule 45 (vectormatriz -> vm1 .)
    GREATEREQ       reduce using rule 45 (vectormatriz -> vm1 .)
    LESSEQ          reduce using rule 45 (vectormatriz -> vm1 .)
    NOTEQUAL        reduce using rule 45 (vectormatriz -> vm1 .)
    ISEQUAL         reduce using rule 45 (vectormatriz -> vm1 .)
    CLOSEPAREN      reduce using rule 45 (vectormatriz -> vm1 .)
    COMMA           reduce using rule 45 (vectormatriz -> vm1 .)
    CLOSEBRACKET    reduce using rule 45 (vectormatriz -> vm1 .)


state 122

    (171) negativo -> SUBSTRACTION .

    CTEINT          reduce using rule 171 (negativo -> SUBSTRACTION .)
    CTEFLOAT        reduce using rule 171 (negativo -> SUBSTRACTION .)


state 123

    (172) negativo -> empty .

    CTEINT          reduce using rule 172 (negativo -> empty .)
    CTEFLOAT        reduce using rule 172 (negativo -> empty .)


state 124

    (15) dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET .
    (16) dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET . OPENBRACKET CTEINT CLOSEBRACKET

    SEMICOLON       reduce using rule 15 (dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET .)
    EQUALS          reduce using rule 15 (dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET .)
    OPENBRACKET     shift and go to state 190


state 125

    (6) star -> starI declara_vars star1 CLOSEBRACES .

    $end            reduce using rule 6 (star -> starI declara_vars star1 CLOSEBRACES .)


state 126

    (9) star1 -> stmt_v star1 .

    CLOSEBRACES     reduce using rule 9 (star1 -> stmt_v star1 .)


state 127

    (34) stmt_v -> funCall SEMICOLON .

    IF              reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    PRINT           reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    READ            reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    ID              reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    FOR             reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    CIRCLE          reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    SQUARE          reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    TRIANGLE        reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    RECTANGLE       reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    HIDE_STAR       reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    SHOW_STAR       reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    EXITONCLICK     reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    CLEAR           reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    BEGINFILL       reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    ENDFILL         reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    COLOR_STAR      reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    SIZE_STAR       reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    SPEED           reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    POSITION        reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    HAND_DOWN       reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    HAND_UP         reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    GO              reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    LEFT            reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    RIGHT           reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    BACK            reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    ARC             reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    WHILE           reduce using rule 34 (stmt_v -> funCall SEMICOLON .)
    CLOSEBRACES     reduce using rule 34 (stmt_v -> funCall SEMICOLON .)


state 128

    (35) assignment -> id equals . assignment3 SEMICOLON
    (36) assignment3 -> . exp
    (37) assignment3 -> . read
    (159) exp -> . term
    (160) exp -> . term exp_o exp
    (71) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (165) term -> . factor term_o term
    (166) term -> . factor
    (169) factor -> . vcte
    (170) factor -> . openP expression closeP
    (38) vcte -> . cte_int
    (39) vcte -> . cte_float
    (40) vcte -> . cte_string
    (41) vcte -> . id
    (42) vcte -> . funCall
    (43) vcte -> . vectormatriz
    (163) openP -> . OPENPAREN
    (89) cte_int -> . negativo CTEINT
    (90) cte_float -> . negativo CTEFLOAT
    (91) cte_string -> . CTESTRING
    (80) id -> . aidi indice_dimensionada
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (44) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (45) vectormatriz -> . vm1
    (171) negativo -> . SUBSTRACTION
    (172) negativo -> . empty
    (79) aidi -> . ID
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (173) empty -> .

    READ            shift and go to state 59
    OPENPAREN       shift and go to state 117
    CTESTRING       shift and go to state 119
    ID              shift and go to state 63
    OPENBRACKET     shift and go to state 120
    SUBSTRACTION    shift and go to state 122
    CTEINT          reduce using rule 173 (empty -> .)
    CTEFLOAT        reduce using rule 173 (empty -> .)

    id                             shift and go to state 114
    assignment3                    shift and go to state 191
    exp                            shift and go to state 192
    read                           shift and go to state 193
    term                           shift and go to state 107
    factor                         shift and go to state 108
    vcte                           shift and go to state 109
    openP                          shift and go to state 110
    cte_int                        shift and go to state 111
    cte_float                      shift and go to state 112
    cte_string                     shift and go to state 113
    funCall                        shift and go to state 115
    vectormatriz                   shift and go to state 116
    negativo                       shift and go to state 118
    aidi                           shift and go to state 64
    vm1                            shift and go to state 121
    empty                          shift and go to state 123

state 129

    (101) condition -> IF head_cond . body condition1
    (108) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 139

    body                           shift and go to state 194

state 130

    (107) head_cond -> OPENPAREN . expression close_condition
    (157) expression -> . exp loper exp
    (158) expression -> . exp
    (159) exp -> . term
    (160) exp -> . term exp_o exp
    (165) term -> . factor term_o term
    (166) term -> . factor
    (169) factor -> . vcte
    (170) factor -> . openP expression closeP
    (38) vcte -> . cte_int
    (39) vcte -> . cte_float
    (40) vcte -> . cte_string
    (41) vcte -> . id
    (42) vcte -> . funCall
    (43) vcte -> . vectormatriz
    (163) openP -> . OPENPAREN
    (89) cte_int -> . negativo CTEINT
    (90) cte_float -> . negativo CTEFLOAT
    (91) cte_string -> . CTESTRING
    (80) id -> . aidi indice_dimensionada
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (44) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (45) vectormatriz -> . vm1
    (171) negativo -> . SUBSTRACTION
    (172) negativo -> . empty
    (79) aidi -> . ID
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (173) empty -> .

    OPENPAREN       shift and go to state 117
    CTESTRING       shift and go to state 119
    ID              shift and go to state 63
    OPENBRACKET     shift and go to state 120
    SUBSTRACTION    shift and go to state 122
    CTEINT          reduce using rule 173 (empty -> .)
    CTEFLOAT        reduce using rule 173 (empty -> .)

    expression                     shift and go to state 195
    exp                            shift and go to state 182
    term                           shift and go to state 107
    factor                         shift and go to state 108
    vcte                           shift and go to state 109
    openP                          shift and go to state 110
    cte_int                        shift and go to state 111
    cte_float                      shift and go to state 112
    cte_string                     shift and go to state 113
    id                             shift and go to state 114
    funCall                        shift and go to state 115
    vectormatriz                   shift and go to state 116
    negativo                       shift and go to state 118
    aidi                           shift and go to state 64
    vm1                            shift and go to state 121
    empty                          shift and go to state 123

state 131

    (70) print -> PRINT OPENPAREN . expression CLOSEPAREN SEMICOLON
    (157) expression -> . exp loper exp
    (158) expression -> . exp
    (159) exp -> . term
    (160) exp -> . term exp_o exp
    (165) term -> . factor term_o term
    (166) term -> . factor
    (169) factor -> . vcte
    (170) factor -> . openP expression closeP
    (38) vcte -> . cte_int
    (39) vcte -> . cte_float
    (40) vcte -> . cte_string
    (41) vcte -> . id
    (42) vcte -> . funCall
    (43) vcte -> . vectormatriz
    (163) openP -> . OPENPAREN
    (89) cte_int -> . negativo CTEINT
    (90) cte_float -> . negativo CTEFLOAT
    (91) cte_string -> . CTESTRING
    (80) id -> . aidi indice_dimensionada
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (44) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (45) vectormatriz -> . vm1
    (171) negativo -> . SUBSTRACTION
    (172) negativo -> . empty
    (79) aidi -> . ID
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (173) empty -> .

    OPENPAREN       shift and go to state 117
    CTESTRING       shift and go to state 119
    ID              shift and go to state 63
    OPENBRACKET     shift and go to state 120
    SUBSTRACTION    shift and go to state 122
    CTEINT          reduce using rule 173 (empty -> .)
    CTEFLOAT        reduce using rule 173 (empty -> .)

    expression                     shift and go to state 196
    exp                            shift and go to state 182
    term                           shift and go to state 107
    factor                         shift and go to state 108
    vcte                           shift and go to state 109
    openP                          shift and go to state 110
    cte_int                        shift and go to state 111
    cte_float                      shift and go to state 112
    cte_string                     shift and go to state 113
    id                             shift and go to state 114
    funCall                        shift and go to state 115
    vectormatriz                   shift and go to state 116
    negativo                       shift and go to state 118
    aidi                           shift and go to state 64
    vm1                            shift and go to state 121
    empty                          shift and go to state 123

state 132

    (71) read -> READ OPENPAREN . id read1 CLOSEPAREN SEMICOLON
    (80) id -> . aidi indice_dimensionada
    (79) aidi -> . ID

    ID              shift and go to state 198

    id                             shift and go to state 197
    aidi                           shift and go to state 64

state 133

    (81) funCall -> ID iniciaFunCall . funCall2 terminaFunCall
    (84) funCall2 -> . funCallParam funCall3
    (85) funCall2 -> . empty
    (88) funCallParam -> . exp
    (173) empty -> .
    (159) exp -> . term
    (160) exp -> . term exp_o exp
    (165) term -> . factor term_o term
    (166) term -> . factor
    (169) factor -> . vcte
    (170) factor -> . openP expression closeP
    (38) vcte -> . cte_int
    (39) vcte -> . cte_float
    (40) vcte -> . cte_string
    (41) vcte -> . id
    (42) vcte -> . funCall
    (43) vcte -> . vectormatriz
    (163) openP -> . OPENPAREN
    (89) cte_int -> . negativo CTEINT
    (90) cte_float -> . negativo CTEFLOAT
    (91) cte_string -> . CTESTRING
    (80) id -> . aidi indice_dimensionada
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (44) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (45) vectormatriz -> . vm1
    (171) negativo -> . SUBSTRACTION
    (172) negativo -> . empty
    (79) aidi -> . ID
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    CLOSEPAREN      reduce using rule 173 (empty -> .)
    CTEINT          reduce using rule 173 (empty -> .)
    CTEFLOAT        reduce using rule 173 (empty -> .)
    OPENPAREN       shift and go to state 117
    CTESTRING       shift and go to state 119
    ID              shift and go to state 63
    OPENBRACKET     shift and go to state 120
    SUBSTRACTION    shift and go to state 122

    funCall2                       shift and go to state 199
    funCallParam                   shift and go to state 200
    empty                          shift and go to state 201
    exp                            shift and go to state 202
    term                           shift and go to state 107
    factor                         shift and go to state 108
    vcte                           shift and go to state 109
    openP                          shift and go to state 110
    cte_int                        shift and go to state 111
    cte_float                      shift and go to state 112
    cte_string                     shift and go to state 113
    id                             shift and go to state 114
    funCall                        shift and go to state 115
    vectormatriz                   shift and go to state 116
    negativo                       shift and go to state 118
    aidi                           shift and go to state 64
    vm1                            shift and go to state 121

state 134

    (82) iniciaFunCall -> OPENPAREN .

    OPENPAREN       reduce using rule 82 (iniciaFunCall -> OPENPAREN .)
    CTESTRING       reduce using rule 82 (iniciaFunCall -> OPENPAREN .)
    ID              reduce using rule 82 (iniciaFunCall -> OPENPAREN .)
    OPENBRACKET     reduce using rule 82 (iniciaFunCall -> OPENPAREN .)
    SUBSTRACTION    reduce using rule 82 (iniciaFunCall -> OPENPAREN .)
    CLOSEPAREN      reduce using rule 82 (iniciaFunCall -> OPENPAREN .)
    CTEINT          reduce using rule 82 (iniciaFunCall -> OPENPAREN .)
    CTEFLOAT        reduce using rule 82 (iniciaFunCall -> OPENPAREN .)


state 135

    (80) id -> aidi indice_dimensionada .

    EQUALS          reduce using rule 80 (id -> aidi indice_dimensionada .)
    MULTIPLICATION  reduce using rule 80 (id -> aidi indice_dimensionada .)
    DIVISION        reduce using rule 80 (id -> aidi indice_dimensionada .)
    ADDITION        reduce using rule 80 (id -> aidi indice_dimensionada .)
    SUBSTRACTION    reduce using rule 80 (id -> aidi indice_dimensionada .)
    SEMICOLON       reduce using rule 80 (id -> aidi indice_dimensionada .)
    GREATER         reduce using rule 80 (id -> aidi indice_dimensionada .)
    LESS            reduce using rule 80 (id -> aidi indice_dimensionada .)
    GREATEREQ       reduce using rule 80 (id -> aidi indice_dimensionada .)
    LESSEQ          reduce using rule 80 (id -> aidi indice_dimensionada .)
    NOTEQUAL        reduce using rule 80 (id -> aidi indice_dimensionada .)
    ISEQUAL         reduce using rule 80 (id -> aidi indice_dimensionada .)
    CLOSEPAREN      reduce using rule 80 (id -> aidi indice_dimensionada .)
    COMMA           reduce using rule 80 (id -> aidi indice_dimensionada .)
    CLOSEBRACKET    reduce using rule 80 (id -> aidi indice_dimensionada .)
    OPENBRACKET     reduce using rule 80 (id -> aidi indice_dimensionada .)


state 136

    (76) indice_dimensionada -> OPENBRACKET . exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (77) indice_dimensionada -> OPENBRACKET . exp CLOSEBRACKET
    (159) exp -> . term
    (160) exp -> . term exp_o exp
    (165) term -> . factor term_o term
    (166) term -> . factor
    (169) factor -> . vcte
    (170) factor -> . openP expression closeP
    (38) vcte -> . cte_int
    (39) vcte -> . cte_float
    (40) vcte -> . cte_string
    (41) vcte -> . id
    (42) vcte -> . funCall
    (43) vcte -> . vectormatriz
    (163) openP -> . OPENPAREN
    (89) cte_int -> . negativo CTEINT
    (90) cte_float -> . negativo CTEFLOAT
    (91) cte_string -> . CTESTRING
    (80) id -> . aidi indice_dimensionada
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (44) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (45) vectormatriz -> . vm1
    (171) negativo -> . SUBSTRACTION
    (172) negativo -> . empty
    (79) aidi -> . ID
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (173) empty -> .

    OPENPAREN       shift and go to state 117
    CTESTRING       shift and go to state 119
    ID              shift and go to state 63
    OPENBRACKET     shift and go to state 120
    SUBSTRACTION    shift and go to state 122
    CTEINT          reduce using rule 173 (empty -> .)
    CTEFLOAT        reduce using rule 173 (empty -> .)

    exp                            shift and go to state 203
    term                           shift and go to state 107
    factor                         shift and go to state 108
    vcte                           shift and go to state 109
    openP                          shift and go to state 110
    cte_int                        shift and go to state 111
    cte_float                      shift and go to state 112
    cte_string                     shift and go to state 113
    id                             shift and go to state 114
    funCall                        shift and go to state 115
    vectormatriz                   shift and go to state 116
    negativo                       shift and go to state 118
    aidi                           shift and go to state 64
    vm1                            shift and go to state 121
    empty                          shift and go to state 123

state 137

    (78) indice_dimensionada -> empty .

    EQUALS          reduce using rule 78 (indice_dimensionada -> empty .)
    MULTIPLICATION  reduce using rule 78 (indice_dimensionada -> empty .)
    DIVISION        reduce using rule 78 (indice_dimensionada -> empty .)
    ADDITION        reduce using rule 78 (indice_dimensionada -> empty .)
    SUBSTRACTION    reduce using rule 78 (indice_dimensionada -> empty .)
    SEMICOLON       reduce using rule 78 (indice_dimensionada -> empty .)
    GREATER         reduce using rule 78 (indice_dimensionada -> empty .)
    LESS            reduce using rule 78 (indice_dimensionada -> empty .)
    GREATEREQ       reduce using rule 78 (indice_dimensionada -> empty .)
    LESSEQ          reduce using rule 78 (indice_dimensionada -> empty .)
    NOTEQUAL        reduce using rule 78 (indice_dimensionada -> empty .)
    ISEQUAL         reduce using rule 78 (indice_dimensionada -> empty .)
    CLOSEPAREN      reduce using rule 78 (indice_dimensionada -> empty .)
    COMMA           reduce using rule 78 (indice_dimensionada -> empty .)
    CLOSEBRACKET    reduce using rule 78 (indice_dimensionada -> empty .)
    OPENBRACKET     reduce using rule 78 (indice_dimensionada -> empty .)


state 138

    (120) while -> while1 body .

    IF              reduce using rule 120 (while -> while1 body .)
    PRINT           reduce using rule 120 (while -> while1 body .)
    READ            reduce using rule 120 (while -> while1 body .)
    ID              reduce using rule 120 (while -> while1 body .)
    FOR             reduce using rule 120 (while -> while1 body .)
    CIRCLE          reduce using rule 120 (while -> while1 body .)
    SQUARE          reduce using rule 120 (while -> while1 body .)
    TRIANGLE        reduce using rule 120 (while -> while1 body .)
    RECTANGLE       reduce using rule 120 (while -> while1 body .)
    HIDE_STAR       reduce using rule 120 (while -> while1 body .)
    SHOW_STAR       reduce using rule 120 (while -> while1 body .)
    EXITONCLICK     reduce using rule 120 (while -> while1 body .)
    CLEAR           reduce using rule 120 (while -> while1 body .)
    BEGINFILL       reduce using rule 120 (while -> while1 body .)
    ENDFILL         reduce using rule 120 (while -> while1 body .)
    COLOR_STAR      reduce using rule 120 (while -> while1 body .)
    SIZE_STAR       reduce using rule 120 (while -> while1 body .)
    SPEED           reduce using rule 120 (while -> while1 body .)
    POSITION        reduce using rule 120 (while -> while1 body .)
    HAND_DOWN       reduce using rule 120 (while -> while1 body .)
    HAND_UP         reduce using rule 120 (while -> while1 body .)
    GO              reduce using rule 120 (while -> while1 body .)
    LEFT            reduce using rule 120 (while -> while1 body .)
    RIGHT           reduce using rule 120 (while -> while1 body .)
    BACK            reduce using rule 120 (while -> while1 body .)
    ARC             reduce using rule 120 (while -> while1 body .)
    WHILE           reduce using rule 120 (while -> while1 body .)
    CLOSEBRACES     reduce using rule 120 (while -> while1 body .)
    RETURN          reduce using rule 120 (while -> while1 body .)


state 139

    (108) body -> OPENBRACES . body1 CLOSEBRACES
    (110) body1 -> . stmt body1
    (111) body1 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . funCall SEMICOLON
    (27) stmt -> . return
    (173) empty -> .
    (35) assignment -> . id equals assignment3 SEMICOLON
    (101) condition -> . IF head_cond body condition1
    (70) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for_v2
    (71) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (125) graphstmt -> . graphfig
    (126) graphstmt -> . graphview
    (127) graphstmt -> . graphmove
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (92) return -> . RETURN return1 SEMICOLON
    (80) id -> . aidi indice_dimensionada
    (120) while -> . while1 body
    (112) for_v2 -> . nuevo_for forBody
    (128) graphfig -> . graphfig1 SEMICOLON
    (129) graphfig -> . graphfig2 SEMICOLON
    (144) graphview -> . graphview0 SEMICOLON
    (145) graphview -> . graphview1 SEMICOLON
    (146) graphview -> . graphview2 SEMICOLON
    (134) graphmove -> . graphmove0 SEMICOLON
    (135) graphmove -> . graphmove1 SEMICOLON
    (136) graphmove -> . graphmove2 SEMICOLON
    (79) aidi -> . ID
    (121) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (113) nuevo_for -> . FOR OPENPAREN ID TWODOTS for2 CLOSEPAREN
    (130) graphfig1 -> . CIRCLE unaExp
    (131) graphfig1 -> . SQUARE unaExp
    (132) graphfig1 -> . TRIANGLE unaExp
    (133) graphfig2 -> . RECTANGLE dosExp
    (147) graphview0 -> . HIDE_STAR
    (148) graphview0 -> . SHOW_STAR
    (149) graphview0 -> . EXITONCLICK
    (150) graphview0 -> . CLEAR
    (151) graphview0 -> . BEGINFILL
    (152) graphview0 -> . ENDFILL
    (153) graphview1 -> . COLOR_STAR unaExp
    (154) graphview1 -> . SIZE_STAR unaExp
    (155) graphview1 -> . SPEED unaExp
    (156) graphview2 -> . POSITION dosExp
    (137) graphmove0 -> . HAND_DOWN
    (138) graphmove0 -> . HAND_UP
    (139) graphmove1 -> . GO unaExp
    (140) graphmove1 -> . LEFT unaExp
    (141) graphmove1 -> . RIGHT unaExp
    (142) graphmove1 -> . BACK unaExp
    (143) graphmove2 -> . ARC dosExp
    (122) while_w -> . WHILE

    CLOSEBRACES     reduce using rule 173 (empty -> .)
    IF              shift and go to state 55
    PRINT           shift and go to state 56
    READ            shift and go to state 59
    ID              shift and go to state 63
    RETURN          shift and go to state 215
    FOR             shift and go to state 76
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    EXITONCLICK     shift and go to state 83
    CLEAR           shift and go to state 84
    BEGINFILL       shift and go to state 85
    ENDFILL         shift and go to state 86
    COLOR_STAR      shift and go to state 87
    SIZE_STAR       shift and go to state 88
    SPEED           shift and go to state 89
    POSITION        shift and go to state 90
    HAND_DOWN       shift and go to state 91
    HAND_UP         shift and go to state 92
    GO              shift and go to state 93
    LEFT            shift and go to state 94
    RIGHT           shift and go to state 95
    BACK            shift and go to state 96
    ARC             shift and go to state 97
    WHILE           shift and go to state 98

    body1                          shift and go to state 204
    stmt                           shift and go to state 205
    empty                          shift and go to state 206
    assignment                     shift and go to state 207
    condition                      shift and go to state 208
    print                          shift and go to state 209
    loop                           shift and go to state 210
    read                           shift and go to state 211
    graphstmt                      shift and go to state 212
    funCall                        shift and go to state 213
    return                         shift and go to state 214
    id                             shift and go to state 54
    while                          shift and go to state 57
    for_v2                         shift and go to state 58
    graphfig                       shift and go to state 60
    graphview                      shift and go to state 61
    graphmove                      shift and go to state 62
    aidi                           shift and go to state 64
    while1                         shift and go to state 65
    nuevo_for                      shift and go to state 66
    graphfig1                      shift and go to state 67
    graphfig2                      shift and go to state 68
    graphview0                     shift and go to state 69
    graphview1                     shift and go to state 70
    graphview2                     shift and go to state 71
    graphmove0                     shift and go to state 72
    graphmove1                     shift and go to state 73
    graphmove2                     shift and go to state 74
    while_w                        shift and go to state 75

state 140

    (112) for_v2 -> nuevo_for forBody .

    IF              reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    PRINT           reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    READ            reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    ID              reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    FOR             reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    CIRCLE          reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    SQUARE          reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    TRIANGLE        reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    RECTANGLE       reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    HIDE_STAR       reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    SHOW_STAR       reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    EXITONCLICK     reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    CLEAR           reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    BEGINFILL       reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    ENDFILL         reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    COLOR_STAR      reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    SIZE_STAR       reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    SPEED           reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    POSITION        reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    HAND_DOWN       reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    HAND_UP         reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    GO              reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    LEFT            reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    RIGHT           reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    BACK            reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    ARC             reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    WHILE           reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    CLOSEBRACES     reduce using rule 112 (for_v2 -> nuevo_for forBody .)
    RETURN          reduce using rule 112 (for_v2 -> nuevo_for forBody .)


state 141

    (119) forBody -> body .

    IF              reduce using rule 119 (forBody -> body .)
    PRINT           reduce using rule 119 (forBody -> body .)
    READ            reduce using rule 119 (forBody -> body .)
    ID              reduce using rule 119 (forBody -> body .)
    FOR             reduce using rule 119 (forBody -> body .)
    CIRCLE          reduce using rule 119 (forBody -> body .)
    SQUARE          reduce using rule 119 (forBody -> body .)
    TRIANGLE        reduce using rule 119 (forBody -> body .)
    RECTANGLE       reduce using rule 119 (forBody -> body .)
    HIDE_STAR       reduce using rule 119 (forBody -> body .)
    SHOW_STAR       reduce using rule 119 (forBody -> body .)
    EXITONCLICK     reduce using rule 119 (forBody -> body .)
    CLEAR           reduce using rule 119 (forBody -> body .)
    BEGINFILL       reduce using rule 119 (forBody -> body .)
    ENDFILL         reduce using rule 119 (forBody -> body .)
    COLOR_STAR      reduce using rule 119 (forBody -> body .)
    SIZE_STAR       reduce using rule 119 (forBody -> body .)
    SPEED           reduce using rule 119 (forBody -> body .)
    POSITION        reduce using rule 119 (forBody -> body .)
    HAND_DOWN       reduce using rule 119 (forBody -> body .)
    HAND_UP         reduce using rule 119 (forBody -> body .)
    GO              reduce using rule 119 (forBody -> body .)
    LEFT            reduce using rule 119 (forBody -> body .)
    RIGHT           reduce using rule 119 (forBody -> body .)
    BACK            reduce using rule 119 (forBody -> body .)
    ARC             reduce using rule 119 (forBody -> body .)
    WHILE           reduce using rule 119 (forBody -> body .)
    CLOSEBRACES     reduce using rule 119 (forBody -> body .)
    RETURN          reduce using rule 119 (forBody -> body .)


state 142

    (128) graphfig -> graphfig1 SEMICOLON .

    IF              reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    PRINT           reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    READ            reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    ID              reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    FOR             reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    CIRCLE          reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    SQUARE          reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    TRIANGLE        reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    RECTANGLE       reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    HIDE_STAR       reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    SHOW_STAR       reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    EXITONCLICK     reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    CLEAR           reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    BEGINFILL       reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    ENDFILL         reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    COLOR_STAR      reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    SIZE_STAR       reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    SPEED           reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    POSITION        reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    HAND_DOWN       reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    HAND_UP         reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    GO              reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    LEFT            reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    RIGHT           reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    BACK            reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    ARC             reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    WHILE           reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)
    RETURN          reduce using rule 128 (graphfig -> graphfig1 SEMICOLON .)


state 143

    (129) graphfig -> graphfig2 SEMICOLON .

    IF              reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    PRINT           reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    READ            reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    ID              reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    FOR             reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    CIRCLE          reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    SQUARE          reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    TRIANGLE        reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    RECTANGLE       reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    HIDE_STAR       reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    SHOW_STAR       reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    EXITONCLICK     reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    CLEAR           reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    BEGINFILL       reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    ENDFILL         reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    COLOR_STAR      reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    SIZE_STAR       reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    SPEED           reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    POSITION        reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    HAND_DOWN       reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    HAND_UP         reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    GO              reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    LEFT            reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    RIGHT           reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    BACK            reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    ARC             reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    WHILE           reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)
    RETURN          reduce using rule 129 (graphfig -> graphfig2 SEMICOLON .)


state 144

    (144) graphview -> graphview0 SEMICOLON .

    IF              reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    PRINT           reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    READ            reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    ID              reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    FOR             reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    CIRCLE          reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    SQUARE          reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    TRIANGLE        reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    RECTANGLE       reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    HIDE_STAR       reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    SHOW_STAR       reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    EXITONCLICK     reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    CLEAR           reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    BEGINFILL       reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    ENDFILL         reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    COLOR_STAR      reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    SIZE_STAR       reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    SPEED           reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    POSITION        reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    HAND_DOWN       reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    HAND_UP         reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    GO              reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    LEFT            reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    RIGHT           reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    BACK            reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    ARC             reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    WHILE           reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    CLOSEBRACES     reduce using rule 144 (graphview -> graphview0 SEMICOLON .)
    RETURN          reduce using rule 144 (graphview -> graphview0 SEMICOLON .)


state 145

    (145) graphview -> graphview1 SEMICOLON .

    IF              reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    PRINT           reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    READ            reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    ID              reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    FOR             reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    CIRCLE          reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    SQUARE          reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    TRIANGLE        reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    RECTANGLE       reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    HIDE_STAR       reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    SHOW_STAR       reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    EXITONCLICK     reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    CLEAR           reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    BEGINFILL       reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    ENDFILL         reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    COLOR_STAR      reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    SIZE_STAR       reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    SPEED           reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    POSITION        reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    HAND_DOWN       reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    HAND_UP         reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    GO              reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    LEFT            reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    RIGHT           reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    BACK            reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    ARC             reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    WHILE           reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 145 (graphview -> graphview1 SEMICOLON .)
    RETURN          reduce using rule 145 (graphview -> graphview1 SEMICOLON .)


state 146

    (146) graphview -> graphview2 SEMICOLON .

    IF              reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    PRINT           reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    READ            reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    ID              reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    FOR             reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    CIRCLE          reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    SQUARE          reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    TRIANGLE        reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    RECTANGLE       reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    HIDE_STAR       reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    SHOW_STAR       reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    EXITONCLICK     reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    CLEAR           reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    BEGINFILL       reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    ENDFILL         reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    COLOR_STAR      reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    SIZE_STAR       reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    SPEED           reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    POSITION        reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    HAND_DOWN       reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    HAND_UP         reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    GO              reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    LEFT            reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    RIGHT           reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    BACK            reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    ARC             reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    WHILE           reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 146 (graphview -> graphview2 SEMICOLON .)
    RETURN          reduce using rule 146 (graphview -> graphview2 SEMICOLON .)


state 147

    (134) graphmove -> graphmove0 SEMICOLON .

    IF              reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    PRINT           reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    READ            reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    ID              reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    FOR             reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    CIRCLE          reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    SQUARE          reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    TRIANGLE        reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    RECTANGLE       reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    HIDE_STAR       reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    SHOW_STAR       reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    EXITONCLICK     reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    CLEAR           reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    BEGINFILL       reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    ENDFILL         reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    COLOR_STAR      reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    SIZE_STAR       reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    SPEED           reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    POSITION        reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    HAND_DOWN       reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    HAND_UP         reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    GO              reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    LEFT            reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    RIGHT           reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    BACK            reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    ARC             reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    WHILE           reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    CLOSEBRACES     reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)
    RETURN          reduce using rule 134 (graphmove -> graphmove0 SEMICOLON .)


state 148

    (135) graphmove -> graphmove1 SEMICOLON .

    IF              reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    PRINT           reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    READ            reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    ID              reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    FOR             reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    CIRCLE          reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    SQUARE          reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    TRIANGLE        reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    RECTANGLE       reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    HIDE_STAR       reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    SHOW_STAR       reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    EXITONCLICK     reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    CLEAR           reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    BEGINFILL       reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    ENDFILL         reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    COLOR_STAR      reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    SIZE_STAR       reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    SPEED           reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    POSITION        reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    HAND_DOWN       reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    HAND_UP         reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    GO              reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    LEFT            reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    RIGHT           reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    BACK            reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    ARC             reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    WHILE           reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)
    RETURN          reduce using rule 135 (graphmove -> graphmove1 SEMICOLON .)


state 149

    (136) graphmove -> graphmove2 SEMICOLON .

    IF              reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    PRINT           reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    READ            reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    ID              reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    FOR             reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    CIRCLE          reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    SQUARE          reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    TRIANGLE        reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    RECTANGLE       reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    HIDE_STAR       reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    SHOW_STAR       reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    EXITONCLICK     reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    CLEAR           reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    BEGINFILL       reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    ENDFILL         reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    COLOR_STAR      reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    SIZE_STAR       reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    SPEED           reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    POSITION        reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    HAND_DOWN       reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    HAND_UP         reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    GO              reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    LEFT            reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    RIGHT           reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    BACK            reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    ARC             reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    WHILE           reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)
    RETURN          reduce using rule 136 (graphmove -> graphmove2 SEMICOLON .)


state 150

    (121) while1 -> while_w OPENPAREN . expression CLOSEPAREN
    (157) expression -> . exp loper exp
    (158) expression -> . exp
    (159) exp -> . term
    (160) exp -> . term exp_o exp
    (165) term -> . factor term_o term
    (166) term -> . factor
    (169) factor -> . vcte
    (170) factor -> . openP expression closeP
    (38) vcte -> . cte_int
    (39) vcte -> . cte_float
    (40) vcte -> . cte_string
    (41) vcte -> . id
    (42) vcte -> . funCall
    (43) vcte -> . vectormatriz
    (163) openP -> . OPENPAREN
    (89) cte_int -> . negativo CTEINT
    (90) cte_float -> . negativo CTEFLOAT
    (91) cte_string -> . CTESTRING
    (80) id -> . aidi indice_dimensionada
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (44) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (45) vectormatriz -> . vm1
    (171) negativo -> . SUBSTRACTION
    (172) negativo -> . empty
    (79) aidi -> . ID
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (173) empty -> .

    OPENPAREN       shift and go to state 117
    CTESTRING       shift and go to state 119
    ID              shift and go to state 63
    OPENBRACKET     shift and go to state 120
    SUBSTRACTION    shift and go to state 122
    CTEINT          reduce using rule 173 (empty -> .)
    CTEFLOAT        reduce using rule 173 (empty -> .)

    expression                     shift and go to state 216
    exp                            shift and go to state 182
    term                           shift and go to state 107
    factor                         shift and go to state 108
    vcte                           shift and go to state 109
    openP                          shift and go to state 110
    cte_int                        shift and go to state 111
    cte_float                      shift and go to state 112
    cte_string                     shift and go to state 113
    id                             shift and go to state 114
    funCall                        shift and go to state 115
    vectormatriz                   shift and go to state 116
    negativo                       shift and go to state 118
    aidi                           shift and go to state 64
    vm1                            shift and go to state 121
    empty                          shift and go to state 123

state 151

    (113) nuevo_for -> FOR OPENPAREN . ID TWODOTS for2 CLOSEPAREN

    ID              shift and go to state 217


state 152

    (130) graphfig1 -> CIRCLE unaExp .

    SEMICOLON       reduce using rule 130 (graphfig1 -> CIRCLE unaExp .)


state 153

    (124) unaExp -> OPENPAREN . exp CLOSEPAREN
    (159) exp -> . term
    (160) exp -> . term exp_o exp
    (165) term -> . factor term_o term
    (166) term -> . factor
    (169) factor -> . vcte
    (170) factor -> . openP expression closeP
    (38) vcte -> . cte_int
    (39) vcte -> . cte_float
    (40) vcte -> . cte_string
    (41) vcte -> . id
    (42) vcte -> . funCall
    (43) vcte -> . vectormatriz
    (163) openP -> . OPENPAREN
    (89) cte_int -> . negativo CTEINT
    (90) cte_float -> . negativo CTEFLOAT
    (91) cte_string -> . CTESTRING
    (80) id -> . aidi indice_dimensionada
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (44) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (45) vectormatriz -> . vm1
    (171) negativo -> . SUBSTRACTION
    (172) negativo -> . empty
    (79) aidi -> . ID
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (173) empty -> .

    OPENPAREN       shift and go to state 117
    CTESTRING       shift and go to state 119
    ID              shift and go to state 63
    OPENBRACKET     shift and go to state 120
    SUBSTRACTION    shift and go to state 122
    CTEINT          reduce using rule 173 (empty -> .)
    CTEFLOAT        reduce using rule 173 (empty -> .)

    exp                            shift and go to state 218
    term                           shift and go to state 107
    factor                         shift and go to state 108
    vcte                           shift and go to state 109
    openP                          shift and go to state 110
    cte_int                        shift and go to state 111
    cte_float                      shift and go to state 112
    cte_string                     shift and go to state 113
    id                             shift and go to state 114
    funCall                        shift and go to state 115
    vectormatriz                   shift and go to state 116
    negativo                       shift and go to state 118
    aidi                           shift and go to state 64
    vm1                            shift and go to state 121
    empty                          shift and go to state 123

state 154

    (131) graphfig1 -> SQUARE unaExp .

    SEMICOLON       reduce using rule 131 (graphfig1 -> SQUARE unaExp .)


state 155

    (132) graphfig1 -> TRIANGLE unaExp .

    SEMICOLON       reduce using rule 132 (graphfig1 -> TRIANGLE unaExp .)


state 156

    (133) graphfig2 -> RECTANGLE dosExp .

    SEMICOLON       reduce using rule 133 (graphfig2 -> RECTANGLE dosExp .)


state 157

    (123) dosExp -> OPENPAREN . exp COMMA exp CLOSEPAREN
    (159) exp -> . term
    (160) exp -> . term exp_o exp
    (165) term -> . factor term_o term
    (166) term -> . factor
    (169) factor -> . vcte
    (170) factor -> . openP expression closeP
    (38) vcte -> . cte_int
    (39) vcte -> . cte_float
    (40) vcte -> . cte_string
    (41) vcte -> . id
    (42) vcte -> . funCall
    (43) vcte -> . vectormatriz
    (163) openP -> . OPENPAREN
    (89) cte_int -> . negativo CTEINT
    (90) cte_float -> . negativo CTEFLOAT
    (91) cte_string -> . CTESTRING
    (80) id -> . aidi indice_dimensionada
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (44) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (45) vectormatriz -> . vm1
    (171) negativo -> . SUBSTRACTION
    (172) negativo -> . empty
    (79) aidi -> . ID
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (173) empty -> .

    OPENPAREN       shift and go to state 117
    CTESTRING       shift and go to state 119
    ID              shift and go to state 63
    OPENBRACKET     shift and go to state 120
    SUBSTRACTION    shift and go to state 122
    CTEINT          reduce using rule 173 (empty -> .)
    CTEFLOAT        reduce using rule 173 (empty -> .)

    exp                            shift and go to state 219
    term                           shift and go to state 107
    factor                         shift and go to state 108
    vcte                           shift and go to state 109
    openP                          shift and go to state 110
    cte_int                        shift and go to state 111
    cte_float                      shift and go to state 112
    cte_string                     shift and go to state 113
    id                             shift and go to state 114
    funCall                        shift and go to state 115
    vectormatriz                   shift and go to state 116
    negativo                       shift and go to state 118
    aidi                           shift and go to state 64
    vm1                            shift and go to state 121
    empty                          shift and go to state 123

state 158

    (153) graphview1 -> COLOR_STAR unaExp .

    SEMICOLON       reduce using rule 153 (graphview1 -> COLOR_STAR unaExp .)


state 159

    (154) graphview1 -> SIZE_STAR unaExp .

    SEMICOLON       reduce using rule 154 (graphview1 -> SIZE_STAR unaExp .)


state 160

    (155) graphview1 -> SPEED unaExp .

    SEMICOLON       reduce using rule 155 (graphview1 -> SPEED unaExp .)


state 161

    (156) graphview2 -> POSITION dosExp .

    SEMICOLON       reduce using rule 156 (graphview2 -> POSITION dosExp .)


state 162

    (139) graphmove1 -> GO unaExp .

    SEMICOLON       reduce using rule 139 (graphmove1 -> GO unaExp .)


state 163

    (140) graphmove1 -> LEFT unaExp .

    SEMICOLON       reduce using rule 140 (graphmove1 -> LEFT unaExp .)


state 164

    (141) graphmove1 -> RIGHT unaExp .

    SEMICOLON       reduce using rule 141 (graphmove1 -> RIGHT unaExp .)


state 165

    (142) graphmove1 -> BACK unaExp .

    SEMICOLON       reduce using rule 142 (graphmove1 -> BACK unaExp .)


state 166

    (143) graphmove2 -> ARC dosExp .

    SEMICOLON       reduce using rule 143 (graphmove2 -> ARC dosExp .)


state 167

    (53) function_t -> FUN functionI function2 inicia_fun declara_vars . function4 termina_fun
    (60) function4 -> . stmt function4
    (61) function4 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . funCall SEMICOLON
    (27) stmt -> . return
    (173) empty -> .
    (35) assignment -> . id equals assignment3 SEMICOLON
    (101) condition -> . IF head_cond body condition1
    (70) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for_v2
    (71) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (125) graphstmt -> . graphfig
    (126) graphstmt -> . graphview
    (127) graphstmt -> . graphmove
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (92) return -> . RETURN return1 SEMICOLON
    (80) id -> . aidi indice_dimensionada
    (120) while -> . while1 body
    (112) for_v2 -> . nuevo_for forBody
    (128) graphfig -> . graphfig1 SEMICOLON
    (129) graphfig -> . graphfig2 SEMICOLON
    (144) graphview -> . graphview0 SEMICOLON
    (145) graphview -> . graphview1 SEMICOLON
    (146) graphview -> . graphview2 SEMICOLON
    (134) graphmove -> . graphmove0 SEMICOLON
    (135) graphmove -> . graphmove1 SEMICOLON
    (136) graphmove -> . graphmove2 SEMICOLON
    (79) aidi -> . ID
    (121) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (113) nuevo_for -> . FOR OPENPAREN ID TWODOTS for2 CLOSEPAREN
    (130) graphfig1 -> . CIRCLE unaExp
    (131) graphfig1 -> . SQUARE unaExp
    (132) graphfig1 -> . TRIANGLE unaExp
    (133) graphfig2 -> . RECTANGLE dosExp
    (147) graphview0 -> . HIDE_STAR
    (148) graphview0 -> . SHOW_STAR
    (149) graphview0 -> . EXITONCLICK
    (150) graphview0 -> . CLEAR
    (151) graphview0 -> . BEGINFILL
    (152) graphview0 -> . ENDFILL
    (153) graphview1 -> . COLOR_STAR unaExp
    (154) graphview1 -> . SIZE_STAR unaExp
    (155) graphview1 -> . SPEED unaExp
    (156) graphview2 -> . POSITION dosExp
    (137) graphmove0 -> . HAND_DOWN
    (138) graphmove0 -> . HAND_UP
    (139) graphmove1 -> . GO unaExp
    (140) graphmove1 -> . LEFT unaExp
    (141) graphmove1 -> . RIGHT unaExp
    (142) graphmove1 -> . BACK unaExp
    (143) graphmove2 -> . ARC dosExp
    (122) while_w -> . WHILE

    CLOSEBRACES     reduce using rule 173 (empty -> .)
    IF              shift and go to state 55
    PRINT           shift and go to state 56
    READ            shift and go to state 59
    ID              shift and go to state 63
    RETURN          shift and go to state 215
    FOR             shift and go to state 76
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    EXITONCLICK     shift and go to state 83
    CLEAR           shift and go to state 84
    BEGINFILL       shift and go to state 85
    ENDFILL         shift and go to state 86
    COLOR_STAR      shift and go to state 87
    SIZE_STAR       shift and go to state 88
    SPEED           shift and go to state 89
    POSITION        shift and go to state 90
    HAND_DOWN       shift and go to state 91
    HAND_UP         shift and go to state 92
    GO              shift and go to state 93
    LEFT            shift and go to state 94
    RIGHT           shift and go to state 95
    BACK            shift and go to state 96
    ARC             shift and go to state 97
    WHILE           shift and go to state 98

    function4                      shift and go to state 220
    stmt                           shift and go to state 221
    empty                          shift and go to state 222
    assignment                     shift and go to state 207
    condition                      shift and go to state 208
    print                          shift and go to state 209
    loop                           shift and go to state 210
    read                           shift and go to state 211
    graphstmt                      shift and go to state 212
    funCall                        shift and go to state 213
    return                         shift and go to state 214
    id                             shift and go to state 54
    while                          shift and go to state 57
    for_v2                         shift and go to state 58
    graphfig                       shift and go to state 60
    graphview                      shift and go to state 61
    graphmove                      shift and go to state 62
    aidi                           shift and go to state 64
    while1                         shift and go to state 65
    nuevo_for                      shift and go to state 66
    graphfig1                      shift and go to state 67
    graphfig2                      shift and go to state 68
    graphview0                     shift and go to state 69
    graphview1                     shift and go to state 70
    graphview2                     shift and go to state 71
    graphmove0                     shift and go to state 72
    graphmove1                     shift and go to state 73
    graphmove2                     shift and go to state 74
    while_w                        shift and go to state 75

state 168

    (57) function2 -> OPENPAREN function3 CLOSEPAREN .

    OPENBRACES      reduce using rule 57 (function2 -> OPENPAREN function3 CLOSEPAREN .)


state 169

    (58) function3 -> funParam function5 .

    CLOSEPAREN      reduce using rule 58 (function3 -> funParam function5 .)


state 170

    (64) function5 -> COMMA . funParam function5
    (66) funParam -> . type ID
    (67) type -> . INT
    (68) type -> . FLOAT
    (69) type -> . STRING

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    funParam                       shift and go to state 223
    type                           shift and go to state 104

state 171

    (65) function5 -> empty .

    CLOSEPAREN      reduce using rule 65 (function5 -> empty .)


state 172

    (66) funParam -> type ID .

    COMMA           reduce using rule 66 (funParam -> type ID .)
    CLOSEPAREN      reduce using rule 66 (funParam -> type ID .)


state 173

    (54) function_v -> FUN functionV function2 inicia_fun declara_vars . function9 termina_fun
    (62) function9 -> . stmt_v function9
    (63) function9 -> . empty
    (28) stmt_v -> . assignment
    (29) stmt_v -> . condition
    (30) stmt_v -> . print
    (31) stmt_v -> . loop
    (32) stmt_v -> . read
    (33) stmt_v -> . graphstmt
    (34) stmt_v -> . funCall SEMICOLON
    (173) empty -> .
    (35) assignment -> . id equals assignment3 SEMICOLON
    (101) condition -> . IF head_cond body condition1
    (70) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for_v2
    (71) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (125) graphstmt -> . graphfig
    (126) graphstmt -> . graphview
    (127) graphstmt -> . graphmove
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (80) id -> . aidi indice_dimensionada
    (120) while -> . while1 body
    (112) for_v2 -> . nuevo_for forBody
    (128) graphfig -> . graphfig1 SEMICOLON
    (129) graphfig -> . graphfig2 SEMICOLON
    (144) graphview -> . graphview0 SEMICOLON
    (145) graphview -> . graphview1 SEMICOLON
    (146) graphview -> . graphview2 SEMICOLON
    (134) graphmove -> . graphmove0 SEMICOLON
    (135) graphmove -> . graphmove1 SEMICOLON
    (136) graphmove -> . graphmove2 SEMICOLON
    (79) aidi -> . ID
    (121) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (113) nuevo_for -> . FOR OPENPAREN ID TWODOTS for2 CLOSEPAREN
    (130) graphfig1 -> . CIRCLE unaExp
    (131) graphfig1 -> . SQUARE unaExp
    (132) graphfig1 -> . TRIANGLE unaExp
    (133) graphfig2 -> . RECTANGLE dosExp
    (147) graphview0 -> . HIDE_STAR
    (148) graphview0 -> . SHOW_STAR
    (149) graphview0 -> . EXITONCLICK
    (150) graphview0 -> . CLEAR
    (151) graphview0 -> . BEGINFILL
    (152) graphview0 -> . ENDFILL
    (153) graphview1 -> . COLOR_STAR unaExp
    (154) graphview1 -> . SIZE_STAR unaExp
    (155) graphview1 -> . SPEED unaExp
    (156) graphview2 -> . POSITION dosExp
    (137) graphmove0 -> . HAND_DOWN
    (138) graphmove0 -> . HAND_UP
    (139) graphmove1 -> . GO unaExp
    (140) graphmove1 -> . LEFT unaExp
    (141) graphmove1 -> . RIGHT unaExp
    (142) graphmove1 -> . BACK unaExp
    (143) graphmove2 -> . ARC dosExp
    (122) while_w -> . WHILE

    CLOSEBRACES     reduce using rule 173 (empty -> .)
    IF              shift and go to state 55
    PRINT           shift and go to state 56
    READ            shift and go to state 59
    ID              shift and go to state 63
    FOR             shift and go to state 76
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    EXITONCLICK     shift and go to state 83
    CLEAR           shift and go to state 84
    BEGINFILL       shift and go to state 85
    ENDFILL         shift and go to state 86
    COLOR_STAR      shift and go to state 87
    SIZE_STAR       shift and go to state 88
    SPEED           shift and go to state 89
    POSITION        shift and go to state 90
    HAND_DOWN       shift and go to state 91
    HAND_UP         shift and go to state 92
    GO              shift and go to state 93
    LEFT            shift and go to state 94
    RIGHT           shift and go to state 95
    BACK            shift and go to state 96
    ARC             shift and go to state 97
    WHILE           shift and go to state 98

    function9                      shift and go to state 224
    stmt_v                         shift and go to state 225
    empty                          shift and go to state 226
    assignment                     shift and go to state 47
    condition                      shift and go to state 48
    print                          shift and go to state 49
    loop                           shift and go to state 50
    read                           shift and go to state 51
    graphstmt                      shift and go to state 52
    funCall                        shift and go to state 53
    id                             shift and go to state 54
    while                          shift and go to state 57
    for_v2                         shift and go to state 58
    graphfig                       shift and go to state 60
    graphview                      shift and go to state 61
    graphmove                      shift and go to state 62
    aidi                           shift and go to state 64
    while1                         shift and go to state 65
    nuevo_for                      shift and go to state 66
    graphfig1                      shift and go to state 67
    graphfig2                      shift and go to state 68
    graphview0                     shift and go to state 69
    graphview1                     shift and go to state 70
    graphview2                     shift and go to state 71
    graphmove0                     shift and go to state 72
    graphmove1                     shift and go to state 73
    graphmove2                     shift and go to state 74
    while_w                        shift and go to state 75

state 174

    (13) vars -> type ID dimensionada equals exp SEMICOLON .

    INT             reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    FLOAT           reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    STRING          reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    FUN             reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    MULTIPLICATION  reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    IF              reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    PRINT           reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    READ            reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    ID              reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    FOR             reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    CIRCLE          reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    SQUARE          reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    TRIANGLE        reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    RECTANGLE       reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    HIDE_STAR       reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    SHOW_STAR       reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    EXITONCLICK     reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    CLEAR           reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    BEGINFILL       reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    ENDFILL         reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    COLOR_STAR      reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    SIZE_STAR       reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    SPEED           reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    POSITION        reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    HAND_DOWN       reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    HAND_UP         reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    GO              reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    LEFT            reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    RIGHT           reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    BACK            reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    ARC             reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    WHILE           reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    CLOSEBRACES     reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)
    RETURN          reduce using rule 13 (vars -> type ID dimensionada equals exp SEMICOLON .)


state 175

    (160) exp -> term exp_o . exp
    (159) exp -> . term
    (160) exp -> . term exp_o exp
    (165) term -> . factor term_o term
    (166) term -> . factor
    (169) factor -> . vcte
    (170) factor -> . openP expression closeP
    (38) vcte -> . cte_int
    (39) vcte -> . cte_float
    (40) vcte -> . cte_string
    (41) vcte -> . id
    (42) vcte -> . funCall
    (43) vcte -> . vectormatriz
    (163) openP -> . OPENPAREN
    (89) cte_int -> . negativo CTEINT
    (90) cte_float -> . negativo CTEFLOAT
    (91) cte_string -> . CTESTRING
    (80) id -> . aidi indice_dimensionada
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (44) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (45) vectormatriz -> . vm1
    (171) negativo -> . SUBSTRACTION
    (172) negativo -> . empty
    (79) aidi -> . ID
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (173) empty -> .

    OPENPAREN       shift and go to state 117
    CTESTRING       shift and go to state 119
    ID              shift and go to state 63
    OPENBRACKET     shift and go to state 120
    SUBSTRACTION    shift and go to state 122
    CTEINT          reduce using rule 173 (empty -> .)
    CTEFLOAT        reduce using rule 173 (empty -> .)

    term                           shift and go to state 107
    exp                            shift and go to state 227
    factor                         shift and go to state 108
    vcte                           shift and go to state 109
    openP                          shift and go to state 110
    cte_int                        shift and go to state 111
    cte_float                      shift and go to state 112
    cte_string                     shift and go to state 113
    id                             shift and go to state 114
    funCall                        shift and go to state 115
    vectormatriz                   shift and go to state 116
    negativo                       shift and go to state 118
    aidi                           shift and go to state 64
    vm1                            shift and go to state 121
    empty                          shift and go to state 123

state 176

    (161) exp_o -> ADDITION .

    OPENPAREN       reduce using rule 161 (exp_o -> ADDITION .)
    CTESTRING       reduce using rule 161 (exp_o -> ADDITION .)
    ID              reduce using rule 161 (exp_o -> ADDITION .)
    OPENBRACKET     reduce using rule 161 (exp_o -> ADDITION .)
    SUBSTRACTION    reduce using rule 161 (exp_o -> ADDITION .)
    CTEINT          reduce using rule 161 (exp_o -> ADDITION .)
    CTEFLOAT        reduce using rule 161 (exp_o -> ADDITION .)


state 177

    (162) exp_o -> SUBSTRACTION .

    OPENPAREN       reduce using rule 162 (exp_o -> SUBSTRACTION .)
    CTESTRING       reduce using rule 162 (exp_o -> SUBSTRACTION .)
    ID              reduce using rule 162 (exp_o -> SUBSTRACTION .)
    OPENBRACKET     reduce using rule 162 (exp_o -> SUBSTRACTION .)
    SUBSTRACTION    reduce using rule 162 (exp_o -> SUBSTRACTION .)
    CTEINT          reduce using rule 162 (exp_o -> SUBSTRACTION .)
    CTEFLOAT        reduce using rule 162 (exp_o -> SUBSTRACTION .)


state 178

    (165) term -> factor term_o . term
    (165) term -> . factor term_o term
    (166) term -> . factor
    (169) factor -> . vcte
    (170) factor -> . openP expression closeP
    (38) vcte -> . cte_int
    (39) vcte -> . cte_float
    (40) vcte -> . cte_string
    (41) vcte -> . id
    (42) vcte -> . funCall
    (43) vcte -> . vectormatriz
    (163) openP -> . OPENPAREN
    (89) cte_int -> . negativo CTEINT
    (90) cte_float -> . negativo CTEFLOAT
    (91) cte_string -> . CTESTRING
    (80) id -> . aidi indice_dimensionada
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (44) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (45) vectormatriz -> . vm1
    (171) negativo -> . SUBSTRACTION
    (172) negativo -> . empty
    (79) aidi -> . ID
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (173) empty -> .

    OPENPAREN       shift and go to state 117
    CTESTRING       shift and go to state 119
    ID              shift and go to state 63
    OPENBRACKET     shift and go to state 120
    SUBSTRACTION    shift and go to state 122
    CTEINT          reduce using rule 173 (empty -> .)
    CTEFLOAT        reduce using rule 173 (empty -> .)

    factor                         shift and go to state 108
    term                           shift and go to state 228
    vcte                           shift and go to state 109
    openP                          shift and go to state 110
    cte_int                        shift and go to state 111
    cte_float                      shift and go to state 112
    cte_string                     shift and go to state 113
    id                             shift and go to state 114
    funCall                        shift and go to state 115
    vectormatriz                   shift and go to state 116
    negativo                       shift and go to state 118
    aidi                           shift and go to state 64
    vm1                            shift and go to state 121
    empty                          shift and go to state 123

state 179

    (167) term_o -> MULTIPLICATION .

    OPENPAREN       reduce using rule 167 (term_o -> MULTIPLICATION .)
    CTESTRING       reduce using rule 167 (term_o -> MULTIPLICATION .)
    ID              reduce using rule 167 (term_o -> MULTIPLICATION .)
    OPENBRACKET     reduce using rule 167 (term_o -> MULTIPLICATION .)
    SUBSTRACTION    reduce using rule 167 (term_o -> MULTIPLICATION .)
    CTEINT          reduce using rule 167 (term_o -> MULTIPLICATION .)
    CTEFLOAT        reduce using rule 167 (term_o -> MULTIPLICATION .)


state 180

    (168) term_o -> DIVISION .

    OPENPAREN       reduce using rule 168 (term_o -> DIVISION .)
    CTESTRING       reduce using rule 168 (term_o -> DIVISION .)
    ID              reduce using rule 168 (term_o -> DIVISION .)
    OPENBRACKET     reduce using rule 168 (term_o -> DIVISION .)
    SUBSTRACTION    reduce using rule 168 (term_o -> DIVISION .)
    CTEINT          reduce using rule 168 (term_o -> DIVISION .)
    CTEFLOAT        reduce using rule 168 (term_o -> DIVISION .)


state 181

    (170) factor -> openP expression . closeP
    (164) closeP -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 230

    closeP                         shift and go to state 229

state 182

    (157) expression -> exp . loper exp
    (158) expression -> exp .
    (95) loper -> . GREATER
    (96) loper -> . LESS
    (97) loper -> . GREATEREQ
    (98) loper -> . LESSEQ
    (99) loper -> . NOTEQUAL
    (100) loper -> . ISEQUAL

    CLOSEPAREN      reduce using rule 158 (expression -> exp .)
    GREATER         shift and go to state 232
    LESS            shift and go to state 233
    GREATEREQ       shift and go to state 234
    LESSEQ          shift and go to state 235
    NOTEQUAL        shift and go to state 236
    ISEQUAL         shift and go to state 237

    loper                          shift and go to state 231

state 183

    (89) cte_int -> negativo CTEINT .

    MULTIPLICATION  reduce using rule 89 (cte_int -> negativo CTEINT .)
    DIVISION        reduce using rule 89 (cte_int -> negativo CTEINT .)
    ADDITION        reduce using rule 89 (cte_int -> negativo CTEINT .)
    SUBSTRACTION    reduce using rule 89 (cte_int -> negativo CTEINT .)
    SEMICOLON       reduce using rule 89 (cte_int -> negativo CTEINT .)
    GREATER         reduce using rule 89 (cte_int -> negativo CTEINT .)
    LESS            reduce using rule 89 (cte_int -> negativo CTEINT .)
    GREATEREQ       reduce using rule 89 (cte_int -> negativo CTEINT .)
    LESSEQ          reduce using rule 89 (cte_int -> negativo CTEINT .)
    NOTEQUAL        reduce using rule 89 (cte_int -> negativo CTEINT .)
    ISEQUAL         reduce using rule 89 (cte_int -> negativo CTEINT .)
    CLOSEPAREN      reduce using rule 89 (cte_int -> negativo CTEINT .)
    COMMA           reduce using rule 89 (cte_int -> negativo CTEINT .)
    CLOSEBRACKET    reduce using rule 89 (cte_int -> negativo CTEINT .)


state 184

    (90) cte_float -> negativo CTEFLOAT .

    MULTIPLICATION  reduce using rule 90 (cte_float -> negativo CTEFLOAT .)
    DIVISION        reduce using rule 90 (cte_float -> negativo CTEFLOAT .)
    ADDITION        reduce using rule 90 (cte_float -> negativo CTEFLOAT .)
    SUBSTRACTION    reduce using rule 90 (cte_float -> negativo CTEFLOAT .)
    SEMICOLON       reduce using rule 90 (cte_float -> negativo CTEFLOAT .)
    GREATER         reduce using rule 90 (cte_float -> negativo CTEFLOAT .)
    LESS            reduce using rule 90 (cte_float -> negativo CTEFLOAT .)
    GREATEREQ       reduce using rule 90 (cte_float -> negativo CTEFLOAT .)
    LESSEQ          reduce using rule 90 (cte_float -> negativo CTEFLOAT .)
    NOTEQUAL        reduce using rule 90 (cte_float -> negativo CTEFLOAT .)
    ISEQUAL         reduce using rule 90 (cte_float -> negativo CTEFLOAT .)
    CLOSEPAREN      reduce using rule 90 (cte_float -> negativo CTEFLOAT .)
    COMMA           reduce using rule 90 (cte_float -> negativo CTEFLOAT .)
    CLOSEBRACKET    reduce using rule 90 (cte_float -> negativo CTEFLOAT .)


state 185

    (46) vm1 -> OPENBRACKET . vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> OPENBRACKET . vm2 CLOSEBRACKET
    (44) vectormatriz -> OPENBRACKET . vm1 CLOSEBRACKET
    (48) vm2 -> . exp COMMA vm2
    (49) vm2 -> . exp
    (50) vm2 -> . empty
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (159) exp -> . term
    (160) exp -> . term exp_o exp
    (173) empty -> .
    (165) term -> . factor term_o term
    (166) term -> . factor
    (169) factor -> . vcte
    (170) factor -> . openP expression closeP
    (38) vcte -> . cte_int
    (39) vcte -> . cte_float
    (40) vcte -> . cte_string
    (41) vcte -> . id
    (42) vcte -> . funCall
    (43) vcte -> . vectormatriz
    (163) openP -> . OPENPAREN
    (89) cte_int -> . negativo CTEINT
    (90) cte_float -> . negativo CTEFLOAT
    (91) cte_string -> . CTESTRING
    (80) id -> . aidi indice_dimensionada
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (44) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (45) vectormatriz -> . vm1
    (171) negativo -> . SUBSTRACTION
    (172) negativo -> . empty
    (79) aidi -> . ID

    OPENBRACKET     shift and go to state 185
    CLOSEBRACKET    reduce using rule 173 (empty -> .)
    CTEINT          reduce using rule 173 (empty -> .)
    CTEFLOAT        reduce using rule 173 (empty -> .)
    OPENPAREN       shift and go to state 117
    CTESTRING       shift and go to state 119
    ID              shift and go to state 63
    SUBSTRACTION    shift and go to state 122

    vm2                            shift and go to state 187
    vm1                            shift and go to state 186
    exp                            shift and go to state 188
    empty                          shift and go to state 189
    term                           shift and go to state 107
    factor                         shift and go to state 108
    vcte                           shift and go to state 109
    openP                          shift and go to state 110
    cte_int                        shift and go to state 111
    cte_float                      shift and go to state 112
    cte_string                     shift and go to state 113
    id                             shift and go to state 114
    funCall                        shift and go to state 115
    vectormatriz                   shift and go to state 116
    negativo                       shift and go to state 118
    aidi                           shift and go to state 64

state 186

    (44) vectormatriz -> OPENBRACKET vm1 . CLOSEBRACKET
    (45) vectormatriz -> vm1 .

  ! shift/reduce conflict for CLOSEBRACKET resolved as shift
    CLOSEBRACKET    shift and go to state 238
    MULTIPLICATION  reduce using rule 45 (vectormatriz -> vm1 .)
    DIVISION        reduce using rule 45 (vectormatriz -> vm1 .)
    ADDITION        reduce using rule 45 (vectormatriz -> vm1 .)
    SUBSTRACTION    reduce using rule 45 (vectormatriz -> vm1 .)
    COMMA           reduce using rule 45 (vectormatriz -> vm1 .)

  ! CLOSEBRACKET    [ reduce using rule 45 (vectormatriz -> vm1 .) ]


state 187

    (46) vm1 -> OPENBRACKET vm2 . CLOSEBRACKET COMMA vm1
    (47) vm1 -> OPENBRACKET vm2 . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 239


state 188

    (48) vm2 -> exp . COMMA vm2
    (49) vm2 -> exp .

    COMMA           shift and go to state 240
    CLOSEBRACKET    reduce using rule 49 (vm2 -> exp .)


state 189

    (50) vm2 -> empty .
    (172) negativo -> empty .

    CLOSEBRACKET    reduce using rule 50 (vm2 -> empty .)
    CTEINT          reduce using rule 172 (negativo -> empty .)
    CTEFLOAT        reduce using rule 172 (negativo -> empty .)


state 190

    (16) dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET . CTEINT CLOSEBRACKET

    CTEINT          shift and go to state 241


state 191

    (35) assignment -> id equals assignment3 . SEMICOLON

    SEMICOLON       shift and go to state 242


state 192

    (36) assignment3 -> exp .

    SEMICOLON       reduce using rule 36 (assignment3 -> exp .)


state 193

    (37) assignment3 -> read .

    SEMICOLON       reduce using rule 37 (assignment3 -> read .)


state 194

    (101) condition -> IF head_cond body . condition1
    (102) condition1 -> . elseif head_cond body condition1
    (103) condition1 -> . else body
    (104) condition1 -> . empty
    (105) elseif -> . ELSEIF
    (106) else -> . ELSE
    (173) empty -> .

    ELSEIF          shift and go to state 247
    ELSE            shift and go to state 248
    IF              reduce using rule 173 (empty -> .)
    PRINT           reduce using rule 173 (empty -> .)
    READ            reduce using rule 173 (empty -> .)
    ID              reduce using rule 173 (empty -> .)
    FOR             reduce using rule 173 (empty -> .)
    CIRCLE          reduce using rule 173 (empty -> .)
    SQUARE          reduce using rule 173 (empty -> .)
    TRIANGLE        reduce using rule 173 (empty -> .)
    RECTANGLE       reduce using rule 173 (empty -> .)
    HIDE_STAR       reduce using rule 173 (empty -> .)
    SHOW_STAR       reduce using rule 173 (empty -> .)
    EXITONCLICK     reduce using rule 173 (empty -> .)
    CLEAR           reduce using rule 173 (empty -> .)
    BEGINFILL       reduce using rule 173 (empty -> .)
    ENDFILL         reduce using rule 173 (empty -> .)
    COLOR_STAR      reduce using rule 173 (empty -> .)
    SIZE_STAR       reduce using rule 173 (empty -> .)
    SPEED           reduce using rule 173 (empty -> .)
    POSITION        reduce using rule 173 (empty -> .)
    HAND_DOWN       reduce using rule 173 (empty -> .)
    HAND_UP         reduce using rule 173 (empty -> .)
    GO              reduce using rule 173 (empty -> .)
    LEFT            reduce using rule 173 (empty -> .)
    RIGHT           reduce using rule 173 (empty -> .)
    BACK            reduce using rule 173 (empty -> .)
    ARC             reduce using rule 173 (empty -> .)
    WHILE           reduce using rule 173 (empty -> .)
    CLOSEBRACES     reduce using rule 173 (empty -> .)
    RETURN          reduce using rule 173 (empty -> .)

    condition1                     shift and go to state 243
    elseif                         shift and go to state 244
    else                           shift and go to state 245
    empty                          shift and go to state 246

state 195

    (107) head_cond -> OPENPAREN expression . close_condition
    (109) close_condition -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 250

    close_condition                shift and go to state 249

state 196

    (70) print -> PRINT OPENPAREN expression . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 251


state 197

    (71) read -> READ OPENPAREN id . read1 CLOSEPAREN SEMICOLON
    (72) read1 -> . OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (73) read1 -> . OPENBRACKET exp CLOSEBRACKET
    (74) read1 -> . empty
    (173) empty -> .

    OPENBRACKET     shift and go to state 253
    CLOSEPAREN      reduce using rule 173 (empty -> .)

    read1                          shift and go to state 252
    empty                          shift and go to state 254

state 198

    (79) aidi -> ID .

    OPENBRACKET     reduce using rule 79 (aidi -> ID .)
    CLOSEPAREN      reduce using rule 79 (aidi -> ID .)


state 199

    (81) funCall -> ID iniciaFunCall funCall2 . terminaFunCall
    (83) terminaFunCall -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 256

    terminaFunCall                 shift and go to state 255

state 200

    (84) funCall2 -> funCallParam . funCall3
    (86) funCall3 -> . COMMA funCallParam funCall3
    (87) funCall3 -> . empty
    (173) empty -> .

    COMMA           shift and go to state 258
    CLOSEPAREN      reduce using rule 173 (empty -> .)

    funCall3                       shift and go to state 257
    empty                          shift and go to state 259

state 201

    (85) funCall2 -> empty .
    (172) negativo -> empty .

    CLOSEPAREN      reduce using rule 85 (funCall2 -> empty .)
    CTEINT          reduce using rule 172 (negativo -> empty .)
    CTEFLOAT        reduce using rule 172 (negativo -> empty .)


state 202

    (88) funCallParam -> exp .

    COMMA           reduce using rule 88 (funCallParam -> exp .)
    CLOSEPAREN      reduce using rule 88 (funCallParam -> exp .)


state 203

    (76) indice_dimensionada -> OPENBRACKET exp . CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (77) indice_dimensionada -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 260


state 204

    (108) body -> OPENBRACES body1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 261


state 205

    (110) body1 -> stmt . body1
    (110) body1 -> . stmt body1
    (111) body1 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . funCall SEMICOLON
    (27) stmt -> . return
    (173) empty -> .
    (35) assignment -> . id equals assignment3 SEMICOLON
    (101) condition -> . IF head_cond body condition1
    (70) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for_v2
    (71) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (125) graphstmt -> . graphfig
    (126) graphstmt -> . graphview
    (127) graphstmt -> . graphmove
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (92) return -> . RETURN return1 SEMICOLON
    (80) id -> . aidi indice_dimensionada
    (120) while -> . while1 body
    (112) for_v2 -> . nuevo_for forBody
    (128) graphfig -> . graphfig1 SEMICOLON
    (129) graphfig -> . graphfig2 SEMICOLON
    (144) graphview -> . graphview0 SEMICOLON
    (145) graphview -> . graphview1 SEMICOLON
    (146) graphview -> . graphview2 SEMICOLON
    (134) graphmove -> . graphmove0 SEMICOLON
    (135) graphmove -> . graphmove1 SEMICOLON
    (136) graphmove -> . graphmove2 SEMICOLON
    (79) aidi -> . ID
    (121) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (113) nuevo_for -> . FOR OPENPAREN ID TWODOTS for2 CLOSEPAREN
    (130) graphfig1 -> . CIRCLE unaExp
    (131) graphfig1 -> . SQUARE unaExp
    (132) graphfig1 -> . TRIANGLE unaExp
    (133) graphfig2 -> . RECTANGLE dosExp
    (147) graphview0 -> . HIDE_STAR
    (148) graphview0 -> . SHOW_STAR
    (149) graphview0 -> . EXITONCLICK
    (150) graphview0 -> . CLEAR
    (151) graphview0 -> . BEGINFILL
    (152) graphview0 -> . ENDFILL
    (153) graphview1 -> . COLOR_STAR unaExp
    (154) graphview1 -> . SIZE_STAR unaExp
    (155) graphview1 -> . SPEED unaExp
    (156) graphview2 -> . POSITION dosExp
    (137) graphmove0 -> . HAND_DOWN
    (138) graphmove0 -> . HAND_UP
    (139) graphmove1 -> . GO unaExp
    (140) graphmove1 -> . LEFT unaExp
    (141) graphmove1 -> . RIGHT unaExp
    (142) graphmove1 -> . BACK unaExp
    (143) graphmove2 -> . ARC dosExp
    (122) while_w -> . WHILE

    CLOSEBRACES     reduce using rule 173 (empty -> .)
    IF              shift and go to state 55
    PRINT           shift and go to state 56
    READ            shift and go to state 59
    ID              shift and go to state 63
    RETURN          shift and go to state 215
    FOR             shift and go to state 76
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    EXITONCLICK     shift and go to state 83
    CLEAR           shift and go to state 84
    BEGINFILL       shift and go to state 85
    ENDFILL         shift and go to state 86
    COLOR_STAR      shift and go to state 87
    SIZE_STAR       shift and go to state 88
    SPEED           shift and go to state 89
    POSITION        shift and go to state 90
    HAND_DOWN       shift and go to state 91
    HAND_UP         shift and go to state 92
    GO              shift and go to state 93
    LEFT            shift and go to state 94
    RIGHT           shift and go to state 95
    BACK            shift and go to state 96
    ARC             shift and go to state 97
    WHILE           shift and go to state 98

    stmt                           shift and go to state 205
    body1                          shift and go to state 262
    empty                          shift and go to state 206
    assignment                     shift and go to state 207
    condition                      shift and go to state 208
    print                          shift and go to state 209
    loop                           shift and go to state 210
    read                           shift and go to state 211
    graphstmt                      shift and go to state 212
    funCall                        shift and go to state 213
    return                         shift and go to state 214
    id                             shift and go to state 54
    while                          shift and go to state 57
    for_v2                         shift and go to state 58
    graphfig                       shift and go to state 60
    graphview                      shift and go to state 61
    graphmove                      shift and go to state 62
    aidi                           shift and go to state 64
    while1                         shift and go to state 65
    nuevo_for                      shift and go to state 66
    graphfig1                      shift and go to state 67
    graphfig2                      shift and go to state 68
    graphview0                     shift and go to state 69
    graphview1                     shift and go to state 70
    graphview2                     shift and go to state 71
    graphmove0                     shift and go to state 72
    graphmove1                     shift and go to state 73
    graphmove2                     shift and go to state 74
    while_w                        shift and go to state 75

state 206

    (111) body1 -> empty .

    CLOSEBRACES     reduce using rule 111 (body1 -> empty .)


state 207

    (20) stmt -> assignment .

    IF              reduce using rule 20 (stmt -> assignment .)
    PRINT           reduce using rule 20 (stmt -> assignment .)
    READ            reduce using rule 20 (stmt -> assignment .)
    ID              reduce using rule 20 (stmt -> assignment .)
    RETURN          reduce using rule 20 (stmt -> assignment .)
    FOR             reduce using rule 20 (stmt -> assignment .)
    CIRCLE          reduce using rule 20 (stmt -> assignment .)
    SQUARE          reduce using rule 20 (stmt -> assignment .)
    TRIANGLE        reduce using rule 20 (stmt -> assignment .)
    RECTANGLE       reduce using rule 20 (stmt -> assignment .)
    HIDE_STAR       reduce using rule 20 (stmt -> assignment .)
    SHOW_STAR       reduce using rule 20 (stmt -> assignment .)
    EXITONCLICK     reduce using rule 20 (stmt -> assignment .)
    CLEAR           reduce using rule 20 (stmt -> assignment .)
    BEGINFILL       reduce using rule 20 (stmt -> assignment .)
    ENDFILL         reduce using rule 20 (stmt -> assignment .)
    COLOR_STAR      reduce using rule 20 (stmt -> assignment .)
    SIZE_STAR       reduce using rule 20 (stmt -> assignment .)
    SPEED           reduce using rule 20 (stmt -> assignment .)
    POSITION        reduce using rule 20 (stmt -> assignment .)
    HAND_DOWN       reduce using rule 20 (stmt -> assignment .)
    HAND_UP         reduce using rule 20 (stmt -> assignment .)
    GO              reduce using rule 20 (stmt -> assignment .)
    LEFT            reduce using rule 20 (stmt -> assignment .)
    RIGHT           reduce using rule 20 (stmt -> assignment .)
    BACK            reduce using rule 20 (stmt -> assignment .)
    ARC             reduce using rule 20 (stmt -> assignment .)
    WHILE           reduce using rule 20 (stmt -> assignment .)
    CLOSEBRACES     reduce using rule 20 (stmt -> assignment .)


state 208

    (21) stmt -> condition .

    IF              reduce using rule 21 (stmt -> condition .)
    PRINT           reduce using rule 21 (stmt -> condition .)
    READ            reduce using rule 21 (stmt -> condition .)
    ID              reduce using rule 21 (stmt -> condition .)
    RETURN          reduce using rule 21 (stmt -> condition .)
    FOR             reduce using rule 21 (stmt -> condition .)
    CIRCLE          reduce using rule 21 (stmt -> condition .)
    SQUARE          reduce using rule 21 (stmt -> condition .)
    TRIANGLE        reduce using rule 21 (stmt -> condition .)
    RECTANGLE       reduce using rule 21 (stmt -> condition .)
    HIDE_STAR       reduce using rule 21 (stmt -> condition .)
    SHOW_STAR       reduce using rule 21 (stmt -> condition .)
    EXITONCLICK     reduce using rule 21 (stmt -> condition .)
    CLEAR           reduce using rule 21 (stmt -> condition .)
    BEGINFILL       reduce using rule 21 (stmt -> condition .)
    ENDFILL         reduce using rule 21 (stmt -> condition .)
    COLOR_STAR      reduce using rule 21 (stmt -> condition .)
    SIZE_STAR       reduce using rule 21 (stmt -> condition .)
    SPEED           reduce using rule 21 (stmt -> condition .)
    POSITION        reduce using rule 21 (stmt -> condition .)
    HAND_DOWN       reduce using rule 21 (stmt -> condition .)
    HAND_UP         reduce using rule 21 (stmt -> condition .)
    GO              reduce using rule 21 (stmt -> condition .)
    LEFT            reduce using rule 21 (stmt -> condition .)
    RIGHT           reduce using rule 21 (stmt -> condition .)
    BACK            reduce using rule 21 (stmt -> condition .)
    ARC             reduce using rule 21 (stmt -> condition .)
    WHILE           reduce using rule 21 (stmt -> condition .)
    CLOSEBRACES     reduce using rule 21 (stmt -> condition .)


state 209

    (22) stmt -> print .

    IF              reduce using rule 22 (stmt -> print .)
    PRINT           reduce using rule 22 (stmt -> print .)
    READ            reduce using rule 22 (stmt -> print .)
    ID              reduce using rule 22 (stmt -> print .)
    RETURN          reduce using rule 22 (stmt -> print .)
    FOR             reduce using rule 22 (stmt -> print .)
    CIRCLE          reduce using rule 22 (stmt -> print .)
    SQUARE          reduce using rule 22 (stmt -> print .)
    TRIANGLE        reduce using rule 22 (stmt -> print .)
    RECTANGLE       reduce using rule 22 (stmt -> print .)
    HIDE_STAR       reduce using rule 22 (stmt -> print .)
    SHOW_STAR       reduce using rule 22 (stmt -> print .)
    EXITONCLICK     reduce using rule 22 (stmt -> print .)
    CLEAR           reduce using rule 22 (stmt -> print .)
    BEGINFILL       reduce using rule 22 (stmt -> print .)
    ENDFILL         reduce using rule 22 (stmt -> print .)
    COLOR_STAR      reduce using rule 22 (stmt -> print .)
    SIZE_STAR       reduce using rule 22 (stmt -> print .)
    SPEED           reduce using rule 22 (stmt -> print .)
    POSITION        reduce using rule 22 (stmt -> print .)
    HAND_DOWN       reduce using rule 22 (stmt -> print .)
    HAND_UP         reduce using rule 22 (stmt -> print .)
    GO              reduce using rule 22 (stmt -> print .)
    LEFT            reduce using rule 22 (stmt -> print .)
    RIGHT           reduce using rule 22 (stmt -> print .)
    BACK            reduce using rule 22 (stmt -> print .)
    ARC             reduce using rule 22 (stmt -> print .)
    WHILE           reduce using rule 22 (stmt -> print .)
    CLOSEBRACES     reduce using rule 22 (stmt -> print .)


state 210

    (23) stmt -> loop .

    IF              reduce using rule 23 (stmt -> loop .)
    PRINT           reduce using rule 23 (stmt -> loop .)
    READ            reduce using rule 23 (stmt -> loop .)
    ID              reduce using rule 23 (stmt -> loop .)
    RETURN          reduce using rule 23 (stmt -> loop .)
    FOR             reduce using rule 23 (stmt -> loop .)
    CIRCLE          reduce using rule 23 (stmt -> loop .)
    SQUARE          reduce using rule 23 (stmt -> loop .)
    TRIANGLE        reduce using rule 23 (stmt -> loop .)
    RECTANGLE       reduce using rule 23 (stmt -> loop .)
    HIDE_STAR       reduce using rule 23 (stmt -> loop .)
    SHOW_STAR       reduce using rule 23 (stmt -> loop .)
    EXITONCLICK     reduce using rule 23 (stmt -> loop .)
    CLEAR           reduce using rule 23 (stmt -> loop .)
    BEGINFILL       reduce using rule 23 (stmt -> loop .)
    ENDFILL         reduce using rule 23 (stmt -> loop .)
    COLOR_STAR      reduce using rule 23 (stmt -> loop .)
    SIZE_STAR       reduce using rule 23 (stmt -> loop .)
    SPEED           reduce using rule 23 (stmt -> loop .)
    POSITION        reduce using rule 23 (stmt -> loop .)
    HAND_DOWN       reduce using rule 23 (stmt -> loop .)
    HAND_UP         reduce using rule 23 (stmt -> loop .)
    GO              reduce using rule 23 (stmt -> loop .)
    LEFT            reduce using rule 23 (stmt -> loop .)
    RIGHT           reduce using rule 23 (stmt -> loop .)
    BACK            reduce using rule 23 (stmt -> loop .)
    ARC             reduce using rule 23 (stmt -> loop .)
    WHILE           reduce using rule 23 (stmt -> loop .)
    CLOSEBRACES     reduce using rule 23 (stmt -> loop .)


state 211

    (24) stmt -> read .

    IF              reduce using rule 24 (stmt -> read .)
    PRINT           reduce using rule 24 (stmt -> read .)
    READ            reduce using rule 24 (stmt -> read .)
    ID              reduce using rule 24 (stmt -> read .)
    RETURN          reduce using rule 24 (stmt -> read .)
    FOR             reduce using rule 24 (stmt -> read .)
    CIRCLE          reduce using rule 24 (stmt -> read .)
    SQUARE          reduce using rule 24 (stmt -> read .)
    TRIANGLE        reduce using rule 24 (stmt -> read .)
    RECTANGLE       reduce using rule 24 (stmt -> read .)
    HIDE_STAR       reduce using rule 24 (stmt -> read .)
    SHOW_STAR       reduce using rule 24 (stmt -> read .)
    EXITONCLICK     reduce using rule 24 (stmt -> read .)
    CLEAR           reduce using rule 24 (stmt -> read .)
    BEGINFILL       reduce using rule 24 (stmt -> read .)
    ENDFILL         reduce using rule 24 (stmt -> read .)
    COLOR_STAR      reduce using rule 24 (stmt -> read .)
    SIZE_STAR       reduce using rule 24 (stmt -> read .)
    SPEED           reduce using rule 24 (stmt -> read .)
    POSITION        reduce using rule 24 (stmt -> read .)
    HAND_DOWN       reduce using rule 24 (stmt -> read .)
    HAND_UP         reduce using rule 24 (stmt -> read .)
    GO              reduce using rule 24 (stmt -> read .)
    LEFT            reduce using rule 24 (stmt -> read .)
    RIGHT           reduce using rule 24 (stmt -> read .)
    BACK            reduce using rule 24 (stmt -> read .)
    ARC             reduce using rule 24 (stmt -> read .)
    WHILE           reduce using rule 24 (stmt -> read .)
    CLOSEBRACES     reduce using rule 24 (stmt -> read .)


state 212

    (25) stmt -> graphstmt .

    IF              reduce using rule 25 (stmt -> graphstmt .)
    PRINT           reduce using rule 25 (stmt -> graphstmt .)
    READ            reduce using rule 25 (stmt -> graphstmt .)
    ID              reduce using rule 25 (stmt -> graphstmt .)
    RETURN          reduce using rule 25 (stmt -> graphstmt .)
    FOR             reduce using rule 25 (stmt -> graphstmt .)
    CIRCLE          reduce using rule 25 (stmt -> graphstmt .)
    SQUARE          reduce using rule 25 (stmt -> graphstmt .)
    TRIANGLE        reduce using rule 25 (stmt -> graphstmt .)
    RECTANGLE       reduce using rule 25 (stmt -> graphstmt .)
    HIDE_STAR       reduce using rule 25 (stmt -> graphstmt .)
    SHOW_STAR       reduce using rule 25 (stmt -> graphstmt .)
    EXITONCLICK     reduce using rule 25 (stmt -> graphstmt .)
    CLEAR           reduce using rule 25 (stmt -> graphstmt .)
    BEGINFILL       reduce using rule 25 (stmt -> graphstmt .)
    ENDFILL         reduce using rule 25 (stmt -> graphstmt .)
    COLOR_STAR      reduce using rule 25 (stmt -> graphstmt .)
    SIZE_STAR       reduce using rule 25 (stmt -> graphstmt .)
    SPEED           reduce using rule 25 (stmt -> graphstmt .)
    POSITION        reduce using rule 25 (stmt -> graphstmt .)
    HAND_DOWN       reduce using rule 25 (stmt -> graphstmt .)
    HAND_UP         reduce using rule 25 (stmt -> graphstmt .)
    GO              reduce using rule 25 (stmt -> graphstmt .)
    LEFT            reduce using rule 25 (stmt -> graphstmt .)
    RIGHT           reduce using rule 25 (stmt -> graphstmt .)
    BACK            reduce using rule 25 (stmt -> graphstmt .)
    ARC             reduce using rule 25 (stmt -> graphstmt .)
    WHILE           reduce using rule 25 (stmt -> graphstmt .)
    CLOSEBRACES     reduce using rule 25 (stmt -> graphstmt .)


state 213

    (26) stmt -> funCall . SEMICOLON

    SEMICOLON       shift and go to state 263


state 214

    (27) stmt -> return .

    IF              reduce using rule 27 (stmt -> return .)
    PRINT           reduce using rule 27 (stmt -> return .)
    READ            reduce using rule 27 (stmt -> return .)
    ID              reduce using rule 27 (stmt -> return .)
    RETURN          reduce using rule 27 (stmt -> return .)
    FOR             reduce using rule 27 (stmt -> return .)
    CIRCLE          reduce using rule 27 (stmt -> return .)
    SQUARE          reduce using rule 27 (stmt -> return .)
    TRIANGLE        reduce using rule 27 (stmt -> return .)
    RECTANGLE       reduce using rule 27 (stmt -> return .)
    HIDE_STAR       reduce using rule 27 (stmt -> return .)
    SHOW_STAR       reduce using rule 27 (stmt -> return .)
    EXITONCLICK     reduce using rule 27 (stmt -> return .)
    CLEAR           reduce using rule 27 (stmt -> return .)
    BEGINFILL       reduce using rule 27 (stmt -> return .)
    ENDFILL         reduce using rule 27 (stmt -> return .)
    COLOR_STAR      reduce using rule 27 (stmt -> return .)
    SIZE_STAR       reduce using rule 27 (stmt -> return .)
    SPEED           reduce using rule 27 (stmt -> return .)
    POSITION        reduce using rule 27 (stmt -> return .)
    HAND_DOWN       reduce using rule 27 (stmt -> return .)
    HAND_UP         reduce using rule 27 (stmt -> return .)
    GO              reduce using rule 27 (stmt -> return .)
    LEFT            reduce using rule 27 (stmt -> return .)
    RIGHT           reduce using rule 27 (stmt -> return .)
    BACK            reduce using rule 27 (stmt -> return .)
    ARC             reduce using rule 27 (stmt -> return .)
    WHILE           reduce using rule 27 (stmt -> return .)
    CLOSEBRACES     reduce using rule 27 (stmt -> return .)


state 215

    (92) return -> RETURN . return1 SEMICOLON
    (93) return1 -> . vcte
    (94) return1 -> . exp
    (38) vcte -> . cte_int
    (39) vcte -> . cte_float
    (40) vcte -> . cte_string
    (41) vcte -> . id
    (42) vcte -> . funCall
    (43) vcte -> . vectormatriz
    (159) exp -> . term
    (160) exp -> . term exp_o exp
    (89) cte_int -> . negativo CTEINT
    (90) cte_float -> . negativo CTEFLOAT
    (91) cte_string -> . CTESTRING
    (80) id -> . aidi indice_dimensionada
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (44) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (45) vectormatriz -> . vm1
    (165) term -> . factor term_o term
    (166) term -> . factor
    (171) negativo -> . SUBSTRACTION
    (172) negativo -> . empty
    (79) aidi -> . ID
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (169) factor -> . vcte
    (170) factor -> . openP expression closeP
    (173) empty -> .
    (163) openP -> . OPENPAREN

    CTESTRING       shift and go to state 119
    ID              shift and go to state 63
    OPENBRACKET     shift and go to state 120
    SUBSTRACTION    shift and go to state 122
    CTEINT          reduce using rule 173 (empty -> .)
    CTEFLOAT        reduce using rule 173 (empty -> .)
    OPENPAREN       shift and go to state 117

    return1                        shift and go to state 264
    vcte                           shift and go to state 265
    exp                            shift and go to state 266
    cte_int                        shift and go to state 111
    cte_float                      shift and go to state 112
    cte_string                     shift and go to state 113
    id                             shift and go to state 114
    funCall                        shift and go to state 115
    vectormatriz                   shift and go to state 116
    term                           shift and go to state 107
    negativo                       shift and go to state 118
    aidi                           shift and go to state 64
    vm1                            shift and go to state 121
    factor                         shift and go to state 108
    empty                          shift and go to state 123
    openP                          shift and go to state 110

state 216

    (121) while1 -> while_w OPENPAREN expression . CLOSEPAREN

    CLOSEPAREN      shift and go to state 267


state 217

    (113) nuevo_for -> FOR OPENPAREN ID . TWODOTS for2 CLOSEPAREN

    TWODOTS         shift and go to state 268


state 218

    (124) unaExp -> OPENPAREN exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 269


state 219

    (123) dosExp -> OPENPAREN exp . COMMA exp CLOSEPAREN

    COMMA           shift and go to state 270


state 220

    (53) function_t -> FUN functionI function2 inicia_fun declara_vars function4 . termina_fun
    (56) termina_fun -> . CLOSEBRACES

    CLOSEBRACES     shift and go to state 272

    termina_fun                    shift and go to state 271

state 221

    (60) function4 -> stmt . function4
    (60) function4 -> . stmt function4
    (61) function4 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . funCall SEMICOLON
    (27) stmt -> . return
    (173) empty -> .
    (35) assignment -> . id equals assignment3 SEMICOLON
    (101) condition -> . IF head_cond body condition1
    (70) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for_v2
    (71) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (125) graphstmt -> . graphfig
    (126) graphstmt -> . graphview
    (127) graphstmt -> . graphmove
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (92) return -> . RETURN return1 SEMICOLON
    (80) id -> . aidi indice_dimensionada
    (120) while -> . while1 body
    (112) for_v2 -> . nuevo_for forBody
    (128) graphfig -> . graphfig1 SEMICOLON
    (129) graphfig -> . graphfig2 SEMICOLON
    (144) graphview -> . graphview0 SEMICOLON
    (145) graphview -> . graphview1 SEMICOLON
    (146) graphview -> . graphview2 SEMICOLON
    (134) graphmove -> . graphmove0 SEMICOLON
    (135) graphmove -> . graphmove1 SEMICOLON
    (136) graphmove -> . graphmove2 SEMICOLON
    (79) aidi -> . ID
    (121) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (113) nuevo_for -> . FOR OPENPAREN ID TWODOTS for2 CLOSEPAREN
    (130) graphfig1 -> . CIRCLE unaExp
    (131) graphfig1 -> . SQUARE unaExp
    (132) graphfig1 -> . TRIANGLE unaExp
    (133) graphfig2 -> . RECTANGLE dosExp
    (147) graphview0 -> . HIDE_STAR
    (148) graphview0 -> . SHOW_STAR
    (149) graphview0 -> . EXITONCLICK
    (150) graphview0 -> . CLEAR
    (151) graphview0 -> . BEGINFILL
    (152) graphview0 -> . ENDFILL
    (153) graphview1 -> . COLOR_STAR unaExp
    (154) graphview1 -> . SIZE_STAR unaExp
    (155) graphview1 -> . SPEED unaExp
    (156) graphview2 -> . POSITION dosExp
    (137) graphmove0 -> . HAND_DOWN
    (138) graphmove0 -> . HAND_UP
    (139) graphmove1 -> . GO unaExp
    (140) graphmove1 -> . LEFT unaExp
    (141) graphmove1 -> . RIGHT unaExp
    (142) graphmove1 -> . BACK unaExp
    (143) graphmove2 -> . ARC dosExp
    (122) while_w -> . WHILE

    CLOSEBRACES     reduce using rule 173 (empty -> .)
    IF              shift and go to state 55
    PRINT           shift and go to state 56
    READ            shift and go to state 59
    ID              shift and go to state 63
    RETURN          shift and go to state 215
    FOR             shift and go to state 76
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    EXITONCLICK     shift and go to state 83
    CLEAR           shift and go to state 84
    BEGINFILL       shift and go to state 85
    ENDFILL         shift and go to state 86
    COLOR_STAR      shift and go to state 87
    SIZE_STAR       shift and go to state 88
    SPEED           shift and go to state 89
    POSITION        shift and go to state 90
    HAND_DOWN       shift and go to state 91
    HAND_UP         shift and go to state 92
    GO              shift and go to state 93
    LEFT            shift and go to state 94
    RIGHT           shift and go to state 95
    BACK            shift and go to state 96
    ARC             shift and go to state 97
    WHILE           shift and go to state 98

    stmt                           shift and go to state 221
    function4                      shift and go to state 273
    empty                          shift and go to state 222
    assignment                     shift and go to state 207
    condition                      shift and go to state 208
    print                          shift and go to state 209
    loop                           shift and go to state 210
    read                           shift and go to state 211
    graphstmt                      shift and go to state 212
    funCall                        shift and go to state 213
    return                         shift and go to state 214
    id                             shift and go to state 54
    while                          shift and go to state 57
    for_v2                         shift and go to state 58
    graphfig                       shift and go to state 60
    graphview                      shift and go to state 61
    graphmove                      shift and go to state 62
    aidi                           shift and go to state 64
    while1                         shift and go to state 65
    nuevo_for                      shift and go to state 66
    graphfig1                      shift and go to state 67
    graphfig2                      shift and go to state 68
    graphview0                     shift and go to state 69
    graphview1                     shift and go to state 70
    graphview2                     shift and go to state 71
    graphmove0                     shift and go to state 72
    graphmove1                     shift and go to state 73
    graphmove2                     shift and go to state 74
    while_w                        shift and go to state 75

state 222

    (61) function4 -> empty .

    CLOSEBRACES     reduce using rule 61 (function4 -> empty .)


state 223

    (64) function5 -> COMMA funParam . function5
    (64) function5 -> . COMMA funParam function5
    (65) function5 -> . empty
    (173) empty -> .

    COMMA           shift and go to state 170
    CLOSEPAREN      reduce using rule 173 (empty -> .)

    function5                      shift and go to state 274
    empty                          shift and go to state 171

state 224

    (54) function_v -> FUN functionV function2 inicia_fun declara_vars function9 . termina_fun
    (56) termina_fun -> . CLOSEBRACES

    CLOSEBRACES     shift and go to state 272

    termina_fun                    shift and go to state 275

state 225

    (62) function9 -> stmt_v . function9
    (62) function9 -> . stmt_v function9
    (63) function9 -> . empty
    (28) stmt_v -> . assignment
    (29) stmt_v -> . condition
    (30) stmt_v -> . print
    (31) stmt_v -> . loop
    (32) stmt_v -> . read
    (33) stmt_v -> . graphstmt
    (34) stmt_v -> . funCall SEMICOLON
    (173) empty -> .
    (35) assignment -> . id equals assignment3 SEMICOLON
    (101) condition -> . IF head_cond body condition1
    (70) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for_v2
    (71) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (125) graphstmt -> . graphfig
    (126) graphstmt -> . graphview
    (127) graphstmt -> . graphmove
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (80) id -> . aidi indice_dimensionada
    (120) while -> . while1 body
    (112) for_v2 -> . nuevo_for forBody
    (128) graphfig -> . graphfig1 SEMICOLON
    (129) graphfig -> . graphfig2 SEMICOLON
    (144) graphview -> . graphview0 SEMICOLON
    (145) graphview -> . graphview1 SEMICOLON
    (146) graphview -> . graphview2 SEMICOLON
    (134) graphmove -> . graphmove0 SEMICOLON
    (135) graphmove -> . graphmove1 SEMICOLON
    (136) graphmove -> . graphmove2 SEMICOLON
    (79) aidi -> . ID
    (121) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (113) nuevo_for -> . FOR OPENPAREN ID TWODOTS for2 CLOSEPAREN
    (130) graphfig1 -> . CIRCLE unaExp
    (131) graphfig1 -> . SQUARE unaExp
    (132) graphfig1 -> . TRIANGLE unaExp
    (133) graphfig2 -> . RECTANGLE dosExp
    (147) graphview0 -> . HIDE_STAR
    (148) graphview0 -> . SHOW_STAR
    (149) graphview0 -> . EXITONCLICK
    (150) graphview0 -> . CLEAR
    (151) graphview0 -> . BEGINFILL
    (152) graphview0 -> . ENDFILL
    (153) graphview1 -> . COLOR_STAR unaExp
    (154) graphview1 -> . SIZE_STAR unaExp
    (155) graphview1 -> . SPEED unaExp
    (156) graphview2 -> . POSITION dosExp
    (137) graphmove0 -> . HAND_DOWN
    (138) graphmove0 -> . HAND_UP
    (139) graphmove1 -> . GO unaExp
    (140) graphmove1 -> . LEFT unaExp
    (141) graphmove1 -> . RIGHT unaExp
    (142) graphmove1 -> . BACK unaExp
    (143) graphmove2 -> . ARC dosExp
    (122) while_w -> . WHILE

    CLOSEBRACES     reduce using rule 173 (empty -> .)
    IF              shift and go to state 55
    PRINT           shift and go to state 56
    READ            shift and go to state 59
    ID              shift and go to state 63
    FOR             shift and go to state 76
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    EXITONCLICK     shift and go to state 83
    CLEAR           shift and go to state 84
    BEGINFILL       shift and go to state 85
    ENDFILL         shift and go to state 86
    COLOR_STAR      shift and go to state 87
    SIZE_STAR       shift and go to state 88
    SPEED           shift and go to state 89
    POSITION        shift and go to state 90
    HAND_DOWN       shift and go to state 91
    HAND_UP         shift and go to state 92
    GO              shift and go to state 93
    LEFT            shift and go to state 94
    RIGHT           shift and go to state 95
    BACK            shift and go to state 96
    ARC             shift and go to state 97
    WHILE           shift and go to state 98

    stmt_v                         shift and go to state 225
    function9                      shift and go to state 276
    empty                          shift and go to state 226
    assignment                     shift and go to state 47
    condition                      shift and go to state 48
    print                          shift and go to state 49
    loop                           shift and go to state 50
    read                           shift and go to state 51
    graphstmt                      shift and go to state 52
    funCall                        shift and go to state 53
    id                             shift and go to state 54
    while                          shift and go to state 57
    for_v2                         shift and go to state 58
    graphfig                       shift and go to state 60
    graphview                      shift and go to state 61
    graphmove                      shift and go to state 62
    aidi                           shift and go to state 64
    while1                         shift and go to state 65
    nuevo_for                      shift and go to state 66
    graphfig1                      shift and go to state 67
    graphfig2                      shift and go to state 68
    graphview0                     shift and go to state 69
    graphview1                     shift and go to state 70
    graphview2                     shift and go to state 71
    graphmove0                     shift and go to state 72
    graphmove1                     shift and go to state 73
    graphmove2                     shift and go to state 74
    while_w                        shift and go to state 75

state 226

    (63) function9 -> empty .

    CLOSEBRACES     reduce using rule 63 (function9 -> empty .)


state 227

    (160) exp -> term exp_o exp .

    SEMICOLON       reduce using rule 160 (exp -> term exp_o exp .)
    GREATER         reduce using rule 160 (exp -> term exp_o exp .)
    LESS            reduce using rule 160 (exp -> term exp_o exp .)
    GREATEREQ       reduce using rule 160 (exp -> term exp_o exp .)
    LESSEQ          reduce using rule 160 (exp -> term exp_o exp .)
    NOTEQUAL        reduce using rule 160 (exp -> term exp_o exp .)
    ISEQUAL         reduce using rule 160 (exp -> term exp_o exp .)
    CLOSEPAREN      reduce using rule 160 (exp -> term exp_o exp .)
    COMMA           reduce using rule 160 (exp -> term exp_o exp .)
    CLOSEBRACKET    reduce using rule 160 (exp -> term exp_o exp .)


state 228

    (165) term -> factor term_o term .

    ADDITION        reduce using rule 165 (term -> factor term_o term .)
    SUBSTRACTION    reduce using rule 165 (term -> factor term_o term .)
    SEMICOLON       reduce using rule 165 (term -> factor term_o term .)
    GREATER         reduce using rule 165 (term -> factor term_o term .)
    LESS            reduce using rule 165 (term -> factor term_o term .)
    GREATEREQ       reduce using rule 165 (term -> factor term_o term .)
    LESSEQ          reduce using rule 165 (term -> factor term_o term .)
    NOTEQUAL        reduce using rule 165 (term -> factor term_o term .)
    ISEQUAL         reduce using rule 165 (term -> factor term_o term .)
    CLOSEPAREN      reduce using rule 165 (term -> factor term_o term .)
    COMMA           reduce using rule 165 (term -> factor term_o term .)
    CLOSEBRACKET    reduce using rule 165 (term -> factor term_o term .)


state 229

    (170) factor -> openP expression closeP .

    MULTIPLICATION  reduce using rule 170 (factor -> openP expression closeP .)
    DIVISION        reduce using rule 170 (factor -> openP expression closeP .)
    ADDITION        reduce using rule 170 (factor -> openP expression closeP .)
    SUBSTRACTION    reduce using rule 170 (factor -> openP expression closeP .)
    SEMICOLON       reduce using rule 170 (factor -> openP expression closeP .)
    GREATER         reduce using rule 170 (factor -> openP expression closeP .)
    LESS            reduce using rule 170 (factor -> openP expression closeP .)
    GREATEREQ       reduce using rule 170 (factor -> openP expression closeP .)
    LESSEQ          reduce using rule 170 (factor -> openP expression closeP .)
    NOTEQUAL        reduce using rule 170 (factor -> openP expression closeP .)
    ISEQUAL         reduce using rule 170 (factor -> openP expression closeP .)
    CLOSEPAREN      reduce using rule 170 (factor -> openP expression closeP .)
    COMMA           reduce using rule 170 (factor -> openP expression closeP .)
    CLOSEBRACKET    reduce using rule 170 (factor -> openP expression closeP .)


state 230

    (164) closeP -> CLOSEPAREN .

    MULTIPLICATION  reduce using rule 164 (closeP -> CLOSEPAREN .)
    DIVISION        reduce using rule 164 (closeP -> CLOSEPAREN .)
    ADDITION        reduce using rule 164 (closeP -> CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 164 (closeP -> CLOSEPAREN .)
    SEMICOLON       reduce using rule 164 (closeP -> CLOSEPAREN .)
    GREATER         reduce using rule 164 (closeP -> CLOSEPAREN .)
    LESS            reduce using rule 164 (closeP -> CLOSEPAREN .)
    GREATEREQ       reduce using rule 164 (closeP -> CLOSEPAREN .)
    LESSEQ          reduce using rule 164 (closeP -> CLOSEPAREN .)
    NOTEQUAL        reduce using rule 164 (closeP -> CLOSEPAREN .)
    ISEQUAL         reduce using rule 164 (closeP -> CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 164 (closeP -> CLOSEPAREN .)
    COMMA           reduce using rule 164 (closeP -> CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 164 (closeP -> CLOSEPAREN .)


state 231

    (157) expression -> exp loper . exp
    (159) exp -> . term
    (160) exp -> . term exp_o exp
    (165) term -> . factor term_o term
    (166) term -> . factor
    (169) factor -> . vcte
    (170) factor -> . openP expression closeP
    (38) vcte -> . cte_int
    (39) vcte -> . cte_float
    (40) vcte -> . cte_string
    (41) vcte -> . id
    (42) vcte -> . funCall
    (43) vcte -> . vectormatriz
    (163) openP -> . OPENPAREN
    (89) cte_int -> . negativo CTEINT
    (90) cte_float -> . negativo CTEFLOAT
    (91) cte_string -> . CTESTRING
    (80) id -> . aidi indice_dimensionada
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (44) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (45) vectormatriz -> . vm1
    (171) negativo -> . SUBSTRACTION
    (172) negativo -> . empty
    (79) aidi -> . ID
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (173) empty -> .

    OPENPAREN       shift and go to state 117
    CTESTRING       shift and go to state 119
    ID              shift and go to state 63
    OPENBRACKET     shift and go to state 120
    SUBSTRACTION    shift and go to state 122
    CTEINT          reduce using rule 173 (empty -> .)
    CTEFLOAT        reduce using rule 173 (empty -> .)

    exp                            shift and go to state 277
    term                           shift and go to state 107
    factor                         shift and go to state 108
    vcte                           shift and go to state 109
    openP                          shift and go to state 110
    cte_int                        shift and go to state 111
    cte_float                      shift and go to state 112
    cte_string                     shift and go to state 113
    id                             shift and go to state 114
    funCall                        shift and go to state 115
    vectormatriz                   shift and go to state 116
    negativo                       shift and go to state 118
    aidi                           shift and go to state 64
    vm1                            shift and go to state 121
    empty                          shift and go to state 123

state 232

    (95) loper -> GREATER .

    OPENPAREN       reduce using rule 95 (loper -> GREATER .)
    CTESTRING       reduce using rule 95 (loper -> GREATER .)
    ID              reduce using rule 95 (loper -> GREATER .)
    OPENBRACKET     reduce using rule 95 (loper -> GREATER .)
    SUBSTRACTION    reduce using rule 95 (loper -> GREATER .)
    CTEINT          reduce using rule 95 (loper -> GREATER .)
    CTEFLOAT        reduce using rule 95 (loper -> GREATER .)


state 233

    (96) loper -> LESS .

    OPENPAREN       reduce using rule 96 (loper -> LESS .)
    CTESTRING       reduce using rule 96 (loper -> LESS .)
    ID              reduce using rule 96 (loper -> LESS .)
    OPENBRACKET     reduce using rule 96 (loper -> LESS .)
    SUBSTRACTION    reduce using rule 96 (loper -> LESS .)
    CTEINT          reduce using rule 96 (loper -> LESS .)
    CTEFLOAT        reduce using rule 96 (loper -> LESS .)


state 234

    (97) loper -> GREATEREQ .

    OPENPAREN       reduce using rule 97 (loper -> GREATEREQ .)
    CTESTRING       reduce using rule 97 (loper -> GREATEREQ .)
    ID              reduce using rule 97 (loper -> GREATEREQ .)
    OPENBRACKET     reduce using rule 97 (loper -> GREATEREQ .)
    SUBSTRACTION    reduce using rule 97 (loper -> GREATEREQ .)
    CTEINT          reduce using rule 97 (loper -> GREATEREQ .)
    CTEFLOAT        reduce using rule 97 (loper -> GREATEREQ .)


state 235

    (98) loper -> LESSEQ .

    OPENPAREN       reduce using rule 98 (loper -> LESSEQ .)
    CTESTRING       reduce using rule 98 (loper -> LESSEQ .)
    ID              reduce using rule 98 (loper -> LESSEQ .)
    OPENBRACKET     reduce using rule 98 (loper -> LESSEQ .)
    SUBSTRACTION    reduce using rule 98 (loper -> LESSEQ .)
    CTEINT          reduce using rule 98 (loper -> LESSEQ .)
    CTEFLOAT        reduce using rule 98 (loper -> LESSEQ .)


state 236

    (99) loper -> NOTEQUAL .

    OPENPAREN       reduce using rule 99 (loper -> NOTEQUAL .)
    CTESTRING       reduce using rule 99 (loper -> NOTEQUAL .)
    ID              reduce using rule 99 (loper -> NOTEQUAL .)
    OPENBRACKET     reduce using rule 99 (loper -> NOTEQUAL .)
    SUBSTRACTION    reduce using rule 99 (loper -> NOTEQUAL .)
    CTEINT          reduce using rule 99 (loper -> NOTEQUAL .)
    CTEFLOAT        reduce using rule 99 (loper -> NOTEQUAL .)


state 237

    (100) loper -> ISEQUAL .

    OPENPAREN       reduce using rule 100 (loper -> ISEQUAL .)
    CTESTRING       reduce using rule 100 (loper -> ISEQUAL .)
    ID              reduce using rule 100 (loper -> ISEQUAL .)
    OPENBRACKET     reduce using rule 100 (loper -> ISEQUAL .)
    SUBSTRACTION    reduce using rule 100 (loper -> ISEQUAL .)
    CTEINT          reduce using rule 100 (loper -> ISEQUAL .)
    CTEFLOAT        reduce using rule 100 (loper -> ISEQUAL .)


state 238

    (44) vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .

    MULTIPLICATION  reduce using rule 44 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    DIVISION        reduce using rule 44 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    ADDITION        reduce using rule 44 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    SUBSTRACTION    reduce using rule 44 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    SEMICOLON       reduce using rule 44 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    GREATER         reduce using rule 44 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    LESS            reduce using rule 44 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    GREATEREQ       reduce using rule 44 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    LESSEQ          reduce using rule 44 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 44 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    ISEQUAL         reduce using rule 44 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 44 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    COMMA           reduce using rule 44 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 44 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)


state 239

    (46) vm1 -> OPENBRACKET vm2 CLOSEBRACKET . COMMA vm1
    (47) vm1 -> OPENBRACKET vm2 CLOSEBRACKET .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 278
    MULTIPLICATION  reduce using rule 47 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    DIVISION        reduce using rule 47 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    ADDITION        reduce using rule 47 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    SUBSTRACTION    reduce using rule 47 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    SEMICOLON       reduce using rule 47 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    GREATER         reduce using rule 47 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    LESS            reduce using rule 47 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    GREATEREQ       reduce using rule 47 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    LESSEQ          reduce using rule 47 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 47 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    ISEQUAL         reduce using rule 47 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 47 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 47 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)

  ! COMMA           [ reduce using rule 47 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .) ]


state 240

    (48) vm2 -> exp COMMA . vm2
    (48) vm2 -> . exp COMMA vm2
    (49) vm2 -> . exp
    (50) vm2 -> . empty
    (159) exp -> . term
    (160) exp -> . term exp_o exp
    (173) empty -> .
    (165) term -> . factor term_o term
    (166) term -> . factor
    (169) factor -> . vcte
    (170) factor -> . openP expression closeP
    (38) vcte -> . cte_int
    (39) vcte -> . cte_float
    (40) vcte -> . cte_string
    (41) vcte -> . id
    (42) vcte -> . funCall
    (43) vcte -> . vectormatriz
    (163) openP -> . OPENPAREN
    (89) cte_int -> . negativo CTEINT
    (90) cte_float -> . negativo CTEFLOAT
    (91) cte_string -> . CTESTRING
    (80) id -> . aidi indice_dimensionada
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (44) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (45) vectormatriz -> . vm1
    (171) negativo -> . SUBSTRACTION
    (172) negativo -> . empty
    (79) aidi -> . ID
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    CLOSEBRACKET    reduce using rule 173 (empty -> .)
    CTEINT          reduce using rule 173 (empty -> .)
    CTEFLOAT        reduce using rule 173 (empty -> .)
    OPENPAREN       shift and go to state 117
    CTESTRING       shift and go to state 119
    ID              shift and go to state 63
    OPENBRACKET     shift and go to state 120
    SUBSTRACTION    shift and go to state 122

    exp                            shift and go to state 188
    vm2                            shift and go to state 279
    empty                          shift and go to state 189
    term                           shift and go to state 107
    factor                         shift and go to state 108
    vcte                           shift and go to state 109
    openP                          shift and go to state 110
    cte_int                        shift and go to state 111
    cte_float                      shift and go to state 112
    cte_string                     shift and go to state 113
    id                             shift and go to state 114
    funCall                        shift and go to state 115
    vectormatriz                   shift and go to state 116
    negativo                       shift and go to state 118
    aidi                           shift and go to state 64
    vm1                            shift and go to state 121

state 241

    (16) dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 280


state 242

    (35) assignment -> id equals assignment3 SEMICOLON .

    IF              reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    PRINT           reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    READ            reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    ID              reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    FOR             reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    CIRCLE          reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    SQUARE          reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    TRIANGLE        reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    RECTANGLE       reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    HIDE_STAR       reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    SHOW_STAR       reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    EXITONCLICK     reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    CLEAR           reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    BEGINFILL       reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    ENDFILL         reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    COLOR_STAR      reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    SIZE_STAR       reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    SPEED           reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    POSITION        reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    HAND_DOWN       reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    HAND_UP         reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    GO              reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    LEFT            reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    RIGHT           reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    BACK            reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    ARC             reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    WHILE           reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    CLOSEBRACES     reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)
    RETURN          reduce using rule 35 (assignment -> id equals assignment3 SEMICOLON .)


state 243

    (101) condition -> IF head_cond body condition1 .

    IF              reduce using rule 101 (condition -> IF head_cond body condition1 .)
    PRINT           reduce using rule 101 (condition -> IF head_cond body condition1 .)
    READ            reduce using rule 101 (condition -> IF head_cond body condition1 .)
    ID              reduce using rule 101 (condition -> IF head_cond body condition1 .)
    FOR             reduce using rule 101 (condition -> IF head_cond body condition1 .)
    CIRCLE          reduce using rule 101 (condition -> IF head_cond body condition1 .)
    SQUARE          reduce using rule 101 (condition -> IF head_cond body condition1 .)
    TRIANGLE        reduce using rule 101 (condition -> IF head_cond body condition1 .)
    RECTANGLE       reduce using rule 101 (condition -> IF head_cond body condition1 .)
    HIDE_STAR       reduce using rule 101 (condition -> IF head_cond body condition1 .)
    SHOW_STAR       reduce using rule 101 (condition -> IF head_cond body condition1 .)
    EXITONCLICK     reduce using rule 101 (condition -> IF head_cond body condition1 .)
    CLEAR           reduce using rule 101 (condition -> IF head_cond body condition1 .)
    BEGINFILL       reduce using rule 101 (condition -> IF head_cond body condition1 .)
    ENDFILL         reduce using rule 101 (condition -> IF head_cond body condition1 .)
    COLOR_STAR      reduce using rule 101 (condition -> IF head_cond body condition1 .)
    SIZE_STAR       reduce using rule 101 (condition -> IF head_cond body condition1 .)
    SPEED           reduce using rule 101 (condition -> IF head_cond body condition1 .)
    POSITION        reduce using rule 101 (condition -> IF head_cond body condition1 .)
    HAND_DOWN       reduce using rule 101 (condition -> IF head_cond body condition1 .)
    HAND_UP         reduce using rule 101 (condition -> IF head_cond body condition1 .)
    GO              reduce using rule 101 (condition -> IF head_cond body condition1 .)
    LEFT            reduce using rule 101 (condition -> IF head_cond body condition1 .)
    RIGHT           reduce using rule 101 (condition -> IF head_cond body condition1 .)
    BACK            reduce using rule 101 (condition -> IF head_cond body condition1 .)
    ARC             reduce using rule 101 (condition -> IF head_cond body condition1 .)
    WHILE           reduce using rule 101 (condition -> IF head_cond body condition1 .)
    CLOSEBRACES     reduce using rule 101 (condition -> IF head_cond body condition1 .)
    RETURN          reduce using rule 101 (condition -> IF head_cond body condition1 .)


state 244

    (102) condition1 -> elseif . head_cond body condition1
    (107) head_cond -> . OPENPAREN expression close_condition

    OPENPAREN       shift and go to state 130

    head_cond                      shift and go to state 281

state 245

    (103) condition1 -> else . body
    (108) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 139

    body                           shift and go to state 282

state 246

    (104) condition1 -> empty .

    IF              reduce using rule 104 (condition1 -> empty .)
    PRINT           reduce using rule 104 (condition1 -> empty .)
    READ            reduce using rule 104 (condition1 -> empty .)
    ID              reduce using rule 104 (condition1 -> empty .)
    FOR             reduce using rule 104 (condition1 -> empty .)
    CIRCLE          reduce using rule 104 (condition1 -> empty .)
    SQUARE          reduce using rule 104 (condition1 -> empty .)
    TRIANGLE        reduce using rule 104 (condition1 -> empty .)
    RECTANGLE       reduce using rule 104 (condition1 -> empty .)
    HIDE_STAR       reduce using rule 104 (condition1 -> empty .)
    SHOW_STAR       reduce using rule 104 (condition1 -> empty .)
    EXITONCLICK     reduce using rule 104 (condition1 -> empty .)
    CLEAR           reduce using rule 104 (condition1 -> empty .)
    BEGINFILL       reduce using rule 104 (condition1 -> empty .)
    ENDFILL         reduce using rule 104 (condition1 -> empty .)
    COLOR_STAR      reduce using rule 104 (condition1 -> empty .)
    SIZE_STAR       reduce using rule 104 (condition1 -> empty .)
    SPEED           reduce using rule 104 (condition1 -> empty .)
    POSITION        reduce using rule 104 (condition1 -> empty .)
    HAND_DOWN       reduce using rule 104 (condition1 -> empty .)
    HAND_UP         reduce using rule 104 (condition1 -> empty .)
    GO              reduce using rule 104 (condition1 -> empty .)
    LEFT            reduce using rule 104 (condition1 -> empty .)
    RIGHT           reduce using rule 104 (condition1 -> empty .)
    BACK            reduce using rule 104 (condition1 -> empty .)
    ARC             reduce using rule 104 (condition1 -> empty .)
    WHILE           reduce using rule 104 (condition1 -> empty .)
    CLOSEBRACES     reduce using rule 104 (condition1 -> empty .)
    RETURN          reduce using rule 104 (condition1 -> empty .)


state 247

    (105) elseif -> ELSEIF .

    OPENPAREN       reduce using rule 105 (elseif -> ELSEIF .)


state 248

    (106) else -> ELSE .

    OPENBRACES      reduce using rule 106 (else -> ELSE .)


state 249

    (107) head_cond -> OPENPAREN expression close_condition .

    OPENBRACES      reduce using rule 107 (head_cond -> OPENPAREN expression close_condition .)


state 250

    (109) close_condition -> CLOSEPAREN .

    OPENBRACES      reduce using rule 109 (close_condition -> CLOSEPAREN .)


state 251

    (70) print -> PRINT OPENPAREN expression CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 283


state 252

    (71) read -> READ OPENPAREN id read1 . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 284


state 253

    (72) read1 -> OPENBRACKET . exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (73) read1 -> OPENBRACKET . exp CLOSEBRACKET
    (159) exp -> . term
    (160) exp -> . term exp_o exp
    (165) term -> . factor term_o term
    (166) term -> . factor
    (169) factor -> . vcte
    (170) factor -> . openP expression closeP
    (38) vcte -> . cte_int
    (39) vcte -> . cte_float
    (40) vcte -> . cte_string
    (41) vcte -> . id
    (42) vcte -> . funCall
    (43) vcte -> . vectormatriz
    (163) openP -> . OPENPAREN
    (89) cte_int -> . negativo CTEINT
    (90) cte_float -> . negativo CTEFLOAT
    (91) cte_string -> . CTESTRING
    (80) id -> . aidi indice_dimensionada
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (44) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (45) vectormatriz -> . vm1
    (171) negativo -> . SUBSTRACTION
    (172) negativo -> . empty
    (79) aidi -> . ID
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (173) empty -> .

    OPENPAREN       shift and go to state 117
    CTESTRING       shift and go to state 119
    ID              shift and go to state 63
    OPENBRACKET     shift and go to state 120
    SUBSTRACTION    shift and go to state 122
    CTEINT          reduce using rule 173 (empty -> .)
    CTEFLOAT        reduce using rule 173 (empty -> .)

    exp                            shift and go to state 285
    term                           shift and go to state 107
    factor                         shift and go to state 108
    vcte                           shift and go to state 109
    openP                          shift and go to state 110
    cte_int                        shift and go to state 111
    cte_float                      shift and go to state 112
    cte_string                     shift and go to state 113
    id                             shift and go to state 114
    funCall                        shift and go to state 115
    vectormatriz                   shift and go to state 116
    negativo                       shift and go to state 118
    aidi                           shift and go to state 64
    vm1                            shift and go to state 121
    empty                          shift and go to state 123

state 254

    (74) read1 -> empty .

    CLOSEPAREN      reduce using rule 74 (read1 -> empty .)


state 255

    (81) funCall -> ID iniciaFunCall funCall2 terminaFunCall .

    SEMICOLON       reduce using rule 81 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    MULTIPLICATION  reduce using rule 81 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    DIVISION        reduce using rule 81 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    ADDITION        reduce using rule 81 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    SUBSTRACTION    reduce using rule 81 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    GREATER         reduce using rule 81 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    LESS            reduce using rule 81 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    GREATEREQ       reduce using rule 81 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    LESSEQ          reduce using rule 81 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    NOTEQUAL        reduce using rule 81 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    ISEQUAL         reduce using rule 81 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    CLOSEPAREN      reduce using rule 81 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    COMMA           reduce using rule 81 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    CLOSEBRACKET    reduce using rule 81 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)


state 256

    (83) terminaFunCall -> CLOSEPAREN .

    SEMICOLON       reduce using rule 83 (terminaFunCall -> CLOSEPAREN .)
    MULTIPLICATION  reduce using rule 83 (terminaFunCall -> CLOSEPAREN .)
    DIVISION        reduce using rule 83 (terminaFunCall -> CLOSEPAREN .)
    ADDITION        reduce using rule 83 (terminaFunCall -> CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 83 (terminaFunCall -> CLOSEPAREN .)
    GREATER         reduce using rule 83 (terminaFunCall -> CLOSEPAREN .)
    LESS            reduce using rule 83 (terminaFunCall -> CLOSEPAREN .)
    GREATEREQ       reduce using rule 83 (terminaFunCall -> CLOSEPAREN .)
    LESSEQ          reduce using rule 83 (terminaFunCall -> CLOSEPAREN .)
    NOTEQUAL        reduce using rule 83 (terminaFunCall -> CLOSEPAREN .)
    ISEQUAL         reduce using rule 83 (terminaFunCall -> CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 83 (terminaFunCall -> CLOSEPAREN .)
    COMMA           reduce using rule 83 (terminaFunCall -> CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 83 (terminaFunCall -> CLOSEPAREN .)


state 257

    (84) funCall2 -> funCallParam funCall3 .

    CLOSEPAREN      reduce using rule 84 (funCall2 -> funCallParam funCall3 .)


state 258

    (86) funCall3 -> COMMA . funCallParam funCall3
    (88) funCallParam -> . exp
    (159) exp -> . term
    (160) exp -> . term exp_o exp
    (165) term -> . factor term_o term
    (166) term -> . factor
    (169) factor -> . vcte
    (170) factor -> . openP expression closeP
    (38) vcte -> . cte_int
    (39) vcte -> . cte_float
    (40) vcte -> . cte_string
    (41) vcte -> . id
    (42) vcte -> . funCall
    (43) vcte -> . vectormatriz
    (163) openP -> . OPENPAREN
    (89) cte_int -> . negativo CTEINT
    (90) cte_float -> . negativo CTEFLOAT
    (91) cte_string -> . CTESTRING
    (80) id -> . aidi indice_dimensionada
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (44) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (45) vectormatriz -> . vm1
    (171) negativo -> . SUBSTRACTION
    (172) negativo -> . empty
    (79) aidi -> . ID
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (173) empty -> .

    OPENPAREN       shift and go to state 117
    CTESTRING       shift and go to state 119
    ID              shift and go to state 63
    OPENBRACKET     shift and go to state 120
    SUBSTRACTION    shift and go to state 122
    CTEINT          reduce using rule 173 (empty -> .)
    CTEFLOAT        reduce using rule 173 (empty -> .)

    funCallParam                   shift and go to state 286
    exp                            shift and go to state 202
    term                           shift and go to state 107
    factor                         shift and go to state 108
    vcte                           shift and go to state 109
    openP                          shift and go to state 110
    cte_int                        shift and go to state 111
    cte_float                      shift and go to state 112
    cte_string                     shift and go to state 113
    id                             shift and go to state 114
    funCall                        shift and go to state 115
    vectormatriz                   shift and go to state 116
    negativo                       shift and go to state 118
    aidi                           shift and go to state 64
    vm1                            shift and go to state 121
    empty                          shift and go to state 123

state 259

    (87) funCall3 -> empty .

    CLOSEPAREN      reduce using rule 87 (funCall3 -> empty .)


state 260

    (76) indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET . OPENBRACKET exp CLOSEBRACKET
    (77) indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .

  ! shift/reduce conflict for OPENBRACKET resolved as shift
    OPENBRACKET     shift and go to state 287
    EQUALS          reduce using rule 77 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    MULTIPLICATION  reduce using rule 77 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    DIVISION        reduce using rule 77 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    ADDITION        reduce using rule 77 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    SUBSTRACTION    reduce using rule 77 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    SEMICOLON       reduce using rule 77 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    GREATER         reduce using rule 77 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    LESS            reduce using rule 77 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    GREATEREQ       reduce using rule 77 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    LESSEQ          reduce using rule 77 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 77 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    ISEQUAL         reduce using rule 77 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 77 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    COMMA           reduce using rule 77 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 77 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)

  ! OPENBRACKET     [ reduce using rule 77 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .) ]


state 261

    (108) body -> OPENBRACES body1 CLOSEBRACES .

    IF              reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    PRINT           reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    READ            reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    ID              reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    FOR             reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    CIRCLE          reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    SQUARE          reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    EXITONCLICK     reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    CLEAR           reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    BEGINFILL       reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    ENDFILL         reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    SPEED           reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    POSITION        reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_UP         reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    GO              reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    LEFT            reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    RIGHT           reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    BACK            reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    ARC             reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    WHILE           reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    RETURN          reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSEIF          reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSE            reduce using rule 108 (body -> OPENBRACES body1 CLOSEBRACES .)


state 262

    (110) body1 -> stmt body1 .

    CLOSEBRACES     reduce using rule 110 (body1 -> stmt body1 .)


state 263

    (26) stmt -> funCall SEMICOLON .

    IF              reduce using rule 26 (stmt -> funCall SEMICOLON .)
    PRINT           reduce using rule 26 (stmt -> funCall SEMICOLON .)
    READ            reduce using rule 26 (stmt -> funCall SEMICOLON .)
    ID              reduce using rule 26 (stmt -> funCall SEMICOLON .)
    RETURN          reduce using rule 26 (stmt -> funCall SEMICOLON .)
    FOR             reduce using rule 26 (stmt -> funCall SEMICOLON .)
    CIRCLE          reduce using rule 26 (stmt -> funCall SEMICOLON .)
    SQUARE          reduce using rule 26 (stmt -> funCall SEMICOLON .)
    TRIANGLE        reduce using rule 26 (stmt -> funCall SEMICOLON .)
    RECTANGLE       reduce using rule 26 (stmt -> funCall SEMICOLON .)
    HIDE_STAR       reduce using rule 26 (stmt -> funCall SEMICOLON .)
    SHOW_STAR       reduce using rule 26 (stmt -> funCall SEMICOLON .)
    EXITONCLICK     reduce using rule 26 (stmt -> funCall SEMICOLON .)
    CLEAR           reduce using rule 26 (stmt -> funCall SEMICOLON .)
    BEGINFILL       reduce using rule 26 (stmt -> funCall SEMICOLON .)
    ENDFILL         reduce using rule 26 (stmt -> funCall SEMICOLON .)
    COLOR_STAR      reduce using rule 26 (stmt -> funCall SEMICOLON .)
    SIZE_STAR       reduce using rule 26 (stmt -> funCall SEMICOLON .)
    SPEED           reduce using rule 26 (stmt -> funCall SEMICOLON .)
    POSITION        reduce using rule 26 (stmt -> funCall SEMICOLON .)
    HAND_DOWN       reduce using rule 26 (stmt -> funCall SEMICOLON .)
    HAND_UP         reduce using rule 26 (stmt -> funCall SEMICOLON .)
    GO              reduce using rule 26 (stmt -> funCall SEMICOLON .)
    LEFT            reduce using rule 26 (stmt -> funCall SEMICOLON .)
    RIGHT           reduce using rule 26 (stmt -> funCall SEMICOLON .)
    BACK            reduce using rule 26 (stmt -> funCall SEMICOLON .)
    ARC             reduce using rule 26 (stmt -> funCall SEMICOLON .)
    WHILE           reduce using rule 26 (stmt -> funCall SEMICOLON .)
    CLOSEBRACES     reduce using rule 26 (stmt -> funCall SEMICOLON .)


state 264

    (92) return -> RETURN return1 . SEMICOLON

    SEMICOLON       shift and go to state 288


state 265

    (93) return1 -> vcte .
    (169) factor -> vcte .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 93 (return1 -> vcte .)
    SEMICOLON       reduce using rule 93 (return1 -> vcte .)
    MULTIPLICATION  reduce using rule 169 (factor -> vcte .)
    DIVISION        reduce using rule 169 (factor -> vcte .)
    ADDITION        reduce using rule 169 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 169 (factor -> vcte .)

  ! SEMICOLON       [ reduce using rule 169 (factor -> vcte .) ]


state 266

    (94) return1 -> exp .

    SEMICOLON       reduce using rule 94 (return1 -> exp .)


state 267

    (121) while1 -> while_w OPENPAREN expression CLOSEPAREN .

    OPENBRACES      reduce using rule 121 (while1 -> while_w OPENPAREN expression CLOSEPAREN .)


state 268

    (113) nuevo_for -> FOR OPENPAREN ID TWODOTS . for2 CLOSEPAREN
    (117) for2 -> . exp
    (159) exp -> . term
    (160) exp -> . term exp_o exp
    (165) term -> . factor term_o term
    (166) term -> . factor
    (169) factor -> . vcte
    (170) factor -> . openP expression closeP
    (38) vcte -> . cte_int
    (39) vcte -> . cte_float
    (40) vcte -> . cte_string
    (41) vcte -> . id
    (42) vcte -> . funCall
    (43) vcte -> . vectormatriz
    (163) openP -> . OPENPAREN
    (89) cte_int -> . negativo CTEINT
    (90) cte_float -> . negativo CTEFLOAT
    (91) cte_string -> . CTESTRING
    (80) id -> . aidi indice_dimensionada
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (44) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (45) vectormatriz -> . vm1
    (171) negativo -> . SUBSTRACTION
    (172) negativo -> . empty
    (79) aidi -> . ID
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (173) empty -> .

    OPENPAREN       shift and go to state 117
    CTESTRING       shift and go to state 119
    ID              shift and go to state 63
    OPENBRACKET     shift and go to state 120
    SUBSTRACTION    shift and go to state 122
    CTEINT          reduce using rule 173 (empty -> .)
    CTEFLOAT        reduce using rule 173 (empty -> .)

    for2                           shift and go to state 289
    exp                            shift and go to state 290
    term                           shift and go to state 107
    factor                         shift and go to state 108
    vcte                           shift and go to state 109
    openP                          shift and go to state 110
    cte_int                        shift and go to state 111
    cte_float                      shift and go to state 112
    cte_string                     shift and go to state 113
    id                             shift and go to state 114
    funCall                        shift and go to state 115
    vectormatriz                   shift and go to state 116
    negativo                       shift and go to state 118
    aidi                           shift and go to state 64
    vm1                            shift and go to state 121
    empty                          shift and go to state 123

state 269

    (124) unaExp -> OPENPAREN exp CLOSEPAREN .

    SEMICOLON       reduce using rule 124 (unaExp -> OPENPAREN exp CLOSEPAREN .)


state 270

    (123) dosExp -> OPENPAREN exp COMMA . exp CLOSEPAREN
    (159) exp -> . term
    (160) exp -> . term exp_o exp
    (165) term -> . factor term_o term
    (166) term -> . factor
    (169) factor -> . vcte
    (170) factor -> . openP expression closeP
    (38) vcte -> . cte_int
    (39) vcte -> . cte_float
    (40) vcte -> . cte_string
    (41) vcte -> . id
    (42) vcte -> . funCall
    (43) vcte -> . vectormatriz
    (163) openP -> . OPENPAREN
    (89) cte_int -> . negativo CTEINT
    (90) cte_float -> . negativo CTEFLOAT
    (91) cte_string -> . CTESTRING
    (80) id -> . aidi indice_dimensionada
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (44) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (45) vectormatriz -> . vm1
    (171) negativo -> . SUBSTRACTION
    (172) negativo -> . empty
    (79) aidi -> . ID
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (173) empty -> .

    OPENPAREN       shift and go to state 117
    CTESTRING       shift and go to state 119
    ID              shift and go to state 63
    OPENBRACKET     shift and go to state 120
    SUBSTRACTION    shift and go to state 122
    CTEINT          reduce using rule 173 (empty -> .)
    CTEFLOAT        reduce using rule 173 (empty -> .)

    exp                            shift and go to state 291
    term                           shift and go to state 107
    factor                         shift and go to state 108
    vcte                           shift and go to state 109
    openP                          shift and go to state 110
    cte_int                        shift and go to state 111
    cte_float                      shift and go to state 112
    cte_string                     shift and go to state 113
    id                             shift and go to state 114
    funCall                        shift and go to state 115
    vectormatriz                   shift and go to state 116
    negativo                       shift and go to state 118
    aidi                           shift and go to state 64
    vm1                            shift and go to state 121
    empty                          shift and go to state 123

state 271

    (53) function_t -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .

    FUN             reduce using rule 53 (function_t -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .)
    MULTIPLICATION  reduce using rule 53 (function_t -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .)


state 272

    (56) termina_fun -> CLOSEBRACES .

    FUN             reduce using rule 56 (termina_fun -> CLOSEBRACES .)
    MULTIPLICATION  reduce using rule 56 (termina_fun -> CLOSEBRACES .)


state 273

    (60) function4 -> stmt function4 .

    CLOSEBRACES     reduce using rule 60 (function4 -> stmt function4 .)


state 274

    (64) function5 -> COMMA funParam function5 .

    CLOSEPAREN      reduce using rule 64 (function5 -> COMMA funParam function5 .)


state 275

    (54) function_v -> FUN functionV function2 inicia_fun declara_vars function9 termina_fun .

    FUN             reduce using rule 54 (function_v -> FUN functionV function2 inicia_fun declara_vars function9 termina_fun .)
    MULTIPLICATION  reduce using rule 54 (function_v -> FUN functionV function2 inicia_fun declara_vars function9 termina_fun .)


state 276

    (62) function9 -> stmt_v function9 .

    CLOSEBRACES     reduce using rule 62 (function9 -> stmt_v function9 .)


state 277

    (157) expression -> exp loper exp .

    CLOSEPAREN      reduce using rule 157 (expression -> exp loper exp .)


state 278

    (46) vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA . vm1
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENBRACKET     shift and go to state 292

    vm1                            shift and go to state 293

state 279

    (48) vm2 -> exp COMMA vm2 .

    CLOSEBRACKET    reduce using rule 48 (vm2 -> exp COMMA vm2 .)


state 280

    (16) dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET .

    SEMICOLON       reduce using rule 16 (dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET .)
    EQUALS          reduce using rule 16 (dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET .)


state 281

    (102) condition1 -> elseif head_cond . body condition1
    (108) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 139

    body                           shift and go to state 294

state 282

    (103) condition1 -> else body .

    IF              reduce using rule 103 (condition1 -> else body .)
    PRINT           reduce using rule 103 (condition1 -> else body .)
    READ            reduce using rule 103 (condition1 -> else body .)
    ID              reduce using rule 103 (condition1 -> else body .)
    FOR             reduce using rule 103 (condition1 -> else body .)
    CIRCLE          reduce using rule 103 (condition1 -> else body .)
    SQUARE          reduce using rule 103 (condition1 -> else body .)
    TRIANGLE        reduce using rule 103 (condition1 -> else body .)
    RECTANGLE       reduce using rule 103 (condition1 -> else body .)
    HIDE_STAR       reduce using rule 103 (condition1 -> else body .)
    SHOW_STAR       reduce using rule 103 (condition1 -> else body .)
    EXITONCLICK     reduce using rule 103 (condition1 -> else body .)
    CLEAR           reduce using rule 103 (condition1 -> else body .)
    BEGINFILL       reduce using rule 103 (condition1 -> else body .)
    ENDFILL         reduce using rule 103 (condition1 -> else body .)
    COLOR_STAR      reduce using rule 103 (condition1 -> else body .)
    SIZE_STAR       reduce using rule 103 (condition1 -> else body .)
    SPEED           reduce using rule 103 (condition1 -> else body .)
    POSITION        reduce using rule 103 (condition1 -> else body .)
    HAND_DOWN       reduce using rule 103 (condition1 -> else body .)
    HAND_UP         reduce using rule 103 (condition1 -> else body .)
    GO              reduce using rule 103 (condition1 -> else body .)
    LEFT            reduce using rule 103 (condition1 -> else body .)
    RIGHT           reduce using rule 103 (condition1 -> else body .)
    BACK            reduce using rule 103 (condition1 -> else body .)
    ARC             reduce using rule 103 (condition1 -> else body .)
    WHILE           reduce using rule 103 (condition1 -> else body .)
    CLOSEBRACES     reduce using rule 103 (condition1 -> else body .)
    RETURN          reduce using rule 103 (condition1 -> else body .)


state 283

    (70) print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .

    IF              reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    EXITONCLICK     reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CLEAR           reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    BEGINFILL       reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ENDFILL         reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SPEED           reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    POSITION        reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 70 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)


state 284

    (71) read -> READ OPENPAREN id read1 CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 295


state 285

    (72) read1 -> OPENBRACKET exp . CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (73) read1 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 296


state 286

    (86) funCall3 -> COMMA funCallParam . funCall3
    (86) funCall3 -> . COMMA funCallParam funCall3
    (87) funCall3 -> . empty
    (173) empty -> .

    COMMA           shift and go to state 258
    CLOSEPAREN      reduce using rule 173 (empty -> .)

    funCall3                       shift and go to state 297
    empty                          shift and go to state 259

state 287

    (76) indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET . exp CLOSEBRACKET
    (159) exp -> . term
    (160) exp -> . term exp_o exp
    (165) term -> . factor term_o term
    (166) term -> . factor
    (169) factor -> . vcte
    (170) factor -> . openP expression closeP
    (38) vcte -> . cte_int
    (39) vcte -> . cte_float
    (40) vcte -> . cte_string
    (41) vcte -> . id
    (42) vcte -> . funCall
    (43) vcte -> . vectormatriz
    (163) openP -> . OPENPAREN
    (89) cte_int -> . negativo CTEINT
    (90) cte_float -> . negativo CTEFLOAT
    (91) cte_string -> . CTESTRING
    (80) id -> . aidi indice_dimensionada
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (44) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (45) vectormatriz -> . vm1
    (171) negativo -> . SUBSTRACTION
    (172) negativo -> . empty
    (79) aidi -> . ID
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (173) empty -> .

    OPENPAREN       shift and go to state 117
    CTESTRING       shift and go to state 119
    ID              shift and go to state 63
    OPENBRACKET     shift and go to state 120
    SUBSTRACTION    shift and go to state 122
    CTEINT          reduce using rule 173 (empty -> .)
    CTEFLOAT        reduce using rule 173 (empty -> .)

    exp                            shift and go to state 298
    term                           shift and go to state 107
    factor                         shift and go to state 108
    vcte                           shift and go to state 109
    openP                          shift and go to state 110
    cte_int                        shift and go to state 111
    cte_float                      shift and go to state 112
    cte_string                     shift and go to state 113
    id                             shift and go to state 114
    funCall                        shift and go to state 115
    vectormatriz                   shift and go to state 116
    negativo                       shift and go to state 118
    aidi                           shift and go to state 64
    vm1                            shift and go to state 121
    empty                          shift and go to state 123

state 288

    (92) return -> RETURN return1 SEMICOLON .

    IF              reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    PRINT           reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    READ            reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    ID              reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    RETURN          reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    FOR             reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    CIRCLE          reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    SQUARE          reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    TRIANGLE        reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    RECTANGLE       reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    HIDE_STAR       reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    SHOW_STAR       reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    EXITONCLICK     reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    CLEAR           reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    BEGINFILL       reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    ENDFILL         reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    COLOR_STAR      reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    SIZE_STAR       reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    SPEED           reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    POSITION        reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    HAND_DOWN       reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    HAND_UP         reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    GO              reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    LEFT            reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    RIGHT           reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    BACK            reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    ARC             reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    WHILE           reduce using rule 92 (return -> RETURN return1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 92 (return -> RETURN return1 SEMICOLON .)


state 289

    (113) nuevo_for -> FOR OPENPAREN ID TWODOTS for2 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 299


state 290

    (117) for2 -> exp .

    CLOSEPAREN      reduce using rule 117 (for2 -> exp .)


state 291

    (123) dosExp -> OPENPAREN exp COMMA exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 300


state 292

    (46) vm1 -> OPENBRACKET . vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> OPENBRACKET . vm2 CLOSEBRACKET
    (48) vm2 -> . exp COMMA vm2
    (49) vm2 -> . exp
    (50) vm2 -> . empty
    (159) exp -> . term
    (160) exp -> . term exp_o exp
    (173) empty -> .
    (165) term -> . factor term_o term
    (166) term -> . factor
    (169) factor -> . vcte
    (170) factor -> . openP expression closeP
    (38) vcte -> . cte_int
    (39) vcte -> . cte_float
    (40) vcte -> . cte_string
    (41) vcte -> . id
    (42) vcte -> . funCall
    (43) vcte -> . vectormatriz
    (163) openP -> . OPENPAREN
    (89) cte_int -> . negativo CTEINT
    (90) cte_float -> . negativo CTEFLOAT
    (91) cte_string -> . CTESTRING
    (80) id -> . aidi indice_dimensionada
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (44) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (45) vectormatriz -> . vm1
    (171) negativo -> . SUBSTRACTION
    (172) negativo -> . empty
    (79) aidi -> . ID
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    CLOSEBRACKET    reduce using rule 173 (empty -> .)
    CTEINT          reduce using rule 173 (empty -> .)
    CTEFLOAT        reduce using rule 173 (empty -> .)
    OPENPAREN       shift and go to state 117
    CTESTRING       shift and go to state 119
    ID              shift and go to state 63
    OPENBRACKET     shift and go to state 120
    SUBSTRACTION    shift and go to state 122

    vm2                            shift and go to state 187
    vm1                            shift and go to state 121
    exp                            shift and go to state 188
    empty                          shift and go to state 189
    term                           shift and go to state 107
    factor                         shift and go to state 108
    vcte                           shift and go to state 109
    openP                          shift and go to state 110
    cte_int                        shift and go to state 111
    cte_float                      shift and go to state 112
    cte_string                     shift and go to state 113
    id                             shift and go to state 114
    funCall                        shift and go to state 115
    vectormatriz                   shift and go to state 116
    negativo                       shift and go to state 118
    aidi                           shift and go to state 64

state 293

    (46) vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .

    MULTIPLICATION  reduce using rule 46 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    DIVISION        reduce using rule 46 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    ADDITION        reduce using rule 46 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    SUBSTRACTION    reduce using rule 46 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    SEMICOLON       reduce using rule 46 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    GREATER         reduce using rule 46 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    LESS            reduce using rule 46 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    GREATEREQ       reduce using rule 46 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    LESSEQ          reduce using rule 46 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    NOTEQUAL        reduce using rule 46 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    ISEQUAL         reduce using rule 46 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    CLOSEPAREN      reduce using rule 46 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    CLOSEBRACKET    reduce using rule 46 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    COMMA           reduce using rule 46 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)


state 294

    (102) condition1 -> elseif head_cond body . condition1
    (102) condition1 -> . elseif head_cond body condition1
    (103) condition1 -> . else body
    (104) condition1 -> . empty
    (105) elseif -> . ELSEIF
    (106) else -> . ELSE
    (173) empty -> .

    ELSEIF          shift and go to state 247
    ELSE            shift and go to state 248
    IF              reduce using rule 173 (empty -> .)
    PRINT           reduce using rule 173 (empty -> .)
    READ            reduce using rule 173 (empty -> .)
    ID              reduce using rule 173 (empty -> .)
    FOR             reduce using rule 173 (empty -> .)
    CIRCLE          reduce using rule 173 (empty -> .)
    SQUARE          reduce using rule 173 (empty -> .)
    TRIANGLE        reduce using rule 173 (empty -> .)
    RECTANGLE       reduce using rule 173 (empty -> .)
    HIDE_STAR       reduce using rule 173 (empty -> .)
    SHOW_STAR       reduce using rule 173 (empty -> .)
    EXITONCLICK     reduce using rule 173 (empty -> .)
    CLEAR           reduce using rule 173 (empty -> .)
    BEGINFILL       reduce using rule 173 (empty -> .)
    ENDFILL         reduce using rule 173 (empty -> .)
    COLOR_STAR      reduce using rule 173 (empty -> .)
    SIZE_STAR       reduce using rule 173 (empty -> .)
    SPEED           reduce using rule 173 (empty -> .)
    POSITION        reduce using rule 173 (empty -> .)
    HAND_DOWN       reduce using rule 173 (empty -> .)
    HAND_UP         reduce using rule 173 (empty -> .)
    GO              reduce using rule 173 (empty -> .)
    LEFT            reduce using rule 173 (empty -> .)
    RIGHT           reduce using rule 173 (empty -> .)
    BACK            reduce using rule 173 (empty -> .)
    ARC             reduce using rule 173 (empty -> .)
    WHILE           reduce using rule 173 (empty -> .)
    CLOSEBRACES     reduce using rule 173 (empty -> .)
    RETURN          reduce using rule 173 (empty -> .)

    elseif                         shift and go to state 244
    condition1                     shift and go to state 301
    else                           shift and go to state 245
    empty                          shift and go to state 246

state 295

    (71) read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .

    IF              reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    EXITONCLICK     reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    CLEAR           reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    BEGINFILL       reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    ENDFILL         reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SPEED           reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    POSITION        reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 71 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)


state 296

    (72) read1 -> OPENBRACKET exp CLOSEBRACKET . OPENBRACKET exp CLOSEBRACKET
    (73) read1 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     shift and go to state 302
    CLOSEPAREN      reduce using rule 73 (read1 -> OPENBRACKET exp CLOSEBRACKET .)


state 297

    (86) funCall3 -> COMMA funCallParam funCall3 .

    CLOSEPAREN      reduce using rule 86 (funCall3 -> COMMA funCallParam funCall3 .)


state 298

    (76) indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 303


state 299

    (113) nuevo_for -> FOR OPENPAREN ID TWODOTS for2 CLOSEPAREN .

    OPENBRACES      reduce using rule 113 (nuevo_for -> FOR OPENPAREN ID TWODOTS for2 CLOSEPAREN .)


state 300

    (123) dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN .

    SEMICOLON       reduce using rule 123 (dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN .)


state 301

    (102) condition1 -> elseif head_cond body condition1 .

    IF              reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    PRINT           reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    READ            reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    ID              reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    FOR             reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    CIRCLE          reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    SQUARE          reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    TRIANGLE        reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    RECTANGLE       reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    HIDE_STAR       reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    SHOW_STAR       reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    EXITONCLICK     reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    CLEAR           reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    BEGINFILL       reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    ENDFILL         reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    COLOR_STAR      reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    SIZE_STAR       reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    SPEED           reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    POSITION        reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    HAND_DOWN       reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    HAND_UP         reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    GO              reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    LEFT            reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    RIGHT           reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    BACK            reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    ARC             reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    WHILE           reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    CLOSEBRACES     reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)
    RETURN          reduce using rule 102 (condition1 -> elseif head_cond body condition1 .)


state 302

    (72) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET . exp CLOSEBRACKET
    (159) exp -> . term
    (160) exp -> . term exp_o exp
    (165) term -> . factor term_o term
    (166) term -> . factor
    (169) factor -> . vcte
    (170) factor -> . openP expression closeP
    (38) vcte -> . cte_int
    (39) vcte -> . cte_float
    (40) vcte -> . cte_string
    (41) vcte -> . id
    (42) vcte -> . funCall
    (43) vcte -> . vectormatriz
    (163) openP -> . OPENPAREN
    (89) cte_int -> . negativo CTEINT
    (90) cte_float -> . negativo CTEFLOAT
    (91) cte_string -> . CTESTRING
    (80) id -> . aidi indice_dimensionada
    (81) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (44) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (45) vectormatriz -> . vm1
    (171) negativo -> . SUBSTRACTION
    (172) negativo -> . empty
    (79) aidi -> . ID
    (46) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (47) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (173) empty -> .

    OPENPAREN       shift and go to state 117
    CTESTRING       shift and go to state 119
    ID              shift and go to state 63
    OPENBRACKET     shift and go to state 120
    SUBSTRACTION    shift and go to state 122
    CTEINT          reduce using rule 173 (empty -> .)
    CTEFLOAT        reduce using rule 173 (empty -> .)

    exp                            shift and go to state 304
    term                           shift and go to state 107
    factor                         shift and go to state 108
    vcte                           shift and go to state 109
    openP                          shift and go to state 110
    cte_int                        shift and go to state 111
    cte_float                      shift and go to state 112
    cte_string                     shift and go to state 113
    id                             shift and go to state 114
    funCall                        shift and go to state 115
    vectormatriz                   shift and go to state 116
    negativo                       shift and go to state 118
    aidi                           shift and go to state 64
    vm1                            shift and go to state 121
    empty                          shift and go to state 123

state 303

    (76) indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .

    EQUALS          reduce using rule 76 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    MULTIPLICATION  reduce using rule 76 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    DIVISION        reduce using rule 76 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    ADDITION        reduce using rule 76 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    SUBSTRACTION    reduce using rule 76 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    SEMICOLON       reduce using rule 76 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    GREATER         reduce using rule 76 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    LESS            reduce using rule 76 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    GREATEREQ       reduce using rule 76 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    LESSEQ          reduce using rule 76 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 76 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    ISEQUAL         reduce using rule 76 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 76 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    COMMA           reduce using rule 76 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 76 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    OPENBRACKET     reduce using rule 76 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)


state 304

    (72) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 305


state 305

    (72) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .

    CLOSEPAREN      reduce using rule 72 (read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OPENBRACKET in state 64 resolved as shift
WARNING: shift/reduce conflict for CLOSEBRACKET in state 186 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 239 resolved as shift
WARNING: shift/reduce conflict for OPENBRACKET in state 260 resolved as shift
WARNING: reduce/reduce conflict in state 265 resolved using rule (return1 -> vcte)
WARNING: rejected rule (factor -> vcte) in state 265
