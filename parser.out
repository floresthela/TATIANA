Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    SIMPLEQUOTES
    VARS

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON declara_vars program2 star
Rule 2     program_vars -> vars program_vars
Rule 3     program_vars -> empty
Rule 4     program2 -> function program2
Rule 5     program2 -> empty
Rule 6     star -> starI declara_vars star1 CLOSEBRACES
Rule 7     starI -> MULTIPLICATION OPENBRACES
Rule 8     star1 -> stmt star1
Rule 9     star1 -> empty
Rule 10    declara_vars -> vars declara_vars
Rule 11    declara_vars -> empty
Rule 12    loop -> while
Rule 13    loop -> for
Rule 14    stmt -> assignment
Rule 15    stmt -> condition
Rule 16    stmt -> print
Rule 17    stmt -> loop
Rule 18    stmt -> read
Rule 19    stmt -> graphstmt
Rule 20    stmt -> graphr
Rule 21    stmt -> funCall SEMICOLON
Rule 22    stmt -> return
Rule 23    functionI -> type ID
Rule 24    functionI -> VOID ID
Rule 25    function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun
Rule 26    function1 -> type
Rule 27    function1 -> VOID
Rule 28    inicia_fun -> OPENBRACES
Rule 29    termina_fun -> CLOSEBRACES
Rule 30    function2 -> OPENPAREN function3 CLOSEPAREN
Rule 31    function3 -> type ID function5
Rule 32    function3 -> empty
Rule 33    function4 -> stmt function4
Rule 34    function4 -> empty
Rule 35    function5 -> COMMA type ID function3
Rule 36    fun_vars -> vars fun_vars
Rule 37    fun_vars -> empty
Rule 38    vars -> type ID vars1 equals exp SEMICOLON
Rule 39    vars -> type ID vars1 SEMICOLON
Rule 40    vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3
Rule 41    vars1 -> empty
Rule 42    vars3 -> OPENBRACKET CTEINT CLOSEBRACKET
Rule 43    vars3 -> empty
Rule 44    type -> INT
Rule 45    type -> FLOAT
Rule 46    type -> CHAR
Rule 47    print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
Rule 48    read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
Rule 49    read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
Rule 50    read1 -> OPENBRACKET exp CLOSEBRACKET
Rule 51    read1 -> empty
Rule 52    equals -> EQUALS
Rule 53    id -> ID
Rule 54    assignment -> id assignment1 equals assignment3 SEMICOLON
Rule 55    assignment1 -> assignment2
Rule 56    assignment1 -> assignment2 assignment1
Rule 57    assignment1 -> empty
Rule 58    assignment2 -> OPENBRACKET exp CLOSEBRACKET
Rule 59    assignment3 -> exp
Rule 60    assignment3 -> read
Rule 61    vcte -> cte_int
Rule 62    vcte -> cte_float
Rule 63    vcte -> cte_char
Rule 64    vcte -> id vcte1
Rule 65    vcte -> funCall
Rule 66    vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3
Rule 67    vcte1 -> empty
Rule 68    vcte3 -> OPENBRACKET exp CLOSEBRACKET
Rule 69    vcte3 -> empty
Rule 70    cte_int -> CTEINT
Rule 71    cte_float -> CTEFLOAT
Rule 72    cte_char -> CTECHAR
Rule 73    return -> RETURN return1 SEMICOLON
Rule 74    return1 -> vcte
Rule 75    return1 -> exp
Rule 76    expression -> exp expression1
Rule 77    expression1 -> loper exp
Rule 78    expression1 -> empty
Rule 79    loper -> GREATER
Rule 80    loper -> LESS
Rule 81    loper -> NOTEQUAL
Rule 82    loper -> ISEQUAL
Rule 83    logical -> expression logical1 expression
Rule 84    logical1 -> OR
Rule 85    logical1 -> AND
Rule 86    condition -> IF head body condition1
Rule 87    condition1 -> ELSEIF head body condition1
Rule 88    condition1 -> ELSE body
Rule 89    condition1 -> empty
Rule 90    head -> OPENPAREN head1 CLOSEPAREN
Rule 91    head1 -> expression
Rule 92    head1 -> logical
Rule 93    body -> OPENBRACES body1 CLOSEBRACES
Rule 94    body1 -> stmt body1
Rule 95    body1 -> empty
Rule 96    for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
Rule 97    while -> WHILE head body
Rule 98    funCall -> ID OPENPAREN funCall2 CLOSEPAREN
Rule 99    funCall2 -> exp funCall3
Rule 100   funCall2 -> empty
Rule 101   funCall3 -> COMMA exp funCall2
Rule 102   funCall3 -> empty
Rule 103   laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN
Rule 104   laRegla2 -> OPENPAREN exp CLOSEPAREN
Rule 105   graphstmt -> graphfig
Rule 106   graphstmt -> graphview
Rule 107   graphstmt -> graphmove
Rule 108   graphfig -> graphfig1 SEMICOLON
Rule 109   graphfig1 -> CIRCLE laRegla2
Rule 110   graphfig1 -> SQUARE laRegla2
Rule 111   graphfig1 -> TRIANGLE laRegla
Rule 112   graphfig1 -> RECTANGLE laRegla
Rule 113   graphmove -> graphmove1 SEMICOLON
Rule 114   graphmove1 -> HAND_DOWN
Rule 115   graphmove1 -> HAND_UP
Rule 116   graphmove1 -> graphmove2
Rule 117   graphmove2 -> GO laRegla2
Rule 118   graphmove2 -> LEFT laRegla2
Rule 119   graphmove2 -> RIGHT laRegla2
Rule 120   graphmove2 -> BACK laRegla2
Rule 121   graphmove2 -> ARC laRegla
Rule 122   graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
Rule 123   graphr1 -> graphstmt graphr1
Rule 124   graphr1 -> empty
Rule 125   graphview -> graphview1 SEMICOLON
Rule 126   graphview1 -> HIDE_STAR
Rule 127   graphview1 -> SHOW_STAR
Rule 128   graphview1 -> graphview2 exp
Rule 129   graphview2 -> SETXY graphview3
Rule 130   graphview2 -> COLOR_STAR
Rule 131   graphview2 -> SIZE_STAR
Rule 132   graphview3 -> exp COMMA
Rule 133   graphview3 -> laRegla
Rule 134   exp -> term exp1
Rule 135   exp1 -> ADDITION exp
Rule 136   exp1 -> SUBSTRACTION exp
Rule 137   exp1 -> empty
Rule 138   openP -> OPENPAREN
Rule 139   closeP -> CLOSEPAREN
Rule 140   factor -> vcte
Rule 141   factor -> factor1
Rule 142   factor1 -> factor2 vcte
Rule 143   factor1 -> openP expression closeP
Rule 144   factor2 -> ADDITION
Rule 145   factor2 -> SUBSTRACTION
Rule 146   term -> factor term1
Rule 147   term1 -> MULTIPLICATION term
Rule 148   term1 -> DIVISION term
Rule 149   term1 -> empty
Rule 150   empty -> <empty>

Terminals, with rules where they appear

ADDITION             : 135 144
AND                  : 85
ARC                  : 121
BACK                 : 120
CHAR                 : 46
CIRCLE               : 109
CLOSEBRACES          : 6 29 93 122
CLOSEBRACKET         : 40 42 49 49 50 58 66 68
CLOSEPAREN           : 30 47 48 90 96 98 103 104 139
COLOR_STAR           : 130
COMMA                : 35 101 103 132
CTECHAR              : 72
CTEFLOAT             : 71
CTEINT               : 40 42 70
DIVISION             : 148
ELSE                 : 88
ELSEIF               : 87
EQUALS               : 52
FLOAT                : 45
FOR                  : 96
FUN                  : 25
GO                   : 117
GREATER              : 79
HAND_DOWN            : 114
HAND_UP              : 115
HIDE_STAR            : 126
ID                   : 1 23 24 31 35 38 39 53 96 98
IF                   : 86
INT                  : 44
ISEQUAL              : 82
LEFT                 : 118
LESS                 : 80
MULTIPLICATION       : 7 147
NOTEQUAL             : 81
OPENBRACES           : 7 28 93 122
OPENBRACKET          : 40 42 49 49 50 58 66 68
OPENPAREN            : 30 47 48 90 96 98 103 104 138
OR                   : 84
PRINT                : 47
PROGRAM              : 1
READ                 : 48
RECTANGLE            : 112
REPEAT               : 122
RETURN               : 73
RIGHT                : 119
SEMICOLON            : 1 21 38 39 47 48 54 73 108 113 125
SETXY                : 129
SHOW_STAR            : 127
SIMPLEQUOTES         : 
SIZE_STAR            : 131
SQUARE               : 110
SUBSTRACTION         : 136 145
TRIANGLE             : 111
TWODOTS              : 96
VARS                 : 
VOID                 : 24 27
WHILE                : 97
error                : 

Nonterminals, with rules where they appear

assignment           : 14
assignment1          : 54 56
assignment2          : 55 56
assignment3          : 54
body                 : 86 87 88 96 97
body1                : 93 94
closeP               : 143
condition            : 15
condition1           : 86 87
cte_char             : 63
cte_float            : 62
cte_int              : 61
declara_vars         : 1 6 10 25
empty                : 3 5 9 11 32 34 37 41 43 51 57 67 69 78 89 95 100 102 124 137 149
equals               : 38 54
exp                  : 38 49 49 50 58 59 66 68 75 76 77 96 99 101 103 103 104 122 128 132 135 136
exp1                 : 134
expression           : 47 83 83 91 143
expression1          : 76
factor               : 146
factor1              : 141
factor2              : 142
for                  : 13
funCall              : 21 65
funCall2             : 98 101
funCall3             : 99
fun_vars             : 36
function             : 4
function1            : 
function2            : 25
function3            : 30 35
function4            : 25 33
function5            : 31
functionI            : 25
graphfig             : 105
graphfig1            : 108
graphmove            : 107
graphmove1           : 113
graphmove2           : 116
graphr               : 20
graphr1              : 122 123
graphstmt            : 19 122 123
graphview            : 106
graphview1           : 125
graphview2           : 128
graphview3           : 129
head                 : 86 87 97
head1                : 90
id                   : 48 54 64
inicia_fun           : 25
laRegla              : 111 112 121 133
laRegla2             : 109 110 117 118 119 120
logical              : 92
logical1             : 83
loop                 : 17
loper                : 77
openP                : 143
print                : 16
program              : 0
program2             : 1 4
program_vars         : 2
read                 : 18 60
read1                : 48
return               : 22
return1              : 73
star                 : 1
star1                : 6 8
starI                : 6
stmt                 : 8 33 94
term                 : 134 147 148
term1                : 146
termina_fun          : 25
type                 : 23 26 31 35 38 39
vars                 : 2 10 36
vars1                : 38 39
vars3                : 40
vcte                 : 74 140 142
vcte1                : 64
vcte3                : 66
while                : 12

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON declara_vars program2 star

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON declara_vars program2 star

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON declara_vars program2 star

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . declara_vars program2 star
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (38) vars -> . type ID vars1 equals exp SEMICOLON
    (39) vars -> . type ID vars1 SEMICOLON
    (150) empty -> .
    (44) type -> . INT
    (45) type -> . FLOAT
    (46) type -> . CHAR

    FUN             reduce using rule 150 (empty -> .)
    MULTIPLICATION  reduce using rule 150 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    declara_vars                   shift and go to state 5
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 5

    (1) program -> PROGRAM ID SEMICOLON declara_vars . program2 star
    (4) program2 -> . function program2
    (5) program2 -> . empty
    (25) function -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (150) empty -> .

    FUN             shift and go to state 15
    MULTIPLICATION  reduce using rule 150 (empty -> .)

    program2                       shift and go to state 12
    function                       shift and go to state 13
    empty                          shift and go to state 14

state 6

    (10) declara_vars -> vars . declara_vars
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (38) vars -> . type ID vars1 equals exp SEMICOLON
    (39) vars -> . type ID vars1 SEMICOLON
    (150) empty -> .
    (44) type -> . INT
    (45) type -> . FLOAT
    (46) type -> . CHAR

    FUN             reduce using rule 150 (empty -> .)
    MULTIPLICATION  reduce using rule 150 (empty -> .)
    IF              reduce using rule 150 (empty -> .)
    PRINT           reduce using rule 150 (empty -> .)
    READ            reduce using rule 150 (empty -> .)
    REPEAT          reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    RETURN          reduce using rule 150 (empty -> .)
    WHILE           reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    CIRCLE          reduce using rule 150 (empty -> .)
    SQUARE          reduce using rule 150 (empty -> .)
    TRIANGLE        reduce using rule 150 (empty -> .)
    RECTANGLE       reduce using rule 150 (empty -> .)
    HIDE_STAR       reduce using rule 150 (empty -> .)
    SHOW_STAR       reduce using rule 150 (empty -> .)
    HAND_DOWN       reduce using rule 150 (empty -> .)
    HAND_UP         reduce using rule 150 (empty -> .)
    SETXY           reduce using rule 150 (empty -> .)
    COLOR_STAR      reduce using rule 150 (empty -> .)
    SIZE_STAR       reduce using rule 150 (empty -> .)
    GO              reduce using rule 150 (empty -> .)
    LEFT            reduce using rule 150 (empty -> .)
    RIGHT           reduce using rule 150 (empty -> .)
    BACK            reduce using rule 150 (empty -> .)
    ARC             reduce using rule 150 (empty -> .)
    CLOSEBRACES     reduce using rule 150 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    vars                           shift and go to state 6
    declara_vars                   shift and go to state 16
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 7

    (11) declara_vars -> empty .

    FUN             reduce using rule 11 (declara_vars -> empty .)
    MULTIPLICATION  reduce using rule 11 (declara_vars -> empty .)
    IF              reduce using rule 11 (declara_vars -> empty .)
    PRINT           reduce using rule 11 (declara_vars -> empty .)
    READ            reduce using rule 11 (declara_vars -> empty .)
    REPEAT          reduce using rule 11 (declara_vars -> empty .)
    ID              reduce using rule 11 (declara_vars -> empty .)
    RETURN          reduce using rule 11 (declara_vars -> empty .)
    WHILE           reduce using rule 11 (declara_vars -> empty .)
    FOR             reduce using rule 11 (declara_vars -> empty .)
    CIRCLE          reduce using rule 11 (declara_vars -> empty .)
    SQUARE          reduce using rule 11 (declara_vars -> empty .)
    TRIANGLE        reduce using rule 11 (declara_vars -> empty .)
    RECTANGLE       reduce using rule 11 (declara_vars -> empty .)
    HIDE_STAR       reduce using rule 11 (declara_vars -> empty .)
    SHOW_STAR       reduce using rule 11 (declara_vars -> empty .)
    HAND_DOWN       reduce using rule 11 (declara_vars -> empty .)
    HAND_UP         reduce using rule 11 (declara_vars -> empty .)
    SETXY           reduce using rule 11 (declara_vars -> empty .)
    COLOR_STAR      reduce using rule 11 (declara_vars -> empty .)
    SIZE_STAR       reduce using rule 11 (declara_vars -> empty .)
    GO              reduce using rule 11 (declara_vars -> empty .)
    LEFT            reduce using rule 11 (declara_vars -> empty .)
    RIGHT           reduce using rule 11 (declara_vars -> empty .)
    BACK            reduce using rule 11 (declara_vars -> empty .)
    ARC             reduce using rule 11 (declara_vars -> empty .)
    CLOSEBRACES     reduce using rule 11 (declara_vars -> empty .)


state 8

    (38) vars -> type . ID vars1 equals exp SEMICOLON
    (39) vars -> type . ID vars1 SEMICOLON

    ID              shift and go to state 17


state 9

    (44) type -> INT .

    ID              reduce using rule 44 (type -> INT .)


state 10

    (45) type -> FLOAT .

    ID              reduce using rule 45 (type -> FLOAT .)


state 11

    (46) type -> CHAR .

    ID              reduce using rule 46 (type -> CHAR .)


state 12

    (1) program -> PROGRAM ID SEMICOLON declara_vars program2 . star
    (6) star -> . starI declara_vars star1 CLOSEBRACES
    (7) starI -> . MULTIPLICATION OPENBRACES

    MULTIPLICATION  shift and go to state 20

    star                           shift and go to state 18
    starI                          shift and go to state 19

state 13

    (4) program2 -> function . program2
    (4) program2 -> . function program2
    (5) program2 -> . empty
    (25) function -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (150) empty -> .

    FUN             shift and go to state 15
    MULTIPLICATION  reduce using rule 150 (empty -> .)

    function                       shift and go to state 13
    program2                       shift and go to state 21
    empty                          shift and go to state 14

state 14

    (5) program2 -> empty .

    MULTIPLICATION  reduce using rule 5 (program2 -> empty .)


state 15

    (25) function -> FUN . functionI function2 inicia_fun declara_vars function4 termina_fun
    (23) functionI -> . type ID
    (24) functionI -> . VOID ID
    (44) type -> . INT
    (45) type -> . FLOAT
    (46) type -> . CHAR

    VOID            shift and go to state 24
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    functionI                      shift and go to state 22
    type                           shift and go to state 23

state 16

    (10) declara_vars -> vars declara_vars .

    FUN             reduce using rule 10 (declara_vars -> vars declara_vars .)
    MULTIPLICATION  reduce using rule 10 (declara_vars -> vars declara_vars .)
    IF              reduce using rule 10 (declara_vars -> vars declara_vars .)
    PRINT           reduce using rule 10 (declara_vars -> vars declara_vars .)
    READ            reduce using rule 10 (declara_vars -> vars declara_vars .)
    REPEAT          reduce using rule 10 (declara_vars -> vars declara_vars .)
    ID              reduce using rule 10 (declara_vars -> vars declara_vars .)
    RETURN          reduce using rule 10 (declara_vars -> vars declara_vars .)
    WHILE           reduce using rule 10 (declara_vars -> vars declara_vars .)
    FOR             reduce using rule 10 (declara_vars -> vars declara_vars .)
    CIRCLE          reduce using rule 10 (declara_vars -> vars declara_vars .)
    SQUARE          reduce using rule 10 (declara_vars -> vars declara_vars .)
    TRIANGLE        reduce using rule 10 (declara_vars -> vars declara_vars .)
    RECTANGLE       reduce using rule 10 (declara_vars -> vars declara_vars .)
    HIDE_STAR       reduce using rule 10 (declara_vars -> vars declara_vars .)
    SHOW_STAR       reduce using rule 10 (declara_vars -> vars declara_vars .)
    HAND_DOWN       reduce using rule 10 (declara_vars -> vars declara_vars .)
    HAND_UP         reduce using rule 10 (declara_vars -> vars declara_vars .)
    SETXY           reduce using rule 10 (declara_vars -> vars declara_vars .)
    COLOR_STAR      reduce using rule 10 (declara_vars -> vars declara_vars .)
    SIZE_STAR       reduce using rule 10 (declara_vars -> vars declara_vars .)
    GO              reduce using rule 10 (declara_vars -> vars declara_vars .)
    LEFT            reduce using rule 10 (declara_vars -> vars declara_vars .)
    RIGHT           reduce using rule 10 (declara_vars -> vars declara_vars .)
    BACK            reduce using rule 10 (declara_vars -> vars declara_vars .)
    ARC             reduce using rule 10 (declara_vars -> vars declara_vars .)
    CLOSEBRACES     reduce using rule 10 (declara_vars -> vars declara_vars .)


state 17

    (38) vars -> type ID . vars1 equals exp SEMICOLON
    (39) vars -> type ID . vars1 SEMICOLON
    (40) vars1 -> . OPENBRACKET CTEINT CLOSEBRACKET vars3
    (41) vars1 -> . empty
    (150) empty -> .

    OPENBRACKET     shift and go to state 26
    SEMICOLON       reduce using rule 150 (empty -> .)
    EQUALS          reduce using rule 150 (empty -> .)

    vars1                          shift and go to state 25
    empty                          shift and go to state 27

state 18

    (1) program -> PROGRAM ID SEMICOLON declara_vars program2 star .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON declara_vars program2 star .)


state 19

    (6) star -> starI . declara_vars star1 CLOSEBRACES
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (38) vars -> . type ID vars1 equals exp SEMICOLON
    (39) vars -> . type ID vars1 SEMICOLON
    (150) empty -> .
    (44) type -> . INT
    (45) type -> . FLOAT
    (46) type -> . CHAR

    IF              reduce using rule 150 (empty -> .)
    PRINT           reduce using rule 150 (empty -> .)
    READ            reduce using rule 150 (empty -> .)
    REPEAT          reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    RETURN          reduce using rule 150 (empty -> .)
    WHILE           reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    CIRCLE          reduce using rule 150 (empty -> .)
    SQUARE          reduce using rule 150 (empty -> .)
    TRIANGLE        reduce using rule 150 (empty -> .)
    RECTANGLE       reduce using rule 150 (empty -> .)
    HIDE_STAR       reduce using rule 150 (empty -> .)
    SHOW_STAR       reduce using rule 150 (empty -> .)
    HAND_DOWN       reduce using rule 150 (empty -> .)
    HAND_UP         reduce using rule 150 (empty -> .)
    SETXY           reduce using rule 150 (empty -> .)
    COLOR_STAR      reduce using rule 150 (empty -> .)
    SIZE_STAR       reduce using rule 150 (empty -> .)
    GO              reduce using rule 150 (empty -> .)
    LEFT            reduce using rule 150 (empty -> .)
    RIGHT           reduce using rule 150 (empty -> .)
    BACK            reduce using rule 150 (empty -> .)
    ARC             reduce using rule 150 (empty -> .)
    CLOSEBRACES     reduce using rule 150 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    declara_vars                   shift and go to state 28
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 20

    (7) starI -> MULTIPLICATION . OPENBRACES

    OPENBRACES      shift and go to state 29


state 21

    (4) program2 -> function program2 .

    MULTIPLICATION  reduce using rule 4 (program2 -> function program2 .)


state 22

    (25) function -> FUN functionI . function2 inicia_fun declara_vars function4 termina_fun
    (30) function2 -> . OPENPAREN function3 CLOSEPAREN

    OPENPAREN       shift and go to state 31

    function2                      shift and go to state 30

state 23

    (23) functionI -> type . ID

    ID              shift and go to state 32


state 24

    (24) functionI -> VOID . ID

    ID              shift and go to state 33


state 25

    (38) vars -> type ID vars1 . equals exp SEMICOLON
    (39) vars -> type ID vars1 . SEMICOLON
    (52) equals -> . EQUALS

    SEMICOLON       shift and go to state 35
    EQUALS          shift and go to state 36

    equals                         shift and go to state 34

state 26

    (40) vars1 -> OPENBRACKET . CTEINT CLOSEBRACKET vars3

    CTEINT          shift and go to state 37


state 27

    (41) vars1 -> empty .

    SEMICOLON       reduce using rule 41 (vars1 -> empty .)
    EQUALS          reduce using rule 41 (vars1 -> empty .)


state 28

    (6) star -> starI declara_vars . star1 CLOSEBRACES
    (8) star1 -> . stmt star1
    (9) star1 -> . empty
    (14) stmt -> . assignment
    (15) stmt -> . condition
    (16) stmt -> . print
    (17) stmt -> . loop
    (18) stmt -> . read
    (19) stmt -> . graphstmt
    (20) stmt -> . graphr
    (21) stmt -> . funCall SEMICOLON
    (22) stmt -> . return
    (150) empty -> .
    (54) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (86) condition -> . IF head body condition1
    (47) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (12) loop -> . while
    (13) loop -> . for
    (48) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (105) graphstmt -> . graphfig
    (106) graphstmt -> . graphview
    (107) graphstmt -> . graphmove
    (122) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (73) return -> . RETURN return1 SEMICOLON
    (53) id -> . ID
    (97) while -> . WHILE head body
    (96) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (108) graphfig -> . graphfig1 SEMICOLON
    (125) graphview -> . graphview1 SEMICOLON
    (113) graphmove -> . graphmove1 SEMICOLON
    (109) graphfig1 -> . CIRCLE laRegla2
    (110) graphfig1 -> . SQUARE laRegla2
    (111) graphfig1 -> . TRIANGLE laRegla
    (112) graphfig1 -> . RECTANGLE laRegla
    (126) graphview1 -> . HIDE_STAR
    (127) graphview1 -> . SHOW_STAR
    (128) graphview1 -> . graphview2 exp
    (114) graphmove1 -> . HAND_DOWN
    (115) graphmove1 -> . HAND_UP
    (116) graphmove1 -> . graphmove2
    (129) graphview2 -> . SETXY graphview3
    (130) graphview2 -> . COLOR_STAR
    (131) graphview2 -> . SIZE_STAR
    (117) graphmove2 -> . GO laRegla2
    (118) graphmove2 -> . LEFT laRegla2
    (119) graphmove2 -> . RIGHT laRegla2
    (120) graphmove2 -> . BACK laRegla2
    (121) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 150 (empty -> .)
    IF              shift and go to state 51
    PRINT           shift and go to state 52
    READ            shift and go to state 55
    REPEAT          shift and go to state 59
    ID              shift and go to state 60
    RETURN          shift and go to state 61
    WHILE           shift and go to state 62
    FOR             shift and go to state 63
    CIRCLE          shift and go to state 67
    SQUARE          shift and go to state 68
    TRIANGLE        shift and go to state 69
    RECTANGLE       shift and go to state 70
    HIDE_STAR       shift and go to state 71
    SHOW_STAR       shift and go to state 72
    HAND_DOWN       shift and go to state 74
    HAND_UP         shift and go to state 75
    SETXY           shift and go to state 77
    COLOR_STAR      shift and go to state 78
    SIZE_STAR       shift and go to state 79
    GO              shift and go to state 80
    LEFT            shift and go to state 81
    RIGHT           shift and go to state 82
    BACK            shift and go to state 83
    ARC             shift and go to state 84

    star1                          shift and go to state 38
    stmt                           shift and go to state 39
    empty                          shift and go to state 40
    assignment                     shift and go to state 41
    condition                      shift and go to state 42
    print                          shift and go to state 43
    loop                           shift and go to state 44
    read                           shift and go to state 45
    graphstmt                      shift and go to state 46
    graphr                         shift and go to state 47
    funCall                        shift and go to state 48
    return                         shift and go to state 49
    id                             shift and go to state 50
    while                          shift and go to state 53
    for                            shift and go to state 54
    graphfig                       shift and go to state 56
    graphview                      shift and go to state 57
    graphmove                      shift and go to state 58
    graphfig1                      shift and go to state 64
    graphview1                     shift and go to state 65
    graphmove1                     shift and go to state 66
    graphview2                     shift and go to state 73
    graphmove2                     shift and go to state 76

state 29

    (7) starI -> MULTIPLICATION OPENBRACES .

    INT             reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    FLOAT           reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    CHAR            reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    IF              reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    PRINT           reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    READ            reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    REPEAT          reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    ID              reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    RETURN          reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    WHILE           reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    FOR             reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    CIRCLE          reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    SQUARE          reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    TRIANGLE        reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    RECTANGLE       reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    HIDE_STAR       reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    SHOW_STAR       reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    HAND_DOWN       reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    HAND_UP         reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    SETXY           reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    COLOR_STAR      reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    SIZE_STAR       reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    GO              reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    LEFT            reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    RIGHT           reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    BACK            reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    ARC             reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    CLOSEBRACES     reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)


state 30

    (25) function -> FUN functionI function2 . inicia_fun declara_vars function4 termina_fun
    (28) inicia_fun -> . OPENBRACES

    OPENBRACES      shift and go to state 86

    inicia_fun                     shift and go to state 85

state 31

    (30) function2 -> OPENPAREN . function3 CLOSEPAREN
    (31) function3 -> . type ID function5
    (32) function3 -> . empty
    (44) type -> . INT
    (45) type -> . FLOAT
    (46) type -> . CHAR
    (150) empty -> .

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    CLOSEPAREN      reduce using rule 150 (empty -> .)

    function3                      shift and go to state 87
    type                           shift and go to state 88
    empty                          shift and go to state 89

state 32

    (23) functionI -> type ID .

    OPENPAREN       reduce using rule 23 (functionI -> type ID .)


state 33

    (24) functionI -> VOID ID .

    OPENPAREN       reduce using rule 24 (functionI -> VOID ID .)


state 34

    (38) vars -> type ID vars1 equals . exp SEMICOLON
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    exp                            shift and go to state 91
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 35

    (39) vars -> type ID vars1 SEMICOLON .

    INT             reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    FLOAT           reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    CHAR            reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    FUN             reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    MULTIPLICATION  reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    IF              reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    PRINT           reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    READ            reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    REPEAT          reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    ID              reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    RETURN          reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    WHILE           reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    FOR             reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    CIRCLE          reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    SQUARE          reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    TRIANGLE        reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    RECTANGLE       reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    HIDE_STAR       reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    SHOW_STAR       reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    HAND_DOWN       reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    HAND_UP         reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    SETXY           reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    COLOR_STAR      reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    SIZE_STAR       reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    GO              reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    LEFT            reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    RIGHT           reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    BACK            reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    ARC             reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 39 (vars -> type ID vars1 SEMICOLON .)


state 36

    (52) equals -> EQUALS .

    CTEINT          reduce using rule 52 (equals -> EQUALS .)
    CTEFLOAT        reduce using rule 52 (equals -> EQUALS .)
    CTECHAR         reduce using rule 52 (equals -> EQUALS .)
    ID              reduce using rule 52 (equals -> EQUALS .)
    ADDITION        reduce using rule 52 (equals -> EQUALS .)
    SUBSTRACTION    reduce using rule 52 (equals -> EQUALS .)
    OPENPAREN       reduce using rule 52 (equals -> EQUALS .)
    READ            reduce using rule 52 (equals -> EQUALS .)


state 37

    (40) vars1 -> OPENBRACKET CTEINT . CLOSEBRACKET vars3

    CLOSEBRACKET    shift and go to state 109


state 38

    (6) star -> starI declara_vars star1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 110


state 39

    (8) star1 -> stmt . star1
    (8) star1 -> . stmt star1
    (9) star1 -> . empty
    (14) stmt -> . assignment
    (15) stmt -> . condition
    (16) stmt -> . print
    (17) stmt -> . loop
    (18) stmt -> . read
    (19) stmt -> . graphstmt
    (20) stmt -> . graphr
    (21) stmt -> . funCall SEMICOLON
    (22) stmt -> . return
    (150) empty -> .
    (54) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (86) condition -> . IF head body condition1
    (47) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (12) loop -> . while
    (13) loop -> . for
    (48) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (105) graphstmt -> . graphfig
    (106) graphstmt -> . graphview
    (107) graphstmt -> . graphmove
    (122) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (73) return -> . RETURN return1 SEMICOLON
    (53) id -> . ID
    (97) while -> . WHILE head body
    (96) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (108) graphfig -> . graphfig1 SEMICOLON
    (125) graphview -> . graphview1 SEMICOLON
    (113) graphmove -> . graphmove1 SEMICOLON
    (109) graphfig1 -> . CIRCLE laRegla2
    (110) graphfig1 -> . SQUARE laRegla2
    (111) graphfig1 -> . TRIANGLE laRegla
    (112) graphfig1 -> . RECTANGLE laRegla
    (126) graphview1 -> . HIDE_STAR
    (127) graphview1 -> . SHOW_STAR
    (128) graphview1 -> . graphview2 exp
    (114) graphmove1 -> . HAND_DOWN
    (115) graphmove1 -> . HAND_UP
    (116) graphmove1 -> . graphmove2
    (129) graphview2 -> . SETXY graphview3
    (130) graphview2 -> . COLOR_STAR
    (131) graphview2 -> . SIZE_STAR
    (117) graphmove2 -> . GO laRegla2
    (118) graphmove2 -> . LEFT laRegla2
    (119) graphmove2 -> . RIGHT laRegla2
    (120) graphmove2 -> . BACK laRegla2
    (121) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 150 (empty -> .)
    IF              shift and go to state 51
    PRINT           shift and go to state 52
    READ            shift and go to state 55
    REPEAT          shift and go to state 59
    ID              shift and go to state 60
    RETURN          shift and go to state 61
    WHILE           shift and go to state 62
    FOR             shift and go to state 63
    CIRCLE          shift and go to state 67
    SQUARE          shift and go to state 68
    TRIANGLE        shift and go to state 69
    RECTANGLE       shift and go to state 70
    HIDE_STAR       shift and go to state 71
    SHOW_STAR       shift and go to state 72
    HAND_DOWN       shift and go to state 74
    HAND_UP         shift and go to state 75
    SETXY           shift and go to state 77
    COLOR_STAR      shift and go to state 78
    SIZE_STAR       shift and go to state 79
    GO              shift and go to state 80
    LEFT            shift and go to state 81
    RIGHT           shift and go to state 82
    BACK            shift and go to state 83
    ARC             shift and go to state 84

    stmt                           shift and go to state 39
    star1                          shift and go to state 111
    empty                          shift and go to state 40
    assignment                     shift and go to state 41
    condition                      shift and go to state 42
    print                          shift and go to state 43
    loop                           shift and go to state 44
    read                           shift and go to state 45
    graphstmt                      shift and go to state 46
    graphr                         shift and go to state 47
    funCall                        shift and go to state 48
    return                         shift and go to state 49
    id                             shift and go to state 50
    while                          shift and go to state 53
    for                            shift and go to state 54
    graphfig                       shift and go to state 56
    graphview                      shift and go to state 57
    graphmove                      shift and go to state 58
    graphfig1                      shift and go to state 64
    graphview1                     shift and go to state 65
    graphmove1                     shift and go to state 66
    graphview2                     shift and go to state 73
    graphmove2                     shift and go to state 76

state 40

    (9) star1 -> empty .

    CLOSEBRACES     reduce using rule 9 (star1 -> empty .)


state 41

    (14) stmt -> assignment .

    IF              reduce using rule 14 (stmt -> assignment .)
    PRINT           reduce using rule 14 (stmt -> assignment .)
    READ            reduce using rule 14 (stmt -> assignment .)
    REPEAT          reduce using rule 14 (stmt -> assignment .)
    ID              reduce using rule 14 (stmt -> assignment .)
    RETURN          reduce using rule 14 (stmt -> assignment .)
    WHILE           reduce using rule 14 (stmt -> assignment .)
    FOR             reduce using rule 14 (stmt -> assignment .)
    CIRCLE          reduce using rule 14 (stmt -> assignment .)
    SQUARE          reduce using rule 14 (stmt -> assignment .)
    TRIANGLE        reduce using rule 14 (stmt -> assignment .)
    RECTANGLE       reduce using rule 14 (stmt -> assignment .)
    HIDE_STAR       reduce using rule 14 (stmt -> assignment .)
    SHOW_STAR       reduce using rule 14 (stmt -> assignment .)
    HAND_DOWN       reduce using rule 14 (stmt -> assignment .)
    HAND_UP         reduce using rule 14 (stmt -> assignment .)
    SETXY           reduce using rule 14 (stmt -> assignment .)
    COLOR_STAR      reduce using rule 14 (stmt -> assignment .)
    SIZE_STAR       reduce using rule 14 (stmt -> assignment .)
    GO              reduce using rule 14 (stmt -> assignment .)
    LEFT            reduce using rule 14 (stmt -> assignment .)
    RIGHT           reduce using rule 14 (stmt -> assignment .)
    BACK            reduce using rule 14 (stmt -> assignment .)
    ARC             reduce using rule 14 (stmt -> assignment .)
    CLOSEBRACES     reduce using rule 14 (stmt -> assignment .)


state 42

    (15) stmt -> condition .

    IF              reduce using rule 15 (stmt -> condition .)
    PRINT           reduce using rule 15 (stmt -> condition .)
    READ            reduce using rule 15 (stmt -> condition .)
    REPEAT          reduce using rule 15 (stmt -> condition .)
    ID              reduce using rule 15 (stmt -> condition .)
    RETURN          reduce using rule 15 (stmt -> condition .)
    WHILE           reduce using rule 15 (stmt -> condition .)
    FOR             reduce using rule 15 (stmt -> condition .)
    CIRCLE          reduce using rule 15 (stmt -> condition .)
    SQUARE          reduce using rule 15 (stmt -> condition .)
    TRIANGLE        reduce using rule 15 (stmt -> condition .)
    RECTANGLE       reduce using rule 15 (stmt -> condition .)
    HIDE_STAR       reduce using rule 15 (stmt -> condition .)
    SHOW_STAR       reduce using rule 15 (stmt -> condition .)
    HAND_DOWN       reduce using rule 15 (stmt -> condition .)
    HAND_UP         reduce using rule 15 (stmt -> condition .)
    SETXY           reduce using rule 15 (stmt -> condition .)
    COLOR_STAR      reduce using rule 15 (stmt -> condition .)
    SIZE_STAR       reduce using rule 15 (stmt -> condition .)
    GO              reduce using rule 15 (stmt -> condition .)
    LEFT            reduce using rule 15 (stmt -> condition .)
    RIGHT           reduce using rule 15 (stmt -> condition .)
    BACK            reduce using rule 15 (stmt -> condition .)
    ARC             reduce using rule 15 (stmt -> condition .)
    CLOSEBRACES     reduce using rule 15 (stmt -> condition .)


state 43

    (16) stmt -> print .

    IF              reduce using rule 16 (stmt -> print .)
    PRINT           reduce using rule 16 (stmt -> print .)
    READ            reduce using rule 16 (stmt -> print .)
    REPEAT          reduce using rule 16 (stmt -> print .)
    ID              reduce using rule 16 (stmt -> print .)
    RETURN          reduce using rule 16 (stmt -> print .)
    WHILE           reduce using rule 16 (stmt -> print .)
    FOR             reduce using rule 16 (stmt -> print .)
    CIRCLE          reduce using rule 16 (stmt -> print .)
    SQUARE          reduce using rule 16 (stmt -> print .)
    TRIANGLE        reduce using rule 16 (stmt -> print .)
    RECTANGLE       reduce using rule 16 (stmt -> print .)
    HIDE_STAR       reduce using rule 16 (stmt -> print .)
    SHOW_STAR       reduce using rule 16 (stmt -> print .)
    HAND_DOWN       reduce using rule 16 (stmt -> print .)
    HAND_UP         reduce using rule 16 (stmt -> print .)
    SETXY           reduce using rule 16 (stmt -> print .)
    COLOR_STAR      reduce using rule 16 (stmt -> print .)
    SIZE_STAR       reduce using rule 16 (stmt -> print .)
    GO              reduce using rule 16 (stmt -> print .)
    LEFT            reduce using rule 16 (stmt -> print .)
    RIGHT           reduce using rule 16 (stmt -> print .)
    BACK            reduce using rule 16 (stmt -> print .)
    ARC             reduce using rule 16 (stmt -> print .)
    CLOSEBRACES     reduce using rule 16 (stmt -> print .)


state 44

    (17) stmt -> loop .

    IF              reduce using rule 17 (stmt -> loop .)
    PRINT           reduce using rule 17 (stmt -> loop .)
    READ            reduce using rule 17 (stmt -> loop .)
    REPEAT          reduce using rule 17 (stmt -> loop .)
    ID              reduce using rule 17 (stmt -> loop .)
    RETURN          reduce using rule 17 (stmt -> loop .)
    WHILE           reduce using rule 17 (stmt -> loop .)
    FOR             reduce using rule 17 (stmt -> loop .)
    CIRCLE          reduce using rule 17 (stmt -> loop .)
    SQUARE          reduce using rule 17 (stmt -> loop .)
    TRIANGLE        reduce using rule 17 (stmt -> loop .)
    RECTANGLE       reduce using rule 17 (stmt -> loop .)
    HIDE_STAR       reduce using rule 17 (stmt -> loop .)
    SHOW_STAR       reduce using rule 17 (stmt -> loop .)
    HAND_DOWN       reduce using rule 17 (stmt -> loop .)
    HAND_UP         reduce using rule 17 (stmt -> loop .)
    SETXY           reduce using rule 17 (stmt -> loop .)
    COLOR_STAR      reduce using rule 17 (stmt -> loop .)
    SIZE_STAR       reduce using rule 17 (stmt -> loop .)
    GO              reduce using rule 17 (stmt -> loop .)
    LEFT            reduce using rule 17 (stmt -> loop .)
    RIGHT           reduce using rule 17 (stmt -> loop .)
    BACK            reduce using rule 17 (stmt -> loop .)
    ARC             reduce using rule 17 (stmt -> loop .)
    CLOSEBRACES     reduce using rule 17 (stmt -> loop .)


state 45

    (18) stmt -> read .

    IF              reduce using rule 18 (stmt -> read .)
    PRINT           reduce using rule 18 (stmt -> read .)
    READ            reduce using rule 18 (stmt -> read .)
    REPEAT          reduce using rule 18 (stmt -> read .)
    ID              reduce using rule 18 (stmt -> read .)
    RETURN          reduce using rule 18 (stmt -> read .)
    WHILE           reduce using rule 18 (stmt -> read .)
    FOR             reduce using rule 18 (stmt -> read .)
    CIRCLE          reduce using rule 18 (stmt -> read .)
    SQUARE          reduce using rule 18 (stmt -> read .)
    TRIANGLE        reduce using rule 18 (stmt -> read .)
    RECTANGLE       reduce using rule 18 (stmt -> read .)
    HIDE_STAR       reduce using rule 18 (stmt -> read .)
    SHOW_STAR       reduce using rule 18 (stmt -> read .)
    HAND_DOWN       reduce using rule 18 (stmt -> read .)
    HAND_UP         reduce using rule 18 (stmt -> read .)
    SETXY           reduce using rule 18 (stmt -> read .)
    COLOR_STAR      reduce using rule 18 (stmt -> read .)
    SIZE_STAR       reduce using rule 18 (stmt -> read .)
    GO              reduce using rule 18 (stmt -> read .)
    LEFT            reduce using rule 18 (stmt -> read .)
    RIGHT           reduce using rule 18 (stmt -> read .)
    BACK            reduce using rule 18 (stmt -> read .)
    ARC             reduce using rule 18 (stmt -> read .)
    CLOSEBRACES     reduce using rule 18 (stmt -> read .)


state 46

    (19) stmt -> graphstmt .

    IF              reduce using rule 19 (stmt -> graphstmt .)
    PRINT           reduce using rule 19 (stmt -> graphstmt .)
    READ            reduce using rule 19 (stmt -> graphstmt .)
    REPEAT          reduce using rule 19 (stmt -> graphstmt .)
    ID              reduce using rule 19 (stmt -> graphstmt .)
    RETURN          reduce using rule 19 (stmt -> graphstmt .)
    WHILE           reduce using rule 19 (stmt -> graphstmt .)
    FOR             reduce using rule 19 (stmt -> graphstmt .)
    CIRCLE          reduce using rule 19 (stmt -> graphstmt .)
    SQUARE          reduce using rule 19 (stmt -> graphstmt .)
    TRIANGLE        reduce using rule 19 (stmt -> graphstmt .)
    RECTANGLE       reduce using rule 19 (stmt -> graphstmt .)
    HIDE_STAR       reduce using rule 19 (stmt -> graphstmt .)
    SHOW_STAR       reduce using rule 19 (stmt -> graphstmt .)
    HAND_DOWN       reduce using rule 19 (stmt -> graphstmt .)
    HAND_UP         reduce using rule 19 (stmt -> graphstmt .)
    SETXY           reduce using rule 19 (stmt -> graphstmt .)
    COLOR_STAR      reduce using rule 19 (stmt -> graphstmt .)
    SIZE_STAR       reduce using rule 19 (stmt -> graphstmt .)
    GO              reduce using rule 19 (stmt -> graphstmt .)
    LEFT            reduce using rule 19 (stmt -> graphstmt .)
    RIGHT           reduce using rule 19 (stmt -> graphstmt .)
    BACK            reduce using rule 19 (stmt -> graphstmt .)
    ARC             reduce using rule 19 (stmt -> graphstmt .)
    CLOSEBRACES     reduce using rule 19 (stmt -> graphstmt .)


state 47

    (20) stmt -> graphr .

    IF              reduce using rule 20 (stmt -> graphr .)
    PRINT           reduce using rule 20 (stmt -> graphr .)
    READ            reduce using rule 20 (stmt -> graphr .)
    REPEAT          reduce using rule 20 (stmt -> graphr .)
    ID              reduce using rule 20 (stmt -> graphr .)
    RETURN          reduce using rule 20 (stmt -> graphr .)
    WHILE           reduce using rule 20 (stmt -> graphr .)
    FOR             reduce using rule 20 (stmt -> graphr .)
    CIRCLE          reduce using rule 20 (stmt -> graphr .)
    SQUARE          reduce using rule 20 (stmt -> graphr .)
    TRIANGLE        reduce using rule 20 (stmt -> graphr .)
    RECTANGLE       reduce using rule 20 (stmt -> graphr .)
    HIDE_STAR       reduce using rule 20 (stmt -> graphr .)
    SHOW_STAR       reduce using rule 20 (stmt -> graphr .)
    HAND_DOWN       reduce using rule 20 (stmt -> graphr .)
    HAND_UP         reduce using rule 20 (stmt -> graphr .)
    SETXY           reduce using rule 20 (stmt -> graphr .)
    COLOR_STAR      reduce using rule 20 (stmt -> graphr .)
    SIZE_STAR       reduce using rule 20 (stmt -> graphr .)
    GO              reduce using rule 20 (stmt -> graphr .)
    LEFT            reduce using rule 20 (stmt -> graphr .)
    RIGHT           reduce using rule 20 (stmt -> graphr .)
    BACK            reduce using rule 20 (stmt -> graphr .)
    ARC             reduce using rule 20 (stmt -> graphr .)
    CLOSEBRACES     reduce using rule 20 (stmt -> graphr .)


state 48

    (21) stmt -> funCall . SEMICOLON

    SEMICOLON       shift and go to state 112


state 49

    (22) stmt -> return .

    IF              reduce using rule 22 (stmt -> return .)
    PRINT           reduce using rule 22 (stmt -> return .)
    READ            reduce using rule 22 (stmt -> return .)
    REPEAT          reduce using rule 22 (stmt -> return .)
    ID              reduce using rule 22 (stmt -> return .)
    RETURN          reduce using rule 22 (stmt -> return .)
    WHILE           reduce using rule 22 (stmt -> return .)
    FOR             reduce using rule 22 (stmt -> return .)
    CIRCLE          reduce using rule 22 (stmt -> return .)
    SQUARE          reduce using rule 22 (stmt -> return .)
    TRIANGLE        reduce using rule 22 (stmt -> return .)
    RECTANGLE       reduce using rule 22 (stmt -> return .)
    HIDE_STAR       reduce using rule 22 (stmt -> return .)
    SHOW_STAR       reduce using rule 22 (stmt -> return .)
    HAND_DOWN       reduce using rule 22 (stmt -> return .)
    HAND_UP         reduce using rule 22 (stmt -> return .)
    SETXY           reduce using rule 22 (stmt -> return .)
    COLOR_STAR      reduce using rule 22 (stmt -> return .)
    SIZE_STAR       reduce using rule 22 (stmt -> return .)
    GO              reduce using rule 22 (stmt -> return .)
    LEFT            reduce using rule 22 (stmt -> return .)
    RIGHT           reduce using rule 22 (stmt -> return .)
    BACK            reduce using rule 22 (stmt -> return .)
    ARC             reduce using rule 22 (stmt -> return .)
    CLOSEBRACES     reduce using rule 22 (stmt -> return .)


state 50

    (54) assignment -> id . assignment1 equals assignment3 SEMICOLON
    (55) assignment1 -> . assignment2
    (56) assignment1 -> . assignment2 assignment1
    (57) assignment1 -> . empty
    (58) assignment2 -> . OPENBRACKET exp CLOSEBRACKET
    (150) empty -> .

    OPENBRACKET     shift and go to state 116
    EQUALS          reduce using rule 150 (empty -> .)

    assignment1                    shift and go to state 113
    assignment2                    shift and go to state 114
    empty                          shift and go to state 115

state 51

    (86) condition -> IF . head body condition1
    (90) head -> . OPENPAREN head1 CLOSEPAREN

    OPENPAREN       shift and go to state 118

    head                           shift and go to state 117

state 52

    (47) print -> PRINT . OPENPAREN expression CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 119


state 53

    (12) loop -> while .

    IF              reduce using rule 12 (loop -> while .)
    PRINT           reduce using rule 12 (loop -> while .)
    READ            reduce using rule 12 (loop -> while .)
    REPEAT          reduce using rule 12 (loop -> while .)
    ID              reduce using rule 12 (loop -> while .)
    RETURN          reduce using rule 12 (loop -> while .)
    WHILE           reduce using rule 12 (loop -> while .)
    FOR             reduce using rule 12 (loop -> while .)
    CIRCLE          reduce using rule 12 (loop -> while .)
    SQUARE          reduce using rule 12 (loop -> while .)
    TRIANGLE        reduce using rule 12 (loop -> while .)
    RECTANGLE       reduce using rule 12 (loop -> while .)
    HIDE_STAR       reduce using rule 12 (loop -> while .)
    SHOW_STAR       reduce using rule 12 (loop -> while .)
    HAND_DOWN       reduce using rule 12 (loop -> while .)
    HAND_UP         reduce using rule 12 (loop -> while .)
    SETXY           reduce using rule 12 (loop -> while .)
    COLOR_STAR      reduce using rule 12 (loop -> while .)
    SIZE_STAR       reduce using rule 12 (loop -> while .)
    GO              reduce using rule 12 (loop -> while .)
    LEFT            reduce using rule 12 (loop -> while .)
    RIGHT           reduce using rule 12 (loop -> while .)
    BACK            reduce using rule 12 (loop -> while .)
    ARC             reduce using rule 12 (loop -> while .)
    CLOSEBRACES     reduce using rule 12 (loop -> while .)


state 54

    (13) loop -> for .

    IF              reduce using rule 13 (loop -> for .)
    PRINT           reduce using rule 13 (loop -> for .)
    READ            reduce using rule 13 (loop -> for .)
    REPEAT          reduce using rule 13 (loop -> for .)
    ID              reduce using rule 13 (loop -> for .)
    RETURN          reduce using rule 13 (loop -> for .)
    WHILE           reduce using rule 13 (loop -> for .)
    FOR             reduce using rule 13 (loop -> for .)
    CIRCLE          reduce using rule 13 (loop -> for .)
    SQUARE          reduce using rule 13 (loop -> for .)
    TRIANGLE        reduce using rule 13 (loop -> for .)
    RECTANGLE       reduce using rule 13 (loop -> for .)
    HIDE_STAR       reduce using rule 13 (loop -> for .)
    SHOW_STAR       reduce using rule 13 (loop -> for .)
    HAND_DOWN       reduce using rule 13 (loop -> for .)
    HAND_UP         reduce using rule 13 (loop -> for .)
    SETXY           reduce using rule 13 (loop -> for .)
    COLOR_STAR      reduce using rule 13 (loop -> for .)
    SIZE_STAR       reduce using rule 13 (loop -> for .)
    GO              reduce using rule 13 (loop -> for .)
    LEFT            reduce using rule 13 (loop -> for .)
    RIGHT           reduce using rule 13 (loop -> for .)
    BACK            reduce using rule 13 (loop -> for .)
    ARC             reduce using rule 13 (loop -> for .)
    CLOSEBRACES     reduce using rule 13 (loop -> for .)


state 55

    (48) read -> READ . OPENPAREN id read1 CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 120


state 56

    (105) graphstmt -> graphfig .

    IF              reduce using rule 105 (graphstmt -> graphfig .)
    PRINT           reduce using rule 105 (graphstmt -> graphfig .)
    READ            reduce using rule 105 (graphstmt -> graphfig .)
    REPEAT          reduce using rule 105 (graphstmt -> graphfig .)
    ID              reduce using rule 105 (graphstmt -> graphfig .)
    RETURN          reduce using rule 105 (graphstmt -> graphfig .)
    WHILE           reduce using rule 105 (graphstmt -> graphfig .)
    FOR             reduce using rule 105 (graphstmt -> graphfig .)
    CIRCLE          reduce using rule 105 (graphstmt -> graphfig .)
    SQUARE          reduce using rule 105 (graphstmt -> graphfig .)
    TRIANGLE        reduce using rule 105 (graphstmt -> graphfig .)
    RECTANGLE       reduce using rule 105 (graphstmt -> graphfig .)
    HIDE_STAR       reduce using rule 105 (graphstmt -> graphfig .)
    SHOW_STAR       reduce using rule 105 (graphstmt -> graphfig .)
    HAND_DOWN       reduce using rule 105 (graphstmt -> graphfig .)
    HAND_UP         reduce using rule 105 (graphstmt -> graphfig .)
    SETXY           reduce using rule 105 (graphstmt -> graphfig .)
    COLOR_STAR      reduce using rule 105 (graphstmt -> graphfig .)
    SIZE_STAR       reduce using rule 105 (graphstmt -> graphfig .)
    GO              reduce using rule 105 (graphstmt -> graphfig .)
    LEFT            reduce using rule 105 (graphstmt -> graphfig .)
    RIGHT           reduce using rule 105 (graphstmt -> graphfig .)
    BACK            reduce using rule 105 (graphstmt -> graphfig .)
    ARC             reduce using rule 105 (graphstmt -> graphfig .)
    CLOSEBRACES     reduce using rule 105 (graphstmt -> graphfig .)


state 57

    (106) graphstmt -> graphview .

    IF              reduce using rule 106 (graphstmt -> graphview .)
    PRINT           reduce using rule 106 (graphstmt -> graphview .)
    READ            reduce using rule 106 (graphstmt -> graphview .)
    REPEAT          reduce using rule 106 (graphstmt -> graphview .)
    ID              reduce using rule 106 (graphstmt -> graphview .)
    RETURN          reduce using rule 106 (graphstmt -> graphview .)
    WHILE           reduce using rule 106 (graphstmt -> graphview .)
    FOR             reduce using rule 106 (graphstmt -> graphview .)
    CIRCLE          reduce using rule 106 (graphstmt -> graphview .)
    SQUARE          reduce using rule 106 (graphstmt -> graphview .)
    TRIANGLE        reduce using rule 106 (graphstmt -> graphview .)
    RECTANGLE       reduce using rule 106 (graphstmt -> graphview .)
    HIDE_STAR       reduce using rule 106 (graphstmt -> graphview .)
    SHOW_STAR       reduce using rule 106 (graphstmt -> graphview .)
    HAND_DOWN       reduce using rule 106 (graphstmt -> graphview .)
    HAND_UP         reduce using rule 106 (graphstmt -> graphview .)
    SETXY           reduce using rule 106 (graphstmt -> graphview .)
    COLOR_STAR      reduce using rule 106 (graphstmt -> graphview .)
    SIZE_STAR       reduce using rule 106 (graphstmt -> graphview .)
    GO              reduce using rule 106 (graphstmt -> graphview .)
    LEFT            reduce using rule 106 (graphstmt -> graphview .)
    RIGHT           reduce using rule 106 (graphstmt -> graphview .)
    BACK            reduce using rule 106 (graphstmt -> graphview .)
    ARC             reduce using rule 106 (graphstmt -> graphview .)
    CLOSEBRACES     reduce using rule 106 (graphstmt -> graphview .)


state 58

    (107) graphstmt -> graphmove .

    IF              reduce using rule 107 (graphstmt -> graphmove .)
    PRINT           reduce using rule 107 (graphstmt -> graphmove .)
    READ            reduce using rule 107 (graphstmt -> graphmove .)
    REPEAT          reduce using rule 107 (graphstmt -> graphmove .)
    ID              reduce using rule 107 (graphstmt -> graphmove .)
    RETURN          reduce using rule 107 (graphstmt -> graphmove .)
    WHILE           reduce using rule 107 (graphstmt -> graphmove .)
    FOR             reduce using rule 107 (graphstmt -> graphmove .)
    CIRCLE          reduce using rule 107 (graphstmt -> graphmove .)
    SQUARE          reduce using rule 107 (graphstmt -> graphmove .)
    TRIANGLE        reduce using rule 107 (graphstmt -> graphmove .)
    RECTANGLE       reduce using rule 107 (graphstmt -> graphmove .)
    HIDE_STAR       reduce using rule 107 (graphstmt -> graphmove .)
    SHOW_STAR       reduce using rule 107 (graphstmt -> graphmove .)
    HAND_DOWN       reduce using rule 107 (graphstmt -> graphmove .)
    HAND_UP         reduce using rule 107 (graphstmt -> graphmove .)
    SETXY           reduce using rule 107 (graphstmt -> graphmove .)
    COLOR_STAR      reduce using rule 107 (graphstmt -> graphmove .)
    SIZE_STAR       reduce using rule 107 (graphstmt -> graphmove .)
    GO              reduce using rule 107 (graphstmt -> graphmove .)
    LEFT            reduce using rule 107 (graphstmt -> graphmove .)
    RIGHT           reduce using rule 107 (graphstmt -> graphmove .)
    BACK            reduce using rule 107 (graphstmt -> graphmove .)
    ARC             reduce using rule 107 (graphstmt -> graphmove .)
    CLOSEBRACES     reduce using rule 107 (graphstmt -> graphmove .)


state 59

    (122) graphr -> REPEAT . exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    exp                            shift and go to state 121
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 60

    (98) funCall -> ID . OPENPAREN funCall2 CLOSEPAREN
    (53) id -> ID .

    OPENPAREN       shift and go to state 122
    OPENBRACKET     reduce using rule 53 (id -> ID .)
    EQUALS          reduce using rule 53 (id -> ID .)


state 61

    (73) return -> RETURN . return1 SEMICOLON
    (74) return1 -> . vcte
    (75) return1 -> . exp
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (134) exp -> . term exp1
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    return1                        shift and go to state 123
    vcte                           shift and go to state 124
    exp                            shift and go to state 125
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    term                           shift and go to state 92
    factor                         shift and go to state 93
    factor1                        shift and go to state 95
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 62

    (97) while -> WHILE . head body
    (90) head -> . OPENPAREN head1 CLOSEPAREN

    OPENPAREN       shift and go to state 118

    head                           shift and go to state 126

state 63

    (96) for -> FOR . OPENPAREN ID TWODOTS exp CLOSEPAREN body

    OPENPAREN       shift and go to state 127


state 64

    (108) graphfig -> graphfig1 . SEMICOLON

    SEMICOLON       shift and go to state 128


state 65

    (125) graphview -> graphview1 . SEMICOLON

    SEMICOLON       shift and go to state 129


state 66

    (113) graphmove -> graphmove1 . SEMICOLON

    SEMICOLON       shift and go to state 130


state 67

    (109) graphfig1 -> CIRCLE . laRegla2
    (104) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 132

    laRegla2                       shift and go to state 131

state 68

    (110) graphfig1 -> SQUARE . laRegla2
    (104) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 132

    laRegla2                       shift and go to state 133

state 69

    (111) graphfig1 -> TRIANGLE . laRegla
    (103) laRegla -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 135

    laRegla                        shift and go to state 134

state 70

    (112) graphfig1 -> RECTANGLE . laRegla
    (103) laRegla -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 135

    laRegla                        shift and go to state 136

state 71

    (126) graphview1 -> HIDE_STAR .

    SEMICOLON       reduce using rule 126 (graphview1 -> HIDE_STAR .)


state 72

    (127) graphview1 -> SHOW_STAR .

    SEMICOLON       reduce using rule 127 (graphview1 -> SHOW_STAR .)


state 73

    (128) graphview1 -> graphview2 . exp
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    exp                            shift and go to state 137
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 74

    (114) graphmove1 -> HAND_DOWN .

    SEMICOLON       reduce using rule 114 (graphmove1 -> HAND_DOWN .)


state 75

    (115) graphmove1 -> HAND_UP .

    SEMICOLON       reduce using rule 115 (graphmove1 -> HAND_UP .)


state 76

    (116) graphmove1 -> graphmove2 .

    SEMICOLON       reduce using rule 116 (graphmove1 -> graphmove2 .)


state 77

    (129) graphview2 -> SETXY . graphview3
    (132) graphview3 -> . exp COMMA
    (133) graphview3 -> . laRegla
    (134) exp -> . term exp1
    (103) laRegla -> . OPENPAREN exp COMMA exp CLOSEPAREN
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    OPENPAREN       shift and go to state 141
    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108

    graphview3                     shift and go to state 138
    exp                            shift and go to state 139
    laRegla                        shift and go to state 140
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 78

    (130) graphview2 -> COLOR_STAR .

    CTEINT          reduce using rule 130 (graphview2 -> COLOR_STAR .)
    CTEFLOAT        reduce using rule 130 (graphview2 -> COLOR_STAR .)
    CTECHAR         reduce using rule 130 (graphview2 -> COLOR_STAR .)
    ID              reduce using rule 130 (graphview2 -> COLOR_STAR .)
    ADDITION        reduce using rule 130 (graphview2 -> COLOR_STAR .)
    SUBSTRACTION    reduce using rule 130 (graphview2 -> COLOR_STAR .)
    OPENPAREN       reduce using rule 130 (graphview2 -> COLOR_STAR .)


state 79

    (131) graphview2 -> SIZE_STAR .

    CTEINT          reduce using rule 131 (graphview2 -> SIZE_STAR .)
    CTEFLOAT        reduce using rule 131 (graphview2 -> SIZE_STAR .)
    CTECHAR         reduce using rule 131 (graphview2 -> SIZE_STAR .)
    ID              reduce using rule 131 (graphview2 -> SIZE_STAR .)
    ADDITION        reduce using rule 131 (graphview2 -> SIZE_STAR .)
    SUBSTRACTION    reduce using rule 131 (graphview2 -> SIZE_STAR .)
    OPENPAREN       reduce using rule 131 (graphview2 -> SIZE_STAR .)


state 80

    (117) graphmove2 -> GO . laRegla2
    (104) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 132

    laRegla2                       shift and go to state 142

state 81

    (118) graphmove2 -> LEFT . laRegla2
    (104) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 132

    laRegla2                       shift and go to state 143

state 82

    (119) graphmove2 -> RIGHT . laRegla2
    (104) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 132

    laRegla2                       shift and go to state 144

state 83

    (120) graphmove2 -> BACK . laRegla2
    (104) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 132

    laRegla2                       shift and go to state 145

state 84

    (121) graphmove2 -> ARC . laRegla
    (103) laRegla -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 135

    laRegla                        shift and go to state 146

state 85

    (25) function -> FUN functionI function2 inicia_fun . declara_vars function4 termina_fun
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (38) vars -> . type ID vars1 equals exp SEMICOLON
    (39) vars -> . type ID vars1 SEMICOLON
    (150) empty -> .
    (44) type -> . INT
    (45) type -> . FLOAT
    (46) type -> . CHAR

    IF              reduce using rule 150 (empty -> .)
    PRINT           reduce using rule 150 (empty -> .)
    READ            reduce using rule 150 (empty -> .)
    REPEAT          reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    RETURN          reduce using rule 150 (empty -> .)
    WHILE           reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    CIRCLE          reduce using rule 150 (empty -> .)
    SQUARE          reduce using rule 150 (empty -> .)
    TRIANGLE        reduce using rule 150 (empty -> .)
    RECTANGLE       reduce using rule 150 (empty -> .)
    HIDE_STAR       reduce using rule 150 (empty -> .)
    SHOW_STAR       reduce using rule 150 (empty -> .)
    HAND_DOWN       reduce using rule 150 (empty -> .)
    HAND_UP         reduce using rule 150 (empty -> .)
    SETXY           reduce using rule 150 (empty -> .)
    COLOR_STAR      reduce using rule 150 (empty -> .)
    SIZE_STAR       reduce using rule 150 (empty -> .)
    GO              reduce using rule 150 (empty -> .)
    LEFT            reduce using rule 150 (empty -> .)
    RIGHT           reduce using rule 150 (empty -> .)
    BACK            reduce using rule 150 (empty -> .)
    ARC             reduce using rule 150 (empty -> .)
    CLOSEBRACES     reduce using rule 150 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    declara_vars                   shift and go to state 147
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 86

    (28) inicia_fun -> OPENBRACES .

    INT             reduce using rule 28 (inicia_fun -> OPENBRACES .)
    FLOAT           reduce using rule 28 (inicia_fun -> OPENBRACES .)
    CHAR            reduce using rule 28 (inicia_fun -> OPENBRACES .)
    IF              reduce using rule 28 (inicia_fun -> OPENBRACES .)
    PRINT           reduce using rule 28 (inicia_fun -> OPENBRACES .)
    READ            reduce using rule 28 (inicia_fun -> OPENBRACES .)
    REPEAT          reduce using rule 28 (inicia_fun -> OPENBRACES .)
    ID              reduce using rule 28 (inicia_fun -> OPENBRACES .)
    RETURN          reduce using rule 28 (inicia_fun -> OPENBRACES .)
    WHILE           reduce using rule 28 (inicia_fun -> OPENBRACES .)
    FOR             reduce using rule 28 (inicia_fun -> OPENBRACES .)
    CIRCLE          reduce using rule 28 (inicia_fun -> OPENBRACES .)
    SQUARE          reduce using rule 28 (inicia_fun -> OPENBRACES .)
    TRIANGLE        reduce using rule 28 (inicia_fun -> OPENBRACES .)
    RECTANGLE       reduce using rule 28 (inicia_fun -> OPENBRACES .)
    HIDE_STAR       reduce using rule 28 (inicia_fun -> OPENBRACES .)
    SHOW_STAR       reduce using rule 28 (inicia_fun -> OPENBRACES .)
    HAND_DOWN       reduce using rule 28 (inicia_fun -> OPENBRACES .)
    HAND_UP         reduce using rule 28 (inicia_fun -> OPENBRACES .)
    SETXY           reduce using rule 28 (inicia_fun -> OPENBRACES .)
    COLOR_STAR      reduce using rule 28 (inicia_fun -> OPENBRACES .)
    SIZE_STAR       reduce using rule 28 (inicia_fun -> OPENBRACES .)
    GO              reduce using rule 28 (inicia_fun -> OPENBRACES .)
    LEFT            reduce using rule 28 (inicia_fun -> OPENBRACES .)
    RIGHT           reduce using rule 28 (inicia_fun -> OPENBRACES .)
    BACK            reduce using rule 28 (inicia_fun -> OPENBRACES .)
    ARC             reduce using rule 28 (inicia_fun -> OPENBRACES .)
    CLOSEBRACES     reduce using rule 28 (inicia_fun -> OPENBRACES .)


state 87

    (30) function2 -> OPENPAREN function3 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 148


state 88

    (31) function3 -> type . ID function5

    ID              shift and go to state 149


state 89

    (32) function3 -> empty .

    CLOSEPAREN      reduce using rule 32 (function3 -> empty .)


state 90

    (53) id -> ID .
    (98) funCall -> ID . OPENPAREN funCall2 CLOSEPAREN

  ! shift/reduce conflict for OPENPAREN resolved as shift
    OPENBRACKET     reduce using rule 53 (id -> ID .)
    MULTIPLICATION  reduce using rule 53 (id -> ID .)
    DIVISION        reduce using rule 53 (id -> ID .)
    ADDITION        reduce using rule 53 (id -> ID .)
    SUBSTRACTION    reduce using rule 53 (id -> ID .)
    SEMICOLON       reduce using rule 53 (id -> ID .)
    OPENBRACES      reduce using rule 53 (id -> ID .)
    COMMA           reduce using rule 53 (id -> ID .)
    GREATER         reduce using rule 53 (id -> ID .)
    LESS            reduce using rule 53 (id -> ID .)
    NOTEQUAL        reduce using rule 53 (id -> ID .)
    ISEQUAL         reduce using rule 53 (id -> ID .)
    CLOSEPAREN      reduce using rule 53 (id -> ID .)
    CLOSEBRACKET    reduce using rule 53 (id -> ID .)
    OR              reduce using rule 53 (id -> ID .)
    AND             reduce using rule 53 (id -> ID .)
    CTEINT          reduce using rule 53 (id -> ID .)
    CTEFLOAT        reduce using rule 53 (id -> ID .)
    CTECHAR         reduce using rule 53 (id -> ID .)
    ID              reduce using rule 53 (id -> ID .)
    OPENPAREN       shift and go to state 122

  ! OPENPAREN       [ reduce using rule 53 (id -> ID .) ]


state 91

    (38) vars -> type ID vars1 equals exp . SEMICOLON

    SEMICOLON       shift and go to state 150


state 92

    (134) exp -> term . exp1
    (135) exp1 -> . ADDITION exp
    (136) exp1 -> . SUBSTRACTION exp
    (137) exp1 -> . empty
    (150) empty -> .

  ! shift/reduce conflict for ADDITION resolved as shift
  ! shift/reduce conflict for SUBSTRACTION resolved as shift
    ADDITION        shift and go to state 152
    SUBSTRACTION    shift and go to state 153
    SEMICOLON       reduce using rule 150 (empty -> .)
    OPENBRACES      reduce using rule 150 (empty -> .)
    COMMA           reduce using rule 150 (empty -> .)
    GREATER         reduce using rule 150 (empty -> .)
    LESS            reduce using rule 150 (empty -> .)
    NOTEQUAL        reduce using rule 150 (empty -> .)
    ISEQUAL         reduce using rule 150 (empty -> .)
    CLOSEPAREN      reduce using rule 150 (empty -> .)
    CLOSEBRACKET    reduce using rule 150 (empty -> .)
    OR              reduce using rule 150 (empty -> .)
    AND             reduce using rule 150 (empty -> .)
    CTEINT          reduce using rule 150 (empty -> .)
    CTEFLOAT        reduce using rule 150 (empty -> .)
    CTECHAR         reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    OPENPAREN       reduce using rule 150 (empty -> .)

  ! ADDITION        [ reduce using rule 150 (empty -> .) ]
  ! SUBSTRACTION    [ reduce using rule 150 (empty -> .) ]

    exp1                           shift and go to state 151
    empty                          shift and go to state 154

state 93

    (146) term -> factor . term1
    (147) term1 -> . MULTIPLICATION term
    (148) term1 -> . DIVISION term
    (149) term1 -> . empty
    (150) empty -> .

    MULTIPLICATION  shift and go to state 156
    DIVISION        shift and go to state 157
    ADDITION        reduce using rule 150 (empty -> .)
    SUBSTRACTION    reduce using rule 150 (empty -> .)
    SEMICOLON       reduce using rule 150 (empty -> .)
    OPENBRACES      reduce using rule 150 (empty -> .)
    COMMA           reduce using rule 150 (empty -> .)
    GREATER         reduce using rule 150 (empty -> .)
    LESS            reduce using rule 150 (empty -> .)
    NOTEQUAL        reduce using rule 150 (empty -> .)
    ISEQUAL         reduce using rule 150 (empty -> .)
    CLOSEPAREN      reduce using rule 150 (empty -> .)
    CLOSEBRACKET    reduce using rule 150 (empty -> .)
    OR              reduce using rule 150 (empty -> .)
    AND             reduce using rule 150 (empty -> .)
    CTEINT          reduce using rule 150 (empty -> .)
    CTEFLOAT        reduce using rule 150 (empty -> .)
    CTECHAR         reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    OPENPAREN       reduce using rule 150 (empty -> .)

    term1                          shift and go to state 155
    empty                          shift and go to state 158

state 94

    (140) factor -> vcte .

    MULTIPLICATION  reduce using rule 140 (factor -> vcte .)
    DIVISION        reduce using rule 140 (factor -> vcte .)
    ADDITION        reduce using rule 140 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 140 (factor -> vcte .)
    SEMICOLON       reduce using rule 140 (factor -> vcte .)
    OPENBRACES      reduce using rule 140 (factor -> vcte .)
    COMMA           reduce using rule 140 (factor -> vcte .)
    GREATER         reduce using rule 140 (factor -> vcte .)
    LESS            reduce using rule 140 (factor -> vcte .)
    NOTEQUAL        reduce using rule 140 (factor -> vcte .)
    ISEQUAL         reduce using rule 140 (factor -> vcte .)
    CLOSEPAREN      reduce using rule 140 (factor -> vcte .)
    CLOSEBRACKET    reduce using rule 140 (factor -> vcte .)
    OR              reduce using rule 140 (factor -> vcte .)
    AND             reduce using rule 140 (factor -> vcte .)
    CTEINT          reduce using rule 140 (factor -> vcte .)
    CTEFLOAT        reduce using rule 140 (factor -> vcte .)
    CTECHAR         reduce using rule 140 (factor -> vcte .)
    ID              reduce using rule 140 (factor -> vcte .)
    OPENPAREN       reduce using rule 140 (factor -> vcte .)


state 95

    (141) factor -> factor1 .

    MULTIPLICATION  reduce using rule 141 (factor -> factor1 .)
    DIVISION        reduce using rule 141 (factor -> factor1 .)
    ADDITION        reduce using rule 141 (factor -> factor1 .)
    SUBSTRACTION    reduce using rule 141 (factor -> factor1 .)
    SEMICOLON       reduce using rule 141 (factor -> factor1 .)
    OPENBRACES      reduce using rule 141 (factor -> factor1 .)
    COMMA           reduce using rule 141 (factor -> factor1 .)
    GREATER         reduce using rule 141 (factor -> factor1 .)
    LESS            reduce using rule 141 (factor -> factor1 .)
    NOTEQUAL        reduce using rule 141 (factor -> factor1 .)
    ISEQUAL         reduce using rule 141 (factor -> factor1 .)
    CLOSEPAREN      reduce using rule 141 (factor -> factor1 .)
    CLOSEBRACKET    reduce using rule 141 (factor -> factor1 .)
    OR              reduce using rule 141 (factor -> factor1 .)
    AND             reduce using rule 141 (factor -> factor1 .)
    CTEINT          reduce using rule 141 (factor -> factor1 .)
    CTEFLOAT        reduce using rule 141 (factor -> factor1 .)
    CTECHAR         reduce using rule 141 (factor -> factor1 .)
    ID              reduce using rule 141 (factor -> factor1 .)
    OPENPAREN       reduce using rule 141 (factor -> factor1 .)


state 96

    (61) vcte -> cte_int .

    MULTIPLICATION  reduce using rule 61 (vcte -> cte_int .)
    DIVISION        reduce using rule 61 (vcte -> cte_int .)
    ADDITION        reduce using rule 61 (vcte -> cte_int .)
    SUBSTRACTION    reduce using rule 61 (vcte -> cte_int .)
    SEMICOLON       reduce using rule 61 (vcte -> cte_int .)
    OPENBRACES      reduce using rule 61 (vcte -> cte_int .)
    COMMA           reduce using rule 61 (vcte -> cte_int .)
    GREATER         reduce using rule 61 (vcte -> cte_int .)
    LESS            reduce using rule 61 (vcte -> cte_int .)
    NOTEQUAL        reduce using rule 61 (vcte -> cte_int .)
    ISEQUAL         reduce using rule 61 (vcte -> cte_int .)
    CLOSEPAREN      reduce using rule 61 (vcte -> cte_int .)
    CLOSEBRACKET    reduce using rule 61 (vcte -> cte_int .)
    OR              reduce using rule 61 (vcte -> cte_int .)
    AND             reduce using rule 61 (vcte -> cte_int .)
    CTEINT          reduce using rule 61 (vcte -> cte_int .)
    CTEFLOAT        reduce using rule 61 (vcte -> cte_int .)
    CTECHAR         reduce using rule 61 (vcte -> cte_int .)
    ID              reduce using rule 61 (vcte -> cte_int .)
    OPENPAREN       reduce using rule 61 (vcte -> cte_int .)


state 97

    (62) vcte -> cte_float .

    MULTIPLICATION  reduce using rule 62 (vcte -> cte_float .)
    DIVISION        reduce using rule 62 (vcte -> cte_float .)
    ADDITION        reduce using rule 62 (vcte -> cte_float .)
    SUBSTRACTION    reduce using rule 62 (vcte -> cte_float .)
    SEMICOLON       reduce using rule 62 (vcte -> cte_float .)
    OPENBRACES      reduce using rule 62 (vcte -> cte_float .)
    COMMA           reduce using rule 62 (vcte -> cte_float .)
    GREATER         reduce using rule 62 (vcte -> cte_float .)
    LESS            reduce using rule 62 (vcte -> cte_float .)
    NOTEQUAL        reduce using rule 62 (vcte -> cte_float .)
    ISEQUAL         reduce using rule 62 (vcte -> cte_float .)
    CLOSEPAREN      reduce using rule 62 (vcte -> cte_float .)
    CLOSEBRACKET    reduce using rule 62 (vcte -> cte_float .)
    OR              reduce using rule 62 (vcte -> cte_float .)
    AND             reduce using rule 62 (vcte -> cte_float .)
    CTEINT          reduce using rule 62 (vcte -> cte_float .)
    CTEFLOAT        reduce using rule 62 (vcte -> cte_float .)
    CTECHAR         reduce using rule 62 (vcte -> cte_float .)
    ID              reduce using rule 62 (vcte -> cte_float .)
    OPENPAREN       reduce using rule 62 (vcte -> cte_float .)


state 98

    (63) vcte -> cte_char .

    MULTIPLICATION  reduce using rule 63 (vcte -> cte_char .)
    DIVISION        reduce using rule 63 (vcte -> cte_char .)
    ADDITION        reduce using rule 63 (vcte -> cte_char .)
    SUBSTRACTION    reduce using rule 63 (vcte -> cte_char .)
    SEMICOLON       reduce using rule 63 (vcte -> cte_char .)
    OPENBRACES      reduce using rule 63 (vcte -> cte_char .)
    COMMA           reduce using rule 63 (vcte -> cte_char .)
    GREATER         reduce using rule 63 (vcte -> cte_char .)
    LESS            reduce using rule 63 (vcte -> cte_char .)
    NOTEQUAL        reduce using rule 63 (vcte -> cte_char .)
    ISEQUAL         reduce using rule 63 (vcte -> cte_char .)
    CLOSEPAREN      reduce using rule 63 (vcte -> cte_char .)
    CLOSEBRACKET    reduce using rule 63 (vcte -> cte_char .)
    OR              reduce using rule 63 (vcte -> cte_char .)
    AND             reduce using rule 63 (vcte -> cte_char .)
    CTEINT          reduce using rule 63 (vcte -> cte_char .)
    CTEFLOAT        reduce using rule 63 (vcte -> cte_char .)
    CTECHAR         reduce using rule 63 (vcte -> cte_char .)
    ID              reduce using rule 63 (vcte -> cte_char .)
    OPENPAREN       reduce using rule 63 (vcte -> cte_char .)


state 99

    (64) vcte -> id . vcte1
    (66) vcte1 -> . OPENBRACKET exp CLOSEBRACKET vcte3
    (67) vcte1 -> . empty
    (150) empty -> .

    OPENBRACKET     shift and go to state 160
    MULTIPLICATION  reduce using rule 150 (empty -> .)
    DIVISION        reduce using rule 150 (empty -> .)
    ADDITION        reduce using rule 150 (empty -> .)
    SUBSTRACTION    reduce using rule 150 (empty -> .)
    SEMICOLON       reduce using rule 150 (empty -> .)
    OPENBRACES      reduce using rule 150 (empty -> .)
    COMMA           reduce using rule 150 (empty -> .)
    GREATER         reduce using rule 150 (empty -> .)
    LESS            reduce using rule 150 (empty -> .)
    NOTEQUAL        reduce using rule 150 (empty -> .)
    ISEQUAL         reduce using rule 150 (empty -> .)
    CLOSEPAREN      reduce using rule 150 (empty -> .)
    CLOSEBRACKET    reduce using rule 150 (empty -> .)
    OR              reduce using rule 150 (empty -> .)
    AND             reduce using rule 150 (empty -> .)
    CTEINT          reduce using rule 150 (empty -> .)
    CTEFLOAT        reduce using rule 150 (empty -> .)
    CTECHAR         reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    OPENPAREN       reduce using rule 150 (empty -> .)

    vcte1                          shift and go to state 159
    empty                          shift and go to state 161

state 100

    (65) vcte -> funCall .

    MULTIPLICATION  reduce using rule 65 (vcte -> funCall .)
    DIVISION        reduce using rule 65 (vcte -> funCall .)
    ADDITION        reduce using rule 65 (vcte -> funCall .)
    SUBSTRACTION    reduce using rule 65 (vcte -> funCall .)
    SEMICOLON       reduce using rule 65 (vcte -> funCall .)
    OPENBRACES      reduce using rule 65 (vcte -> funCall .)
    COMMA           reduce using rule 65 (vcte -> funCall .)
    GREATER         reduce using rule 65 (vcte -> funCall .)
    LESS            reduce using rule 65 (vcte -> funCall .)
    NOTEQUAL        reduce using rule 65 (vcte -> funCall .)
    ISEQUAL         reduce using rule 65 (vcte -> funCall .)
    CLOSEPAREN      reduce using rule 65 (vcte -> funCall .)
    CLOSEBRACKET    reduce using rule 65 (vcte -> funCall .)
    OR              reduce using rule 65 (vcte -> funCall .)
    AND             reduce using rule 65 (vcte -> funCall .)
    CTEINT          reduce using rule 65 (vcte -> funCall .)
    CTEFLOAT        reduce using rule 65 (vcte -> funCall .)
    CTECHAR         reduce using rule 65 (vcte -> funCall .)
    ID              reduce using rule 65 (vcte -> funCall .)
    OPENPAREN       reduce using rule 65 (vcte -> funCall .)


state 101

    (142) factor1 -> factor2 . vcte
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN

    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90

    vcte                           shift and go to state 162
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100

state 102

    (143) factor1 -> openP . expression closeP
    (76) expression -> . exp expression1
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    openP                          shift and go to state 102
    expression                     shift and go to state 163
    exp                            shift and go to state 164
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101

state 103

    (70) cte_int -> CTEINT .

    MULTIPLICATION  reduce using rule 70 (cte_int -> CTEINT .)
    DIVISION        reduce using rule 70 (cte_int -> CTEINT .)
    ADDITION        reduce using rule 70 (cte_int -> CTEINT .)
    SUBSTRACTION    reduce using rule 70 (cte_int -> CTEINT .)
    SEMICOLON       reduce using rule 70 (cte_int -> CTEINT .)
    OPENBRACES      reduce using rule 70 (cte_int -> CTEINT .)
    COMMA           reduce using rule 70 (cte_int -> CTEINT .)
    GREATER         reduce using rule 70 (cte_int -> CTEINT .)
    LESS            reduce using rule 70 (cte_int -> CTEINT .)
    NOTEQUAL        reduce using rule 70 (cte_int -> CTEINT .)
    ISEQUAL         reduce using rule 70 (cte_int -> CTEINT .)
    CLOSEPAREN      reduce using rule 70 (cte_int -> CTEINT .)
    CLOSEBRACKET    reduce using rule 70 (cte_int -> CTEINT .)
    OR              reduce using rule 70 (cte_int -> CTEINT .)
    AND             reduce using rule 70 (cte_int -> CTEINT .)
    CTEINT          reduce using rule 70 (cte_int -> CTEINT .)
    CTEFLOAT        reduce using rule 70 (cte_int -> CTEINT .)
    CTECHAR         reduce using rule 70 (cte_int -> CTEINT .)
    ID              reduce using rule 70 (cte_int -> CTEINT .)
    OPENPAREN       reduce using rule 70 (cte_int -> CTEINT .)


state 104

    (71) cte_float -> CTEFLOAT .

    MULTIPLICATION  reduce using rule 71 (cte_float -> CTEFLOAT .)
    DIVISION        reduce using rule 71 (cte_float -> CTEFLOAT .)
    ADDITION        reduce using rule 71 (cte_float -> CTEFLOAT .)
    SUBSTRACTION    reduce using rule 71 (cte_float -> CTEFLOAT .)
    SEMICOLON       reduce using rule 71 (cte_float -> CTEFLOAT .)
    OPENBRACES      reduce using rule 71 (cte_float -> CTEFLOAT .)
    COMMA           reduce using rule 71 (cte_float -> CTEFLOAT .)
    GREATER         reduce using rule 71 (cte_float -> CTEFLOAT .)
    LESS            reduce using rule 71 (cte_float -> CTEFLOAT .)
    NOTEQUAL        reduce using rule 71 (cte_float -> CTEFLOAT .)
    ISEQUAL         reduce using rule 71 (cte_float -> CTEFLOAT .)
    CLOSEPAREN      reduce using rule 71 (cte_float -> CTEFLOAT .)
    CLOSEBRACKET    reduce using rule 71 (cte_float -> CTEFLOAT .)
    OR              reduce using rule 71 (cte_float -> CTEFLOAT .)
    AND             reduce using rule 71 (cte_float -> CTEFLOAT .)
    CTEINT          reduce using rule 71 (cte_float -> CTEFLOAT .)
    CTEFLOAT        reduce using rule 71 (cte_float -> CTEFLOAT .)
    CTECHAR         reduce using rule 71 (cte_float -> CTEFLOAT .)
    ID              reduce using rule 71 (cte_float -> CTEFLOAT .)
    OPENPAREN       reduce using rule 71 (cte_float -> CTEFLOAT .)


state 105

    (72) cte_char -> CTECHAR .

    MULTIPLICATION  reduce using rule 72 (cte_char -> CTECHAR .)
    DIVISION        reduce using rule 72 (cte_char -> CTECHAR .)
    ADDITION        reduce using rule 72 (cte_char -> CTECHAR .)
    SUBSTRACTION    reduce using rule 72 (cte_char -> CTECHAR .)
    SEMICOLON       reduce using rule 72 (cte_char -> CTECHAR .)
    OPENBRACES      reduce using rule 72 (cte_char -> CTECHAR .)
    COMMA           reduce using rule 72 (cte_char -> CTECHAR .)
    GREATER         reduce using rule 72 (cte_char -> CTECHAR .)
    LESS            reduce using rule 72 (cte_char -> CTECHAR .)
    NOTEQUAL        reduce using rule 72 (cte_char -> CTECHAR .)
    ISEQUAL         reduce using rule 72 (cte_char -> CTECHAR .)
    CLOSEPAREN      reduce using rule 72 (cte_char -> CTECHAR .)
    CLOSEBRACKET    reduce using rule 72 (cte_char -> CTECHAR .)
    OR              reduce using rule 72 (cte_char -> CTECHAR .)
    AND             reduce using rule 72 (cte_char -> CTECHAR .)
    CTEINT          reduce using rule 72 (cte_char -> CTECHAR .)
    CTEFLOAT        reduce using rule 72 (cte_char -> CTECHAR .)
    CTECHAR         reduce using rule 72 (cte_char -> CTECHAR .)
    ID              reduce using rule 72 (cte_char -> CTECHAR .)
    OPENPAREN       reduce using rule 72 (cte_char -> CTECHAR .)


state 106

    (138) openP -> OPENPAREN .

    CTEINT          reduce using rule 138 (openP -> OPENPAREN .)
    CTEFLOAT        reduce using rule 138 (openP -> OPENPAREN .)
    CTECHAR         reduce using rule 138 (openP -> OPENPAREN .)
    ID              reduce using rule 138 (openP -> OPENPAREN .)
    ADDITION        reduce using rule 138 (openP -> OPENPAREN .)
    SUBSTRACTION    reduce using rule 138 (openP -> OPENPAREN .)
    OPENPAREN       reduce using rule 138 (openP -> OPENPAREN .)


state 107

    (144) factor2 -> ADDITION .

    CTEINT          reduce using rule 144 (factor2 -> ADDITION .)
    CTEFLOAT        reduce using rule 144 (factor2 -> ADDITION .)
    CTECHAR         reduce using rule 144 (factor2 -> ADDITION .)
    ID              reduce using rule 144 (factor2 -> ADDITION .)


state 108

    (145) factor2 -> SUBSTRACTION .

    CTEINT          reduce using rule 145 (factor2 -> SUBSTRACTION .)
    CTEFLOAT        reduce using rule 145 (factor2 -> SUBSTRACTION .)
    CTECHAR         reduce using rule 145 (factor2 -> SUBSTRACTION .)
    ID              reduce using rule 145 (factor2 -> SUBSTRACTION .)


state 109

    (40) vars1 -> OPENBRACKET CTEINT CLOSEBRACKET . vars3
    (42) vars3 -> . OPENBRACKET CTEINT CLOSEBRACKET
    (43) vars3 -> . empty
    (150) empty -> .

    OPENBRACKET     shift and go to state 165
    SEMICOLON       reduce using rule 150 (empty -> .)
    EQUALS          reduce using rule 150 (empty -> .)

    vars3                          shift and go to state 166
    empty                          shift and go to state 167

state 110

    (6) star -> starI declara_vars star1 CLOSEBRACES .

    $end            reduce using rule 6 (star -> starI declara_vars star1 CLOSEBRACES .)


state 111

    (8) star1 -> stmt star1 .

    CLOSEBRACES     reduce using rule 8 (star1 -> stmt star1 .)


state 112

    (21) stmt -> funCall SEMICOLON .

    IF              reduce using rule 21 (stmt -> funCall SEMICOLON .)
    PRINT           reduce using rule 21 (stmt -> funCall SEMICOLON .)
    READ            reduce using rule 21 (stmt -> funCall SEMICOLON .)
    REPEAT          reduce using rule 21 (stmt -> funCall SEMICOLON .)
    ID              reduce using rule 21 (stmt -> funCall SEMICOLON .)
    RETURN          reduce using rule 21 (stmt -> funCall SEMICOLON .)
    WHILE           reduce using rule 21 (stmt -> funCall SEMICOLON .)
    FOR             reduce using rule 21 (stmt -> funCall SEMICOLON .)
    CIRCLE          reduce using rule 21 (stmt -> funCall SEMICOLON .)
    SQUARE          reduce using rule 21 (stmt -> funCall SEMICOLON .)
    TRIANGLE        reduce using rule 21 (stmt -> funCall SEMICOLON .)
    RECTANGLE       reduce using rule 21 (stmt -> funCall SEMICOLON .)
    HIDE_STAR       reduce using rule 21 (stmt -> funCall SEMICOLON .)
    SHOW_STAR       reduce using rule 21 (stmt -> funCall SEMICOLON .)
    HAND_DOWN       reduce using rule 21 (stmt -> funCall SEMICOLON .)
    HAND_UP         reduce using rule 21 (stmt -> funCall SEMICOLON .)
    SETXY           reduce using rule 21 (stmt -> funCall SEMICOLON .)
    COLOR_STAR      reduce using rule 21 (stmt -> funCall SEMICOLON .)
    SIZE_STAR       reduce using rule 21 (stmt -> funCall SEMICOLON .)
    GO              reduce using rule 21 (stmt -> funCall SEMICOLON .)
    LEFT            reduce using rule 21 (stmt -> funCall SEMICOLON .)
    RIGHT           reduce using rule 21 (stmt -> funCall SEMICOLON .)
    BACK            reduce using rule 21 (stmt -> funCall SEMICOLON .)
    ARC             reduce using rule 21 (stmt -> funCall SEMICOLON .)
    CLOSEBRACES     reduce using rule 21 (stmt -> funCall SEMICOLON .)


state 113

    (54) assignment -> id assignment1 . equals assignment3 SEMICOLON
    (52) equals -> . EQUALS

    EQUALS          shift and go to state 36

    equals                         shift and go to state 168

state 114

    (55) assignment1 -> assignment2 .
    (56) assignment1 -> assignment2 . assignment1
    (55) assignment1 -> . assignment2
    (56) assignment1 -> . assignment2 assignment1
    (57) assignment1 -> . empty
    (58) assignment2 -> . OPENBRACKET exp CLOSEBRACKET
    (150) empty -> .

  ! reduce/reduce conflict for EQUALS resolved using rule 55 (assignment1 -> assignment2 .)
    EQUALS          reduce using rule 55 (assignment1 -> assignment2 .)
    OPENBRACKET     shift and go to state 116

  ! EQUALS          [ reduce using rule 150 (empty -> .) ]

    assignment2                    shift and go to state 114
    assignment1                    shift and go to state 169
    empty                          shift and go to state 115

state 115

    (57) assignment1 -> empty .

    EQUALS          reduce using rule 57 (assignment1 -> empty .)


state 116

    (58) assignment2 -> OPENBRACKET . exp CLOSEBRACKET
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    exp                            shift and go to state 170
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 117

    (86) condition -> IF head . body condition1
    (93) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 172

    body                           shift and go to state 171

state 118

    (90) head -> OPENPAREN . head1 CLOSEPAREN
    (91) head1 -> . expression
    (92) head1 -> . logical
    (76) expression -> . exp expression1
    (83) logical -> . expression logical1 expression
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    head1                          shift and go to state 173
    expression                     shift and go to state 174
    logical                        shift and go to state 175
    exp                            shift and go to state 164
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 119

    (47) print -> PRINT OPENPAREN . expression CLOSEPAREN SEMICOLON
    (76) expression -> . exp expression1
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    expression                     shift and go to state 176
    exp                            shift and go to state 164
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 120

    (48) read -> READ OPENPAREN . id read1 CLOSEPAREN SEMICOLON
    (53) id -> . ID

    ID              shift and go to state 178

    id                             shift and go to state 177

state 121

    (122) graphr -> REPEAT exp . OPENBRACES graphstmt graphr1 CLOSEBRACES

    OPENBRACES      shift and go to state 179


state 122

    (98) funCall -> ID OPENPAREN . funCall2 CLOSEPAREN
    (99) funCall2 -> . exp funCall3
    (100) funCall2 -> . empty
    (134) exp -> . term exp1
    (150) empty -> .
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CLOSEPAREN      reduce using rule 150 (empty -> .)
    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    funCall2                       shift and go to state 180
    exp                            shift and go to state 181
    empty                          shift and go to state 182
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 123

    (73) return -> RETURN return1 . SEMICOLON

    SEMICOLON       shift and go to state 183


state 124

    (74) return1 -> vcte .
    (140) factor -> vcte .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 74 (return1 -> vcte .)
    SEMICOLON       reduce using rule 74 (return1 -> vcte .)
    MULTIPLICATION  reduce using rule 140 (factor -> vcte .)
    DIVISION        reduce using rule 140 (factor -> vcte .)
    ADDITION        reduce using rule 140 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 140 (factor -> vcte .)

  ! SEMICOLON       [ reduce using rule 140 (factor -> vcte .) ]


state 125

    (75) return1 -> exp .

    SEMICOLON       reduce using rule 75 (return1 -> exp .)


state 126

    (97) while -> WHILE head . body
    (93) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 172

    body                           shift and go to state 184

state 127

    (96) for -> FOR OPENPAREN . ID TWODOTS exp CLOSEPAREN body

    ID              shift and go to state 185


state 128

    (108) graphfig -> graphfig1 SEMICOLON .

    IF              reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)
    PRINT           reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)
    READ            reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)
    REPEAT          reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)
    ID              reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)
    RETURN          reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)
    WHILE           reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)
    FOR             reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)
    CIRCLE          reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)
    SQUARE          reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)
    TRIANGLE        reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)
    RECTANGLE       reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)
    HIDE_STAR       reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)
    SHOW_STAR       reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)
    HAND_DOWN       reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)
    HAND_UP         reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)
    SETXY           reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)
    COLOR_STAR      reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)
    SIZE_STAR       reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)
    GO              reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)
    LEFT            reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)
    RIGHT           reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)
    BACK            reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)
    ARC             reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 108 (graphfig -> graphfig1 SEMICOLON .)


state 129

    (125) graphview -> graphview1 SEMICOLON .

    IF              reduce using rule 125 (graphview -> graphview1 SEMICOLON .)
    PRINT           reduce using rule 125 (graphview -> graphview1 SEMICOLON .)
    READ            reduce using rule 125 (graphview -> graphview1 SEMICOLON .)
    REPEAT          reduce using rule 125 (graphview -> graphview1 SEMICOLON .)
    ID              reduce using rule 125 (graphview -> graphview1 SEMICOLON .)
    RETURN          reduce using rule 125 (graphview -> graphview1 SEMICOLON .)
    WHILE           reduce using rule 125 (graphview -> graphview1 SEMICOLON .)
    FOR             reduce using rule 125 (graphview -> graphview1 SEMICOLON .)
    CIRCLE          reduce using rule 125 (graphview -> graphview1 SEMICOLON .)
    SQUARE          reduce using rule 125 (graphview -> graphview1 SEMICOLON .)
    TRIANGLE        reduce using rule 125 (graphview -> graphview1 SEMICOLON .)
    RECTANGLE       reduce using rule 125 (graphview -> graphview1 SEMICOLON .)
    HIDE_STAR       reduce using rule 125 (graphview -> graphview1 SEMICOLON .)
    SHOW_STAR       reduce using rule 125 (graphview -> graphview1 SEMICOLON .)
    HAND_DOWN       reduce using rule 125 (graphview -> graphview1 SEMICOLON .)
    HAND_UP         reduce using rule 125 (graphview -> graphview1 SEMICOLON .)
    SETXY           reduce using rule 125 (graphview -> graphview1 SEMICOLON .)
    COLOR_STAR      reduce using rule 125 (graphview -> graphview1 SEMICOLON .)
    SIZE_STAR       reduce using rule 125 (graphview -> graphview1 SEMICOLON .)
    GO              reduce using rule 125 (graphview -> graphview1 SEMICOLON .)
    LEFT            reduce using rule 125 (graphview -> graphview1 SEMICOLON .)
    RIGHT           reduce using rule 125 (graphview -> graphview1 SEMICOLON .)
    BACK            reduce using rule 125 (graphview -> graphview1 SEMICOLON .)
    ARC             reduce using rule 125 (graphview -> graphview1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 125 (graphview -> graphview1 SEMICOLON .)


state 130

    (113) graphmove -> graphmove1 SEMICOLON .

    IF              reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)
    PRINT           reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)
    READ            reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)
    REPEAT          reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)
    ID              reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)
    RETURN          reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)
    WHILE           reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)
    FOR             reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)
    CIRCLE          reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)
    SQUARE          reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)
    TRIANGLE        reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)
    RECTANGLE       reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)
    HIDE_STAR       reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)
    SHOW_STAR       reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)
    HAND_DOWN       reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)
    HAND_UP         reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)
    SETXY           reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)
    COLOR_STAR      reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)
    SIZE_STAR       reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)
    GO              reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)
    LEFT            reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)
    RIGHT           reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)
    BACK            reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)
    ARC             reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 113 (graphmove -> graphmove1 SEMICOLON .)


state 131

    (109) graphfig1 -> CIRCLE laRegla2 .

    SEMICOLON       reduce using rule 109 (graphfig1 -> CIRCLE laRegla2 .)


state 132

    (104) laRegla2 -> OPENPAREN . exp CLOSEPAREN
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    exp                            shift and go to state 186
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 133

    (110) graphfig1 -> SQUARE laRegla2 .

    SEMICOLON       reduce using rule 110 (graphfig1 -> SQUARE laRegla2 .)


state 134

    (111) graphfig1 -> TRIANGLE laRegla .

    SEMICOLON       reduce using rule 111 (graphfig1 -> TRIANGLE laRegla .)


state 135

    (103) laRegla -> OPENPAREN . exp COMMA exp CLOSEPAREN
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    exp                            shift and go to state 187
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 136

    (112) graphfig1 -> RECTANGLE laRegla .

    SEMICOLON       reduce using rule 112 (graphfig1 -> RECTANGLE laRegla .)


state 137

    (128) graphview1 -> graphview2 exp .

    SEMICOLON       reduce using rule 128 (graphview1 -> graphview2 exp .)


state 138

    (129) graphview2 -> SETXY graphview3 .

    CTEINT          reduce using rule 129 (graphview2 -> SETXY graphview3 .)
    CTEFLOAT        reduce using rule 129 (graphview2 -> SETXY graphview3 .)
    CTECHAR         reduce using rule 129 (graphview2 -> SETXY graphview3 .)
    ID              reduce using rule 129 (graphview2 -> SETXY graphview3 .)
    ADDITION        reduce using rule 129 (graphview2 -> SETXY graphview3 .)
    SUBSTRACTION    reduce using rule 129 (graphview2 -> SETXY graphview3 .)
    OPENPAREN       reduce using rule 129 (graphview2 -> SETXY graphview3 .)


state 139

    (132) graphview3 -> exp . COMMA

    COMMA           shift and go to state 188


state 140

    (133) graphview3 -> laRegla .

    CTEINT          reduce using rule 133 (graphview3 -> laRegla .)
    CTEFLOAT        reduce using rule 133 (graphview3 -> laRegla .)
    CTECHAR         reduce using rule 133 (graphview3 -> laRegla .)
    ID              reduce using rule 133 (graphview3 -> laRegla .)
    ADDITION        reduce using rule 133 (graphview3 -> laRegla .)
    SUBSTRACTION    reduce using rule 133 (graphview3 -> laRegla .)
    OPENPAREN       reduce using rule 133 (graphview3 -> laRegla .)


state 141

    (103) laRegla -> OPENPAREN . exp COMMA exp CLOSEPAREN
    (138) openP -> OPENPAREN .
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

  ! shift/reduce conflict for CTEINT resolved as shift
  ! shift/reduce conflict for CTEFLOAT resolved as shift
  ! shift/reduce conflict for CTECHAR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ADDITION resolved as shift
  ! shift/reduce conflict for SUBSTRACTION resolved as shift
  ! shift/reduce conflict for OPENPAREN resolved as shift
    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

  ! CTEINT          [ reduce using rule 138 (openP -> OPENPAREN .) ]
  ! CTEFLOAT        [ reduce using rule 138 (openP -> OPENPAREN .) ]
  ! CTECHAR         [ reduce using rule 138 (openP -> OPENPAREN .) ]
  ! ID              [ reduce using rule 138 (openP -> OPENPAREN .) ]
  ! ADDITION        [ reduce using rule 138 (openP -> OPENPAREN .) ]
  ! SUBSTRACTION    [ reduce using rule 138 (openP -> OPENPAREN .) ]
  ! OPENPAREN       [ reduce using rule 138 (openP -> OPENPAREN .) ]

    exp                            shift and go to state 187
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 142

    (117) graphmove2 -> GO laRegla2 .

    SEMICOLON       reduce using rule 117 (graphmove2 -> GO laRegla2 .)


state 143

    (118) graphmove2 -> LEFT laRegla2 .

    SEMICOLON       reduce using rule 118 (graphmove2 -> LEFT laRegla2 .)


state 144

    (119) graphmove2 -> RIGHT laRegla2 .

    SEMICOLON       reduce using rule 119 (graphmove2 -> RIGHT laRegla2 .)


state 145

    (120) graphmove2 -> BACK laRegla2 .

    SEMICOLON       reduce using rule 120 (graphmove2 -> BACK laRegla2 .)


state 146

    (121) graphmove2 -> ARC laRegla .

    SEMICOLON       reduce using rule 121 (graphmove2 -> ARC laRegla .)


state 147

    (25) function -> FUN functionI function2 inicia_fun declara_vars . function4 termina_fun
    (33) function4 -> . stmt function4
    (34) function4 -> . empty
    (14) stmt -> . assignment
    (15) stmt -> . condition
    (16) stmt -> . print
    (17) stmt -> . loop
    (18) stmt -> . read
    (19) stmt -> . graphstmt
    (20) stmt -> . graphr
    (21) stmt -> . funCall SEMICOLON
    (22) stmt -> . return
    (150) empty -> .
    (54) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (86) condition -> . IF head body condition1
    (47) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (12) loop -> . while
    (13) loop -> . for
    (48) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (105) graphstmt -> . graphfig
    (106) graphstmt -> . graphview
    (107) graphstmt -> . graphmove
    (122) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (73) return -> . RETURN return1 SEMICOLON
    (53) id -> . ID
    (97) while -> . WHILE head body
    (96) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (108) graphfig -> . graphfig1 SEMICOLON
    (125) graphview -> . graphview1 SEMICOLON
    (113) graphmove -> . graphmove1 SEMICOLON
    (109) graphfig1 -> . CIRCLE laRegla2
    (110) graphfig1 -> . SQUARE laRegla2
    (111) graphfig1 -> . TRIANGLE laRegla
    (112) graphfig1 -> . RECTANGLE laRegla
    (126) graphview1 -> . HIDE_STAR
    (127) graphview1 -> . SHOW_STAR
    (128) graphview1 -> . graphview2 exp
    (114) graphmove1 -> . HAND_DOWN
    (115) graphmove1 -> . HAND_UP
    (116) graphmove1 -> . graphmove2
    (129) graphview2 -> . SETXY graphview3
    (130) graphview2 -> . COLOR_STAR
    (131) graphview2 -> . SIZE_STAR
    (117) graphmove2 -> . GO laRegla2
    (118) graphmove2 -> . LEFT laRegla2
    (119) graphmove2 -> . RIGHT laRegla2
    (120) graphmove2 -> . BACK laRegla2
    (121) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 150 (empty -> .)
    IF              shift and go to state 51
    PRINT           shift and go to state 52
    READ            shift and go to state 55
    REPEAT          shift and go to state 59
    ID              shift and go to state 60
    RETURN          shift and go to state 61
    WHILE           shift and go to state 62
    FOR             shift and go to state 63
    CIRCLE          shift and go to state 67
    SQUARE          shift and go to state 68
    TRIANGLE        shift and go to state 69
    RECTANGLE       shift and go to state 70
    HIDE_STAR       shift and go to state 71
    SHOW_STAR       shift and go to state 72
    HAND_DOWN       shift and go to state 74
    HAND_UP         shift and go to state 75
    SETXY           shift and go to state 77
    COLOR_STAR      shift and go to state 78
    SIZE_STAR       shift and go to state 79
    GO              shift and go to state 80
    LEFT            shift and go to state 81
    RIGHT           shift and go to state 82
    BACK            shift and go to state 83
    ARC             shift and go to state 84

    function4                      shift and go to state 189
    stmt                           shift and go to state 190
    empty                          shift and go to state 191
    assignment                     shift and go to state 41
    condition                      shift and go to state 42
    print                          shift and go to state 43
    loop                           shift and go to state 44
    read                           shift and go to state 45
    graphstmt                      shift and go to state 46
    graphr                         shift and go to state 47
    funCall                        shift and go to state 48
    return                         shift and go to state 49
    id                             shift and go to state 50
    while                          shift and go to state 53
    for                            shift and go to state 54
    graphfig                       shift and go to state 56
    graphview                      shift and go to state 57
    graphmove                      shift and go to state 58
    graphfig1                      shift and go to state 64
    graphview1                     shift and go to state 65
    graphmove1                     shift and go to state 66
    graphview2                     shift and go to state 73
    graphmove2                     shift and go to state 76

state 148

    (30) function2 -> OPENPAREN function3 CLOSEPAREN .

    OPENBRACES      reduce using rule 30 (function2 -> OPENPAREN function3 CLOSEPAREN .)


state 149

    (31) function3 -> type ID . function5
    (35) function5 -> . COMMA type ID function3

    COMMA           shift and go to state 193

    function5                      shift and go to state 192

state 150

    (38) vars -> type ID vars1 equals exp SEMICOLON .

    INT             reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    FLOAT           reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    CHAR            reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    FUN             reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    MULTIPLICATION  reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    IF              reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    PRINT           reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    READ            reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    REPEAT          reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    ID              reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    RETURN          reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    WHILE           reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    FOR             reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    CIRCLE          reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    SQUARE          reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    TRIANGLE        reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    RECTANGLE       reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    HIDE_STAR       reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    SHOW_STAR       reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    HAND_DOWN       reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    HAND_UP         reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    SETXY           reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    COLOR_STAR      reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    SIZE_STAR       reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    GO              reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    LEFT            reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    RIGHT           reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    BACK            reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    ARC             reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)
    CLOSEBRACES     reduce using rule 38 (vars -> type ID vars1 equals exp SEMICOLON .)


state 151

    (134) exp -> term exp1 .

    SEMICOLON       reduce using rule 134 (exp -> term exp1 .)
    OPENBRACES      reduce using rule 134 (exp -> term exp1 .)
    COMMA           reduce using rule 134 (exp -> term exp1 .)
    GREATER         reduce using rule 134 (exp -> term exp1 .)
    LESS            reduce using rule 134 (exp -> term exp1 .)
    NOTEQUAL        reduce using rule 134 (exp -> term exp1 .)
    ISEQUAL         reduce using rule 134 (exp -> term exp1 .)
    CLOSEPAREN      reduce using rule 134 (exp -> term exp1 .)
    CLOSEBRACKET    reduce using rule 134 (exp -> term exp1 .)
    OR              reduce using rule 134 (exp -> term exp1 .)
    AND             reduce using rule 134 (exp -> term exp1 .)
    CTEINT          reduce using rule 134 (exp -> term exp1 .)
    CTEFLOAT        reduce using rule 134 (exp -> term exp1 .)
    CTECHAR         reduce using rule 134 (exp -> term exp1 .)
    ID              reduce using rule 134 (exp -> term exp1 .)
    ADDITION        reduce using rule 134 (exp -> term exp1 .)
    SUBSTRACTION    reduce using rule 134 (exp -> term exp1 .)
    OPENPAREN       reduce using rule 134 (exp -> term exp1 .)


state 152

    (135) exp1 -> ADDITION . exp
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    exp                            shift and go to state 194
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 153

    (136) exp1 -> SUBSTRACTION . exp
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    exp                            shift and go to state 195
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 154

    (137) exp1 -> empty .

    SEMICOLON       reduce using rule 137 (exp1 -> empty .)
    OPENBRACES      reduce using rule 137 (exp1 -> empty .)
    COMMA           reduce using rule 137 (exp1 -> empty .)
    GREATER         reduce using rule 137 (exp1 -> empty .)
    LESS            reduce using rule 137 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 137 (exp1 -> empty .)
    ISEQUAL         reduce using rule 137 (exp1 -> empty .)
    CLOSEPAREN      reduce using rule 137 (exp1 -> empty .)
    CLOSEBRACKET    reduce using rule 137 (exp1 -> empty .)
    OR              reduce using rule 137 (exp1 -> empty .)
    AND             reduce using rule 137 (exp1 -> empty .)
    CTEINT          reduce using rule 137 (exp1 -> empty .)
    CTEFLOAT        reduce using rule 137 (exp1 -> empty .)
    CTECHAR         reduce using rule 137 (exp1 -> empty .)
    ID              reduce using rule 137 (exp1 -> empty .)
    ADDITION        reduce using rule 137 (exp1 -> empty .)
    SUBSTRACTION    reduce using rule 137 (exp1 -> empty .)
    OPENPAREN       reduce using rule 137 (exp1 -> empty .)


state 155

    (146) term -> factor term1 .

    ADDITION        reduce using rule 146 (term -> factor term1 .)
    SUBSTRACTION    reduce using rule 146 (term -> factor term1 .)
    SEMICOLON       reduce using rule 146 (term -> factor term1 .)
    OPENBRACES      reduce using rule 146 (term -> factor term1 .)
    COMMA           reduce using rule 146 (term -> factor term1 .)
    GREATER         reduce using rule 146 (term -> factor term1 .)
    LESS            reduce using rule 146 (term -> factor term1 .)
    NOTEQUAL        reduce using rule 146 (term -> factor term1 .)
    ISEQUAL         reduce using rule 146 (term -> factor term1 .)
    CLOSEPAREN      reduce using rule 146 (term -> factor term1 .)
    CLOSEBRACKET    reduce using rule 146 (term -> factor term1 .)
    OR              reduce using rule 146 (term -> factor term1 .)
    AND             reduce using rule 146 (term -> factor term1 .)
    CTEINT          reduce using rule 146 (term -> factor term1 .)
    CTEFLOAT        reduce using rule 146 (term -> factor term1 .)
    CTECHAR         reduce using rule 146 (term -> factor term1 .)
    ID              reduce using rule 146 (term -> factor term1 .)
    OPENPAREN       reduce using rule 146 (term -> factor term1 .)


state 156

    (147) term1 -> MULTIPLICATION . term
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    term                           shift and go to state 196
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 157

    (148) term1 -> DIVISION . term
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    term                           shift and go to state 197
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 158

    (149) term1 -> empty .

    ADDITION        reduce using rule 149 (term1 -> empty .)
    SUBSTRACTION    reduce using rule 149 (term1 -> empty .)
    SEMICOLON       reduce using rule 149 (term1 -> empty .)
    OPENBRACES      reduce using rule 149 (term1 -> empty .)
    COMMA           reduce using rule 149 (term1 -> empty .)
    GREATER         reduce using rule 149 (term1 -> empty .)
    LESS            reduce using rule 149 (term1 -> empty .)
    NOTEQUAL        reduce using rule 149 (term1 -> empty .)
    ISEQUAL         reduce using rule 149 (term1 -> empty .)
    CLOSEPAREN      reduce using rule 149 (term1 -> empty .)
    CLOSEBRACKET    reduce using rule 149 (term1 -> empty .)
    OR              reduce using rule 149 (term1 -> empty .)
    AND             reduce using rule 149 (term1 -> empty .)
    CTEINT          reduce using rule 149 (term1 -> empty .)
    CTEFLOAT        reduce using rule 149 (term1 -> empty .)
    CTECHAR         reduce using rule 149 (term1 -> empty .)
    ID              reduce using rule 149 (term1 -> empty .)
    OPENPAREN       reduce using rule 149 (term1 -> empty .)


state 159

    (64) vcte -> id vcte1 .

    MULTIPLICATION  reduce using rule 64 (vcte -> id vcte1 .)
    DIVISION        reduce using rule 64 (vcte -> id vcte1 .)
    ADDITION        reduce using rule 64 (vcte -> id vcte1 .)
    SUBSTRACTION    reduce using rule 64 (vcte -> id vcte1 .)
    SEMICOLON       reduce using rule 64 (vcte -> id vcte1 .)
    OPENBRACES      reduce using rule 64 (vcte -> id vcte1 .)
    COMMA           reduce using rule 64 (vcte -> id vcte1 .)
    GREATER         reduce using rule 64 (vcte -> id vcte1 .)
    LESS            reduce using rule 64 (vcte -> id vcte1 .)
    NOTEQUAL        reduce using rule 64 (vcte -> id vcte1 .)
    ISEQUAL         reduce using rule 64 (vcte -> id vcte1 .)
    CLOSEPAREN      reduce using rule 64 (vcte -> id vcte1 .)
    CLOSEBRACKET    reduce using rule 64 (vcte -> id vcte1 .)
    OR              reduce using rule 64 (vcte -> id vcte1 .)
    AND             reduce using rule 64 (vcte -> id vcte1 .)
    CTEINT          reduce using rule 64 (vcte -> id vcte1 .)
    CTEFLOAT        reduce using rule 64 (vcte -> id vcte1 .)
    CTECHAR         reduce using rule 64 (vcte -> id vcte1 .)
    ID              reduce using rule 64 (vcte -> id vcte1 .)
    OPENPAREN       reduce using rule 64 (vcte -> id vcte1 .)


state 160

    (66) vcte1 -> OPENBRACKET . exp CLOSEBRACKET vcte3
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    exp                            shift and go to state 198
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 161

    (67) vcte1 -> empty .

    MULTIPLICATION  reduce using rule 67 (vcte1 -> empty .)
    DIVISION        reduce using rule 67 (vcte1 -> empty .)
    ADDITION        reduce using rule 67 (vcte1 -> empty .)
    SUBSTRACTION    reduce using rule 67 (vcte1 -> empty .)
    SEMICOLON       reduce using rule 67 (vcte1 -> empty .)
    OPENBRACES      reduce using rule 67 (vcte1 -> empty .)
    COMMA           reduce using rule 67 (vcte1 -> empty .)
    GREATER         reduce using rule 67 (vcte1 -> empty .)
    LESS            reduce using rule 67 (vcte1 -> empty .)
    NOTEQUAL        reduce using rule 67 (vcte1 -> empty .)
    ISEQUAL         reduce using rule 67 (vcte1 -> empty .)
    CLOSEPAREN      reduce using rule 67 (vcte1 -> empty .)
    CLOSEBRACKET    reduce using rule 67 (vcte1 -> empty .)
    OR              reduce using rule 67 (vcte1 -> empty .)
    AND             reduce using rule 67 (vcte1 -> empty .)
    CTEINT          reduce using rule 67 (vcte1 -> empty .)
    CTEFLOAT        reduce using rule 67 (vcte1 -> empty .)
    CTECHAR         reduce using rule 67 (vcte1 -> empty .)
    ID              reduce using rule 67 (vcte1 -> empty .)
    OPENPAREN       reduce using rule 67 (vcte1 -> empty .)


state 162

    (142) factor1 -> factor2 vcte .

    MULTIPLICATION  reduce using rule 142 (factor1 -> factor2 vcte .)
    DIVISION        reduce using rule 142 (factor1 -> factor2 vcte .)
    ADDITION        reduce using rule 142 (factor1 -> factor2 vcte .)
    SUBSTRACTION    reduce using rule 142 (factor1 -> factor2 vcte .)
    SEMICOLON       reduce using rule 142 (factor1 -> factor2 vcte .)
    OPENBRACES      reduce using rule 142 (factor1 -> factor2 vcte .)
    COMMA           reduce using rule 142 (factor1 -> factor2 vcte .)
    GREATER         reduce using rule 142 (factor1 -> factor2 vcte .)
    LESS            reduce using rule 142 (factor1 -> factor2 vcte .)
    NOTEQUAL        reduce using rule 142 (factor1 -> factor2 vcte .)
    ISEQUAL         reduce using rule 142 (factor1 -> factor2 vcte .)
    CLOSEPAREN      reduce using rule 142 (factor1 -> factor2 vcte .)
    CLOSEBRACKET    reduce using rule 142 (factor1 -> factor2 vcte .)
    OR              reduce using rule 142 (factor1 -> factor2 vcte .)
    AND             reduce using rule 142 (factor1 -> factor2 vcte .)
    CTEINT          reduce using rule 142 (factor1 -> factor2 vcte .)
    CTEFLOAT        reduce using rule 142 (factor1 -> factor2 vcte .)
    CTECHAR         reduce using rule 142 (factor1 -> factor2 vcte .)
    ID              reduce using rule 142 (factor1 -> factor2 vcte .)
    OPENPAREN       reduce using rule 142 (factor1 -> factor2 vcte .)


state 163

    (143) factor1 -> openP expression . closeP
    (139) closeP -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 200

    closeP                         shift and go to state 199

state 164

    (76) expression -> exp . expression1
    (77) expression1 -> . loper exp
    (78) expression1 -> . empty
    (79) loper -> . GREATER
    (80) loper -> . LESS
    (81) loper -> . NOTEQUAL
    (82) loper -> . ISEQUAL
    (150) empty -> .

    GREATER         shift and go to state 204
    LESS            shift and go to state 205
    NOTEQUAL        shift and go to state 206
    ISEQUAL         shift and go to state 207
    CLOSEPAREN      reduce using rule 150 (empty -> .)
    OR              reduce using rule 150 (empty -> .)
    AND             reduce using rule 150 (empty -> .)

    expression1                    shift and go to state 201
    loper                          shift and go to state 202
    empty                          shift and go to state 203

state 165

    (42) vars3 -> OPENBRACKET . CTEINT CLOSEBRACKET

    CTEINT          shift and go to state 208


state 166

    (40) vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .

    SEMICOLON       reduce using rule 40 (vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .)
    EQUALS          reduce using rule 40 (vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .)


state 167

    (43) vars3 -> empty .

    SEMICOLON       reduce using rule 43 (vars3 -> empty .)
    EQUALS          reduce using rule 43 (vars3 -> empty .)


state 168

    (54) assignment -> id assignment1 equals . assignment3 SEMICOLON
    (59) assignment3 -> . exp
    (60) assignment3 -> . read
    (134) exp -> . term exp1
    (48) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    READ            shift and go to state 55
    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    id                             shift and go to state 99
    assignment3                    shift and go to state 209
    exp                            shift and go to state 210
    read                           shift and go to state 211
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 169

    (56) assignment1 -> assignment2 assignment1 .

    EQUALS          reduce using rule 56 (assignment1 -> assignment2 assignment1 .)


state 170

    (58) assignment2 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 212


state 171

    (86) condition -> IF head body . condition1
    (87) condition1 -> . ELSEIF head body condition1
    (88) condition1 -> . ELSE body
    (89) condition1 -> . empty
    (150) empty -> .

    ELSEIF          shift and go to state 214
    ELSE            shift and go to state 215
    IF              reduce using rule 150 (empty -> .)
    PRINT           reduce using rule 150 (empty -> .)
    READ            reduce using rule 150 (empty -> .)
    REPEAT          reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    RETURN          reduce using rule 150 (empty -> .)
    WHILE           reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    CIRCLE          reduce using rule 150 (empty -> .)
    SQUARE          reduce using rule 150 (empty -> .)
    TRIANGLE        reduce using rule 150 (empty -> .)
    RECTANGLE       reduce using rule 150 (empty -> .)
    HIDE_STAR       reduce using rule 150 (empty -> .)
    SHOW_STAR       reduce using rule 150 (empty -> .)
    HAND_DOWN       reduce using rule 150 (empty -> .)
    HAND_UP         reduce using rule 150 (empty -> .)
    SETXY           reduce using rule 150 (empty -> .)
    COLOR_STAR      reduce using rule 150 (empty -> .)
    SIZE_STAR       reduce using rule 150 (empty -> .)
    GO              reduce using rule 150 (empty -> .)
    LEFT            reduce using rule 150 (empty -> .)
    RIGHT           reduce using rule 150 (empty -> .)
    BACK            reduce using rule 150 (empty -> .)
    ARC             reduce using rule 150 (empty -> .)
    CLOSEBRACES     reduce using rule 150 (empty -> .)

    condition1                     shift and go to state 213
    empty                          shift and go to state 216

state 172

    (93) body -> OPENBRACES . body1 CLOSEBRACES
    (94) body1 -> . stmt body1
    (95) body1 -> . empty
    (14) stmt -> . assignment
    (15) stmt -> . condition
    (16) stmt -> . print
    (17) stmt -> . loop
    (18) stmt -> . read
    (19) stmt -> . graphstmt
    (20) stmt -> . graphr
    (21) stmt -> . funCall SEMICOLON
    (22) stmt -> . return
    (150) empty -> .
    (54) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (86) condition -> . IF head body condition1
    (47) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (12) loop -> . while
    (13) loop -> . for
    (48) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (105) graphstmt -> . graphfig
    (106) graphstmt -> . graphview
    (107) graphstmt -> . graphmove
    (122) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (73) return -> . RETURN return1 SEMICOLON
    (53) id -> . ID
    (97) while -> . WHILE head body
    (96) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (108) graphfig -> . graphfig1 SEMICOLON
    (125) graphview -> . graphview1 SEMICOLON
    (113) graphmove -> . graphmove1 SEMICOLON
    (109) graphfig1 -> . CIRCLE laRegla2
    (110) graphfig1 -> . SQUARE laRegla2
    (111) graphfig1 -> . TRIANGLE laRegla
    (112) graphfig1 -> . RECTANGLE laRegla
    (126) graphview1 -> . HIDE_STAR
    (127) graphview1 -> . SHOW_STAR
    (128) graphview1 -> . graphview2 exp
    (114) graphmove1 -> . HAND_DOWN
    (115) graphmove1 -> . HAND_UP
    (116) graphmove1 -> . graphmove2
    (129) graphview2 -> . SETXY graphview3
    (130) graphview2 -> . COLOR_STAR
    (131) graphview2 -> . SIZE_STAR
    (117) graphmove2 -> . GO laRegla2
    (118) graphmove2 -> . LEFT laRegla2
    (119) graphmove2 -> . RIGHT laRegla2
    (120) graphmove2 -> . BACK laRegla2
    (121) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 150 (empty -> .)
    IF              shift and go to state 51
    PRINT           shift and go to state 52
    READ            shift and go to state 55
    REPEAT          shift and go to state 59
    ID              shift and go to state 60
    RETURN          shift and go to state 61
    WHILE           shift and go to state 62
    FOR             shift and go to state 63
    CIRCLE          shift and go to state 67
    SQUARE          shift and go to state 68
    TRIANGLE        shift and go to state 69
    RECTANGLE       shift and go to state 70
    HIDE_STAR       shift and go to state 71
    SHOW_STAR       shift and go to state 72
    HAND_DOWN       shift and go to state 74
    HAND_UP         shift and go to state 75
    SETXY           shift and go to state 77
    COLOR_STAR      shift and go to state 78
    SIZE_STAR       shift and go to state 79
    GO              shift and go to state 80
    LEFT            shift and go to state 81
    RIGHT           shift and go to state 82
    BACK            shift and go to state 83
    ARC             shift and go to state 84

    body1                          shift and go to state 217
    stmt                           shift and go to state 218
    empty                          shift and go to state 219
    assignment                     shift and go to state 41
    condition                      shift and go to state 42
    print                          shift and go to state 43
    loop                           shift and go to state 44
    read                           shift and go to state 45
    graphstmt                      shift and go to state 46
    graphr                         shift and go to state 47
    funCall                        shift and go to state 48
    return                         shift and go to state 49
    id                             shift and go to state 50
    while                          shift and go to state 53
    for                            shift and go to state 54
    graphfig                       shift and go to state 56
    graphview                      shift and go to state 57
    graphmove                      shift and go to state 58
    graphfig1                      shift and go to state 64
    graphview1                     shift and go to state 65
    graphmove1                     shift and go to state 66
    graphview2                     shift and go to state 73
    graphmove2                     shift and go to state 76

state 173

    (90) head -> OPENPAREN head1 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 220


state 174

    (91) head1 -> expression .
    (83) logical -> expression . logical1 expression
    (84) logical1 -> . OR
    (85) logical1 -> . AND

    CLOSEPAREN      reduce using rule 91 (head1 -> expression .)
    OR              shift and go to state 222
    AND             shift and go to state 223

    logical1                       shift and go to state 221

state 175

    (92) head1 -> logical .

    CLOSEPAREN      reduce using rule 92 (head1 -> logical .)


state 176

    (47) print -> PRINT OPENPAREN expression . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 224


state 177

    (48) read -> READ OPENPAREN id . read1 CLOSEPAREN SEMICOLON
    (49) read1 -> . OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (50) read1 -> . OPENBRACKET exp CLOSEBRACKET
    (51) read1 -> . empty
    (150) empty -> .

    OPENBRACKET     shift and go to state 226
    CLOSEPAREN      reduce using rule 150 (empty -> .)

    read1                          shift and go to state 225
    empty                          shift and go to state 227

state 178

    (53) id -> ID .

    OPENBRACKET     reduce using rule 53 (id -> ID .)
    CLOSEPAREN      reduce using rule 53 (id -> ID .)


state 179

    (122) graphr -> REPEAT exp OPENBRACES . graphstmt graphr1 CLOSEBRACES
    (105) graphstmt -> . graphfig
    (106) graphstmt -> . graphview
    (107) graphstmt -> . graphmove
    (108) graphfig -> . graphfig1 SEMICOLON
    (125) graphview -> . graphview1 SEMICOLON
    (113) graphmove -> . graphmove1 SEMICOLON
    (109) graphfig1 -> . CIRCLE laRegla2
    (110) graphfig1 -> . SQUARE laRegla2
    (111) graphfig1 -> . TRIANGLE laRegla
    (112) graphfig1 -> . RECTANGLE laRegla
    (126) graphview1 -> . HIDE_STAR
    (127) graphview1 -> . SHOW_STAR
    (128) graphview1 -> . graphview2 exp
    (114) graphmove1 -> . HAND_DOWN
    (115) graphmove1 -> . HAND_UP
    (116) graphmove1 -> . graphmove2
    (129) graphview2 -> . SETXY graphview3
    (130) graphview2 -> . COLOR_STAR
    (131) graphview2 -> . SIZE_STAR
    (117) graphmove2 -> . GO laRegla2
    (118) graphmove2 -> . LEFT laRegla2
    (119) graphmove2 -> . RIGHT laRegla2
    (120) graphmove2 -> . BACK laRegla2
    (121) graphmove2 -> . ARC laRegla

    CIRCLE          shift and go to state 67
    SQUARE          shift and go to state 68
    TRIANGLE        shift and go to state 69
    RECTANGLE       shift and go to state 70
    HIDE_STAR       shift and go to state 71
    SHOW_STAR       shift and go to state 72
    HAND_DOWN       shift and go to state 74
    HAND_UP         shift and go to state 75
    SETXY           shift and go to state 77
    COLOR_STAR      shift and go to state 78
    SIZE_STAR       shift and go to state 79
    GO              shift and go to state 80
    LEFT            shift and go to state 81
    RIGHT           shift and go to state 82
    BACK            shift and go to state 83
    ARC             shift and go to state 84

    graphstmt                      shift and go to state 228
    graphfig                       shift and go to state 56
    graphview                      shift and go to state 57
    graphmove                      shift and go to state 58
    graphfig1                      shift and go to state 64
    graphview1                     shift and go to state 65
    graphmove1                     shift and go to state 66
    graphview2                     shift and go to state 73
    graphmove2                     shift and go to state 76

state 180

    (98) funCall -> ID OPENPAREN funCall2 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 229


state 181

    (99) funCall2 -> exp . funCall3
    (101) funCall3 -> . COMMA exp funCall2
    (102) funCall3 -> . empty
    (150) empty -> .

    COMMA           shift and go to state 231
    CLOSEPAREN      reduce using rule 150 (empty -> .)

    funCall3                       shift and go to state 230
    empty                          shift and go to state 232

state 182

    (100) funCall2 -> empty .

    CLOSEPAREN      reduce using rule 100 (funCall2 -> empty .)


state 183

    (73) return -> RETURN return1 SEMICOLON .

    IF              reduce using rule 73 (return -> RETURN return1 SEMICOLON .)
    PRINT           reduce using rule 73 (return -> RETURN return1 SEMICOLON .)
    READ            reduce using rule 73 (return -> RETURN return1 SEMICOLON .)
    REPEAT          reduce using rule 73 (return -> RETURN return1 SEMICOLON .)
    ID              reduce using rule 73 (return -> RETURN return1 SEMICOLON .)
    RETURN          reduce using rule 73 (return -> RETURN return1 SEMICOLON .)
    WHILE           reduce using rule 73 (return -> RETURN return1 SEMICOLON .)
    FOR             reduce using rule 73 (return -> RETURN return1 SEMICOLON .)
    CIRCLE          reduce using rule 73 (return -> RETURN return1 SEMICOLON .)
    SQUARE          reduce using rule 73 (return -> RETURN return1 SEMICOLON .)
    TRIANGLE        reduce using rule 73 (return -> RETURN return1 SEMICOLON .)
    RECTANGLE       reduce using rule 73 (return -> RETURN return1 SEMICOLON .)
    HIDE_STAR       reduce using rule 73 (return -> RETURN return1 SEMICOLON .)
    SHOW_STAR       reduce using rule 73 (return -> RETURN return1 SEMICOLON .)
    HAND_DOWN       reduce using rule 73 (return -> RETURN return1 SEMICOLON .)
    HAND_UP         reduce using rule 73 (return -> RETURN return1 SEMICOLON .)
    SETXY           reduce using rule 73 (return -> RETURN return1 SEMICOLON .)
    COLOR_STAR      reduce using rule 73 (return -> RETURN return1 SEMICOLON .)
    SIZE_STAR       reduce using rule 73 (return -> RETURN return1 SEMICOLON .)
    GO              reduce using rule 73 (return -> RETURN return1 SEMICOLON .)
    LEFT            reduce using rule 73 (return -> RETURN return1 SEMICOLON .)
    RIGHT           reduce using rule 73 (return -> RETURN return1 SEMICOLON .)
    BACK            reduce using rule 73 (return -> RETURN return1 SEMICOLON .)
    ARC             reduce using rule 73 (return -> RETURN return1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 73 (return -> RETURN return1 SEMICOLON .)


state 184

    (97) while -> WHILE head body .

    IF              reduce using rule 97 (while -> WHILE head body .)
    PRINT           reduce using rule 97 (while -> WHILE head body .)
    READ            reduce using rule 97 (while -> WHILE head body .)
    REPEAT          reduce using rule 97 (while -> WHILE head body .)
    ID              reduce using rule 97 (while -> WHILE head body .)
    RETURN          reduce using rule 97 (while -> WHILE head body .)
    WHILE           reduce using rule 97 (while -> WHILE head body .)
    FOR             reduce using rule 97 (while -> WHILE head body .)
    CIRCLE          reduce using rule 97 (while -> WHILE head body .)
    SQUARE          reduce using rule 97 (while -> WHILE head body .)
    TRIANGLE        reduce using rule 97 (while -> WHILE head body .)
    RECTANGLE       reduce using rule 97 (while -> WHILE head body .)
    HIDE_STAR       reduce using rule 97 (while -> WHILE head body .)
    SHOW_STAR       reduce using rule 97 (while -> WHILE head body .)
    HAND_DOWN       reduce using rule 97 (while -> WHILE head body .)
    HAND_UP         reduce using rule 97 (while -> WHILE head body .)
    SETXY           reduce using rule 97 (while -> WHILE head body .)
    COLOR_STAR      reduce using rule 97 (while -> WHILE head body .)
    SIZE_STAR       reduce using rule 97 (while -> WHILE head body .)
    GO              reduce using rule 97 (while -> WHILE head body .)
    LEFT            reduce using rule 97 (while -> WHILE head body .)
    RIGHT           reduce using rule 97 (while -> WHILE head body .)
    BACK            reduce using rule 97 (while -> WHILE head body .)
    ARC             reduce using rule 97 (while -> WHILE head body .)
    CLOSEBRACES     reduce using rule 97 (while -> WHILE head body .)


state 185

    (96) for -> FOR OPENPAREN ID . TWODOTS exp CLOSEPAREN body

    TWODOTS         shift and go to state 233


state 186

    (104) laRegla2 -> OPENPAREN exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 234


state 187

    (103) laRegla -> OPENPAREN exp . COMMA exp CLOSEPAREN

    COMMA           shift and go to state 235


state 188

    (132) graphview3 -> exp COMMA .

    CTEINT          reduce using rule 132 (graphview3 -> exp COMMA .)
    CTEFLOAT        reduce using rule 132 (graphview3 -> exp COMMA .)
    CTECHAR         reduce using rule 132 (graphview3 -> exp COMMA .)
    ID              reduce using rule 132 (graphview3 -> exp COMMA .)
    ADDITION        reduce using rule 132 (graphview3 -> exp COMMA .)
    SUBSTRACTION    reduce using rule 132 (graphview3 -> exp COMMA .)
    OPENPAREN       reduce using rule 132 (graphview3 -> exp COMMA .)


state 189

    (25) function -> FUN functionI function2 inicia_fun declara_vars function4 . termina_fun
    (29) termina_fun -> . CLOSEBRACES

    CLOSEBRACES     shift and go to state 237

    termina_fun                    shift and go to state 236

state 190

    (33) function4 -> stmt . function4
    (33) function4 -> . stmt function4
    (34) function4 -> . empty
    (14) stmt -> . assignment
    (15) stmt -> . condition
    (16) stmt -> . print
    (17) stmt -> . loop
    (18) stmt -> . read
    (19) stmt -> . graphstmt
    (20) stmt -> . graphr
    (21) stmt -> . funCall SEMICOLON
    (22) stmt -> . return
    (150) empty -> .
    (54) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (86) condition -> . IF head body condition1
    (47) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (12) loop -> . while
    (13) loop -> . for
    (48) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (105) graphstmt -> . graphfig
    (106) graphstmt -> . graphview
    (107) graphstmt -> . graphmove
    (122) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (73) return -> . RETURN return1 SEMICOLON
    (53) id -> . ID
    (97) while -> . WHILE head body
    (96) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (108) graphfig -> . graphfig1 SEMICOLON
    (125) graphview -> . graphview1 SEMICOLON
    (113) graphmove -> . graphmove1 SEMICOLON
    (109) graphfig1 -> . CIRCLE laRegla2
    (110) graphfig1 -> . SQUARE laRegla2
    (111) graphfig1 -> . TRIANGLE laRegla
    (112) graphfig1 -> . RECTANGLE laRegla
    (126) graphview1 -> . HIDE_STAR
    (127) graphview1 -> . SHOW_STAR
    (128) graphview1 -> . graphview2 exp
    (114) graphmove1 -> . HAND_DOWN
    (115) graphmove1 -> . HAND_UP
    (116) graphmove1 -> . graphmove2
    (129) graphview2 -> . SETXY graphview3
    (130) graphview2 -> . COLOR_STAR
    (131) graphview2 -> . SIZE_STAR
    (117) graphmove2 -> . GO laRegla2
    (118) graphmove2 -> . LEFT laRegla2
    (119) graphmove2 -> . RIGHT laRegla2
    (120) graphmove2 -> . BACK laRegla2
    (121) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 150 (empty -> .)
    IF              shift and go to state 51
    PRINT           shift and go to state 52
    READ            shift and go to state 55
    REPEAT          shift and go to state 59
    ID              shift and go to state 60
    RETURN          shift and go to state 61
    WHILE           shift and go to state 62
    FOR             shift and go to state 63
    CIRCLE          shift and go to state 67
    SQUARE          shift and go to state 68
    TRIANGLE        shift and go to state 69
    RECTANGLE       shift and go to state 70
    HIDE_STAR       shift and go to state 71
    SHOW_STAR       shift and go to state 72
    HAND_DOWN       shift and go to state 74
    HAND_UP         shift and go to state 75
    SETXY           shift and go to state 77
    COLOR_STAR      shift and go to state 78
    SIZE_STAR       shift and go to state 79
    GO              shift and go to state 80
    LEFT            shift and go to state 81
    RIGHT           shift and go to state 82
    BACK            shift and go to state 83
    ARC             shift and go to state 84

    stmt                           shift and go to state 190
    function4                      shift and go to state 238
    empty                          shift and go to state 191
    assignment                     shift and go to state 41
    condition                      shift and go to state 42
    print                          shift and go to state 43
    loop                           shift and go to state 44
    read                           shift and go to state 45
    graphstmt                      shift and go to state 46
    graphr                         shift and go to state 47
    funCall                        shift and go to state 48
    return                         shift and go to state 49
    id                             shift and go to state 50
    while                          shift and go to state 53
    for                            shift and go to state 54
    graphfig                       shift and go to state 56
    graphview                      shift and go to state 57
    graphmove                      shift and go to state 58
    graphfig1                      shift and go to state 64
    graphview1                     shift and go to state 65
    graphmove1                     shift and go to state 66
    graphview2                     shift and go to state 73
    graphmove2                     shift and go to state 76

state 191

    (34) function4 -> empty .

    CLOSEBRACES     reduce using rule 34 (function4 -> empty .)


state 192

    (31) function3 -> type ID function5 .

    CLOSEPAREN      reduce using rule 31 (function3 -> type ID function5 .)


state 193

    (35) function5 -> COMMA . type ID function3
    (44) type -> . INT
    (45) type -> . FLOAT
    (46) type -> . CHAR

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    type                           shift and go to state 239

state 194

    (135) exp1 -> ADDITION exp .

    SEMICOLON       reduce using rule 135 (exp1 -> ADDITION exp .)
    OPENBRACES      reduce using rule 135 (exp1 -> ADDITION exp .)
    COMMA           reduce using rule 135 (exp1 -> ADDITION exp .)
    GREATER         reduce using rule 135 (exp1 -> ADDITION exp .)
    LESS            reduce using rule 135 (exp1 -> ADDITION exp .)
    NOTEQUAL        reduce using rule 135 (exp1 -> ADDITION exp .)
    ISEQUAL         reduce using rule 135 (exp1 -> ADDITION exp .)
    CLOSEPAREN      reduce using rule 135 (exp1 -> ADDITION exp .)
    CLOSEBRACKET    reduce using rule 135 (exp1 -> ADDITION exp .)
    OR              reduce using rule 135 (exp1 -> ADDITION exp .)
    AND             reduce using rule 135 (exp1 -> ADDITION exp .)
    CTEINT          reduce using rule 135 (exp1 -> ADDITION exp .)
    CTEFLOAT        reduce using rule 135 (exp1 -> ADDITION exp .)
    CTECHAR         reduce using rule 135 (exp1 -> ADDITION exp .)
    ID              reduce using rule 135 (exp1 -> ADDITION exp .)
    ADDITION        reduce using rule 135 (exp1 -> ADDITION exp .)
    SUBSTRACTION    reduce using rule 135 (exp1 -> ADDITION exp .)
    OPENPAREN       reduce using rule 135 (exp1 -> ADDITION exp .)


state 195

    (136) exp1 -> SUBSTRACTION exp .

    SEMICOLON       reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    OPENBRACES      reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    COMMA           reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    GREATER         reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    LESS            reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    NOTEQUAL        reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    ISEQUAL         reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    CLOSEPAREN      reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    CLOSEBRACKET    reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    OR              reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    AND             reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    CTEINT          reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    CTEFLOAT        reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    CTECHAR         reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    ID              reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    ADDITION        reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    SUBSTRACTION    reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    OPENPAREN       reduce using rule 136 (exp1 -> SUBSTRACTION exp .)


state 196

    (147) term1 -> MULTIPLICATION term .

    ADDITION        reduce using rule 147 (term1 -> MULTIPLICATION term .)
    SUBSTRACTION    reduce using rule 147 (term1 -> MULTIPLICATION term .)
    SEMICOLON       reduce using rule 147 (term1 -> MULTIPLICATION term .)
    OPENBRACES      reduce using rule 147 (term1 -> MULTIPLICATION term .)
    COMMA           reduce using rule 147 (term1 -> MULTIPLICATION term .)
    GREATER         reduce using rule 147 (term1 -> MULTIPLICATION term .)
    LESS            reduce using rule 147 (term1 -> MULTIPLICATION term .)
    NOTEQUAL        reduce using rule 147 (term1 -> MULTIPLICATION term .)
    ISEQUAL         reduce using rule 147 (term1 -> MULTIPLICATION term .)
    CLOSEPAREN      reduce using rule 147 (term1 -> MULTIPLICATION term .)
    CLOSEBRACKET    reduce using rule 147 (term1 -> MULTIPLICATION term .)
    OR              reduce using rule 147 (term1 -> MULTIPLICATION term .)
    AND             reduce using rule 147 (term1 -> MULTIPLICATION term .)
    CTEINT          reduce using rule 147 (term1 -> MULTIPLICATION term .)
    CTEFLOAT        reduce using rule 147 (term1 -> MULTIPLICATION term .)
    CTECHAR         reduce using rule 147 (term1 -> MULTIPLICATION term .)
    ID              reduce using rule 147 (term1 -> MULTIPLICATION term .)
    OPENPAREN       reduce using rule 147 (term1 -> MULTIPLICATION term .)


state 197

    (148) term1 -> DIVISION term .

    ADDITION        reduce using rule 148 (term1 -> DIVISION term .)
    SUBSTRACTION    reduce using rule 148 (term1 -> DIVISION term .)
    SEMICOLON       reduce using rule 148 (term1 -> DIVISION term .)
    OPENBRACES      reduce using rule 148 (term1 -> DIVISION term .)
    COMMA           reduce using rule 148 (term1 -> DIVISION term .)
    GREATER         reduce using rule 148 (term1 -> DIVISION term .)
    LESS            reduce using rule 148 (term1 -> DIVISION term .)
    NOTEQUAL        reduce using rule 148 (term1 -> DIVISION term .)
    ISEQUAL         reduce using rule 148 (term1 -> DIVISION term .)
    CLOSEPAREN      reduce using rule 148 (term1 -> DIVISION term .)
    CLOSEBRACKET    reduce using rule 148 (term1 -> DIVISION term .)
    OR              reduce using rule 148 (term1 -> DIVISION term .)
    AND             reduce using rule 148 (term1 -> DIVISION term .)
    CTEINT          reduce using rule 148 (term1 -> DIVISION term .)
    CTEFLOAT        reduce using rule 148 (term1 -> DIVISION term .)
    CTECHAR         reduce using rule 148 (term1 -> DIVISION term .)
    ID              reduce using rule 148 (term1 -> DIVISION term .)
    OPENPAREN       reduce using rule 148 (term1 -> DIVISION term .)


state 198

    (66) vcte1 -> OPENBRACKET exp . CLOSEBRACKET vcte3

    CLOSEBRACKET    shift and go to state 240


state 199

    (143) factor1 -> openP expression closeP .

    MULTIPLICATION  reduce using rule 143 (factor1 -> openP expression closeP .)
    DIVISION        reduce using rule 143 (factor1 -> openP expression closeP .)
    ADDITION        reduce using rule 143 (factor1 -> openP expression closeP .)
    SUBSTRACTION    reduce using rule 143 (factor1 -> openP expression closeP .)
    SEMICOLON       reduce using rule 143 (factor1 -> openP expression closeP .)
    OPENBRACES      reduce using rule 143 (factor1 -> openP expression closeP .)
    COMMA           reduce using rule 143 (factor1 -> openP expression closeP .)
    GREATER         reduce using rule 143 (factor1 -> openP expression closeP .)
    LESS            reduce using rule 143 (factor1 -> openP expression closeP .)
    NOTEQUAL        reduce using rule 143 (factor1 -> openP expression closeP .)
    ISEQUAL         reduce using rule 143 (factor1 -> openP expression closeP .)
    CLOSEPAREN      reduce using rule 143 (factor1 -> openP expression closeP .)
    CLOSEBRACKET    reduce using rule 143 (factor1 -> openP expression closeP .)
    OR              reduce using rule 143 (factor1 -> openP expression closeP .)
    AND             reduce using rule 143 (factor1 -> openP expression closeP .)
    CTEINT          reduce using rule 143 (factor1 -> openP expression closeP .)
    CTEFLOAT        reduce using rule 143 (factor1 -> openP expression closeP .)
    CTECHAR         reduce using rule 143 (factor1 -> openP expression closeP .)
    ID              reduce using rule 143 (factor1 -> openP expression closeP .)
    OPENPAREN       reduce using rule 143 (factor1 -> openP expression closeP .)


state 200

    (139) closeP -> CLOSEPAREN .

    MULTIPLICATION  reduce using rule 139 (closeP -> CLOSEPAREN .)
    DIVISION        reduce using rule 139 (closeP -> CLOSEPAREN .)
    ADDITION        reduce using rule 139 (closeP -> CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 139 (closeP -> CLOSEPAREN .)
    SEMICOLON       reduce using rule 139 (closeP -> CLOSEPAREN .)
    OPENBRACES      reduce using rule 139 (closeP -> CLOSEPAREN .)
    COMMA           reduce using rule 139 (closeP -> CLOSEPAREN .)
    GREATER         reduce using rule 139 (closeP -> CLOSEPAREN .)
    LESS            reduce using rule 139 (closeP -> CLOSEPAREN .)
    NOTEQUAL        reduce using rule 139 (closeP -> CLOSEPAREN .)
    ISEQUAL         reduce using rule 139 (closeP -> CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 139 (closeP -> CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 139 (closeP -> CLOSEPAREN .)
    OR              reduce using rule 139 (closeP -> CLOSEPAREN .)
    AND             reduce using rule 139 (closeP -> CLOSEPAREN .)
    CTEINT          reduce using rule 139 (closeP -> CLOSEPAREN .)
    CTEFLOAT        reduce using rule 139 (closeP -> CLOSEPAREN .)
    CTECHAR         reduce using rule 139 (closeP -> CLOSEPAREN .)
    ID              reduce using rule 139 (closeP -> CLOSEPAREN .)
    OPENPAREN       reduce using rule 139 (closeP -> CLOSEPAREN .)


state 201

    (76) expression -> exp expression1 .

    CLOSEPAREN      reduce using rule 76 (expression -> exp expression1 .)
    OR              reduce using rule 76 (expression -> exp expression1 .)
    AND             reduce using rule 76 (expression -> exp expression1 .)


state 202

    (77) expression1 -> loper . exp
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    exp                            shift and go to state 241
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 203

    (78) expression1 -> empty .

    CLOSEPAREN      reduce using rule 78 (expression1 -> empty .)
    OR              reduce using rule 78 (expression1 -> empty .)
    AND             reduce using rule 78 (expression1 -> empty .)


state 204

    (79) loper -> GREATER .

    CTEINT          reduce using rule 79 (loper -> GREATER .)
    CTEFLOAT        reduce using rule 79 (loper -> GREATER .)
    CTECHAR         reduce using rule 79 (loper -> GREATER .)
    ID              reduce using rule 79 (loper -> GREATER .)
    ADDITION        reduce using rule 79 (loper -> GREATER .)
    SUBSTRACTION    reduce using rule 79 (loper -> GREATER .)
    OPENPAREN       reduce using rule 79 (loper -> GREATER .)


state 205

    (80) loper -> LESS .

    CTEINT          reduce using rule 80 (loper -> LESS .)
    CTEFLOAT        reduce using rule 80 (loper -> LESS .)
    CTECHAR         reduce using rule 80 (loper -> LESS .)
    ID              reduce using rule 80 (loper -> LESS .)
    ADDITION        reduce using rule 80 (loper -> LESS .)
    SUBSTRACTION    reduce using rule 80 (loper -> LESS .)
    OPENPAREN       reduce using rule 80 (loper -> LESS .)


state 206

    (81) loper -> NOTEQUAL .

    CTEINT          reduce using rule 81 (loper -> NOTEQUAL .)
    CTEFLOAT        reduce using rule 81 (loper -> NOTEQUAL .)
    CTECHAR         reduce using rule 81 (loper -> NOTEQUAL .)
    ID              reduce using rule 81 (loper -> NOTEQUAL .)
    ADDITION        reduce using rule 81 (loper -> NOTEQUAL .)
    SUBSTRACTION    reduce using rule 81 (loper -> NOTEQUAL .)
    OPENPAREN       reduce using rule 81 (loper -> NOTEQUAL .)


state 207

    (82) loper -> ISEQUAL .

    CTEINT          reduce using rule 82 (loper -> ISEQUAL .)
    CTEFLOAT        reduce using rule 82 (loper -> ISEQUAL .)
    CTECHAR         reduce using rule 82 (loper -> ISEQUAL .)
    ID              reduce using rule 82 (loper -> ISEQUAL .)
    ADDITION        reduce using rule 82 (loper -> ISEQUAL .)
    SUBSTRACTION    reduce using rule 82 (loper -> ISEQUAL .)
    OPENPAREN       reduce using rule 82 (loper -> ISEQUAL .)


state 208

    (42) vars3 -> OPENBRACKET CTEINT . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 242


state 209

    (54) assignment -> id assignment1 equals assignment3 . SEMICOLON

    SEMICOLON       shift and go to state 243


state 210

    (59) assignment3 -> exp .

    SEMICOLON       reduce using rule 59 (assignment3 -> exp .)


state 211

    (60) assignment3 -> read .

    SEMICOLON       reduce using rule 60 (assignment3 -> read .)


state 212

    (58) assignment2 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     reduce using rule 58 (assignment2 -> OPENBRACKET exp CLOSEBRACKET .)
    EQUALS          reduce using rule 58 (assignment2 -> OPENBRACKET exp CLOSEBRACKET .)


state 213

    (86) condition -> IF head body condition1 .

    IF              reduce using rule 86 (condition -> IF head body condition1 .)
    PRINT           reduce using rule 86 (condition -> IF head body condition1 .)
    READ            reduce using rule 86 (condition -> IF head body condition1 .)
    REPEAT          reduce using rule 86 (condition -> IF head body condition1 .)
    ID              reduce using rule 86 (condition -> IF head body condition1 .)
    RETURN          reduce using rule 86 (condition -> IF head body condition1 .)
    WHILE           reduce using rule 86 (condition -> IF head body condition1 .)
    FOR             reduce using rule 86 (condition -> IF head body condition1 .)
    CIRCLE          reduce using rule 86 (condition -> IF head body condition1 .)
    SQUARE          reduce using rule 86 (condition -> IF head body condition1 .)
    TRIANGLE        reduce using rule 86 (condition -> IF head body condition1 .)
    RECTANGLE       reduce using rule 86 (condition -> IF head body condition1 .)
    HIDE_STAR       reduce using rule 86 (condition -> IF head body condition1 .)
    SHOW_STAR       reduce using rule 86 (condition -> IF head body condition1 .)
    HAND_DOWN       reduce using rule 86 (condition -> IF head body condition1 .)
    HAND_UP         reduce using rule 86 (condition -> IF head body condition1 .)
    SETXY           reduce using rule 86 (condition -> IF head body condition1 .)
    COLOR_STAR      reduce using rule 86 (condition -> IF head body condition1 .)
    SIZE_STAR       reduce using rule 86 (condition -> IF head body condition1 .)
    GO              reduce using rule 86 (condition -> IF head body condition1 .)
    LEFT            reduce using rule 86 (condition -> IF head body condition1 .)
    RIGHT           reduce using rule 86 (condition -> IF head body condition1 .)
    BACK            reduce using rule 86 (condition -> IF head body condition1 .)
    ARC             reduce using rule 86 (condition -> IF head body condition1 .)
    CLOSEBRACES     reduce using rule 86 (condition -> IF head body condition1 .)


state 214

    (87) condition1 -> ELSEIF . head body condition1
    (90) head -> . OPENPAREN head1 CLOSEPAREN

    OPENPAREN       shift and go to state 118

    head                           shift and go to state 244

state 215

    (88) condition1 -> ELSE . body
    (93) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 172

    body                           shift and go to state 245

state 216

    (89) condition1 -> empty .

    IF              reduce using rule 89 (condition1 -> empty .)
    PRINT           reduce using rule 89 (condition1 -> empty .)
    READ            reduce using rule 89 (condition1 -> empty .)
    REPEAT          reduce using rule 89 (condition1 -> empty .)
    ID              reduce using rule 89 (condition1 -> empty .)
    RETURN          reduce using rule 89 (condition1 -> empty .)
    WHILE           reduce using rule 89 (condition1 -> empty .)
    FOR             reduce using rule 89 (condition1 -> empty .)
    CIRCLE          reduce using rule 89 (condition1 -> empty .)
    SQUARE          reduce using rule 89 (condition1 -> empty .)
    TRIANGLE        reduce using rule 89 (condition1 -> empty .)
    RECTANGLE       reduce using rule 89 (condition1 -> empty .)
    HIDE_STAR       reduce using rule 89 (condition1 -> empty .)
    SHOW_STAR       reduce using rule 89 (condition1 -> empty .)
    HAND_DOWN       reduce using rule 89 (condition1 -> empty .)
    HAND_UP         reduce using rule 89 (condition1 -> empty .)
    SETXY           reduce using rule 89 (condition1 -> empty .)
    COLOR_STAR      reduce using rule 89 (condition1 -> empty .)
    SIZE_STAR       reduce using rule 89 (condition1 -> empty .)
    GO              reduce using rule 89 (condition1 -> empty .)
    LEFT            reduce using rule 89 (condition1 -> empty .)
    RIGHT           reduce using rule 89 (condition1 -> empty .)
    BACK            reduce using rule 89 (condition1 -> empty .)
    ARC             reduce using rule 89 (condition1 -> empty .)
    CLOSEBRACES     reduce using rule 89 (condition1 -> empty .)


state 217

    (93) body -> OPENBRACES body1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 246


state 218

    (94) body1 -> stmt . body1
    (94) body1 -> . stmt body1
    (95) body1 -> . empty
    (14) stmt -> . assignment
    (15) stmt -> . condition
    (16) stmt -> . print
    (17) stmt -> . loop
    (18) stmt -> . read
    (19) stmt -> . graphstmt
    (20) stmt -> . graphr
    (21) stmt -> . funCall SEMICOLON
    (22) stmt -> . return
    (150) empty -> .
    (54) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (86) condition -> . IF head body condition1
    (47) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (12) loop -> . while
    (13) loop -> . for
    (48) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (105) graphstmt -> . graphfig
    (106) graphstmt -> . graphview
    (107) graphstmt -> . graphmove
    (122) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (73) return -> . RETURN return1 SEMICOLON
    (53) id -> . ID
    (97) while -> . WHILE head body
    (96) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (108) graphfig -> . graphfig1 SEMICOLON
    (125) graphview -> . graphview1 SEMICOLON
    (113) graphmove -> . graphmove1 SEMICOLON
    (109) graphfig1 -> . CIRCLE laRegla2
    (110) graphfig1 -> . SQUARE laRegla2
    (111) graphfig1 -> . TRIANGLE laRegla
    (112) graphfig1 -> . RECTANGLE laRegla
    (126) graphview1 -> . HIDE_STAR
    (127) graphview1 -> . SHOW_STAR
    (128) graphview1 -> . graphview2 exp
    (114) graphmove1 -> . HAND_DOWN
    (115) graphmove1 -> . HAND_UP
    (116) graphmove1 -> . graphmove2
    (129) graphview2 -> . SETXY graphview3
    (130) graphview2 -> . COLOR_STAR
    (131) graphview2 -> . SIZE_STAR
    (117) graphmove2 -> . GO laRegla2
    (118) graphmove2 -> . LEFT laRegla2
    (119) graphmove2 -> . RIGHT laRegla2
    (120) graphmove2 -> . BACK laRegla2
    (121) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 150 (empty -> .)
    IF              shift and go to state 51
    PRINT           shift and go to state 52
    READ            shift and go to state 55
    REPEAT          shift and go to state 59
    ID              shift and go to state 60
    RETURN          shift and go to state 61
    WHILE           shift and go to state 62
    FOR             shift and go to state 63
    CIRCLE          shift and go to state 67
    SQUARE          shift and go to state 68
    TRIANGLE        shift and go to state 69
    RECTANGLE       shift and go to state 70
    HIDE_STAR       shift and go to state 71
    SHOW_STAR       shift and go to state 72
    HAND_DOWN       shift and go to state 74
    HAND_UP         shift and go to state 75
    SETXY           shift and go to state 77
    COLOR_STAR      shift and go to state 78
    SIZE_STAR       shift and go to state 79
    GO              shift and go to state 80
    LEFT            shift and go to state 81
    RIGHT           shift and go to state 82
    BACK            shift and go to state 83
    ARC             shift and go to state 84

    stmt                           shift and go to state 218
    body1                          shift and go to state 247
    empty                          shift and go to state 219
    assignment                     shift and go to state 41
    condition                      shift and go to state 42
    print                          shift and go to state 43
    loop                           shift and go to state 44
    read                           shift and go to state 45
    graphstmt                      shift and go to state 46
    graphr                         shift and go to state 47
    funCall                        shift and go to state 48
    return                         shift and go to state 49
    id                             shift and go to state 50
    while                          shift and go to state 53
    for                            shift and go to state 54
    graphfig                       shift and go to state 56
    graphview                      shift and go to state 57
    graphmove                      shift and go to state 58
    graphfig1                      shift and go to state 64
    graphview1                     shift and go to state 65
    graphmove1                     shift and go to state 66
    graphview2                     shift and go to state 73
    graphmove2                     shift and go to state 76

state 219

    (95) body1 -> empty .

    CLOSEBRACES     reduce using rule 95 (body1 -> empty .)


state 220

    (90) head -> OPENPAREN head1 CLOSEPAREN .

    OPENBRACES      reduce using rule 90 (head -> OPENPAREN head1 CLOSEPAREN .)


state 221

    (83) logical -> expression logical1 . expression
    (76) expression -> . exp expression1
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    expression                     shift and go to state 248
    exp                            shift and go to state 164
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 222

    (84) logical1 -> OR .

    CTEINT          reduce using rule 84 (logical1 -> OR .)
    CTEFLOAT        reduce using rule 84 (logical1 -> OR .)
    CTECHAR         reduce using rule 84 (logical1 -> OR .)
    ID              reduce using rule 84 (logical1 -> OR .)
    ADDITION        reduce using rule 84 (logical1 -> OR .)
    SUBSTRACTION    reduce using rule 84 (logical1 -> OR .)
    OPENPAREN       reduce using rule 84 (logical1 -> OR .)


state 223

    (85) logical1 -> AND .

    CTEINT          reduce using rule 85 (logical1 -> AND .)
    CTEFLOAT        reduce using rule 85 (logical1 -> AND .)
    CTECHAR         reduce using rule 85 (logical1 -> AND .)
    ID              reduce using rule 85 (logical1 -> AND .)
    ADDITION        reduce using rule 85 (logical1 -> AND .)
    SUBSTRACTION    reduce using rule 85 (logical1 -> AND .)
    OPENPAREN       reduce using rule 85 (logical1 -> AND .)


state 224

    (47) print -> PRINT OPENPAREN expression CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 249


state 225

    (48) read -> READ OPENPAREN id read1 . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 250


state 226

    (49) read1 -> OPENBRACKET . exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (50) read1 -> OPENBRACKET . exp CLOSEBRACKET
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    exp                            shift and go to state 251
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 227

    (51) read1 -> empty .

    CLOSEPAREN      reduce using rule 51 (read1 -> empty .)


state 228

    (122) graphr -> REPEAT exp OPENBRACES graphstmt . graphr1 CLOSEBRACES
    (123) graphr1 -> . graphstmt graphr1
    (124) graphr1 -> . empty
    (105) graphstmt -> . graphfig
    (106) graphstmt -> . graphview
    (107) graphstmt -> . graphmove
    (150) empty -> .
    (108) graphfig -> . graphfig1 SEMICOLON
    (125) graphview -> . graphview1 SEMICOLON
    (113) graphmove -> . graphmove1 SEMICOLON
    (109) graphfig1 -> . CIRCLE laRegla2
    (110) graphfig1 -> . SQUARE laRegla2
    (111) graphfig1 -> . TRIANGLE laRegla
    (112) graphfig1 -> . RECTANGLE laRegla
    (126) graphview1 -> . HIDE_STAR
    (127) graphview1 -> . SHOW_STAR
    (128) graphview1 -> . graphview2 exp
    (114) graphmove1 -> . HAND_DOWN
    (115) graphmove1 -> . HAND_UP
    (116) graphmove1 -> . graphmove2
    (129) graphview2 -> . SETXY graphview3
    (130) graphview2 -> . COLOR_STAR
    (131) graphview2 -> . SIZE_STAR
    (117) graphmove2 -> . GO laRegla2
    (118) graphmove2 -> . LEFT laRegla2
    (119) graphmove2 -> . RIGHT laRegla2
    (120) graphmove2 -> . BACK laRegla2
    (121) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 150 (empty -> .)
    CIRCLE          shift and go to state 67
    SQUARE          shift and go to state 68
    TRIANGLE        shift and go to state 69
    RECTANGLE       shift and go to state 70
    HIDE_STAR       shift and go to state 71
    SHOW_STAR       shift and go to state 72
    HAND_DOWN       shift and go to state 74
    HAND_UP         shift and go to state 75
    SETXY           shift and go to state 77
    COLOR_STAR      shift and go to state 78
    SIZE_STAR       shift and go to state 79
    GO              shift and go to state 80
    LEFT            shift and go to state 81
    RIGHT           shift and go to state 82
    BACK            shift and go to state 83
    ARC             shift and go to state 84

    graphstmt                      shift and go to state 252
    graphr1                        shift and go to state 253
    empty                          shift and go to state 254
    graphfig                       shift and go to state 56
    graphview                      shift and go to state 57
    graphmove                      shift and go to state 58
    graphfig1                      shift and go to state 64
    graphview1                     shift and go to state 65
    graphmove1                     shift and go to state 66
    graphview2                     shift and go to state 73
    graphmove2                     shift and go to state 76

state 229

    (98) funCall -> ID OPENPAREN funCall2 CLOSEPAREN .

    SEMICOLON       reduce using rule 98 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    MULTIPLICATION  reduce using rule 98 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    DIVISION        reduce using rule 98 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    ADDITION        reduce using rule 98 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 98 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    OPENBRACES      reduce using rule 98 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    COMMA           reduce using rule 98 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    GREATER         reduce using rule 98 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    LESS            reduce using rule 98 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    NOTEQUAL        reduce using rule 98 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    ISEQUAL         reduce using rule 98 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 98 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 98 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    OR              reduce using rule 98 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    AND             reduce using rule 98 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    CTEINT          reduce using rule 98 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    CTEFLOAT        reduce using rule 98 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    CTECHAR         reduce using rule 98 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    ID              reduce using rule 98 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    OPENPAREN       reduce using rule 98 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)


state 230

    (99) funCall2 -> exp funCall3 .

    CLOSEPAREN      reduce using rule 99 (funCall2 -> exp funCall3 .)


state 231

    (101) funCall3 -> COMMA . exp funCall2
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    exp                            shift and go to state 255
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 232

    (102) funCall3 -> empty .

    CLOSEPAREN      reduce using rule 102 (funCall3 -> empty .)


state 233

    (96) for -> FOR OPENPAREN ID TWODOTS . exp CLOSEPAREN body
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    exp                            shift and go to state 256
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 234

    (104) laRegla2 -> OPENPAREN exp CLOSEPAREN .

    SEMICOLON       reduce using rule 104 (laRegla2 -> OPENPAREN exp CLOSEPAREN .)


state 235

    (103) laRegla -> OPENPAREN exp COMMA . exp CLOSEPAREN
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    exp                            shift and go to state 257
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 236

    (25) function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .

    FUN             reduce using rule 25 (function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .)
    MULTIPLICATION  reduce using rule 25 (function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .)


state 237

    (29) termina_fun -> CLOSEBRACES .

    FUN             reduce using rule 29 (termina_fun -> CLOSEBRACES .)
    MULTIPLICATION  reduce using rule 29 (termina_fun -> CLOSEBRACES .)


state 238

    (33) function4 -> stmt function4 .

    CLOSEBRACES     reduce using rule 33 (function4 -> stmt function4 .)


state 239

    (35) function5 -> COMMA type . ID function3

    ID              shift and go to state 258


state 240

    (66) vcte1 -> OPENBRACKET exp CLOSEBRACKET . vcte3
    (68) vcte3 -> . OPENBRACKET exp CLOSEBRACKET
    (69) vcte3 -> . empty
    (150) empty -> .

    OPENBRACKET     shift and go to state 259
    MULTIPLICATION  reduce using rule 150 (empty -> .)
    DIVISION        reduce using rule 150 (empty -> .)
    ADDITION        reduce using rule 150 (empty -> .)
    SUBSTRACTION    reduce using rule 150 (empty -> .)
    SEMICOLON       reduce using rule 150 (empty -> .)
    OPENBRACES      reduce using rule 150 (empty -> .)
    COMMA           reduce using rule 150 (empty -> .)
    GREATER         reduce using rule 150 (empty -> .)
    LESS            reduce using rule 150 (empty -> .)
    NOTEQUAL        reduce using rule 150 (empty -> .)
    ISEQUAL         reduce using rule 150 (empty -> .)
    CLOSEPAREN      reduce using rule 150 (empty -> .)
    CLOSEBRACKET    reduce using rule 150 (empty -> .)
    OR              reduce using rule 150 (empty -> .)
    AND             reduce using rule 150 (empty -> .)
    CTEINT          reduce using rule 150 (empty -> .)
    CTEFLOAT        reduce using rule 150 (empty -> .)
    CTECHAR         reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    OPENPAREN       reduce using rule 150 (empty -> .)

    vcte3                          shift and go to state 260
    empty                          shift and go to state 261

state 241

    (77) expression1 -> loper exp .

    CLOSEPAREN      reduce using rule 77 (expression1 -> loper exp .)
    OR              reduce using rule 77 (expression1 -> loper exp .)
    AND             reduce using rule 77 (expression1 -> loper exp .)


state 242

    (42) vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .

    SEMICOLON       reduce using rule 42 (vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .)
    EQUALS          reduce using rule 42 (vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .)


state 243

    (54) assignment -> id assignment1 equals assignment3 SEMICOLON .

    IF              reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    PRINT           reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    READ            reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    REPEAT          reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    ID              reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    RETURN          reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    WHILE           reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    FOR             reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    CIRCLE          reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SQUARE          reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    TRIANGLE        reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    RECTANGLE       reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    HIDE_STAR       reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SHOW_STAR       reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    HAND_DOWN       reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    HAND_UP         reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SETXY           reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    COLOR_STAR      reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SIZE_STAR       reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    GO              reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    LEFT            reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    RIGHT           reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    BACK            reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    ARC             reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    CLOSEBRACES     reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)


state 244

    (87) condition1 -> ELSEIF head . body condition1
    (93) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 172

    body                           shift and go to state 262

state 245

    (88) condition1 -> ELSE body .

    IF              reduce using rule 88 (condition1 -> ELSE body .)
    PRINT           reduce using rule 88 (condition1 -> ELSE body .)
    READ            reduce using rule 88 (condition1 -> ELSE body .)
    REPEAT          reduce using rule 88 (condition1 -> ELSE body .)
    ID              reduce using rule 88 (condition1 -> ELSE body .)
    RETURN          reduce using rule 88 (condition1 -> ELSE body .)
    WHILE           reduce using rule 88 (condition1 -> ELSE body .)
    FOR             reduce using rule 88 (condition1 -> ELSE body .)
    CIRCLE          reduce using rule 88 (condition1 -> ELSE body .)
    SQUARE          reduce using rule 88 (condition1 -> ELSE body .)
    TRIANGLE        reduce using rule 88 (condition1 -> ELSE body .)
    RECTANGLE       reduce using rule 88 (condition1 -> ELSE body .)
    HIDE_STAR       reduce using rule 88 (condition1 -> ELSE body .)
    SHOW_STAR       reduce using rule 88 (condition1 -> ELSE body .)
    HAND_DOWN       reduce using rule 88 (condition1 -> ELSE body .)
    HAND_UP         reduce using rule 88 (condition1 -> ELSE body .)
    SETXY           reduce using rule 88 (condition1 -> ELSE body .)
    COLOR_STAR      reduce using rule 88 (condition1 -> ELSE body .)
    SIZE_STAR       reduce using rule 88 (condition1 -> ELSE body .)
    GO              reduce using rule 88 (condition1 -> ELSE body .)
    LEFT            reduce using rule 88 (condition1 -> ELSE body .)
    RIGHT           reduce using rule 88 (condition1 -> ELSE body .)
    BACK            reduce using rule 88 (condition1 -> ELSE body .)
    ARC             reduce using rule 88 (condition1 -> ELSE body .)
    CLOSEBRACES     reduce using rule 88 (condition1 -> ELSE body .)


state 246

    (93) body -> OPENBRACES body1 CLOSEBRACES .

    ELSEIF          reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSE            reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    IF              reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    PRINT           reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    READ            reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    REPEAT          reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    ID              reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    RETURN          reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    WHILE           reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    FOR             reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    CIRCLE          reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    SQUARE          reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_UP         reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    SETXY           reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    GO              reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    LEFT            reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    RIGHT           reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    BACK            reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    ARC             reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 93 (body -> OPENBRACES body1 CLOSEBRACES .)


state 247

    (94) body1 -> stmt body1 .

    CLOSEBRACES     reduce using rule 94 (body1 -> stmt body1 .)


state 248

    (83) logical -> expression logical1 expression .

    CLOSEPAREN      reduce using rule 83 (logical -> expression logical1 expression .)


state 249

    (47) print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .

    IF              reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 47 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)


state 250

    (48) read -> READ OPENPAREN id read1 CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 263


state 251

    (49) read1 -> OPENBRACKET exp . CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (50) read1 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 264


state 252

    (123) graphr1 -> graphstmt . graphr1
    (123) graphr1 -> . graphstmt graphr1
    (124) graphr1 -> . empty
    (105) graphstmt -> . graphfig
    (106) graphstmt -> . graphview
    (107) graphstmt -> . graphmove
    (150) empty -> .
    (108) graphfig -> . graphfig1 SEMICOLON
    (125) graphview -> . graphview1 SEMICOLON
    (113) graphmove -> . graphmove1 SEMICOLON
    (109) graphfig1 -> . CIRCLE laRegla2
    (110) graphfig1 -> . SQUARE laRegla2
    (111) graphfig1 -> . TRIANGLE laRegla
    (112) graphfig1 -> . RECTANGLE laRegla
    (126) graphview1 -> . HIDE_STAR
    (127) graphview1 -> . SHOW_STAR
    (128) graphview1 -> . graphview2 exp
    (114) graphmove1 -> . HAND_DOWN
    (115) graphmove1 -> . HAND_UP
    (116) graphmove1 -> . graphmove2
    (129) graphview2 -> . SETXY graphview3
    (130) graphview2 -> . COLOR_STAR
    (131) graphview2 -> . SIZE_STAR
    (117) graphmove2 -> . GO laRegla2
    (118) graphmove2 -> . LEFT laRegla2
    (119) graphmove2 -> . RIGHT laRegla2
    (120) graphmove2 -> . BACK laRegla2
    (121) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 150 (empty -> .)
    CIRCLE          shift and go to state 67
    SQUARE          shift and go to state 68
    TRIANGLE        shift and go to state 69
    RECTANGLE       shift and go to state 70
    HIDE_STAR       shift and go to state 71
    SHOW_STAR       shift and go to state 72
    HAND_DOWN       shift and go to state 74
    HAND_UP         shift and go to state 75
    SETXY           shift and go to state 77
    COLOR_STAR      shift and go to state 78
    SIZE_STAR       shift and go to state 79
    GO              shift and go to state 80
    LEFT            shift and go to state 81
    RIGHT           shift and go to state 82
    BACK            shift and go to state 83
    ARC             shift and go to state 84

    graphstmt                      shift and go to state 252
    graphr1                        shift and go to state 265
    empty                          shift and go to state 254
    graphfig                       shift and go to state 56
    graphview                      shift and go to state 57
    graphmove                      shift and go to state 58
    graphfig1                      shift and go to state 64
    graphview1                     shift and go to state 65
    graphmove1                     shift and go to state 66
    graphview2                     shift and go to state 73
    graphmove2                     shift and go to state 76

state 253

    (122) graphr -> REPEAT exp OPENBRACES graphstmt graphr1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 266


state 254

    (124) graphr1 -> empty .

    CLOSEBRACES     reduce using rule 124 (graphr1 -> empty .)


state 255

    (101) funCall3 -> COMMA exp . funCall2
    (99) funCall2 -> . exp funCall3
    (100) funCall2 -> . empty
    (134) exp -> . term exp1
    (150) empty -> .
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CLOSEPAREN      reduce using rule 150 (empty -> .)
    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    exp                            shift and go to state 181
    funCall2                       shift and go to state 267
    empty                          shift and go to state 182
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 256

    (96) for -> FOR OPENPAREN ID TWODOTS exp . CLOSEPAREN body

    CLOSEPAREN      shift and go to state 268


state 257

    (103) laRegla -> OPENPAREN exp COMMA exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 269


state 258

    (35) function5 -> COMMA type ID . function3
    (31) function3 -> . type ID function5
    (32) function3 -> . empty
    (44) type -> . INT
    (45) type -> . FLOAT
    (46) type -> . CHAR
    (150) empty -> .

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    CLOSEPAREN      reduce using rule 150 (empty -> .)

    type                           shift and go to state 88
    function3                      shift and go to state 270
    empty                          shift and go to state 89

state 259

    (68) vcte3 -> OPENBRACKET . exp CLOSEBRACKET
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    exp                            shift and go to state 271
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 260

    (66) vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .

    MULTIPLICATION  reduce using rule 66 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    DIVISION        reduce using rule 66 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ADDITION        reduce using rule 66 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    SUBSTRACTION    reduce using rule 66 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    SEMICOLON       reduce using rule 66 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    OPENBRACES      reduce using rule 66 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    COMMA           reduce using rule 66 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    GREATER         reduce using rule 66 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    LESS            reduce using rule 66 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    NOTEQUAL        reduce using rule 66 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ISEQUAL         reduce using rule 66 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CLOSEPAREN      reduce using rule 66 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CLOSEBRACKET    reduce using rule 66 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    OR              reduce using rule 66 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    AND             reduce using rule 66 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CTEINT          reduce using rule 66 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CTEFLOAT        reduce using rule 66 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CTECHAR         reduce using rule 66 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ID              reduce using rule 66 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    OPENPAREN       reduce using rule 66 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)


state 261

    (69) vcte3 -> empty .

    MULTIPLICATION  reduce using rule 69 (vcte3 -> empty .)
    DIVISION        reduce using rule 69 (vcte3 -> empty .)
    ADDITION        reduce using rule 69 (vcte3 -> empty .)
    SUBSTRACTION    reduce using rule 69 (vcte3 -> empty .)
    SEMICOLON       reduce using rule 69 (vcte3 -> empty .)
    OPENBRACES      reduce using rule 69 (vcte3 -> empty .)
    COMMA           reduce using rule 69 (vcte3 -> empty .)
    GREATER         reduce using rule 69 (vcte3 -> empty .)
    LESS            reduce using rule 69 (vcte3 -> empty .)
    NOTEQUAL        reduce using rule 69 (vcte3 -> empty .)
    ISEQUAL         reduce using rule 69 (vcte3 -> empty .)
    CLOSEPAREN      reduce using rule 69 (vcte3 -> empty .)
    CLOSEBRACKET    reduce using rule 69 (vcte3 -> empty .)
    OR              reduce using rule 69 (vcte3 -> empty .)
    AND             reduce using rule 69 (vcte3 -> empty .)
    CTEINT          reduce using rule 69 (vcte3 -> empty .)
    CTEFLOAT        reduce using rule 69 (vcte3 -> empty .)
    CTECHAR         reduce using rule 69 (vcte3 -> empty .)
    ID              reduce using rule 69 (vcte3 -> empty .)
    OPENPAREN       reduce using rule 69 (vcte3 -> empty .)


state 262

    (87) condition1 -> ELSEIF head body . condition1
    (87) condition1 -> . ELSEIF head body condition1
    (88) condition1 -> . ELSE body
    (89) condition1 -> . empty
    (150) empty -> .

    ELSEIF          shift and go to state 214
    ELSE            shift and go to state 215
    IF              reduce using rule 150 (empty -> .)
    PRINT           reduce using rule 150 (empty -> .)
    READ            reduce using rule 150 (empty -> .)
    REPEAT          reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    RETURN          reduce using rule 150 (empty -> .)
    WHILE           reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    CIRCLE          reduce using rule 150 (empty -> .)
    SQUARE          reduce using rule 150 (empty -> .)
    TRIANGLE        reduce using rule 150 (empty -> .)
    RECTANGLE       reduce using rule 150 (empty -> .)
    HIDE_STAR       reduce using rule 150 (empty -> .)
    SHOW_STAR       reduce using rule 150 (empty -> .)
    HAND_DOWN       reduce using rule 150 (empty -> .)
    HAND_UP         reduce using rule 150 (empty -> .)
    SETXY           reduce using rule 150 (empty -> .)
    COLOR_STAR      reduce using rule 150 (empty -> .)
    SIZE_STAR       reduce using rule 150 (empty -> .)
    GO              reduce using rule 150 (empty -> .)
    LEFT            reduce using rule 150 (empty -> .)
    RIGHT           reduce using rule 150 (empty -> .)
    BACK            reduce using rule 150 (empty -> .)
    ARC             reduce using rule 150 (empty -> .)
    CLOSEBRACES     reduce using rule 150 (empty -> .)

    condition1                     shift and go to state 272
    empty                          shift and go to state 216

state 263

    (48) read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .

    IF              reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 48 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)


state 264

    (49) read1 -> OPENBRACKET exp CLOSEBRACKET . OPENBRACKET exp CLOSEBRACKET
    (50) read1 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     shift and go to state 273
    CLOSEPAREN      reduce using rule 50 (read1 -> OPENBRACKET exp CLOSEBRACKET .)


state 265

    (123) graphr1 -> graphstmt graphr1 .

    CLOSEBRACES     reduce using rule 123 (graphr1 -> graphstmt graphr1 .)


state 266

    (122) graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .

    IF              reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    PRINT           reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    READ            reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    REPEAT          reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    ID              reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RETURN          reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    WHILE           reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    FOR             reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    CIRCLE          reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SQUARE          reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HAND_UP         reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SETXY           reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    GO              reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    LEFT            reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RIGHT           reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    BACK            reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    ARC             reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 122 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)


state 267

    (101) funCall3 -> COMMA exp funCall2 .

    CLOSEPAREN      reduce using rule 101 (funCall3 -> COMMA exp funCall2 .)


state 268

    (96) for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN . body
    (93) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 172

    body                           shift and go to state 274

state 269

    (103) laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .

    SEMICOLON       reduce using rule 103 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    CTEINT          reduce using rule 103 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    CTEFLOAT        reduce using rule 103 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    CTECHAR         reduce using rule 103 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    ID              reduce using rule 103 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    ADDITION        reduce using rule 103 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 103 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    OPENPAREN       reduce using rule 103 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)


state 270

    (35) function5 -> COMMA type ID function3 .

    CLOSEPAREN      reduce using rule 35 (function5 -> COMMA type ID function3 .)


state 271

    (68) vcte3 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 275


state 272

    (87) condition1 -> ELSEIF head body condition1 .

    IF              reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)
    PRINT           reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)
    READ            reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)
    REPEAT          reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)
    ID              reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)
    RETURN          reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)
    WHILE           reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)
    FOR             reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)
    CIRCLE          reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)
    SQUARE          reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)
    TRIANGLE        reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)
    RECTANGLE       reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)
    HIDE_STAR       reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)
    SHOW_STAR       reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)
    HAND_DOWN       reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)
    HAND_UP         reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)
    SETXY           reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)
    COLOR_STAR      reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)
    SIZE_STAR       reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)
    GO              reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)
    LEFT            reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)
    RIGHT           reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)
    BACK            reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)
    ARC             reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)
    CLOSEBRACES     reduce using rule 87 (condition1 -> ELSEIF head body condition1 .)


state 273

    (49) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET . exp CLOSEBRACKET
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (61) vcte -> . cte_int
    (62) vcte -> . cte_float
    (63) vcte -> . cte_char
    (64) vcte -> . id vcte1
    (65) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (70) cte_int -> . CTEINT
    (71) cte_float -> . CTEFLOAT
    (72) cte_char -> . CTECHAR
    (53) id -> . ID
    (98) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 103
    CTEFLOAT        shift and go to state 104
    CTECHAR         shift and go to state 105
    ID              shift and go to state 90
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    OPENPAREN       shift and go to state 106

    exp                            shift and go to state 276
    term                           shift and go to state 92
    factor                         shift and go to state 93
    vcte                           shift and go to state 94
    factor1                        shift and go to state 95
    cte_int                        shift and go to state 96
    cte_float                      shift and go to state 97
    cte_char                       shift and go to state 98
    id                             shift and go to state 99
    funCall                        shift and go to state 100
    factor2                        shift and go to state 101
    openP                          shift and go to state 102

state 274

    (96) for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .

    IF              reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    PRINT           reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    READ            reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    REPEAT          reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    ID              reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    RETURN          reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    WHILE           reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    FOR             reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    CIRCLE          reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SQUARE          reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    TRIANGLE        reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    RECTANGLE       reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    HIDE_STAR       reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SHOW_STAR       reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    HAND_DOWN       reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    HAND_UP         reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SETXY           reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    COLOR_STAR      reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SIZE_STAR       reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    GO              reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    LEFT            reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    RIGHT           reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    BACK            reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    ARC             reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    CLOSEBRACES     reduce using rule 96 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)


state 275

    (68) vcte3 -> OPENBRACKET exp CLOSEBRACKET .

    MULTIPLICATION  reduce using rule 68 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    DIVISION        reduce using rule 68 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ADDITION        reduce using rule 68 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    SUBSTRACTION    reduce using rule 68 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    SEMICOLON       reduce using rule 68 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    OPENBRACES      reduce using rule 68 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    COMMA           reduce using rule 68 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    GREATER         reduce using rule 68 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    LESS            reduce using rule 68 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 68 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ISEQUAL         reduce using rule 68 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 68 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 68 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    OR              reduce using rule 68 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    AND             reduce using rule 68 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CTEINT          reduce using rule 68 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CTEFLOAT        reduce using rule 68 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CTECHAR         reduce using rule 68 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ID              reduce using rule 68 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    OPENPAREN       reduce using rule 68 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)


state 276

    (49) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 277


state 277

    (49) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .

    CLOSEPAREN      reduce using rule 49 (read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OPENPAREN in state 90 resolved as shift
WARNING: shift/reduce conflict for ADDITION in state 92 resolved as shift
WARNING: shift/reduce conflict for SUBSTRACTION in state 92 resolved as shift
WARNING: shift/reduce conflict for CTEINT in state 141 resolved as shift
WARNING: shift/reduce conflict for CTEFLOAT in state 141 resolved as shift
WARNING: shift/reduce conflict for CTECHAR in state 141 resolved as shift
WARNING: shift/reduce conflict for ID in state 141 resolved as shift
WARNING: shift/reduce conflict for ADDITION in state 141 resolved as shift
WARNING: shift/reduce conflict for SUBSTRACTION in state 141 resolved as shift
WARNING: shift/reduce conflict for OPENPAREN in state 141 resolved as shift
WARNING: reduce/reduce conflict in state 114 resolved using rule (assignment1 -> assignment2)
WARNING: rejected rule (empty -> <empty>) in state 114
WARNING: reduce/reduce conflict in state 124 resolved using rule (return1 -> vcte)
WARNING: rejected rule (factor -> vcte) in state 124
