Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    SIMPLEQUOTES

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON program1 program2 star
Rule 2     program1 -> vars
Rule 3     program1 -> empty
Rule 4     program2 -> function program2
Rule 5     program2 -> empty
Rule 6     star -> MULTIPLICATION OPENBRACES star2 star1 CLOSEBRACES
Rule 7     star1 -> stmt star1
Rule 8     star1 -> empty
Rule 9     star2 -> vars
Rule 10    star2 -> empty
Rule 11    loop -> while
Rule 12    loop -> for
Rule 13    stmt -> assignment
Rule 14    stmt -> condition
Rule 15    stmt -> print
Rule 16    stmt -> loop
Rule 17    stmt -> read
Rule 18    stmt -> graphstmt
Rule 19    stmt -> graphr
Rule 20    stmt -> funCall
Rule 21    stmt -> return
Rule 22    vars -> VARS type ID vars1 SEMICOLON
Rule 23    vars1 -> EQUALS exp vars2
Rule 24    vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3
Rule 25    vars1 -> empty vars2
Rule 26    vars2 -> COMMA ID vars1
Rule 27    vars2 -> COMMA vars4
Rule 28    vars2 -> empty
Rule 29    vars3 -> OPENBRACKET CTEINT CLOSEBRACKET
Rule 30    vars3 -> empty
Rule 31    vars4 -> type ID vars1
Rule 32    vars4 -> empty
Rule 33    type -> INT
Rule 34    type -> FLOAT
Rule 35    type -> CHAR
Rule 36    print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
Rule 37    read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
Rule 38    read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
Rule 39    read1 -> OPENBRACKET exp CLOSEBRACKET
Rule 40    read1 -> empty
Rule 41    assignment -> ID assignment1 EQUALS assignment3 SEMICOLON
Rule 42    assignment1 -> assignment2
Rule 43    assignment1 -> assignment2 assignment1
Rule 44    assignment1 -> empty
Rule 45    assignment2 -> OPENBRACKET exp CLOSEBRACKET
Rule 46    assignment3 -> exp
Rule 47    assignment3 -> read
Rule 48    vcte -> cte
Rule 49    vcte -> ID vcte1
Rule 50    vcte -> funCall
Rule 51    vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3
Rule 52    vcte1 -> empty
Rule 53    vcte3 -> OPENBRACKET exp CLOSEBRACKET
Rule 54    vcte3 -> empty
Rule 55    cte -> CTEINT
Rule 56    cte -> CTEFLOAT
Rule 57    cte -> CTECHAR
Rule 58    return -> RETURN return1 SEMICOLON
Rule 59    return1 -> vcte
Rule 60    return1 -> exp
Rule 61    expression -> exp expression1
Rule 62    expression1 -> loper exp
Rule 63    expression1 -> empty
Rule 64    loper -> GREATER
Rule 65    loper -> LESS
Rule 66    loper -> NOTEQUAL
Rule 67    loper -> ISEQUAL
Rule 68    logical -> expression logical1 expression
Rule 69    logical1 -> OR
Rule 70    logical1 -> AND
Rule 71    condition -> IF head body condition1
Rule 72    condition1 -> ELSEIF head body condition1
Rule 73    condition1 -> ELSE body
Rule 74    condition1 -> empty
Rule 75    head -> OPENPAREN head1 CLOSEPAREN
Rule 76    head1 -> expression
Rule 77    head1 -> logical
Rule 78    body -> OPENBRACES body1 CLOSEBRACES
Rule 79    body1 -> stmt body1
Rule 80    body1 -> empty
Rule 81    for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
Rule 82    while -> WHILE head body
Rule 83    funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
Rule 84    funCall2 -> exp funCall3
Rule 85    funCall2 -> empty
Rule 86    funCall3 -> COMMA exp funCall2
Rule 87    funCall3 -> empty
Rule 88    function -> FUN function1 ID function2 OPENBRACES function6 function4 CLOSEBRACES
Rule 89    function1 -> type
Rule 90    function1 -> VOID
Rule 91    function2 -> OPENPAREN function3 CLOSEPAREN
Rule 92    function3 -> type ID function5
Rule 93    function3 -> empty
Rule 94    function4 -> stmt function4
Rule 95    function4 -> empty
Rule 96    function5 -> COMMA type ID function3
Rule 97    function6 -> vars
Rule 98    function6 -> empty
Rule 99    laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN
Rule 100   laRegla2 -> OPENPAREN exp CLOSEPAREN
Rule 101   graphstmt -> graphfig
Rule 102   graphstmt -> graphview
Rule 103   graphstmt -> graphmove
Rule 104   graphfig -> graphfig1 SEMICOLON
Rule 105   graphfig1 -> CIRCLE laRegla2
Rule 106   graphfig1 -> SQUARE laRegla2
Rule 107   graphfig1 -> TRIANGLE laRegla
Rule 108   graphfig1 -> RECTANGLE laRegla
Rule 109   graphmove -> graphmove1 SEMICOLON
Rule 110   graphmove1 -> HAND_DOWN
Rule 111   graphmove1 -> HAND_UP
Rule 112   graphmove1 -> graphmove2
Rule 113   graphmove2 -> GO laRegla2
Rule 114   graphmove2 -> LEFT laRegla2
Rule 115   graphmove2 -> RIGHT laRegla2
Rule 116   graphmove2 -> BACK laRegla2
Rule 117   graphmove2 -> ARC laRegla
Rule 118   graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
Rule 119   graphr1 -> graphstmt graphr1
Rule 120   graphr1 -> empty
Rule 121   graphview -> graphview1 SEMICOLON
Rule 122   graphview1 -> HIDE_STAR
Rule 123   graphview1 -> SHOW_STAR
Rule 124   graphview1 -> graphview2 exp
Rule 125   graphview2 -> SETXY graphview3
Rule 126   graphview2 -> COLOR_STAR
Rule 127   graphview2 -> SIZE_STAR
Rule 128   graphview3 -> exp COMMA
Rule 129   graphview3 -> laRegla
Rule 130   exp -> term exp1
Rule 131   exp1 -> ADDITION exp
Rule 132   exp1 -> SUBSTRACTION exp
Rule 133   exp1 -> empty
Rule 134   factor -> vcte
Rule 135   factor -> factor1
Rule 136   factor1 -> factor2 vcte
Rule 137   factor1 -> OPENPAREN expression CLOSEPAREN
Rule 138   factor2 -> ADDITION
Rule 139   factor2 -> SUBSTRACTION
Rule 140   term -> factor term1
Rule 141   term1 -> MULTIPLICATION term
Rule 142   term1 -> DIVISION term
Rule 143   term1 -> empty
Rule 144   empty -> <empty>

Terminals, with rules where they appear

ADDITION             : 131 138
AND                  : 70
ARC                  : 117
BACK                 : 116
CHAR                 : 35
CIRCLE               : 105
CLOSEBRACES          : 6 78 88 118
CLOSEBRACKET         : 24 29 38 38 39 45 51 53
CLOSEPAREN           : 36 37 75 81 83 91 99 100 137
COLOR_STAR           : 126
COMMA                : 26 27 86 96 99 128
CTECHAR              : 57
CTEFLOAT             : 56
CTEINT               : 24 29 55
DIVISION             : 142
ELSE                 : 73
ELSEIF               : 72
EQUALS               : 23 41
FLOAT                : 34
FOR                  : 81
FUN                  : 88
GO                   : 113
GREATER              : 64
HAND_DOWN            : 110
HAND_UP              : 111
HIDE_STAR            : 122
ID                   : 1 22 26 31 37 41 49 81 83 88 92 96
IF                   : 71
INT                  : 33
ISEQUAL              : 67
LEFT                 : 114
LESS                 : 65
MULTIPLICATION       : 6 141
NOTEQUAL             : 66
OPENBRACES           : 6 78 88 118
OPENBRACKET          : 24 29 38 38 39 45 51 53
OPENPAREN            : 36 37 75 81 83 91 99 100 137
OR                   : 69
PRINT                : 36
PROGRAM              : 1
READ                 : 37
RECTANGLE            : 108
REPEAT               : 118
RETURN               : 58
RIGHT                : 115
SEMICOLON            : 1 22 36 37 41 58 83 104 109 121
SETXY                : 125
SHOW_STAR            : 123
SIMPLEQUOTES         : 
SIZE_STAR            : 127
SQUARE               : 106
SUBSTRACTION         : 132 139
TRIANGLE             : 107
TWODOTS              : 81
VARS                 : 22
VOID                 : 90
WHILE                : 82
error                : 

Nonterminals, with rules where they appear

assignment           : 13
assignment1          : 41 43
assignment2          : 42 43
assignment3          : 41
body                 : 71 72 73 81 82
body1                : 78 79
condition            : 14
condition1           : 71 72
cte                  : 48
empty                : 3 5 8 10 25 28 30 32 40 44 52 54 63 74 80 85 87 93 95 98 120 133 143
exp                  : 23 36 38 38 39 45 46 51 53 60 61 62 81 84 86 99 99 100 118 124 128 131 132
exp1                 : 130
expression           : 68 68 76 137
expression1          : 61
factor               : 140
factor1              : 135
factor2              : 136
for                  : 12
funCall              : 20 50
funCall2             : 83 86
funCall3             : 84
function             : 4
function1            : 88
function2            : 88
function3            : 91 96
function4            : 88 94
function5            : 92
function6            : 88
graphfig             : 101
graphfig1            : 104
graphmove            : 103
graphmove1           : 109
graphmove2           : 112
graphr               : 19
graphr1              : 118 119
graphstmt            : 18 118 119
graphview            : 102
graphview1           : 121
graphview2           : 124
graphview3           : 125
head                 : 71 72 82
head1                : 75
laRegla              : 107 108 117 129
laRegla2             : 105 106 113 114 115 116
logical              : 77
logical1             : 68
loop                 : 16
loper                : 62
print                : 15
program              : 0
program1             : 1
program2             : 1 4
read                 : 17 47
read1                : 37
return               : 21
return1              : 58
star                 : 1
star1                : 6 7
star2                : 6
stmt                 : 7 79 94
term                 : 130 141 142
term1                : 140
type                 : 22 31 89 92 96
vars                 : 2 9 97
vars1                : 22 26 31
vars2                : 23 25
vars3                : 24
vars4                : 27
vcte                 : 59 134 136
vcte1                : 49
vcte3                : 51
while                : 11

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON program1 program2 star

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON program1 program2 star

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON program1 program2 star

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . program1 program2 star
    (2) program1 -> . vars
    (3) program1 -> . empty
    (22) vars -> . VARS type ID vars1 SEMICOLON
    (144) empty -> .

    VARS            shift and go to state 8
    FUN             reduce using rule 144 (empty -> .)
    MULTIPLICATION  reduce using rule 144 (empty -> .)

    program1                       shift and go to state 5
    vars                           shift and go to state 6
    empty                          shift and go to state 7

state 5

    (1) program -> PROGRAM ID SEMICOLON program1 . program2 star
    (4) program2 -> . function program2
    (5) program2 -> . empty
    (88) function -> . FUN function1 ID function2 OPENBRACES function6 function4 CLOSEBRACES
    (144) empty -> .

    FUN             shift and go to state 12
    MULTIPLICATION  reduce using rule 144 (empty -> .)

    program2                       shift and go to state 9
    function                       shift and go to state 10
    empty                          shift and go to state 11

state 6

    (2) program1 -> vars .

    FUN             reduce using rule 2 (program1 -> vars .)
    MULTIPLICATION  reduce using rule 2 (program1 -> vars .)


state 7

    (3) program1 -> empty .

    FUN             reduce using rule 3 (program1 -> empty .)
    MULTIPLICATION  reduce using rule 3 (program1 -> empty .)


state 8

    (22) vars -> VARS . type ID vars1 SEMICOLON
    (33) type -> . INT
    (34) type -> . FLOAT
    (35) type -> . CHAR

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    type                           shift and go to state 13

state 9

    (1) program -> PROGRAM ID SEMICOLON program1 program2 . star
    (6) star -> . MULTIPLICATION OPENBRACES star2 star1 CLOSEBRACES

    MULTIPLICATION  shift and go to state 18

    star                           shift and go to state 17

state 10

    (4) program2 -> function . program2
    (4) program2 -> . function program2
    (5) program2 -> . empty
    (88) function -> . FUN function1 ID function2 OPENBRACES function6 function4 CLOSEBRACES
    (144) empty -> .

    FUN             shift and go to state 12
    MULTIPLICATION  reduce using rule 144 (empty -> .)

    function                       shift and go to state 10
    program2                       shift and go to state 19
    empty                          shift and go to state 11

state 11

    (5) program2 -> empty .

    MULTIPLICATION  reduce using rule 5 (program2 -> empty .)


state 12

    (88) function -> FUN . function1 ID function2 OPENBRACES function6 function4 CLOSEBRACES
    (89) function1 -> . type
    (90) function1 -> . VOID
    (33) type -> . INT
    (34) type -> . FLOAT
    (35) type -> . CHAR

    VOID            shift and go to state 22
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    function1                      shift and go to state 20
    type                           shift and go to state 21

state 13

    (22) vars -> VARS type . ID vars1 SEMICOLON

    ID              shift and go to state 23


state 14

    (33) type -> INT .

    ID              reduce using rule 33 (type -> INT .)


state 15

    (34) type -> FLOAT .

    ID              reduce using rule 34 (type -> FLOAT .)


state 16

    (35) type -> CHAR .

    ID              reduce using rule 35 (type -> CHAR .)


state 17

    (1) program -> PROGRAM ID SEMICOLON program1 program2 star .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON program1 program2 star .)


state 18

    (6) star -> MULTIPLICATION . OPENBRACES star2 star1 CLOSEBRACES

    OPENBRACES      shift and go to state 24


state 19

    (4) program2 -> function program2 .

    MULTIPLICATION  reduce using rule 4 (program2 -> function program2 .)


state 20

    (88) function -> FUN function1 . ID function2 OPENBRACES function6 function4 CLOSEBRACES

    ID              shift and go to state 25


state 21

    (89) function1 -> type .

    ID              reduce using rule 89 (function1 -> type .)


state 22

    (90) function1 -> VOID .

    ID              reduce using rule 90 (function1 -> VOID .)


state 23

    (22) vars -> VARS type ID . vars1 SEMICOLON
    (23) vars1 -> . EQUALS exp vars2
    (24) vars1 -> . OPENBRACKET CTEINT CLOSEBRACKET vars3
    (25) vars1 -> . empty vars2
    (144) empty -> .

    EQUALS          shift and go to state 27
    OPENBRACKET     shift and go to state 28
    COMMA           reduce using rule 144 (empty -> .)
    SEMICOLON       reduce using rule 144 (empty -> .)

    vars1                          shift and go to state 26
    empty                          shift and go to state 29

state 24

    (6) star -> MULTIPLICATION OPENBRACES . star2 star1 CLOSEBRACES
    (9) star2 -> . vars
    (10) star2 -> . empty
    (22) vars -> . VARS type ID vars1 SEMICOLON
    (144) empty -> .

    VARS            shift and go to state 8
    ID              reduce using rule 144 (empty -> .)
    IF              reduce using rule 144 (empty -> .)
    PRINT           reduce using rule 144 (empty -> .)
    READ            reduce using rule 144 (empty -> .)
    REPEAT          reduce using rule 144 (empty -> .)
    RETURN          reduce using rule 144 (empty -> .)
    WHILE           reduce using rule 144 (empty -> .)
    FOR             reduce using rule 144 (empty -> .)
    CIRCLE          reduce using rule 144 (empty -> .)
    SQUARE          reduce using rule 144 (empty -> .)
    TRIANGLE        reduce using rule 144 (empty -> .)
    RECTANGLE       reduce using rule 144 (empty -> .)
    HIDE_STAR       reduce using rule 144 (empty -> .)
    SHOW_STAR       reduce using rule 144 (empty -> .)
    HAND_DOWN       reduce using rule 144 (empty -> .)
    HAND_UP         reduce using rule 144 (empty -> .)
    SETXY           reduce using rule 144 (empty -> .)
    COLOR_STAR      reduce using rule 144 (empty -> .)
    SIZE_STAR       reduce using rule 144 (empty -> .)
    GO              reduce using rule 144 (empty -> .)
    LEFT            reduce using rule 144 (empty -> .)
    RIGHT           reduce using rule 144 (empty -> .)
    BACK            reduce using rule 144 (empty -> .)
    ARC             reduce using rule 144 (empty -> .)
    CLOSEBRACES     reduce using rule 144 (empty -> .)

    star2                          shift and go to state 30
    vars                           shift and go to state 31
    empty                          shift and go to state 32

state 25

    (88) function -> FUN function1 ID . function2 OPENBRACES function6 function4 CLOSEBRACES
    (91) function2 -> . OPENPAREN function3 CLOSEPAREN

    OPENPAREN       shift and go to state 34

    function2                      shift and go to state 33

state 26

    (22) vars -> VARS type ID vars1 . SEMICOLON

    SEMICOLON       shift and go to state 35


state 27

    (23) vars1 -> EQUALS . exp vars2
    (130) exp -> . term exp1
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    exp                            shift and go to state 36
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 28

    (24) vars1 -> OPENBRACKET . CTEINT CLOSEBRACKET vars3

    CTEINT          shift and go to state 51


state 29

    (25) vars1 -> empty . vars2
    (26) vars2 -> . COMMA ID vars1
    (27) vars2 -> . COMMA vars4
    (28) vars2 -> . empty
    (144) empty -> .

    COMMA           shift and go to state 54
    SEMICOLON       reduce using rule 144 (empty -> .)

    empty                          shift and go to state 52
    vars2                          shift and go to state 53

state 30

    (6) star -> MULTIPLICATION OPENBRACES star2 . star1 CLOSEBRACES
    (7) star1 -> . stmt star1
    (8) star1 -> . empty
    (13) stmt -> . assignment
    (14) stmt -> . condition
    (15) stmt -> . print
    (16) stmt -> . loop
    (17) stmt -> . read
    (18) stmt -> . graphstmt
    (19) stmt -> . graphr
    (20) stmt -> . funCall
    (21) stmt -> . return
    (144) empty -> .
    (41) assignment -> . ID assignment1 EQUALS assignment3 SEMICOLON
    (71) condition -> . IF head body condition1
    (36) print -> . PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
    (11) loop -> . while
    (12) loop -> . for
    (37) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (101) graphstmt -> . graphfig
    (102) graphstmt -> . graphview
    (103) graphstmt -> . graphmove
    (118) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (58) return -> . RETURN return1 SEMICOLON
    (82) while -> . WHILE head body
    (81) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (104) graphfig -> . graphfig1 SEMICOLON
    (121) graphview -> . graphview1 SEMICOLON
    (109) graphmove -> . graphmove1 SEMICOLON
    (105) graphfig1 -> . CIRCLE laRegla2
    (106) graphfig1 -> . SQUARE laRegla2
    (107) graphfig1 -> . TRIANGLE laRegla
    (108) graphfig1 -> . RECTANGLE laRegla
    (122) graphview1 -> . HIDE_STAR
    (123) graphview1 -> . SHOW_STAR
    (124) graphview1 -> . graphview2 exp
    (110) graphmove1 -> . HAND_DOWN
    (111) graphmove1 -> . HAND_UP
    (112) graphmove1 -> . graphmove2
    (125) graphview2 -> . SETXY graphview3
    (126) graphview2 -> . COLOR_STAR
    (127) graphview2 -> . SIZE_STAR
    (113) graphmove2 -> . GO laRegla2
    (114) graphmove2 -> . LEFT laRegla2
    (115) graphmove2 -> . RIGHT laRegla2
    (116) graphmove2 -> . BACK laRegla2
    (117) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 144 (empty -> .)
    ID              shift and go to state 67
    IF              shift and go to state 68
    PRINT           shift and go to state 69
    READ            shift and go to state 72
    REPEAT          shift and go to state 76
    RETURN          shift and go to state 77
    WHILE           shift and go to state 78
    FOR             shift and go to state 79
    CIRCLE          shift and go to state 83
    SQUARE          shift and go to state 84
    TRIANGLE        shift and go to state 85
    RECTANGLE       shift and go to state 86
    HIDE_STAR       shift and go to state 87
    SHOW_STAR       shift and go to state 88
    HAND_DOWN       shift and go to state 90
    HAND_UP         shift and go to state 91
    SETXY           shift and go to state 93
    COLOR_STAR      shift and go to state 94
    SIZE_STAR       shift and go to state 95
    GO              shift and go to state 96
    LEFT            shift and go to state 97
    RIGHT           shift and go to state 98
    BACK            shift and go to state 99
    ARC             shift and go to state 100

    star1                          shift and go to state 55
    stmt                           shift and go to state 56
    empty                          shift and go to state 57
    assignment                     shift and go to state 58
    condition                      shift and go to state 59
    print                          shift and go to state 60
    loop                           shift and go to state 61
    read                           shift and go to state 62
    graphstmt                      shift and go to state 63
    graphr                         shift and go to state 64
    funCall                        shift and go to state 65
    return                         shift and go to state 66
    while                          shift and go to state 70
    for                            shift and go to state 71
    graphfig                       shift and go to state 73
    graphview                      shift and go to state 74
    graphmove                      shift and go to state 75
    graphfig1                      shift and go to state 80
    graphview1                     shift and go to state 81
    graphmove1                     shift and go to state 82
    graphview2                     shift and go to state 89
    graphmove2                     shift and go to state 92

state 31

    (9) star2 -> vars .

    ID              reduce using rule 9 (star2 -> vars .)
    IF              reduce using rule 9 (star2 -> vars .)
    PRINT           reduce using rule 9 (star2 -> vars .)
    READ            reduce using rule 9 (star2 -> vars .)
    REPEAT          reduce using rule 9 (star2 -> vars .)
    RETURN          reduce using rule 9 (star2 -> vars .)
    WHILE           reduce using rule 9 (star2 -> vars .)
    FOR             reduce using rule 9 (star2 -> vars .)
    CIRCLE          reduce using rule 9 (star2 -> vars .)
    SQUARE          reduce using rule 9 (star2 -> vars .)
    TRIANGLE        reduce using rule 9 (star2 -> vars .)
    RECTANGLE       reduce using rule 9 (star2 -> vars .)
    HIDE_STAR       reduce using rule 9 (star2 -> vars .)
    SHOW_STAR       reduce using rule 9 (star2 -> vars .)
    HAND_DOWN       reduce using rule 9 (star2 -> vars .)
    HAND_UP         reduce using rule 9 (star2 -> vars .)
    SETXY           reduce using rule 9 (star2 -> vars .)
    COLOR_STAR      reduce using rule 9 (star2 -> vars .)
    SIZE_STAR       reduce using rule 9 (star2 -> vars .)
    GO              reduce using rule 9 (star2 -> vars .)
    LEFT            reduce using rule 9 (star2 -> vars .)
    RIGHT           reduce using rule 9 (star2 -> vars .)
    BACK            reduce using rule 9 (star2 -> vars .)
    ARC             reduce using rule 9 (star2 -> vars .)
    CLOSEBRACES     reduce using rule 9 (star2 -> vars .)


state 32

    (10) star2 -> empty .

    ID              reduce using rule 10 (star2 -> empty .)
    IF              reduce using rule 10 (star2 -> empty .)
    PRINT           reduce using rule 10 (star2 -> empty .)
    READ            reduce using rule 10 (star2 -> empty .)
    REPEAT          reduce using rule 10 (star2 -> empty .)
    RETURN          reduce using rule 10 (star2 -> empty .)
    WHILE           reduce using rule 10 (star2 -> empty .)
    FOR             reduce using rule 10 (star2 -> empty .)
    CIRCLE          reduce using rule 10 (star2 -> empty .)
    SQUARE          reduce using rule 10 (star2 -> empty .)
    TRIANGLE        reduce using rule 10 (star2 -> empty .)
    RECTANGLE       reduce using rule 10 (star2 -> empty .)
    HIDE_STAR       reduce using rule 10 (star2 -> empty .)
    SHOW_STAR       reduce using rule 10 (star2 -> empty .)
    HAND_DOWN       reduce using rule 10 (star2 -> empty .)
    HAND_UP         reduce using rule 10 (star2 -> empty .)
    SETXY           reduce using rule 10 (star2 -> empty .)
    COLOR_STAR      reduce using rule 10 (star2 -> empty .)
    SIZE_STAR       reduce using rule 10 (star2 -> empty .)
    GO              reduce using rule 10 (star2 -> empty .)
    LEFT            reduce using rule 10 (star2 -> empty .)
    RIGHT           reduce using rule 10 (star2 -> empty .)
    BACK            reduce using rule 10 (star2 -> empty .)
    ARC             reduce using rule 10 (star2 -> empty .)
    CLOSEBRACES     reduce using rule 10 (star2 -> empty .)


state 33

    (88) function -> FUN function1 ID function2 . OPENBRACES function6 function4 CLOSEBRACES

    OPENBRACES      shift and go to state 101


state 34

    (91) function2 -> OPENPAREN . function3 CLOSEPAREN
    (92) function3 -> . type ID function5
    (93) function3 -> . empty
    (33) type -> . INT
    (34) type -> . FLOAT
    (35) type -> . CHAR
    (144) empty -> .

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    CLOSEPAREN      reduce using rule 144 (empty -> .)

    function3                      shift and go to state 102
    type                           shift and go to state 103
    empty                          shift and go to state 104

state 35

    (22) vars -> VARS type ID vars1 SEMICOLON .

    FUN             reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    MULTIPLICATION  reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    ID              reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    IF              reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    PRINT           reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    READ            reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    REPEAT          reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    RETURN          reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    WHILE           reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    FOR             reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    CIRCLE          reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    SQUARE          reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    TRIANGLE        reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    RECTANGLE       reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    HIDE_STAR       reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    SHOW_STAR       reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    HAND_DOWN       reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    HAND_UP         reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    SETXY           reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    COLOR_STAR      reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    SIZE_STAR       reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    GO              reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    LEFT            reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    RIGHT           reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    BACK            reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    ARC             reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 22 (vars -> VARS type ID vars1 SEMICOLON .)


state 36

    (23) vars1 -> EQUALS exp . vars2
    (26) vars2 -> . COMMA ID vars1
    (27) vars2 -> . COMMA vars4
    (28) vars2 -> . empty
    (144) empty -> .

    COMMA           shift and go to state 54
    SEMICOLON       reduce using rule 144 (empty -> .)

    vars2                          shift and go to state 105
    empty                          shift and go to state 52

state 37

    (130) exp -> term . exp1
    (131) exp1 -> . ADDITION exp
    (132) exp1 -> . SUBSTRACTION exp
    (133) exp1 -> . empty
    (144) empty -> .

  ! shift/reduce conflict for ADDITION resolved as shift
  ! shift/reduce conflict for SUBSTRACTION resolved as shift
    ADDITION        shift and go to state 107
    SUBSTRACTION    shift and go to state 108
    COMMA           reduce using rule 144 (empty -> .)
    SEMICOLON       reduce using rule 144 (empty -> .)
    GREATER         reduce using rule 144 (empty -> .)
    LESS            reduce using rule 144 (empty -> .)
    NOTEQUAL        reduce using rule 144 (empty -> .)
    ISEQUAL         reduce using rule 144 (empty -> .)
    CLOSEPAREN      reduce using rule 144 (empty -> .)
    OPENBRACES      reduce using rule 144 (empty -> .)
    CLOSEBRACKET    reduce using rule 144 (empty -> .)
    OR              reduce using rule 144 (empty -> .)
    AND             reduce using rule 144 (empty -> .)
    ID              reduce using rule 144 (empty -> .)
    OPENPAREN       reduce using rule 144 (empty -> .)
    CTEINT          reduce using rule 144 (empty -> .)
    CTEFLOAT        reduce using rule 144 (empty -> .)
    CTECHAR         reduce using rule 144 (empty -> .)

  ! ADDITION        [ reduce using rule 144 (empty -> .) ]
  ! SUBSTRACTION    [ reduce using rule 144 (empty -> .) ]

    exp1                           shift and go to state 106
    empty                          shift and go to state 109

state 38

    (140) term -> factor . term1
    (141) term1 -> . MULTIPLICATION term
    (142) term1 -> . DIVISION term
    (143) term1 -> . empty
    (144) empty -> .

    MULTIPLICATION  shift and go to state 111
    DIVISION        shift and go to state 112
    ADDITION        reduce using rule 144 (empty -> .)
    SUBSTRACTION    reduce using rule 144 (empty -> .)
    COMMA           reduce using rule 144 (empty -> .)
    SEMICOLON       reduce using rule 144 (empty -> .)
    GREATER         reduce using rule 144 (empty -> .)
    LESS            reduce using rule 144 (empty -> .)
    NOTEQUAL        reduce using rule 144 (empty -> .)
    ISEQUAL         reduce using rule 144 (empty -> .)
    CLOSEPAREN      reduce using rule 144 (empty -> .)
    OPENBRACES      reduce using rule 144 (empty -> .)
    CLOSEBRACKET    reduce using rule 144 (empty -> .)
    OR              reduce using rule 144 (empty -> .)
    AND             reduce using rule 144 (empty -> .)
    ID              reduce using rule 144 (empty -> .)
    OPENPAREN       reduce using rule 144 (empty -> .)
    CTEINT          reduce using rule 144 (empty -> .)
    CTEFLOAT        reduce using rule 144 (empty -> .)
    CTECHAR         reduce using rule 144 (empty -> .)

    term1                          shift and go to state 110
    empty                          shift and go to state 113

state 39

    (134) factor -> vcte .

    MULTIPLICATION  reduce using rule 134 (factor -> vcte .)
    DIVISION        reduce using rule 134 (factor -> vcte .)
    ADDITION        reduce using rule 134 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 134 (factor -> vcte .)
    COMMA           reduce using rule 134 (factor -> vcte .)
    SEMICOLON       reduce using rule 134 (factor -> vcte .)
    GREATER         reduce using rule 134 (factor -> vcte .)
    LESS            reduce using rule 134 (factor -> vcte .)
    NOTEQUAL        reduce using rule 134 (factor -> vcte .)
    ISEQUAL         reduce using rule 134 (factor -> vcte .)
    CLOSEPAREN      reduce using rule 134 (factor -> vcte .)
    OPENBRACES      reduce using rule 134 (factor -> vcte .)
    CLOSEBRACKET    reduce using rule 134 (factor -> vcte .)
    OR              reduce using rule 134 (factor -> vcte .)
    AND             reduce using rule 134 (factor -> vcte .)
    ID              reduce using rule 134 (factor -> vcte .)
    OPENPAREN       reduce using rule 134 (factor -> vcte .)
    CTEINT          reduce using rule 134 (factor -> vcte .)
    CTEFLOAT        reduce using rule 134 (factor -> vcte .)
    CTECHAR         reduce using rule 134 (factor -> vcte .)


state 40

    (135) factor -> factor1 .

    MULTIPLICATION  reduce using rule 135 (factor -> factor1 .)
    DIVISION        reduce using rule 135 (factor -> factor1 .)
    ADDITION        reduce using rule 135 (factor -> factor1 .)
    SUBSTRACTION    reduce using rule 135 (factor -> factor1 .)
    COMMA           reduce using rule 135 (factor -> factor1 .)
    SEMICOLON       reduce using rule 135 (factor -> factor1 .)
    GREATER         reduce using rule 135 (factor -> factor1 .)
    LESS            reduce using rule 135 (factor -> factor1 .)
    NOTEQUAL        reduce using rule 135 (factor -> factor1 .)
    ISEQUAL         reduce using rule 135 (factor -> factor1 .)
    CLOSEPAREN      reduce using rule 135 (factor -> factor1 .)
    OPENBRACES      reduce using rule 135 (factor -> factor1 .)
    CLOSEBRACKET    reduce using rule 135 (factor -> factor1 .)
    OR              reduce using rule 135 (factor -> factor1 .)
    AND             reduce using rule 135 (factor -> factor1 .)
    ID              reduce using rule 135 (factor -> factor1 .)
    OPENPAREN       reduce using rule 135 (factor -> factor1 .)
    CTEINT          reduce using rule 135 (factor -> factor1 .)
    CTEFLOAT        reduce using rule 135 (factor -> factor1 .)
    CTECHAR         reduce using rule 135 (factor -> factor1 .)


state 41

    (48) vcte -> cte .

    MULTIPLICATION  reduce using rule 48 (vcte -> cte .)
    DIVISION        reduce using rule 48 (vcte -> cte .)
    ADDITION        reduce using rule 48 (vcte -> cte .)
    SUBSTRACTION    reduce using rule 48 (vcte -> cte .)
    COMMA           reduce using rule 48 (vcte -> cte .)
    SEMICOLON       reduce using rule 48 (vcte -> cte .)
    GREATER         reduce using rule 48 (vcte -> cte .)
    LESS            reduce using rule 48 (vcte -> cte .)
    NOTEQUAL        reduce using rule 48 (vcte -> cte .)
    ISEQUAL         reduce using rule 48 (vcte -> cte .)
    CLOSEPAREN      reduce using rule 48 (vcte -> cte .)
    OPENBRACES      reduce using rule 48 (vcte -> cte .)
    CLOSEBRACKET    reduce using rule 48 (vcte -> cte .)
    OR              reduce using rule 48 (vcte -> cte .)
    AND             reduce using rule 48 (vcte -> cte .)
    ID              reduce using rule 48 (vcte -> cte .)
    OPENPAREN       reduce using rule 48 (vcte -> cte .)
    CTEINT          reduce using rule 48 (vcte -> cte .)
    CTEFLOAT        reduce using rule 48 (vcte -> cte .)
    CTECHAR         reduce using rule 48 (vcte -> cte .)


state 42

    (49) vcte -> ID . vcte1
    (83) funCall -> ID . OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (51) vcte1 -> . OPENBRACKET exp CLOSEBRACKET vcte3
    (52) vcte1 -> . empty
    (144) empty -> .

  ! shift/reduce conflict for OPENPAREN resolved as shift
    OPENPAREN       shift and go to state 115
    OPENBRACKET     shift and go to state 116
    MULTIPLICATION  reduce using rule 144 (empty -> .)
    DIVISION        reduce using rule 144 (empty -> .)
    ADDITION        reduce using rule 144 (empty -> .)
    SUBSTRACTION    reduce using rule 144 (empty -> .)
    COMMA           reduce using rule 144 (empty -> .)
    SEMICOLON       reduce using rule 144 (empty -> .)
    GREATER         reduce using rule 144 (empty -> .)
    LESS            reduce using rule 144 (empty -> .)
    NOTEQUAL        reduce using rule 144 (empty -> .)
    ISEQUAL         reduce using rule 144 (empty -> .)
    CLOSEPAREN      reduce using rule 144 (empty -> .)
    OPENBRACES      reduce using rule 144 (empty -> .)
    CLOSEBRACKET    reduce using rule 144 (empty -> .)
    OR              reduce using rule 144 (empty -> .)
    AND             reduce using rule 144 (empty -> .)
    ID              reduce using rule 144 (empty -> .)
    CTEINT          reduce using rule 144 (empty -> .)
    CTEFLOAT        reduce using rule 144 (empty -> .)
    CTECHAR         reduce using rule 144 (empty -> .)

  ! OPENPAREN       [ reduce using rule 144 (empty -> .) ]

    vcte1                          shift and go to state 114
    empty                          shift and go to state 117

state 43

    (50) vcte -> funCall .

    MULTIPLICATION  reduce using rule 50 (vcte -> funCall .)
    DIVISION        reduce using rule 50 (vcte -> funCall .)
    ADDITION        reduce using rule 50 (vcte -> funCall .)
    SUBSTRACTION    reduce using rule 50 (vcte -> funCall .)
    COMMA           reduce using rule 50 (vcte -> funCall .)
    SEMICOLON       reduce using rule 50 (vcte -> funCall .)
    GREATER         reduce using rule 50 (vcte -> funCall .)
    LESS            reduce using rule 50 (vcte -> funCall .)
    NOTEQUAL        reduce using rule 50 (vcte -> funCall .)
    ISEQUAL         reduce using rule 50 (vcte -> funCall .)
    CLOSEPAREN      reduce using rule 50 (vcte -> funCall .)
    OPENBRACES      reduce using rule 50 (vcte -> funCall .)
    CLOSEBRACKET    reduce using rule 50 (vcte -> funCall .)
    OR              reduce using rule 50 (vcte -> funCall .)
    AND             reduce using rule 50 (vcte -> funCall .)
    ID              reduce using rule 50 (vcte -> funCall .)
    OPENPAREN       reduce using rule 50 (vcte -> funCall .)
    CTEINT          reduce using rule 50 (vcte -> funCall .)
    CTEFLOAT        reduce using rule 50 (vcte -> funCall .)
    CTECHAR         reduce using rule 50 (vcte -> funCall .)


state 44

    (136) factor1 -> factor2 . vcte
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON

    ID              shift and go to state 42
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48

    vcte                           shift and go to state 118
    cte                            shift and go to state 41
    funCall                        shift and go to state 43

state 45

    (137) factor1 -> OPENPAREN . expression CLOSEPAREN
    (61) expression -> . exp expression1
    (130) exp -> . term exp1
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    expression                     shift and go to state 119
    exp                            shift and go to state 120
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 46

    (55) cte -> CTEINT .

    MULTIPLICATION  reduce using rule 55 (cte -> CTEINT .)
    DIVISION        reduce using rule 55 (cte -> CTEINT .)
    ADDITION        reduce using rule 55 (cte -> CTEINT .)
    SUBSTRACTION    reduce using rule 55 (cte -> CTEINT .)
    COMMA           reduce using rule 55 (cte -> CTEINT .)
    SEMICOLON       reduce using rule 55 (cte -> CTEINT .)
    GREATER         reduce using rule 55 (cte -> CTEINT .)
    LESS            reduce using rule 55 (cte -> CTEINT .)
    NOTEQUAL        reduce using rule 55 (cte -> CTEINT .)
    ISEQUAL         reduce using rule 55 (cte -> CTEINT .)
    CLOSEPAREN      reduce using rule 55 (cte -> CTEINT .)
    OPENBRACES      reduce using rule 55 (cte -> CTEINT .)
    CLOSEBRACKET    reduce using rule 55 (cte -> CTEINT .)
    OR              reduce using rule 55 (cte -> CTEINT .)
    AND             reduce using rule 55 (cte -> CTEINT .)
    ID              reduce using rule 55 (cte -> CTEINT .)
    OPENPAREN       reduce using rule 55 (cte -> CTEINT .)
    CTEINT          reduce using rule 55 (cte -> CTEINT .)
    CTEFLOAT        reduce using rule 55 (cte -> CTEINT .)
    CTECHAR         reduce using rule 55 (cte -> CTEINT .)


state 47

    (56) cte -> CTEFLOAT .

    MULTIPLICATION  reduce using rule 56 (cte -> CTEFLOAT .)
    DIVISION        reduce using rule 56 (cte -> CTEFLOAT .)
    ADDITION        reduce using rule 56 (cte -> CTEFLOAT .)
    SUBSTRACTION    reduce using rule 56 (cte -> CTEFLOAT .)
    COMMA           reduce using rule 56 (cte -> CTEFLOAT .)
    SEMICOLON       reduce using rule 56 (cte -> CTEFLOAT .)
    GREATER         reduce using rule 56 (cte -> CTEFLOAT .)
    LESS            reduce using rule 56 (cte -> CTEFLOAT .)
    NOTEQUAL        reduce using rule 56 (cte -> CTEFLOAT .)
    ISEQUAL         reduce using rule 56 (cte -> CTEFLOAT .)
    CLOSEPAREN      reduce using rule 56 (cte -> CTEFLOAT .)
    OPENBRACES      reduce using rule 56 (cte -> CTEFLOAT .)
    CLOSEBRACKET    reduce using rule 56 (cte -> CTEFLOAT .)
    OR              reduce using rule 56 (cte -> CTEFLOAT .)
    AND             reduce using rule 56 (cte -> CTEFLOAT .)
    ID              reduce using rule 56 (cte -> CTEFLOAT .)
    OPENPAREN       reduce using rule 56 (cte -> CTEFLOAT .)
    CTEINT          reduce using rule 56 (cte -> CTEFLOAT .)
    CTEFLOAT        reduce using rule 56 (cte -> CTEFLOAT .)
    CTECHAR         reduce using rule 56 (cte -> CTEFLOAT .)


state 48

    (57) cte -> CTECHAR .

    MULTIPLICATION  reduce using rule 57 (cte -> CTECHAR .)
    DIVISION        reduce using rule 57 (cte -> CTECHAR .)
    ADDITION        reduce using rule 57 (cte -> CTECHAR .)
    SUBSTRACTION    reduce using rule 57 (cte -> CTECHAR .)
    COMMA           reduce using rule 57 (cte -> CTECHAR .)
    SEMICOLON       reduce using rule 57 (cte -> CTECHAR .)
    GREATER         reduce using rule 57 (cte -> CTECHAR .)
    LESS            reduce using rule 57 (cte -> CTECHAR .)
    NOTEQUAL        reduce using rule 57 (cte -> CTECHAR .)
    ISEQUAL         reduce using rule 57 (cte -> CTECHAR .)
    CLOSEPAREN      reduce using rule 57 (cte -> CTECHAR .)
    OPENBRACES      reduce using rule 57 (cte -> CTECHAR .)
    CLOSEBRACKET    reduce using rule 57 (cte -> CTECHAR .)
    OR              reduce using rule 57 (cte -> CTECHAR .)
    AND             reduce using rule 57 (cte -> CTECHAR .)
    ID              reduce using rule 57 (cte -> CTECHAR .)
    OPENPAREN       reduce using rule 57 (cte -> CTECHAR .)
    CTEINT          reduce using rule 57 (cte -> CTECHAR .)
    CTEFLOAT        reduce using rule 57 (cte -> CTECHAR .)
    CTECHAR         reduce using rule 57 (cte -> CTECHAR .)


state 49

    (138) factor2 -> ADDITION .

    ID              reduce using rule 138 (factor2 -> ADDITION .)
    CTEINT          reduce using rule 138 (factor2 -> ADDITION .)
    CTEFLOAT        reduce using rule 138 (factor2 -> ADDITION .)
    CTECHAR         reduce using rule 138 (factor2 -> ADDITION .)


state 50

    (139) factor2 -> SUBSTRACTION .

    ID              reduce using rule 139 (factor2 -> SUBSTRACTION .)
    CTEINT          reduce using rule 139 (factor2 -> SUBSTRACTION .)
    CTEFLOAT        reduce using rule 139 (factor2 -> SUBSTRACTION .)
    CTECHAR         reduce using rule 139 (factor2 -> SUBSTRACTION .)


state 51

    (24) vars1 -> OPENBRACKET CTEINT . CLOSEBRACKET vars3

    CLOSEBRACKET    shift and go to state 121


state 52

    (28) vars2 -> empty .

    SEMICOLON       reduce using rule 28 (vars2 -> empty .)


state 53

    (25) vars1 -> empty vars2 .

    SEMICOLON       reduce using rule 25 (vars1 -> empty vars2 .)


state 54

    (26) vars2 -> COMMA . ID vars1
    (27) vars2 -> COMMA . vars4
    (31) vars4 -> . type ID vars1
    (32) vars4 -> . empty
    (33) type -> . INT
    (34) type -> . FLOAT
    (35) type -> . CHAR
    (144) empty -> .

    ID              shift and go to state 122
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    SEMICOLON       reduce using rule 144 (empty -> .)

    vars4                          shift and go to state 123
    type                           shift and go to state 124
    empty                          shift and go to state 125

state 55

    (6) star -> MULTIPLICATION OPENBRACES star2 star1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 126


state 56

    (7) star1 -> stmt . star1
    (7) star1 -> . stmt star1
    (8) star1 -> . empty
    (13) stmt -> . assignment
    (14) stmt -> . condition
    (15) stmt -> . print
    (16) stmt -> . loop
    (17) stmt -> . read
    (18) stmt -> . graphstmt
    (19) stmt -> . graphr
    (20) stmt -> . funCall
    (21) stmt -> . return
    (144) empty -> .
    (41) assignment -> . ID assignment1 EQUALS assignment3 SEMICOLON
    (71) condition -> . IF head body condition1
    (36) print -> . PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
    (11) loop -> . while
    (12) loop -> . for
    (37) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (101) graphstmt -> . graphfig
    (102) graphstmt -> . graphview
    (103) graphstmt -> . graphmove
    (118) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (58) return -> . RETURN return1 SEMICOLON
    (82) while -> . WHILE head body
    (81) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (104) graphfig -> . graphfig1 SEMICOLON
    (121) graphview -> . graphview1 SEMICOLON
    (109) graphmove -> . graphmove1 SEMICOLON
    (105) graphfig1 -> . CIRCLE laRegla2
    (106) graphfig1 -> . SQUARE laRegla2
    (107) graphfig1 -> . TRIANGLE laRegla
    (108) graphfig1 -> . RECTANGLE laRegla
    (122) graphview1 -> . HIDE_STAR
    (123) graphview1 -> . SHOW_STAR
    (124) graphview1 -> . graphview2 exp
    (110) graphmove1 -> . HAND_DOWN
    (111) graphmove1 -> . HAND_UP
    (112) graphmove1 -> . graphmove2
    (125) graphview2 -> . SETXY graphview3
    (126) graphview2 -> . COLOR_STAR
    (127) graphview2 -> . SIZE_STAR
    (113) graphmove2 -> . GO laRegla2
    (114) graphmove2 -> . LEFT laRegla2
    (115) graphmove2 -> . RIGHT laRegla2
    (116) graphmove2 -> . BACK laRegla2
    (117) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 144 (empty -> .)
    ID              shift and go to state 67
    IF              shift and go to state 68
    PRINT           shift and go to state 69
    READ            shift and go to state 72
    REPEAT          shift and go to state 76
    RETURN          shift and go to state 77
    WHILE           shift and go to state 78
    FOR             shift and go to state 79
    CIRCLE          shift and go to state 83
    SQUARE          shift and go to state 84
    TRIANGLE        shift and go to state 85
    RECTANGLE       shift and go to state 86
    HIDE_STAR       shift and go to state 87
    SHOW_STAR       shift and go to state 88
    HAND_DOWN       shift and go to state 90
    HAND_UP         shift and go to state 91
    SETXY           shift and go to state 93
    COLOR_STAR      shift and go to state 94
    SIZE_STAR       shift and go to state 95
    GO              shift and go to state 96
    LEFT            shift and go to state 97
    RIGHT           shift and go to state 98
    BACK            shift and go to state 99
    ARC             shift and go to state 100

    stmt                           shift and go to state 56
    star1                          shift and go to state 127
    empty                          shift and go to state 57
    assignment                     shift and go to state 58
    condition                      shift and go to state 59
    print                          shift and go to state 60
    loop                           shift and go to state 61
    read                           shift and go to state 62
    graphstmt                      shift and go to state 63
    graphr                         shift and go to state 64
    funCall                        shift and go to state 65
    return                         shift and go to state 66
    while                          shift and go to state 70
    for                            shift and go to state 71
    graphfig                       shift and go to state 73
    graphview                      shift and go to state 74
    graphmove                      shift and go to state 75
    graphfig1                      shift and go to state 80
    graphview1                     shift and go to state 81
    graphmove1                     shift and go to state 82
    graphview2                     shift and go to state 89
    graphmove2                     shift and go to state 92

state 57

    (8) star1 -> empty .

    CLOSEBRACES     reduce using rule 8 (star1 -> empty .)


state 58

    (13) stmt -> assignment .

    ID              reduce using rule 13 (stmt -> assignment .)
    IF              reduce using rule 13 (stmt -> assignment .)
    PRINT           reduce using rule 13 (stmt -> assignment .)
    READ            reduce using rule 13 (stmt -> assignment .)
    REPEAT          reduce using rule 13 (stmt -> assignment .)
    RETURN          reduce using rule 13 (stmt -> assignment .)
    WHILE           reduce using rule 13 (stmt -> assignment .)
    FOR             reduce using rule 13 (stmt -> assignment .)
    CIRCLE          reduce using rule 13 (stmt -> assignment .)
    SQUARE          reduce using rule 13 (stmt -> assignment .)
    TRIANGLE        reduce using rule 13 (stmt -> assignment .)
    RECTANGLE       reduce using rule 13 (stmt -> assignment .)
    HIDE_STAR       reduce using rule 13 (stmt -> assignment .)
    SHOW_STAR       reduce using rule 13 (stmt -> assignment .)
    HAND_DOWN       reduce using rule 13 (stmt -> assignment .)
    HAND_UP         reduce using rule 13 (stmt -> assignment .)
    SETXY           reduce using rule 13 (stmt -> assignment .)
    COLOR_STAR      reduce using rule 13 (stmt -> assignment .)
    SIZE_STAR       reduce using rule 13 (stmt -> assignment .)
    GO              reduce using rule 13 (stmt -> assignment .)
    LEFT            reduce using rule 13 (stmt -> assignment .)
    RIGHT           reduce using rule 13 (stmt -> assignment .)
    BACK            reduce using rule 13 (stmt -> assignment .)
    ARC             reduce using rule 13 (stmt -> assignment .)
    CLOSEBRACES     reduce using rule 13 (stmt -> assignment .)


state 59

    (14) stmt -> condition .

    ID              reduce using rule 14 (stmt -> condition .)
    IF              reduce using rule 14 (stmt -> condition .)
    PRINT           reduce using rule 14 (stmt -> condition .)
    READ            reduce using rule 14 (stmt -> condition .)
    REPEAT          reduce using rule 14 (stmt -> condition .)
    RETURN          reduce using rule 14 (stmt -> condition .)
    WHILE           reduce using rule 14 (stmt -> condition .)
    FOR             reduce using rule 14 (stmt -> condition .)
    CIRCLE          reduce using rule 14 (stmt -> condition .)
    SQUARE          reduce using rule 14 (stmt -> condition .)
    TRIANGLE        reduce using rule 14 (stmt -> condition .)
    RECTANGLE       reduce using rule 14 (stmt -> condition .)
    HIDE_STAR       reduce using rule 14 (stmt -> condition .)
    SHOW_STAR       reduce using rule 14 (stmt -> condition .)
    HAND_DOWN       reduce using rule 14 (stmt -> condition .)
    HAND_UP         reduce using rule 14 (stmt -> condition .)
    SETXY           reduce using rule 14 (stmt -> condition .)
    COLOR_STAR      reduce using rule 14 (stmt -> condition .)
    SIZE_STAR       reduce using rule 14 (stmt -> condition .)
    GO              reduce using rule 14 (stmt -> condition .)
    LEFT            reduce using rule 14 (stmt -> condition .)
    RIGHT           reduce using rule 14 (stmt -> condition .)
    BACK            reduce using rule 14 (stmt -> condition .)
    ARC             reduce using rule 14 (stmt -> condition .)
    CLOSEBRACES     reduce using rule 14 (stmt -> condition .)


state 60

    (15) stmt -> print .

    ID              reduce using rule 15 (stmt -> print .)
    IF              reduce using rule 15 (stmt -> print .)
    PRINT           reduce using rule 15 (stmt -> print .)
    READ            reduce using rule 15 (stmt -> print .)
    REPEAT          reduce using rule 15 (stmt -> print .)
    RETURN          reduce using rule 15 (stmt -> print .)
    WHILE           reduce using rule 15 (stmt -> print .)
    FOR             reduce using rule 15 (stmt -> print .)
    CIRCLE          reduce using rule 15 (stmt -> print .)
    SQUARE          reduce using rule 15 (stmt -> print .)
    TRIANGLE        reduce using rule 15 (stmt -> print .)
    RECTANGLE       reduce using rule 15 (stmt -> print .)
    HIDE_STAR       reduce using rule 15 (stmt -> print .)
    SHOW_STAR       reduce using rule 15 (stmt -> print .)
    HAND_DOWN       reduce using rule 15 (stmt -> print .)
    HAND_UP         reduce using rule 15 (stmt -> print .)
    SETXY           reduce using rule 15 (stmt -> print .)
    COLOR_STAR      reduce using rule 15 (stmt -> print .)
    SIZE_STAR       reduce using rule 15 (stmt -> print .)
    GO              reduce using rule 15 (stmt -> print .)
    LEFT            reduce using rule 15 (stmt -> print .)
    RIGHT           reduce using rule 15 (stmt -> print .)
    BACK            reduce using rule 15 (stmt -> print .)
    ARC             reduce using rule 15 (stmt -> print .)
    CLOSEBRACES     reduce using rule 15 (stmt -> print .)


state 61

    (16) stmt -> loop .

    ID              reduce using rule 16 (stmt -> loop .)
    IF              reduce using rule 16 (stmt -> loop .)
    PRINT           reduce using rule 16 (stmt -> loop .)
    READ            reduce using rule 16 (stmt -> loop .)
    REPEAT          reduce using rule 16 (stmt -> loop .)
    RETURN          reduce using rule 16 (stmt -> loop .)
    WHILE           reduce using rule 16 (stmt -> loop .)
    FOR             reduce using rule 16 (stmt -> loop .)
    CIRCLE          reduce using rule 16 (stmt -> loop .)
    SQUARE          reduce using rule 16 (stmt -> loop .)
    TRIANGLE        reduce using rule 16 (stmt -> loop .)
    RECTANGLE       reduce using rule 16 (stmt -> loop .)
    HIDE_STAR       reduce using rule 16 (stmt -> loop .)
    SHOW_STAR       reduce using rule 16 (stmt -> loop .)
    HAND_DOWN       reduce using rule 16 (stmt -> loop .)
    HAND_UP         reduce using rule 16 (stmt -> loop .)
    SETXY           reduce using rule 16 (stmt -> loop .)
    COLOR_STAR      reduce using rule 16 (stmt -> loop .)
    SIZE_STAR       reduce using rule 16 (stmt -> loop .)
    GO              reduce using rule 16 (stmt -> loop .)
    LEFT            reduce using rule 16 (stmt -> loop .)
    RIGHT           reduce using rule 16 (stmt -> loop .)
    BACK            reduce using rule 16 (stmt -> loop .)
    ARC             reduce using rule 16 (stmt -> loop .)
    CLOSEBRACES     reduce using rule 16 (stmt -> loop .)


state 62

    (17) stmt -> read .

    ID              reduce using rule 17 (stmt -> read .)
    IF              reduce using rule 17 (stmt -> read .)
    PRINT           reduce using rule 17 (stmt -> read .)
    READ            reduce using rule 17 (stmt -> read .)
    REPEAT          reduce using rule 17 (stmt -> read .)
    RETURN          reduce using rule 17 (stmt -> read .)
    WHILE           reduce using rule 17 (stmt -> read .)
    FOR             reduce using rule 17 (stmt -> read .)
    CIRCLE          reduce using rule 17 (stmt -> read .)
    SQUARE          reduce using rule 17 (stmt -> read .)
    TRIANGLE        reduce using rule 17 (stmt -> read .)
    RECTANGLE       reduce using rule 17 (stmt -> read .)
    HIDE_STAR       reduce using rule 17 (stmt -> read .)
    SHOW_STAR       reduce using rule 17 (stmt -> read .)
    HAND_DOWN       reduce using rule 17 (stmt -> read .)
    HAND_UP         reduce using rule 17 (stmt -> read .)
    SETXY           reduce using rule 17 (stmt -> read .)
    COLOR_STAR      reduce using rule 17 (stmt -> read .)
    SIZE_STAR       reduce using rule 17 (stmt -> read .)
    GO              reduce using rule 17 (stmt -> read .)
    LEFT            reduce using rule 17 (stmt -> read .)
    RIGHT           reduce using rule 17 (stmt -> read .)
    BACK            reduce using rule 17 (stmt -> read .)
    ARC             reduce using rule 17 (stmt -> read .)
    CLOSEBRACES     reduce using rule 17 (stmt -> read .)


state 63

    (18) stmt -> graphstmt .

    ID              reduce using rule 18 (stmt -> graphstmt .)
    IF              reduce using rule 18 (stmt -> graphstmt .)
    PRINT           reduce using rule 18 (stmt -> graphstmt .)
    READ            reduce using rule 18 (stmt -> graphstmt .)
    REPEAT          reduce using rule 18 (stmt -> graphstmt .)
    RETURN          reduce using rule 18 (stmt -> graphstmt .)
    WHILE           reduce using rule 18 (stmt -> graphstmt .)
    FOR             reduce using rule 18 (stmt -> graphstmt .)
    CIRCLE          reduce using rule 18 (stmt -> graphstmt .)
    SQUARE          reduce using rule 18 (stmt -> graphstmt .)
    TRIANGLE        reduce using rule 18 (stmt -> graphstmt .)
    RECTANGLE       reduce using rule 18 (stmt -> graphstmt .)
    HIDE_STAR       reduce using rule 18 (stmt -> graphstmt .)
    SHOW_STAR       reduce using rule 18 (stmt -> graphstmt .)
    HAND_DOWN       reduce using rule 18 (stmt -> graphstmt .)
    HAND_UP         reduce using rule 18 (stmt -> graphstmt .)
    SETXY           reduce using rule 18 (stmt -> graphstmt .)
    COLOR_STAR      reduce using rule 18 (stmt -> graphstmt .)
    SIZE_STAR       reduce using rule 18 (stmt -> graphstmt .)
    GO              reduce using rule 18 (stmt -> graphstmt .)
    LEFT            reduce using rule 18 (stmt -> graphstmt .)
    RIGHT           reduce using rule 18 (stmt -> graphstmt .)
    BACK            reduce using rule 18 (stmt -> graphstmt .)
    ARC             reduce using rule 18 (stmt -> graphstmt .)
    CLOSEBRACES     reduce using rule 18 (stmt -> graphstmt .)


state 64

    (19) stmt -> graphr .

    ID              reduce using rule 19 (stmt -> graphr .)
    IF              reduce using rule 19 (stmt -> graphr .)
    PRINT           reduce using rule 19 (stmt -> graphr .)
    READ            reduce using rule 19 (stmt -> graphr .)
    REPEAT          reduce using rule 19 (stmt -> graphr .)
    RETURN          reduce using rule 19 (stmt -> graphr .)
    WHILE           reduce using rule 19 (stmt -> graphr .)
    FOR             reduce using rule 19 (stmt -> graphr .)
    CIRCLE          reduce using rule 19 (stmt -> graphr .)
    SQUARE          reduce using rule 19 (stmt -> graphr .)
    TRIANGLE        reduce using rule 19 (stmt -> graphr .)
    RECTANGLE       reduce using rule 19 (stmt -> graphr .)
    HIDE_STAR       reduce using rule 19 (stmt -> graphr .)
    SHOW_STAR       reduce using rule 19 (stmt -> graphr .)
    HAND_DOWN       reduce using rule 19 (stmt -> graphr .)
    HAND_UP         reduce using rule 19 (stmt -> graphr .)
    SETXY           reduce using rule 19 (stmt -> graphr .)
    COLOR_STAR      reduce using rule 19 (stmt -> graphr .)
    SIZE_STAR       reduce using rule 19 (stmt -> graphr .)
    GO              reduce using rule 19 (stmt -> graphr .)
    LEFT            reduce using rule 19 (stmt -> graphr .)
    RIGHT           reduce using rule 19 (stmt -> graphr .)
    BACK            reduce using rule 19 (stmt -> graphr .)
    ARC             reduce using rule 19 (stmt -> graphr .)
    CLOSEBRACES     reduce using rule 19 (stmt -> graphr .)


state 65

    (20) stmt -> funCall .

    ID              reduce using rule 20 (stmt -> funCall .)
    IF              reduce using rule 20 (stmt -> funCall .)
    PRINT           reduce using rule 20 (stmt -> funCall .)
    READ            reduce using rule 20 (stmt -> funCall .)
    REPEAT          reduce using rule 20 (stmt -> funCall .)
    RETURN          reduce using rule 20 (stmt -> funCall .)
    WHILE           reduce using rule 20 (stmt -> funCall .)
    FOR             reduce using rule 20 (stmt -> funCall .)
    CIRCLE          reduce using rule 20 (stmt -> funCall .)
    SQUARE          reduce using rule 20 (stmt -> funCall .)
    TRIANGLE        reduce using rule 20 (stmt -> funCall .)
    RECTANGLE       reduce using rule 20 (stmt -> funCall .)
    HIDE_STAR       reduce using rule 20 (stmt -> funCall .)
    SHOW_STAR       reduce using rule 20 (stmt -> funCall .)
    HAND_DOWN       reduce using rule 20 (stmt -> funCall .)
    HAND_UP         reduce using rule 20 (stmt -> funCall .)
    SETXY           reduce using rule 20 (stmt -> funCall .)
    COLOR_STAR      reduce using rule 20 (stmt -> funCall .)
    SIZE_STAR       reduce using rule 20 (stmt -> funCall .)
    GO              reduce using rule 20 (stmt -> funCall .)
    LEFT            reduce using rule 20 (stmt -> funCall .)
    RIGHT           reduce using rule 20 (stmt -> funCall .)
    BACK            reduce using rule 20 (stmt -> funCall .)
    ARC             reduce using rule 20 (stmt -> funCall .)
    CLOSEBRACES     reduce using rule 20 (stmt -> funCall .)


state 66

    (21) stmt -> return .

    ID              reduce using rule 21 (stmt -> return .)
    IF              reduce using rule 21 (stmt -> return .)
    PRINT           reduce using rule 21 (stmt -> return .)
    READ            reduce using rule 21 (stmt -> return .)
    REPEAT          reduce using rule 21 (stmt -> return .)
    RETURN          reduce using rule 21 (stmt -> return .)
    WHILE           reduce using rule 21 (stmt -> return .)
    FOR             reduce using rule 21 (stmt -> return .)
    CIRCLE          reduce using rule 21 (stmt -> return .)
    SQUARE          reduce using rule 21 (stmt -> return .)
    TRIANGLE        reduce using rule 21 (stmt -> return .)
    RECTANGLE       reduce using rule 21 (stmt -> return .)
    HIDE_STAR       reduce using rule 21 (stmt -> return .)
    SHOW_STAR       reduce using rule 21 (stmt -> return .)
    HAND_DOWN       reduce using rule 21 (stmt -> return .)
    HAND_UP         reduce using rule 21 (stmt -> return .)
    SETXY           reduce using rule 21 (stmt -> return .)
    COLOR_STAR      reduce using rule 21 (stmt -> return .)
    SIZE_STAR       reduce using rule 21 (stmt -> return .)
    GO              reduce using rule 21 (stmt -> return .)
    LEFT            reduce using rule 21 (stmt -> return .)
    RIGHT           reduce using rule 21 (stmt -> return .)
    BACK            reduce using rule 21 (stmt -> return .)
    ARC             reduce using rule 21 (stmt -> return .)
    CLOSEBRACES     reduce using rule 21 (stmt -> return .)


state 67

    (41) assignment -> ID . assignment1 EQUALS assignment3 SEMICOLON
    (83) funCall -> ID . OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (42) assignment1 -> . assignment2
    (43) assignment1 -> . assignment2 assignment1
    (44) assignment1 -> . empty
    (45) assignment2 -> . OPENBRACKET exp CLOSEBRACKET
    (144) empty -> .

    OPENPAREN       shift and go to state 115
    OPENBRACKET     shift and go to state 131
    EQUALS          reduce using rule 144 (empty -> .)

    assignment1                    shift and go to state 128
    assignment2                    shift and go to state 129
    empty                          shift and go to state 130

state 68

    (71) condition -> IF . head body condition1
    (75) head -> . OPENPAREN head1 CLOSEPAREN

    OPENPAREN       shift and go to state 133

    head                           shift and go to state 132

state 69

    (36) print -> PRINT . OPENPAREN exp CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 134


state 70

    (11) loop -> while .

    ID              reduce using rule 11 (loop -> while .)
    IF              reduce using rule 11 (loop -> while .)
    PRINT           reduce using rule 11 (loop -> while .)
    READ            reduce using rule 11 (loop -> while .)
    REPEAT          reduce using rule 11 (loop -> while .)
    RETURN          reduce using rule 11 (loop -> while .)
    WHILE           reduce using rule 11 (loop -> while .)
    FOR             reduce using rule 11 (loop -> while .)
    CIRCLE          reduce using rule 11 (loop -> while .)
    SQUARE          reduce using rule 11 (loop -> while .)
    TRIANGLE        reduce using rule 11 (loop -> while .)
    RECTANGLE       reduce using rule 11 (loop -> while .)
    HIDE_STAR       reduce using rule 11 (loop -> while .)
    SHOW_STAR       reduce using rule 11 (loop -> while .)
    HAND_DOWN       reduce using rule 11 (loop -> while .)
    HAND_UP         reduce using rule 11 (loop -> while .)
    SETXY           reduce using rule 11 (loop -> while .)
    COLOR_STAR      reduce using rule 11 (loop -> while .)
    SIZE_STAR       reduce using rule 11 (loop -> while .)
    GO              reduce using rule 11 (loop -> while .)
    LEFT            reduce using rule 11 (loop -> while .)
    RIGHT           reduce using rule 11 (loop -> while .)
    BACK            reduce using rule 11 (loop -> while .)
    ARC             reduce using rule 11 (loop -> while .)
    CLOSEBRACES     reduce using rule 11 (loop -> while .)


state 71

    (12) loop -> for .

    ID              reduce using rule 12 (loop -> for .)
    IF              reduce using rule 12 (loop -> for .)
    PRINT           reduce using rule 12 (loop -> for .)
    READ            reduce using rule 12 (loop -> for .)
    REPEAT          reduce using rule 12 (loop -> for .)
    RETURN          reduce using rule 12 (loop -> for .)
    WHILE           reduce using rule 12 (loop -> for .)
    FOR             reduce using rule 12 (loop -> for .)
    CIRCLE          reduce using rule 12 (loop -> for .)
    SQUARE          reduce using rule 12 (loop -> for .)
    TRIANGLE        reduce using rule 12 (loop -> for .)
    RECTANGLE       reduce using rule 12 (loop -> for .)
    HIDE_STAR       reduce using rule 12 (loop -> for .)
    SHOW_STAR       reduce using rule 12 (loop -> for .)
    HAND_DOWN       reduce using rule 12 (loop -> for .)
    HAND_UP         reduce using rule 12 (loop -> for .)
    SETXY           reduce using rule 12 (loop -> for .)
    COLOR_STAR      reduce using rule 12 (loop -> for .)
    SIZE_STAR       reduce using rule 12 (loop -> for .)
    GO              reduce using rule 12 (loop -> for .)
    LEFT            reduce using rule 12 (loop -> for .)
    RIGHT           reduce using rule 12 (loop -> for .)
    BACK            reduce using rule 12 (loop -> for .)
    ARC             reduce using rule 12 (loop -> for .)
    CLOSEBRACES     reduce using rule 12 (loop -> for .)


state 72

    (37) read -> READ . OPENPAREN ID read1 CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 135


state 73

    (101) graphstmt -> graphfig .

    ID              reduce using rule 101 (graphstmt -> graphfig .)
    IF              reduce using rule 101 (graphstmt -> graphfig .)
    PRINT           reduce using rule 101 (graphstmt -> graphfig .)
    READ            reduce using rule 101 (graphstmt -> graphfig .)
    REPEAT          reduce using rule 101 (graphstmt -> graphfig .)
    RETURN          reduce using rule 101 (graphstmt -> graphfig .)
    WHILE           reduce using rule 101 (graphstmt -> graphfig .)
    FOR             reduce using rule 101 (graphstmt -> graphfig .)
    CIRCLE          reduce using rule 101 (graphstmt -> graphfig .)
    SQUARE          reduce using rule 101 (graphstmt -> graphfig .)
    TRIANGLE        reduce using rule 101 (graphstmt -> graphfig .)
    RECTANGLE       reduce using rule 101 (graphstmt -> graphfig .)
    HIDE_STAR       reduce using rule 101 (graphstmt -> graphfig .)
    SHOW_STAR       reduce using rule 101 (graphstmt -> graphfig .)
    HAND_DOWN       reduce using rule 101 (graphstmt -> graphfig .)
    HAND_UP         reduce using rule 101 (graphstmt -> graphfig .)
    SETXY           reduce using rule 101 (graphstmt -> graphfig .)
    COLOR_STAR      reduce using rule 101 (graphstmt -> graphfig .)
    SIZE_STAR       reduce using rule 101 (graphstmt -> graphfig .)
    GO              reduce using rule 101 (graphstmt -> graphfig .)
    LEFT            reduce using rule 101 (graphstmt -> graphfig .)
    RIGHT           reduce using rule 101 (graphstmt -> graphfig .)
    BACK            reduce using rule 101 (graphstmt -> graphfig .)
    ARC             reduce using rule 101 (graphstmt -> graphfig .)
    CLOSEBRACES     reduce using rule 101 (graphstmt -> graphfig .)


state 74

    (102) graphstmt -> graphview .

    ID              reduce using rule 102 (graphstmt -> graphview .)
    IF              reduce using rule 102 (graphstmt -> graphview .)
    PRINT           reduce using rule 102 (graphstmt -> graphview .)
    READ            reduce using rule 102 (graphstmt -> graphview .)
    REPEAT          reduce using rule 102 (graphstmt -> graphview .)
    RETURN          reduce using rule 102 (graphstmt -> graphview .)
    WHILE           reduce using rule 102 (graphstmt -> graphview .)
    FOR             reduce using rule 102 (graphstmt -> graphview .)
    CIRCLE          reduce using rule 102 (graphstmt -> graphview .)
    SQUARE          reduce using rule 102 (graphstmt -> graphview .)
    TRIANGLE        reduce using rule 102 (graphstmt -> graphview .)
    RECTANGLE       reduce using rule 102 (graphstmt -> graphview .)
    HIDE_STAR       reduce using rule 102 (graphstmt -> graphview .)
    SHOW_STAR       reduce using rule 102 (graphstmt -> graphview .)
    HAND_DOWN       reduce using rule 102 (graphstmt -> graphview .)
    HAND_UP         reduce using rule 102 (graphstmt -> graphview .)
    SETXY           reduce using rule 102 (graphstmt -> graphview .)
    COLOR_STAR      reduce using rule 102 (graphstmt -> graphview .)
    SIZE_STAR       reduce using rule 102 (graphstmt -> graphview .)
    GO              reduce using rule 102 (graphstmt -> graphview .)
    LEFT            reduce using rule 102 (graphstmt -> graphview .)
    RIGHT           reduce using rule 102 (graphstmt -> graphview .)
    BACK            reduce using rule 102 (graphstmt -> graphview .)
    ARC             reduce using rule 102 (graphstmt -> graphview .)
    CLOSEBRACES     reduce using rule 102 (graphstmt -> graphview .)


state 75

    (103) graphstmt -> graphmove .

    ID              reduce using rule 103 (graphstmt -> graphmove .)
    IF              reduce using rule 103 (graphstmt -> graphmove .)
    PRINT           reduce using rule 103 (graphstmt -> graphmove .)
    READ            reduce using rule 103 (graphstmt -> graphmove .)
    REPEAT          reduce using rule 103 (graphstmt -> graphmove .)
    RETURN          reduce using rule 103 (graphstmt -> graphmove .)
    WHILE           reduce using rule 103 (graphstmt -> graphmove .)
    FOR             reduce using rule 103 (graphstmt -> graphmove .)
    CIRCLE          reduce using rule 103 (graphstmt -> graphmove .)
    SQUARE          reduce using rule 103 (graphstmt -> graphmove .)
    TRIANGLE        reduce using rule 103 (graphstmt -> graphmove .)
    RECTANGLE       reduce using rule 103 (graphstmt -> graphmove .)
    HIDE_STAR       reduce using rule 103 (graphstmt -> graphmove .)
    SHOW_STAR       reduce using rule 103 (graphstmt -> graphmove .)
    HAND_DOWN       reduce using rule 103 (graphstmt -> graphmove .)
    HAND_UP         reduce using rule 103 (graphstmt -> graphmove .)
    SETXY           reduce using rule 103 (graphstmt -> graphmove .)
    COLOR_STAR      reduce using rule 103 (graphstmt -> graphmove .)
    SIZE_STAR       reduce using rule 103 (graphstmt -> graphmove .)
    GO              reduce using rule 103 (graphstmt -> graphmove .)
    LEFT            reduce using rule 103 (graphstmt -> graphmove .)
    RIGHT           reduce using rule 103 (graphstmt -> graphmove .)
    BACK            reduce using rule 103 (graphstmt -> graphmove .)
    ARC             reduce using rule 103 (graphstmt -> graphmove .)
    CLOSEBRACES     reduce using rule 103 (graphstmt -> graphmove .)


state 76

    (118) graphr -> REPEAT . exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (130) exp -> . term exp1
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    exp                            shift and go to state 136
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 77

    (58) return -> RETURN . return1 SEMICOLON
    (59) return1 -> . vcte
    (60) return1 -> . exp
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (130) exp -> . term exp1
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    ID              shift and go to state 42
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    OPENPAREN       shift and go to state 45
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    return1                        shift and go to state 137
    vcte                           shift and go to state 138
    exp                            shift and go to state 139
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    term                           shift and go to state 37
    factor                         shift and go to state 38
    factor1                        shift and go to state 40
    factor2                        shift and go to state 44

state 78

    (82) while -> WHILE . head body
    (75) head -> . OPENPAREN head1 CLOSEPAREN

    OPENPAREN       shift and go to state 133

    head                           shift and go to state 140

state 79

    (81) for -> FOR . OPENPAREN ID TWODOTS exp CLOSEPAREN body

    OPENPAREN       shift and go to state 141


state 80

    (104) graphfig -> graphfig1 . SEMICOLON

    SEMICOLON       shift and go to state 142


state 81

    (121) graphview -> graphview1 . SEMICOLON

    SEMICOLON       shift and go to state 143


state 82

    (109) graphmove -> graphmove1 . SEMICOLON

    SEMICOLON       shift and go to state 144


state 83

    (105) graphfig1 -> CIRCLE . laRegla2
    (100) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    laRegla2                       shift and go to state 145

state 84

    (106) graphfig1 -> SQUARE . laRegla2
    (100) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    laRegla2                       shift and go to state 147

state 85

    (107) graphfig1 -> TRIANGLE . laRegla
    (99) laRegla -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 149

    laRegla                        shift and go to state 148

state 86

    (108) graphfig1 -> RECTANGLE . laRegla
    (99) laRegla -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 149

    laRegla                        shift and go to state 150

state 87

    (122) graphview1 -> HIDE_STAR .

    SEMICOLON       reduce using rule 122 (graphview1 -> HIDE_STAR .)


state 88

    (123) graphview1 -> SHOW_STAR .

    SEMICOLON       reduce using rule 123 (graphview1 -> SHOW_STAR .)


state 89

    (124) graphview1 -> graphview2 . exp
    (130) exp -> . term exp1
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    exp                            shift and go to state 151
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 90

    (110) graphmove1 -> HAND_DOWN .

    SEMICOLON       reduce using rule 110 (graphmove1 -> HAND_DOWN .)


state 91

    (111) graphmove1 -> HAND_UP .

    SEMICOLON       reduce using rule 111 (graphmove1 -> HAND_UP .)


state 92

    (112) graphmove1 -> graphmove2 .

    SEMICOLON       reduce using rule 112 (graphmove1 -> graphmove2 .)


state 93

    (125) graphview2 -> SETXY . graphview3
    (128) graphview3 -> . exp COMMA
    (129) graphview3 -> . laRegla
    (130) exp -> . term exp1
    (99) laRegla -> . OPENPAREN exp COMMA exp CLOSEPAREN
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    OPENPAREN       shift and go to state 155
    ID              shift and go to state 42
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    graphview3                     shift and go to state 152
    exp                            shift and go to state 153
    laRegla                        shift and go to state 154
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 94

    (126) graphview2 -> COLOR_STAR .

    ID              reduce using rule 126 (graphview2 -> COLOR_STAR .)
    OPENPAREN       reduce using rule 126 (graphview2 -> COLOR_STAR .)
    CTEINT          reduce using rule 126 (graphview2 -> COLOR_STAR .)
    CTEFLOAT        reduce using rule 126 (graphview2 -> COLOR_STAR .)
    CTECHAR         reduce using rule 126 (graphview2 -> COLOR_STAR .)
    ADDITION        reduce using rule 126 (graphview2 -> COLOR_STAR .)
    SUBSTRACTION    reduce using rule 126 (graphview2 -> COLOR_STAR .)


state 95

    (127) graphview2 -> SIZE_STAR .

    ID              reduce using rule 127 (graphview2 -> SIZE_STAR .)
    OPENPAREN       reduce using rule 127 (graphview2 -> SIZE_STAR .)
    CTEINT          reduce using rule 127 (graphview2 -> SIZE_STAR .)
    CTEFLOAT        reduce using rule 127 (graphview2 -> SIZE_STAR .)
    CTECHAR         reduce using rule 127 (graphview2 -> SIZE_STAR .)
    ADDITION        reduce using rule 127 (graphview2 -> SIZE_STAR .)
    SUBSTRACTION    reduce using rule 127 (graphview2 -> SIZE_STAR .)


state 96

    (113) graphmove2 -> GO . laRegla2
    (100) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    laRegla2                       shift and go to state 156

state 97

    (114) graphmove2 -> LEFT . laRegla2
    (100) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    laRegla2                       shift and go to state 157

state 98

    (115) graphmove2 -> RIGHT . laRegla2
    (100) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    laRegla2                       shift and go to state 158

state 99

    (116) graphmove2 -> BACK . laRegla2
    (100) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    laRegla2                       shift and go to state 159

state 100

    (117) graphmove2 -> ARC . laRegla
    (99) laRegla -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 149

    laRegla                        shift and go to state 160

state 101

    (88) function -> FUN function1 ID function2 OPENBRACES . function6 function4 CLOSEBRACES
    (97) function6 -> . vars
    (98) function6 -> . empty
    (22) vars -> . VARS type ID vars1 SEMICOLON
    (144) empty -> .

    VARS            shift and go to state 8
    ID              reduce using rule 144 (empty -> .)
    IF              reduce using rule 144 (empty -> .)
    PRINT           reduce using rule 144 (empty -> .)
    READ            reduce using rule 144 (empty -> .)
    REPEAT          reduce using rule 144 (empty -> .)
    RETURN          reduce using rule 144 (empty -> .)
    WHILE           reduce using rule 144 (empty -> .)
    FOR             reduce using rule 144 (empty -> .)
    CIRCLE          reduce using rule 144 (empty -> .)
    SQUARE          reduce using rule 144 (empty -> .)
    TRIANGLE        reduce using rule 144 (empty -> .)
    RECTANGLE       reduce using rule 144 (empty -> .)
    HIDE_STAR       reduce using rule 144 (empty -> .)
    SHOW_STAR       reduce using rule 144 (empty -> .)
    HAND_DOWN       reduce using rule 144 (empty -> .)
    HAND_UP         reduce using rule 144 (empty -> .)
    SETXY           reduce using rule 144 (empty -> .)
    COLOR_STAR      reduce using rule 144 (empty -> .)
    SIZE_STAR       reduce using rule 144 (empty -> .)
    GO              reduce using rule 144 (empty -> .)
    LEFT            reduce using rule 144 (empty -> .)
    RIGHT           reduce using rule 144 (empty -> .)
    BACK            reduce using rule 144 (empty -> .)
    ARC             reduce using rule 144 (empty -> .)
    CLOSEBRACES     reduce using rule 144 (empty -> .)

    function6                      shift and go to state 161
    vars                           shift and go to state 162
    empty                          shift and go to state 163

state 102

    (91) function2 -> OPENPAREN function3 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 164


state 103

    (92) function3 -> type . ID function5

    ID              shift and go to state 165


state 104

    (93) function3 -> empty .

    CLOSEPAREN      reduce using rule 93 (function3 -> empty .)


state 105

    (23) vars1 -> EQUALS exp vars2 .

    SEMICOLON       reduce using rule 23 (vars1 -> EQUALS exp vars2 .)


state 106

    (130) exp -> term exp1 .

    COMMA           reduce using rule 130 (exp -> term exp1 .)
    SEMICOLON       reduce using rule 130 (exp -> term exp1 .)
    GREATER         reduce using rule 130 (exp -> term exp1 .)
    LESS            reduce using rule 130 (exp -> term exp1 .)
    NOTEQUAL        reduce using rule 130 (exp -> term exp1 .)
    ISEQUAL         reduce using rule 130 (exp -> term exp1 .)
    CLOSEPAREN      reduce using rule 130 (exp -> term exp1 .)
    OPENBRACES      reduce using rule 130 (exp -> term exp1 .)
    CLOSEBRACKET    reduce using rule 130 (exp -> term exp1 .)
    OR              reduce using rule 130 (exp -> term exp1 .)
    AND             reduce using rule 130 (exp -> term exp1 .)
    ID              reduce using rule 130 (exp -> term exp1 .)
    OPENPAREN       reduce using rule 130 (exp -> term exp1 .)
    CTEINT          reduce using rule 130 (exp -> term exp1 .)
    CTEFLOAT        reduce using rule 130 (exp -> term exp1 .)
    CTECHAR         reduce using rule 130 (exp -> term exp1 .)
    ADDITION        reduce using rule 130 (exp -> term exp1 .)
    SUBSTRACTION    reduce using rule 130 (exp -> term exp1 .)


state 107

    (131) exp1 -> ADDITION . exp
    (130) exp -> . term exp1
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    exp                            shift and go to state 166
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 108

    (132) exp1 -> SUBSTRACTION . exp
    (130) exp -> . term exp1
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    exp                            shift and go to state 167
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 109

    (133) exp1 -> empty .

    COMMA           reduce using rule 133 (exp1 -> empty .)
    SEMICOLON       reduce using rule 133 (exp1 -> empty .)
    GREATER         reduce using rule 133 (exp1 -> empty .)
    LESS            reduce using rule 133 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 133 (exp1 -> empty .)
    ISEQUAL         reduce using rule 133 (exp1 -> empty .)
    CLOSEPAREN      reduce using rule 133 (exp1 -> empty .)
    OPENBRACES      reduce using rule 133 (exp1 -> empty .)
    CLOSEBRACKET    reduce using rule 133 (exp1 -> empty .)
    OR              reduce using rule 133 (exp1 -> empty .)
    AND             reduce using rule 133 (exp1 -> empty .)
    ID              reduce using rule 133 (exp1 -> empty .)
    OPENPAREN       reduce using rule 133 (exp1 -> empty .)
    CTEINT          reduce using rule 133 (exp1 -> empty .)
    CTEFLOAT        reduce using rule 133 (exp1 -> empty .)
    CTECHAR         reduce using rule 133 (exp1 -> empty .)
    ADDITION        reduce using rule 133 (exp1 -> empty .)
    SUBSTRACTION    reduce using rule 133 (exp1 -> empty .)


state 110

    (140) term -> factor term1 .

    ADDITION        reduce using rule 140 (term -> factor term1 .)
    SUBSTRACTION    reduce using rule 140 (term -> factor term1 .)
    COMMA           reduce using rule 140 (term -> factor term1 .)
    SEMICOLON       reduce using rule 140 (term -> factor term1 .)
    GREATER         reduce using rule 140 (term -> factor term1 .)
    LESS            reduce using rule 140 (term -> factor term1 .)
    NOTEQUAL        reduce using rule 140 (term -> factor term1 .)
    ISEQUAL         reduce using rule 140 (term -> factor term1 .)
    CLOSEPAREN      reduce using rule 140 (term -> factor term1 .)
    OPENBRACES      reduce using rule 140 (term -> factor term1 .)
    CLOSEBRACKET    reduce using rule 140 (term -> factor term1 .)
    OR              reduce using rule 140 (term -> factor term1 .)
    AND             reduce using rule 140 (term -> factor term1 .)
    ID              reduce using rule 140 (term -> factor term1 .)
    OPENPAREN       reduce using rule 140 (term -> factor term1 .)
    CTEINT          reduce using rule 140 (term -> factor term1 .)
    CTEFLOAT        reduce using rule 140 (term -> factor term1 .)
    CTECHAR         reduce using rule 140 (term -> factor term1 .)


state 111

    (141) term1 -> MULTIPLICATION . term
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    term                           shift and go to state 168
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 112

    (142) term1 -> DIVISION . term
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    term                           shift and go to state 169
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 113

    (143) term1 -> empty .

    ADDITION        reduce using rule 143 (term1 -> empty .)
    SUBSTRACTION    reduce using rule 143 (term1 -> empty .)
    COMMA           reduce using rule 143 (term1 -> empty .)
    SEMICOLON       reduce using rule 143 (term1 -> empty .)
    GREATER         reduce using rule 143 (term1 -> empty .)
    LESS            reduce using rule 143 (term1 -> empty .)
    NOTEQUAL        reduce using rule 143 (term1 -> empty .)
    ISEQUAL         reduce using rule 143 (term1 -> empty .)
    CLOSEPAREN      reduce using rule 143 (term1 -> empty .)
    OPENBRACES      reduce using rule 143 (term1 -> empty .)
    CLOSEBRACKET    reduce using rule 143 (term1 -> empty .)
    OR              reduce using rule 143 (term1 -> empty .)
    AND             reduce using rule 143 (term1 -> empty .)
    ID              reduce using rule 143 (term1 -> empty .)
    OPENPAREN       reduce using rule 143 (term1 -> empty .)
    CTEINT          reduce using rule 143 (term1 -> empty .)
    CTEFLOAT        reduce using rule 143 (term1 -> empty .)
    CTECHAR         reduce using rule 143 (term1 -> empty .)


state 114

    (49) vcte -> ID vcte1 .

    MULTIPLICATION  reduce using rule 49 (vcte -> ID vcte1 .)
    DIVISION        reduce using rule 49 (vcte -> ID vcte1 .)
    ADDITION        reduce using rule 49 (vcte -> ID vcte1 .)
    SUBSTRACTION    reduce using rule 49 (vcte -> ID vcte1 .)
    COMMA           reduce using rule 49 (vcte -> ID vcte1 .)
    SEMICOLON       reduce using rule 49 (vcte -> ID vcte1 .)
    GREATER         reduce using rule 49 (vcte -> ID vcte1 .)
    LESS            reduce using rule 49 (vcte -> ID vcte1 .)
    NOTEQUAL        reduce using rule 49 (vcte -> ID vcte1 .)
    ISEQUAL         reduce using rule 49 (vcte -> ID vcte1 .)
    CLOSEPAREN      reduce using rule 49 (vcte -> ID vcte1 .)
    OPENBRACES      reduce using rule 49 (vcte -> ID vcte1 .)
    CLOSEBRACKET    reduce using rule 49 (vcte -> ID vcte1 .)
    OR              reduce using rule 49 (vcte -> ID vcte1 .)
    AND             reduce using rule 49 (vcte -> ID vcte1 .)
    ID              reduce using rule 49 (vcte -> ID vcte1 .)
    OPENPAREN       reduce using rule 49 (vcte -> ID vcte1 .)
    CTEINT          reduce using rule 49 (vcte -> ID vcte1 .)
    CTEFLOAT        reduce using rule 49 (vcte -> ID vcte1 .)
    CTECHAR         reduce using rule 49 (vcte -> ID vcte1 .)


state 115

    (83) funCall -> ID OPENPAREN . funCall2 CLOSEPAREN SEMICOLON
    (84) funCall2 -> . exp funCall3
    (85) funCall2 -> . empty
    (130) exp -> . term exp1
    (144) empty -> .
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    CLOSEPAREN      reduce using rule 144 (empty -> .)
    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    funCall2                       shift and go to state 170
    exp                            shift and go to state 171
    empty                          shift and go to state 172
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 116

    (51) vcte1 -> OPENBRACKET . exp CLOSEBRACKET vcte3
    (130) exp -> . term exp1
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    exp                            shift and go to state 173
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 117

    (52) vcte1 -> empty .

    MULTIPLICATION  reduce using rule 52 (vcte1 -> empty .)
    DIVISION        reduce using rule 52 (vcte1 -> empty .)
    ADDITION        reduce using rule 52 (vcte1 -> empty .)
    SUBSTRACTION    reduce using rule 52 (vcte1 -> empty .)
    COMMA           reduce using rule 52 (vcte1 -> empty .)
    SEMICOLON       reduce using rule 52 (vcte1 -> empty .)
    GREATER         reduce using rule 52 (vcte1 -> empty .)
    LESS            reduce using rule 52 (vcte1 -> empty .)
    NOTEQUAL        reduce using rule 52 (vcte1 -> empty .)
    ISEQUAL         reduce using rule 52 (vcte1 -> empty .)
    CLOSEPAREN      reduce using rule 52 (vcte1 -> empty .)
    OPENBRACES      reduce using rule 52 (vcte1 -> empty .)
    CLOSEBRACKET    reduce using rule 52 (vcte1 -> empty .)
    OR              reduce using rule 52 (vcte1 -> empty .)
    AND             reduce using rule 52 (vcte1 -> empty .)
    ID              reduce using rule 52 (vcte1 -> empty .)
    OPENPAREN       reduce using rule 52 (vcte1 -> empty .)
    CTEINT          reduce using rule 52 (vcte1 -> empty .)
    CTEFLOAT        reduce using rule 52 (vcte1 -> empty .)
    CTECHAR         reduce using rule 52 (vcte1 -> empty .)


state 118

    (136) factor1 -> factor2 vcte .

    MULTIPLICATION  reduce using rule 136 (factor1 -> factor2 vcte .)
    DIVISION        reduce using rule 136 (factor1 -> factor2 vcte .)
    ADDITION        reduce using rule 136 (factor1 -> factor2 vcte .)
    SUBSTRACTION    reduce using rule 136 (factor1 -> factor2 vcte .)
    COMMA           reduce using rule 136 (factor1 -> factor2 vcte .)
    SEMICOLON       reduce using rule 136 (factor1 -> factor2 vcte .)
    GREATER         reduce using rule 136 (factor1 -> factor2 vcte .)
    LESS            reduce using rule 136 (factor1 -> factor2 vcte .)
    NOTEQUAL        reduce using rule 136 (factor1 -> factor2 vcte .)
    ISEQUAL         reduce using rule 136 (factor1 -> factor2 vcte .)
    CLOSEPAREN      reduce using rule 136 (factor1 -> factor2 vcte .)
    OPENBRACES      reduce using rule 136 (factor1 -> factor2 vcte .)
    CLOSEBRACKET    reduce using rule 136 (factor1 -> factor2 vcte .)
    OR              reduce using rule 136 (factor1 -> factor2 vcte .)
    AND             reduce using rule 136 (factor1 -> factor2 vcte .)
    ID              reduce using rule 136 (factor1 -> factor2 vcte .)
    OPENPAREN       reduce using rule 136 (factor1 -> factor2 vcte .)
    CTEINT          reduce using rule 136 (factor1 -> factor2 vcte .)
    CTEFLOAT        reduce using rule 136 (factor1 -> factor2 vcte .)
    CTECHAR         reduce using rule 136 (factor1 -> factor2 vcte .)


state 119

    (137) factor1 -> OPENPAREN expression . CLOSEPAREN

    CLOSEPAREN      shift and go to state 174


state 120

    (61) expression -> exp . expression1
    (62) expression1 -> . loper exp
    (63) expression1 -> . empty
    (64) loper -> . GREATER
    (65) loper -> . LESS
    (66) loper -> . NOTEQUAL
    (67) loper -> . ISEQUAL
    (144) empty -> .

    GREATER         shift and go to state 178
    LESS            shift and go to state 179
    NOTEQUAL        shift and go to state 180
    ISEQUAL         shift and go to state 181
    CLOSEPAREN      reduce using rule 144 (empty -> .)
    OR              reduce using rule 144 (empty -> .)
    AND             reduce using rule 144 (empty -> .)

    expression1                    shift and go to state 175
    loper                          shift and go to state 176
    empty                          shift and go to state 177

state 121

    (24) vars1 -> OPENBRACKET CTEINT CLOSEBRACKET . vars3
    (29) vars3 -> . OPENBRACKET CTEINT CLOSEBRACKET
    (30) vars3 -> . empty
    (144) empty -> .

    OPENBRACKET     shift and go to state 182
    SEMICOLON       reduce using rule 144 (empty -> .)

    vars3                          shift and go to state 183
    empty                          shift and go to state 184

state 122

    (26) vars2 -> COMMA ID . vars1
    (23) vars1 -> . EQUALS exp vars2
    (24) vars1 -> . OPENBRACKET CTEINT CLOSEBRACKET vars3
    (25) vars1 -> . empty vars2
    (144) empty -> .

    EQUALS          shift and go to state 27
    OPENBRACKET     shift and go to state 28
    COMMA           reduce using rule 144 (empty -> .)
    SEMICOLON       reduce using rule 144 (empty -> .)

    vars1                          shift and go to state 185
    empty                          shift and go to state 29

state 123

    (27) vars2 -> COMMA vars4 .

    SEMICOLON       reduce using rule 27 (vars2 -> COMMA vars4 .)


state 124

    (31) vars4 -> type . ID vars1

    ID              shift and go to state 186


state 125

    (32) vars4 -> empty .

    SEMICOLON       reduce using rule 32 (vars4 -> empty .)


state 126

    (6) star -> MULTIPLICATION OPENBRACES star2 star1 CLOSEBRACES .

    $end            reduce using rule 6 (star -> MULTIPLICATION OPENBRACES star2 star1 CLOSEBRACES .)


state 127

    (7) star1 -> stmt star1 .

    CLOSEBRACES     reduce using rule 7 (star1 -> stmt star1 .)


state 128

    (41) assignment -> ID assignment1 . EQUALS assignment3 SEMICOLON

    EQUALS          shift and go to state 187


state 129

    (42) assignment1 -> assignment2 .
    (43) assignment1 -> assignment2 . assignment1
    (42) assignment1 -> . assignment2
    (43) assignment1 -> . assignment2 assignment1
    (44) assignment1 -> . empty
    (45) assignment2 -> . OPENBRACKET exp CLOSEBRACKET
    (144) empty -> .

  ! reduce/reduce conflict for EQUALS resolved using rule 42 (assignment1 -> assignment2 .)
    EQUALS          reduce using rule 42 (assignment1 -> assignment2 .)
    OPENBRACKET     shift and go to state 131

  ! EQUALS          [ reduce using rule 144 (empty -> .) ]

    assignment2                    shift and go to state 129
    assignment1                    shift and go to state 188
    empty                          shift and go to state 130

state 130

    (44) assignment1 -> empty .

    EQUALS          reduce using rule 44 (assignment1 -> empty .)


state 131

    (45) assignment2 -> OPENBRACKET . exp CLOSEBRACKET
    (130) exp -> . term exp1
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    exp                            shift and go to state 189
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 132

    (71) condition -> IF head . body condition1
    (78) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 191

    body                           shift and go to state 190

state 133

    (75) head -> OPENPAREN . head1 CLOSEPAREN
    (76) head1 -> . expression
    (77) head1 -> . logical
    (61) expression -> . exp expression1
    (68) logical -> . expression logical1 expression
    (130) exp -> . term exp1
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    head1                          shift and go to state 192
    expression                     shift and go to state 193
    logical                        shift and go to state 194
    exp                            shift and go to state 120
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 134

    (36) print -> PRINT OPENPAREN . exp CLOSEPAREN SEMICOLON
    (130) exp -> . term exp1
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    exp                            shift and go to state 195
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 135

    (37) read -> READ OPENPAREN . ID read1 CLOSEPAREN SEMICOLON

    ID              shift and go to state 196


state 136

    (118) graphr -> REPEAT exp . OPENBRACES graphstmt graphr1 CLOSEBRACES

    OPENBRACES      shift and go to state 197


state 137

    (58) return -> RETURN return1 . SEMICOLON

    SEMICOLON       shift and go to state 198


state 138

    (59) return1 -> vcte .
    (134) factor -> vcte .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 59 (return1 -> vcte .)
    SEMICOLON       reduce using rule 59 (return1 -> vcte .)
    MULTIPLICATION  reduce using rule 134 (factor -> vcte .)
    DIVISION        reduce using rule 134 (factor -> vcte .)
    ADDITION        reduce using rule 134 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 134 (factor -> vcte .)

  ! SEMICOLON       [ reduce using rule 134 (factor -> vcte .) ]


state 139

    (60) return1 -> exp .

    SEMICOLON       reduce using rule 60 (return1 -> exp .)


state 140

    (82) while -> WHILE head . body
    (78) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 191

    body                           shift and go to state 199

state 141

    (81) for -> FOR OPENPAREN . ID TWODOTS exp CLOSEPAREN body

    ID              shift and go to state 200


state 142

    (104) graphfig -> graphfig1 SEMICOLON .

    ID              reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)
    IF              reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)
    PRINT           reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)
    READ            reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)
    REPEAT          reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)
    RETURN          reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)
    WHILE           reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)
    FOR             reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)
    CIRCLE          reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)
    SQUARE          reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)
    TRIANGLE        reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)
    RECTANGLE       reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)
    HIDE_STAR       reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)
    SHOW_STAR       reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)
    HAND_DOWN       reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)
    HAND_UP         reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)
    SETXY           reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)
    COLOR_STAR      reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)
    SIZE_STAR       reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)
    GO              reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)
    LEFT            reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)
    RIGHT           reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)
    BACK            reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)
    ARC             reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 104 (graphfig -> graphfig1 SEMICOLON .)


state 143

    (121) graphview -> graphview1 SEMICOLON .

    ID              reduce using rule 121 (graphview -> graphview1 SEMICOLON .)
    IF              reduce using rule 121 (graphview -> graphview1 SEMICOLON .)
    PRINT           reduce using rule 121 (graphview -> graphview1 SEMICOLON .)
    READ            reduce using rule 121 (graphview -> graphview1 SEMICOLON .)
    REPEAT          reduce using rule 121 (graphview -> graphview1 SEMICOLON .)
    RETURN          reduce using rule 121 (graphview -> graphview1 SEMICOLON .)
    WHILE           reduce using rule 121 (graphview -> graphview1 SEMICOLON .)
    FOR             reduce using rule 121 (graphview -> graphview1 SEMICOLON .)
    CIRCLE          reduce using rule 121 (graphview -> graphview1 SEMICOLON .)
    SQUARE          reduce using rule 121 (graphview -> graphview1 SEMICOLON .)
    TRIANGLE        reduce using rule 121 (graphview -> graphview1 SEMICOLON .)
    RECTANGLE       reduce using rule 121 (graphview -> graphview1 SEMICOLON .)
    HIDE_STAR       reduce using rule 121 (graphview -> graphview1 SEMICOLON .)
    SHOW_STAR       reduce using rule 121 (graphview -> graphview1 SEMICOLON .)
    HAND_DOWN       reduce using rule 121 (graphview -> graphview1 SEMICOLON .)
    HAND_UP         reduce using rule 121 (graphview -> graphview1 SEMICOLON .)
    SETXY           reduce using rule 121 (graphview -> graphview1 SEMICOLON .)
    COLOR_STAR      reduce using rule 121 (graphview -> graphview1 SEMICOLON .)
    SIZE_STAR       reduce using rule 121 (graphview -> graphview1 SEMICOLON .)
    GO              reduce using rule 121 (graphview -> graphview1 SEMICOLON .)
    LEFT            reduce using rule 121 (graphview -> graphview1 SEMICOLON .)
    RIGHT           reduce using rule 121 (graphview -> graphview1 SEMICOLON .)
    BACK            reduce using rule 121 (graphview -> graphview1 SEMICOLON .)
    ARC             reduce using rule 121 (graphview -> graphview1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 121 (graphview -> graphview1 SEMICOLON .)


state 144

    (109) graphmove -> graphmove1 SEMICOLON .

    ID              reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)
    IF              reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)
    PRINT           reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)
    READ            reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)
    REPEAT          reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)
    RETURN          reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)
    WHILE           reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)
    FOR             reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)
    CIRCLE          reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)
    SQUARE          reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)
    TRIANGLE        reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)
    RECTANGLE       reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)
    HIDE_STAR       reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)
    SHOW_STAR       reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)
    HAND_DOWN       reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)
    HAND_UP         reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)
    SETXY           reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)
    COLOR_STAR      reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)
    SIZE_STAR       reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)
    GO              reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)
    LEFT            reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)
    RIGHT           reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)
    BACK            reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)
    ARC             reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 109 (graphmove -> graphmove1 SEMICOLON .)


state 145

    (105) graphfig1 -> CIRCLE laRegla2 .

    SEMICOLON       reduce using rule 105 (graphfig1 -> CIRCLE laRegla2 .)


state 146

    (100) laRegla2 -> OPENPAREN . exp CLOSEPAREN
    (130) exp -> . term exp1
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    exp                            shift and go to state 201
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 147

    (106) graphfig1 -> SQUARE laRegla2 .

    SEMICOLON       reduce using rule 106 (graphfig1 -> SQUARE laRegla2 .)


state 148

    (107) graphfig1 -> TRIANGLE laRegla .

    SEMICOLON       reduce using rule 107 (graphfig1 -> TRIANGLE laRegla .)


state 149

    (99) laRegla -> OPENPAREN . exp COMMA exp CLOSEPAREN
    (130) exp -> . term exp1
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    exp                            shift and go to state 202
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 150

    (108) graphfig1 -> RECTANGLE laRegla .

    SEMICOLON       reduce using rule 108 (graphfig1 -> RECTANGLE laRegla .)


state 151

    (124) graphview1 -> graphview2 exp .

    SEMICOLON       reduce using rule 124 (graphview1 -> graphview2 exp .)


state 152

    (125) graphview2 -> SETXY graphview3 .

    ID              reduce using rule 125 (graphview2 -> SETXY graphview3 .)
    OPENPAREN       reduce using rule 125 (graphview2 -> SETXY graphview3 .)
    CTEINT          reduce using rule 125 (graphview2 -> SETXY graphview3 .)
    CTEFLOAT        reduce using rule 125 (graphview2 -> SETXY graphview3 .)
    CTECHAR         reduce using rule 125 (graphview2 -> SETXY graphview3 .)
    ADDITION        reduce using rule 125 (graphview2 -> SETXY graphview3 .)
    SUBSTRACTION    reduce using rule 125 (graphview2 -> SETXY graphview3 .)


state 153

    (128) graphview3 -> exp . COMMA

    COMMA           shift and go to state 203


state 154

    (129) graphview3 -> laRegla .

    ID              reduce using rule 129 (graphview3 -> laRegla .)
    OPENPAREN       reduce using rule 129 (graphview3 -> laRegla .)
    CTEINT          reduce using rule 129 (graphview3 -> laRegla .)
    CTEFLOAT        reduce using rule 129 (graphview3 -> laRegla .)
    CTECHAR         reduce using rule 129 (graphview3 -> laRegla .)
    ADDITION        reduce using rule 129 (graphview3 -> laRegla .)
    SUBSTRACTION    reduce using rule 129 (graphview3 -> laRegla .)


state 155

    (99) laRegla -> OPENPAREN . exp COMMA exp CLOSEPAREN
    (137) factor1 -> OPENPAREN . expression CLOSEPAREN
    (130) exp -> . term exp1
    (61) expression -> . exp expression1
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    exp                            shift and go to state 204
    expression                     shift and go to state 119
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 156

    (113) graphmove2 -> GO laRegla2 .

    SEMICOLON       reduce using rule 113 (graphmove2 -> GO laRegla2 .)


state 157

    (114) graphmove2 -> LEFT laRegla2 .

    SEMICOLON       reduce using rule 114 (graphmove2 -> LEFT laRegla2 .)


state 158

    (115) graphmove2 -> RIGHT laRegla2 .

    SEMICOLON       reduce using rule 115 (graphmove2 -> RIGHT laRegla2 .)


state 159

    (116) graphmove2 -> BACK laRegla2 .

    SEMICOLON       reduce using rule 116 (graphmove2 -> BACK laRegla2 .)


state 160

    (117) graphmove2 -> ARC laRegla .

    SEMICOLON       reduce using rule 117 (graphmove2 -> ARC laRegla .)


state 161

    (88) function -> FUN function1 ID function2 OPENBRACES function6 . function4 CLOSEBRACES
    (94) function4 -> . stmt function4
    (95) function4 -> . empty
    (13) stmt -> . assignment
    (14) stmt -> . condition
    (15) stmt -> . print
    (16) stmt -> . loop
    (17) stmt -> . read
    (18) stmt -> . graphstmt
    (19) stmt -> . graphr
    (20) stmt -> . funCall
    (21) stmt -> . return
    (144) empty -> .
    (41) assignment -> . ID assignment1 EQUALS assignment3 SEMICOLON
    (71) condition -> . IF head body condition1
    (36) print -> . PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
    (11) loop -> . while
    (12) loop -> . for
    (37) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (101) graphstmt -> . graphfig
    (102) graphstmt -> . graphview
    (103) graphstmt -> . graphmove
    (118) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (58) return -> . RETURN return1 SEMICOLON
    (82) while -> . WHILE head body
    (81) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (104) graphfig -> . graphfig1 SEMICOLON
    (121) graphview -> . graphview1 SEMICOLON
    (109) graphmove -> . graphmove1 SEMICOLON
    (105) graphfig1 -> . CIRCLE laRegla2
    (106) graphfig1 -> . SQUARE laRegla2
    (107) graphfig1 -> . TRIANGLE laRegla
    (108) graphfig1 -> . RECTANGLE laRegla
    (122) graphview1 -> . HIDE_STAR
    (123) graphview1 -> . SHOW_STAR
    (124) graphview1 -> . graphview2 exp
    (110) graphmove1 -> . HAND_DOWN
    (111) graphmove1 -> . HAND_UP
    (112) graphmove1 -> . graphmove2
    (125) graphview2 -> . SETXY graphview3
    (126) graphview2 -> . COLOR_STAR
    (127) graphview2 -> . SIZE_STAR
    (113) graphmove2 -> . GO laRegla2
    (114) graphmove2 -> . LEFT laRegla2
    (115) graphmove2 -> . RIGHT laRegla2
    (116) graphmove2 -> . BACK laRegla2
    (117) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 144 (empty -> .)
    ID              shift and go to state 67
    IF              shift and go to state 68
    PRINT           shift and go to state 69
    READ            shift and go to state 72
    REPEAT          shift and go to state 76
    RETURN          shift and go to state 77
    WHILE           shift and go to state 78
    FOR             shift and go to state 79
    CIRCLE          shift and go to state 83
    SQUARE          shift and go to state 84
    TRIANGLE        shift and go to state 85
    RECTANGLE       shift and go to state 86
    HIDE_STAR       shift and go to state 87
    SHOW_STAR       shift and go to state 88
    HAND_DOWN       shift and go to state 90
    HAND_UP         shift and go to state 91
    SETXY           shift and go to state 93
    COLOR_STAR      shift and go to state 94
    SIZE_STAR       shift and go to state 95
    GO              shift and go to state 96
    LEFT            shift and go to state 97
    RIGHT           shift and go to state 98
    BACK            shift and go to state 99
    ARC             shift and go to state 100

    function4                      shift and go to state 205
    stmt                           shift and go to state 206
    empty                          shift and go to state 207
    assignment                     shift and go to state 58
    condition                      shift and go to state 59
    print                          shift and go to state 60
    loop                           shift and go to state 61
    read                           shift and go to state 62
    graphstmt                      shift and go to state 63
    graphr                         shift and go to state 64
    funCall                        shift and go to state 65
    return                         shift and go to state 66
    while                          shift and go to state 70
    for                            shift and go to state 71
    graphfig                       shift and go to state 73
    graphview                      shift and go to state 74
    graphmove                      shift and go to state 75
    graphfig1                      shift and go to state 80
    graphview1                     shift and go to state 81
    graphmove1                     shift and go to state 82
    graphview2                     shift and go to state 89
    graphmove2                     shift and go to state 92

state 162

    (97) function6 -> vars .

    ID              reduce using rule 97 (function6 -> vars .)
    IF              reduce using rule 97 (function6 -> vars .)
    PRINT           reduce using rule 97 (function6 -> vars .)
    READ            reduce using rule 97 (function6 -> vars .)
    REPEAT          reduce using rule 97 (function6 -> vars .)
    RETURN          reduce using rule 97 (function6 -> vars .)
    WHILE           reduce using rule 97 (function6 -> vars .)
    FOR             reduce using rule 97 (function6 -> vars .)
    CIRCLE          reduce using rule 97 (function6 -> vars .)
    SQUARE          reduce using rule 97 (function6 -> vars .)
    TRIANGLE        reduce using rule 97 (function6 -> vars .)
    RECTANGLE       reduce using rule 97 (function6 -> vars .)
    HIDE_STAR       reduce using rule 97 (function6 -> vars .)
    SHOW_STAR       reduce using rule 97 (function6 -> vars .)
    HAND_DOWN       reduce using rule 97 (function6 -> vars .)
    HAND_UP         reduce using rule 97 (function6 -> vars .)
    SETXY           reduce using rule 97 (function6 -> vars .)
    COLOR_STAR      reduce using rule 97 (function6 -> vars .)
    SIZE_STAR       reduce using rule 97 (function6 -> vars .)
    GO              reduce using rule 97 (function6 -> vars .)
    LEFT            reduce using rule 97 (function6 -> vars .)
    RIGHT           reduce using rule 97 (function6 -> vars .)
    BACK            reduce using rule 97 (function6 -> vars .)
    ARC             reduce using rule 97 (function6 -> vars .)
    CLOSEBRACES     reduce using rule 97 (function6 -> vars .)


state 163

    (98) function6 -> empty .

    ID              reduce using rule 98 (function6 -> empty .)
    IF              reduce using rule 98 (function6 -> empty .)
    PRINT           reduce using rule 98 (function6 -> empty .)
    READ            reduce using rule 98 (function6 -> empty .)
    REPEAT          reduce using rule 98 (function6 -> empty .)
    RETURN          reduce using rule 98 (function6 -> empty .)
    WHILE           reduce using rule 98 (function6 -> empty .)
    FOR             reduce using rule 98 (function6 -> empty .)
    CIRCLE          reduce using rule 98 (function6 -> empty .)
    SQUARE          reduce using rule 98 (function6 -> empty .)
    TRIANGLE        reduce using rule 98 (function6 -> empty .)
    RECTANGLE       reduce using rule 98 (function6 -> empty .)
    HIDE_STAR       reduce using rule 98 (function6 -> empty .)
    SHOW_STAR       reduce using rule 98 (function6 -> empty .)
    HAND_DOWN       reduce using rule 98 (function6 -> empty .)
    HAND_UP         reduce using rule 98 (function6 -> empty .)
    SETXY           reduce using rule 98 (function6 -> empty .)
    COLOR_STAR      reduce using rule 98 (function6 -> empty .)
    SIZE_STAR       reduce using rule 98 (function6 -> empty .)
    GO              reduce using rule 98 (function6 -> empty .)
    LEFT            reduce using rule 98 (function6 -> empty .)
    RIGHT           reduce using rule 98 (function6 -> empty .)
    BACK            reduce using rule 98 (function6 -> empty .)
    ARC             reduce using rule 98 (function6 -> empty .)
    CLOSEBRACES     reduce using rule 98 (function6 -> empty .)


state 164

    (91) function2 -> OPENPAREN function3 CLOSEPAREN .

    OPENBRACES      reduce using rule 91 (function2 -> OPENPAREN function3 CLOSEPAREN .)


state 165

    (92) function3 -> type ID . function5
    (96) function5 -> . COMMA type ID function3

    COMMA           shift and go to state 209

    function5                      shift and go to state 208

state 166

    (131) exp1 -> ADDITION exp .

    COMMA           reduce using rule 131 (exp1 -> ADDITION exp .)
    SEMICOLON       reduce using rule 131 (exp1 -> ADDITION exp .)
    GREATER         reduce using rule 131 (exp1 -> ADDITION exp .)
    LESS            reduce using rule 131 (exp1 -> ADDITION exp .)
    NOTEQUAL        reduce using rule 131 (exp1 -> ADDITION exp .)
    ISEQUAL         reduce using rule 131 (exp1 -> ADDITION exp .)
    CLOSEPAREN      reduce using rule 131 (exp1 -> ADDITION exp .)
    OPENBRACES      reduce using rule 131 (exp1 -> ADDITION exp .)
    CLOSEBRACKET    reduce using rule 131 (exp1 -> ADDITION exp .)
    OR              reduce using rule 131 (exp1 -> ADDITION exp .)
    AND             reduce using rule 131 (exp1 -> ADDITION exp .)
    ID              reduce using rule 131 (exp1 -> ADDITION exp .)
    OPENPAREN       reduce using rule 131 (exp1 -> ADDITION exp .)
    CTEINT          reduce using rule 131 (exp1 -> ADDITION exp .)
    CTEFLOAT        reduce using rule 131 (exp1 -> ADDITION exp .)
    CTECHAR         reduce using rule 131 (exp1 -> ADDITION exp .)
    ADDITION        reduce using rule 131 (exp1 -> ADDITION exp .)
    SUBSTRACTION    reduce using rule 131 (exp1 -> ADDITION exp .)


state 167

    (132) exp1 -> SUBSTRACTION exp .

    COMMA           reduce using rule 132 (exp1 -> SUBSTRACTION exp .)
    SEMICOLON       reduce using rule 132 (exp1 -> SUBSTRACTION exp .)
    GREATER         reduce using rule 132 (exp1 -> SUBSTRACTION exp .)
    LESS            reduce using rule 132 (exp1 -> SUBSTRACTION exp .)
    NOTEQUAL        reduce using rule 132 (exp1 -> SUBSTRACTION exp .)
    ISEQUAL         reduce using rule 132 (exp1 -> SUBSTRACTION exp .)
    CLOSEPAREN      reduce using rule 132 (exp1 -> SUBSTRACTION exp .)
    OPENBRACES      reduce using rule 132 (exp1 -> SUBSTRACTION exp .)
    CLOSEBRACKET    reduce using rule 132 (exp1 -> SUBSTRACTION exp .)
    OR              reduce using rule 132 (exp1 -> SUBSTRACTION exp .)
    AND             reduce using rule 132 (exp1 -> SUBSTRACTION exp .)
    ID              reduce using rule 132 (exp1 -> SUBSTRACTION exp .)
    OPENPAREN       reduce using rule 132 (exp1 -> SUBSTRACTION exp .)
    CTEINT          reduce using rule 132 (exp1 -> SUBSTRACTION exp .)
    CTEFLOAT        reduce using rule 132 (exp1 -> SUBSTRACTION exp .)
    CTECHAR         reduce using rule 132 (exp1 -> SUBSTRACTION exp .)
    ADDITION        reduce using rule 132 (exp1 -> SUBSTRACTION exp .)
    SUBSTRACTION    reduce using rule 132 (exp1 -> SUBSTRACTION exp .)


state 168

    (141) term1 -> MULTIPLICATION term .

    ADDITION        reduce using rule 141 (term1 -> MULTIPLICATION term .)
    SUBSTRACTION    reduce using rule 141 (term1 -> MULTIPLICATION term .)
    COMMA           reduce using rule 141 (term1 -> MULTIPLICATION term .)
    SEMICOLON       reduce using rule 141 (term1 -> MULTIPLICATION term .)
    GREATER         reduce using rule 141 (term1 -> MULTIPLICATION term .)
    LESS            reduce using rule 141 (term1 -> MULTIPLICATION term .)
    NOTEQUAL        reduce using rule 141 (term1 -> MULTIPLICATION term .)
    ISEQUAL         reduce using rule 141 (term1 -> MULTIPLICATION term .)
    CLOSEPAREN      reduce using rule 141 (term1 -> MULTIPLICATION term .)
    OPENBRACES      reduce using rule 141 (term1 -> MULTIPLICATION term .)
    CLOSEBRACKET    reduce using rule 141 (term1 -> MULTIPLICATION term .)
    OR              reduce using rule 141 (term1 -> MULTIPLICATION term .)
    AND             reduce using rule 141 (term1 -> MULTIPLICATION term .)
    ID              reduce using rule 141 (term1 -> MULTIPLICATION term .)
    OPENPAREN       reduce using rule 141 (term1 -> MULTIPLICATION term .)
    CTEINT          reduce using rule 141 (term1 -> MULTIPLICATION term .)
    CTEFLOAT        reduce using rule 141 (term1 -> MULTIPLICATION term .)
    CTECHAR         reduce using rule 141 (term1 -> MULTIPLICATION term .)


state 169

    (142) term1 -> DIVISION term .

    ADDITION        reduce using rule 142 (term1 -> DIVISION term .)
    SUBSTRACTION    reduce using rule 142 (term1 -> DIVISION term .)
    COMMA           reduce using rule 142 (term1 -> DIVISION term .)
    SEMICOLON       reduce using rule 142 (term1 -> DIVISION term .)
    GREATER         reduce using rule 142 (term1 -> DIVISION term .)
    LESS            reduce using rule 142 (term1 -> DIVISION term .)
    NOTEQUAL        reduce using rule 142 (term1 -> DIVISION term .)
    ISEQUAL         reduce using rule 142 (term1 -> DIVISION term .)
    CLOSEPAREN      reduce using rule 142 (term1 -> DIVISION term .)
    OPENBRACES      reduce using rule 142 (term1 -> DIVISION term .)
    CLOSEBRACKET    reduce using rule 142 (term1 -> DIVISION term .)
    OR              reduce using rule 142 (term1 -> DIVISION term .)
    AND             reduce using rule 142 (term1 -> DIVISION term .)
    ID              reduce using rule 142 (term1 -> DIVISION term .)
    OPENPAREN       reduce using rule 142 (term1 -> DIVISION term .)
    CTEINT          reduce using rule 142 (term1 -> DIVISION term .)
    CTEFLOAT        reduce using rule 142 (term1 -> DIVISION term .)
    CTECHAR         reduce using rule 142 (term1 -> DIVISION term .)


state 170

    (83) funCall -> ID OPENPAREN funCall2 . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 210


state 171

    (84) funCall2 -> exp . funCall3
    (86) funCall3 -> . COMMA exp funCall2
    (87) funCall3 -> . empty
    (144) empty -> .

    COMMA           shift and go to state 212
    CLOSEPAREN      reduce using rule 144 (empty -> .)

    funCall3                       shift and go to state 211
    empty                          shift and go to state 213

state 172

    (85) funCall2 -> empty .

    CLOSEPAREN      reduce using rule 85 (funCall2 -> empty .)


state 173

    (51) vcte1 -> OPENBRACKET exp . CLOSEBRACKET vcte3

    CLOSEBRACKET    shift and go to state 214


state 174

    (137) factor1 -> OPENPAREN expression CLOSEPAREN .

    MULTIPLICATION  reduce using rule 137 (factor1 -> OPENPAREN expression CLOSEPAREN .)
    DIVISION        reduce using rule 137 (factor1 -> OPENPAREN expression CLOSEPAREN .)
    ADDITION        reduce using rule 137 (factor1 -> OPENPAREN expression CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 137 (factor1 -> OPENPAREN expression CLOSEPAREN .)
    COMMA           reduce using rule 137 (factor1 -> OPENPAREN expression CLOSEPAREN .)
    SEMICOLON       reduce using rule 137 (factor1 -> OPENPAREN expression CLOSEPAREN .)
    GREATER         reduce using rule 137 (factor1 -> OPENPAREN expression CLOSEPAREN .)
    LESS            reduce using rule 137 (factor1 -> OPENPAREN expression CLOSEPAREN .)
    NOTEQUAL        reduce using rule 137 (factor1 -> OPENPAREN expression CLOSEPAREN .)
    ISEQUAL         reduce using rule 137 (factor1 -> OPENPAREN expression CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 137 (factor1 -> OPENPAREN expression CLOSEPAREN .)
    OPENBRACES      reduce using rule 137 (factor1 -> OPENPAREN expression CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 137 (factor1 -> OPENPAREN expression CLOSEPAREN .)
    OR              reduce using rule 137 (factor1 -> OPENPAREN expression CLOSEPAREN .)
    AND             reduce using rule 137 (factor1 -> OPENPAREN expression CLOSEPAREN .)
    ID              reduce using rule 137 (factor1 -> OPENPAREN expression CLOSEPAREN .)
    OPENPAREN       reduce using rule 137 (factor1 -> OPENPAREN expression CLOSEPAREN .)
    CTEINT          reduce using rule 137 (factor1 -> OPENPAREN expression CLOSEPAREN .)
    CTEFLOAT        reduce using rule 137 (factor1 -> OPENPAREN expression CLOSEPAREN .)
    CTECHAR         reduce using rule 137 (factor1 -> OPENPAREN expression CLOSEPAREN .)


state 175

    (61) expression -> exp expression1 .

    CLOSEPAREN      reduce using rule 61 (expression -> exp expression1 .)
    OR              reduce using rule 61 (expression -> exp expression1 .)
    AND             reduce using rule 61 (expression -> exp expression1 .)


state 176

    (62) expression1 -> loper . exp
    (130) exp -> . term exp1
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    exp                            shift and go to state 215
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 177

    (63) expression1 -> empty .

    CLOSEPAREN      reduce using rule 63 (expression1 -> empty .)
    OR              reduce using rule 63 (expression1 -> empty .)
    AND             reduce using rule 63 (expression1 -> empty .)


state 178

    (64) loper -> GREATER .

    ID              reduce using rule 64 (loper -> GREATER .)
    OPENPAREN       reduce using rule 64 (loper -> GREATER .)
    CTEINT          reduce using rule 64 (loper -> GREATER .)
    CTEFLOAT        reduce using rule 64 (loper -> GREATER .)
    CTECHAR         reduce using rule 64 (loper -> GREATER .)
    ADDITION        reduce using rule 64 (loper -> GREATER .)
    SUBSTRACTION    reduce using rule 64 (loper -> GREATER .)


state 179

    (65) loper -> LESS .

    ID              reduce using rule 65 (loper -> LESS .)
    OPENPAREN       reduce using rule 65 (loper -> LESS .)
    CTEINT          reduce using rule 65 (loper -> LESS .)
    CTEFLOAT        reduce using rule 65 (loper -> LESS .)
    CTECHAR         reduce using rule 65 (loper -> LESS .)
    ADDITION        reduce using rule 65 (loper -> LESS .)
    SUBSTRACTION    reduce using rule 65 (loper -> LESS .)


state 180

    (66) loper -> NOTEQUAL .

    ID              reduce using rule 66 (loper -> NOTEQUAL .)
    OPENPAREN       reduce using rule 66 (loper -> NOTEQUAL .)
    CTEINT          reduce using rule 66 (loper -> NOTEQUAL .)
    CTEFLOAT        reduce using rule 66 (loper -> NOTEQUAL .)
    CTECHAR         reduce using rule 66 (loper -> NOTEQUAL .)
    ADDITION        reduce using rule 66 (loper -> NOTEQUAL .)
    SUBSTRACTION    reduce using rule 66 (loper -> NOTEQUAL .)


state 181

    (67) loper -> ISEQUAL .

    ID              reduce using rule 67 (loper -> ISEQUAL .)
    OPENPAREN       reduce using rule 67 (loper -> ISEQUAL .)
    CTEINT          reduce using rule 67 (loper -> ISEQUAL .)
    CTEFLOAT        reduce using rule 67 (loper -> ISEQUAL .)
    CTECHAR         reduce using rule 67 (loper -> ISEQUAL .)
    ADDITION        reduce using rule 67 (loper -> ISEQUAL .)
    SUBSTRACTION    reduce using rule 67 (loper -> ISEQUAL .)


state 182

    (29) vars3 -> OPENBRACKET . CTEINT CLOSEBRACKET

    CTEINT          shift and go to state 216


state 183

    (24) vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .

    SEMICOLON       reduce using rule 24 (vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .)


state 184

    (30) vars3 -> empty .

    SEMICOLON       reduce using rule 30 (vars3 -> empty .)


state 185

    (26) vars2 -> COMMA ID vars1 .

    SEMICOLON       reduce using rule 26 (vars2 -> COMMA ID vars1 .)


state 186

    (31) vars4 -> type ID . vars1
    (23) vars1 -> . EQUALS exp vars2
    (24) vars1 -> . OPENBRACKET CTEINT CLOSEBRACKET vars3
    (25) vars1 -> . empty vars2
    (144) empty -> .

    EQUALS          shift and go to state 27
    OPENBRACKET     shift and go to state 28
    COMMA           reduce using rule 144 (empty -> .)
    SEMICOLON       reduce using rule 144 (empty -> .)

    vars1                          shift and go to state 217
    empty                          shift and go to state 29

state 187

    (41) assignment -> ID assignment1 EQUALS . assignment3 SEMICOLON
    (46) assignment3 -> . exp
    (47) assignment3 -> . read
    (130) exp -> . term exp1
    (37) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    READ            shift and go to state 72
    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    assignment3                    shift and go to state 218
    exp                            shift and go to state 219
    read                           shift and go to state 220
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 188

    (43) assignment1 -> assignment2 assignment1 .

    EQUALS          reduce using rule 43 (assignment1 -> assignment2 assignment1 .)


state 189

    (45) assignment2 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 221


state 190

    (71) condition -> IF head body . condition1
    (72) condition1 -> . ELSEIF head body condition1
    (73) condition1 -> . ELSE body
    (74) condition1 -> . empty
    (144) empty -> .

    ELSEIF          shift and go to state 223
    ELSE            shift and go to state 224
    ID              reduce using rule 144 (empty -> .)
    IF              reduce using rule 144 (empty -> .)
    PRINT           reduce using rule 144 (empty -> .)
    READ            reduce using rule 144 (empty -> .)
    REPEAT          reduce using rule 144 (empty -> .)
    RETURN          reduce using rule 144 (empty -> .)
    WHILE           reduce using rule 144 (empty -> .)
    FOR             reduce using rule 144 (empty -> .)
    CIRCLE          reduce using rule 144 (empty -> .)
    SQUARE          reduce using rule 144 (empty -> .)
    TRIANGLE        reduce using rule 144 (empty -> .)
    RECTANGLE       reduce using rule 144 (empty -> .)
    HIDE_STAR       reduce using rule 144 (empty -> .)
    SHOW_STAR       reduce using rule 144 (empty -> .)
    HAND_DOWN       reduce using rule 144 (empty -> .)
    HAND_UP         reduce using rule 144 (empty -> .)
    SETXY           reduce using rule 144 (empty -> .)
    COLOR_STAR      reduce using rule 144 (empty -> .)
    SIZE_STAR       reduce using rule 144 (empty -> .)
    GO              reduce using rule 144 (empty -> .)
    LEFT            reduce using rule 144 (empty -> .)
    RIGHT           reduce using rule 144 (empty -> .)
    BACK            reduce using rule 144 (empty -> .)
    ARC             reduce using rule 144 (empty -> .)
    CLOSEBRACES     reduce using rule 144 (empty -> .)

    condition1                     shift and go to state 222
    empty                          shift and go to state 225

state 191

    (78) body -> OPENBRACES . body1 CLOSEBRACES
    (79) body1 -> . stmt body1
    (80) body1 -> . empty
    (13) stmt -> . assignment
    (14) stmt -> . condition
    (15) stmt -> . print
    (16) stmt -> . loop
    (17) stmt -> . read
    (18) stmt -> . graphstmt
    (19) stmt -> . graphr
    (20) stmt -> . funCall
    (21) stmt -> . return
    (144) empty -> .
    (41) assignment -> . ID assignment1 EQUALS assignment3 SEMICOLON
    (71) condition -> . IF head body condition1
    (36) print -> . PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
    (11) loop -> . while
    (12) loop -> . for
    (37) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (101) graphstmt -> . graphfig
    (102) graphstmt -> . graphview
    (103) graphstmt -> . graphmove
    (118) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (58) return -> . RETURN return1 SEMICOLON
    (82) while -> . WHILE head body
    (81) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (104) graphfig -> . graphfig1 SEMICOLON
    (121) graphview -> . graphview1 SEMICOLON
    (109) graphmove -> . graphmove1 SEMICOLON
    (105) graphfig1 -> . CIRCLE laRegla2
    (106) graphfig1 -> . SQUARE laRegla2
    (107) graphfig1 -> . TRIANGLE laRegla
    (108) graphfig1 -> . RECTANGLE laRegla
    (122) graphview1 -> . HIDE_STAR
    (123) graphview1 -> . SHOW_STAR
    (124) graphview1 -> . graphview2 exp
    (110) graphmove1 -> . HAND_DOWN
    (111) graphmove1 -> . HAND_UP
    (112) graphmove1 -> . graphmove2
    (125) graphview2 -> . SETXY graphview3
    (126) graphview2 -> . COLOR_STAR
    (127) graphview2 -> . SIZE_STAR
    (113) graphmove2 -> . GO laRegla2
    (114) graphmove2 -> . LEFT laRegla2
    (115) graphmove2 -> . RIGHT laRegla2
    (116) graphmove2 -> . BACK laRegla2
    (117) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 144 (empty -> .)
    ID              shift and go to state 67
    IF              shift and go to state 68
    PRINT           shift and go to state 69
    READ            shift and go to state 72
    REPEAT          shift and go to state 76
    RETURN          shift and go to state 77
    WHILE           shift and go to state 78
    FOR             shift and go to state 79
    CIRCLE          shift and go to state 83
    SQUARE          shift and go to state 84
    TRIANGLE        shift and go to state 85
    RECTANGLE       shift and go to state 86
    HIDE_STAR       shift and go to state 87
    SHOW_STAR       shift and go to state 88
    HAND_DOWN       shift and go to state 90
    HAND_UP         shift and go to state 91
    SETXY           shift and go to state 93
    COLOR_STAR      shift and go to state 94
    SIZE_STAR       shift and go to state 95
    GO              shift and go to state 96
    LEFT            shift and go to state 97
    RIGHT           shift and go to state 98
    BACK            shift and go to state 99
    ARC             shift and go to state 100

    body1                          shift and go to state 226
    stmt                           shift and go to state 227
    empty                          shift and go to state 228
    assignment                     shift and go to state 58
    condition                      shift and go to state 59
    print                          shift and go to state 60
    loop                           shift and go to state 61
    read                           shift and go to state 62
    graphstmt                      shift and go to state 63
    graphr                         shift and go to state 64
    funCall                        shift and go to state 65
    return                         shift and go to state 66
    while                          shift and go to state 70
    for                            shift and go to state 71
    graphfig                       shift and go to state 73
    graphview                      shift and go to state 74
    graphmove                      shift and go to state 75
    graphfig1                      shift and go to state 80
    graphview1                     shift and go to state 81
    graphmove1                     shift and go to state 82
    graphview2                     shift and go to state 89
    graphmove2                     shift and go to state 92

state 192

    (75) head -> OPENPAREN head1 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 229


state 193

    (76) head1 -> expression .
    (68) logical -> expression . logical1 expression
    (69) logical1 -> . OR
    (70) logical1 -> . AND

    CLOSEPAREN      reduce using rule 76 (head1 -> expression .)
    OR              shift and go to state 231
    AND             shift and go to state 232

    logical1                       shift and go to state 230

state 194

    (77) head1 -> logical .

    CLOSEPAREN      reduce using rule 77 (head1 -> logical .)


state 195

    (36) print -> PRINT OPENPAREN exp . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 233


state 196

    (37) read -> READ OPENPAREN ID . read1 CLOSEPAREN SEMICOLON
    (38) read1 -> . OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (39) read1 -> . OPENBRACKET exp CLOSEBRACKET
    (40) read1 -> . empty
    (144) empty -> .

    OPENBRACKET     shift and go to state 235
    CLOSEPAREN      reduce using rule 144 (empty -> .)

    read1                          shift and go to state 234
    empty                          shift and go to state 236

state 197

    (118) graphr -> REPEAT exp OPENBRACES . graphstmt graphr1 CLOSEBRACES
    (101) graphstmt -> . graphfig
    (102) graphstmt -> . graphview
    (103) graphstmt -> . graphmove
    (104) graphfig -> . graphfig1 SEMICOLON
    (121) graphview -> . graphview1 SEMICOLON
    (109) graphmove -> . graphmove1 SEMICOLON
    (105) graphfig1 -> . CIRCLE laRegla2
    (106) graphfig1 -> . SQUARE laRegla2
    (107) graphfig1 -> . TRIANGLE laRegla
    (108) graphfig1 -> . RECTANGLE laRegla
    (122) graphview1 -> . HIDE_STAR
    (123) graphview1 -> . SHOW_STAR
    (124) graphview1 -> . graphview2 exp
    (110) graphmove1 -> . HAND_DOWN
    (111) graphmove1 -> . HAND_UP
    (112) graphmove1 -> . graphmove2
    (125) graphview2 -> . SETXY graphview3
    (126) graphview2 -> . COLOR_STAR
    (127) graphview2 -> . SIZE_STAR
    (113) graphmove2 -> . GO laRegla2
    (114) graphmove2 -> . LEFT laRegla2
    (115) graphmove2 -> . RIGHT laRegla2
    (116) graphmove2 -> . BACK laRegla2
    (117) graphmove2 -> . ARC laRegla

    CIRCLE          shift and go to state 83
    SQUARE          shift and go to state 84
    TRIANGLE        shift and go to state 85
    RECTANGLE       shift and go to state 86
    HIDE_STAR       shift and go to state 87
    SHOW_STAR       shift and go to state 88
    HAND_DOWN       shift and go to state 90
    HAND_UP         shift and go to state 91
    SETXY           shift and go to state 93
    COLOR_STAR      shift and go to state 94
    SIZE_STAR       shift and go to state 95
    GO              shift and go to state 96
    LEFT            shift and go to state 97
    RIGHT           shift and go to state 98
    BACK            shift and go to state 99
    ARC             shift and go to state 100

    graphstmt                      shift and go to state 237
    graphfig                       shift and go to state 73
    graphview                      shift and go to state 74
    graphmove                      shift and go to state 75
    graphfig1                      shift and go to state 80
    graphview1                     shift and go to state 81
    graphmove1                     shift and go to state 82
    graphview2                     shift and go to state 89
    graphmove2                     shift and go to state 92

state 198

    (58) return -> RETURN return1 SEMICOLON .

    ID              reduce using rule 58 (return -> RETURN return1 SEMICOLON .)
    IF              reduce using rule 58 (return -> RETURN return1 SEMICOLON .)
    PRINT           reduce using rule 58 (return -> RETURN return1 SEMICOLON .)
    READ            reduce using rule 58 (return -> RETURN return1 SEMICOLON .)
    REPEAT          reduce using rule 58 (return -> RETURN return1 SEMICOLON .)
    RETURN          reduce using rule 58 (return -> RETURN return1 SEMICOLON .)
    WHILE           reduce using rule 58 (return -> RETURN return1 SEMICOLON .)
    FOR             reduce using rule 58 (return -> RETURN return1 SEMICOLON .)
    CIRCLE          reduce using rule 58 (return -> RETURN return1 SEMICOLON .)
    SQUARE          reduce using rule 58 (return -> RETURN return1 SEMICOLON .)
    TRIANGLE        reduce using rule 58 (return -> RETURN return1 SEMICOLON .)
    RECTANGLE       reduce using rule 58 (return -> RETURN return1 SEMICOLON .)
    HIDE_STAR       reduce using rule 58 (return -> RETURN return1 SEMICOLON .)
    SHOW_STAR       reduce using rule 58 (return -> RETURN return1 SEMICOLON .)
    HAND_DOWN       reduce using rule 58 (return -> RETURN return1 SEMICOLON .)
    HAND_UP         reduce using rule 58 (return -> RETURN return1 SEMICOLON .)
    SETXY           reduce using rule 58 (return -> RETURN return1 SEMICOLON .)
    COLOR_STAR      reduce using rule 58 (return -> RETURN return1 SEMICOLON .)
    SIZE_STAR       reduce using rule 58 (return -> RETURN return1 SEMICOLON .)
    GO              reduce using rule 58 (return -> RETURN return1 SEMICOLON .)
    LEFT            reduce using rule 58 (return -> RETURN return1 SEMICOLON .)
    RIGHT           reduce using rule 58 (return -> RETURN return1 SEMICOLON .)
    BACK            reduce using rule 58 (return -> RETURN return1 SEMICOLON .)
    ARC             reduce using rule 58 (return -> RETURN return1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 58 (return -> RETURN return1 SEMICOLON .)


state 199

    (82) while -> WHILE head body .

    ID              reduce using rule 82 (while -> WHILE head body .)
    IF              reduce using rule 82 (while -> WHILE head body .)
    PRINT           reduce using rule 82 (while -> WHILE head body .)
    READ            reduce using rule 82 (while -> WHILE head body .)
    REPEAT          reduce using rule 82 (while -> WHILE head body .)
    RETURN          reduce using rule 82 (while -> WHILE head body .)
    WHILE           reduce using rule 82 (while -> WHILE head body .)
    FOR             reduce using rule 82 (while -> WHILE head body .)
    CIRCLE          reduce using rule 82 (while -> WHILE head body .)
    SQUARE          reduce using rule 82 (while -> WHILE head body .)
    TRIANGLE        reduce using rule 82 (while -> WHILE head body .)
    RECTANGLE       reduce using rule 82 (while -> WHILE head body .)
    HIDE_STAR       reduce using rule 82 (while -> WHILE head body .)
    SHOW_STAR       reduce using rule 82 (while -> WHILE head body .)
    HAND_DOWN       reduce using rule 82 (while -> WHILE head body .)
    HAND_UP         reduce using rule 82 (while -> WHILE head body .)
    SETXY           reduce using rule 82 (while -> WHILE head body .)
    COLOR_STAR      reduce using rule 82 (while -> WHILE head body .)
    SIZE_STAR       reduce using rule 82 (while -> WHILE head body .)
    GO              reduce using rule 82 (while -> WHILE head body .)
    LEFT            reduce using rule 82 (while -> WHILE head body .)
    RIGHT           reduce using rule 82 (while -> WHILE head body .)
    BACK            reduce using rule 82 (while -> WHILE head body .)
    ARC             reduce using rule 82 (while -> WHILE head body .)
    CLOSEBRACES     reduce using rule 82 (while -> WHILE head body .)


state 200

    (81) for -> FOR OPENPAREN ID . TWODOTS exp CLOSEPAREN body

    TWODOTS         shift and go to state 238


state 201

    (100) laRegla2 -> OPENPAREN exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 239


state 202

    (99) laRegla -> OPENPAREN exp . COMMA exp CLOSEPAREN

    COMMA           shift and go to state 240


state 203

    (128) graphview3 -> exp COMMA .

    ID              reduce using rule 128 (graphview3 -> exp COMMA .)
    OPENPAREN       reduce using rule 128 (graphview3 -> exp COMMA .)
    CTEINT          reduce using rule 128 (graphview3 -> exp COMMA .)
    CTEFLOAT        reduce using rule 128 (graphview3 -> exp COMMA .)
    CTECHAR         reduce using rule 128 (graphview3 -> exp COMMA .)
    ADDITION        reduce using rule 128 (graphview3 -> exp COMMA .)
    SUBSTRACTION    reduce using rule 128 (graphview3 -> exp COMMA .)


state 204

    (99) laRegla -> OPENPAREN exp . COMMA exp CLOSEPAREN
    (61) expression -> exp . expression1
    (62) expression1 -> . loper exp
    (63) expression1 -> . empty
    (64) loper -> . GREATER
    (65) loper -> . LESS
    (66) loper -> . NOTEQUAL
    (67) loper -> . ISEQUAL
    (144) empty -> .

    COMMA           shift and go to state 240
    GREATER         shift and go to state 178
    LESS            shift and go to state 179
    NOTEQUAL        shift and go to state 180
    ISEQUAL         shift and go to state 181
    CLOSEPAREN      reduce using rule 144 (empty -> .)

    expression1                    shift and go to state 175
    loper                          shift and go to state 176
    empty                          shift and go to state 177

state 205

    (88) function -> FUN function1 ID function2 OPENBRACES function6 function4 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 241


state 206

    (94) function4 -> stmt . function4
    (94) function4 -> . stmt function4
    (95) function4 -> . empty
    (13) stmt -> . assignment
    (14) stmt -> . condition
    (15) stmt -> . print
    (16) stmt -> . loop
    (17) stmt -> . read
    (18) stmt -> . graphstmt
    (19) stmt -> . graphr
    (20) stmt -> . funCall
    (21) stmt -> . return
    (144) empty -> .
    (41) assignment -> . ID assignment1 EQUALS assignment3 SEMICOLON
    (71) condition -> . IF head body condition1
    (36) print -> . PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
    (11) loop -> . while
    (12) loop -> . for
    (37) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (101) graphstmt -> . graphfig
    (102) graphstmt -> . graphview
    (103) graphstmt -> . graphmove
    (118) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (58) return -> . RETURN return1 SEMICOLON
    (82) while -> . WHILE head body
    (81) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (104) graphfig -> . graphfig1 SEMICOLON
    (121) graphview -> . graphview1 SEMICOLON
    (109) graphmove -> . graphmove1 SEMICOLON
    (105) graphfig1 -> . CIRCLE laRegla2
    (106) graphfig1 -> . SQUARE laRegla2
    (107) graphfig1 -> . TRIANGLE laRegla
    (108) graphfig1 -> . RECTANGLE laRegla
    (122) graphview1 -> . HIDE_STAR
    (123) graphview1 -> . SHOW_STAR
    (124) graphview1 -> . graphview2 exp
    (110) graphmove1 -> . HAND_DOWN
    (111) graphmove1 -> . HAND_UP
    (112) graphmove1 -> . graphmove2
    (125) graphview2 -> . SETXY graphview3
    (126) graphview2 -> . COLOR_STAR
    (127) graphview2 -> . SIZE_STAR
    (113) graphmove2 -> . GO laRegla2
    (114) graphmove2 -> . LEFT laRegla2
    (115) graphmove2 -> . RIGHT laRegla2
    (116) graphmove2 -> . BACK laRegla2
    (117) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 144 (empty -> .)
    ID              shift and go to state 67
    IF              shift and go to state 68
    PRINT           shift and go to state 69
    READ            shift and go to state 72
    REPEAT          shift and go to state 76
    RETURN          shift and go to state 77
    WHILE           shift and go to state 78
    FOR             shift and go to state 79
    CIRCLE          shift and go to state 83
    SQUARE          shift and go to state 84
    TRIANGLE        shift and go to state 85
    RECTANGLE       shift and go to state 86
    HIDE_STAR       shift and go to state 87
    SHOW_STAR       shift and go to state 88
    HAND_DOWN       shift and go to state 90
    HAND_UP         shift and go to state 91
    SETXY           shift and go to state 93
    COLOR_STAR      shift and go to state 94
    SIZE_STAR       shift and go to state 95
    GO              shift and go to state 96
    LEFT            shift and go to state 97
    RIGHT           shift and go to state 98
    BACK            shift and go to state 99
    ARC             shift and go to state 100

    stmt                           shift and go to state 206
    function4                      shift and go to state 242
    empty                          shift and go to state 207
    assignment                     shift and go to state 58
    condition                      shift and go to state 59
    print                          shift and go to state 60
    loop                           shift and go to state 61
    read                           shift and go to state 62
    graphstmt                      shift and go to state 63
    graphr                         shift and go to state 64
    funCall                        shift and go to state 65
    return                         shift and go to state 66
    while                          shift and go to state 70
    for                            shift and go to state 71
    graphfig                       shift and go to state 73
    graphview                      shift and go to state 74
    graphmove                      shift and go to state 75
    graphfig1                      shift and go to state 80
    graphview1                     shift and go to state 81
    graphmove1                     shift and go to state 82
    graphview2                     shift and go to state 89
    graphmove2                     shift and go to state 92

state 207

    (95) function4 -> empty .

    CLOSEBRACES     reduce using rule 95 (function4 -> empty .)


state 208

    (92) function3 -> type ID function5 .

    CLOSEPAREN      reduce using rule 92 (function3 -> type ID function5 .)


state 209

    (96) function5 -> COMMA . type ID function3
    (33) type -> . INT
    (34) type -> . FLOAT
    (35) type -> . CHAR

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    type                           shift and go to state 243

state 210

    (83) funCall -> ID OPENPAREN funCall2 CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 244


state 211

    (84) funCall2 -> exp funCall3 .

    CLOSEPAREN      reduce using rule 84 (funCall2 -> exp funCall3 .)


state 212

    (86) funCall3 -> COMMA . exp funCall2
    (130) exp -> . term exp1
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    exp                            shift and go to state 245
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 213

    (87) funCall3 -> empty .

    CLOSEPAREN      reduce using rule 87 (funCall3 -> empty .)


state 214

    (51) vcte1 -> OPENBRACKET exp CLOSEBRACKET . vcte3
    (53) vcte3 -> . OPENBRACKET exp CLOSEBRACKET
    (54) vcte3 -> . empty
    (144) empty -> .

    OPENBRACKET     shift and go to state 246
    MULTIPLICATION  reduce using rule 144 (empty -> .)
    DIVISION        reduce using rule 144 (empty -> .)
    ADDITION        reduce using rule 144 (empty -> .)
    SUBSTRACTION    reduce using rule 144 (empty -> .)
    COMMA           reduce using rule 144 (empty -> .)
    SEMICOLON       reduce using rule 144 (empty -> .)
    GREATER         reduce using rule 144 (empty -> .)
    LESS            reduce using rule 144 (empty -> .)
    NOTEQUAL        reduce using rule 144 (empty -> .)
    ISEQUAL         reduce using rule 144 (empty -> .)
    CLOSEPAREN      reduce using rule 144 (empty -> .)
    OPENBRACES      reduce using rule 144 (empty -> .)
    CLOSEBRACKET    reduce using rule 144 (empty -> .)
    OR              reduce using rule 144 (empty -> .)
    AND             reduce using rule 144 (empty -> .)
    ID              reduce using rule 144 (empty -> .)
    OPENPAREN       reduce using rule 144 (empty -> .)
    CTEINT          reduce using rule 144 (empty -> .)
    CTEFLOAT        reduce using rule 144 (empty -> .)
    CTECHAR         reduce using rule 144 (empty -> .)

    vcte3                          shift and go to state 247
    empty                          shift and go to state 248

state 215

    (62) expression1 -> loper exp .

    CLOSEPAREN      reduce using rule 62 (expression1 -> loper exp .)
    OR              reduce using rule 62 (expression1 -> loper exp .)
    AND             reduce using rule 62 (expression1 -> loper exp .)


state 216

    (29) vars3 -> OPENBRACKET CTEINT . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 249


state 217

    (31) vars4 -> type ID vars1 .

    SEMICOLON       reduce using rule 31 (vars4 -> type ID vars1 .)


state 218

    (41) assignment -> ID assignment1 EQUALS assignment3 . SEMICOLON

    SEMICOLON       shift and go to state 250


state 219

    (46) assignment3 -> exp .

    SEMICOLON       reduce using rule 46 (assignment3 -> exp .)


state 220

    (47) assignment3 -> read .

    SEMICOLON       reduce using rule 47 (assignment3 -> read .)


state 221

    (45) assignment2 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     reduce using rule 45 (assignment2 -> OPENBRACKET exp CLOSEBRACKET .)
    EQUALS          reduce using rule 45 (assignment2 -> OPENBRACKET exp CLOSEBRACKET .)


state 222

    (71) condition -> IF head body condition1 .

    ID              reduce using rule 71 (condition -> IF head body condition1 .)
    IF              reduce using rule 71 (condition -> IF head body condition1 .)
    PRINT           reduce using rule 71 (condition -> IF head body condition1 .)
    READ            reduce using rule 71 (condition -> IF head body condition1 .)
    REPEAT          reduce using rule 71 (condition -> IF head body condition1 .)
    RETURN          reduce using rule 71 (condition -> IF head body condition1 .)
    WHILE           reduce using rule 71 (condition -> IF head body condition1 .)
    FOR             reduce using rule 71 (condition -> IF head body condition1 .)
    CIRCLE          reduce using rule 71 (condition -> IF head body condition1 .)
    SQUARE          reduce using rule 71 (condition -> IF head body condition1 .)
    TRIANGLE        reduce using rule 71 (condition -> IF head body condition1 .)
    RECTANGLE       reduce using rule 71 (condition -> IF head body condition1 .)
    HIDE_STAR       reduce using rule 71 (condition -> IF head body condition1 .)
    SHOW_STAR       reduce using rule 71 (condition -> IF head body condition1 .)
    HAND_DOWN       reduce using rule 71 (condition -> IF head body condition1 .)
    HAND_UP         reduce using rule 71 (condition -> IF head body condition1 .)
    SETXY           reduce using rule 71 (condition -> IF head body condition1 .)
    COLOR_STAR      reduce using rule 71 (condition -> IF head body condition1 .)
    SIZE_STAR       reduce using rule 71 (condition -> IF head body condition1 .)
    GO              reduce using rule 71 (condition -> IF head body condition1 .)
    LEFT            reduce using rule 71 (condition -> IF head body condition1 .)
    RIGHT           reduce using rule 71 (condition -> IF head body condition1 .)
    BACK            reduce using rule 71 (condition -> IF head body condition1 .)
    ARC             reduce using rule 71 (condition -> IF head body condition1 .)
    CLOSEBRACES     reduce using rule 71 (condition -> IF head body condition1 .)


state 223

    (72) condition1 -> ELSEIF . head body condition1
    (75) head -> . OPENPAREN head1 CLOSEPAREN

    OPENPAREN       shift and go to state 133

    head                           shift and go to state 251

state 224

    (73) condition1 -> ELSE . body
    (78) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 191

    body                           shift and go to state 252

state 225

    (74) condition1 -> empty .

    ID              reduce using rule 74 (condition1 -> empty .)
    IF              reduce using rule 74 (condition1 -> empty .)
    PRINT           reduce using rule 74 (condition1 -> empty .)
    READ            reduce using rule 74 (condition1 -> empty .)
    REPEAT          reduce using rule 74 (condition1 -> empty .)
    RETURN          reduce using rule 74 (condition1 -> empty .)
    WHILE           reduce using rule 74 (condition1 -> empty .)
    FOR             reduce using rule 74 (condition1 -> empty .)
    CIRCLE          reduce using rule 74 (condition1 -> empty .)
    SQUARE          reduce using rule 74 (condition1 -> empty .)
    TRIANGLE        reduce using rule 74 (condition1 -> empty .)
    RECTANGLE       reduce using rule 74 (condition1 -> empty .)
    HIDE_STAR       reduce using rule 74 (condition1 -> empty .)
    SHOW_STAR       reduce using rule 74 (condition1 -> empty .)
    HAND_DOWN       reduce using rule 74 (condition1 -> empty .)
    HAND_UP         reduce using rule 74 (condition1 -> empty .)
    SETXY           reduce using rule 74 (condition1 -> empty .)
    COLOR_STAR      reduce using rule 74 (condition1 -> empty .)
    SIZE_STAR       reduce using rule 74 (condition1 -> empty .)
    GO              reduce using rule 74 (condition1 -> empty .)
    LEFT            reduce using rule 74 (condition1 -> empty .)
    RIGHT           reduce using rule 74 (condition1 -> empty .)
    BACK            reduce using rule 74 (condition1 -> empty .)
    ARC             reduce using rule 74 (condition1 -> empty .)
    CLOSEBRACES     reduce using rule 74 (condition1 -> empty .)


state 226

    (78) body -> OPENBRACES body1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 253


state 227

    (79) body1 -> stmt . body1
    (79) body1 -> . stmt body1
    (80) body1 -> . empty
    (13) stmt -> . assignment
    (14) stmt -> . condition
    (15) stmt -> . print
    (16) stmt -> . loop
    (17) stmt -> . read
    (18) stmt -> . graphstmt
    (19) stmt -> . graphr
    (20) stmt -> . funCall
    (21) stmt -> . return
    (144) empty -> .
    (41) assignment -> . ID assignment1 EQUALS assignment3 SEMICOLON
    (71) condition -> . IF head body condition1
    (36) print -> . PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
    (11) loop -> . while
    (12) loop -> . for
    (37) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (101) graphstmt -> . graphfig
    (102) graphstmt -> . graphview
    (103) graphstmt -> . graphmove
    (118) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (58) return -> . RETURN return1 SEMICOLON
    (82) while -> . WHILE head body
    (81) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (104) graphfig -> . graphfig1 SEMICOLON
    (121) graphview -> . graphview1 SEMICOLON
    (109) graphmove -> . graphmove1 SEMICOLON
    (105) graphfig1 -> . CIRCLE laRegla2
    (106) graphfig1 -> . SQUARE laRegla2
    (107) graphfig1 -> . TRIANGLE laRegla
    (108) graphfig1 -> . RECTANGLE laRegla
    (122) graphview1 -> . HIDE_STAR
    (123) graphview1 -> . SHOW_STAR
    (124) graphview1 -> . graphview2 exp
    (110) graphmove1 -> . HAND_DOWN
    (111) graphmove1 -> . HAND_UP
    (112) graphmove1 -> . graphmove2
    (125) graphview2 -> . SETXY graphview3
    (126) graphview2 -> . COLOR_STAR
    (127) graphview2 -> . SIZE_STAR
    (113) graphmove2 -> . GO laRegla2
    (114) graphmove2 -> . LEFT laRegla2
    (115) graphmove2 -> . RIGHT laRegla2
    (116) graphmove2 -> . BACK laRegla2
    (117) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 144 (empty -> .)
    ID              shift and go to state 67
    IF              shift and go to state 68
    PRINT           shift and go to state 69
    READ            shift and go to state 72
    REPEAT          shift and go to state 76
    RETURN          shift and go to state 77
    WHILE           shift and go to state 78
    FOR             shift and go to state 79
    CIRCLE          shift and go to state 83
    SQUARE          shift and go to state 84
    TRIANGLE        shift and go to state 85
    RECTANGLE       shift and go to state 86
    HIDE_STAR       shift and go to state 87
    SHOW_STAR       shift and go to state 88
    HAND_DOWN       shift and go to state 90
    HAND_UP         shift and go to state 91
    SETXY           shift and go to state 93
    COLOR_STAR      shift and go to state 94
    SIZE_STAR       shift and go to state 95
    GO              shift and go to state 96
    LEFT            shift and go to state 97
    RIGHT           shift and go to state 98
    BACK            shift and go to state 99
    ARC             shift and go to state 100

    stmt                           shift and go to state 227
    body1                          shift and go to state 254
    empty                          shift and go to state 228
    assignment                     shift and go to state 58
    condition                      shift and go to state 59
    print                          shift and go to state 60
    loop                           shift and go to state 61
    read                           shift and go to state 62
    graphstmt                      shift and go to state 63
    graphr                         shift and go to state 64
    funCall                        shift and go to state 65
    return                         shift and go to state 66
    while                          shift and go to state 70
    for                            shift and go to state 71
    graphfig                       shift and go to state 73
    graphview                      shift and go to state 74
    graphmove                      shift and go to state 75
    graphfig1                      shift and go to state 80
    graphview1                     shift and go to state 81
    graphmove1                     shift and go to state 82
    graphview2                     shift and go to state 89
    graphmove2                     shift and go to state 92

state 228

    (80) body1 -> empty .

    CLOSEBRACES     reduce using rule 80 (body1 -> empty .)


state 229

    (75) head -> OPENPAREN head1 CLOSEPAREN .

    OPENBRACES      reduce using rule 75 (head -> OPENPAREN head1 CLOSEPAREN .)


state 230

    (68) logical -> expression logical1 . expression
    (61) expression -> . exp expression1
    (130) exp -> . term exp1
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    expression                     shift and go to state 255
    exp                            shift and go to state 120
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 231

    (69) logical1 -> OR .

    ID              reduce using rule 69 (logical1 -> OR .)
    OPENPAREN       reduce using rule 69 (logical1 -> OR .)
    CTEINT          reduce using rule 69 (logical1 -> OR .)
    CTEFLOAT        reduce using rule 69 (logical1 -> OR .)
    CTECHAR         reduce using rule 69 (logical1 -> OR .)
    ADDITION        reduce using rule 69 (logical1 -> OR .)
    SUBSTRACTION    reduce using rule 69 (logical1 -> OR .)


state 232

    (70) logical1 -> AND .

    ID              reduce using rule 70 (logical1 -> AND .)
    OPENPAREN       reduce using rule 70 (logical1 -> AND .)
    CTEINT          reduce using rule 70 (logical1 -> AND .)
    CTEFLOAT        reduce using rule 70 (logical1 -> AND .)
    CTECHAR         reduce using rule 70 (logical1 -> AND .)
    ADDITION        reduce using rule 70 (logical1 -> AND .)
    SUBSTRACTION    reduce using rule 70 (logical1 -> AND .)


state 233

    (36) print -> PRINT OPENPAREN exp CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 256


state 234

    (37) read -> READ OPENPAREN ID read1 . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 257


state 235

    (38) read1 -> OPENBRACKET . exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (39) read1 -> OPENBRACKET . exp CLOSEBRACKET
    (130) exp -> . term exp1
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    exp                            shift and go to state 258
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 236

    (40) read1 -> empty .

    CLOSEPAREN      reduce using rule 40 (read1 -> empty .)


state 237

    (118) graphr -> REPEAT exp OPENBRACES graphstmt . graphr1 CLOSEBRACES
    (119) graphr1 -> . graphstmt graphr1
    (120) graphr1 -> . empty
    (101) graphstmt -> . graphfig
    (102) graphstmt -> . graphview
    (103) graphstmt -> . graphmove
    (144) empty -> .
    (104) graphfig -> . graphfig1 SEMICOLON
    (121) graphview -> . graphview1 SEMICOLON
    (109) graphmove -> . graphmove1 SEMICOLON
    (105) graphfig1 -> . CIRCLE laRegla2
    (106) graphfig1 -> . SQUARE laRegla2
    (107) graphfig1 -> . TRIANGLE laRegla
    (108) graphfig1 -> . RECTANGLE laRegla
    (122) graphview1 -> . HIDE_STAR
    (123) graphview1 -> . SHOW_STAR
    (124) graphview1 -> . graphview2 exp
    (110) graphmove1 -> . HAND_DOWN
    (111) graphmove1 -> . HAND_UP
    (112) graphmove1 -> . graphmove2
    (125) graphview2 -> . SETXY graphview3
    (126) graphview2 -> . COLOR_STAR
    (127) graphview2 -> . SIZE_STAR
    (113) graphmove2 -> . GO laRegla2
    (114) graphmove2 -> . LEFT laRegla2
    (115) graphmove2 -> . RIGHT laRegla2
    (116) graphmove2 -> . BACK laRegla2
    (117) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 144 (empty -> .)
    CIRCLE          shift and go to state 83
    SQUARE          shift and go to state 84
    TRIANGLE        shift and go to state 85
    RECTANGLE       shift and go to state 86
    HIDE_STAR       shift and go to state 87
    SHOW_STAR       shift and go to state 88
    HAND_DOWN       shift and go to state 90
    HAND_UP         shift and go to state 91
    SETXY           shift and go to state 93
    COLOR_STAR      shift and go to state 94
    SIZE_STAR       shift and go to state 95
    GO              shift and go to state 96
    LEFT            shift and go to state 97
    RIGHT           shift and go to state 98
    BACK            shift and go to state 99
    ARC             shift and go to state 100

    graphstmt                      shift and go to state 259
    graphr1                        shift and go to state 260
    empty                          shift and go to state 261
    graphfig                       shift and go to state 73
    graphview                      shift and go to state 74
    graphmove                      shift and go to state 75
    graphfig1                      shift and go to state 80
    graphview1                     shift and go to state 81
    graphmove1                     shift and go to state 82
    graphview2                     shift and go to state 89
    graphmove2                     shift and go to state 92

state 238

    (81) for -> FOR OPENPAREN ID TWODOTS . exp CLOSEPAREN body
    (130) exp -> . term exp1
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    exp                            shift and go to state 262
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 239

    (100) laRegla2 -> OPENPAREN exp CLOSEPAREN .

    SEMICOLON       reduce using rule 100 (laRegla2 -> OPENPAREN exp CLOSEPAREN .)


state 240

    (99) laRegla -> OPENPAREN exp COMMA . exp CLOSEPAREN
    (130) exp -> . term exp1
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    exp                            shift and go to state 263
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 241

    (88) function -> FUN function1 ID function2 OPENBRACES function6 function4 CLOSEBRACES .

    FUN             reduce using rule 88 (function -> FUN function1 ID function2 OPENBRACES function6 function4 CLOSEBRACES .)
    MULTIPLICATION  reduce using rule 88 (function -> FUN function1 ID function2 OPENBRACES function6 function4 CLOSEBRACES .)


state 242

    (94) function4 -> stmt function4 .

    CLOSEBRACES     reduce using rule 94 (function4 -> stmt function4 .)


state 243

    (96) function5 -> COMMA type . ID function3

    ID              shift and go to state 264


state 244

    (83) funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .

    MULTIPLICATION  reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    DIVISION        reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    ADDITION        reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    SUBSTRACTION    reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    COMMA           reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    GREATER         reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    LESS            reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    ISEQUAL         reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CLOSEPAREN      reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    OPENBRACES      reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CLOSEBRACKET    reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    OR              reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    AND             reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    OPENPAREN       reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CTEINT          reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CTEFLOAT        reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CTECHAR         reduce using rule 83 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)


state 245

    (86) funCall3 -> COMMA exp . funCall2
    (84) funCall2 -> . exp funCall3
    (85) funCall2 -> . empty
    (130) exp -> . term exp1
    (144) empty -> .
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    CLOSEPAREN      reduce using rule 144 (empty -> .)
    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    exp                            shift and go to state 171
    funCall2                       shift and go to state 265
    empty                          shift and go to state 172
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 246

    (53) vcte3 -> OPENBRACKET . exp CLOSEBRACKET
    (130) exp -> . term exp1
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    exp                            shift and go to state 266
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 247

    (51) vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .

    MULTIPLICATION  reduce using rule 51 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    DIVISION        reduce using rule 51 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ADDITION        reduce using rule 51 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    SUBSTRACTION    reduce using rule 51 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    COMMA           reduce using rule 51 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    SEMICOLON       reduce using rule 51 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    GREATER         reduce using rule 51 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    LESS            reduce using rule 51 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    NOTEQUAL        reduce using rule 51 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ISEQUAL         reduce using rule 51 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CLOSEPAREN      reduce using rule 51 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    OPENBRACES      reduce using rule 51 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CLOSEBRACKET    reduce using rule 51 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    OR              reduce using rule 51 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    AND             reduce using rule 51 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ID              reduce using rule 51 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    OPENPAREN       reduce using rule 51 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CTEINT          reduce using rule 51 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CTEFLOAT        reduce using rule 51 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CTECHAR         reduce using rule 51 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)


state 248

    (54) vcte3 -> empty .

    MULTIPLICATION  reduce using rule 54 (vcte3 -> empty .)
    DIVISION        reduce using rule 54 (vcte3 -> empty .)
    ADDITION        reduce using rule 54 (vcte3 -> empty .)
    SUBSTRACTION    reduce using rule 54 (vcte3 -> empty .)
    COMMA           reduce using rule 54 (vcte3 -> empty .)
    SEMICOLON       reduce using rule 54 (vcte3 -> empty .)
    GREATER         reduce using rule 54 (vcte3 -> empty .)
    LESS            reduce using rule 54 (vcte3 -> empty .)
    NOTEQUAL        reduce using rule 54 (vcte3 -> empty .)
    ISEQUAL         reduce using rule 54 (vcte3 -> empty .)
    CLOSEPAREN      reduce using rule 54 (vcte3 -> empty .)
    OPENBRACES      reduce using rule 54 (vcte3 -> empty .)
    CLOSEBRACKET    reduce using rule 54 (vcte3 -> empty .)
    OR              reduce using rule 54 (vcte3 -> empty .)
    AND             reduce using rule 54 (vcte3 -> empty .)
    ID              reduce using rule 54 (vcte3 -> empty .)
    OPENPAREN       reduce using rule 54 (vcte3 -> empty .)
    CTEINT          reduce using rule 54 (vcte3 -> empty .)
    CTEFLOAT        reduce using rule 54 (vcte3 -> empty .)
    CTECHAR         reduce using rule 54 (vcte3 -> empty .)


state 249

    (29) vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .

    SEMICOLON       reduce using rule 29 (vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .)


state 250

    (41) assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .

    ID              reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    IF              reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    PRINT           reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    READ            reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    REPEAT          reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    RETURN          reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    WHILE           reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    FOR             reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    CIRCLE          reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    SQUARE          reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    TRIANGLE        reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    RECTANGLE       reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    HIDE_STAR       reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    SHOW_STAR       reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    HAND_DOWN       reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    HAND_UP         reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    SETXY           reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    COLOR_STAR      reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    SIZE_STAR       reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    GO              reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    LEFT            reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    RIGHT           reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    BACK            reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    ARC             reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    CLOSEBRACES     reduce using rule 41 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)


state 251

    (72) condition1 -> ELSEIF head . body condition1
    (78) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 191

    body                           shift and go to state 267

state 252

    (73) condition1 -> ELSE body .

    ID              reduce using rule 73 (condition1 -> ELSE body .)
    IF              reduce using rule 73 (condition1 -> ELSE body .)
    PRINT           reduce using rule 73 (condition1 -> ELSE body .)
    READ            reduce using rule 73 (condition1 -> ELSE body .)
    REPEAT          reduce using rule 73 (condition1 -> ELSE body .)
    RETURN          reduce using rule 73 (condition1 -> ELSE body .)
    WHILE           reduce using rule 73 (condition1 -> ELSE body .)
    FOR             reduce using rule 73 (condition1 -> ELSE body .)
    CIRCLE          reduce using rule 73 (condition1 -> ELSE body .)
    SQUARE          reduce using rule 73 (condition1 -> ELSE body .)
    TRIANGLE        reduce using rule 73 (condition1 -> ELSE body .)
    RECTANGLE       reduce using rule 73 (condition1 -> ELSE body .)
    HIDE_STAR       reduce using rule 73 (condition1 -> ELSE body .)
    SHOW_STAR       reduce using rule 73 (condition1 -> ELSE body .)
    HAND_DOWN       reduce using rule 73 (condition1 -> ELSE body .)
    HAND_UP         reduce using rule 73 (condition1 -> ELSE body .)
    SETXY           reduce using rule 73 (condition1 -> ELSE body .)
    COLOR_STAR      reduce using rule 73 (condition1 -> ELSE body .)
    SIZE_STAR       reduce using rule 73 (condition1 -> ELSE body .)
    GO              reduce using rule 73 (condition1 -> ELSE body .)
    LEFT            reduce using rule 73 (condition1 -> ELSE body .)
    RIGHT           reduce using rule 73 (condition1 -> ELSE body .)
    BACK            reduce using rule 73 (condition1 -> ELSE body .)
    ARC             reduce using rule 73 (condition1 -> ELSE body .)
    CLOSEBRACES     reduce using rule 73 (condition1 -> ELSE body .)


state 253

    (78) body -> OPENBRACES body1 CLOSEBRACES .

    ELSEIF          reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSE            reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    ID              reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    IF              reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    PRINT           reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    READ            reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    REPEAT          reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    RETURN          reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    WHILE           reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    FOR             reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    CIRCLE          reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    SQUARE          reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_UP         reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    SETXY           reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    GO              reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    LEFT            reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    RIGHT           reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    BACK            reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    ARC             reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 78 (body -> OPENBRACES body1 CLOSEBRACES .)


state 254

    (79) body1 -> stmt body1 .

    CLOSEBRACES     reduce using rule 79 (body1 -> stmt body1 .)


state 255

    (68) logical -> expression logical1 expression .

    CLOSEPAREN      reduce using rule 68 (logical -> expression logical1 expression .)


state 256

    (36) print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .

    ID              reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 36 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)


state 257

    (37) read -> READ OPENPAREN ID read1 CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 268


state 258

    (38) read1 -> OPENBRACKET exp . CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (39) read1 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 269


state 259

    (119) graphr1 -> graphstmt . graphr1
    (119) graphr1 -> . graphstmt graphr1
    (120) graphr1 -> . empty
    (101) graphstmt -> . graphfig
    (102) graphstmt -> . graphview
    (103) graphstmt -> . graphmove
    (144) empty -> .
    (104) graphfig -> . graphfig1 SEMICOLON
    (121) graphview -> . graphview1 SEMICOLON
    (109) graphmove -> . graphmove1 SEMICOLON
    (105) graphfig1 -> . CIRCLE laRegla2
    (106) graphfig1 -> . SQUARE laRegla2
    (107) graphfig1 -> . TRIANGLE laRegla
    (108) graphfig1 -> . RECTANGLE laRegla
    (122) graphview1 -> . HIDE_STAR
    (123) graphview1 -> . SHOW_STAR
    (124) graphview1 -> . graphview2 exp
    (110) graphmove1 -> . HAND_DOWN
    (111) graphmove1 -> . HAND_UP
    (112) graphmove1 -> . graphmove2
    (125) graphview2 -> . SETXY graphview3
    (126) graphview2 -> . COLOR_STAR
    (127) graphview2 -> . SIZE_STAR
    (113) graphmove2 -> . GO laRegla2
    (114) graphmove2 -> . LEFT laRegla2
    (115) graphmove2 -> . RIGHT laRegla2
    (116) graphmove2 -> . BACK laRegla2
    (117) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 144 (empty -> .)
    CIRCLE          shift and go to state 83
    SQUARE          shift and go to state 84
    TRIANGLE        shift and go to state 85
    RECTANGLE       shift and go to state 86
    HIDE_STAR       shift and go to state 87
    SHOW_STAR       shift and go to state 88
    HAND_DOWN       shift and go to state 90
    HAND_UP         shift and go to state 91
    SETXY           shift and go to state 93
    COLOR_STAR      shift and go to state 94
    SIZE_STAR       shift and go to state 95
    GO              shift and go to state 96
    LEFT            shift and go to state 97
    RIGHT           shift and go to state 98
    BACK            shift and go to state 99
    ARC             shift and go to state 100

    graphstmt                      shift and go to state 259
    graphr1                        shift and go to state 270
    empty                          shift and go to state 261
    graphfig                       shift and go to state 73
    graphview                      shift and go to state 74
    graphmove                      shift and go to state 75
    graphfig1                      shift and go to state 80
    graphview1                     shift and go to state 81
    graphmove1                     shift and go to state 82
    graphview2                     shift and go to state 89
    graphmove2                     shift and go to state 92

state 260

    (118) graphr -> REPEAT exp OPENBRACES graphstmt graphr1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 271


state 261

    (120) graphr1 -> empty .

    CLOSEBRACES     reduce using rule 120 (graphr1 -> empty .)


state 262

    (81) for -> FOR OPENPAREN ID TWODOTS exp . CLOSEPAREN body

    CLOSEPAREN      shift and go to state 272


state 263

    (99) laRegla -> OPENPAREN exp COMMA exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 273


state 264

    (96) function5 -> COMMA type ID . function3
    (92) function3 -> . type ID function5
    (93) function3 -> . empty
    (33) type -> . INT
    (34) type -> . FLOAT
    (35) type -> . CHAR
    (144) empty -> .

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    CLOSEPAREN      reduce using rule 144 (empty -> .)

    type                           shift and go to state 103
    function3                      shift and go to state 274
    empty                          shift and go to state 104

state 265

    (86) funCall3 -> COMMA exp funCall2 .

    CLOSEPAREN      reduce using rule 86 (funCall3 -> COMMA exp funCall2 .)


state 266

    (53) vcte3 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 275


state 267

    (72) condition1 -> ELSEIF head body . condition1
    (72) condition1 -> . ELSEIF head body condition1
    (73) condition1 -> . ELSE body
    (74) condition1 -> . empty
    (144) empty -> .

    ELSEIF          shift and go to state 223
    ELSE            shift and go to state 224
    ID              reduce using rule 144 (empty -> .)
    IF              reduce using rule 144 (empty -> .)
    PRINT           reduce using rule 144 (empty -> .)
    READ            reduce using rule 144 (empty -> .)
    REPEAT          reduce using rule 144 (empty -> .)
    RETURN          reduce using rule 144 (empty -> .)
    WHILE           reduce using rule 144 (empty -> .)
    FOR             reduce using rule 144 (empty -> .)
    CIRCLE          reduce using rule 144 (empty -> .)
    SQUARE          reduce using rule 144 (empty -> .)
    TRIANGLE        reduce using rule 144 (empty -> .)
    RECTANGLE       reduce using rule 144 (empty -> .)
    HIDE_STAR       reduce using rule 144 (empty -> .)
    SHOW_STAR       reduce using rule 144 (empty -> .)
    HAND_DOWN       reduce using rule 144 (empty -> .)
    HAND_UP         reduce using rule 144 (empty -> .)
    SETXY           reduce using rule 144 (empty -> .)
    COLOR_STAR      reduce using rule 144 (empty -> .)
    SIZE_STAR       reduce using rule 144 (empty -> .)
    GO              reduce using rule 144 (empty -> .)
    LEFT            reduce using rule 144 (empty -> .)
    RIGHT           reduce using rule 144 (empty -> .)
    BACK            reduce using rule 144 (empty -> .)
    ARC             reduce using rule 144 (empty -> .)
    CLOSEBRACES     reduce using rule 144 (empty -> .)

    condition1                     shift and go to state 276
    empty                          shift and go to state 225

state 268

    (37) read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .

    ID              reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 37 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)


state 269

    (38) read1 -> OPENBRACKET exp CLOSEBRACKET . OPENBRACKET exp CLOSEBRACKET
    (39) read1 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     shift and go to state 277
    CLOSEPAREN      reduce using rule 39 (read1 -> OPENBRACKET exp CLOSEBRACKET .)


state 270

    (119) graphr1 -> graphstmt graphr1 .

    CLOSEBRACES     reduce using rule 119 (graphr1 -> graphstmt graphr1 .)


state 271

    (118) graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .

    ID              reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    IF              reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    PRINT           reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    READ            reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    REPEAT          reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RETURN          reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    WHILE           reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    FOR             reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    CIRCLE          reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SQUARE          reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HAND_UP         reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SETXY           reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    GO              reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    LEFT            reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RIGHT           reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    BACK            reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    ARC             reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 118 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)


state 272

    (81) for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN . body
    (78) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 191

    body                           shift and go to state 278

state 273

    (99) laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .

    SEMICOLON       reduce using rule 99 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    ID              reduce using rule 99 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    OPENPAREN       reduce using rule 99 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    CTEINT          reduce using rule 99 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    CTEFLOAT        reduce using rule 99 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    CTECHAR         reduce using rule 99 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    ADDITION        reduce using rule 99 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 99 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)


state 274

    (96) function5 -> COMMA type ID function3 .

    CLOSEPAREN      reduce using rule 96 (function5 -> COMMA type ID function3 .)


state 275

    (53) vcte3 -> OPENBRACKET exp CLOSEBRACKET .

    MULTIPLICATION  reduce using rule 53 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    DIVISION        reduce using rule 53 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ADDITION        reduce using rule 53 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    SUBSTRACTION    reduce using rule 53 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    COMMA           reduce using rule 53 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    SEMICOLON       reduce using rule 53 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    GREATER         reduce using rule 53 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    LESS            reduce using rule 53 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 53 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ISEQUAL         reduce using rule 53 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 53 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    OPENBRACES      reduce using rule 53 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 53 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    OR              reduce using rule 53 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    AND             reduce using rule 53 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ID              reduce using rule 53 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    OPENPAREN       reduce using rule 53 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CTEINT          reduce using rule 53 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CTEFLOAT        reduce using rule 53 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CTECHAR         reduce using rule 53 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)


state 276

    (72) condition1 -> ELSEIF head body condition1 .

    ID              reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)
    IF              reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)
    PRINT           reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)
    READ            reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)
    REPEAT          reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)
    RETURN          reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)
    WHILE           reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)
    FOR             reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)
    CIRCLE          reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)
    SQUARE          reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)
    TRIANGLE        reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)
    RECTANGLE       reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)
    HIDE_STAR       reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)
    SHOW_STAR       reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)
    HAND_DOWN       reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)
    HAND_UP         reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)
    SETXY           reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)
    COLOR_STAR      reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)
    SIZE_STAR       reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)
    GO              reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)
    LEFT            reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)
    RIGHT           reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)
    BACK            reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)
    ARC             reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)
    CLOSEBRACES     reduce using rule 72 (condition1 -> ELSEIF head body condition1 .)


state 277

    (38) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET . exp CLOSEBRACKET
    (130) exp -> . term exp1
    (140) term -> . factor term1
    (134) factor -> . vcte
    (135) factor -> . factor1
    (48) vcte -> . cte
    (49) vcte -> . ID vcte1
    (50) vcte -> . funCall
    (136) factor1 -> . factor2 vcte
    (137) factor1 -> . OPENPAREN expression CLOSEPAREN
    (55) cte -> . CTEINT
    (56) cte -> . CTEFLOAT
    (57) cte -> . CTECHAR
    (83) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (138) factor2 -> . ADDITION
    (139) factor2 -> . SUBSTRACTION

    ID              shift and go to state 42
    OPENPAREN       shift and go to state 45
    CTEINT          shift and go to state 46
    CTEFLOAT        shift and go to state 47
    CTECHAR         shift and go to state 48
    ADDITION        shift and go to state 49
    SUBSTRACTION    shift and go to state 50

    exp                            shift and go to state 279
    term                           shift and go to state 37
    factor                         shift and go to state 38
    vcte                           shift and go to state 39
    factor1                        shift and go to state 40
    cte                            shift and go to state 41
    funCall                        shift and go to state 43
    factor2                        shift and go to state 44

state 278

    (81) for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .

    ID              reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    IF              reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    PRINT           reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    READ            reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    REPEAT          reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    RETURN          reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    WHILE           reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    FOR             reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    CIRCLE          reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SQUARE          reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    TRIANGLE        reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    RECTANGLE       reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    HIDE_STAR       reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SHOW_STAR       reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    HAND_DOWN       reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    HAND_UP         reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SETXY           reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    COLOR_STAR      reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SIZE_STAR       reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    GO              reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    LEFT            reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    RIGHT           reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    BACK            reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    ARC             reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    CLOSEBRACES     reduce using rule 81 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)


state 279

    (38) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 280


state 280

    (38) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .

    CLOSEPAREN      reduce using rule 38 (read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ADDITION in state 37 resolved as shift
WARNING: shift/reduce conflict for SUBSTRACTION in state 37 resolved as shift
WARNING: shift/reduce conflict for OPENPAREN in state 42 resolved as shift
WARNING: reduce/reduce conflict in state 129 resolved using rule (assignment1 -> assignment2)
WARNING: rejected rule (empty -> <empty>) in state 129
WARNING: reduce/reduce conflict in state 138 resolved using rule (return1 -> vcte)
WARNING: rejected rule (factor -> vcte) in state 138
