Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON declara_vars program_fun star
Rule 2     program_fun -> funs
Rule 3     funs -> function funs
Rule 4     funs -> empty
Rule 5     star -> starI declara_vars star1 CLOSEBRACES
Rule 6     starI -> star_sign OPENBRACES
Rule 7     star_sign -> MULTIPLICATION
Rule 8     star1 -> stmt star1
Rule 9     star1 -> empty
Rule 10    declara_vars -> vars declara_vars
Rule 11    declara_vars -> empty
Rule 12    vars -> type ID dimensionada equals exp SEMICOLON
Rule 13    vars -> type ID dimensionada SEMICOLON
Rule 14    dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET
Rule 15    dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET
Rule 16    dimensionada -> empty
Rule 17    loop -> while
Rule 18    loop -> for
Rule 19    stmt -> assignment
Rule 20    stmt -> condition
Rule 21    stmt -> print
Rule 22    stmt -> loop
Rule 23    stmt -> read
Rule 24    stmt -> graphstmt
Rule 25    stmt -> funCall SEMICOLON
Rule 26    stmt -> return
Rule 27    assignment -> id equals assignment3 SEMICOLON
Rule 28    assignment3 -> exp
Rule 29    assignment3 -> read
Rule 30    vcte -> cte_int
Rule 31    vcte -> cte_float
Rule 32    vcte -> cte_string
Rule 33    vcte -> id
Rule 34    vcte -> funCall
Rule 35    vcte -> vectormatriz
Rule 36    vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET
Rule 37    vectormatriz -> vm1
Rule 38    vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
Rule 39    vm1 -> OPENBRACKET vm2 CLOSEBRACKET
Rule 40    vm2 -> exp COMMA vm2
Rule 41    vm2 -> exp
Rule 42    vm2 -> empty
Rule 43    functionI -> type ID
Rule 44    functionI -> VOID ID
Rule 45    function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun
Rule 46    inicia_fun -> OPENBRACES
Rule 47    termina_fun -> CLOSEBRACES
Rule 48    function2 -> OPENPAREN function3 CLOSEPAREN
Rule 49    function3 -> funParam function5
Rule 50    function3 -> empty
Rule 51    function4 -> stmt function4
Rule 52    function4 -> empty
Rule 53    function5 -> COMMA funParam function5
Rule 54    function5 -> empty
Rule 55    funParam -> type ID
Rule 56    type -> INT
Rule 57    type -> FLOAT
Rule 58    type -> STRING
Rule 59    print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
Rule 60    read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
Rule 61    read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
Rule 62    read1 -> OPENBRACKET exp CLOSEBRACKET
Rule 63    read1 -> empty
Rule 64    equals -> EQUALS
Rule 65    indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
Rule 66    indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET
Rule 67    indice_dimensionada -> empty
Rule 68    id -> ID indice_dimensionada
Rule 69    funCall -> ID iniciaFunCall funCall2 terminaFunCall
Rule 70    iniciaFunCall -> OPENPAREN
Rule 71    terminaFunCall -> CLOSEPAREN
Rule 72    funCall2 -> funCallParam funCall3
Rule 73    funCall2 -> empty
Rule 74    funCall3 -> COMMA funCallParam funCall3
Rule 75    funCall3 -> empty
Rule 76    funCallParam -> exp
Rule 77    cte_int -> CTEINT
Rule 78    cte_float -> CTEFLOAT
Rule 79    cte_string -> CTESTRING
Rule 80    return -> RETURN return1 SEMICOLON
Rule 81    return1 -> vcte
Rule 82    return1 -> exp
Rule 83    loper -> GREATER
Rule 84    loper -> LESS
Rule 85    loper -> NOTEQUAL
Rule 86    loper -> ISEQUAL
Rule 87    condition -> IF head_cond body condition1
Rule 88    condition1 -> elseif head_cond body condition1
Rule 89    condition1 -> else body
Rule 90    condition1 -> empty
Rule 91    elseif -> ELSEIF
Rule 92    else -> ELSE
Rule 93    head_cond -> OPENPAREN expression close_condition
Rule 94    body -> OPENBRACES body1 CLOSEBRACES
Rule 95    close_condition -> CLOSEPAREN
Rule 96    body1 -> stmt body1
Rule 97    body1 -> empty
Rule 98    for -> forInit for1 TWODOTS for2 forClose body
Rule 99    forInit -> FOR
Rule 100   for1 -> OPENPAREN ID
Rule 101   for2 -> exp
Rule 102   forClose -> CLOSEPAREN
Rule 103   while -> while1 body
Rule 104   while1 -> while_w OPENPAREN expression CLOSEPAREN
Rule 105   while_w -> WHILE
Rule 106   dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN
Rule 107   unaExp -> OPENPAREN exp CLOSEPAREN
Rule 108   graphstmt -> graphfig
Rule 109   graphstmt -> graphview
Rule 110   graphstmt -> graphmove
Rule 111   graphfig -> graphfig1 SEMICOLON
Rule 112   graphfig -> graphfig2 SEMICOLON
Rule 113   graphfig1 -> CIRCLE unaExp
Rule 114   graphfig1 -> SQUARE unaExp
Rule 115   graphfig1 -> TRIANGLE unaExp
Rule 116   graphfig2 -> RECTANGLE dosExp
Rule 117   graphmove -> graphmove0 SEMICOLON
Rule 118   graphmove -> graphmove1 SEMICOLON
Rule 119   graphmove -> graphmove2 SEMICOLON
Rule 120   graphmove0 -> HAND_DOWN
Rule 121   graphmove0 -> HAND_UP
Rule 122   graphmove1 -> GO unaExp
Rule 123   graphmove1 -> LEFT unaExp
Rule 124   graphmove1 -> RIGHT unaExp
Rule 125   graphmove1 -> BACK unaExp
Rule 126   graphmove2 -> ARC dosExp
Rule 127   graphview -> graphview0 SEMICOLON
Rule 128   graphview -> graphview1 SEMICOLON
Rule 129   graphview -> graphview2 SEMICOLON
Rule 130   graphview0 -> HIDE_STAR
Rule 131   graphview0 -> SHOW_STAR
Rule 132   graphview1 -> COLOR_STAR unaExp
Rule 133   graphview1 -> SIZE_STAR unaExp
Rule 134   graphview2 -> POSITION dosExp
Rule 135   expression -> exp loper exp
Rule 136   expression -> exp
Rule 137   exp -> term
Rule 138   exp -> term exp_o exp
Rule 139   exp_o -> ADDITION
Rule 140   exp_o -> SUBSTRACTION
Rule 141   openP -> OPENPAREN
Rule 142   closeP -> CLOSEPAREN
Rule 143   term -> factor term_o term
Rule 144   term -> factor
Rule 145   term_o -> MULTIPLICATION
Rule 146   term_o -> DIVISION
Rule 147   factor -> vcte
Rule 148   factor -> openP expression closeP
Rule 149   empty -> <empty>

Terminals, with rules where they appear

ADDITION             : 139
ARC                  : 126
BACK                 : 125
CIRCLE               : 113
CLOSEBRACES          : 5 47 94
CLOSEBRACKET         : 14 15 15 36 38 39 61 61 62 65 65 66
CLOSEPAREN           : 48 59 60 71 95 102 104 106 107 142
COLOR_STAR           : 132
COMMA                : 38 40 53 74 106
CTEFLOAT             : 78
CTEINT               : 14 15 15 77
CTESTRING            : 79
DIVISION             : 146
ELSE                 : 92
ELSEIF               : 91
EQUALS               : 64
FLOAT                : 57
FOR                  : 99
FUN                  : 45
GO                   : 122
GREATER              : 83
HAND_DOWN            : 120
HAND_UP              : 121
HIDE_STAR            : 130
ID                   : 1 12 13 43 44 55 68 69 100
IF                   : 87
INT                  : 56
ISEQUAL              : 86
LEFT                 : 123
LESS                 : 84
MULTIPLICATION       : 7 145
NOTEQUAL             : 85
OPENBRACES           : 6 46 94
OPENBRACKET          : 14 15 15 36 38 39 61 61 62 65 65 66
OPENPAREN            : 48 59 60 70 93 100 104 106 107 141
POSITION             : 134
PRINT                : 59
PROGRAM              : 1
READ                 : 60
RECTANGLE            : 116
RETURN               : 80
RIGHT                : 124
SEMICOLON            : 1 12 13 25 27 59 60 80 111 112 117 118 119 127 128 129
SHOW_STAR            : 131
SIZE_STAR            : 133
SQUARE               : 114
STRING               : 58
SUBSTRACTION         : 140
TRIANGLE             : 115
TWODOTS              : 98
VOID                 : 44
WHILE                : 105
error                : 

Nonterminals, with rules where they appear

assignment           : 19
assignment3          : 27
body                 : 87 88 89 98 103
body1                : 94 96
closeP               : 148
close_condition      : 93
condition            : 20
condition1           : 87 88
cte_float            : 31
cte_int              : 30
cte_string           : 32
declara_vars         : 1 5 10 45
dimensionada         : 12 13
dosExp               : 116 126 134
else                 : 89
elseif               : 88
empty                : 4 9 11 16 42 50 52 54 63 67 73 75 90 97
equals               : 12 27
exp                  : 12 28 40 41 61 61 62 65 65 66 76 82 101 106 106 107 135 135 136 138
exp_o                : 138
expression           : 59 93 104 148
factor               : 143 144
for                  : 18
for1                 : 98
for2                 : 98
forClose             : 98
forInit              : 98
funCall              : 25 34
funCall2             : 69
funCall3             : 72 74
funCallParam         : 72 74
funParam             : 49 53
function             : 3
function2            : 45
function3            : 48
function4            : 45 51
function5            : 49 53
functionI            : 45
funs                 : 2 3
graphfig             : 108
graphfig1            : 111
graphfig2            : 112
graphmove            : 110
graphmove0           : 117
graphmove1           : 118
graphmove2           : 119
graphstmt            : 24
graphview            : 109
graphview0           : 127
graphview1           : 128
graphview2           : 129
head_cond            : 87 88
id                   : 27 33 60
indice_dimensionada  : 68
iniciaFunCall        : 69
inicia_fun           : 45
loop                 : 22
loper                : 135
openP                : 148
print                : 21
program              : 0
program_fun          : 1
read                 : 23 29
read1                : 60
return               : 26
return1              : 80
star                 : 1
star1                : 5 8
starI                : 5
star_sign            : 6
stmt                 : 8 51 96
term                 : 137 138 143
term_o               : 143
terminaFunCall       : 69
termina_fun          : 45
type                 : 12 13 43 55
unaExp               : 113 114 115 122 123 124 125 132 133
vars                 : 10
vcte                 : 81 147
vectormatriz         : 35
vm1                  : 36 37 38
vm2                  : 38 39 40
while                : 17
while1               : 103
while_w              : 104

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON declara_vars program_fun star

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON declara_vars program_fun star

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON declara_vars program_fun star

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . declara_vars program_fun star
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (12) vars -> . type ID dimensionada equals exp SEMICOLON
    (13) vars -> . type ID dimensionada SEMICOLON
    (149) empty -> .
    (56) type -> . INT
    (57) type -> . FLOAT
    (58) type -> . STRING

    FUN             reduce using rule 149 (empty -> .)
    MULTIPLICATION  reduce using rule 149 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    declara_vars                   shift and go to state 5
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 5

    (1) program -> PROGRAM ID SEMICOLON declara_vars . program_fun star
    (2) program_fun -> . funs
    (3) funs -> . function funs
    (4) funs -> . empty
    (45) function -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (149) empty -> .

    FUN             shift and go to state 16
    MULTIPLICATION  reduce using rule 149 (empty -> .)

    program_fun                    shift and go to state 12
    funs                           shift and go to state 13
    function                       shift and go to state 14
    empty                          shift and go to state 15

state 6

    (10) declara_vars -> vars . declara_vars
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (12) vars -> . type ID dimensionada equals exp SEMICOLON
    (13) vars -> . type ID dimensionada SEMICOLON
    (149) empty -> .
    (56) type -> . INT
    (57) type -> . FLOAT
    (58) type -> . STRING

    FUN             reduce using rule 149 (empty -> .)
    MULTIPLICATION  reduce using rule 149 (empty -> .)
    IF              reduce using rule 149 (empty -> .)
    PRINT           reduce using rule 149 (empty -> .)
    READ            reduce using rule 149 (empty -> .)
    ID              reduce using rule 149 (empty -> .)
    RETURN          reduce using rule 149 (empty -> .)
    FOR             reduce using rule 149 (empty -> .)
    CIRCLE          reduce using rule 149 (empty -> .)
    SQUARE          reduce using rule 149 (empty -> .)
    TRIANGLE        reduce using rule 149 (empty -> .)
    RECTANGLE       reduce using rule 149 (empty -> .)
    HIDE_STAR       reduce using rule 149 (empty -> .)
    SHOW_STAR       reduce using rule 149 (empty -> .)
    COLOR_STAR      reduce using rule 149 (empty -> .)
    SIZE_STAR       reduce using rule 149 (empty -> .)
    POSITION        reduce using rule 149 (empty -> .)
    HAND_DOWN       reduce using rule 149 (empty -> .)
    HAND_UP         reduce using rule 149 (empty -> .)
    GO              reduce using rule 149 (empty -> .)
    LEFT            reduce using rule 149 (empty -> .)
    RIGHT           reduce using rule 149 (empty -> .)
    BACK            reduce using rule 149 (empty -> .)
    ARC             reduce using rule 149 (empty -> .)
    WHILE           reduce using rule 149 (empty -> .)
    CLOSEBRACES     reduce using rule 149 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    vars                           shift and go to state 6
    declara_vars                   shift and go to state 17
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 7

    (11) declara_vars -> empty .

    FUN             reduce using rule 11 (declara_vars -> empty .)
    MULTIPLICATION  reduce using rule 11 (declara_vars -> empty .)
    IF              reduce using rule 11 (declara_vars -> empty .)
    PRINT           reduce using rule 11 (declara_vars -> empty .)
    READ            reduce using rule 11 (declara_vars -> empty .)
    ID              reduce using rule 11 (declara_vars -> empty .)
    RETURN          reduce using rule 11 (declara_vars -> empty .)
    FOR             reduce using rule 11 (declara_vars -> empty .)
    CIRCLE          reduce using rule 11 (declara_vars -> empty .)
    SQUARE          reduce using rule 11 (declara_vars -> empty .)
    TRIANGLE        reduce using rule 11 (declara_vars -> empty .)
    RECTANGLE       reduce using rule 11 (declara_vars -> empty .)
    HIDE_STAR       reduce using rule 11 (declara_vars -> empty .)
    SHOW_STAR       reduce using rule 11 (declara_vars -> empty .)
    COLOR_STAR      reduce using rule 11 (declara_vars -> empty .)
    SIZE_STAR       reduce using rule 11 (declara_vars -> empty .)
    POSITION        reduce using rule 11 (declara_vars -> empty .)
    HAND_DOWN       reduce using rule 11 (declara_vars -> empty .)
    HAND_UP         reduce using rule 11 (declara_vars -> empty .)
    GO              reduce using rule 11 (declara_vars -> empty .)
    LEFT            reduce using rule 11 (declara_vars -> empty .)
    RIGHT           reduce using rule 11 (declara_vars -> empty .)
    BACK            reduce using rule 11 (declara_vars -> empty .)
    ARC             reduce using rule 11 (declara_vars -> empty .)
    WHILE           reduce using rule 11 (declara_vars -> empty .)
    CLOSEBRACES     reduce using rule 11 (declara_vars -> empty .)


state 8

    (12) vars -> type . ID dimensionada equals exp SEMICOLON
    (13) vars -> type . ID dimensionada SEMICOLON

    ID              shift and go to state 18


state 9

    (56) type -> INT .

    ID              reduce using rule 56 (type -> INT .)


state 10

    (57) type -> FLOAT .

    ID              reduce using rule 57 (type -> FLOAT .)


state 11

    (58) type -> STRING .

    ID              reduce using rule 58 (type -> STRING .)


state 12

    (1) program -> PROGRAM ID SEMICOLON declara_vars program_fun . star
    (5) star -> . starI declara_vars star1 CLOSEBRACES
    (6) starI -> . star_sign OPENBRACES
    (7) star_sign -> . MULTIPLICATION

    MULTIPLICATION  shift and go to state 22

    star                           shift and go to state 19
    starI                          shift and go to state 20
    star_sign                      shift and go to state 21

state 13

    (2) program_fun -> funs .

    MULTIPLICATION  reduce using rule 2 (program_fun -> funs .)


state 14

    (3) funs -> function . funs
    (3) funs -> . function funs
    (4) funs -> . empty
    (45) function -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (149) empty -> .

    FUN             shift and go to state 16
    MULTIPLICATION  reduce using rule 149 (empty -> .)

    function                       shift and go to state 14
    funs                           shift and go to state 23
    empty                          shift and go to state 15

state 15

    (4) funs -> empty .

    MULTIPLICATION  reduce using rule 4 (funs -> empty .)


state 16

    (45) function -> FUN . functionI function2 inicia_fun declara_vars function4 termina_fun
    (43) functionI -> . type ID
    (44) functionI -> . VOID ID
    (56) type -> . INT
    (57) type -> . FLOAT
    (58) type -> . STRING

    VOID            shift and go to state 26
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    functionI                      shift and go to state 24
    type                           shift and go to state 25

state 17

    (10) declara_vars -> vars declara_vars .

    FUN             reduce using rule 10 (declara_vars -> vars declara_vars .)
    MULTIPLICATION  reduce using rule 10 (declara_vars -> vars declara_vars .)
    IF              reduce using rule 10 (declara_vars -> vars declara_vars .)
    PRINT           reduce using rule 10 (declara_vars -> vars declara_vars .)
    READ            reduce using rule 10 (declara_vars -> vars declara_vars .)
    ID              reduce using rule 10 (declara_vars -> vars declara_vars .)
    RETURN          reduce using rule 10 (declara_vars -> vars declara_vars .)
    FOR             reduce using rule 10 (declara_vars -> vars declara_vars .)
    CIRCLE          reduce using rule 10 (declara_vars -> vars declara_vars .)
    SQUARE          reduce using rule 10 (declara_vars -> vars declara_vars .)
    TRIANGLE        reduce using rule 10 (declara_vars -> vars declara_vars .)
    RECTANGLE       reduce using rule 10 (declara_vars -> vars declara_vars .)
    HIDE_STAR       reduce using rule 10 (declara_vars -> vars declara_vars .)
    SHOW_STAR       reduce using rule 10 (declara_vars -> vars declara_vars .)
    COLOR_STAR      reduce using rule 10 (declara_vars -> vars declara_vars .)
    SIZE_STAR       reduce using rule 10 (declara_vars -> vars declara_vars .)
    POSITION        reduce using rule 10 (declara_vars -> vars declara_vars .)
    HAND_DOWN       reduce using rule 10 (declara_vars -> vars declara_vars .)
    HAND_UP         reduce using rule 10 (declara_vars -> vars declara_vars .)
    GO              reduce using rule 10 (declara_vars -> vars declara_vars .)
    LEFT            reduce using rule 10 (declara_vars -> vars declara_vars .)
    RIGHT           reduce using rule 10 (declara_vars -> vars declara_vars .)
    BACK            reduce using rule 10 (declara_vars -> vars declara_vars .)
    ARC             reduce using rule 10 (declara_vars -> vars declara_vars .)
    WHILE           reduce using rule 10 (declara_vars -> vars declara_vars .)
    CLOSEBRACES     reduce using rule 10 (declara_vars -> vars declara_vars .)


state 18

    (12) vars -> type ID . dimensionada equals exp SEMICOLON
    (13) vars -> type ID . dimensionada SEMICOLON
    (14) dimensionada -> . OPENBRACKET CTEINT CLOSEBRACKET
    (15) dimensionada -> . OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET
    (16) dimensionada -> . empty
    (149) empty -> .

    OPENBRACKET     shift and go to state 28
    SEMICOLON       reduce using rule 149 (empty -> .)
    EQUALS          reduce using rule 149 (empty -> .)

    dimensionada                   shift and go to state 27
    empty                          shift and go to state 29

state 19

    (1) program -> PROGRAM ID SEMICOLON declara_vars program_fun star .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON declara_vars program_fun star .)


state 20

    (5) star -> starI . declara_vars star1 CLOSEBRACES
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (12) vars -> . type ID dimensionada equals exp SEMICOLON
    (13) vars -> . type ID dimensionada SEMICOLON
    (149) empty -> .
    (56) type -> . INT
    (57) type -> . FLOAT
    (58) type -> . STRING

    IF              reduce using rule 149 (empty -> .)
    PRINT           reduce using rule 149 (empty -> .)
    READ            reduce using rule 149 (empty -> .)
    ID              reduce using rule 149 (empty -> .)
    RETURN          reduce using rule 149 (empty -> .)
    FOR             reduce using rule 149 (empty -> .)
    CIRCLE          reduce using rule 149 (empty -> .)
    SQUARE          reduce using rule 149 (empty -> .)
    TRIANGLE        reduce using rule 149 (empty -> .)
    RECTANGLE       reduce using rule 149 (empty -> .)
    HIDE_STAR       reduce using rule 149 (empty -> .)
    SHOW_STAR       reduce using rule 149 (empty -> .)
    COLOR_STAR      reduce using rule 149 (empty -> .)
    SIZE_STAR       reduce using rule 149 (empty -> .)
    POSITION        reduce using rule 149 (empty -> .)
    HAND_DOWN       reduce using rule 149 (empty -> .)
    HAND_UP         reduce using rule 149 (empty -> .)
    GO              reduce using rule 149 (empty -> .)
    LEFT            reduce using rule 149 (empty -> .)
    RIGHT           reduce using rule 149 (empty -> .)
    BACK            reduce using rule 149 (empty -> .)
    ARC             reduce using rule 149 (empty -> .)
    WHILE           reduce using rule 149 (empty -> .)
    CLOSEBRACES     reduce using rule 149 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    declara_vars                   shift and go to state 30
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 21

    (6) starI -> star_sign . OPENBRACES

    OPENBRACES      shift and go to state 31


state 22

    (7) star_sign -> MULTIPLICATION .

    OPENBRACES      reduce using rule 7 (star_sign -> MULTIPLICATION .)


state 23

    (3) funs -> function funs .

    MULTIPLICATION  reduce using rule 3 (funs -> function funs .)


state 24

    (45) function -> FUN functionI . function2 inicia_fun declara_vars function4 termina_fun
    (48) function2 -> . OPENPAREN function3 CLOSEPAREN

    OPENPAREN       shift and go to state 33

    function2                      shift and go to state 32

state 25

    (43) functionI -> type . ID

    ID              shift and go to state 34


state 26

    (44) functionI -> VOID . ID

    ID              shift and go to state 35


state 27

    (12) vars -> type ID dimensionada . equals exp SEMICOLON
    (13) vars -> type ID dimensionada . SEMICOLON
    (64) equals -> . EQUALS

    SEMICOLON       shift and go to state 37
    EQUALS          shift and go to state 38

    equals                         shift and go to state 36

state 28

    (14) dimensionada -> OPENBRACKET . CTEINT CLOSEBRACKET
    (15) dimensionada -> OPENBRACKET . CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET

    CTEINT          shift and go to state 39


state 29

    (16) dimensionada -> empty .

    SEMICOLON       reduce using rule 16 (dimensionada -> empty .)
    EQUALS          reduce using rule 16 (dimensionada -> empty .)


state 30

    (5) star -> starI declara_vars . star1 CLOSEBRACES
    (8) star1 -> . stmt star1
    (9) star1 -> . empty
    (19) stmt -> . assignment
    (20) stmt -> . condition
    (21) stmt -> . print
    (22) stmt -> . loop
    (23) stmt -> . read
    (24) stmt -> . graphstmt
    (25) stmt -> . funCall SEMICOLON
    (26) stmt -> . return
    (149) empty -> .
    (27) assignment -> . id equals assignment3 SEMICOLON
    (87) condition -> . IF head_cond body condition1
    (59) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (17) loop -> . while
    (18) loop -> . for
    (60) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (108) graphstmt -> . graphfig
    (109) graphstmt -> . graphview
    (110) graphstmt -> . graphmove
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (80) return -> . RETURN return1 SEMICOLON
    (68) id -> . ID indice_dimensionada
    (103) while -> . while1 body
    (98) for -> . forInit for1 TWODOTS for2 forClose body
    (111) graphfig -> . graphfig1 SEMICOLON
    (112) graphfig -> . graphfig2 SEMICOLON
    (127) graphview -> . graphview0 SEMICOLON
    (128) graphview -> . graphview1 SEMICOLON
    (129) graphview -> . graphview2 SEMICOLON
    (117) graphmove -> . graphmove0 SEMICOLON
    (118) graphmove -> . graphmove1 SEMICOLON
    (119) graphmove -> . graphmove2 SEMICOLON
    (104) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (99) forInit -> . FOR
    (113) graphfig1 -> . CIRCLE unaExp
    (114) graphfig1 -> . SQUARE unaExp
    (115) graphfig1 -> . TRIANGLE unaExp
    (116) graphfig2 -> . RECTANGLE dosExp
    (130) graphview0 -> . HIDE_STAR
    (131) graphview0 -> . SHOW_STAR
    (132) graphview1 -> . COLOR_STAR unaExp
    (133) graphview1 -> . SIZE_STAR unaExp
    (134) graphview2 -> . POSITION dosExp
    (120) graphmove0 -> . HAND_DOWN
    (121) graphmove0 -> . HAND_UP
    (122) graphmove1 -> . GO unaExp
    (123) graphmove1 -> . LEFT unaExp
    (124) graphmove1 -> . RIGHT unaExp
    (125) graphmove1 -> . BACK unaExp
    (126) graphmove2 -> . ARC dosExp
    (105) while_w -> . WHILE

    CLOSEBRACES     reduce using rule 149 (empty -> .)
    IF              shift and go to state 52
    PRINT           shift and go to state 53
    READ            shift and go to state 56
    ID              shift and go to state 60
    RETURN          shift and go to state 61
    FOR             shift and go to state 73
    CIRCLE          shift and go to state 74
    SQUARE          shift and go to state 75
    TRIANGLE        shift and go to state 76
    RECTANGLE       shift and go to state 77
    HIDE_STAR       shift and go to state 78
    SHOW_STAR       shift and go to state 79
    COLOR_STAR      shift and go to state 80
    SIZE_STAR       shift and go to state 81
    POSITION        shift and go to state 82
    HAND_DOWN       shift and go to state 83
    HAND_UP         shift and go to state 84
    GO              shift and go to state 85
    LEFT            shift and go to state 86
    RIGHT           shift and go to state 87
    BACK            shift and go to state 88
    ARC             shift and go to state 89
    WHILE           shift and go to state 90

    star1                          shift and go to state 40
    stmt                           shift and go to state 41
    empty                          shift and go to state 42
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    funCall                        shift and go to state 49
    return                         shift and go to state 50
    id                             shift and go to state 51
    while                          shift and go to state 54
    for                            shift and go to state 55
    graphfig                       shift and go to state 57
    graphview                      shift and go to state 58
    graphmove                      shift and go to state 59
    while1                         shift and go to state 62
    forInit                        shift and go to state 63
    graphfig1                      shift and go to state 64
    graphfig2                      shift and go to state 65
    graphview0                     shift and go to state 66
    graphview1                     shift and go to state 67
    graphview2                     shift and go to state 68
    graphmove0                     shift and go to state 69
    graphmove1                     shift and go to state 70
    graphmove2                     shift and go to state 71
    while_w                        shift and go to state 72

state 31

    (6) starI -> star_sign OPENBRACES .

    INT             reduce using rule 6 (starI -> star_sign OPENBRACES .)
    FLOAT           reduce using rule 6 (starI -> star_sign OPENBRACES .)
    STRING          reduce using rule 6 (starI -> star_sign OPENBRACES .)
    IF              reduce using rule 6 (starI -> star_sign OPENBRACES .)
    PRINT           reduce using rule 6 (starI -> star_sign OPENBRACES .)
    READ            reduce using rule 6 (starI -> star_sign OPENBRACES .)
    ID              reduce using rule 6 (starI -> star_sign OPENBRACES .)
    RETURN          reduce using rule 6 (starI -> star_sign OPENBRACES .)
    FOR             reduce using rule 6 (starI -> star_sign OPENBRACES .)
    CIRCLE          reduce using rule 6 (starI -> star_sign OPENBRACES .)
    SQUARE          reduce using rule 6 (starI -> star_sign OPENBRACES .)
    TRIANGLE        reduce using rule 6 (starI -> star_sign OPENBRACES .)
    RECTANGLE       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    HIDE_STAR       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    SHOW_STAR       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    COLOR_STAR      reduce using rule 6 (starI -> star_sign OPENBRACES .)
    SIZE_STAR       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    POSITION        reduce using rule 6 (starI -> star_sign OPENBRACES .)
    HAND_DOWN       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    HAND_UP         reduce using rule 6 (starI -> star_sign OPENBRACES .)
    GO              reduce using rule 6 (starI -> star_sign OPENBRACES .)
    LEFT            reduce using rule 6 (starI -> star_sign OPENBRACES .)
    RIGHT           reduce using rule 6 (starI -> star_sign OPENBRACES .)
    BACK            reduce using rule 6 (starI -> star_sign OPENBRACES .)
    ARC             reduce using rule 6 (starI -> star_sign OPENBRACES .)
    WHILE           reduce using rule 6 (starI -> star_sign OPENBRACES .)
    CLOSEBRACES     reduce using rule 6 (starI -> star_sign OPENBRACES .)


state 32

    (45) function -> FUN functionI function2 . inicia_fun declara_vars function4 termina_fun
    (46) inicia_fun -> . OPENBRACES

    OPENBRACES      shift and go to state 92

    inicia_fun                     shift and go to state 91

state 33

    (48) function2 -> OPENPAREN . function3 CLOSEPAREN
    (49) function3 -> . funParam function5
    (50) function3 -> . empty
    (55) funParam -> . type ID
    (149) empty -> .
    (56) type -> . INT
    (57) type -> . FLOAT
    (58) type -> . STRING

    CLOSEPAREN      reduce using rule 149 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    function3                      shift and go to state 93
    funParam                       shift and go to state 94
    empty                          shift and go to state 95
    type                           shift and go to state 96

state 34

    (43) functionI -> type ID .

    OPENPAREN       reduce using rule 43 (functionI -> type ID .)


state 35

    (44) functionI -> VOID ID .

    OPENPAREN       reduce using rule 44 (functionI -> VOID ID .)


state 36

    (12) vars -> type ID dimensionada equals . exp SEMICOLON
    (137) exp -> . term
    (138) exp -> . term exp_o exp
    (143) term -> . factor term_o term
    (144) term -> . factor
    (147) factor -> . vcte
    (148) factor -> . openP expression closeP
    (30) vcte -> . cte_int
    (31) vcte -> . cte_float
    (32) vcte -> . cte_string
    (33) vcte -> . id
    (34) vcte -> . funCall
    (35) vcte -> . vectormatriz
    (141) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID indice_dimensionada
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (36) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (37) vectormatriz -> . vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 37

    (13) vars -> type ID dimensionada SEMICOLON .

    INT             reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    FLOAT           reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    STRING          reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    FUN             reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    MULTIPLICATION  reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    IF              reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    PRINT           reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    READ            reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    ID              reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    RETURN          reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    FOR             reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    CIRCLE          reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    SQUARE          reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    TRIANGLE        reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    RECTANGLE       reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    HIDE_STAR       reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    SHOW_STAR       reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    COLOR_STAR      reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    SIZE_STAR       reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    POSITION        reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    HAND_DOWN       reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    HAND_UP         reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    GO              reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    LEFT            reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    RIGHT           reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    BACK            reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    ARC             reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    WHILE           reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)
    CLOSEBRACES     reduce using rule 13 (vars -> type ID dimensionada SEMICOLON .)


state 38

    (64) equals -> EQUALS .

    OPENPAREN       reduce using rule 64 (equals -> EQUALS .)
    CTEINT          reduce using rule 64 (equals -> EQUALS .)
    CTEFLOAT        reduce using rule 64 (equals -> EQUALS .)
    CTESTRING       reduce using rule 64 (equals -> EQUALS .)
    ID              reduce using rule 64 (equals -> EQUALS .)
    OPENBRACKET     reduce using rule 64 (equals -> EQUALS .)
    READ            reduce using rule 64 (equals -> EQUALS .)


state 39

    (14) dimensionada -> OPENBRACKET CTEINT . CLOSEBRACKET
    (15) dimensionada -> OPENBRACKET CTEINT . CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 115


state 40

    (5) star -> starI declara_vars star1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 116


state 41

    (8) star1 -> stmt . star1
    (8) star1 -> . stmt star1
    (9) star1 -> . empty
    (19) stmt -> . assignment
    (20) stmt -> . condition
    (21) stmt -> . print
    (22) stmt -> . loop
    (23) stmt -> . read
    (24) stmt -> . graphstmt
    (25) stmt -> . funCall SEMICOLON
    (26) stmt -> . return
    (149) empty -> .
    (27) assignment -> . id equals assignment3 SEMICOLON
    (87) condition -> . IF head_cond body condition1
    (59) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (17) loop -> . while
    (18) loop -> . for
    (60) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (108) graphstmt -> . graphfig
    (109) graphstmt -> . graphview
    (110) graphstmt -> . graphmove
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (80) return -> . RETURN return1 SEMICOLON
    (68) id -> . ID indice_dimensionada
    (103) while -> . while1 body
    (98) for -> . forInit for1 TWODOTS for2 forClose body
    (111) graphfig -> . graphfig1 SEMICOLON
    (112) graphfig -> . graphfig2 SEMICOLON
    (127) graphview -> . graphview0 SEMICOLON
    (128) graphview -> . graphview1 SEMICOLON
    (129) graphview -> . graphview2 SEMICOLON
    (117) graphmove -> . graphmove0 SEMICOLON
    (118) graphmove -> . graphmove1 SEMICOLON
    (119) graphmove -> . graphmove2 SEMICOLON
    (104) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (99) forInit -> . FOR
    (113) graphfig1 -> . CIRCLE unaExp
    (114) graphfig1 -> . SQUARE unaExp
    (115) graphfig1 -> . TRIANGLE unaExp
    (116) graphfig2 -> . RECTANGLE dosExp
    (130) graphview0 -> . HIDE_STAR
    (131) graphview0 -> . SHOW_STAR
    (132) graphview1 -> . COLOR_STAR unaExp
    (133) graphview1 -> . SIZE_STAR unaExp
    (134) graphview2 -> . POSITION dosExp
    (120) graphmove0 -> . HAND_DOWN
    (121) graphmove0 -> . HAND_UP
    (122) graphmove1 -> . GO unaExp
    (123) graphmove1 -> . LEFT unaExp
    (124) graphmove1 -> . RIGHT unaExp
    (125) graphmove1 -> . BACK unaExp
    (126) graphmove2 -> . ARC dosExp
    (105) while_w -> . WHILE

    CLOSEBRACES     reduce using rule 149 (empty -> .)
    IF              shift and go to state 52
    PRINT           shift and go to state 53
    READ            shift and go to state 56
    ID              shift and go to state 60
    RETURN          shift and go to state 61
    FOR             shift and go to state 73
    CIRCLE          shift and go to state 74
    SQUARE          shift and go to state 75
    TRIANGLE        shift and go to state 76
    RECTANGLE       shift and go to state 77
    HIDE_STAR       shift and go to state 78
    SHOW_STAR       shift and go to state 79
    COLOR_STAR      shift and go to state 80
    SIZE_STAR       shift and go to state 81
    POSITION        shift and go to state 82
    HAND_DOWN       shift and go to state 83
    HAND_UP         shift and go to state 84
    GO              shift and go to state 85
    LEFT            shift and go to state 86
    RIGHT           shift and go to state 87
    BACK            shift and go to state 88
    ARC             shift and go to state 89
    WHILE           shift and go to state 90

    stmt                           shift and go to state 41
    star1                          shift and go to state 117
    empty                          shift and go to state 42
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    funCall                        shift and go to state 49
    return                         shift and go to state 50
    id                             shift and go to state 51
    while                          shift and go to state 54
    for                            shift and go to state 55
    graphfig                       shift and go to state 57
    graphview                      shift and go to state 58
    graphmove                      shift and go to state 59
    while1                         shift and go to state 62
    forInit                        shift and go to state 63
    graphfig1                      shift and go to state 64
    graphfig2                      shift and go to state 65
    graphview0                     shift and go to state 66
    graphview1                     shift and go to state 67
    graphview2                     shift and go to state 68
    graphmove0                     shift and go to state 69
    graphmove1                     shift and go to state 70
    graphmove2                     shift and go to state 71
    while_w                        shift and go to state 72

state 42

    (9) star1 -> empty .

    CLOSEBRACES     reduce using rule 9 (star1 -> empty .)


state 43

    (19) stmt -> assignment .

    IF              reduce using rule 19 (stmt -> assignment .)
    PRINT           reduce using rule 19 (stmt -> assignment .)
    READ            reduce using rule 19 (stmt -> assignment .)
    ID              reduce using rule 19 (stmt -> assignment .)
    RETURN          reduce using rule 19 (stmt -> assignment .)
    FOR             reduce using rule 19 (stmt -> assignment .)
    CIRCLE          reduce using rule 19 (stmt -> assignment .)
    SQUARE          reduce using rule 19 (stmt -> assignment .)
    TRIANGLE        reduce using rule 19 (stmt -> assignment .)
    RECTANGLE       reduce using rule 19 (stmt -> assignment .)
    HIDE_STAR       reduce using rule 19 (stmt -> assignment .)
    SHOW_STAR       reduce using rule 19 (stmt -> assignment .)
    COLOR_STAR      reduce using rule 19 (stmt -> assignment .)
    SIZE_STAR       reduce using rule 19 (stmt -> assignment .)
    POSITION        reduce using rule 19 (stmt -> assignment .)
    HAND_DOWN       reduce using rule 19 (stmt -> assignment .)
    HAND_UP         reduce using rule 19 (stmt -> assignment .)
    GO              reduce using rule 19 (stmt -> assignment .)
    LEFT            reduce using rule 19 (stmt -> assignment .)
    RIGHT           reduce using rule 19 (stmt -> assignment .)
    BACK            reduce using rule 19 (stmt -> assignment .)
    ARC             reduce using rule 19 (stmt -> assignment .)
    WHILE           reduce using rule 19 (stmt -> assignment .)
    CLOSEBRACES     reduce using rule 19 (stmt -> assignment .)


state 44

    (20) stmt -> condition .

    IF              reduce using rule 20 (stmt -> condition .)
    PRINT           reduce using rule 20 (stmt -> condition .)
    READ            reduce using rule 20 (stmt -> condition .)
    ID              reduce using rule 20 (stmt -> condition .)
    RETURN          reduce using rule 20 (stmt -> condition .)
    FOR             reduce using rule 20 (stmt -> condition .)
    CIRCLE          reduce using rule 20 (stmt -> condition .)
    SQUARE          reduce using rule 20 (stmt -> condition .)
    TRIANGLE        reduce using rule 20 (stmt -> condition .)
    RECTANGLE       reduce using rule 20 (stmt -> condition .)
    HIDE_STAR       reduce using rule 20 (stmt -> condition .)
    SHOW_STAR       reduce using rule 20 (stmt -> condition .)
    COLOR_STAR      reduce using rule 20 (stmt -> condition .)
    SIZE_STAR       reduce using rule 20 (stmt -> condition .)
    POSITION        reduce using rule 20 (stmt -> condition .)
    HAND_DOWN       reduce using rule 20 (stmt -> condition .)
    HAND_UP         reduce using rule 20 (stmt -> condition .)
    GO              reduce using rule 20 (stmt -> condition .)
    LEFT            reduce using rule 20 (stmt -> condition .)
    RIGHT           reduce using rule 20 (stmt -> condition .)
    BACK            reduce using rule 20 (stmt -> condition .)
    ARC             reduce using rule 20 (stmt -> condition .)
    WHILE           reduce using rule 20 (stmt -> condition .)
    CLOSEBRACES     reduce using rule 20 (stmt -> condition .)


state 45

    (21) stmt -> print .

    IF              reduce using rule 21 (stmt -> print .)
    PRINT           reduce using rule 21 (stmt -> print .)
    READ            reduce using rule 21 (stmt -> print .)
    ID              reduce using rule 21 (stmt -> print .)
    RETURN          reduce using rule 21 (stmt -> print .)
    FOR             reduce using rule 21 (stmt -> print .)
    CIRCLE          reduce using rule 21 (stmt -> print .)
    SQUARE          reduce using rule 21 (stmt -> print .)
    TRIANGLE        reduce using rule 21 (stmt -> print .)
    RECTANGLE       reduce using rule 21 (stmt -> print .)
    HIDE_STAR       reduce using rule 21 (stmt -> print .)
    SHOW_STAR       reduce using rule 21 (stmt -> print .)
    COLOR_STAR      reduce using rule 21 (stmt -> print .)
    SIZE_STAR       reduce using rule 21 (stmt -> print .)
    POSITION        reduce using rule 21 (stmt -> print .)
    HAND_DOWN       reduce using rule 21 (stmt -> print .)
    HAND_UP         reduce using rule 21 (stmt -> print .)
    GO              reduce using rule 21 (stmt -> print .)
    LEFT            reduce using rule 21 (stmt -> print .)
    RIGHT           reduce using rule 21 (stmt -> print .)
    BACK            reduce using rule 21 (stmt -> print .)
    ARC             reduce using rule 21 (stmt -> print .)
    WHILE           reduce using rule 21 (stmt -> print .)
    CLOSEBRACES     reduce using rule 21 (stmt -> print .)


state 46

    (22) stmt -> loop .

    IF              reduce using rule 22 (stmt -> loop .)
    PRINT           reduce using rule 22 (stmt -> loop .)
    READ            reduce using rule 22 (stmt -> loop .)
    ID              reduce using rule 22 (stmt -> loop .)
    RETURN          reduce using rule 22 (stmt -> loop .)
    FOR             reduce using rule 22 (stmt -> loop .)
    CIRCLE          reduce using rule 22 (stmt -> loop .)
    SQUARE          reduce using rule 22 (stmt -> loop .)
    TRIANGLE        reduce using rule 22 (stmt -> loop .)
    RECTANGLE       reduce using rule 22 (stmt -> loop .)
    HIDE_STAR       reduce using rule 22 (stmt -> loop .)
    SHOW_STAR       reduce using rule 22 (stmt -> loop .)
    COLOR_STAR      reduce using rule 22 (stmt -> loop .)
    SIZE_STAR       reduce using rule 22 (stmt -> loop .)
    POSITION        reduce using rule 22 (stmt -> loop .)
    HAND_DOWN       reduce using rule 22 (stmt -> loop .)
    HAND_UP         reduce using rule 22 (stmt -> loop .)
    GO              reduce using rule 22 (stmt -> loop .)
    LEFT            reduce using rule 22 (stmt -> loop .)
    RIGHT           reduce using rule 22 (stmt -> loop .)
    BACK            reduce using rule 22 (stmt -> loop .)
    ARC             reduce using rule 22 (stmt -> loop .)
    WHILE           reduce using rule 22 (stmt -> loop .)
    CLOSEBRACES     reduce using rule 22 (stmt -> loop .)


state 47

    (23) stmt -> read .

    IF              reduce using rule 23 (stmt -> read .)
    PRINT           reduce using rule 23 (stmt -> read .)
    READ            reduce using rule 23 (stmt -> read .)
    ID              reduce using rule 23 (stmt -> read .)
    RETURN          reduce using rule 23 (stmt -> read .)
    FOR             reduce using rule 23 (stmt -> read .)
    CIRCLE          reduce using rule 23 (stmt -> read .)
    SQUARE          reduce using rule 23 (stmt -> read .)
    TRIANGLE        reduce using rule 23 (stmt -> read .)
    RECTANGLE       reduce using rule 23 (stmt -> read .)
    HIDE_STAR       reduce using rule 23 (stmt -> read .)
    SHOW_STAR       reduce using rule 23 (stmt -> read .)
    COLOR_STAR      reduce using rule 23 (stmt -> read .)
    SIZE_STAR       reduce using rule 23 (stmt -> read .)
    POSITION        reduce using rule 23 (stmt -> read .)
    HAND_DOWN       reduce using rule 23 (stmt -> read .)
    HAND_UP         reduce using rule 23 (stmt -> read .)
    GO              reduce using rule 23 (stmt -> read .)
    LEFT            reduce using rule 23 (stmt -> read .)
    RIGHT           reduce using rule 23 (stmt -> read .)
    BACK            reduce using rule 23 (stmt -> read .)
    ARC             reduce using rule 23 (stmt -> read .)
    WHILE           reduce using rule 23 (stmt -> read .)
    CLOSEBRACES     reduce using rule 23 (stmt -> read .)


state 48

    (24) stmt -> graphstmt .

    IF              reduce using rule 24 (stmt -> graphstmt .)
    PRINT           reduce using rule 24 (stmt -> graphstmt .)
    READ            reduce using rule 24 (stmt -> graphstmt .)
    ID              reduce using rule 24 (stmt -> graphstmt .)
    RETURN          reduce using rule 24 (stmt -> graphstmt .)
    FOR             reduce using rule 24 (stmt -> graphstmt .)
    CIRCLE          reduce using rule 24 (stmt -> graphstmt .)
    SQUARE          reduce using rule 24 (stmt -> graphstmt .)
    TRIANGLE        reduce using rule 24 (stmt -> graphstmt .)
    RECTANGLE       reduce using rule 24 (stmt -> graphstmt .)
    HIDE_STAR       reduce using rule 24 (stmt -> graphstmt .)
    SHOW_STAR       reduce using rule 24 (stmt -> graphstmt .)
    COLOR_STAR      reduce using rule 24 (stmt -> graphstmt .)
    SIZE_STAR       reduce using rule 24 (stmt -> graphstmt .)
    POSITION        reduce using rule 24 (stmt -> graphstmt .)
    HAND_DOWN       reduce using rule 24 (stmt -> graphstmt .)
    HAND_UP         reduce using rule 24 (stmt -> graphstmt .)
    GO              reduce using rule 24 (stmt -> graphstmt .)
    LEFT            reduce using rule 24 (stmt -> graphstmt .)
    RIGHT           reduce using rule 24 (stmt -> graphstmt .)
    BACK            reduce using rule 24 (stmt -> graphstmt .)
    ARC             reduce using rule 24 (stmt -> graphstmt .)
    WHILE           reduce using rule 24 (stmt -> graphstmt .)
    CLOSEBRACES     reduce using rule 24 (stmt -> graphstmt .)


state 49

    (25) stmt -> funCall . SEMICOLON

    SEMICOLON       shift and go to state 118


state 50

    (26) stmt -> return .

    IF              reduce using rule 26 (stmt -> return .)
    PRINT           reduce using rule 26 (stmt -> return .)
    READ            reduce using rule 26 (stmt -> return .)
    ID              reduce using rule 26 (stmt -> return .)
    RETURN          reduce using rule 26 (stmt -> return .)
    FOR             reduce using rule 26 (stmt -> return .)
    CIRCLE          reduce using rule 26 (stmt -> return .)
    SQUARE          reduce using rule 26 (stmt -> return .)
    TRIANGLE        reduce using rule 26 (stmt -> return .)
    RECTANGLE       reduce using rule 26 (stmt -> return .)
    HIDE_STAR       reduce using rule 26 (stmt -> return .)
    SHOW_STAR       reduce using rule 26 (stmt -> return .)
    COLOR_STAR      reduce using rule 26 (stmt -> return .)
    SIZE_STAR       reduce using rule 26 (stmt -> return .)
    POSITION        reduce using rule 26 (stmt -> return .)
    HAND_DOWN       reduce using rule 26 (stmt -> return .)
    HAND_UP         reduce using rule 26 (stmt -> return .)
    GO              reduce using rule 26 (stmt -> return .)
    LEFT            reduce using rule 26 (stmt -> return .)
    RIGHT           reduce using rule 26 (stmt -> return .)
    BACK            reduce using rule 26 (stmt -> return .)
    ARC             reduce using rule 26 (stmt -> return .)
    WHILE           reduce using rule 26 (stmt -> return .)
    CLOSEBRACES     reduce using rule 26 (stmt -> return .)


state 51

    (27) assignment -> id . equals assignment3 SEMICOLON
    (64) equals -> . EQUALS

    EQUALS          shift and go to state 38

    equals                         shift and go to state 119

state 52

    (87) condition -> IF . head_cond body condition1
    (93) head_cond -> . OPENPAREN expression close_condition

    OPENPAREN       shift and go to state 121

    head_cond                      shift and go to state 120

state 53

    (59) print -> PRINT . OPENPAREN expression CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 122


state 54

    (17) loop -> while .

    IF              reduce using rule 17 (loop -> while .)
    PRINT           reduce using rule 17 (loop -> while .)
    READ            reduce using rule 17 (loop -> while .)
    ID              reduce using rule 17 (loop -> while .)
    RETURN          reduce using rule 17 (loop -> while .)
    FOR             reduce using rule 17 (loop -> while .)
    CIRCLE          reduce using rule 17 (loop -> while .)
    SQUARE          reduce using rule 17 (loop -> while .)
    TRIANGLE        reduce using rule 17 (loop -> while .)
    RECTANGLE       reduce using rule 17 (loop -> while .)
    HIDE_STAR       reduce using rule 17 (loop -> while .)
    SHOW_STAR       reduce using rule 17 (loop -> while .)
    COLOR_STAR      reduce using rule 17 (loop -> while .)
    SIZE_STAR       reduce using rule 17 (loop -> while .)
    POSITION        reduce using rule 17 (loop -> while .)
    HAND_DOWN       reduce using rule 17 (loop -> while .)
    HAND_UP         reduce using rule 17 (loop -> while .)
    GO              reduce using rule 17 (loop -> while .)
    LEFT            reduce using rule 17 (loop -> while .)
    RIGHT           reduce using rule 17 (loop -> while .)
    BACK            reduce using rule 17 (loop -> while .)
    ARC             reduce using rule 17 (loop -> while .)
    WHILE           reduce using rule 17 (loop -> while .)
    CLOSEBRACES     reduce using rule 17 (loop -> while .)


state 55

    (18) loop -> for .

    IF              reduce using rule 18 (loop -> for .)
    PRINT           reduce using rule 18 (loop -> for .)
    READ            reduce using rule 18 (loop -> for .)
    ID              reduce using rule 18 (loop -> for .)
    RETURN          reduce using rule 18 (loop -> for .)
    FOR             reduce using rule 18 (loop -> for .)
    CIRCLE          reduce using rule 18 (loop -> for .)
    SQUARE          reduce using rule 18 (loop -> for .)
    TRIANGLE        reduce using rule 18 (loop -> for .)
    RECTANGLE       reduce using rule 18 (loop -> for .)
    HIDE_STAR       reduce using rule 18 (loop -> for .)
    SHOW_STAR       reduce using rule 18 (loop -> for .)
    COLOR_STAR      reduce using rule 18 (loop -> for .)
    SIZE_STAR       reduce using rule 18 (loop -> for .)
    POSITION        reduce using rule 18 (loop -> for .)
    HAND_DOWN       reduce using rule 18 (loop -> for .)
    HAND_UP         reduce using rule 18 (loop -> for .)
    GO              reduce using rule 18 (loop -> for .)
    LEFT            reduce using rule 18 (loop -> for .)
    RIGHT           reduce using rule 18 (loop -> for .)
    BACK            reduce using rule 18 (loop -> for .)
    ARC             reduce using rule 18 (loop -> for .)
    WHILE           reduce using rule 18 (loop -> for .)
    CLOSEBRACES     reduce using rule 18 (loop -> for .)


state 56

    (60) read -> READ . OPENPAREN id read1 CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 123


state 57

    (108) graphstmt -> graphfig .

    IF              reduce using rule 108 (graphstmt -> graphfig .)
    PRINT           reduce using rule 108 (graphstmt -> graphfig .)
    READ            reduce using rule 108 (graphstmt -> graphfig .)
    ID              reduce using rule 108 (graphstmt -> graphfig .)
    RETURN          reduce using rule 108 (graphstmt -> graphfig .)
    FOR             reduce using rule 108 (graphstmt -> graphfig .)
    CIRCLE          reduce using rule 108 (graphstmt -> graphfig .)
    SQUARE          reduce using rule 108 (graphstmt -> graphfig .)
    TRIANGLE        reduce using rule 108 (graphstmt -> graphfig .)
    RECTANGLE       reduce using rule 108 (graphstmt -> graphfig .)
    HIDE_STAR       reduce using rule 108 (graphstmt -> graphfig .)
    SHOW_STAR       reduce using rule 108 (graphstmt -> graphfig .)
    COLOR_STAR      reduce using rule 108 (graphstmt -> graphfig .)
    SIZE_STAR       reduce using rule 108 (graphstmt -> graphfig .)
    POSITION        reduce using rule 108 (graphstmt -> graphfig .)
    HAND_DOWN       reduce using rule 108 (graphstmt -> graphfig .)
    HAND_UP         reduce using rule 108 (graphstmt -> graphfig .)
    GO              reduce using rule 108 (graphstmt -> graphfig .)
    LEFT            reduce using rule 108 (graphstmt -> graphfig .)
    RIGHT           reduce using rule 108 (graphstmt -> graphfig .)
    BACK            reduce using rule 108 (graphstmt -> graphfig .)
    ARC             reduce using rule 108 (graphstmt -> graphfig .)
    WHILE           reduce using rule 108 (graphstmt -> graphfig .)
    CLOSEBRACES     reduce using rule 108 (graphstmt -> graphfig .)


state 58

    (109) graphstmt -> graphview .

    IF              reduce using rule 109 (graphstmt -> graphview .)
    PRINT           reduce using rule 109 (graphstmt -> graphview .)
    READ            reduce using rule 109 (graphstmt -> graphview .)
    ID              reduce using rule 109 (graphstmt -> graphview .)
    RETURN          reduce using rule 109 (graphstmt -> graphview .)
    FOR             reduce using rule 109 (graphstmt -> graphview .)
    CIRCLE          reduce using rule 109 (graphstmt -> graphview .)
    SQUARE          reduce using rule 109 (graphstmt -> graphview .)
    TRIANGLE        reduce using rule 109 (graphstmt -> graphview .)
    RECTANGLE       reduce using rule 109 (graphstmt -> graphview .)
    HIDE_STAR       reduce using rule 109 (graphstmt -> graphview .)
    SHOW_STAR       reduce using rule 109 (graphstmt -> graphview .)
    COLOR_STAR      reduce using rule 109 (graphstmt -> graphview .)
    SIZE_STAR       reduce using rule 109 (graphstmt -> graphview .)
    POSITION        reduce using rule 109 (graphstmt -> graphview .)
    HAND_DOWN       reduce using rule 109 (graphstmt -> graphview .)
    HAND_UP         reduce using rule 109 (graphstmt -> graphview .)
    GO              reduce using rule 109 (graphstmt -> graphview .)
    LEFT            reduce using rule 109 (graphstmt -> graphview .)
    RIGHT           reduce using rule 109 (graphstmt -> graphview .)
    BACK            reduce using rule 109 (graphstmt -> graphview .)
    ARC             reduce using rule 109 (graphstmt -> graphview .)
    WHILE           reduce using rule 109 (graphstmt -> graphview .)
    CLOSEBRACES     reduce using rule 109 (graphstmt -> graphview .)


state 59

    (110) graphstmt -> graphmove .

    IF              reduce using rule 110 (graphstmt -> graphmove .)
    PRINT           reduce using rule 110 (graphstmt -> graphmove .)
    READ            reduce using rule 110 (graphstmt -> graphmove .)
    ID              reduce using rule 110 (graphstmt -> graphmove .)
    RETURN          reduce using rule 110 (graphstmt -> graphmove .)
    FOR             reduce using rule 110 (graphstmt -> graphmove .)
    CIRCLE          reduce using rule 110 (graphstmt -> graphmove .)
    SQUARE          reduce using rule 110 (graphstmt -> graphmove .)
    TRIANGLE        reduce using rule 110 (graphstmt -> graphmove .)
    RECTANGLE       reduce using rule 110 (graphstmt -> graphmove .)
    HIDE_STAR       reduce using rule 110 (graphstmt -> graphmove .)
    SHOW_STAR       reduce using rule 110 (graphstmt -> graphmove .)
    COLOR_STAR      reduce using rule 110 (graphstmt -> graphmove .)
    SIZE_STAR       reduce using rule 110 (graphstmt -> graphmove .)
    POSITION        reduce using rule 110 (graphstmt -> graphmove .)
    HAND_DOWN       reduce using rule 110 (graphstmt -> graphmove .)
    HAND_UP         reduce using rule 110 (graphstmt -> graphmove .)
    GO              reduce using rule 110 (graphstmt -> graphmove .)
    LEFT            reduce using rule 110 (graphstmt -> graphmove .)
    RIGHT           reduce using rule 110 (graphstmt -> graphmove .)
    BACK            reduce using rule 110 (graphstmt -> graphmove .)
    ARC             reduce using rule 110 (graphstmt -> graphmove .)
    WHILE           reduce using rule 110 (graphstmt -> graphmove .)
    CLOSEBRACES     reduce using rule 110 (graphstmt -> graphmove .)


state 60

    (69) funCall -> ID . iniciaFunCall funCall2 terminaFunCall
    (68) id -> ID . indice_dimensionada
    (70) iniciaFunCall -> . OPENPAREN
    (65) indice_dimensionada -> . OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (66) indice_dimensionada -> . OPENBRACKET exp CLOSEBRACKET
    (67) indice_dimensionada -> . empty
    (149) empty -> .

    OPENPAREN       shift and go to state 126
    OPENBRACKET     shift and go to state 127
    EQUALS          reduce using rule 149 (empty -> .)

    iniciaFunCall                  shift and go to state 124
    indice_dimensionada            shift and go to state 125
    empty                          shift and go to state 128

state 61

    (80) return -> RETURN . return1 SEMICOLON
    (81) return1 -> . vcte
    (82) return1 -> . exp
    (30) vcte -> . cte_int
    (31) vcte -> . cte_float
    (32) vcte -> . cte_string
    (33) vcte -> . id
    (34) vcte -> . funCall
    (35) vcte -> . vectormatriz
    (137) exp -> . term
    (138) exp -> . term exp_o exp
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID indice_dimensionada
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (36) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (37) vectormatriz -> . vm1
    (143) term -> . factor term_o term
    (144) term -> . factor
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (147) factor -> . vcte
    (148) factor -> . openP expression closeP
    (141) openP -> . OPENPAREN

    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113
    OPENPAREN       shift and go to state 109

    return1                        shift and go to state 129
    vcte                           shift and go to state 130
    exp                            shift and go to state 131
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    term                           shift and go to state 99
    vm1                            shift and go to state 114
    factor                         shift and go to state 100
    openP                          shift and go to state 102

state 62

    (103) while -> while1 . body
    (94) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 133

    body                           shift and go to state 132

state 63

    (98) for -> forInit . for1 TWODOTS for2 forClose body
    (100) for1 -> . OPENPAREN ID

    OPENPAREN       shift and go to state 135

    for1                           shift and go to state 134

state 64

    (111) graphfig -> graphfig1 . SEMICOLON

    SEMICOLON       shift and go to state 136


state 65

    (112) graphfig -> graphfig2 . SEMICOLON

    SEMICOLON       shift and go to state 137


state 66

    (127) graphview -> graphview0 . SEMICOLON

    SEMICOLON       shift and go to state 138


state 67

    (128) graphview -> graphview1 . SEMICOLON

    SEMICOLON       shift and go to state 139


state 68

    (129) graphview -> graphview2 . SEMICOLON

    SEMICOLON       shift and go to state 140


state 69

    (117) graphmove -> graphmove0 . SEMICOLON

    SEMICOLON       shift and go to state 141


state 70

    (118) graphmove -> graphmove1 . SEMICOLON

    SEMICOLON       shift and go to state 142


state 71

    (119) graphmove -> graphmove2 . SEMICOLON

    SEMICOLON       shift and go to state 143


state 72

    (104) while1 -> while_w . OPENPAREN expression CLOSEPAREN

    OPENPAREN       shift and go to state 144


state 73

    (99) forInit -> FOR .

    OPENPAREN       reduce using rule 99 (forInit -> FOR .)


state 74

    (113) graphfig1 -> CIRCLE . unaExp
    (107) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    unaExp                         shift and go to state 145

state 75

    (114) graphfig1 -> SQUARE . unaExp
    (107) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    unaExp                         shift and go to state 147

state 76

    (115) graphfig1 -> TRIANGLE . unaExp
    (107) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    unaExp                         shift and go to state 148

state 77

    (116) graphfig2 -> RECTANGLE . dosExp
    (106) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 150

    dosExp                         shift and go to state 149

state 78

    (130) graphview0 -> HIDE_STAR .

    SEMICOLON       reduce using rule 130 (graphview0 -> HIDE_STAR .)


state 79

    (131) graphview0 -> SHOW_STAR .

    SEMICOLON       reduce using rule 131 (graphview0 -> SHOW_STAR .)


state 80

    (132) graphview1 -> COLOR_STAR . unaExp
    (107) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    unaExp                         shift and go to state 151

state 81

    (133) graphview1 -> SIZE_STAR . unaExp
    (107) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    unaExp                         shift and go to state 152

state 82

    (134) graphview2 -> POSITION . dosExp
    (106) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 150

    dosExp                         shift and go to state 153

state 83

    (120) graphmove0 -> HAND_DOWN .

    SEMICOLON       reduce using rule 120 (graphmove0 -> HAND_DOWN .)


state 84

    (121) graphmove0 -> HAND_UP .

    SEMICOLON       reduce using rule 121 (graphmove0 -> HAND_UP .)


state 85

    (122) graphmove1 -> GO . unaExp
    (107) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    unaExp                         shift and go to state 154

state 86

    (123) graphmove1 -> LEFT . unaExp
    (107) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    unaExp                         shift and go to state 155

state 87

    (124) graphmove1 -> RIGHT . unaExp
    (107) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    unaExp                         shift and go to state 156

state 88

    (125) graphmove1 -> BACK . unaExp
    (107) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    unaExp                         shift and go to state 157

state 89

    (126) graphmove2 -> ARC . dosExp
    (106) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 150

    dosExp                         shift and go to state 158

state 90

    (105) while_w -> WHILE .

    OPENPAREN       reduce using rule 105 (while_w -> WHILE .)


state 91

    (45) function -> FUN functionI function2 inicia_fun . declara_vars function4 termina_fun
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (12) vars -> . type ID dimensionada equals exp SEMICOLON
    (13) vars -> . type ID dimensionada SEMICOLON
    (149) empty -> .
    (56) type -> . INT
    (57) type -> . FLOAT
    (58) type -> . STRING

    IF              reduce using rule 149 (empty -> .)
    PRINT           reduce using rule 149 (empty -> .)
    READ            reduce using rule 149 (empty -> .)
    ID              reduce using rule 149 (empty -> .)
    RETURN          reduce using rule 149 (empty -> .)
    FOR             reduce using rule 149 (empty -> .)
    CIRCLE          reduce using rule 149 (empty -> .)
    SQUARE          reduce using rule 149 (empty -> .)
    TRIANGLE        reduce using rule 149 (empty -> .)
    RECTANGLE       reduce using rule 149 (empty -> .)
    HIDE_STAR       reduce using rule 149 (empty -> .)
    SHOW_STAR       reduce using rule 149 (empty -> .)
    COLOR_STAR      reduce using rule 149 (empty -> .)
    SIZE_STAR       reduce using rule 149 (empty -> .)
    POSITION        reduce using rule 149 (empty -> .)
    HAND_DOWN       reduce using rule 149 (empty -> .)
    HAND_UP         reduce using rule 149 (empty -> .)
    GO              reduce using rule 149 (empty -> .)
    LEFT            reduce using rule 149 (empty -> .)
    RIGHT           reduce using rule 149 (empty -> .)
    BACK            reduce using rule 149 (empty -> .)
    ARC             reduce using rule 149 (empty -> .)
    WHILE           reduce using rule 149 (empty -> .)
    CLOSEBRACES     reduce using rule 149 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    declara_vars                   shift and go to state 159
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 92

    (46) inicia_fun -> OPENBRACES .

    INT             reduce using rule 46 (inicia_fun -> OPENBRACES .)
    FLOAT           reduce using rule 46 (inicia_fun -> OPENBRACES .)
    STRING          reduce using rule 46 (inicia_fun -> OPENBRACES .)
    IF              reduce using rule 46 (inicia_fun -> OPENBRACES .)
    PRINT           reduce using rule 46 (inicia_fun -> OPENBRACES .)
    READ            reduce using rule 46 (inicia_fun -> OPENBRACES .)
    ID              reduce using rule 46 (inicia_fun -> OPENBRACES .)
    RETURN          reduce using rule 46 (inicia_fun -> OPENBRACES .)
    FOR             reduce using rule 46 (inicia_fun -> OPENBRACES .)
    CIRCLE          reduce using rule 46 (inicia_fun -> OPENBRACES .)
    SQUARE          reduce using rule 46 (inicia_fun -> OPENBRACES .)
    TRIANGLE        reduce using rule 46 (inicia_fun -> OPENBRACES .)
    RECTANGLE       reduce using rule 46 (inicia_fun -> OPENBRACES .)
    HIDE_STAR       reduce using rule 46 (inicia_fun -> OPENBRACES .)
    SHOW_STAR       reduce using rule 46 (inicia_fun -> OPENBRACES .)
    COLOR_STAR      reduce using rule 46 (inicia_fun -> OPENBRACES .)
    SIZE_STAR       reduce using rule 46 (inicia_fun -> OPENBRACES .)
    POSITION        reduce using rule 46 (inicia_fun -> OPENBRACES .)
    HAND_DOWN       reduce using rule 46 (inicia_fun -> OPENBRACES .)
    HAND_UP         reduce using rule 46 (inicia_fun -> OPENBRACES .)
    GO              reduce using rule 46 (inicia_fun -> OPENBRACES .)
    LEFT            reduce using rule 46 (inicia_fun -> OPENBRACES .)
    RIGHT           reduce using rule 46 (inicia_fun -> OPENBRACES .)
    BACK            reduce using rule 46 (inicia_fun -> OPENBRACES .)
    ARC             reduce using rule 46 (inicia_fun -> OPENBRACES .)
    WHILE           reduce using rule 46 (inicia_fun -> OPENBRACES .)
    CLOSEBRACES     reduce using rule 46 (inicia_fun -> OPENBRACES .)


state 93

    (48) function2 -> OPENPAREN function3 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 160


state 94

    (49) function3 -> funParam . function5
    (53) function5 -> . COMMA funParam function5
    (54) function5 -> . empty
    (149) empty -> .

    COMMA           shift and go to state 162
    CLOSEPAREN      reduce using rule 149 (empty -> .)

    function5                      shift and go to state 161
    empty                          shift and go to state 163

state 95

    (50) function3 -> empty .

    CLOSEPAREN      reduce using rule 50 (function3 -> empty .)


state 96

    (55) funParam -> type . ID

    ID              shift and go to state 164


state 97

    (68) id -> ID . indice_dimensionada
    (69) funCall -> ID . iniciaFunCall funCall2 terminaFunCall
    (65) indice_dimensionada -> . OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (66) indice_dimensionada -> . OPENBRACKET exp CLOSEBRACKET
    (67) indice_dimensionada -> . empty
    (70) iniciaFunCall -> . OPENPAREN
    (149) empty -> .

    OPENBRACKET     shift and go to state 127
    OPENPAREN       shift and go to state 126
    MULTIPLICATION  reduce using rule 149 (empty -> .)
    DIVISION        reduce using rule 149 (empty -> .)
    ADDITION        reduce using rule 149 (empty -> .)
    SUBSTRACTION    reduce using rule 149 (empty -> .)
    SEMICOLON       reduce using rule 149 (empty -> .)
    GREATER         reduce using rule 149 (empty -> .)
    LESS            reduce using rule 149 (empty -> .)
    NOTEQUAL        reduce using rule 149 (empty -> .)
    ISEQUAL         reduce using rule 149 (empty -> .)
    CLOSEPAREN      reduce using rule 149 (empty -> .)
    COMMA           reduce using rule 149 (empty -> .)
    CLOSEBRACKET    reduce using rule 149 (empty -> .)

    indice_dimensionada            shift and go to state 125
    iniciaFunCall                  shift and go to state 124
    empty                          shift and go to state 128

state 98

    (12) vars -> type ID dimensionada equals exp . SEMICOLON

    SEMICOLON       shift and go to state 165


state 99

    (137) exp -> term .
    (138) exp -> term . exp_o exp
    (139) exp_o -> . ADDITION
    (140) exp_o -> . SUBSTRACTION

    SEMICOLON       reduce using rule 137 (exp -> term .)
    GREATER         reduce using rule 137 (exp -> term .)
    LESS            reduce using rule 137 (exp -> term .)
    NOTEQUAL        reduce using rule 137 (exp -> term .)
    ISEQUAL         reduce using rule 137 (exp -> term .)
    CLOSEPAREN      reduce using rule 137 (exp -> term .)
    COMMA           reduce using rule 137 (exp -> term .)
    CLOSEBRACKET    reduce using rule 137 (exp -> term .)
    ADDITION        shift and go to state 167
    SUBSTRACTION    shift and go to state 168

    exp_o                          shift and go to state 166

state 100

    (143) term -> factor . term_o term
    (144) term -> factor .
    (145) term_o -> . MULTIPLICATION
    (146) term_o -> . DIVISION

    ADDITION        reduce using rule 144 (term -> factor .)
    SUBSTRACTION    reduce using rule 144 (term -> factor .)
    SEMICOLON       reduce using rule 144 (term -> factor .)
    GREATER         reduce using rule 144 (term -> factor .)
    LESS            reduce using rule 144 (term -> factor .)
    NOTEQUAL        reduce using rule 144 (term -> factor .)
    ISEQUAL         reduce using rule 144 (term -> factor .)
    CLOSEPAREN      reduce using rule 144 (term -> factor .)
    COMMA           reduce using rule 144 (term -> factor .)
    CLOSEBRACKET    reduce using rule 144 (term -> factor .)
    MULTIPLICATION  shift and go to state 170
    DIVISION        shift and go to state 171

    term_o                         shift and go to state 169

state 101

    (147) factor -> vcte .

    MULTIPLICATION  reduce using rule 147 (factor -> vcte .)
    DIVISION        reduce using rule 147 (factor -> vcte .)
    ADDITION        reduce using rule 147 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 147 (factor -> vcte .)
    SEMICOLON       reduce using rule 147 (factor -> vcte .)
    GREATER         reduce using rule 147 (factor -> vcte .)
    LESS            reduce using rule 147 (factor -> vcte .)
    NOTEQUAL        reduce using rule 147 (factor -> vcte .)
    ISEQUAL         reduce using rule 147 (factor -> vcte .)
    CLOSEPAREN      reduce using rule 147 (factor -> vcte .)
    COMMA           reduce using rule 147 (factor -> vcte .)
    CLOSEBRACKET    reduce using rule 147 (factor -> vcte .)


state 102

    (148) factor -> openP . expression closeP
    (135) expression -> . exp loper exp
    (136) expression -> . exp
    (137) exp -> . term
    (138) exp -> . term exp_o exp
    (143) term -> . factor term_o term
    (144) term -> . factor
    (147) factor -> . vcte
    (148) factor -> . openP expression closeP
    (30) vcte -> . cte_int
    (31) vcte -> . cte_float
    (32) vcte -> . cte_string
    (33) vcte -> . id
    (34) vcte -> . funCall
    (35) vcte -> . vectormatriz
    (141) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID indice_dimensionada
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (36) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (37) vectormatriz -> . vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    openP                          shift and go to state 102
    expression                     shift and go to state 172
    exp                            shift and go to state 173
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 103

    (30) vcte -> cte_int .

    MULTIPLICATION  reduce using rule 30 (vcte -> cte_int .)
    DIVISION        reduce using rule 30 (vcte -> cte_int .)
    ADDITION        reduce using rule 30 (vcte -> cte_int .)
    SUBSTRACTION    reduce using rule 30 (vcte -> cte_int .)
    SEMICOLON       reduce using rule 30 (vcte -> cte_int .)
    GREATER         reduce using rule 30 (vcte -> cte_int .)
    LESS            reduce using rule 30 (vcte -> cte_int .)
    NOTEQUAL        reduce using rule 30 (vcte -> cte_int .)
    ISEQUAL         reduce using rule 30 (vcte -> cte_int .)
    CLOSEPAREN      reduce using rule 30 (vcte -> cte_int .)
    COMMA           reduce using rule 30 (vcte -> cte_int .)
    CLOSEBRACKET    reduce using rule 30 (vcte -> cte_int .)


state 104

    (31) vcte -> cte_float .

    MULTIPLICATION  reduce using rule 31 (vcte -> cte_float .)
    DIVISION        reduce using rule 31 (vcte -> cte_float .)
    ADDITION        reduce using rule 31 (vcte -> cte_float .)
    SUBSTRACTION    reduce using rule 31 (vcte -> cte_float .)
    SEMICOLON       reduce using rule 31 (vcte -> cte_float .)
    GREATER         reduce using rule 31 (vcte -> cte_float .)
    LESS            reduce using rule 31 (vcte -> cte_float .)
    NOTEQUAL        reduce using rule 31 (vcte -> cte_float .)
    ISEQUAL         reduce using rule 31 (vcte -> cte_float .)
    CLOSEPAREN      reduce using rule 31 (vcte -> cte_float .)
    COMMA           reduce using rule 31 (vcte -> cte_float .)
    CLOSEBRACKET    reduce using rule 31 (vcte -> cte_float .)


state 105

    (32) vcte -> cte_string .

    MULTIPLICATION  reduce using rule 32 (vcte -> cte_string .)
    DIVISION        reduce using rule 32 (vcte -> cte_string .)
    ADDITION        reduce using rule 32 (vcte -> cte_string .)
    SUBSTRACTION    reduce using rule 32 (vcte -> cte_string .)
    SEMICOLON       reduce using rule 32 (vcte -> cte_string .)
    GREATER         reduce using rule 32 (vcte -> cte_string .)
    LESS            reduce using rule 32 (vcte -> cte_string .)
    NOTEQUAL        reduce using rule 32 (vcte -> cte_string .)
    ISEQUAL         reduce using rule 32 (vcte -> cte_string .)
    CLOSEPAREN      reduce using rule 32 (vcte -> cte_string .)
    COMMA           reduce using rule 32 (vcte -> cte_string .)
    CLOSEBRACKET    reduce using rule 32 (vcte -> cte_string .)


state 106

    (33) vcte -> id .

    MULTIPLICATION  reduce using rule 33 (vcte -> id .)
    DIVISION        reduce using rule 33 (vcte -> id .)
    ADDITION        reduce using rule 33 (vcte -> id .)
    SUBSTRACTION    reduce using rule 33 (vcte -> id .)
    SEMICOLON       reduce using rule 33 (vcte -> id .)
    GREATER         reduce using rule 33 (vcte -> id .)
    LESS            reduce using rule 33 (vcte -> id .)
    NOTEQUAL        reduce using rule 33 (vcte -> id .)
    ISEQUAL         reduce using rule 33 (vcte -> id .)
    CLOSEPAREN      reduce using rule 33 (vcte -> id .)
    COMMA           reduce using rule 33 (vcte -> id .)
    CLOSEBRACKET    reduce using rule 33 (vcte -> id .)


state 107

    (34) vcte -> funCall .

    MULTIPLICATION  reduce using rule 34 (vcte -> funCall .)
    DIVISION        reduce using rule 34 (vcte -> funCall .)
    ADDITION        reduce using rule 34 (vcte -> funCall .)
    SUBSTRACTION    reduce using rule 34 (vcte -> funCall .)
    SEMICOLON       reduce using rule 34 (vcte -> funCall .)
    GREATER         reduce using rule 34 (vcte -> funCall .)
    LESS            reduce using rule 34 (vcte -> funCall .)
    NOTEQUAL        reduce using rule 34 (vcte -> funCall .)
    ISEQUAL         reduce using rule 34 (vcte -> funCall .)
    CLOSEPAREN      reduce using rule 34 (vcte -> funCall .)
    COMMA           reduce using rule 34 (vcte -> funCall .)
    CLOSEBRACKET    reduce using rule 34 (vcte -> funCall .)


state 108

    (35) vcte -> vectormatriz .

    MULTIPLICATION  reduce using rule 35 (vcte -> vectormatriz .)
    DIVISION        reduce using rule 35 (vcte -> vectormatriz .)
    ADDITION        reduce using rule 35 (vcte -> vectormatriz .)
    SUBSTRACTION    reduce using rule 35 (vcte -> vectormatriz .)
    SEMICOLON       reduce using rule 35 (vcte -> vectormatriz .)
    GREATER         reduce using rule 35 (vcte -> vectormatriz .)
    LESS            reduce using rule 35 (vcte -> vectormatriz .)
    NOTEQUAL        reduce using rule 35 (vcte -> vectormatriz .)
    ISEQUAL         reduce using rule 35 (vcte -> vectormatriz .)
    CLOSEPAREN      reduce using rule 35 (vcte -> vectormatriz .)
    COMMA           reduce using rule 35 (vcte -> vectormatriz .)
    CLOSEBRACKET    reduce using rule 35 (vcte -> vectormatriz .)


state 109

    (141) openP -> OPENPAREN .

    OPENPAREN       reduce using rule 141 (openP -> OPENPAREN .)
    CTEINT          reduce using rule 141 (openP -> OPENPAREN .)
    CTEFLOAT        reduce using rule 141 (openP -> OPENPAREN .)
    CTESTRING       reduce using rule 141 (openP -> OPENPAREN .)
    ID              reduce using rule 141 (openP -> OPENPAREN .)
    OPENBRACKET     reduce using rule 141 (openP -> OPENPAREN .)


state 110

    (77) cte_int -> CTEINT .

    MULTIPLICATION  reduce using rule 77 (cte_int -> CTEINT .)
    DIVISION        reduce using rule 77 (cte_int -> CTEINT .)
    ADDITION        reduce using rule 77 (cte_int -> CTEINT .)
    SUBSTRACTION    reduce using rule 77 (cte_int -> CTEINT .)
    SEMICOLON       reduce using rule 77 (cte_int -> CTEINT .)
    GREATER         reduce using rule 77 (cte_int -> CTEINT .)
    LESS            reduce using rule 77 (cte_int -> CTEINT .)
    NOTEQUAL        reduce using rule 77 (cte_int -> CTEINT .)
    ISEQUAL         reduce using rule 77 (cte_int -> CTEINT .)
    CLOSEPAREN      reduce using rule 77 (cte_int -> CTEINT .)
    COMMA           reduce using rule 77 (cte_int -> CTEINT .)
    CLOSEBRACKET    reduce using rule 77 (cte_int -> CTEINT .)


state 111

    (78) cte_float -> CTEFLOAT .

    MULTIPLICATION  reduce using rule 78 (cte_float -> CTEFLOAT .)
    DIVISION        reduce using rule 78 (cte_float -> CTEFLOAT .)
    ADDITION        reduce using rule 78 (cte_float -> CTEFLOAT .)
    SUBSTRACTION    reduce using rule 78 (cte_float -> CTEFLOAT .)
    SEMICOLON       reduce using rule 78 (cte_float -> CTEFLOAT .)
    GREATER         reduce using rule 78 (cte_float -> CTEFLOAT .)
    LESS            reduce using rule 78 (cte_float -> CTEFLOAT .)
    NOTEQUAL        reduce using rule 78 (cte_float -> CTEFLOAT .)
    ISEQUAL         reduce using rule 78 (cte_float -> CTEFLOAT .)
    CLOSEPAREN      reduce using rule 78 (cte_float -> CTEFLOAT .)
    COMMA           reduce using rule 78 (cte_float -> CTEFLOAT .)
    CLOSEBRACKET    reduce using rule 78 (cte_float -> CTEFLOAT .)


state 112

    (79) cte_string -> CTESTRING .

    MULTIPLICATION  reduce using rule 79 (cte_string -> CTESTRING .)
    DIVISION        reduce using rule 79 (cte_string -> CTESTRING .)
    ADDITION        reduce using rule 79 (cte_string -> CTESTRING .)
    SUBSTRACTION    reduce using rule 79 (cte_string -> CTESTRING .)
    SEMICOLON       reduce using rule 79 (cte_string -> CTESTRING .)
    GREATER         reduce using rule 79 (cte_string -> CTESTRING .)
    LESS            reduce using rule 79 (cte_string -> CTESTRING .)
    NOTEQUAL        reduce using rule 79 (cte_string -> CTESTRING .)
    ISEQUAL         reduce using rule 79 (cte_string -> CTESTRING .)
    CLOSEPAREN      reduce using rule 79 (cte_string -> CTESTRING .)
    COMMA           reduce using rule 79 (cte_string -> CTESTRING .)
    CLOSEBRACKET    reduce using rule 79 (cte_string -> CTESTRING .)


state 113

    (36) vectormatriz -> OPENBRACKET . vm1 CLOSEBRACKET
    (38) vm1 -> OPENBRACKET . vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> OPENBRACKET . vm2 CLOSEBRACKET
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (40) vm2 -> . exp COMMA vm2
    (41) vm2 -> . exp
    (42) vm2 -> . empty
    (137) exp -> . term
    (138) exp -> . term exp_o exp
    (149) empty -> .
    (143) term -> . factor term_o term
    (144) term -> . factor
    (147) factor -> . vcte
    (148) factor -> . openP expression closeP
    (30) vcte -> . cte_int
    (31) vcte -> . cte_float
    (32) vcte -> . cte_string
    (33) vcte -> . id
    (34) vcte -> . funCall
    (35) vcte -> . vectormatriz
    (141) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID indice_dimensionada
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (36) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (37) vectormatriz -> . vm1

    OPENBRACKET     shift and go to state 174
    CLOSEBRACKET    reduce using rule 149 (empty -> .)
    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97

    vm1                            shift and go to state 175
    vm2                            shift and go to state 176
    exp                            shift and go to state 177
    empty                          shift and go to state 178
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108

state 114

    (37) vectormatriz -> vm1 .

    MULTIPLICATION  reduce using rule 37 (vectormatriz -> vm1 .)
    DIVISION        reduce using rule 37 (vectormatriz -> vm1 .)
    ADDITION        reduce using rule 37 (vectormatriz -> vm1 .)
    SUBSTRACTION    reduce using rule 37 (vectormatriz -> vm1 .)
    SEMICOLON       reduce using rule 37 (vectormatriz -> vm1 .)
    GREATER         reduce using rule 37 (vectormatriz -> vm1 .)
    LESS            reduce using rule 37 (vectormatriz -> vm1 .)
    NOTEQUAL        reduce using rule 37 (vectormatriz -> vm1 .)
    ISEQUAL         reduce using rule 37 (vectormatriz -> vm1 .)
    CLOSEPAREN      reduce using rule 37 (vectormatriz -> vm1 .)
    COMMA           reduce using rule 37 (vectormatriz -> vm1 .)
    CLOSEBRACKET    reduce using rule 37 (vectormatriz -> vm1 .)


state 115

    (14) dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET .
    (15) dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET . OPENBRACKET CTEINT CLOSEBRACKET

    SEMICOLON       reduce using rule 14 (dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET .)
    EQUALS          reduce using rule 14 (dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET .)
    OPENBRACKET     shift and go to state 179


state 116

    (5) star -> starI declara_vars star1 CLOSEBRACES .

    $end            reduce using rule 5 (star -> starI declara_vars star1 CLOSEBRACES .)


state 117

    (8) star1 -> stmt star1 .

    CLOSEBRACES     reduce using rule 8 (star1 -> stmt star1 .)


state 118

    (25) stmt -> funCall SEMICOLON .

    IF              reduce using rule 25 (stmt -> funCall SEMICOLON .)
    PRINT           reduce using rule 25 (stmt -> funCall SEMICOLON .)
    READ            reduce using rule 25 (stmt -> funCall SEMICOLON .)
    ID              reduce using rule 25 (stmt -> funCall SEMICOLON .)
    RETURN          reduce using rule 25 (stmt -> funCall SEMICOLON .)
    FOR             reduce using rule 25 (stmt -> funCall SEMICOLON .)
    CIRCLE          reduce using rule 25 (stmt -> funCall SEMICOLON .)
    SQUARE          reduce using rule 25 (stmt -> funCall SEMICOLON .)
    TRIANGLE        reduce using rule 25 (stmt -> funCall SEMICOLON .)
    RECTANGLE       reduce using rule 25 (stmt -> funCall SEMICOLON .)
    HIDE_STAR       reduce using rule 25 (stmt -> funCall SEMICOLON .)
    SHOW_STAR       reduce using rule 25 (stmt -> funCall SEMICOLON .)
    COLOR_STAR      reduce using rule 25 (stmt -> funCall SEMICOLON .)
    SIZE_STAR       reduce using rule 25 (stmt -> funCall SEMICOLON .)
    POSITION        reduce using rule 25 (stmt -> funCall SEMICOLON .)
    HAND_DOWN       reduce using rule 25 (stmt -> funCall SEMICOLON .)
    HAND_UP         reduce using rule 25 (stmt -> funCall SEMICOLON .)
    GO              reduce using rule 25 (stmt -> funCall SEMICOLON .)
    LEFT            reduce using rule 25 (stmt -> funCall SEMICOLON .)
    RIGHT           reduce using rule 25 (stmt -> funCall SEMICOLON .)
    BACK            reduce using rule 25 (stmt -> funCall SEMICOLON .)
    ARC             reduce using rule 25 (stmt -> funCall SEMICOLON .)
    WHILE           reduce using rule 25 (stmt -> funCall SEMICOLON .)
    CLOSEBRACES     reduce using rule 25 (stmt -> funCall SEMICOLON .)


state 119

    (27) assignment -> id equals . assignment3 SEMICOLON
    (28) assignment3 -> . exp
    (29) assignment3 -> . read
    (137) exp -> . term
    (138) exp -> . term exp_o exp
    (60) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (143) term -> . factor term_o term
    (144) term -> . factor
    (147) factor -> . vcte
    (148) factor -> . openP expression closeP
    (30) vcte -> . cte_int
    (31) vcte -> . cte_float
    (32) vcte -> . cte_string
    (33) vcte -> . id
    (34) vcte -> . funCall
    (35) vcte -> . vectormatriz
    (141) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID indice_dimensionada
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (36) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (37) vectormatriz -> . vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    READ            shift and go to state 56
    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    id                             shift and go to state 106
    assignment3                    shift and go to state 180
    exp                            shift and go to state 181
    read                           shift and go to state 182
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 120

    (87) condition -> IF head_cond . body condition1
    (94) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 133

    body                           shift and go to state 183

state 121

    (93) head_cond -> OPENPAREN . expression close_condition
    (135) expression -> . exp loper exp
    (136) expression -> . exp
    (137) exp -> . term
    (138) exp -> . term exp_o exp
    (143) term -> . factor term_o term
    (144) term -> . factor
    (147) factor -> . vcte
    (148) factor -> . openP expression closeP
    (30) vcte -> . cte_int
    (31) vcte -> . cte_float
    (32) vcte -> . cte_string
    (33) vcte -> . id
    (34) vcte -> . funCall
    (35) vcte -> . vectormatriz
    (141) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID indice_dimensionada
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (36) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (37) vectormatriz -> . vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    expression                     shift and go to state 184
    exp                            shift and go to state 173
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 122

    (59) print -> PRINT OPENPAREN . expression CLOSEPAREN SEMICOLON
    (135) expression -> . exp loper exp
    (136) expression -> . exp
    (137) exp -> . term
    (138) exp -> . term exp_o exp
    (143) term -> . factor term_o term
    (144) term -> . factor
    (147) factor -> . vcte
    (148) factor -> . openP expression closeP
    (30) vcte -> . cte_int
    (31) vcte -> . cte_float
    (32) vcte -> . cte_string
    (33) vcte -> . id
    (34) vcte -> . funCall
    (35) vcte -> . vectormatriz
    (141) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID indice_dimensionada
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (36) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (37) vectormatriz -> . vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    expression                     shift and go to state 185
    exp                            shift and go to state 173
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 123

    (60) read -> READ OPENPAREN . id read1 CLOSEPAREN SEMICOLON
    (68) id -> . ID indice_dimensionada

    ID              shift and go to state 187

    id                             shift and go to state 186

state 124

    (69) funCall -> ID iniciaFunCall . funCall2 terminaFunCall
    (72) funCall2 -> . funCallParam funCall3
    (73) funCall2 -> . empty
    (76) funCallParam -> . exp
    (149) empty -> .
    (137) exp -> . term
    (138) exp -> . term exp_o exp
    (143) term -> . factor term_o term
    (144) term -> . factor
    (147) factor -> . vcte
    (148) factor -> . openP expression closeP
    (30) vcte -> . cte_int
    (31) vcte -> . cte_float
    (32) vcte -> . cte_string
    (33) vcte -> . id
    (34) vcte -> . funCall
    (35) vcte -> . vectormatriz
    (141) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID indice_dimensionada
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (36) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (37) vectormatriz -> . vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    CLOSEPAREN      reduce using rule 149 (empty -> .)
    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    funCall2                       shift and go to state 188
    funCallParam                   shift and go to state 189
    empty                          shift and go to state 190
    exp                            shift and go to state 191
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 125

    (68) id -> ID indice_dimensionada .

    EQUALS          reduce using rule 68 (id -> ID indice_dimensionada .)
    MULTIPLICATION  reduce using rule 68 (id -> ID indice_dimensionada .)
    DIVISION        reduce using rule 68 (id -> ID indice_dimensionada .)
    ADDITION        reduce using rule 68 (id -> ID indice_dimensionada .)
    SUBSTRACTION    reduce using rule 68 (id -> ID indice_dimensionada .)
    SEMICOLON       reduce using rule 68 (id -> ID indice_dimensionada .)
    GREATER         reduce using rule 68 (id -> ID indice_dimensionada .)
    LESS            reduce using rule 68 (id -> ID indice_dimensionada .)
    NOTEQUAL        reduce using rule 68 (id -> ID indice_dimensionada .)
    ISEQUAL         reduce using rule 68 (id -> ID indice_dimensionada .)
    CLOSEPAREN      reduce using rule 68 (id -> ID indice_dimensionada .)
    COMMA           reduce using rule 68 (id -> ID indice_dimensionada .)
    CLOSEBRACKET    reduce using rule 68 (id -> ID indice_dimensionada .)
    OPENBRACKET     reduce using rule 68 (id -> ID indice_dimensionada .)


state 126

    (70) iniciaFunCall -> OPENPAREN .

    OPENPAREN       reduce using rule 70 (iniciaFunCall -> OPENPAREN .)
    CTEINT          reduce using rule 70 (iniciaFunCall -> OPENPAREN .)
    CTEFLOAT        reduce using rule 70 (iniciaFunCall -> OPENPAREN .)
    CTESTRING       reduce using rule 70 (iniciaFunCall -> OPENPAREN .)
    ID              reduce using rule 70 (iniciaFunCall -> OPENPAREN .)
    OPENBRACKET     reduce using rule 70 (iniciaFunCall -> OPENPAREN .)
    CLOSEPAREN      reduce using rule 70 (iniciaFunCall -> OPENPAREN .)


state 127

    (65) indice_dimensionada -> OPENBRACKET . exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (66) indice_dimensionada -> OPENBRACKET . exp CLOSEBRACKET
    (137) exp -> . term
    (138) exp -> . term exp_o exp
    (143) term -> . factor term_o term
    (144) term -> . factor
    (147) factor -> . vcte
    (148) factor -> . openP expression closeP
    (30) vcte -> . cte_int
    (31) vcte -> . cte_float
    (32) vcte -> . cte_string
    (33) vcte -> . id
    (34) vcte -> . funCall
    (35) vcte -> . vectormatriz
    (141) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID indice_dimensionada
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (36) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (37) vectormatriz -> . vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    exp                            shift and go to state 192
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 128

    (67) indice_dimensionada -> empty .

    EQUALS          reduce using rule 67 (indice_dimensionada -> empty .)
    MULTIPLICATION  reduce using rule 67 (indice_dimensionada -> empty .)
    DIVISION        reduce using rule 67 (indice_dimensionada -> empty .)
    ADDITION        reduce using rule 67 (indice_dimensionada -> empty .)
    SUBSTRACTION    reduce using rule 67 (indice_dimensionada -> empty .)
    SEMICOLON       reduce using rule 67 (indice_dimensionada -> empty .)
    GREATER         reduce using rule 67 (indice_dimensionada -> empty .)
    LESS            reduce using rule 67 (indice_dimensionada -> empty .)
    NOTEQUAL        reduce using rule 67 (indice_dimensionada -> empty .)
    ISEQUAL         reduce using rule 67 (indice_dimensionada -> empty .)
    CLOSEPAREN      reduce using rule 67 (indice_dimensionada -> empty .)
    COMMA           reduce using rule 67 (indice_dimensionada -> empty .)
    CLOSEBRACKET    reduce using rule 67 (indice_dimensionada -> empty .)
    OPENBRACKET     reduce using rule 67 (indice_dimensionada -> empty .)


state 129

    (80) return -> RETURN return1 . SEMICOLON

    SEMICOLON       shift and go to state 193


state 130

    (81) return1 -> vcte .
    (147) factor -> vcte .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 81 (return1 -> vcte .)
    SEMICOLON       reduce using rule 81 (return1 -> vcte .)
    MULTIPLICATION  reduce using rule 147 (factor -> vcte .)
    DIVISION        reduce using rule 147 (factor -> vcte .)
    ADDITION        reduce using rule 147 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 147 (factor -> vcte .)

  ! SEMICOLON       [ reduce using rule 147 (factor -> vcte .) ]


state 131

    (82) return1 -> exp .

    SEMICOLON       reduce using rule 82 (return1 -> exp .)


state 132

    (103) while -> while1 body .

    IF              reduce using rule 103 (while -> while1 body .)
    PRINT           reduce using rule 103 (while -> while1 body .)
    READ            reduce using rule 103 (while -> while1 body .)
    ID              reduce using rule 103 (while -> while1 body .)
    RETURN          reduce using rule 103 (while -> while1 body .)
    FOR             reduce using rule 103 (while -> while1 body .)
    CIRCLE          reduce using rule 103 (while -> while1 body .)
    SQUARE          reduce using rule 103 (while -> while1 body .)
    TRIANGLE        reduce using rule 103 (while -> while1 body .)
    RECTANGLE       reduce using rule 103 (while -> while1 body .)
    HIDE_STAR       reduce using rule 103 (while -> while1 body .)
    SHOW_STAR       reduce using rule 103 (while -> while1 body .)
    COLOR_STAR      reduce using rule 103 (while -> while1 body .)
    SIZE_STAR       reduce using rule 103 (while -> while1 body .)
    POSITION        reduce using rule 103 (while -> while1 body .)
    HAND_DOWN       reduce using rule 103 (while -> while1 body .)
    HAND_UP         reduce using rule 103 (while -> while1 body .)
    GO              reduce using rule 103 (while -> while1 body .)
    LEFT            reduce using rule 103 (while -> while1 body .)
    RIGHT           reduce using rule 103 (while -> while1 body .)
    BACK            reduce using rule 103 (while -> while1 body .)
    ARC             reduce using rule 103 (while -> while1 body .)
    WHILE           reduce using rule 103 (while -> while1 body .)
    CLOSEBRACES     reduce using rule 103 (while -> while1 body .)


state 133

    (94) body -> OPENBRACES . body1 CLOSEBRACES
    (96) body1 -> . stmt body1
    (97) body1 -> . empty
    (19) stmt -> . assignment
    (20) stmt -> . condition
    (21) stmt -> . print
    (22) stmt -> . loop
    (23) stmt -> . read
    (24) stmt -> . graphstmt
    (25) stmt -> . funCall SEMICOLON
    (26) stmt -> . return
    (149) empty -> .
    (27) assignment -> . id equals assignment3 SEMICOLON
    (87) condition -> . IF head_cond body condition1
    (59) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (17) loop -> . while
    (18) loop -> . for
    (60) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (108) graphstmt -> . graphfig
    (109) graphstmt -> . graphview
    (110) graphstmt -> . graphmove
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (80) return -> . RETURN return1 SEMICOLON
    (68) id -> . ID indice_dimensionada
    (103) while -> . while1 body
    (98) for -> . forInit for1 TWODOTS for2 forClose body
    (111) graphfig -> . graphfig1 SEMICOLON
    (112) graphfig -> . graphfig2 SEMICOLON
    (127) graphview -> . graphview0 SEMICOLON
    (128) graphview -> . graphview1 SEMICOLON
    (129) graphview -> . graphview2 SEMICOLON
    (117) graphmove -> . graphmove0 SEMICOLON
    (118) graphmove -> . graphmove1 SEMICOLON
    (119) graphmove -> . graphmove2 SEMICOLON
    (104) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (99) forInit -> . FOR
    (113) graphfig1 -> . CIRCLE unaExp
    (114) graphfig1 -> . SQUARE unaExp
    (115) graphfig1 -> . TRIANGLE unaExp
    (116) graphfig2 -> . RECTANGLE dosExp
    (130) graphview0 -> . HIDE_STAR
    (131) graphview0 -> . SHOW_STAR
    (132) graphview1 -> . COLOR_STAR unaExp
    (133) graphview1 -> . SIZE_STAR unaExp
    (134) graphview2 -> . POSITION dosExp
    (120) graphmove0 -> . HAND_DOWN
    (121) graphmove0 -> . HAND_UP
    (122) graphmove1 -> . GO unaExp
    (123) graphmove1 -> . LEFT unaExp
    (124) graphmove1 -> . RIGHT unaExp
    (125) graphmove1 -> . BACK unaExp
    (126) graphmove2 -> . ARC dosExp
    (105) while_w -> . WHILE

    CLOSEBRACES     reduce using rule 149 (empty -> .)
    IF              shift and go to state 52
    PRINT           shift and go to state 53
    READ            shift and go to state 56
    ID              shift and go to state 60
    RETURN          shift and go to state 61
    FOR             shift and go to state 73
    CIRCLE          shift and go to state 74
    SQUARE          shift and go to state 75
    TRIANGLE        shift and go to state 76
    RECTANGLE       shift and go to state 77
    HIDE_STAR       shift and go to state 78
    SHOW_STAR       shift and go to state 79
    COLOR_STAR      shift and go to state 80
    SIZE_STAR       shift and go to state 81
    POSITION        shift and go to state 82
    HAND_DOWN       shift and go to state 83
    HAND_UP         shift and go to state 84
    GO              shift and go to state 85
    LEFT            shift and go to state 86
    RIGHT           shift and go to state 87
    BACK            shift and go to state 88
    ARC             shift and go to state 89
    WHILE           shift and go to state 90

    body1                          shift and go to state 194
    stmt                           shift and go to state 195
    empty                          shift and go to state 196
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    funCall                        shift and go to state 49
    return                         shift and go to state 50
    id                             shift and go to state 51
    while                          shift and go to state 54
    for                            shift and go to state 55
    graphfig                       shift and go to state 57
    graphview                      shift and go to state 58
    graphmove                      shift and go to state 59
    while1                         shift and go to state 62
    forInit                        shift and go to state 63
    graphfig1                      shift and go to state 64
    graphfig2                      shift and go to state 65
    graphview0                     shift and go to state 66
    graphview1                     shift and go to state 67
    graphview2                     shift and go to state 68
    graphmove0                     shift and go to state 69
    graphmove1                     shift and go to state 70
    graphmove2                     shift and go to state 71
    while_w                        shift and go to state 72

state 134

    (98) for -> forInit for1 . TWODOTS for2 forClose body

    TWODOTS         shift and go to state 197


state 135

    (100) for1 -> OPENPAREN . ID

    ID              shift and go to state 198


state 136

    (111) graphfig -> graphfig1 SEMICOLON .

    IF              reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    PRINT           reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    READ            reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    ID              reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    RETURN          reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    FOR             reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    CIRCLE          reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    SQUARE          reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    TRIANGLE        reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    RECTANGLE       reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    HIDE_STAR       reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    SHOW_STAR       reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    COLOR_STAR      reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    SIZE_STAR       reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    POSITION        reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    HAND_DOWN       reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    HAND_UP         reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    GO              reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    LEFT            reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    RIGHT           reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    BACK            reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    ARC             reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    WHILE           reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 111 (graphfig -> graphfig1 SEMICOLON .)


state 137

    (112) graphfig -> graphfig2 SEMICOLON .

    IF              reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    PRINT           reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    READ            reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    ID              reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    RETURN          reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    FOR             reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    CIRCLE          reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    SQUARE          reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    TRIANGLE        reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    RECTANGLE       reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    HIDE_STAR       reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    SHOW_STAR       reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    COLOR_STAR      reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    SIZE_STAR       reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    POSITION        reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    HAND_DOWN       reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    HAND_UP         reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    GO              reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    LEFT            reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    RIGHT           reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    BACK            reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    ARC             reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    WHILE           reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 112 (graphfig -> graphfig2 SEMICOLON .)


state 138

    (127) graphview -> graphview0 SEMICOLON .

    IF              reduce using rule 127 (graphview -> graphview0 SEMICOLON .)
    PRINT           reduce using rule 127 (graphview -> graphview0 SEMICOLON .)
    READ            reduce using rule 127 (graphview -> graphview0 SEMICOLON .)
    ID              reduce using rule 127 (graphview -> graphview0 SEMICOLON .)
    RETURN          reduce using rule 127 (graphview -> graphview0 SEMICOLON .)
    FOR             reduce using rule 127 (graphview -> graphview0 SEMICOLON .)
    CIRCLE          reduce using rule 127 (graphview -> graphview0 SEMICOLON .)
    SQUARE          reduce using rule 127 (graphview -> graphview0 SEMICOLON .)
    TRIANGLE        reduce using rule 127 (graphview -> graphview0 SEMICOLON .)
    RECTANGLE       reduce using rule 127 (graphview -> graphview0 SEMICOLON .)
    HIDE_STAR       reduce using rule 127 (graphview -> graphview0 SEMICOLON .)
    SHOW_STAR       reduce using rule 127 (graphview -> graphview0 SEMICOLON .)
    COLOR_STAR      reduce using rule 127 (graphview -> graphview0 SEMICOLON .)
    SIZE_STAR       reduce using rule 127 (graphview -> graphview0 SEMICOLON .)
    POSITION        reduce using rule 127 (graphview -> graphview0 SEMICOLON .)
    HAND_DOWN       reduce using rule 127 (graphview -> graphview0 SEMICOLON .)
    HAND_UP         reduce using rule 127 (graphview -> graphview0 SEMICOLON .)
    GO              reduce using rule 127 (graphview -> graphview0 SEMICOLON .)
    LEFT            reduce using rule 127 (graphview -> graphview0 SEMICOLON .)
    RIGHT           reduce using rule 127 (graphview -> graphview0 SEMICOLON .)
    BACK            reduce using rule 127 (graphview -> graphview0 SEMICOLON .)
    ARC             reduce using rule 127 (graphview -> graphview0 SEMICOLON .)
    WHILE           reduce using rule 127 (graphview -> graphview0 SEMICOLON .)
    CLOSEBRACES     reduce using rule 127 (graphview -> graphview0 SEMICOLON .)


state 139

    (128) graphview -> graphview1 SEMICOLON .

    IF              reduce using rule 128 (graphview -> graphview1 SEMICOLON .)
    PRINT           reduce using rule 128 (graphview -> graphview1 SEMICOLON .)
    READ            reduce using rule 128 (graphview -> graphview1 SEMICOLON .)
    ID              reduce using rule 128 (graphview -> graphview1 SEMICOLON .)
    RETURN          reduce using rule 128 (graphview -> graphview1 SEMICOLON .)
    FOR             reduce using rule 128 (graphview -> graphview1 SEMICOLON .)
    CIRCLE          reduce using rule 128 (graphview -> graphview1 SEMICOLON .)
    SQUARE          reduce using rule 128 (graphview -> graphview1 SEMICOLON .)
    TRIANGLE        reduce using rule 128 (graphview -> graphview1 SEMICOLON .)
    RECTANGLE       reduce using rule 128 (graphview -> graphview1 SEMICOLON .)
    HIDE_STAR       reduce using rule 128 (graphview -> graphview1 SEMICOLON .)
    SHOW_STAR       reduce using rule 128 (graphview -> graphview1 SEMICOLON .)
    COLOR_STAR      reduce using rule 128 (graphview -> graphview1 SEMICOLON .)
    SIZE_STAR       reduce using rule 128 (graphview -> graphview1 SEMICOLON .)
    POSITION        reduce using rule 128 (graphview -> graphview1 SEMICOLON .)
    HAND_DOWN       reduce using rule 128 (graphview -> graphview1 SEMICOLON .)
    HAND_UP         reduce using rule 128 (graphview -> graphview1 SEMICOLON .)
    GO              reduce using rule 128 (graphview -> graphview1 SEMICOLON .)
    LEFT            reduce using rule 128 (graphview -> graphview1 SEMICOLON .)
    RIGHT           reduce using rule 128 (graphview -> graphview1 SEMICOLON .)
    BACK            reduce using rule 128 (graphview -> graphview1 SEMICOLON .)
    ARC             reduce using rule 128 (graphview -> graphview1 SEMICOLON .)
    WHILE           reduce using rule 128 (graphview -> graphview1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 128 (graphview -> graphview1 SEMICOLON .)


state 140

    (129) graphview -> graphview2 SEMICOLON .

    IF              reduce using rule 129 (graphview -> graphview2 SEMICOLON .)
    PRINT           reduce using rule 129 (graphview -> graphview2 SEMICOLON .)
    READ            reduce using rule 129 (graphview -> graphview2 SEMICOLON .)
    ID              reduce using rule 129 (graphview -> graphview2 SEMICOLON .)
    RETURN          reduce using rule 129 (graphview -> graphview2 SEMICOLON .)
    FOR             reduce using rule 129 (graphview -> graphview2 SEMICOLON .)
    CIRCLE          reduce using rule 129 (graphview -> graphview2 SEMICOLON .)
    SQUARE          reduce using rule 129 (graphview -> graphview2 SEMICOLON .)
    TRIANGLE        reduce using rule 129 (graphview -> graphview2 SEMICOLON .)
    RECTANGLE       reduce using rule 129 (graphview -> graphview2 SEMICOLON .)
    HIDE_STAR       reduce using rule 129 (graphview -> graphview2 SEMICOLON .)
    SHOW_STAR       reduce using rule 129 (graphview -> graphview2 SEMICOLON .)
    COLOR_STAR      reduce using rule 129 (graphview -> graphview2 SEMICOLON .)
    SIZE_STAR       reduce using rule 129 (graphview -> graphview2 SEMICOLON .)
    POSITION        reduce using rule 129 (graphview -> graphview2 SEMICOLON .)
    HAND_DOWN       reduce using rule 129 (graphview -> graphview2 SEMICOLON .)
    HAND_UP         reduce using rule 129 (graphview -> graphview2 SEMICOLON .)
    GO              reduce using rule 129 (graphview -> graphview2 SEMICOLON .)
    LEFT            reduce using rule 129 (graphview -> graphview2 SEMICOLON .)
    RIGHT           reduce using rule 129 (graphview -> graphview2 SEMICOLON .)
    BACK            reduce using rule 129 (graphview -> graphview2 SEMICOLON .)
    ARC             reduce using rule 129 (graphview -> graphview2 SEMICOLON .)
    WHILE           reduce using rule 129 (graphview -> graphview2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 129 (graphview -> graphview2 SEMICOLON .)


state 141

    (117) graphmove -> graphmove0 SEMICOLON .

    IF              reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    PRINT           reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    READ            reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    ID              reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    RETURN          reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    FOR             reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    CIRCLE          reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    SQUARE          reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    TRIANGLE        reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    RECTANGLE       reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    HIDE_STAR       reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    SHOW_STAR       reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    COLOR_STAR      reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    SIZE_STAR       reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    POSITION        reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    HAND_DOWN       reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    HAND_UP         reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    GO              reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    LEFT            reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    RIGHT           reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    BACK            reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    ARC             reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    WHILE           reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)
    CLOSEBRACES     reduce using rule 117 (graphmove -> graphmove0 SEMICOLON .)


state 142

    (118) graphmove -> graphmove1 SEMICOLON .

    IF              reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    PRINT           reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    READ            reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    ID              reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    RETURN          reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    FOR             reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    CIRCLE          reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    SQUARE          reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    TRIANGLE        reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    RECTANGLE       reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    HIDE_STAR       reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    SHOW_STAR       reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    COLOR_STAR      reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    SIZE_STAR       reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    POSITION        reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    HAND_DOWN       reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    HAND_UP         reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    GO              reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    LEFT            reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    RIGHT           reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    BACK            reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    ARC             reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    WHILE           reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 118 (graphmove -> graphmove1 SEMICOLON .)


state 143

    (119) graphmove -> graphmove2 SEMICOLON .

    IF              reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    PRINT           reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    READ            reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    ID              reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    RETURN          reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    FOR             reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    CIRCLE          reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    SQUARE          reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    TRIANGLE        reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    RECTANGLE       reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    HIDE_STAR       reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    SHOW_STAR       reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    COLOR_STAR      reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    SIZE_STAR       reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    POSITION        reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    HAND_DOWN       reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    HAND_UP         reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    GO              reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    LEFT            reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    RIGHT           reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    BACK            reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    ARC             reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    WHILE           reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 119 (graphmove -> graphmove2 SEMICOLON .)


state 144

    (104) while1 -> while_w OPENPAREN . expression CLOSEPAREN
    (135) expression -> . exp loper exp
    (136) expression -> . exp
    (137) exp -> . term
    (138) exp -> . term exp_o exp
    (143) term -> . factor term_o term
    (144) term -> . factor
    (147) factor -> . vcte
    (148) factor -> . openP expression closeP
    (30) vcte -> . cte_int
    (31) vcte -> . cte_float
    (32) vcte -> . cte_string
    (33) vcte -> . id
    (34) vcte -> . funCall
    (35) vcte -> . vectormatriz
    (141) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID indice_dimensionada
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (36) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (37) vectormatriz -> . vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    expression                     shift and go to state 199
    exp                            shift and go to state 173
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 145

    (113) graphfig1 -> CIRCLE unaExp .

    SEMICOLON       reduce using rule 113 (graphfig1 -> CIRCLE unaExp .)


state 146

    (107) unaExp -> OPENPAREN . exp CLOSEPAREN
    (137) exp -> . term
    (138) exp -> . term exp_o exp
    (143) term -> . factor term_o term
    (144) term -> . factor
    (147) factor -> . vcte
    (148) factor -> . openP expression closeP
    (30) vcte -> . cte_int
    (31) vcte -> . cte_float
    (32) vcte -> . cte_string
    (33) vcte -> . id
    (34) vcte -> . funCall
    (35) vcte -> . vectormatriz
    (141) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID indice_dimensionada
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (36) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (37) vectormatriz -> . vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    exp                            shift and go to state 200
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 147

    (114) graphfig1 -> SQUARE unaExp .

    SEMICOLON       reduce using rule 114 (graphfig1 -> SQUARE unaExp .)


state 148

    (115) graphfig1 -> TRIANGLE unaExp .

    SEMICOLON       reduce using rule 115 (graphfig1 -> TRIANGLE unaExp .)


state 149

    (116) graphfig2 -> RECTANGLE dosExp .

    SEMICOLON       reduce using rule 116 (graphfig2 -> RECTANGLE dosExp .)


state 150

    (106) dosExp -> OPENPAREN . exp COMMA exp CLOSEPAREN
    (137) exp -> . term
    (138) exp -> . term exp_o exp
    (143) term -> . factor term_o term
    (144) term -> . factor
    (147) factor -> . vcte
    (148) factor -> . openP expression closeP
    (30) vcte -> . cte_int
    (31) vcte -> . cte_float
    (32) vcte -> . cte_string
    (33) vcte -> . id
    (34) vcte -> . funCall
    (35) vcte -> . vectormatriz
    (141) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID indice_dimensionada
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (36) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (37) vectormatriz -> . vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    exp                            shift and go to state 201
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 151

    (132) graphview1 -> COLOR_STAR unaExp .

    SEMICOLON       reduce using rule 132 (graphview1 -> COLOR_STAR unaExp .)


state 152

    (133) graphview1 -> SIZE_STAR unaExp .

    SEMICOLON       reduce using rule 133 (graphview1 -> SIZE_STAR unaExp .)


state 153

    (134) graphview2 -> POSITION dosExp .

    SEMICOLON       reduce using rule 134 (graphview2 -> POSITION dosExp .)


state 154

    (122) graphmove1 -> GO unaExp .

    SEMICOLON       reduce using rule 122 (graphmove1 -> GO unaExp .)


state 155

    (123) graphmove1 -> LEFT unaExp .

    SEMICOLON       reduce using rule 123 (graphmove1 -> LEFT unaExp .)


state 156

    (124) graphmove1 -> RIGHT unaExp .

    SEMICOLON       reduce using rule 124 (graphmove1 -> RIGHT unaExp .)


state 157

    (125) graphmove1 -> BACK unaExp .

    SEMICOLON       reduce using rule 125 (graphmove1 -> BACK unaExp .)


state 158

    (126) graphmove2 -> ARC dosExp .

    SEMICOLON       reduce using rule 126 (graphmove2 -> ARC dosExp .)


state 159

    (45) function -> FUN functionI function2 inicia_fun declara_vars . function4 termina_fun
    (51) function4 -> . stmt function4
    (52) function4 -> . empty
    (19) stmt -> . assignment
    (20) stmt -> . condition
    (21) stmt -> . print
    (22) stmt -> . loop
    (23) stmt -> . read
    (24) stmt -> . graphstmt
    (25) stmt -> . funCall SEMICOLON
    (26) stmt -> . return
    (149) empty -> .
    (27) assignment -> . id equals assignment3 SEMICOLON
    (87) condition -> . IF head_cond body condition1
    (59) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (17) loop -> . while
    (18) loop -> . for
    (60) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (108) graphstmt -> . graphfig
    (109) graphstmt -> . graphview
    (110) graphstmt -> . graphmove
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (80) return -> . RETURN return1 SEMICOLON
    (68) id -> . ID indice_dimensionada
    (103) while -> . while1 body
    (98) for -> . forInit for1 TWODOTS for2 forClose body
    (111) graphfig -> . graphfig1 SEMICOLON
    (112) graphfig -> . graphfig2 SEMICOLON
    (127) graphview -> . graphview0 SEMICOLON
    (128) graphview -> . graphview1 SEMICOLON
    (129) graphview -> . graphview2 SEMICOLON
    (117) graphmove -> . graphmove0 SEMICOLON
    (118) graphmove -> . graphmove1 SEMICOLON
    (119) graphmove -> . graphmove2 SEMICOLON
    (104) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (99) forInit -> . FOR
    (113) graphfig1 -> . CIRCLE unaExp
    (114) graphfig1 -> . SQUARE unaExp
    (115) graphfig1 -> . TRIANGLE unaExp
    (116) graphfig2 -> . RECTANGLE dosExp
    (130) graphview0 -> . HIDE_STAR
    (131) graphview0 -> . SHOW_STAR
    (132) graphview1 -> . COLOR_STAR unaExp
    (133) graphview1 -> . SIZE_STAR unaExp
    (134) graphview2 -> . POSITION dosExp
    (120) graphmove0 -> . HAND_DOWN
    (121) graphmove0 -> . HAND_UP
    (122) graphmove1 -> . GO unaExp
    (123) graphmove1 -> . LEFT unaExp
    (124) graphmove1 -> . RIGHT unaExp
    (125) graphmove1 -> . BACK unaExp
    (126) graphmove2 -> . ARC dosExp
    (105) while_w -> . WHILE

    CLOSEBRACES     reduce using rule 149 (empty -> .)
    IF              shift and go to state 52
    PRINT           shift and go to state 53
    READ            shift and go to state 56
    ID              shift and go to state 60
    RETURN          shift and go to state 61
    FOR             shift and go to state 73
    CIRCLE          shift and go to state 74
    SQUARE          shift and go to state 75
    TRIANGLE        shift and go to state 76
    RECTANGLE       shift and go to state 77
    HIDE_STAR       shift and go to state 78
    SHOW_STAR       shift and go to state 79
    COLOR_STAR      shift and go to state 80
    SIZE_STAR       shift and go to state 81
    POSITION        shift and go to state 82
    HAND_DOWN       shift and go to state 83
    HAND_UP         shift and go to state 84
    GO              shift and go to state 85
    LEFT            shift and go to state 86
    RIGHT           shift and go to state 87
    BACK            shift and go to state 88
    ARC             shift and go to state 89
    WHILE           shift and go to state 90

    function4                      shift and go to state 202
    stmt                           shift and go to state 203
    empty                          shift and go to state 204
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    funCall                        shift and go to state 49
    return                         shift and go to state 50
    id                             shift and go to state 51
    while                          shift and go to state 54
    for                            shift and go to state 55
    graphfig                       shift and go to state 57
    graphview                      shift and go to state 58
    graphmove                      shift and go to state 59
    while1                         shift and go to state 62
    forInit                        shift and go to state 63
    graphfig1                      shift and go to state 64
    graphfig2                      shift and go to state 65
    graphview0                     shift and go to state 66
    graphview1                     shift and go to state 67
    graphview2                     shift and go to state 68
    graphmove0                     shift and go to state 69
    graphmove1                     shift and go to state 70
    graphmove2                     shift and go to state 71
    while_w                        shift and go to state 72

state 160

    (48) function2 -> OPENPAREN function3 CLOSEPAREN .

    OPENBRACES      reduce using rule 48 (function2 -> OPENPAREN function3 CLOSEPAREN .)


state 161

    (49) function3 -> funParam function5 .

    CLOSEPAREN      reduce using rule 49 (function3 -> funParam function5 .)


state 162

    (53) function5 -> COMMA . funParam function5
    (55) funParam -> . type ID
    (56) type -> . INT
    (57) type -> . FLOAT
    (58) type -> . STRING

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    funParam                       shift and go to state 205
    type                           shift and go to state 96

state 163

    (54) function5 -> empty .

    CLOSEPAREN      reduce using rule 54 (function5 -> empty .)


state 164

    (55) funParam -> type ID .

    COMMA           reduce using rule 55 (funParam -> type ID .)
    CLOSEPAREN      reduce using rule 55 (funParam -> type ID .)


state 165

    (12) vars -> type ID dimensionada equals exp SEMICOLON .

    INT             reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    FLOAT           reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    STRING          reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    FUN             reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    MULTIPLICATION  reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    IF              reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    PRINT           reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    READ            reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    ID              reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    RETURN          reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    FOR             reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    CIRCLE          reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    SQUARE          reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    TRIANGLE        reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    RECTANGLE       reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    HIDE_STAR       reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    SHOW_STAR       reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    COLOR_STAR      reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    SIZE_STAR       reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    POSITION        reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    HAND_DOWN       reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    HAND_UP         reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    GO              reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    LEFT            reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    RIGHT           reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    BACK            reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    ARC             reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    WHILE           reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)
    CLOSEBRACES     reduce using rule 12 (vars -> type ID dimensionada equals exp SEMICOLON .)


state 166

    (138) exp -> term exp_o . exp
    (137) exp -> . term
    (138) exp -> . term exp_o exp
    (143) term -> . factor term_o term
    (144) term -> . factor
    (147) factor -> . vcte
    (148) factor -> . openP expression closeP
    (30) vcte -> . cte_int
    (31) vcte -> . cte_float
    (32) vcte -> . cte_string
    (33) vcte -> . id
    (34) vcte -> . funCall
    (35) vcte -> . vectormatriz
    (141) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID indice_dimensionada
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (36) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (37) vectormatriz -> . vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    term                           shift and go to state 99
    exp                            shift and go to state 206
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 167

    (139) exp_o -> ADDITION .

    OPENPAREN       reduce using rule 139 (exp_o -> ADDITION .)
    CTEINT          reduce using rule 139 (exp_o -> ADDITION .)
    CTEFLOAT        reduce using rule 139 (exp_o -> ADDITION .)
    CTESTRING       reduce using rule 139 (exp_o -> ADDITION .)
    ID              reduce using rule 139 (exp_o -> ADDITION .)
    OPENBRACKET     reduce using rule 139 (exp_o -> ADDITION .)


state 168

    (140) exp_o -> SUBSTRACTION .

    OPENPAREN       reduce using rule 140 (exp_o -> SUBSTRACTION .)
    CTEINT          reduce using rule 140 (exp_o -> SUBSTRACTION .)
    CTEFLOAT        reduce using rule 140 (exp_o -> SUBSTRACTION .)
    CTESTRING       reduce using rule 140 (exp_o -> SUBSTRACTION .)
    ID              reduce using rule 140 (exp_o -> SUBSTRACTION .)
    OPENBRACKET     reduce using rule 140 (exp_o -> SUBSTRACTION .)


state 169

    (143) term -> factor term_o . term
    (143) term -> . factor term_o term
    (144) term -> . factor
    (147) factor -> . vcte
    (148) factor -> . openP expression closeP
    (30) vcte -> . cte_int
    (31) vcte -> . cte_float
    (32) vcte -> . cte_string
    (33) vcte -> . id
    (34) vcte -> . funCall
    (35) vcte -> . vectormatriz
    (141) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID indice_dimensionada
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (36) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (37) vectormatriz -> . vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    factor                         shift and go to state 100
    term                           shift and go to state 207
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 170

    (145) term_o -> MULTIPLICATION .

    OPENPAREN       reduce using rule 145 (term_o -> MULTIPLICATION .)
    CTEINT          reduce using rule 145 (term_o -> MULTIPLICATION .)
    CTEFLOAT        reduce using rule 145 (term_o -> MULTIPLICATION .)
    CTESTRING       reduce using rule 145 (term_o -> MULTIPLICATION .)
    ID              reduce using rule 145 (term_o -> MULTIPLICATION .)
    OPENBRACKET     reduce using rule 145 (term_o -> MULTIPLICATION .)


state 171

    (146) term_o -> DIVISION .

    OPENPAREN       reduce using rule 146 (term_o -> DIVISION .)
    CTEINT          reduce using rule 146 (term_o -> DIVISION .)
    CTEFLOAT        reduce using rule 146 (term_o -> DIVISION .)
    CTESTRING       reduce using rule 146 (term_o -> DIVISION .)
    ID              reduce using rule 146 (term_o -> DIVISION .)
    OPENBRACKET     reduce using rule 146 (term_o -> DIVISION .)


state 172

    (148) factor -> openP expression . closeP
    (142) closeP -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 209

    closeP                         shift and go to state 208

state 173

    (135) expression -> exp . loper exp
    (136) expression -> exp .
    (83) loper -> . GREATER
    (84) loper -> . LESS
    (85) loper -> . NOTEQUAL
    (86) loper -> . ISEQUAL

    CLOSEPAREN      reduce using rule 136 (expression -> exp .)
    GREATER         shift and go to state 211
    LESS            shift and go to state 212
    NOTEQUAL        shift and go to state 213
    ISEQUAL         shift and go to state 214

    loper                          shift and go to state 210

state 174

    (38) vm1 -> OPENBRACKET . vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> OPENBRACKET . vm2 CLOSEBRACKET
    (36) vectormatriz -> OPENBRACKET . vm1 CLOSEBRACKET
    (40) vm2 -> . exp COMMA vm2
    (41) vm2 -> . exp
    (42) vm2 -> . empty
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (137) exp -> . term
    (138) exp -> . term exp_o exp
    (149) empty -> .
    (143) term -> . factor term_o term
    (144) term -> . factor
    (147) factor -> . vcte
    (148) factor -> . openP expression closeP
    (30) vcte -> . cte_int
    (31) vcte -> . cte_float
    (32) vcte -> . cte_string
    (33) vcte -> . id
    (34) vcte -> . funCall
    (35) vcte -> . vectormatriz
    (141) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID indice_dimensionada
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (36) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (37) vectormatriz -> . vm1

    OPENBRACKET     shift and go to state 174
    CLOSEBRACKET    reduce using rule 149 (empty -> .)
    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97

    vm2                            shift and go to state 176
    vm1                            shift and go to state 175
    exp                            shift and go to state 177
    empty                          shift and go to state 178
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108

state 175

    (36) vectormatriz -> OPENBRACKET vm1 . CLOSEBRACKET
    (37) vectormatriz -> vm1 .

  ! shift/reduce conflict for CLOSEBRACKET resolved as shift
    CLOSEBRACKET    shift and go to state 215
    MULTIPLICATION  reduce using rule 37 (vectormatriz -> vm1 .)
    DIVISION        reduce using rule 37 (vectormatriz -> vm1 .)
    ADDITION        reduce using rule 37 (vectormatriz -> vm1 .)
    SUBSTRACTION    reduce using rule 37 (vectormatriz -> vm1 .)
    COMMA           reduce using rule 37 (vectormatriz -> vm1 .)

  ! CLOSEBRACKET    [ reduce using rule 37 (vectormatriz -> vm1 .) ]


state 176

    (38) vm1 -> OPENBRACKET vm2 . CLOSEBRACKET COMMA vm1
    (39) vm1 -> OPENBRACKET vm2 . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 216


state 177

    (40) vm2 -> exp . COMMA vm2
    (41) vm2 -> exp .

    COMMA           shift and go to state 217
    CLOSEBRACKET    reduce using rule 41 (vm2 -> exp .)


state 178

    (42) vm2 -> empty .

    CLOSEBRACKET    reduce using rule 42 (vm2 -> empty .)


state 179

    (15) dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET . CTEINT CLOSEBRACKET

    CTEINT          shift and go to state 218


state 180

    (27) assignment -> id equals assignment3 . SEMICOLON

    SEMICOLON       shift and go to state 219


state 181

    (28) assignment3 -> exp .

    SEMICOLON       reduce using rule 28 (assignment3 -> exp .)


state 182

    (29) assignment3 -> read .

    SEMICOLON       reduce using rule 29 (assignment3 -> read .)


state 183

    (87) condition -> IF head_cond body . condition1
    (88) condition1 -> . elseif head_cond body condition1
    (89) condition1 -> . else body
    (90) condition1 -> . empty
    (91) elseif -> . ELSEIF
    (92) else -> . ELSE
    (149) empty -> .

    ELSEIF          shift and go to state 224
    ELSE            shift and go to state 225
    IF              reduce using rule 149 (empty -> .)
    PRINT           reduce using rule 149 (empty -> .)
    READ            reduce using rule 149 (empty -> .)
    ID              reduce using rule 149 (empty -> .)
    RETURN          reduce using rule 149 (empty -> .)
    FOR             reduce using rule 149 (empty -> .)
    CIRCLE          reduce using rule 149 (empty -> .)
    SQUARE          reduce using rule 149 (empty -> .)
    TRIANGLE        reduce using rule 149 (empty -> .)
    RECTANGLE       reduce using rule 149 (empty -> .)
    HIDE_STAR       reduce using rule 149 (empty -> .)
    SHOW_STAR       reduce using rule 149 (empty -> .)
    COLOR_STAR      reduce using rule 149 (empty -> .)
    SIZE_STAR       reduce using rule 149 (empty -> .)
    POSITION        reduce using rule 149 (empty -> .)
    HAND_DOWN       reduce using rule 149 (empty -> .)
    HAND_UP         reduce using rule 149 (empty -> .)
    GO              reduce using rule 149 (empty -> .)
    LEFT            reduce using rule 149 (empty -> .)
    RIGHT           reduce using rule 149 (empty -> .)
    BACK            reduce using rule 149 (empty -> .)
    ARC             reduce using rule 149 (empty -> .)
    WHILE           reduce using rule 149 (empty -> .)
    CLOSEBRACES     reduce using rule 149 (empty -> .)

    condition1                     shift and go to state 220
    elseif                         shift and go to state 221
    else                           shift and go to state 222
    empty                          shift and go to state 223

state 184

    (93) head_cond -> OPENPAREN expression . close_condition
    (95) close_condition -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 227

    close_condition                shift and go to state 226

state 185

    (59) print -> PRINT OPENPAREN expression . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 228


state 186

    (60) read -> READ OPENPAREN id . read1 CLOSEPAREN SEMICOLON
    (61) read1 -> . OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (62) read1 -> . OPENBRACKET exp CLOSEBRACKET
    (63) read1 -> . empty
    (149) empty -> .

    OPENBRACKET     shift and go to state 230
    CLOSEPAREN      reduce using rule 149 (empty -> .)

    read1                          shift and go to state 229
    empty                          shift and go to state 231

state 187

    (68) id -> ID . indice_dimensionada
    (65) indice_dimensionada -> . OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (66) indice_dimensionada -> . OPENBRACKET exp CLOSEBRACKET
    (67) indice_dimensionada -> . empty
    (149) empty -> .

  ! shift/reduce conflict for OPENBRACKET resolved as shift
    OPENBRACKET     shift and go to state 127
    CLOSEPAREN      reduce using rule 149 (empty -> .)

  ! OPENBRACKET     [ reduce using rule 149 (empty -> .) ]

    indice_dimensionada            shift and go to state 125
    empty                          shift and go to state 128

state 188

    (69) funCall -> ID iniciaFunCall funCall2 . terminaFunCall
    (71) terminaFunCall -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 233

    terminaFunCall                 shift and go to state 232

state 189

    (72) funCall2 -> funCallParam . funCall3
    (74) funCall3 -> . COMMA funCallParam funCall3
    (75) funCall3 -> . empty
    (149) empty -> .

    COMMA           shift and go to state 235
    CLOSEPAREN      reduce using rule 149 (empty -> .)

    funCall3                       shift and go to state 234
    empty                          shift and go to state 236

state 190

    (73) funCall2 -> empty .

    CLOSEPAREN      reduce using rule 73 (funCall2 -> empty .)


state 191

    (76) funCallParam -> exp .

    COMMA           reduce using rule 76 (funCallParam -> exp .)
    CLOSEPAREN      reduce using rule 76 (funCallParam -> exp .)


state 192

    (65) indice_dimensionada -> OPENBRACKET exp . CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (66) indice_dimensionada -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 237


state 193

    (80) return -> RETURN return1 SEMICOLON .

    IF              reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    PRINT           reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    READ            reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    ID              reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    RETURN          reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    FOR             reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    CIRCLE          reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    SQUARE          reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    TRIANGLE        reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    RECTANGLE       reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    HIDE_STAR       reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    SHOW_STAR       reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    COLOR_STAR      reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    SIZE_STAR       reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    POSITION        reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    HAND_DOWN       reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    HAND_UP         reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    GO              reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    LEFT            reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    RIGHT           reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    BACK            reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    ARC             reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    WHILE           reduce using rule 80 (return -> RETURN return1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 80 (return -> RETURN return1 SEMICOLON .)


state 194

    (94) body -> OPENBRACES body1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 238


state 195

    (96) body1 -> stmt . body1
    (96) body1 -> . stmt body1
    (97) body1 -> . empty
    (19) stmt -> . assignment
    (20) stmt -> . condition
    (21) stmt -> . print
    (22) stmt -> . loop
    (23) stmt -> . read
    (24) stmt -> . graphstmt
    (25) stmt -> . funCall SEMICOLON
    (26) stmt -> . return
    (149) empty -> .
    (27) assignment -> . id equals assignment3 SEMICOLON
    (87) condition -> . IF head_cond body condition1
    (59) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (17) loop -> . while
    (18) loop -> . for
    (60) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (108) graphstmt -> . graphfig
    (109) graphstmt -> . graphview
    (110) graphstmt -> . graphmove
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (80) return -> . RETURN return1 SEMICOLON
    (68) id -> . ID indice_dimensionada
    (103) while -> . while1 body
    (98) for -> . forInit for1 TWODOTS for2 forClose body
    (111) graphfig -> . graphfig1 SEMICOLON
    (112) graphfig -> . graphfig2 SEMICOLON
    (127) graphview -> . graphview0 SEMICOLON
    (128) graphview -> . graphview1 SEMICOLON
    (129) graphview -> . graphview2 SEMICOLON
    (117) graphmove -> . graphmove0 SEMICOLON
    (118) graphmove -> . graphmove1 SEMICOLON
    (119) graphmove -> . graphmove2 SEMICOLON
    (104) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (99) forInit -> . FOR
    (113) graphfig1 -> . CIRCLE unaExp
    (114) graphfig1 -> . SQUARE unaExp
    (115) graphfig1 -> . TRIANGLE unaExp
    (116) graphfig2 -> . RECTANGLE dosExp
    (130) graphview0 -> . HIDE_STAR
    (131) graphview0 -> . SHOW_STAR
    (132) graphview1 -> . COLOR_STAR unaExp
    (133) graphview1 -> . SIZE_STAR unaExp
    (134) graphview2 -> . POSITION dosExp
    (120) graphmove0 -> . HAND_DOWN
    (121) graphmove0 -> . HAND_UP
    (122) graphmove1 -> . GO unaExp
    (123) graphmove1 -> . LEFT unaExp
    (124) graphmove1 -> . RIGHT unaExp
    (125) graphmove1 -> . BACK unaExp
    (126) graphmove2 -> . ARC dosExp
    (105) while_w -> . WHILE

    CLOSEBRACES     reduce using rule 149 (empty -> .)
    IF              shift and go to state 52
    PRINT           shift and go to state 53
    READ            shift and go to state 56
    ID              shift and go to state 60
    RETURN          shift and go to state 61
    FOR             shift and go to state 73
    CIRCLE          shift and go to state 74
    SQUARE          shift and go to state 75
    TRIANGLE        shift and go to state 76
    RECTANGLE       shift and go to state 77
    HIDE_STAR       shift and go to state 78
    SHOW_STAR       shift and go to state 79
    COLOR_STAR      shift and go to state 80
    SIZE_STAR       shift and go to state 81
    POSITION        shift and go to state 82
    HAND_DOWN       shift and go to state 83
    HAND_UP         shift and go to state 84
    GO              shift and go to state 85
    LEFT            shift and go to state 86
    RIGHT           shift and go to state 87
    BACK            shift and go to state 88
    ARC             shift and go to state 89
    WHILE           shift and go to state 90

    stmt                           shift and go to state 195
    body1                          shift and go to state 239
    empty                          shift and go to state 196
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    funCall                        shift and go to state 49
    return                         shift and go to state 50
    id                             shift and go to state 51
    while                          shift and go to state 54
    for                            shift and go to state 55
    graphfig                       shift and go to state 57
    graphview                      shift and go to state 58
    graphmove                      shift and go to state 59
    while1                         shift and go to state 62
    forInit                        shift and go to state 63
    graphfig1                      shift and go to state 64
    graphfig2                      shift and go to state 65
    graphview0                     shift and go to state 66
    graphview1                     shift and go to state 67
    graphview2                     shift and go to state 68
    graphmove0                     shift and go to state 69
    graphmove1                     shift and go to state 70
    graphmove2                     shift and go to state 71
    while_w                        shift and go to state 72

state 196

    (97) body1 -> empty .

    CLOSEBRACES     reduce using rule 97 (body1 -> empty .)


state 197

    (98) for -> forInit for1 TWODOTS . for2 forClose body
    (101) for2 -> . exp
    (137) exp -> . term
    (138) exp -> . term exp_o exp
    (143) term -> . factor term_o term
    (144) term -> . factor
    (147) factor -> . vcte
    (148) factor -> . openP expression closeP
    (30) vcte -> . cte_int
    (31) vcte -> . cte_float
    (32) vcte -> . cte_string
    (33) vcte -> . id
    (34) vcte -> . funCall
    (35) vcte -> . vectormatriz
    (141) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID indice_dimensionada
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (36) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (37) vectormatriz -> . vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    for2                           shift and go to state 240
    exp                            shift and go to state 241
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 198

    (100) for1 -> OPENPAREN ID .

    TWODOTS         reduce using rule 100 (for1 -> OPENPAREN ID .)


state 199

    (104) while1 -> while_w OPENPAREN expression . CLOSEPAREN

    CLOSEPAREN      shift and go to state 242


state 200

    (107) unaExp -> OPENPAREN exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 243


state 201

    (106) dosExp -> OPENPAREN exp . COMMA exp CLOSEPAREN

    COMMA           shift and go to state 244


state 202

    (45) function -> FUN functionI function2 inicia_fun declara_vars function4 . termina_fun
    (47) termina_fun -> . CLOSEBRACES

    CLOSEBRACES     shift and go to state 246

    termina_fun                    shift and go to state 245

state 203

    (51) function4 -> stmt . function4
    (51) function4 -> . stmt function4
    (52) function4 -> . empty
    (19) stmt -> . assignment
    (20) stmt -> . condition
    (21) stmt -> . print
    (22) stmt -> . loop
    (23) stmt -> . read
    (24) stmt -> . graphstmt
    (25) stmt -> . funCall SEMICOLON
    (26) stmt -> . return
    (149) empty -> .
    (27) assignment -> . id equals assignment3 SEMICOLON
    (87) condition -> . IF head_cond body condition1
    (59) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (17) loop -> . while
    (18) loop -> . for
    (60) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (108) graphstmt -> . graphfig
    (109) graphstmt -> . graphview
    (110) graphstmt -> . graphmove
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (80) return -> . RETURN return1 SEMICOLON
    (68) id -> . ID indice_dimensionada
    (103) while -> . while1 body
    (98) for -> . forInit for1 TWODOTS for2 forClose body
    (111) graphfig -> . graphfig1 SEMICOLON
    (112) graphfig -> . graphfig2 SEMICOLON
    (127) graphview -> . graphview0 SEMICOLON
    (128) graphview -> . graphview1 SEMICOLON
    (129) graphview -> . graphview2 SEMICOLON
    (117) graphmove -> . graphmove0 SEMICOLON
    (118) graphmove -> . graphmove1 SEMICOLON
    (119) graphmove -> . graphmove2 SEMICOLON
    (104) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (99) forInit -> . FOR
    (113) graphfig1 -> . CIRCLE unaExp
    (114) graphfig1 -> . SQUARE unaExp
    (115) graphfig1 -> . TRIANGLE unaExp
    (116) graphfig2 -> . RECTANGLE dosExp
    (130) graphview0 -> . HIDE_STAR
    (131) graphview0 -> . SHOW_STAR
    (132) graphview1 -> . COLOR_STAR unaExp
    (133) graphview1 -> . SIZE_STAR unaExp
    (134) graphview2 -> . POSITION dosExp
    (120) graphmove0 -> . HAND_DOWN
    (121) graphmove0 -> . HAND_UP
    (122) graphmove1 -> . GO unaExp
    (123) graphmove1 -> . LEFT unaExp
    (124) graphmove1 -> . RIGHT unaExp
    (125) graphmove1 -> . BACK unaExp
    (126) graphmove2 -> . ARC dosExp
    (105) while_w -> . WHILE

    CLOSEBRACES     reduce using rule 149 (empty -> .)
    IF              shift and go to state 52
    PRINT           shift and go to state 53
    READ            shift and go to state 56
    ID              shift and go to state 60
    RETURN          shift and go to state 61
    FOR             shift and go to state 73
    CIRCLE          shift and go to state 74
    SQUARE          shift and go to state 75
    TRIANGLE        shift and go to state 76
    RECTANGLE       shift and go to state 77
    HIDE_STAR       shift and go to state 78
    SHOW_STAR       shift and go to state 79
    COLOR_STAR      shift and go to state 80
    SIZE_STAR       shift and go to state 81
    POSITION        shift and go to state 82
    HAND_DOWN       shift and go to state 83
    HAND_UP         shift and go to state 84
    GO              shift and go to state 85
    LEFT            shift and go to state 86
    RIGHT           shift and go to state 87
    BACK            shift and go to state 88
    ARC             shift and go to state 89
    WHILE           shift and go to state 90

    stmt                           shift and go to state 203
    function4                      shift and go to state 247
    empty                          shift and go to state 204
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    funCall                        shift and go to state 49
    return                         shift and go to state 50
    id                             shift and go to state 51
    while                          shift and go to state 54
    for                            shift and go to state 55
    graphfig                       shift and go to state 57
    graphview                      shift and go to state 58
    graphmove                      shift and go to state 59
    while1                         shift and go to state 62
    forInit                        shift and go to state 63
    graphfig1                      shift and go to state 64
    graphfig2                      shift and go to state 65
    graphview0                     shift and go to state 66
    graphview1                     shift and go to state 67
    graphview2                     shift and go to state 68
    graphmove0                     shift and go to state 69
    graphmove1                     shift and go to state 70
    graphmove2                     shift and go to state 71
    while_w                        shift and go to state 72

state 204

    (52) function4 -> empty .

    CLOSEBRACES     reduce using rule 52 (function4 -> empty .)


state 205

    (53) function5 -> COMMA funParam . function5
    (53) function5 -> . COMMA funParam function5
    (54) function5 -> . empty
    (149) empty -> .

    COMMA           shift and go to state 162
    CLOSEPAREN      reduce using rule 149 (empty -> .)

    function5                      shift and go to state 248
    empty                          shift and go to state 163

state 206

    (138) exp -> term exp_o exp .

    SEMICOLON       reduce using rule 138 (exp -> term exp_o exp .)
    GREATER         reduce using rule 138 (exp -> term exp_o exp .)
    LESS            reduce using rule 138 (exp -> term exp_o exp .)
    NOTEQUAL        reduce using rule 138 (exp -> term exp_o exp .)
    ISEQUAL         reduce using rule 138 (exp -> term exp_o exp .)
    CLOSEPAREN      reduce using rule 138 (exp -> term exp_o exp .)
    COMMA           reduce using rule 138 (exp -> term exp_o exp .)
    CLOSEBRACKET    reduce using rule 138 (exp -> term exp_o exp .)


state 207

    (143) term -> factor term_o term .

    ADDITION        reduce using rule 143 (term -> factor term_o term .)
    SUBSTRACTION    reduce using rule 143 (term -> factor term_o term .)
    SEMICOLON       reduce using rule 143 (term -> factor term_o term .)
    GREATER         reduce using rule 143 (term -> factor term_o term .)
    LESS            reduce using rule 143 (term -> factor term_o term .)
    NOTEQUAL        reduce using rule 143 (term -> factor term_o term .)
    ISEQUAL         reduce using rule 143 (term -> factor term_o term .)
    CLOSEPAREN      reduce using rule 143 (term -> factor term_o term .)
    COMMA           reduce using rule 143 (term -> factor term_o term .)
    CLOSEBRACKET    reduce using rule 143 (term -> factor term_o term .)


state 208

    (148) factor -> openP expression closeP .

    MULTIPLICATION  reduce using rule 148 (factor -> openP expression closeP .)
    DIVISION        reduce using rule 148 (factor -> openP expression closeP .)
    ADDITION        reduce using rule 148 (factor -> openP expression closeP .)
    SUBSTRACTION    reduce using rule 148 (factor -> openP expression closeP .)
    SEMICOLON       reduce using rule 148 (factor -> openP expression closeP .)
    GREATER         reduce using rule 148 (factor -> openP expression closeP .)
    LESS            reduce using rule 148 (factor -> openP expression closeP .)
    NOTEQUAL        reduce using rule 148 (factor -> openP expression closeP .)
    ISEQUAL         reduce using rule 148 (factor -> openP expression closeP .)
    CLOSEPAREN      reduce using rule 148 (factor -> openP expression closeP .)
    COMMA           reduce using rule 148 (factor -> openP expression closeP .)
    CLOSEBRACKET    reduce using rule 148 (factor -> openP expression closeP .)


state 209

    (142) closeP -> CLOSEPAREN .

    MULTIPLICATION  reduce using rule 142 (closeP -> CLOSEPAREN .)
    DIVISION        reduce using rule 142 (closeP -> CLOSEPAREN .)
    ADDITION        reduce using rule 142 (closeP -> CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 142 (closeP -> CLOSEPAREN .)
    SEMICOLON       reduce using rule 142 (closeP -> CLOSEPAREN .)
    GREATER         reduce using rule 142 (closeP -> CLOSEPAREN .)
    LESS            reduce using rule 142 (closeP -> CLOSEPAREN .)
    NOTEQUAL        reduce using rule 142 (closeP -> CLOSEPAREN .)
    ISEQUAL         reduce using rule 142 (closeP -> CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 142 (closeP -> CLOSEPAREN .)
    COMMA           reduce using rule 142 (closeP -> CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 142 (closeP -> CLOSEPAREN .)


state 210

    (135) expression -> exp loper . exp
    (137) exp -> . term
    (138) exp -> . term exp_o exp
    (143) term -> . factor term_o term
    (144) term -> . factor
    (147) factor -> . vcte
    (148) factor -> . openP expression closeP
    (30) vcte -> . cte_int
    (31) vcte -> . cte_float
    (32) vcte -> . cte_string
    (33) vcte -> . id
    (34) vcte -> . funCall
    (35) vcte -> . vectormatriz
    (141) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID indice_dimensionada
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (36) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (37) vectormatriz -> . vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    exp                            shift and go to state 249
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 211

    (83) loper -> GREATER .

    OPENPAREN       reduce using rule 83 (loper -> GREATER .)
    CTEINT          reduce using rule 83 (loper -> GREATER .)
    CTEFLOAT        reduce using rule 83 (loper -> GREATER .)
    CTESTRING       reduce using rule 83 (loper -> GREATER .)
    ID              reduce using rule 83 (loper -> GREATER .)
    OPENBRACKET     reduce using rule 83 (loper -> GREATER .)


state 212

    (84) loper -> LESS .

    OPENPAREN       reduce using rule 84 (loper -> LESS .)
    CTEINT          reduce using rule 84 (loper -> LESS .)
    CTEFLOAT        reduce using rule 84 (loper -> LESS .)
    CTESTRING       reduce using rule 84 (loper -> LESS .)
    ID              reduce using rule 84 (loper -> LESS .)
    OPENBRACKET     reduce using rule 84 (loper -> LESS .)


state 213

    (85) loper -> NOTEQUAL .

    OPENPAREN       reduce using rule 85 (loper -> NOTEQUAL .)
    CTEINT          reduce using rule 85 (loper -> NOTEQUAL .)
    CTEFLOAT        reduce using rule 85 (loper -> NOTEQUAL .)
    CTESTRING       reduce using rule 85 (loper -> NOTEQUAL .)
    ID              reduce using rule 85 (loper -> NOTEQUAL .)
    OPENBRACKET     reduce using rule 85 (loper -> NOTEQUAL .)


state 214

    (86) loper -> ISEQUAL .

    OPENPAREN       reduce using rule 86 (loper -> ISEQUAL .)
    CTEINT          reduce using rule 86 (loper -> ISEQUAL .)
    CTEFLOAT        reduce using rule 86 (loper -> ISEQUAL .)
    CTESTRING       reduce using rule 86 (loper -> ISEQUAL .)
    ID              reduce using rule 86 (loper -> ISEQUAL .)
    OPENBRACKET     reduce using rule 86 (loper -> ISEQUAL .)


state 215

    (36) vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .

    MULTIPLICATION  reduce using rule 36 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    DIVISION        reduce using rule 36 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    ADDITION        reduce using rule 36 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    SUBSTRACTION    reduce using rule 36 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    SEMICOLON       reduce using rule 36 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    GREATER         reduce using rule 36 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    LESS            reduce using rule 36 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 36 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    ISEQUAL         reduce using rule 36 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 36 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    COMMA           reduce using rule 36 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 36 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)


state 216

    (38) vm1 -> OPENBRACKET vm2 CLOSEBRACKET . COMMA vm1
    (39) vm1 -> OPENBRACKET vm2 CLOSEBRACKET .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 250
    MULTIPLICATION  reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    DIVISION        reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    ADDITION        reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    SUBSTRACTION    reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    SEMICOLON       reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    GREATER         reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    LESS            reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    ISEQUAL         reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)

  ! COMMA           [ reduce using rule 39 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .) ]


state 217

    (40) vm2 -> exp COMMA . vm2
    (40) vm2 -> . exp COMMA vm2
    (41) vm2 -> . exp
    (42) vm2 -> . empty
    (137) exp -> . term
    (138) exp -> . term exp_o exp
    (149) empty -> .
    (143) term -> . factor term_o term
    (144) term -> . factor
    (147) factor -> . vcte
    (148) factor -> . openP expression closeP
    (30) vcte -> . cte_int
    (31) vcte -> . cte_float
    (32) vcte -> . cte_string
    (33) vcte -> . id
    (34) vcte -> . funCall
    (35) vcte -> . vectormatriz
    (141) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID indice_dimensionada
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (36) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (37) vectormatriz -> . vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    CLOSEBRACKET    reduce using rule 149 (empty -> .)
    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    exp                            shift and go to state 177
    vm2                            shift and go to state 251
    empty                          shift and go to state 178
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 218

    (15) dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 252


state 219

    (27) assignment -> id equals assignment3 SEMICOLON .

    IF              reduce using rule 27 (assignment -> id equals assignment3 SEMICOLON .)
    PRINT           reduce using rule 27 (assignment -> id equals assignment3 SEMICOLON .)
    READ            reduce using rule 27 (assignment -> id equals assignment3 SEMICOLON .)
    ID              reduce using rule 27 (assignment -> id equals assignment3 SEMICOLON .)
    RETURN          reduce using rule 27 (assignment -> id equals assignment3 SEMICOLON .)
    FOR             reduce using rule 27 (assignment -> id equals assignment3 SEMICOLON .)
    CIRCLE          reduce using rule 27 (assignment -> id equals assignment3 SEMICOLON .)
    SQUARE          reduce using rule 27 (assignment -> id equals assignment3 SEMICOLON .)
    TRIANGLE        reduce using rule 27 (assignment -> id equals assignment3 SEMICOLON .)
    RECTANGLE       reduce using rule 27 (assignment -> id equals assignment3 SEMICOLON .)
    HIDE_STAR       reduce using rule 27 (assignment -> id equals assignment3 SEMICOLON .)
    SHOW_STAR       reduce using rule 27 (assignment -> id equals assignment3 SEMICOLON .)
    COLOR_STAR      reduce using rule 27 (assignment -> id equals assignment3 SEMICOLON .)
    SIZE_STAR       reduce using rule 27 (assignment -> id equals assignment3 SEMICOLON .)
    POSITION        reduce using rule 27 (assignment -> id equals assignment3 SEMICOLON .)
    HAND_DOWN       reduce using rule 27 (assignment -> id equals assignment3 SEMICOLON .)
    HAND_UP         reduce using rule 27 (assignment -> id equals assignment3 SEMICOLON .)
    GO              reduce using rule 27 (assignment -> id equals assignment3 SEMICOLON .)
    LEFT            reduce using rule 27 (assignment -> id equals assignment3 SEMICOLON .)
    RIGHT           reduce using rule 27 (assignment -> id equals assignment3 SEMICOLON .)
    BACK            reduce using rule 27 (assignment -> id equals assignment3 SEMICOLON .)
    ARC             reduce using rule 27 (assignment -> id equals assignment3 SEMICOLON .)
    WHILE           reduce using rule 27 (assignment -> id equals assignment3 SEMICOLON .)
    CLOSEBRACES     reduce using rule 27 (assignment -> id equals assignment3 SEMICOLON .)


state 220

    (87) condition -> IF head_cond body condition1 .

    IF              reduce using rule 87 (condition -> IF head_cond body condition1 .)
    PRINT           reduce using rule 87 (condition -> IF head_cond body condition1 .)
    READ            reduce using rule 87 (condition -> IF head_cond body condition1 .)
    ID              reduce using rule 87 (condition -> IF head_cond body condition1 .)
    RETURN          reduce using rule 87 (condition -> IF head_cond body condition1 .)
    FOR             reduce using rule 87 (condition -> IF head_cond body condition1 .)
    CIRCLE          reduce using rule 87 (condition -> IF head_cond body condition1 .)
    SQUARE          reduce using rule 87 (condition -> IF head_cond body condition1 .)
    TRIANGLE        reduce using rule 87 (condition -> IF head_cond body condition1 .)
    RECTANGLE       reduce using rule 87 (condition -> IF head_cond body condition1 .)
    HIDE_STAR       reduce using rule 87 (condition -> IF head_cond body condition1 .)
    SHOW_STAR       reduce using rule 87 (condition -> IF head_cond body condition1 .)
    COLOR_STAR      reduce using rule 87 (condition -> IF head_cond body condition1 .)
    SIZE_STAR       reduce using rule 87 (condition -> IF head_cond body condition1 .)
    POSITION        reduce using rule 87 (condition -> IF head_cond body condition1 .)
    HAND_DOWN       reduce using rule 87 (condition -> IF head_cond body condition1 .)
    HAND_UP         reduce using rule 87 (condition -> IF head_cond body condition1 .)
    GO              reduce using rule 87 (condition -> IF head_cond body condition1 .)
    LEFT            reduce using rule 87 (condition -> IF head_cond body condition1 .)
    RIGHT           reduce using rule 87 (condition -> IF head_cond body condition1 .)
    BACK            reduce using rule 87 (condition -> IF head_cond body condition1 .)
    ARC             reduce using rule 87 (condition -> IF head_cond body condition1 .)
    WHILE           reduce using rule 87 (condition -> IF head_cond body condition1 .)
    CLOSEBRACES     reduce using rule 87 (condition -> IF head_cond body condition1 .)


state 221

    (88) condition1 -> elseif . head_cond body condition1
    (93) head_cond -> . OPENPAREN expression close_condition

    OPENPAREN       shift and go to state 121

    head_cond                      shift and go to state 253

state 222

    (89) condition1 -> else . body
    (94) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 133

    body                           shift and go to state 254

state 223

    (90) condition1 -> empty .

    IF              reduce using rule 90 (condition1 -> empty .)
    PRINT           reduce using rule 90 (condition1 -> empty .)
    READ            reduce using rule 90 (condition1 -> empty .)
    ID              reduce using rule 90 (condition1 -> empty .)
    RETURN          reduce using rule 90 (condition1 -> empty .)
    FOR             reduce using rule 90 (condition1 -> empty .)
    CIRCLE          reduce using rule 90 (condition1 -> empty .)
    SQUARE          reduce using rule 90 (condition1 -> empty .)
    TRIANGLE        reduce using rule 90 (condition1 -> empty .)
    RECTANGLE       reduce using rule 90 (condition1 -> empty .)
    HIDE_STAR       reduce using rule 90 (condition1 -> empty .)
    SHOW_STAR       reduce using rule 90 (condition1 -> empty .)
    COLOR_STAR      reduce using rule 90 (condition1 -> empty .)
    SIZE_STAR       reduce using rule 90 (condition1 -> empty .)
    POSITION        reduce using rule 90 (condition1 -> empty .)
    HAND_DOWN       reduce using rule 90 (condition1 -> empty .)
    HAND_UP         reduce using rule 90 (condition1 -> empty .)
    GO              reduce using rule 90 (condition1 -> empty .)
    LEFT            reduce using rule 90 (condition1 -> empty .)
    RIGHT           reduce using rule 90 (condition1 -> empty .)
    BACK            reduce using rule 90 (condition1 -> empty .)
    ARC             reduce using rule 90 (condition1 -> empty .)
    WHILE           reduce using rule 90 (condition1 -> empty .)
    CLOSEBRACES     reduce using rule 90 (condition1 -> empty .)


state 224

    (91) elseif -> ELSEIF .

    OPENPAREN       reduce using rule 91 (elseif -> ELSEIF .)


state 225

    (92) else -> ELSE .

    OPENBRACES      reduce using rule 92 (else -> ELSE .)


state 226

    (93) head_cond -> OPENPAREN expression close_condition .

    OPENBRACES      reduce using rule 93 (head_cond -> OPENPAREN expression close_condition .)


state 227

    (95) close_condition -> CLOSEPAREN .

    OPENBRACES      reduce using rule 95 (close_condition -> CLOSEPAREN .)


state 228

    (59) print -> PRINT OPENPAREN expression CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 255


state 229

    (60) read -> READ OPENPAREN id read1 . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 256


state 230

    (61) read1 -> OPENBRACKET . exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (62) read1 -> OPENBRACKET . exp CLOSEBRACKET
    (137) exp -> . term
    (138) exp -> . term exp_o exp
    (143) term -> . factor term_o term
    (144) term -> . factor
    (147) factor -> . vcte
    (148) factor -> . openP expression closeP
    (30) vcte -> . cte_int
    (31) vcte -> . cte_float
    (32) vcte -> . cte_string
    (33) vcte -> . id
    (34) vcte -> . funCall
    (35) vcte -> . vectormatriz
    (141) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID indice_dimensionada
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (36) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (37) vectormatriz -> . vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    exp                            shift and go to state 257
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 231

    (63) read1 -> empty .

    CLOSEPAREN      reduce using rule 63 (read1 -> empty .)


state 232

    (69) funCall -> ID iniciaFunCall funCall2 terminaFunCall .

    SEMICOLON       reduce using rule 69 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    MULTIPLICATION  reduce using rule 69 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    DIVISION        reduce using rule 69 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    ADDITION        reduce using rule 69 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    SUBSTRACTION    reduce using rule 69 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    GREATER         reduce using rule 69 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    LESS            reduce using rule 69 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    NOTEQUAL        reduce using rule 69 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    ISEQUAL         reduce using rule 69 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    CLOSEPAREN      reduce using rule 69 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    COMMA           reduce using rule 69 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    CLOSEBRACKET    reduce using rule 69 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)


state 233

    (71) terminaFunCall -> CLOSEPAREN .

    SEMICOLON       reduce using rule 71 (terminaFunCall -> CLOSEPAREN .)
    MULTIPLICATION  reduce using rule 71 (terminaFunCall -> CLOSEPAREN .)
    DIVISION        reduce using rule 71 (terminaFunCall -> CLOSEPAREN .)
    ADDITION        reduce using rule 71 (terminaFunCall -> CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 71 (terminaFunCall -> CLOSEPAREN .)
    GREATER         reduce using rule 71 (terminaFunCall -> CLOSEPAREN .)
    LESS            reduce using rule 71 (terminaFunCall -> CLOSEPAREN .)
    NOTEQUAL        reduce using rule 71 (terminaFunCall -> CLOSEPAREN .)
    ISEQUAL         reduce using rule 71 (terminaFunCall -> CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 71 (terminaFunCall -> CLOSEPAREN .)
    COMMA           reduce using rule 71 (terminaFunCall -> CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 71 (terminaFunCall -> CLOSEPAREN .)


state 234

    (72) funCall2 -> funCallParam funCall3 .

    CLOSEPAREN      reduce using rule 72 (funCall2 -> funCallParam funCall3 .)


state 235

    (74) funCall3 -> COMMA . funCallParam funCall3
    (76) funCallParam -> . exp
    (137) exp -> . term
    (138) exp -> . term exp_o exp
    (143) term -> . factor term_o term
    (144) term -> . factor
    (147) factor -> . vcte
    (148) factor -> . openP expression closeP
    (30) vcte -> . cte_int
    (31) vcte -> . cte_float
    (32) vcte -> . cte_string
    (33) vcte -> . id
    (34) vcte -> . funCall
    (35) vcte -> . vectormatriz
    (141) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID indice_dimensionada
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (36) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (37) vectormatriz -> . vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    funCallParam                   shift and go to state 258
    exp                            shift and go to state 191
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 236

    (75) funCall3 -> empty .

    CLOSEPAREN      reduce using rule 75 (funCall3 -> empty .)


state 237

    (65) indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET . OPENBRACKET exp CLOSEBRACKET
    (66) indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .

  ! shift/reduce conflict for OPENBRACKET resolved as shift
    OPENBRACKET     shift and go to state 259
    EQUALS          reduce using rule 66 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    MULTIPLICATION  reduce using rule 66 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    DIVISION        reduce using rule 66 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    ADDITION        reduce using rule 66 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    SUBSTRACTION    reduce using rule 66 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    SEMICOLON       reduce using rule 66 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    GREATER         reduce using rule 66 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    LESS            reduce using rule 66 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 66 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    ISEQUAL         reduce using rule 66 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 66 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    COMMA           reduce using rule 66 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 66 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .)

  ! OPENBRACKET     [ reduce using rule 66 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET .) ]


state 238

    (94) body -> OPENBRACES body1 CLOSEBRACES .

    IF              reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    PRINT           reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    READ            reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    ID              reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    RETURN          reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    FOR             reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    CIRCLE          reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    SQUARE          reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    POSITION        reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_UP         reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    GO              reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    LEFT            reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    RIGHT           reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    BACK            reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    ARC             reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    WHILE           reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSEIF          reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSE            reduce using rule 94 (body -> OPENBRACES body1 CLOSEBRACES .)


state 239

    (96) body1 -> stmt body1 .

    CLOSEBRACES     reduce using rule 96 (body1 -> stmt body1 .)


state 240

    (98) for -> forInit for1 TWODOTS for2 . forClose body
    (102) forClose -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 261

    forClose                       shift and go to state 260

state 241

    (101) for2 -> exp .

    CLOSEPAREN      reduce using rule 101 (for2 -> exp .)


state 242

    (104) while1 -> while_w OPENPAREN expression CLOSEPAREN .

    OPENBRACES      reduce using rule 104 (while1 -> while_w OPENPAREN expression CLOSEPAREN .)


state 243

    (107) unaExp -> OPENPAREN exp CLOSEPAREN .

    SEMICOLON       reduce using rule 107 (unaExp -> OPENPAREN exp CLOSEPAREN .)


state 244

    (106) dosExp -> OPENPAREN exp COMMA . exp CLOSEPAREN
    (137) exp -> . term
    (138) exp -> . term exp_o exp
    (143) term -> . factor term_o term
    (144) term -> . factor
    (147) factor -> . vcte
    (148) factor -> . openP expression closeP
    (30) vcte -> . cte_int
    (31) vcte -> . cte_float
    (32) vcte -> . cte_string
    (33) vcte -> . id
    (34) vcte -> . funCall
    (35) vcte -> . vectormatriz
    (141) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID indice_dimensionada
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (36) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (37) vectormatriz -> . vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    exp                            shift and go to state 262
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 245

    (45) function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .

    FUN             reduce using rule 45 (function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .)
    MULTIPLICATION  reduce using rule 45 (function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .)


state 246

    (47) termina_fun -> CLOSEBRACES .

    FUN             reduce using rule 47 (termina_fun -> CLOSEBRACES .)
    MULTIPLICATION  reduce using rule 47 (termina_fun -> CLOSEBRACES .)


state 247

    (51) function4 -> stmt function4 .

    CLOSEBRACES     reduce using rule 51 (function4 -> stmt function4 .)


state 248

    (53) function5 -> COMMA funParam function5 .

    CLOSEPAREN      reduce using rule 53 (function5 -> COMMA funParam function5 .)


state 249

    (135) expression -> exp loper exp .

    CLOSEPAREN      reduce using rule 135 (expression -> exp loper exp .)


state 250

    (38) vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA . vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENBRACKET     shift and go to state 263

    vm1                            shift and go to state 264

state 251

    (40) vm2 -> exp COMMA vm2 .

    CLOSEBRACKET    reduce using rule 40 (vm2 -> exp COMMA vm2 .)


state 252

    (15) dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET .

    SEMICOLON       reduce using rule 15 (dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET .)
    EQUALS          reduce using rule 15 (dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET .)


state 253

    (88) condition1 -> elseif head_cond . body condition1
    (94) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 133

    body                           shift and go to state 265

state 254

    (89) condition1 -> else body .

    IF              reduce using rule 89 (condition1 -> else body .)
    PRINT           reduce using rule 89 (condition1 -> else body .)
    READ            reduce using rule 89 (condition1 -> else body .)
    ID              reduce using rule 89 (condition1 -> else body .)
    RETURN          reduce using rule 89 (condition1 -> else body .)
    FOR             reduce using rule 89 (condition1 -> else body .)
    CIRCLE          reduce using rule 89 (condition1 -> else body .)
    SQUARE          reduce using rule 89 (condition1 -> else body .)
    TRIANGLE        reduce using rule 89 (condition1 -> else body .)
    RECTANGLE       reduce using rule 89 (condition1 -> else body .)
    HIDE_STAR       reduce using rule 89 (condition1 -> else body .)
    SHOW_STAR       reduce using rule 89 (condition1 -> else body .)
    COLOR_STAR      reduce using rule 89 (condition1 -> else body .)
    SIZE_STAR       reduce using rule 89 (condition1 -> else body .)
    POSITION        reduce using rule 89 (condition1 -> else body .)
    HAND_DOWN       reduce using rule 89 (condition1 -> else body .)
    HAND_UP         reduce using rule 89 (condition1 -> else body .)
    GO              reduce using rule 89 (condition1 -> else body .)
    LEFT            reduce using rule 89 (condition1 -> else body .)
    RIGHT           reduce using rule 89 (condition1 -> else body .)
    BACK            reduce using rule 89 (condition1 -> else body .)
    ARC             reduce using rule 89 (condition1 -> else body .)
    WHILE           reduce using rule 89 (condition1 -> else body .)
    CLOSEBRACES     reduce using rule 89 (condition1 -> else body .)


state 255

    (59) print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .

    IF              reduce using rule 59 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 59 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 59 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 59 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 59 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 59 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 59 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 59 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 59 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 59 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 59 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 59 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 59 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 59 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    POSITION        reduce using rule 59 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 59 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 59 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 59 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 59 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 59 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 59 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 59 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 59 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 59 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)


state 256

    (60) read -> READ OPENPAREN id read1 CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 266


state 257

    (61) read1 -> OPENBRACKET exp . CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (62) read1 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 267


state 258

    (74) funCall3 -> COMMA funCallParam . funCall3
    (74) funCall3 -> . COMMA funCallParam funCall3
    (75) funCall3 -> . empty
    (149) empty -> .

    COMMA           shift and go to state 235
    CLOSEPAREN      reduce using rule 149 (empty -> .)

    funCall3                       shift and go to state 268
    empty                          shift and go to state 236

state 259

    (65) indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET . exp CLOSEBRACKET
    (137) exp -> . term
    (138) exp -> . term exp_o exp
    (143) term -> . factor term_o term
    (144) term -> . factor
    (147) factor -> . vcte
    (148) factor -> . openP expression closeP
    (30) vcte -> . cte_int
    (31) vcte -> . cte_float
    (32) vcte -> . cte_string
    (33) vcte -> . id
    (34) vcte -> . funCall
    (35) vcte -> . vectormatriz
    (141) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID indice_dimensionada
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (36) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (37) vectormatriz -> . vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    exp                            shift and go to state 269
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 260

    (98) for -> forInit for1 TWODOTS for2 forClose . body
    (94) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 133

    body                           shift and go to state 270

state 261

    (102) forClose -> CLOSEPAREN .

    OPENBRACES      reduce using rule 102 (forClose -> CLOSEPAREN .)


state 262

    (106) dosExp -> OPENPAREN exp COMMA exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 271


state 263

    (38) vm1 -> OPENBRACKET . vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> OPENBRACKET . vm2 CLOSEBRACKET
    (40) vm2 -> . exp COMMA vm2
    (41) vm2 -> . exp
    (42) vm2 -> . empty
    (137) exp -> . term
    (138) exp -> . term exp_o exp
    (149) empty -> .
    (143) term -> . factor term_o term
    (144) term -> . factor
    (147) factor -> . vcte
    (148) factor -> . openP expression closeP
    (30) vcte -> . cte_int
    (31) vcte -> . cte_float
    (32) vcte -> . cte_string
    (33) vcte -> . id
    (34) vcte -> . funCall
    (35) vcte -> . vectormatriz
    (141) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID indice_dimensionada
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (36) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (37) vectormatriz -> . vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    CLOSEBRACKET    reduce using rule 149 (empty -> .)
    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    vm2                            shift and go to state 176
    vm1                            shift and go to state 114
    exp                            shift and go to state 177
    empty                          shift and go to state 178
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108

state 264

    (38) vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .

    MULTIPLICATION  reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    DIVISION        reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    ADDITION        reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    SUBSTRACTION    reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    SEMICOLON       reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    GREATER         reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    LESS            reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    NOTEQUAL        reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    ISEQUAL         reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    CLOSEPAREN      reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    CLOSEBRACKET    reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    COMMA           reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)


state 265

    (88) condition1 -> elseif head_cond body . condition1
    (88) condition1 -> . elseif head_cond body condition1
    (89) condition1 -> . else body
    (90) condition1 -> . empty
    (91) elseif -> . ELSEIF
    (92) else -> . ELSE
    (149) empty -> .

    ELSEIF          shift and go to state 224
    ELSE            shift and go to state 225
    IF              reduce using rule 149 (empty -> .)
    PRINT           reduce using rule 149 (empty -> .)
    READ            reduce using rule 149 (empty -> .)
    ID              reduce using rule 149 (empty -> .)
    RETURN          reduce using rule 149 (empty -> .)
    FOR             reduce using rule 149 (empty -> .)
    CIRCLE          reduce using rule 149 (empty -> .)
    SQUARE          reduce using rule 149 (empty -> .)
    TRIANGLE        reduce using rule 149 (empty -> .)
    RECTANGLE       reduce using rule 149 (empty -> .)
    HIDE_STAR       reduce using rule 149 (empty -> .)
    SHOW_STAR       reduce using rule 149 (empty -> .)
    COLOR_STAR      reduce using rule 149 (empty -> .)
    SIZE_STAR       reduce using rule 149 (empty -> .)
    POSITION        reduce using rule 149 (empty -> .)
    HAND_DOWN       reduce using rule 149 (empty -> .)
    HAND_UP         reduce using rule 149 (empty -> .)
    GO              reduce using rule 149 (empty -> .)
    LEFT            reduce using rule 149 (empty -> .)
    RIGHT           reduce using rule 149 (empty -> .)
    BACK            reduce using rule 149 (empty -> .)
    ARC             reduce using rule 149 (empty -> .)
    WHILE           reduce using rule 149 (empty -> .)
    CLOSEBRACES     reduce using rule 149 (empty -> .)

    elseif                         shift and go to state 221
    condition1                     shift and go to state 272
    else                           shift and go to state 222
    empty                          shift and go to state 223

state 266

    (60) read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .

    IF              reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    POSITION        reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 60 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)


state 267

    (61) read1 -> OPENBRACKET exp CLOSEBRACKET . OPENBRACKET exp CLOSEBRACKET
    (62) read1 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     shift and go to state 273
    CLOSEPAREN      reduce using rule 62 (read1 -> OPENBRACKET exp CLOSEBRACKET .)


state 268

    (74) funCall3 -> COMMA funCallParam funCall3 .

    CLOSEPAREN      reduce using rule 74 (funCall3 -> COMMA funCallParam funCall3 .)


state 269

    (65) indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 274


state 270

    (98) for -> forInit for1 TWODOTS for2 forClose body .

    IF              reduce using rule 98 (for -> forInit for1 TWODOTS for2 forClose body .)
    PRINT           reduce using rule 98 (for -> forInit for1 TWODOTS for2 forClose body .)
    READ            reduce using rule 98 (for -> forInit for1 TWODOTS for2 forClose body .)
    ID              reduce using rule 98 (for -> forInit for1 TWODOTS for2 forClose body .)
    RETURN          reduce using rule 98 (for -> forInit for1 TWODOTS for2 forClose body .)
    FOR             reduce using rule 98 (for -> forInit for1 TWODOTS for2 forClose body .)
    CIRCLE          reduce using rule 98 (for -> forInit for1 TWODOTS for2 forClose body .)
    SQUARE          reduce using rule 98 (for -> forInit for1 TWODOTS for2 forClose body .)
    TRIANGLE        reduce using rule 98 (for -> forInit for1 TWODOTS for2 forClose body .)
    RECTANGLE       reduce using rule 98 (for -> forInit for1 TWODOTS for2 forClose body .)
    HIDE_STAR       reduce using rule 98 (for -> forInit for1 TWODOTS for2 forClose body .)
    SHOW_STAR       reduce using rule 98 (for -> forInit for1 TWODOTS for2 forClose body .)
    COLOR_STAR      reduce using rule 98 (for -> forInit for1 TWODOTS for2 forClose body .)
    SIZE_STAR       reduce using rule 98 (for -> forInit for1 TWODOTS for2 forClose body .)
    POSITION        reduce using rule 98 (for -> forInit for1 TWODOTS for2 forClose body .)
    HAND_DOWN       reduce using rule 98 (for -> forInit for1 TWODOTS for2 forClose body .)
    HAND_UP         reduce using rule 98 (for -> forInit for1 TWODOTS for2 forClose body .)
    GO              reduce using rule 98 (for -> forInit for1 TWODOTS for2 forClose body .)
    LEFT            reduce using rule 98 (for -> forInit for1 TWODOTS for2 forClose body .)
    RIGHT           reduce using rule 98 (for -> forInit for1 TWODOTS for2 forClose body .)
    BACK            reduce using rule 98 (for -> forInit for1 TWODOTS for2 forClose body .)
    ARC             reduce using rule 98 (for -> forInit for1 TWODOTS for2 forClose body .)
    WHILE           reduce using rule 98 (for -> forInit for1 TWODOTS for2 forClose body .)
    CLOSEBRACES     reduce using rule 98 (for -> forInit for1 TWODOTS for2 forClose body .)


state 271

    (106) dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN .

    SEMICOLON       reduce using rule 106 (dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN .)


state 272

    (88) condition1 -> elseif head_cond body condition1 .

    IF              reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    PRINT           reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    READ            reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    ID              reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    RETURN          reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    FOR             reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    CIRCLE          reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    SQUARE          reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    TRIANGLE        reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    RECTANGLE       reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    HIDE_STAR       reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    SHOW_STAR       reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    COLOR_STAR      reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    SIZE_STAR       reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    POSITION        reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    HAND_DOWN       reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    HAND_UP         reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    GO              reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    LEFT            reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    RIGHT           reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    BACK            reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    ARC             reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    WHILE           reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)
    CLOSEBRACES     reduce using rule 88 (condition1 -> elseif head_cond body condition1 .)


state 273

    (61) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET . exp CLOSEBRACKET
    (137) exp -> . term
    (138) exp -> . term exp_o exp
    (143) term -> . factor term_o term
    (144) term -> . factor
    (147) factor -> . vcte
    (148) factor -> . openP expression closeP
    (30) vcte -> . cte_int
    (31) vcte -> . cte_float
    (32) vcte -> . cte_string
    (33) vcte -> . id
    (34) vcte -> . funCall
    (35) vcte -> . vectormatriz
    (141) openP -> . OPENPAREN
    (77) cte_int -> . CTEINT
    (78) cte_float -> . CTEFLOAT
    (79) cte_string -> . CTESTRING
    (68) id -> . ID indice_dimensionada
    (69) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (36) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (37) vectormatriz -> . vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (39) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    exp                            shift and go to state 275
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 274

    (65) indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .

    EQUALS          reduce using rule 65 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    MULTIPLICATION  reduce using rule 65 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    DIVISION        reduce using rule 65 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    ADDITION        reduce using rule 65 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    SUBSTRACTION    reduce using rule 65 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    SEMICOLON       reduce using rule 65 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    GREATER         reduce using rule 65 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    LESS            reduce using rule 65 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 65 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    ISEQUAL         reduce using rule 65 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 65 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    COMMA           reduce using rule 65 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 65 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)
    OPENBRACKET     reduce using rule 65 (indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)


state 275

    (61) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 276


state 276

    (61) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .

    CLOSEPAREN      reduce using rule 61 (read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CLOSEBRACKET in state 175 resolved as shift
WARNING: shift/reduce conflict for OPENBRACKET in state 187 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 216 resolved as shift
WARNING: shift/reduce conflict for OPENBRACKET in state 237 resolved as shift
WARNING: reduce/reduce conflict in state 130 resolved using rule (return1 -> vcte)
WARNING: rejected rule (factor -> vcte) in state 130
