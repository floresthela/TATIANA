Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON declara_vars program_modules
Rule 2     program_modules -> program_fun star
Rule 3     program_fun -> function program_fun
Rule 4     program_fun -> empty
Rule 5     star -> starI declara_vars star1 CLOSEBRACES
Rule 6     starI -> star_sign OPENBRACES
Rule 7     star_sign -> MULTIPLICATION
Rule 8     star1 -> stmt star1
Rule 9     star1 -> empty
Rule 10    declara_vars -> vars declara_vars
Rule 11    declara_vars -> empty
Rule 12    vars -> type ID vars1 equals exp SEMICOLON
Rule 13    vars -> type ID vars1 SEMICOLON
Rule 14    vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3
Rule 15    vars1 -> empty
Rule 16    vars3 -> OPENBRACKET CTEINT CLOSEBRACKET
Rule 17    vars3 -> empty
Rule 18    loop -> while
Rule 19    loop -> for
Rule 20    stmt -> assignment
Rule 21    stmt -> condition
Rule 22    stmt -> print
Rule 23    stmt -> loop
Rule 24    stmt -> read
Rule 25    stmt -> graphstmt
Rule 26    stmt -> graphr
Rule 27    stmt -> funCall SEMICOLON
Rule 28    stmt -> return
Rule 29    assignment -> id assignment1 equals assignment3 SEMICOLON
Rule 30    assignment1 -> assignment2
Rule 31    assignment1 -> assignment2 assignment1
Rule 32    assignment1 -> empty
Rule 33    assignment2 -> OPENBRACKET exp CLOSEBRACKET
Rule 34    assignment3 -> exp
Rule 35    assignment3 -> read
Rule 36    vcte -> cte_int
Rule 37    vcte -> cte_float
Rule 38    vcte -> cte_char
Rule 39    vcte -> id vcte1
Rule 40    vcte -> funCall
Rule 41    vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3
Rule 42    vcte1 -> empty
Rule 43    vcte3 -> OPENBRACKET exp CLOSEBRACKET
Rule 44    vcte3 -> empty
Rule 45    functionI -> type ID
Rule 46    functionI -> VOID ID
Rule 47    function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun
Rule 48    inicia_fun -> OPENBRACES
Rule 49    termina_fun -> CLOSEBRACES
Rule 50    function2 -> OPENPAREN function3 CLOSEPAREN
Rule 51    function3 -> funParam function5
Rule 52    function3 -> empty
Rule 53    function4 -> stmt function4
Rule 54    function4 -> empty
Rule 55    function5 -> COMMA funParam function5
Rule 56    function5 -> empty
Rule 57    funParam -> type ID
Rule 58    type -> INT
Rule 59    type -> FLOAT
Rule 60    type -> CHAR
Rule 61    print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
Rule 62    read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
Rule 63    read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
Rule 64    read1 -> OPENBRACKET exp CLOSEBRACKET
Rule 65    read1 -> empty
Rule 66    equals -> EQUALS
Rule 67    id -> ID
Rule 68    funCall -> id OPENPAREN funCall2 CLOSEPAREN
Rule 69    funID -> ID
Rule 70    iniciaFunCall -> OPENPAREN
Rule 71    terminaFunCall -> CLOSEPAREN
Rule 72    funCall2 -> exp funCall3
Rule 73    funCall2 -> empty
Rule 74    funCall3 -> COMMA funCall2
Rule 75    funCall3 -> empty
Rule 76    cte_int -> CTEINT
Rule 77    cte_float -> CTEFLOAT
Rule 78    cte_char -> CTECHAR
Rule 79    return -> RETURN return1 SEMICOLON
Rule 80    return1 -> vcte
Rule 81    return1 -> exp
Rule 82    expression -> exp expression1
Rule 83    expression1 -> loper exp
Rule 84    expression1 -> empty
Rule 85    loper -> GREATER
Rule 86    loper -> LESS
Rule 87    loper -> NOTEQUAL
Rule 88    loper -> ISEQUAL
Rule 89    condition -> IF head_cond body condition1
Rule 90    condition1 -> elseif head_cond body condition1
Rule 91    condition1 -> else body
Rule 92    condition1 -> empty
Rule 93    elseif -> ELSEIF
Rule 94    else -> ELSE
Rule 95    head_cond -> OPENPAREN expression close_condition
Rule 96    body -> OPENBRACES body1 CLOSEBRACES
Rule 97    close_condition -> CLOSEPAREN
Rule 98    body1 -> stmt body1
Rule 99    body1 -> empty
Rule 100   for -> for1 body
Rule 101   for1 -> forInit OPENPAREN ID for2
Rule 102   for2 -> TWODOTS exp for3
Rule 103   for3 -> CLOSEPAREN
Rule 104   forInit -> FOR
Rule 105   while -> while1 body
Rule 106   while1 -> while_w OPENPAREN expression CLOSEPAREN
Rule 107   while_w -> WHILE
Rule 108   dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN
Rule 109   unaExp -> OPENPAREN exp CLOSEPAREN
Rule 110   graphstmt -> graphfig
Rule 111   graphstmt -> graphview
Rule 112   graphstmt -> graphmove
Rule 113   graphfig -> graphfig1 SEMICOLON
Rule 114   graphfig -> graphfig2 SEMICOLON
Rule 115   graphfig1 -> CIRCLE unaExp
Rule 116   graphfig1 -> SQUARE unaExp
Rule 117   graphfig2 -> TRIANGLE dosExp
Rule 118   graphfig2 -> RECTANGLE dosExp
Rule 119   graphmove -> graphmove0 SEMICOLON
Rule 120   graphmove -> graphmove1 SEMICOLON
Rule 121   graphmove -> graphmove2 SEMICOLON
Rule 122   graphmove0 -> HAND_DOWN
Rule 123   graphmove0 -> HAND_UP
Rule 124   graphmove1 -> GO unaExp
Rule 125   graphmove1 -> LEFT unaExp
Rule 126   graphmove1 -> RIGHT unaExp
Rule 127   graphmove1 -> BACK unaExp
Rule 128   graphmove2 -> ARC dosExp
Rule 129   graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
Rule 130   graphr1 -> graphstmt graphr1
Rule 131   graphr1 -> empty
Rule 132   rep -> OPENPAREN exp CLOSEPAREN
Rule 133   repeat -> REPEAT
Rule 134   graphview -> graphview0 SEMICOLON
Rule 135   graphview -> graphview1 SEMICOLON
Rule 136   graphview -> graphview2 SEMICOLON
Rule 137   graphview0 -> HIDE_STAR
Rule 138   graphview0 -> SHOW_STAR
Rule 139   graphview1 -> COLOR_STAR unaExp
Rule 140   graphview1 -> SIZE_STAR unaExp
Rule 141   graphview2 -> SETXY dosExp
Rule 142   exp -> term exp1
Rule 143   exp1 -> ADDITION exp
Rule 144   exp1 -> SUBSTRACTION exp
Rule 145   exp1 -> empty
Rule 146   openP -> OPENPAREN
Rule 147   closeP -> CLOSEPAREN
Rule 148   term -> factor term1
Rule 149   term1 -> MULTIPLICATION term
Rule 150   term1 -> DIVISION term
Rule 151   term1 -> empty
Rule 152   term2 -> factor term1
Rule 153   factor -> vcte
Rule 154   factor -> factor1
Rule 155   factor1 -> factor2 vcte
Rule 156   factor1 -> openP expression closeP
Rule 157   factor2 -> ADDITION
Rule 158   factor2 -> SUBSTRACTION
Rule 159   empty -> <empty>

Terminals, with rules where they appear

ADDITION             : 143 157
ARC                  : 128
BACK                 : 127
CHAR                 : 60
CIRCLE               : 115
CLOSEBRACES          : 5 49 96 129
CLOSEBRACKET         : 14 16 33 41 43 63 63 64
CLOSEPAREN           : 50 61 62 68 71 97 103 106 108 109 132 147
COLOR_STAR           : 139
COMMA                : 55 74 108
CTECHAR              : 78
CTEFLOAT             : 77
CTEINT               : 14 16 76
DIVISION             : 150
ELSE                 : 94
ELSEIF               : 93
EQUALS               : 66
FLOAT                : 59
FOR                  : 104
FUN                  : 47
GO                   : 124
GREATER              : 85
HAND_DOWN            : 122
HAND_UP              : 123
HIDE_STAR            : 137
ID                   : 1 12 13 45 46 57 67 69 101
IF                   : 89
INT                  : 58
ISEQUAL              : 88
LEFT                 : 125
LESS                 : 86
MULTIPLICATION       : 7 149
NOTEQUAL             : 87
OPENBRACES           : 6 48 96 129
OPENBRACKET          : 14 16 33 41 43 63 63 64
OPENPAREN            : 50 61 62 68 70 95 101 106 108 109 132 146
PRINT                : 61
PROGRAM              : 1
READ                 : 62
RECTANGLE            : 118
REPEAT               : 133
RETURN               : 79
RIGHT                : 126
SEMICOLON            : 1 12 13 27 29 61 62 79 113 114 119 120 121 134 135 136
SETXY                : 141
SHOW_STAR            : 138
SIZE_STAR            : 140
SQUARE               : 116
SUBSTRACTION         : 144 158
TRIANGLE             : 117
TWODOTS              : 102
VOID                 : 46
WHILE                : 107
error                : 

Nonterminals, with rules where they appear

assignment           : 20
assignment1          : 29 31
assignment2          : 30 31
assignment3          : 29
body                 : 89 90 91 100 105
body1                : 96 98
closeP               : 156
close_condition      : 95
condition            : 21
condition1           : 89 90
cte_char             : 38
cte_float            : 37
cte_int              : 36
declara_vars         : 1 5 10 47
dosExp               : 117 118 128 141
else                 : 91
elseif               : 90
empty                : 4 9 11 15 17 32 42 44 52 54 56 65 73 75 84 92 99 131 145 151
equals               : 12 29
exp                  : 12 33 34 41 43 63 63 64 72 81 82 83 102 108 108 109 132 143 144
exp1                 : 142
expression           : 61 95 106 156
expression1          : 82
factor               : 148 152
factor1              : 154
factor2              : 155
for                  : 19
for1                 : 100
for2                 : 101
for3                 : 102
forInit              : 101
funCall              : 27 40
funCall2             : 68 74
funCall3             : 72
funID                : 
funParam             : 51 55
function             : 3
function2            : 47
function3            : 50
function4            : 47 53
function5            : 51 55
functionI            : 47
graphfig             : 110
graphfig1            : 113
graphfig2            : 114
graphmove            : 112
graphmove0           : 119
graphmove1           : 120
graphmove2           : 121
graphr               : 26
graphr1              : 129 130
graphstmt            : 25 129 130
graphview            : 111
graphview0           : 134
graphview1           : 135
graphview2           : 136
head_cond            : 89 90
id                   : 29 39 62 68
iniciaFunCall        : 
inicia_fun           : 47
loop                 : 23
loper                : 83
openP                : 156
print                : 22
program              : 0
program_fun          : 2 3
program_modules      : 1
read                 : 24 35
read1                : 62
rep                  : 129
repeat               : 129
return               : 28
return1              : 79
star                 : 2
star1                : 5 8
starI                : 5
star_sign            : 6
stmt                 : 8 53 98
term                 : 142 149 150
term1                : 148 152
term2                : 
terminaFunCall       : 
termina_fun          : 47
type                 : 12 13 45 57
unaExp               : 115 116 124 125 126 127 139 140
vars                 : 10
vars1                : 12 13
vars3                : 14
vcte                 : 80 153 155
vcte1                : 39
vcte3                : 41
while                : 18
while1               : 105
while_w              : 106

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON declara_vars program_modules

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON declara_vars program_modules

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON declara_vars program_modules

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . declara_vars program_modules
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (12) vars -> . type ID vars1 equals exp SEMICOLON
    (13) vars -> . type ID vars1 SEMICOLON
    (159) empty -> .
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . CHAR

    FUN             reduce using rule 159 (empty -> .)
    MULTIPLICATION  reduce using rule 159 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    declara_vars                   shift and go to state 5
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 5

    (1) program -> PROGRAM ID SEMICOLON declara_vars . program_modules
    (2) program_modules -> . program_fun star
    (3) program_fun -> . function program_fun
    (4) program_fun -> . empty
    (47) function -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (159) empty -> .

    FUN             shift and go to state 16
    MULTIPLICATION  reduce using rule 159 (empty -> .)

    program_modules                shift and go to state 12
    program_fun                    shift and go to state 13
    function                       shift and go to state 14
    empty                          shift and go to state 15

state 6

    (10) declara_vars -> vars . declara_vars
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (12) vars -> . type ID vars1 equals exp SEMICOLON
    (13) vars -> . type ID vars1 SEMICOLON
    (159) empty -> .
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . CHAR

    FUN             reduce using rule 159 (empty -> .)
    MULTIPLICATION  reduce using rule 159 (empty -> .)
    IF              reduce using rule 159 (empty -> .)
    PRINT           reduce using rule 159 (empty -> .)
    READ            reduce using rule 159 (empty -> .)
    RETURN          reduce using rule 159 (empty -> .)
    ID              reduce using rule 159 (empty -> .)
    REPEAT          reduce using rule 159 (empty -> .)
    CIRCLE          reduce using rule 159 (empty -> .)
    SQUARE          reduce using rule 159 (empty -> .)
    TRIANGLE        reduce using rule 159 (empty -> .)
    RECTANGLE       reduce using rule 159 (empty -> .)
    HIDE_STAR       reduce using rule 159 (empty -> .)
    SHOW_STAR       reduce using rule 159 (empty -> .)
    COLOR_STAR      reduce using rule 159 (empty -> .)
    SIZE_STAR       reduce using rule 159 (empty -> .)
    SETXY           reduce using rule 159 (empty -> .)
    HAND_DOWN       reduce using rule 159 (empty -> .)
    HAND_UP         reduce using rule 159 (empty -> .)
    GO              reduce using rule 159 (empty -> .)
    LEFT            reduce using rule 159 (empty -> .)
    RIGHT           reduce using rule 159 (empty -> .)
    BACK            reduce using rule 159 (empty -> .)
    ARC             reduce using rule 159 (empty -> .)
    WHILE           reduce using rule 159 (empty -> .)
    FOR             reduce using rule 159 (empty -> .)
    CLOSEBRACES     reduce using rule 159 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    vars                           shift and go to state 6
    declara_vars                   shift and go to state 17
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 7

    (11) declara_vars -> empty .

    FUN             reduce using rule 11 (declara_vars -> empty .)
    MULTIPLICATION  reduce using rule 11 (declara_vars -> empty .)
    IF              reduce using rule 11 (declara_vars -> empty .)
    PRINT           reduce using rule 11 (declara_vars -> empty .)
    READ            reduce using rule 11 (declara_vars -> empty .)
    RETURN          reduce using rule 11 (declara_vars -> empty .)
    ID              reduce using rule 11 (declara_vars -> empty .)
    REPEAT          reduce using rule 11 (declara_vars -> empty .)
    CIRCLE          reduce using rule 11 (declara_vars -> empty .)
    SQUARE          reduce using rule 11 (declara_vars -> empty .)
    TRIANGLE        reduce using rule 11 (declara_vars -> empty .)
    RECTANGLE       reduce using rule 11 (declara_vars -> empty .)
    HIDE_STAR       reduce using rule 11 (declara_vars -> empty .)
    SHOW_STAR       reduce using rule 11 (declara_vars -> empty .)
    COLOR_STAR      reduce using rule 11 (declara_vars -> empty .)
    SIZE_STAR       reduce using rule 11 (declara_vars -> empty .)
    SETXY           reduce using rule 11 (declara_vars -> empty .)
    HAND_DOWN       reduce using rule 11 (declara_vars -> empty .)
    HAND_UP         reduce using rule 11 (declara_vars -> empty .)
    GO              reduce using rule 11 (declara_vars -> empty .)
    LEFT            reduce using rule 11 (declara_vars -> empty .)
    RIGHT           reduce using rule 11 (declara_vars -> empty .)
    BACK            reduce using rule 11 (declara_vars -> empty .)
    ARC             reduce using rule 11 (declara_vars -> empty .)
    WHILE           reduce using rule 11 (declara_vars -> empty .)
    FOR             reduce using rule 11 (declara_vars -> empty .)
    CLOSEBRACES     reduce using rule 11 (declara_vars -> empty .)


state 8

    (12) vars -> type . ID vars1 equals exp SEMICOLON
    (13) vars -> type . ID vars1 SEMICOLON

    ID              shift and go to state 18


state 9

    (58) type -> INT .

    ID              reduce using rule 58 (type -> INT .)


state 10

    (59) type -> FLOAT .

    ID              reduce using rule 59 (type -> FLOAT .)


state 11

    (60) type -> CHAR .

    ID              reduce using rule 60 (type -> CHAR .)


state 12

    (1) program -> PROGRAM ID SEMICOLON declara_vars program_modules .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON declara_vars program_modules .)


state 13

    (2) program_modules -> program_fun . star
    (5) star -> . starI declara_vars star1 CLOSEBRACES
    (6) starI -> . star_sign OPENBRACES
    (7) star_sign -> . MULTIPLICATION

    MULTIPLICATION  shift and go to state 22

    star                           shift and go to state 19
    starI                          shift and go to state 20
    star_sign                      shift and go to state 21

state 14

    (3) program_fun -> function . program_fun
    (3) program_fun -> . function program_fun
    (4) program_fun -> . empty
    (47) function -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (159) empty -> .

    FUN             shift and go to state 16
    MULTIPLICATION  reduce using rule 159 (empty -> .)

    function                       shift and go to state 14
    program_fun                    shift and go to state 23
    empty                          shift and go to state 15

state 15

    (4) program_fun -> empty .

    MULTIPLICATION  reduce using rule 4 (program_fun -> empty .)


state 16

    (47) function -> FUN . functionI function2 inicia_fun declara_vars function4 termina_fun
    (45) functionI -> . type ID
    (46) functionI -> . VOID ID
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . CHAR

    VOID            shift and go to state 26
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    functionI                      shift and go to state 24
    type                           shift and go to state 25

state 17

    (10) declara_vars -> vars declara_vars .

    FUN             reduce using rule 10 (declara_vars -> vars declara_vars .)
    MULTIPLICATION  reduce using rule 10 (declara_vars -> vars declara_vars .)
    IF              reduce using rule 10 (declara_vars -> vars declara_vars .)
    PRINT           reduce using rule 10 (declara_vars -> vars declara_vars .)
    READ            reduce using rule 10 (declara_vars -> vars declara_vars .)
    RETURN          reduce using rule 10 (declara_vars -> vars declara_vars .)
    ID              reduce using rule 10 (declara_vars -> vars declara_vars .)
    REPEAT          reduce using rule 10 (declara_vars -> vars declara_vars .)
    CIRCLE          reduce using rule 10 (declara_vars -> vars declara_vars .)
    SQUARE          reduce using rule 10 (declara_vars -> vars declara_vars .)
    TRIANGLE        reduce using rule 10 (declara_vars -> vars declara_vars .)
    RECTANGLE       reduce using rule 10 (declara_vars -> vars declara_vars .)
    HIDE_STAR       reduce using rule 10 (declara_vars -> vars declara_vars .)
    SHOW_STAR       reduce using rule 10 (declara_vars -> vars declara_vars .)
    COLOR_STAR      reduce using rule 10 (declara_vars -> vars declara_vars .)
    SIZE_STAR       reduce using rule 10 (declara_vars -> vars declara_vars .)
    SETXY           reduce using rule 10 (declara_vars -> vars declara_vars .)
    HAND_DOWN       reduce using rule 10 (declara_vars -> vars declara_vars .)
    HAND_UP         reduce using rule 10 (declara_vars -> vars declara_vars .)
    GO              reduce using rule 10 (declara_vars -> vars declara_vars .)
    LEFT            reduce using rule 10 (declara_vars -> vars declara_vars .)
    RIGHT           reduce using rule 10 (declara_vars -> vars declara_vars .)
    BACK            reduce using rule 10 (declara_vars -> vars declara_vars .)
    ARC             reduce using rule 10 (declara_vars -> vars declara_vars .)
    WHILE           reduce using rule 10 (declara_vars -> vars declara_vars .)
    FOR             reduce using rule 10 (declara_vars -> vars declara_vars .)
    CLOSEBRACES     reduce using rule 10 (declara_vars -> vars declara_vars .)


state 18

    (12) vars -> type ID . vars1 equals exp SEMICOLON
    (13) vars -> type ID . vars1 SEMICOLON
    (14) vars1 -> . OPENBRACKET CTEINT CLOSEBRACKET vars3
    (15) vars1 -> . empty
    (159) empty -> .

    OPENBRACKET     shift and go to state 28
    SEMICOLON       reduce using rule 159 (empty -> .)
    EQUALS          reduce using rule 159 (empty -> .)

    vars1                          shift and go to state 27
    empty                          shift and go to state 29

state 19

    (2) program_modules -> program_fun star .

    $end            reduce using rule 2 (program_modules -> program_fun star .)


state 20

    (5) star -> starI . declara_vars star1 CLOSEBRACES
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (12) vars -> . type ID vars1 equals exp SEMICOLON
    (13) vars -> . type ID vars1 SEMICOLON
    (159) empty -> .
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . CHAR

    IF              reduce using rule 159 (empty -> .)
    PRINT           reduce using rule 159 (empty -> .)
    READ            reduce using rule 159 (empty -> .)
    RETURN          reduce using rule 159 (empty -> .)
    ID              reduce using rule 159 (empty -> .)
    REPEAT          reduce using rule 159 (empty -> .)
    CIRCLE          reduce using rule 159 (empty -> .)
    SQUARE          reduce using rule 159 (empty -> .)
    TRIANGLE        reduce using rule 159 (empty -> .)
    RECTANGLE       reduce using rule 159 (empty -> .)
    HIDE_STAR       reduce using rule 159 (empty -> .)
    SHOW_STAR       reduce using rule 159 (empty -> .)
    COLOR_STAR      reduce using rule 159 (empty -> .)
    SIZE_STAR       reduce using rule 159 (empty -> .)
    SETXY           reduce using rule 159 (empty -> .)
    HAND_DOWN       reduce using rule 159 (empty -> .)
    HAND_UP         reduce using rule 159 (empty -> .)
    GO              reduce using rule 159 (empty -> .)
    LEFT            reduce using rule 159 (empty -> .)
    RIGHT           reduce using rule 159 (empty -> .)
    BACK            reduce using rule 159 (empty -> .)
    ARC             reduce using rule 159 (empty -> .)
    WHILE           reduce using rule 159 (empty -> .)
    FOR             reduce using rule 159 (empty -> .)
    CLOSEBRACES     reduce using rule 159 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    declara_vars                   shift and go to state 30
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 21

    (6) starI -> star_sign . OPENBRACES

    OPENBRACES      shift and go to state 31


state 22

    (7) star_sign -> MULTIPLICATION .

    OPENBRACES      reduce using rule 7 (star_sign -> MULTIPLICATION .)


state 23

    (3) program_fun -> function program_fun .

    MULTIPLICATION  reduce using rule 3 (program_fun -> function program_fun .)


state 24

    (47) function -> FUN functionI . function2 inicia_fun declara_vars function4 termina_fun
    (50) function2 -> . OPENPAREN function3 CLOSEPAREN

    OPENPAREN       shift and go to state 33

    function2                      shift and go to state 32

state 25

    (45) functionI -> type . ID

    ID              shift and go to state 34


state 26

    (46) functionI -> VOID . ID

    ID              shift and go to state 35


state 27

    (12) vars -> type ID vars1 . equals exp SEMICOLON
    (13) vars -> type ID vars1 . SEMICOLON
    (66) equals -> . EQUALS

    SEMICOLON       shift and go to state 37
    EQUALS          shift and go to state 38

    equals                         shift and go to state 36

state 28

    (14) vars1 -> OPENBRACKET . CTEINT CLOSEBRACKET vars3

    CTEINT          shift and go to state 39


state 29

    (15) vars1 -> empty .

    SEMICOLON       reduce using rule 15 (vars1 -> empty .)
    EQUALS          reduce using rule 15 (vars1 -> empty .)


state 30

    (5) star -> starI declara_vars . star1 CLOSEBRACES
    (8) star1 -> . stmt star1
    (9) star1 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . graphr
    (27) stmt -> . funCall SEMICOLON
    (28) stmt -> . return
    (159) empty -> .
    (29) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (89) condition -> . IF head_cond body condition1
    (61) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for
    (62) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (110) graphstmt -> . graphfig
    (111) graphstmt -> . graphview
    (112) graphstmt -> . graphmove
    (129) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (79) return -> . RETURN return1 SEMICOLON
    (67) id -> . ID
    (105) while -> . while1 body
    (100) for -> . for1 body
    (113) graphfig -> . graphfig1 SEMICOLON
    (114) graphfig -> . graphfig2 SEMICOLON
    (134) graphview -> . graphview0 SEMICOLON
    (135) graphview -> . graphview1 SEMICOLON
    (136) graphview -> . graphview2 SEMICOLON
    (119) graphmove -> . graphmove0 SEMICOLON
    (120) graphmove -> . graphmove1 SEMICOLON
    (121) graphmove -> . graphmove2 SEMICOLON
    (133) repeat -> . REPEAT
    (106) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (101) for1 -> . forInit OPENPAREN ID for2
    (115) graphfig1 -> . CIRCLE unaExp
    (116) graphfig1 -> . SQUARE unaExp
    (117) graphfig2 -> . TRIANGLE dosExp
    (118) graphfig2 -> . RECTANGLE dosExp
    (137) graphview0 -> . HIDE_STAR
    (138) graphview0 -> . SHOW_STAR
    (139) graphview1 -> . COLOR_STAR unaExp
    (140) graphview1 -> . SIZE_STAR unaExp
    (141) graphview2 -> . SETXY dosExp
    (122) graphmove0 -> . HAND_DOWN
    (123) graphmove0 -> . HAND_UP
    (124) graphmove1 -> . GO unaExp
    (125) graphmove1 -> . LEFT unaExp
    (126) graphmove1 -> . RIGHT unaExp
    (127) graphmove1 -> . BACK unaExp
    (128) graphmove2 -> . ARC dosExp
    (107) while_w -> . WHILE
    (104) forInit -> . FOR

    CLOSEBRACES     reduce using rule 159 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    RETURN          shift and go to state 62
    ID              shift and go to state 63
    REPEAT          shift and go to state 74
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92
    WHILE           shift and go to state 93
    FOR             shift and go to state 94

    star1                          shift and go to state 40
    stmt                           shift and go to state 41
    empty                          shift and go to state 42
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    graphr                         shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    repeat                         shift and go to state 61
    while1                         shift and go to state 64
    for1                           shift and go to state 65
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73
    while_w                        shift and go to state 75
    forInit                        shift and go to state 76

state 31

    (6) starI -> star_sign OPENBRACES .

    INT             reduce using rule 6 (starI -> star_sign OPENBRACES .)
    FLOAT           reduce using rule 6 (starI -> star_sign OPENBRACES .)
    CHAR            reduce using rule 6 (starI -> star_sign OPENBRACES .)
    IF              reduce using rule 6 (starI -> star_sign OPENBRACES .)
    PRINT           reduce using rule 6 (starI -> star_sign OPENBRACES .)
    READ            reduce using rule 6 (starI -> star_sign OPENBRACES .)
    RETURN          reduce using rule 6 (starI -> star_sign OPENBRACES .)
    ID              reduce using rule 6 (starI -> star_sign OPENBRACES .)
    REPEAT          reduce using rule 6 (starI -> star_sign OPENBRACES .)
    CIRCLE          reduce using rule 6 (starI -> star_sign OPENBRACES .)
    SQUARE          reduce using rule 6 (starI -> star_sign OPENBRACES .)
    TRIANGLE        reduce using rule 6 (starI -> star_sign OPENBRACES .)
    RECTANGLE       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    HIDE_STAR       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    SHOW_STAR       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    COLOR_STAR      reduce using rule 6 (starI -> star_sign OPENBRACES .)
    SIZE_STAR       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    SETXY           reduce using rule 6 (starI -> star_sign OPENBRACES .)
    HAND_DOWN       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    HAND_UP         reduce using rule 6 (starI -> star_sign OPENBRACES .)
    GO              reduce using rule 6 (starI -> star_sign OPENBRACES .)
    LEFT            reduce using rule 6 (starI -> star_sign OPENBRACES .)
    RIGHT           reduce using rule 6 (starI -> star_sign OPENBRACES .)
    BACK            reduce using rule 6 (starI -> star_sign OPENBRACES .)
    ARC             reduce using rule 6 (starI -> star_sign OPENBRACES .)
    WHILE           reduce using rule 6 (starI -> star_sign OPENBRACES .)
    FOR             reduce using rule 6 (starI -> star_sign OPENBRACES .)
    CLOSEBRACES     reduce using rule 6 (starI -> star_sign OPENBRACES .)


state 32

    (47) function -> FUN functionI function2 . inicia_fun declara_vars function4 termina_fun
    (48) inicia_fun -> . OPENBRACES

    OPENBRACES      shift and go to state 96

    inicia_fun                     shift and go to state 95

state 33

    (50) function2 -> OPENPAREN . function3 CLOSEPAREN
    (51) function3 -> . funParam function5
    (52) function3 -> . empty
    (57) funParam -> . type ID
    (159) empty -> .
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . CHAR

    CLOSEPAREN      reduce using rule 159 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    function3                      shift and go to state 97
    funParam                       shift and go to state 98
    empty                          shift and go to state 99
    type                           shift and go to state 100

state 34

    (45) functionI -> type ID .

    OPENPAREN       reduce using rule 45 (functionI -> type ID .)


state 35

    (46) functionI -> VOID ID .

    OPENPAREN       reduce using rule 46 (functionI -> VOID ID .)


state 36

    (12) vars -> type ID vars1 equals . exp SEMICOLON
    (142) exp -> . term exp1
    (148) term -> . factor term1
    (153) factor -> . vcte
    (154) factor -> . factor1
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (155) factor1 -> . factor2 vcte
    (156) factor1 -> . openP expression closeP
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (157) factor2 -> . ADDITION
    (158) factor2 -> . SUBSTRACTION
    (146) openP -> . OPENPAREN

    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63
    ADDITION        shift and go to state 117
    SUBSTRACTION    shift and go to state 118
    OPENPAREN       shift and go to state 116

    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    vcte                           shift and go to state 104
    factor1                        shift and go to state 105
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    id                             shift and go to state 109
    funCall                        shift and go to state 110
    factor2                        shift and go to state 111
    openP                          shift and go to state 112

state 37

    (13) vars -> type ID vars1 SEMICOLON .

    INT             reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    FLOAT           reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    CHAR            reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    FUN             reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    MULTIPLICATION  reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    IF              reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    PRINT           reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    READ            reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    RETURN          reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    ID              reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    REPEAT          reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    CIRCLE          reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    SQUARE          reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    TRIANGLE        reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    RECTANGLE       reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    HIDE_STAR       reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    SHOW_STAR       reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    COLOR_STAR      reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    SIZE_STAR       reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    SETXY           reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    HAND_DOWN       reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    HAND_UP         reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    GO              reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    LEFT            reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    RIGHT           reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    BACK            reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    ARC             reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    WHILE           reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    FOR             reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)


state 38

    (66) equals -> EQUALS .

    CTEINT          reduce using rule 66 (equals -> EQUALS .)
    CTEFLOAT        reduce using rule 66 (equals -> EQUALS .)
    CTECHAR         reduce using rule 66 (equals -> EQUALS .)
    ID              reduce using rule 66 (equals -> EQUALS .)
    ADDITION        reduce using rule 66 (equals -> EQUALS .)
    SUBSTRACTION    reduce using rule 66 (equals -> EQUALS .)
    OPENPAREN       reduce using rule 66 (equals -> EQUALS .)
    READ            reduce using rule 66 (equals -> EQUALS .)


state 39

    (14) vars1 -> OPENBRACKET CTEINT . CLOSEBRACKET vars3

    CLOSEBRACKET    shift and go to state 119


state 40

    (5) star -> starI declara_vars star1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 120


state 41

    (8) star1 -> stmt . star1
    (8) star1 -> . stmt star1
    (9) star1 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . graphr
    (27) stmt -> . funCall SEMICOLON
    (28) stmt -> . return
    (159) empty -> .
    (29) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (89) condition -> . IF head_cond body condition1
    (61) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for
    (62) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (110) graphstmt -> . graphfig
    (111) graphstmt -> . graphview
    (112) graphstmt -> . graphmove
    (129) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (79) return -> . RETURN return1 SEMICOLON
    (67) id -> . ID
    (105) while -> . while1 body
    (100) for -> . for1 body
    (113) graphfig -> . graphfig1 SEMICOLON
    (114) graphfig -> . graphfig2 SEMICOLON
    (134) graphview -> . graphview0 SEMICOLON
    (135) graphview -> . graphview1 SEMICOLON
    (136) graphview -> . graphview2 SEMICOLON
    (119) graphmove -> . graphmove0 SEMICOLON
    (120) graphmove -> . graphmove1 SEMICOLON
    (121) graphmove -> . graphmove2 SEMICOLON
    (133) repeat -> . REPEAT
    (106) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (101) for1 -> . forInit OPENPAREN ID for2
    (115) graphfig1 -> . CIRCLE unaExp
    (116) graphfig1 -> . SQUARE unaExp
    (117) graphfig2 -> . TRIANGLE dosExp
    (118) graphfig2 -> . RECTANGLE dosExp
    (137) graphview0 -> . HIDE_STAR
    (138) graphview0 -> . SHOW_STAR
    (139) graphview1 -> . COLOR_STAR unaExp
    (140) graphview1 -> . SIZE_STAR unaExp
    (141) graphview2 -> . SETXY dosExp
    (122) graphmove0 -> . HAND_DOWN
    (123) graphmove0 -> . HAND_UP
    (124) graphmove1 -> . GO unaExp
    (125) graphmove1 -> . LEFT unaExp
    (126) graphmove1 -> . RIGHT unaExp
    (127) graphmove1 -> . BACK unaExp
    (128) graphmove2 -> . ARC dosExp
    (107) while_w -> . WHILE
    (104) forInit -> . FOR

    CLOSEBRACES     reduce using rule 159 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    RETURN          shift and go to state 62
    ID              shift and go to state 63
    REPEAT          shift and go to state 74
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92
    WHILE           shift and go to state 93
    FOR             shift and go to state 94

    stmt                           shift and go to state 41
    star1                          shift and go to state 121
    empty                          shift and go to state 42
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    graphr                         shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    repeat                         shift and go to state 61
    while1                         shift and go to state 64
    for1                           shift and go to state 65
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73
    while_w                        shift and go to state 75
    forInit                        shift and go to state 76

state 42

    (9) star1 -> empty .

    CLOSEBRACES     reduce using rule 9 (star1 -> empty .)


state 43

    (20) stmt -> assignment .

    IF              reduce using rule 20 (stmt -> assignment .)
    PRINT           reduce using rule 20 (stmt -> assignment .)
    READ            reduce using rule 20 (stmt -> assignment .)
    RETURN          reduce using rule 20 (stmt -> assignment .)
    ID              reduce using rule 20 (stmt -> assignment .)
    REPEAT          reduce using rule 20 (stmt -> assignment .)
    CIRCLE          reduce using rule 20 (stmt -> assignment .)
    SQUARE          reduce using rule 20 (stmt -> assignment .)
    TRIANGLE        reduce using rule 20 (stmt -> assignment .)
    RECTANGLE       reduce using rule 20 (stmt -> assignment .)
    HIDE_STAR       reduce using rule 20 (stmt -> assignment .)
    SHOW_STAR       reduce using rule 20 (stmt -> assignment .)
    COLOR_STAR      reduce using rule 20 (stmt -> assignment .)
    SIZE_STAR       reduce using rule 20 (stmt -> assignment .)
    SETXY           reduce using rule 20 (stmt -> assignment .)
    HAND_DOWN       reduce using rule 20 (stmt -> assignment .)
    HAND_UP         reduce using rule 20 (stmt -> assignment .)
    GO              reduce using rule 20 (stmt -> assignment .)
    LEFT            reduce using rule 20 (stmt -> assignment .)
    RIGHT           reduce using rule 20 (stmt -> assignment .)
    BACK            reduce using rule 20 (stmt -> assignment .)
    ARC             reduce using rule 20 (stmt -> assignment .)
    WHILE           reduce using rule 20 (stmt -> assignment .)
    FOR             reduce using rule 20 (stmt -> assignment .)
    CLOSEBRACES     reduce using rule 20 (stmt -> assignment .)


state 44

    (21) stmt -> condition .

    IF              reduce using rule 21 (stmt -> condition .)
    PRINT           reduce using rule 21 (stmt -> condition .)
    READ            reduce using rule 21 (stmt -> condition .)
    RETURN          reduce using rule 21 (stmt -> condition .)
    ID              reduce using rule 21 (stmt -> condition .)
    REPEAT          reduce using rule 21 (stmt -> condition .)
    CIRCLE          reduce using rule 21 (stmt -> condition .)
    SQUARE          reduce using rule 21 (stmt -> condition .)
    TRIANGLE        reduce using rule 21 (stmt -> condition .)
    RECTANGLE       reduce using rule 21 (stmt -> condition .)
    HIDE_STAR       reduce using rule 21 (stmt -> condition .)
    SHOW_STAR       reduce using rule 21 (stmt -> condition .)
    COLOR_STAR      reduce using rule 21 (stmt -> condition .)
    SIZE_STAR       reduce using rule 21 (stmt -> condition .)
    SETXY           reduce using rule 21 (stmt -> condition .)
    HAND_DOWN       reduce using rule 21 (stmt -> condition .)
    HAND_UP         reduce using rule 21 (stmt -> condition .)
    GO              reduce using rule 21 (stmt -> condition .)
    LEFT            reduce using rule 21 (stmt -> condition .)
    RIGHT           reduce using rule 21 (stmt -> condition .)
    BACK            reduce using rule 21 (stmt -> condition .)
    ARC             reduce using rule 21 (stmt -> condition .)
    WHILE           reduce using rule 21 (stmt -> condition .)
    FOR             reduce using rule 21 (stmt -> condition .)
    CLOSEBRACES     reduce using rule 21 (stmt -> condition .)


state 45

    (22) stmt -> print .

    IF              reduce using rule 22 (stmt -> print .)
    PRINT           reduce using rule 22 (stmt -> print .)
    READ            reduce using rule 22 (stmt -> print .)
    RETURN          reduce using rule 22 (stmt -> print .)
    ID              reduce using rule 22 (stmt -> print .)
    REPEAT          reduce using rule 22 (stmt -> print .)
    CIRCLE          reduce using rule 22 (stmt -> print .)
    SQUARE          reduce using rule 22 (stmt -> print .)
    TRIANGLE        reduce using rule 22 (stmt -> print .)
    RECTANGLE       reduce using rule 22 (stmt -> print .)
    HIDE_STAR       reduce using rule 22 (stmt -> print .)
    SHOW_STAR       reduce using rule 22 (stmt -> print .)
    COLOR_STAR      reduce using rule 22 (stmt -> print .)
    SIZE_STAR       reduce using rule 22 (stmt -> print .)
    SETXY           reduce using rule 22 (stmt -> print .)
    HAND_DOWN       reduce using rule 22 (stmt -> print .)
    HAND_UP         reduce using rule 22 (stmt -> print .)
    GO              reduce using rule 22 (stmt -> print .)
    LEFT            reduce using rule 22 (stmt -> print .)
    RIGHT           reduce using rule 22 (stmt -> print .)
    BACK            reduce using rule 22 (stmt -> print .)
    ARC             reduce using rule 22 (stmt -> print .)
    WHILE           reduce using rule 22 (stmt -> print .)
    FOR             reduce using rule 22 (stmt -> print .)
    CLOSEBRACES     reduce using rule 22 (stmt -> print .)


state 46

    (23) stmt -> loop .

    IF              reduce using rule 23 (stmt -> loop .)
    PRINT           reduce using rule 23 (stmt -> loop .)
    READ            reduce using rule 23 (stmt -> loop .)
    RETURN          reduce using rule 23 (stmt -> loop .)
    ID              reduce using rule 23 (stmt -> loop .)
    REPEAT          reduce using rule 23 (stmt -> loop .)
    CIRCLE          reduce using rule 23 (stmt -> loop .)
    SQUARE          reduce using rule 23 (stmt -> loop .)
    TRIANGLE        reduce using rule 23 (stmt -> loop .)
    RECTANGLE       reduce using rule 23 (stmt -> loop .)
    HIDE_STAR       reduce using rule 23 (stmt -> loop .)
    SHOW_STAR       reduce using rule 23 (stmt -> loop .)
    COLOR_STAR      reduce using rule 23 (stmt -> loop .)
    SIZE_STAR       reduce using rule 23 (stmt -> loop .)
    SETXY           reduce using rule 23 (stmt -> loop .)
    HAND_DOWN       reduce using rule 23 (stmt -> loop .)
    HAND_UP         reduce using rule 23 (stmt -> loop .)
    GO              reduce using rule 23 (stmt -> loop .)
    LEFT            reduce using rule 23 (stmt -> loop .)
    RIGHT           reduce using rule 23 (stmt -> loop .)
    BACK            reduce using rule 23 (stmt -> loop .)
    ARC             reduce using rule 23 (stmt -> loop .)
    WHILE           reduce using rule 23 (stmt -> loop .)
    FOR             reduce using rule 23 (stmt -> loop .)
    CLOSEBRACES     reduce using rule 23 (stmt -> loop .)


state 47

    (24) stmt -> read .

    IF              reduce using rule 24 (stmt -> read .)
    PRINT           reduce using rule 24 (stmt -> read .)
    READ            reduce using rule 24 (stmt -> read .)
    RETURN          reduce using rule 24 (stmt -> read .)
    ID              reduce using rule 24 (stmt -> read .)
    REPEAT          reduce using rule 24 (stmt -> read .)
    CIRCLE          reduce using rule 24 (stmt -> read .)
    SQUARE          reduce using rule 24 (stmt -> read .)
    TRIANGLE        reduce using rule 24 (stmt -> read .)
    RECTANGLE       reduce using rule 24 (stmt -> read .)
    HIDE_STAR       reduce using rule 24 (stmt -> read .)
    SHOW_STAR       reduce using rule 24 (stmt -> read .)
    COLOR_STAR      reduce using rule 24 (stmt -> read .)
    SIZE_STAR       reduce using rule 24 (stmt -> read .)
    SETXY           reduce using rule 24 (stmt -> read .)
    HAND_DOWN       reduce using rule 24 (stmt -> read .)
    HAND_UP         reduce using rule 24 (stmt -> read .)
    GO              reduce using rule 24 (stmt -> read .)
    LEFT            reduce using rule 24 (stmt -> read .)
    RIGHT           reduce using rule 24 (stmt -> read .)
    BACK            reduce using rule 24 (stmt -> read .)
    ARC             reduce using rule 24 (stmt -> read .)
    WHILE           reduce using rule 24 (stmt -> read .)
    FOR             reduce using rule 24 (stmt -> read .)
    CLOSEBRACES     reduce using rule 24 (stmt -> read .)


state 48

    (25) stmt -> graphstmt .

    IF              reduce using rule 25 (stmt -> graphstmt .)
    PRINT           reduce using rule 25 (stmt -> graphstmt .)
    READ            reduce using rule 25 (stmt -> graphstmt .)
    RETURN          reduce using rule 25 (stmt -> graphstmt .)
    ID              reduce using rule 25 (stmt -> graphstmt .)
    REPEAT          reduce using rule 25 (stmt -> graphstmt .)
    CIRCLE          reduce using rule 25 (stmt -> graphstmt .)
    SQUARE          reduce using rule 25 (stmt -> graphstmt .)
    TRIANGLE        reduce using rule 25 (stmt -> graphstmt .)
    RECTANGLE       reduce using rule 25 (stmt -> graphstmt .)
    HIDE_STAR       reduce using rule 25 (stmt -> graphstmt .)
    SHOW_STAR       reduce using rule 25 (stmt -> graphstmt .)
    COLOR_STAR      reduce using rule 25 (stmt -> graphstmt .)
    SIZE_STAR       reduce using rule 25 (stmt -> graphstmt .)
    SETXY           reduce using rule 25 (stmt -> graphstmt .)
    HAND_DOWN       reduce using rule 25 (stmt -> graphstmt .)
    HAND_UP         reduce using rule 25 (stmt -> graphstmt .)
    GO              reduce using rule 25 (stmt -> graphstmt .)
    LEFT            reduce using rule 25 (stmt -> graphstmt .)
    RIGHT           reduce using rule 25 (stmt -> graphstmt .)
    BACK            reduce using rule 25 (stmt -> graphstmt .)
    ARC             reduce using rule 25 (stmt -> graphstmt .)
    WHILE           reduce using rule 25 (stmt -> graphstmt .)
    FOR             reduce using rule 25 (stmt -> graphstmt .)
    CLOSEBRACES     reduce using rule 25 (stmt -> graphstmt .)


state 49

    (26) stmt -> graphr .

    IF              reduce using rule 26 (stmt -> graphr .)
    PRINT           reduce using rule 26 (stmt -> graphr .)
    READ            reduce using rule 26 (stmt -> graphr .)
    RETURN          reduce using rule 26 (stmt -> graphr .)
    ID              reduce using rule 26 (stmt -> graphr .)
    REPEAT          reduce using rule 26 (stmt -> graphr .)
    CIRCLE          reduce using rule 26 (stmt -> graphr .)
    SQUARE          reduce using rule 26 (stmt -> graphr .)
    TRIANGLE        reduce using rule 26 (stmt -> graphr .)
    RECTANGLE       reduce using rule 26 (stmt -> graphr .)
    HIDE_STAR       reduce using rule 26 (stmt -> graphr .)
    SHOW_STAR       reduce using rule 26 (stmt -> graphr .)
    COLOR_STAR      reduce using rule 26 (stmt -> graphr .)
    SIZE_STAR       reduce using rule 26 (stmt -> graphr .)
    SETXY           reduce using rule 26 (stmt -> graphr .)
    HAND_DOWN       reduce using rule 26 (stmt -> graphr .)
    HAND_UP         reduce using rule 26 (stmt -> graphr .)
    GO              reduce using rule 26 (stmt -> graphr .)
    LEFT            reduce using rule 26 (stmt -> graphr .)
    RIGHT           reduce using rule 26 (stmt -> graphr .)
    BACK            reduce using rule 26 (stmt -> graphr .)
    ARC             reduce using rule 26 (stmt -> graphr .)
    WHILE           reduce using rule 26 (stmt -> graphr .)
    FOR             reduce using rule 26 (stmt -> graphr .)
    CLOSEBRACES     reduce using rule 26 (stmt -> graphr .)


state 50

    (27) stmt -> funCall . SEMICOLON

    SEMICOLON       shift and go to state 122


state 51

    (28) stmt -> return .

    IF              reduce using rule 28 (stmt -> return .)
    PRINT           reduce using rule 28 (stmt -> return .)
    READ            reduce using rule 28 (stmt -> return .)
    RETURN          reduce using rule 28 (stmt -> return .)
    ID              reduce using rule 28 (stmt -> return .)
    REPEAT          reduce using rule 28 (stmt -> return .)
    CIRCLE          reduce using rule 28 (stmt -> return .)
    SQUARE          reduce using rule 28 (stmt -> return .)
    TRIANGLE        reduce using rule 28 (stmt -> return .)
    RECTANGLE       reduce using rule 28 (stmt -> return .)
    HIDE_STAR       reduce using rule 28 (stmt -> return .)
    SHOW_STAR       reduce using rule 28 (stmt -> return .)
    COLOR_STAR      reduce using rule 28 (stmt -> return .)
    SIZE_STAR       reduce using rule 28 (stmt -> return .)
    SETXY           reduce using rule 28 (stmt -> return .)
    HAND_DOWN       reduce using rule 28 (stmt -> return .)
    HAND_UP         reduce using rule 28 (stmt -> return .)
    GO              reduce using rule 28 (stmt -> return .)
    LEFT            reduce using rule 28 (stmt -> return .)
    RIGHT           reduce using rule 28 (stmt -> return .)
    BACK            reduce using rule 28 (stmt -> return .)
    ARC             reduce using rule 28 (stmt -> return .)
    WHILE           reduce using rule 28 (stmt -> return .)
    FOR             reduce using rule 28 (stmt -> return .)
    CLOSEBRACES     reduce using rule 28 (stmt -> return .)


state 52

    (29) assignment -> id . assignment1 equals assignment3 SEMICOLON
    (68) funCall -> id . OPENPAREN funCall2 CLOSEPAREN
    (30) assignment1 -> . assignment2
    (31) assignment1 -> . assignment2 assignment1
    (32) assignment1 -> . empty
    (33) assignment2 -> . OPENBRACKET exp CLOSEBRACKET
    (159) empty -> .

    OPENPAREN       shift and go to state 124
    OPENBRACKET     shift and go to state 127
    EQUALS          reduce using rule 159 (empty -> .)

    assignment1                    shift and go to state 123
    assignment2                    shift and go to state 125
    empty                          shift and go to state 126

state 53

    (89) condition -> IF . head_cond body condition1
    (95) head_cond -> . OPENPAREN expression close_condition

    OPENPAREN       shift and go to state 129

    head_cond                      shift and go to state 128

state 54

    (61) print -> PRINT . OPENPAREN expression CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 130


state 55

    (18) loop -> while .

    IF              reduce using rule 18 (loop -> while .)
    PRINT           reduce using rule 18 (loop -> while .)
    READ            reduce using rule 18 (loop -> while .)
    RETURN          reduce using rule 18 (loop -> while .)
    ID              reduce using rule 18 (loop -> while .)
    REPEAT          reduce using rule 18 (loop -> while .)
    CIRCLE          reduce using rule 18 (loop -> while .)
    SQUARE          reduce using rule 18 (loop -> while .)
    TRIANGLE        reduce using rule 18 (loop -> while .)
    RECTANGLE       reduce using rule 18 (loop -> while .)
    HIDE_STAR       reduce using rule 18 (loop -> while .)
    SHOW_STAR       reduce using rule 18 (loop -> while .)
    COLOR_STAR      reduce using rule 18 (loop -> while .)
    SIZE_STAR       reduce using rule 18 (loop -> while .)
    SETXY           reduce using rule 18 (loop -> while .)
    HAND_DOWN       reduce using rule 18 (loop -> while .)
    HAND_UP         reduce using rule 18 (loop -> while .)
    GO              reduce using rule 18 (loop -> while .)
    LEFT            reduce using rule 18 (loop -> while .)
    RIGHT           reduce using rule 18 (loop -> while .)
    BACK            reduce using rule 18 (loop -> while .)
    ARC             reduce using rule 18 (loop -> while .)
    WHILE           reduce using rule 18 (loop -> while .)
    FOR             reduce using rule 18 (loop -> while .)
    CLOSEBRACES     reduce using rule 18 (loop -> while .)


state 56

    (19) loop -> for .

    IF              reduce using rule 19 (loop -> for .)
    PRINT           reduce using rule 19 (loop -> for .)
    READ            reduce using rule 19 (loop -> for .)
    RETURN          reduce using rule 19 (loop -> for .)
    ID              reduce using rule 19 (loop -> for .)
    REPEAT          reduce using rule 19 (loop -> for .)
    CIRCLE          reduce using rule 19 (loop -> for .)
    SQUARE          reduce using rule 19 (loop -> for .)
    TRIANGLE        reduce using rule 19 (loop -> for .)
    RECTANGLE       reduce using rule 19 (loop -> for .)
    HIDE_STAR       reduce using rule 19 (loop -> for .)
    SHOW_STAR       reduce using rule 19 (loop -> for .)
    COLOR_STAR      reduce using rule 19 (loop -> for .)
    SIZE_STAR       reduce using rule 19 (loop -> for .)
    SETXY           reduce using rule 19 (loop -> for .)
    HAND_DOWN       reduce using rule 19 (loop -> for .)
    HAND_UP         reduce using rule 19 (loop -> for .)
    GO              reduce using rule 19 (loop -> for .)
    LEFT            reduce using rule 19 (loop -> for .)
    RIGHT           reduce using rule 19 (loop -> for .)
    BACK            reduce using rule 19 (loop -> for .)
    ARC             reduce using rule 19 (loop -> for .)
    WHILE           reduce using rule 19 (loop -> for .)
    FOR             reduce using rule 19 (loop -> for .)
    CLOSEBRACES     reduce using rule 19 (loop -> for .)


state 57

    (62) read -> READ . OPENPAREN id read1 CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 131


state 58

    (110) graphstmt -> graphfig .

    IF              reduce using rule 110 (graphstmt -> graphfig .)
    PRINT           reduce using rule 110 (graphstmt -> graphfig .)
    READ            reduce using rule 110 (graphstmt -> graphfig .)
    RETURN          reduce using rule 110 (graphstmt -> graphfig .)
    ID              reduce using rule 110 (graphstmt -> graphfig .)
    REPEAT          reduce using rule 110 (graphstmt -> graphfig .)
    CIRCLE          reduce using rule 110 (graphstmt -> graphfig .)
    SQUARE          reduce using rule 110 (graphstmt -> graphfig .)
    TRIANGLE        reduce using rule 110 (graphstmt -> graphfig .)
    RECTANGLE       reduce using rule 110 (graphstmt -> graphfig .)
    HIDE_STAR       reduce using rule 110 (graphstmt -> graphfig .)
    SHOW_STAR       reduce using rule 110 (graphstmt -> graphfig .)
    COLOR_STAR      reduce using rule 110 (graphstmt -> graphfig .)
    SIZE_STAR       reduce using rule 110 (graphstmt -> graphfig .)
    SETXY           reduce using rule 110 (graphstmt -> graphfig .)
    HAND_DOWN       reduce using rule 110 (graphstmt -> graphfig .)
    HAND_UP         reduce using rule 110 (graphstmt -> graphfig .)
    GO              reduce using rule 110 (graphstmt -> graphfig .)
    LEFT            reduce using rule 110 (graphstmt -> graphfig .)
    RIGHT           reduce using rule 110 (graphstmt -> graphfig .)
    BACK            reduce using rule 110 (graphstmt -> graphfig .)
    ARC             reduce using rule 110 (graphstmt -> graphfig .)
    WHILE           reduce using rule 110 (graphstmt -> graphfig .)
    FOR             reduce using rule 110 (graphstmt -> graphfig .)
    CLOSEBRACES     reduce using rule 110 (graphstmt -> graphfig .)


state 59

    (111) graphstmt -> graphview .

    IF              reduce using rule 111 (graphstmt -> graphview .)
    PRINT           reduce using rule 111 (graphstmt -> graphview .)
    READ            reduce using rule 111 (graphstmt -> graphview .)
    RETURN          reduce using rule 111 (graphstmt -> graphview .)
    ID              reduce using rule 111 (graphstmt -> graphview .)
    REPEAT          reduce using rule 111 (graphstmt -> graphview .)
    CIRCLE          reduce using rule 111 (graphstmt -> graphview .)
    SQUARE          reduce using rule 111 (graphstmt -> graphview .)
    TRIANGLE        reduce using rule 111 (graphstmt -> graphview .)
    RECTANGLE       reduce using rule 111 (graphstmt -> graphview .)
    HIDE_STAR       reduce using rule 111 (graphstmt -> graphview .)
    SHOW_STAR       reduce using rule 111 (graphstmt -> graphview .)
    COLOR_STAR      reduce using rule 111 (graphstmt -> graphview .)
    SIZE_STAR       reduce using rule 111 (graphstmt -> graphview .)
    SETXY           reduce using rule 111 (graphstmt -> graphview .)
    HAND_DOWN       reduce using rule 111 (graphstmt -> graphview .)
    HAND_UP         reduce using rule 111 (graphstmt -> graphview .)
    GO              reduce using rule 111 (graphstmt -> graphview .)
    LEFT            reduce using rule 111 (graphstmt -> graphview .)
    RIGHT           reduce using rule 111 (graphstmt -> graphview .)
    BACK            reduce using rule 111 (graphstmt -> graphview .)
    ARC             reduce using rule 111 (graphstmt -> graphview .)
    WHILE           reduce using rule 111 (graphstmt -> graphview .)
    FOR             reduce using rule 111 (graphstmt -> graphview .)
    CLOSEBRACES     reduce using rule 111 (graphstmt -> graphview .)


state 60

    (112) graphstmt -> graphmove .

    IF              reduce using rule 112 (graphstmt -> graphmove .)
    PRINT           reduce using rule 112 (graphstmt -> graphmove .)
    READ            reduce using rule 112 (graphstmt -> graphmove .)
    RETURN          reduce using rule 112 (graphstmt -> graphmove .)
    ID              reduce using rule 112 (graphstmt -> graphmove .)
    REPEAT          reduce using rule 112 (graphstmt -> graphmove .)
    CIRCLE          reduce using rule 112 (graphstmt -> graphmove .)
    SQUARE          reduce using rule 112 (graphstmt -> graphmove .)
    TRIANGLE        reduce using rule 112 (graphstmt -> graphmove .)
    RECTANGLE       reduce using rule 112 (graphstmt -> graphmove .)
    HIDE_STAR       reduce using rule 112 (graphstmt -> graphmove .)
    SHOW_STAR       reduce using rule 112 (graphstmt -> graphmove .)
    COLOR_STAR      reduce using rule 112 (graphstmt -> graphmove .)
    SIZE_STAR       reduce using rule 112 (graphstmt -> graphmove .)
    SETXY           reduce using rule 112 (graphstmt -> graphmove .)
    HAND_DOWN       reduce using rule 112 (graphstmt -> graphmove .)
    HAND_UP         reduce using rule 112 (graphstmt -> graphmove .)
    GO              reduce using rule 112 (graphstmt -> graphmove .)
    LEFT            reduce using rule 112 (graphstmt -> graphmove .)
    RIGHT           reduce using rule 112 (graphstmt -> graphmove .)
    BACK            reduce using rule 112 (graphstmt -> graphmove .)
    ARC             reduce using rule 112 (graphstmt -> graphmove .)
    WHILE           reduce using rule 112 (graphstmt -> graphmove .)
    FOR             reduce using rule 112 (graphstmt -> graphmove .)
    CLOSEBRACES     reduce using rule 112 (graphstmt -> graphmove .)


state 61

    (129) graphr -> repeat . rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (132) rep -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 133

    rep                            shift and go to state 132

state 62

    (79) return -> RETURN . return1 SEMICOLON
    (80) return1 -> . vcte
    (81) return1 -> . exp
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (142) exp -> . term exp1
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (148) term -> . factor term1
    (153) factor -> . vcte
    (154) factor -> . factor1
    (155) factor1 -> . factor2 vcte
    (156) factor1 -> . openP expression closeP
    (157) factor2 -> . ADDITION
    (158) factor2 -> . SUBSTRACTION
    (146) openP -> . OPENPAREN

    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63
    ADDITION        shift and go to state 117
    SUBSTRACTION    shift and go to state 118
    OPENPAREN       shift and go to state 116

    return1                        shift and go to state 134
    vcte                           shift and go to state 135
    exp                            shift and go to state 136
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    id                             shift and go to state 109
    funCall                        shift and go to state 110
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor1                        shift and go to state 105
    factor2                        shift and go to state 111
    openP                          shift and go to state 112

state 63

    (67) id -> ID .

    OPENPAREN       reduce using rule 67 (id -> ID .)
    OPENBRACKET     reduce using rule 67 (id -> ID .)
    EQUALS          reduce using rule 67 (id -> ID .)
    MULTIPLICATION  reduce using rule 67 (id -> ID .)
    DIVISION        reduce using rule 67 (id -> ID .)
    ADDITION        reduce using rule 67 (id -> ID .)
    SUBSTRACTION    reduce using rule 67 (id -> ID .)
    SEMICOLON       reduce using rule 67 (id -> ID .)
    GREATER         reduce using rule 67 (id -> ID .)
    LESS            reduce using rule 67 (id -> ID .)
    NOTEQUAL        reduce using rule 67 (id -> ID .)
    ISEQUAL         reduce using rule 67 (id -> ID .)
    CLOSEPAREN      reduce using rule 67 (id -> ID .)
    COMMA           reduce using rule 67 (id -> ID .)
    CLOSEBRACKET    reduce using rule 67 (id -> ID .)


state 64

    (105) while -> while1 . body
    (96) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 138

    body                           shift and go to state 137

state 65

    (100) for -> for1 . body
    (96) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 138

    body                           shift and go to state 139

state 66

    (113) graphfig -> graphfig1 . SEMICOLON

    SEMICOLON       shift and go to state 140


state 67

    (114) graphfig -> graphfig2 . SEMICOLON

    SEMICOLON       shift and go to state 141


state 68

    (134) graphview -> graphview0 . SEMICOLON

    SEMICOLON       shift and go to state 142


state 69

    (135) graphview -> graphview1 . SEMICOLON

    SEMICOLON       shift and go to state 143


state 70

    (136) graphview -> graphview2 . SEMICOLON

    SEMICOLON       shift and go to state 144


state 71

    (119) graphmove -> graphmove0 . SEMICOLON

    SEMICOLON       shift and go to state 145


state 72

    (120) graphmove -> graphmove1 . SEMICOLON

    SEMICOLON       shift and go to state 146


state 73

    (121) graphmove -> graphmove2 . SEMICOLON

    SEMICOLON       shift and go to state 147


state 74

    (133) repeat -> REPEAT .

    OPENPAREN       reduce using rule 133 (repeat -> REPEAT .)


state 75

    (106) while1 -> while_w . OPENPAREN expression CLOSEPAREN

    OPENPAREN       shift and go to state 148


state 76

    (101) for1 -> forInit . OPENPAREN ID for2

    OPENPAREN       shift and go to state 149


state 77

    (115) graphfig1 -> CIRCLE . unaExp
    (109) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 151

    unaExp                         shift and go to state 150

state 78

    (116) graphfig1 -> SQUARE . unaExp
    (109) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 151

    unaExp                         shift and go to state 152

state 79

    (117) graphfig2 -> TRIANGLE . dosExp
    (108) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 154

    dosExp                         shift and go to state 153

state 80

    (118) graphfig2 -> RECTANGLE . dosExp
    (108) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 154

    dosExp                         shift and go to state 155

state 81

    (137) graphview0 -> HIDE_STAR .

    SEMICOLON       reduce using rule 137 (graphview0 -> HIDE_STAR .)


state 82

    (138) graphview0 -> SHOW_STAR .

    SEMICOLON       reduce using rule 138 (graphview0 -> SHOW_STAR .)


state 83

    (139) graphview1 -> COLOR_STAR . unaExp
    (109) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 151

    unaExp                         shift and go to state 156

state 84

    (140) graphview1 -> SIZE_STAR . unaExp
    (109) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 151

    unaExp                         shift and go to state 157

state 85

    (141) graphview2 -> SETXY . dosExp
    (108) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 154

    dosExp                         shift and go to state 158

state 86

    (122) graphmove0 -> HAND_DOWN .

    SEMICOLON       reduce using rule 122 (graphmove0 -> HAND_DOWN .)


state 87

    (123) graphmove0 -> HAND_UP .

    SEMICOLON       reduce using rule 123 (graphmove0 -> HAND_UP .)


state 88

    (124) graphmove1 -> GO . unaExp
    (109) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 151

    unaExp                         shift and go to state 159

state 89

    (125) graphmove1 -> LEFT . unaExp
    (109) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 151

    unaExp                         shift and go to state 160

state 90

    (126) graphmove1 -> RIGHT . unaExp
    (109) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 151

    unaExp                         shift and go to state 161

state 91

    (127) graphmove1 -> BACK . unaExp
    (109) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 151

    unaExp                         shift and go to state 162

state 92

    (128) graphmove2 -> ARC . dosExp
    (108) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 154

    dosExp                         shift and go to state 163

state 93

    (107) while_w -> WHILE .

    OPENPAREN       reduce using rule 107 (while_w -> WHILE .)


state 94

    (104) forInit -> FOR .

    OPENPAREN       reduce using rule 104 (forInit -> FOR .)


state 95

    (47) function -> FUN functionI function2 inicia_fun . declara_vars function4 termina_fun
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (12) vars -> . type ID vars1 equals exp SEMICOLON
    (13) vars -> . type ID vars1 SEMICOLON
    (159) empty -> .
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . CHAR

    IF              reduce using rule 159 (empty -> .)
    PRINT           reduce using rule 159 (empty -> .)
    READ            reduce using rule 159 (empty -> .)
    RETURN          reduce using rule 159 (empty -> .)
    ID              reduce using rule 159 (empty -> .)
    REPEAT          reduce using rule 159 (empty -> .)
    CIRCLE          reduce using rule 159 (empty -> .)
    SQUARE          reduce using rule 159 (empty -> .)
    TRIANGLE        reduce using rule 159 (empty -> .)
    RECTANGLE       reduce using rule 159 (empty -> .)
    HIDE_STAR       reduce using rule 159 (empty -> .)
    SHOW_STAR       reduce using rule 159 (empty -> .)
    COLOR_STAR      reduce using rule 159 (empty -> .)
    SIZE_STAR       reduce using rule 159 (empty -> .)
    SETXY           reduce using rule 159 (empty -> .)
    HAND_DOWN       reduce using rule 159 (empty -> .)
    HAND_UP         reduce using rule 159 (empty -> .)
    GO              reduce using rule 159 (empty -> .)
    LEFT            reduce using rule 159 (empty -> .)
    RIGHT           reduce using rule 159 (empty -> .)
    BACK            reduce using rule 159 (empty -> .)
    ARC             reduce using rule 159 (empty -> .)
    WHILE           reduce using rule 159 (empty -> .)
    FOR             reduce using rule 159 (empty -> .)
    CLOSEBRACES     reduce using rule 159 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    declara_vars                   shift and go to state 164
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 96

    (48) inicia_fun -> OPENBRACES .

    INT             reduce using rule 48 (inicia_fun -> OPENBRACES .)
    FLOAT           reduce using rule 48 (inicia_fun -> OPENBRACES .)
    CHAR            reduce using rule 48 (inicia_fun -> OPENBRACES .)
    IF              reduce using rule 48 (inicia_fun -> OPENBRACES .)
    PRINT           reduce using rule 48 (inicia_fun -> OPENBRACES .)
    READ            reduce using rule 48 (inicia_fun -> OPENBRACES .)
    RETURN          reduce using rule 48 (inicia_fun -> OPENBRACES .)
    ID              reduce using rule 48 (inicia_fun -> OPENBRACES .)
    REPEAT          reduce using rule 48 (inicia_fun -> OPENBRACES .)
    CIRCLE          reduce using rule 48 (inicia_fun -> OPENBRACES .)
    SQUARE          reduce using rule 48 (inicia_fun -> OPENBRACES .)
    TRIANGLE        reduce using rule 48 (inicia_fun -> OPENBRACES .)
    RECTANGLE       reduce using rule 48 (inicia_fun -> OPENBRACES .)
    HIDE_STAR       reduce using rule 48 (inicia_fun -> OPENBRACES .)
    SHOW_STAR       reduce using rule 48 (inicia_fun -> OPENBRACES .)
    COLOR_STAR      reduce using rule 48 (inicia_fun -> OPENBRACES .)
    SIZE_STAR       reduce using rule 48 (inicia_fun -> OPENBRACES .)
    SETXY           reduce using rule 48 (inicia_fun -> OPENBRACES .)
    HAND_DOWN       reduce using rule 48 (inicia_fun -> OPENBRACES .)
    HAND_UP         reduce using rule 48 (inicia_fun -> OPENBRACES .)
    GO              reduce using rule 48 (inicia_fun -> OPENBRACES .)
    LEFT            reduce using rule 48 (inicia_fun -> OPENBRACES .)
    RIGHT           reduce using rule 48 (inicia_fun -> OPENBRACES .)
    BACK            reduce using rule 48 (inicia_fun -> OPENBRACES .)
    ARC             reduce using rule 48 (inicia_fun -> OPENBRACES .)
    WHILE           reduce using rule 48 (inicia_fun -> OPENBRACES .)
    FOR             reduce using rule 48 (inicia_fun -> OPENBRACES .)
    CLOSEBRACES     reduce using rule 48 (inicia_fun -> OPENBRACES .)


state 97

    (50) function2 -> OPENPAREN function3 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 165


state 98

    (51) function3 -> funParam . function5
    (55) function5 -> . COMMA funParam function5
    (56) function5 -> . empty
    (159) empty -> .

    COMMA           shift and go to state 167
    CLOSEPAREN      reduce using rule 159 (empty -> .)

    function5                      shift and go to state 166
    empty                          shift and go to state 168

state 99

    (52) function3 -> empty .

    CLOSEPAREN      reduce using rule 52 (function3 -> empty .)


state 100

    (57) funParam -> type . ID

    ID              shift and go to state 169


state 101

    (12) vars -> type ID vars1 equals exp . SEMICOLON

    SEMICOLON       shift and go to state 170


state 102

    (142) exp -> term . exp1
    (143) exp1 -> . ADDITION exp
    (144) exp1 -> . SUBSTRACTION exp
    (145) exp1 -> . empty
    (159) empty -> .

    ADDITION        shift and go to state 172
    SUBSTRACTION    shift and go to state 173
    SEMICOLON       reduce using rule 159 (empty -> .)
    GREATER         reduce using rule 159 (empty -> .)
    LESS            reduce using rule 159 (empty -> .)
    NOTEQUAL        reduce using rule 159 (empty -> .)
    ISEQUAL         reduce using rule 159 (empty -> .)
    CLOSEPAREN      reduce using rule 159 (empty -> .)
    COMMA           reduce using rule 159 (empty -> .)
    CLOSEBRACKET    reduce using rule 159 (empty -> .)

    exp1                           shift and go to state 171
    empty                          shift and go to state 174

state 103

    (148) term -> factor . term1
    (149) term1 -> . MULTIPLICATION term
    (150) term1 -> . DIVISION term
    (151) term1 -> . empty
    (159) empty -> .

    MULTIPLICATION  shift and go to state 176
    DIVISION        shift and go to state 177
    ADDITION        reduce using rule 159 (empty -> .)
    SUBSTRACTION    reduce using rule 159 (empty -> .)
    SEMICOLON       reduce using rule 159 (empty -> .)
    GREATER         reduce using rule 159 (empty -> .)
    LESS            reduce using rule 159 (empty -> .)
    NOTEQUAL        reduce using rule 159 (empty -> .)
    ISEQUAL         reduce using rule 159 (empty -> .)
    CLOSEPAREN      reduce using rule 159 (empty -> .)
    COMMA           reduce using rule 159 (empty -> .)
    CLOSEBRACKET    reduce using rule 159 (empty -> .)

    term1                          shift and go to state 175
    empty                          shift and go to state 178

state 104

    (153) factor -> vcte .

    MULTIPLICATION  reduce using rule 153 (factor -> vcte .)
    DIVISION        reduce using rule 153 (factor -> vcte .)
    ADDITION        reduce using rule 153 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 153 (factor -> vcte .)
    SEMICOLON       reduce using rule 153 (factor -> vcte .)
    GREATER         reduce using rule 153 (factor -> vcte .)
    LESS            reduce using rule 153 (factor -> vcte .)
    NOTEQUAL        reduce using rule 153 (factor -> vcte .)
    ISEQUAL         reduce using rule 153 (factor -> vcte .)
    CLOSEPAREN      reduce using rule 153 (factor -> vcte .)
    COMMA           reduce using rule 153 (factor -> vcte .)
    CLOSEBRACKET    reduce using rule 153 (factor -> vcte .)


state 105

    (154) factor -> factor1 .

    MULTIPLICATION  reduce using rule 154 (factor -> factor1 .)
    DIVISION        reduce using rule 154 (factor -> factor1 .)
    ADDITION        reduce using rule 154 (factor -> factor1 .)
    SUBSTRACTION    reduce using rule 154 (factor -> factor1 .)
    SEMICOLON       reduce using rule 154 (factor -> factor1 .)
    GREATER         reduce using rule 154 (factor -> factor1 .)
    LESS            reduce using rule 154 (factor -> factor1 .)
    NOTEQUAL        reduce using rule 154 (factor -> factor1 .)
    ISEQUAL         reduce using rule 154 (factor -> factor1 .)
    CLOSEPAREN      reduce using rule 154 (factor -> factor1 .)
    COMMA           reduce using rule 154 (factor -> factor1 .)
    CLOSEBRACKET    reduce using rule 154 (factor -> factor1 .)


state 106

    (36) vcte -> cte_int .

    MULTIPLICATION  reduce using rule 36 (vcte -> cte_int .)
    DIVISION        reduce using rule 36 (vcte -> cte_int .)
    ADDITION        reduce using rule 36 (vcte -> cte_int .)
    SUBSTRACTION    reduce using rule 36 (vcte -> cte_int .)
    SEMICOLON       reduce using rule 36 (vcte -> cte_int .)
    GREATER         reduce using rule 36 (vcte -> cte_int .)
    LESS            reduce using rule 36 (vcte -> cte_int .)
    NOTEQUAL        reduce using rule 36 (vcte -> cte_int .)
    ISEQUAL         reduce using rule 36 (vcte -> cte_int .)
    CLOSEPAREN      reduce using rule 36 (vcte -> cte_int .)
    COMMA           reduce using rule 36 (vcte -> cte_int .)
    CLOSEBRACKET    reduce using rule 36 (vcte -> cte_int .)


state 107

    (37) vcte -> cte_float .

    MULTIPLICATION  reduce using rule 37 (vcte -> cte_float .)
    DIVISION        reduce using rule 37 (vcte -> cte_float .)
    ADDITION        reduce using rule 37 (vcte -> cte_float .)
    SUBSTRACTION    reduce using rule 37 (vcte -> cte_float .)
    SEMICOLON       reduce using rule 37 (vcte -> cte_float .)
    GREATER         reduce using rule 37 (vcte -> cte_float .)
    LESS            reduce using rule 37 (vcte -> cte_float .)
    NOTEQUAL        reduce using rule 37 (vcte -> cte_float .)
    ISEQUAL         reduce using rule 37 (vcte -> cte_float .)
    CLOSEPAREN      reduce using rule 37 (vcte -> cte_float .)
    COMMA           reduce using rule 37 (vcte -> cte_float .)
    CLOSEBRACKET    reduce using rule 37 (vcte -> cte_float .)


state 108

    (38) vcte -> cte_char .

    MULTIPLICATION  reduce using rule 38 (vcte -> cte_char .)
    DIVISION        reduce using rule 38 (vcte -> cte_char .)
    ADDITION        reduce using rule 38 (vcte -> cte_char .)
    SUBSTRACTION    reduce using rule 38 (vcte -> cte_char .)
    SEMICOLON       reduce using rule 38 (vcte -> cte_char .)
    GREATER         reduce using rule 38 (vcte -> cte_char .)
    LESS            reduce using rule 38 (vcte -> cte_char .)
    NOTEQUAL        reduce using rule 38 (vcte -> cte_char .)
    ISEQUAL         reduce using rule 38 (vcte -> cte_char .)
    CLOSEPAREN      reduce using rule 38 (vcte -> cte_char .)
    COMMA           reduce using rule 38 (vcte -> cte_char .)
    CLOSEBRACKET    reduce using rule 38 (vcte -> cte_char .)


state 109

    (39) vcte -> id . vcte1
    (68) funCall -> id . OPENPAREN funCall2 CLOSEPAREN
    (41) vcte1 -> . OPENBRACKET exp CLOSEBRACKET vcte3
    (42) vcte1 -> . empty
    (159) empty -> .

    OPENPAREN       shift and go to state 124
    OPENBRACKET     shift and go to state 180
    MULTIPLICATION  reduce using rule 159 (empty -> .)
    DIVISION        reduce using rule 159 (empty -> .)
    ADDITION        reduce using rule 159 (empty -> .)
    SUBSTRACTION    reduce using rule 159 (empty -> .)
    SEMICOLON       reduce using rule 159 (empty -> .)
    GREATER         reduce using rule 159 (empty -> .)
    LESS            reduce using rule 159 (empty -> .)
    NOTEQUAL        reduce using rule 159 (empty -> .)
    ISEQUAL         reduce using rule 159 (empty -> .)
    CLOSEPAREN      reduce using rule 159 (empty -> .)
    COMMA           reduce using rule 159 (empty -> .)
    CLOSEBRACKET    reduce using rule 159 (empty -> .)

    vcte1                          shift and go to state 179
    empty                          shift and go to state 181

state 110

    (40) vcte -> funCall .

    MULTIPLICATION  reduce using rule 40 (vcte -> funCall .)
    DIVISION        reduce using rule 40 (vcte -> funCall .)
    ADDITION        reduce using rule 40 (vcte -> funCall .)
    SUBSTRACTION    reduce using rule 40 (vcte -> funCall .)
    SEMICOLON       reduce using rule 40 (vcte -> funCall .)
    GREATER         reduce using rule 40 (vcte -> funCall .)
    LESS            reduce using rule 40 (vcte -> funCall .)
    NOTEQUAL        reduce using rule 40 (vcte -> funCall .)
    ISEQUAL         reduce using rule 40 (vcte -> funCall .)
    CLOSEPAREN      reduce using rule 40 (vcte -> funCall .)
    COMMA           reduce using rule 40 (vcte -> funCall .)
    CLOSEBRACKET    reduce using rule 40 (vcte -> funCall .)


state 111

    (155) factor1 -> factor2 . vcte
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN

    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63

    vcte                           shift and go to state 182
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    id                             shift and go to state 109
    funCall                        shift and go to state 110

state 112

    (156) factor1 -> openP . expression closeP
    (82) expression -> . exp expression1
    (142) exp -> . term exp1
    (148) term -> . factor term1
    (153) factor -> . vcte
    (154) factor -> . factor1
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (155) factor1 -> . factor2 vcte
    (156) factor1 -> . openP expression closeP
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (157) factor2 -> . ADDITION
    (158) factor2 -> . SUBSTRACTION
    (146) openP -> . OPENPAREN

    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63
    ADDITION        shift and go to state 117
    SUBSTRACTION    shift and go to state 118
    OPENPAREN       shift and go to state 116

    openP                          shift and go to state 112
    expression                     shift and go to state 183
    exp                            shift and go to state 184
    term                           shift and go to state 102
    factor                         shift and go to state 103
    vcte                           shift and go to state 104
    factor1                        shift and go to state 105
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    id                             shift and go to state 109
    funCall                        shift and go to state 110
    factor2                        shift and go to state 111

state 113

    (76) cte_int -> CTEINT .

    MULTIPLICATION  reduce using rule 76 (cte_int -> CTEINT .)
    DIVISION        reduce using rule 76 (cte_int -> CTEINT .)
    ADDITION        reduce using rule 76 (cte_int -> CTEINT .)
    SUBSTRACTION    reduce using rule 76 (cte_int -> CTEINT .)
    SEMICOLON       reduce using rule 76 (cte_int -> CTEINT .)
    GREATER         reduce using rule 76 (cte_int -> CTEINT .)
    LESS            reduce using rule 76 (cte_int -> CTEINT .)
    NOTEQUAL        reduce using rule 76 (cte_int -> CTEINT .)
    ISEQUAL         reduce using rule 76 (cte_int -> CTEINT .)
    CLOSEPAREN      reduce using rule 76 (cte_int -> CTEINT .)
    COMMA           reduce using rule 76 (cte_int -> CTEINT .)
    CLOSEBRACKET    reduce using rule 76 (cte_int -> CTEINT .)


state 114

    (77) cte_float -> CTEFLOAT .

    MULTIPLICATION  reduce using rule 77 (cte_float -> CTEFLOAT .)
    DIVISION        reduce using rule 77 (cte_float -> CTEFLOAT .)
    ADDITION        reduce using rule 77 (cte_float -> CTEFLOAT .)
    SUBSTRACTION    reduce using rule 77 (cte_float -> CTEFLOAT .)
    SEMICOLON       reduce using rule 77 (cte_float -> CTEFLOAT .)
    GREATER         reduce using rule 77 (cte_float -> CTEFLOAT .)
    LESS            reduce using rule 77 (cte_float -> CTEFLOAT .)
    NOTEQUAL        reduce using rule 77 (cte_float -> CTEFLOAT .)
    ISEQUAL         reduce using rule 77 (cte_float -> CTEFLOAT .)
    CLOSEPAREN      reduce using rule 77 (cte_float -> CTEFLOAT .)
    COMMA           reduce using rule 77 (cte_float -> CTEFLOAT .)
    CLOSEBRACKET    reduce using rule 77 (cte_float -> CTEFLOAT .)


state 115

    (78) cte_char -> CTECHAR .

    MULTIPLICATION  reduce using rule 78 (cte_char -> CTECHAR .)
    DIVISION        reduce using rule 78 (cte_char -> CTECHAR .)
    ADDITION        reduce using rule 78 (cte_char -> CTECHAR .)
    SUBSTRACTION    reduce using rule 78 (cte_char -> CTECHAR .)
    SEMICOLON       reduce using rule 78 (cte_char -> CTECHAR .)
    GREATER         reduce using rule 78 (cte_char -> CTECHAR .)
    LESS            reduce using rule 78 (cte_char -> CTECHAR .)
    NOTEQUAL        reduce using rule 78 (cte_char -> CTECHAR .)
    ISEQUAL         reduce using rule 78 (cte_char -> CTECHAR .)
    CLOSEPAREN      reduce using rule 78 (cte_char -> CTECHAR .)
    COMMA           reduce using rule 78 (cte_char -> CTECHAR .)
    CLOSEBRACKET    reduce using rule 78 (cte_char -> CTECHAR .)


state 116

    (146) openP -> OPENPAREN .

    CTEINT          reduce using rule 146 (openP -> OPENPAREN .)
    CTEFLOAT        reduce using rule 146 (openP -> OPENPAREN .)
    CTECHAR         reduce using rule 146 (openP -> OPENPAREN .)
    ID              reduce using rule 146 (openP -> OPENPAREN .)
    ADDITION        reduce using rule 146 (openP -> OPENPAREN .)
    SUBSTRACTION    reduce using rule 146 (openP -> OPENPAREN .)
    OPENPAREN       reduce using rule 146 (openP -> OPENPAREN .)


state 117

    (157) factor2 -> ADDITION .

    CTEINT          reduce using rule 157 (factor2 -> ADDITION .)
    CTEFLOAT        reduce using rule 157 (factor2 -> ADDITION .)
    CTECHAR         reduce using rule 157 (factor2 -> ADDITION .)
    ID              reduce using rule 157 (factor2 -> ADDITION .)


state 118

    (158) factor2 -> SUBSTRACTION .

    CTEINT          reduce using rule 158 (factor2 -> SUBSTRACTION .)
    CTEFLOAT        reduce using rule 158 (factor2 -> SUBSTRACTION .)
    CTECHAR         reduce using rule 158 (factor2 -> SUBSTRACTION .)
    ID              reduce using rule 158 (factor2 -> SUBSTRACTION .)


state 119

    (14) vars1 -> OPENBRACKET CTEINT CLOSEBRACKET . vars3
    (16) vars3 -> . OPENBRACKET CTEINT CLOSEBRACKET
    (17) vars3 -> . empty
    (159) empty -> .

    OPENBRACKET     shift and go to state 185
    SEMICOLON       reduce using rule 159 (empty -> .)
    EQUALS          reduce using rule 159 (empty -> .)

    vars3                          shift and go to state 186
    empty                          shift and go to state 187

state 120

    (5) star -> starI declara_vars star1 CLOSEBRACES .

    $end            reduce using rule 5 (star -> starI declara_vars star1 CLOSEBRACES .)


state 121

    (8) star1 -> stmt star1 .

    CLOSEBRACES     reduce using rule 8 (star1 -> stmt star1 .)


state 122

    (27) stmt -> funCall SEMICOLON .

    IF              reduce using rule 27 (stmt -> funCall SEMICOLON .)
    PRINT           reduce using rule 27 (stmt -> funCall SEMICOLON .)
    READ            reduce using rule 27 (stmt -> funCall SEMICOLON .)
    RETURN          reduce using rule 27 (stmt -> funCall SEMICOLON .)
    ID              reduce using rule 27 (stmt -> funCall SEMICOLON .)
    REPEAT          reduce using rule 27 (stmt -> funCall SEMICOLON .)
    CIRCLE          reduce using rule 27 (stmt -> funCall SEMICOLON .)
    SQUARE          reduce using rule 27 (stmt -> funCall SEMICOLON .)
    TRIANGLE        reduce using rule 27 (stmt -> funCall SEMICOLON .)
    RECTANGLE       reduce using rule 27 (stmt -> funCall SEMICOLON .)
    HIDE_STAR       reduce using rule 27 (stmt -> funCall SEMICOLON .)
    SHOW_STAR       reduce using rule 27 (stmt -> funCall SEMICOLON .)
    COLOR_STAR      reduce using rule 27 (stmt -> funCall SEMICOLON .)
    SIZE_STAR       reduce using rule 27 (stmt -> funCall SEMICOLON .)
    SETXY           reduce using rule 27 (stmt -> funCall SEMICOLON .)
    HAND_DOWN       reduce using rule 27 (stmt -> funCall SEMICOLON .)
    HAND_UP         reduce using rule 27 (stmt -> funCall SEMICOLON .)
    GO              reduce using rule 27 (stmt -> funCall SEMICOLON .)
    LEFT            reduce using rule 27 (stmt -> funCall SEMICOLON .)
    RIGHT           reduce using rule 27 (stmt -> funCall SEMICOLON .)
    BACK            reduce using rule 27 (stmt -> funCall SEMICOLON .)
    ARC             reduce using rule 27 (stmt -> funCall SEMICOLON .)
    WHILE           reduce using rule 27 (stmt -> funCall SEMICOLON .)
    FOR             reduce using rule 27 (stmt -> funCall SEMICOLON .)
    CLOSEBRACES     reduce using rule 27 (stmt -> funCall SEMICOLON .)


state 123

    (29) assignment -> id assignment1 . equals assignment3 SEMICOLON
    (66) equals -> . EQUALS

    EQUALS          shift and go to state 38

    equals                         shift and go to state 188

state 124

    (68) funCall -> id OPENPAREN . funCall2 CLOSEPAREN
    (72) funCall2 -> . exp funCall3
    (73) funCall2 -> . empty
    (142) exp -> . term exp1
    (159) empty -> .
    (148) term -> . factor term1
    (153) factor -> . vcte
    (154) factor -> . factor1
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (155) factor1 -> . factor2 vcte
    (156) factor1 -> . openP expression closeP
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (157) factor2 -> . ADDITION
    (158) factor2 -> . SUBSTRACTION
    (146) openP -> . OPENPAREN

    CLOSEPAREN      reduce using rule 159 (empty -> .)
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63
    ADDITION        shift and go to state 117
    SUBSTRACTION    shift and go to state 118
    OPENPAREN       shift and go to state 116

    id                             shift and go to state 109
    funCall2                       shift and go to state 189
    exp                            shift and go to state 190
    empty                          shift and go to state 191
    term                           shift and go to state 102
    factor                         shift and go to state 103
    vcte                           shift and go to state 104
    factor1                        shift and go to state 105
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    funCall                        shift and go to state 110
    factor2                        shift and go to state 111
    openP                          shift and go to state 112

state 125

    (30) assignment1 -> assignment2 .
    (31) assignment1 -> assignment2 . assignment1
    (30) assignment1 -> . assignment2
    (31) assignment1 -> . assignment2 assignment1
    (32) assignment1 -> . empty
    (33) assignment2 -> . OPENBRACKET exp CLOSEBRACKET
    (159) empty -> .

  ! reduce/reduce conflict for EQUALS resolved using rule 30 (assignment1 -> assignment2 .)
    EQUALS          reduce using rule 30 (assignment1 -> assignment2 .)
    OPENBRACKET     shift and go to state 127

  ! EQUALS          [ reduce using rule 159 (empty -> .) ]

    assignment2                    shift and go to state 125
    assignment1                    shift and go to state 192
    empty                          shift and go to state 126

state 126

    (32) assignment1 -> empty .

    EQUALS          reduce using rule 32 (assignment1 -> empty .)


state 127

    (33) assignment2 -> OPENBRACKET . exp CLOSEBRACKET
    (142) exp -> . term exp1
    (148) term -> . factor term1
    (153) factor -> . vcte
    (154) factor -> . factor1
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (155) factor1 -> . factor2 vcte
    (156) factor1 -> . openP expression closeP
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (157) factor2 -> . ADDITION
    (158) factor2 -> . SUBSTRACTION
    (146) openP -> . OPENPAREN

    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63
    ADDITION        shift and go to state 117
    SUBSTRACTION    shift and go to state 118
    OPENPAREN       shift and go to state 116

    exp                            shift and go to state 193
    term                           shift and go to state 102
    factor                         shift and go to state 103
    vcte                           shift and go to state 104
    factor1                        shift and go to state 105
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    id                             shift and go to state 109
    funCall                        shift and go to state 110
    factor2                        shift and go to state 111
    openP                          shift and go to state 112

state 128

    (89) condition -> IF head_cond . body condition1
    (96) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 138

    body                           shift and go to state 194

state 129

    (95) head_cond -> OPENPAREN . expression close_condition
    (82) expression -> . exp expression1
    (142) exp -> . term exp1
    (148) term -> . factor term1
    (153) factor -> . vcte
    (154) factor -> . factor1
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (155) factor1 -> . factor2 vcte
    (156) factor1 -> . openP expression closeP
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (157) factor2 -> . ADDITION
    (158) factor2 -> . SUBSTRACTION
    (146) openP -> . OPENPAREN

    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63
    ADDITION        shift and go to state 117
    SUBSTRACTION    shift and go to state 118
    OPENPAREN       shift and go to state 116

    expression                     shift and go to state 195
    exp                            shift and go to state 184
    term                           shift and go to state 102
    factor                         shift and go to state 103
    vcte                           shift and go to state 104
    factor1                        shift and go to state 105
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    id                             shift and go to state 109
    funCall                        shift and go to state 110
    factor2                        shift and go to state 111
    openP                          shift and go to state 112

state 130

    (61) print -> PRINT OPENPAREN . expression CLOSEPAREN SEMICOLON
    (82) expression -> . exp expression1
    (142) exp -> . term exp1
    (148) term -> . factor term1
    (153) factor -> . vcte
    (154) factor -> . factor1
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (155) factor1 -> . factor2 vcte
    (156) factor1 -> . openP expression closeP
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (157) factor2 -> . ADDITION
    (158) factor2 -> . SUBSTRACTION
    (146) openP -> . OPENPAREN

    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63
    ADDITION        shift and go to state 117
    SUBSTRACTION    shift and go to state 118
    OPENPAREN       shift and go to state 116

    expression                     shift and go to state 196
    exp                            shift and go to state 184
    term                           shift and go to state 102
    factor                         shift and go to state 103
    vcte                           shift and go to state 104
    factor1                        shift and go to state 105
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    id                             shift and go to state 109
    funCall                        shift and go to state 110
    factor2                        shift and go to state 111
    openP                          shift and go to state 112

state 131

    (62) read -> READ OPENPAREN . id read1 CLOSEPAREN SEMICOLON
    (67) id -> . ID

    ID              shift and go to state 63

    id                             shift and go to state 197

state 132

    (129) graphr -> repeat rep . OPENBRACES graphstmt graphr1 CLOSEBRACES

    OPENBRACES      shift and go to state 198


state 133

    (132) rep -> OPENPAREN . exp CLOSEPAREN
    (142) exp -> . term exp1
    (148) term -> . factor term1
    (153) factor -> . vcte
    (154) factor -> . factor1
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (155) factor1 -> . factor2 vcte
    (156) factor1 -> . openP expression closeP
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (157) factor2 -> . ADDITION
    (158) factor2 -> . SUBSTRACTION
    (146) openP -> . OPENPAREN

    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63
    ADDITION        shift and go to state 117
    SUBSTRACTION    shift and go to state 118
    OPENPAREN       shift and go to state 116

    exp                            shift and go to state 199
    term                           shift and go to state 102
    factor                         shift and go to state 103
    vcte                           shift and go to state 104
    factor1                        shift and go to state 105
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    id                             shift and go to state 109
    funCall                        shift and go to state 110
    factor2                        shift and go to state 111
    openP                          shift and go to state 112

state 134

    (79) return -> RETURN return1 . SEMICOLON

    SEMICOLON       shift and go to state 200


state 135

    (80) return1 -> vcte .
    (153) factor -> vcte .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 80 (return1 -> vcte .)
    SEMICOLON       reduce using rule 80 (return1 -> vcte .)
    MULTIPLICATION  reduce using rule 153 (factor -> vcte .)
    DIVISION        reduce using rule 153 (factor -> vcte .)
    ADDITION        reduce using rule 153 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 153 (factor -> vcte .)

  ! SEMICOLON       [ reduce using rule 153 (factor -> vcte .) ]


state 136

    (81) return1 -> exp .

    SEMICOLON       reduce using rule 81 (return1 -> exp .)


state 137

    (105) while -> while1 body .

    IF              reduce using rule 105 (while -> while1 body .)
    PRINT           reduce using rule 105 (while -> while1 body .)
    READ            reduce using rule 105 (while -> while1 body .)
    RETURN          reduce using rule 105 (while -> while1 body .)
    ID              reduce using rule 105 (while -> while1 body .)
    REPEAT          reduce using rule 105 (while -> while1 body .)
    CIRCLE          reduce using rule 105 (while -> while1 body .)
    SQUARE          reduce using rule 105 (while -> while1 body .)
    TRIANGLE        reduce using rule 105 (while -> while1 body .)
    RECTANGLE       reduce using rule 105 (while -> while1 body .)
    HIDE_STAR       reduce using rule 105 (while -> while1 body .)
    SHOW_STAR       reduce using rule 105 (while -> while1 body .)
    COLOR_STAR      reduce using rule 105 (while -> while1 body .)
    SIZE_STAR       reduce using rule 105 (while -> while1 body .)
    SETXY           reduce using rule 105 (while -> while1 body .)
    HAND_DOWN       reduce using rule 105 (while -> while1 body .)
    HAND_UP         reduce using rule 105 (while -> while1 body .)
    GO              reduce using rule 105 (while -> while1 body .)
    LEFT            reduce using rule 105 (while -> while1 body .)
    RIGHT           reduce using rule 105 (while -> while1 body .)
    BACK            reduce using rule 105 (while -> while1 body .)
    ARC             reduce using rule 105 (while -> while1 body .)
    WHILE           reduce using rule 105 (while -> while1 body .)
    FOR             reduce using rule 105 (while -> while1 body .)
    CLOSEBRACES     reduce using rule 105 (while -> while1 body .)


state 138

    (96) body -> OPENBRACES . body1 CLOSEBRACES
    (98) body1 -> . stmt body1
    (99) body1 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . graphr
    (27) stmt -> . funCall SEMICOLON
    (28) stmt -> . return
    (159) empty -> .
    (29) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (89) condition -> . IF head_cond body condition1
    (61) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for
    (62) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (110) graphstmt -> . graphfig
    (111) graphstmt -> . graphview
    (112) graphstmt -> . graphmove
    (129) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (79) return -> . RETURN return1 SEMICOLON
    (67) id -> . ID
    (105) while -> . while1 body
    (100) for -> . for1 body
    (113) graphfig -> . graphfig1 SEMICOLON
    (114) graphfig -> . graphfig2 SEMICOLON
    (134) graphview -> . graphview0 SEMICOLON
    (135) graphview -> . graphview1 SEMICOLON
    (136) graphview -> . graphview2 SEMICOLON
    (119) graphmove -> . graphmove0 SEMICOLON
    (120) graphmove -> . graphmove1 SEMICOLON
    (121) graphmove -> . graphmove2 SEMICOLON
    (133) repeat -> . REPEAT
    (106) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (101) for1 -> . forInit OPENPAREN ID for2
    (115) graphfig1 -> . CIRCLE unaExp
    (116) graphfig1 -> . SQUARE unaExp
    (117) graphfig2 -> . TRIANGLE dosExp
    (118) graphfig2 -> . RECTANGLE dosExp
    (137) graphview0 -> . HIDE_STAR
    (138) graphview0 -> . SHOW_STAR
    (139) graphview1 -> . COLOR_STAR unaExp
    (140) graphview1 -> . SIZE_STAR unaExp
    (141) graphview2 -> . SETXY dosExp
    (122) graphmove0 -> . HAND_DOWN
    (123) graphmove0 -> . HAND_UP
    (124) graphmove1 -> . GO unaExp
    (125) graphmove1 -> . LEFT unaExp
    (126) graphmove1 -> . RIGHT unaExp
    (127) graphmove1 -> . BACK unaExp
    (128) graphmove2 -> . ARC dosExp
    (107) while_w -> . WHILE
    (104) forInit -> . FOR

    CLOSEBRACES     reduce using rule 159 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    RETURN          shift and go to state 62
    ID              shift and go to state 63
    REPEAT          shift and go to state 74
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92
    WHILE           shift and go to state 93
    FOR             shift and go to state 94

    body1                          shift and go to state 201
    stmt                           shift and go to state 202
    empty                          shift and go to state 203
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    graphr                         shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    repeat                         shift and go to state 61
    while1                         shift and go to state 64
    for1                           shift and go to state 65
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73
    while_w                        shift and go to state 75
    forInit                        shift and go to state 76

state 139

    (100) for -> for1 body .

    IF              reduce using rule 100 (for -> for1 body .)
    PRINT           reduce using rule 100 (for -> for1 body .)
    READ            reduce using rule 100 (for -> for1 body .)
    RETURN          reduce using rule 100 (for -> for1 body .)
    ID              reduce using rule 100 (for -> for1 body .)
    REPEAT          reduce using rule 100 (for -> for1 body .)
    CIRCLE          reduce using rule 100 (for -> for1 body .)
    SQUARE          reduce using rule 100 (for -> for1 body .)
    TRIANGLE        reduce using rule 100 (for -> for1 body .)
    RECTANGLE       reduce using rule 100 (for -> for1 body .)
    HIDE_STAR       reduce using rule 100 (for -> for1 body .)
    SHOW_STAR       reduce using rule 100 (for -> for1 body .)
    COLOR_STAR      reduce using rule 100 (for -> for1 body .)
    SIZE_STAR       reduce using rule 100 (for -> for1 body .)
    SETXY           reduce using rule 100 (for -> for1 body .)
    HAND_DOWN       reduce using rule 100 (for -> for1 body .)
    HAND_UP         reduce using rule 100 (for -> for1 body .)
    GO              reduce using rule 100 (for -> for1 body .)
    LEFT            reduce using rule 100 (for -> for1 body .)
    RIGHT           reduce using rule 100 (for -> for1 body .)
    BACK            reduce using rule 100 (for -> for1 body .)
    ARC             reduce using rule 100 (for -> for1 body .)
    WHILE           reduce using rule 100 (for -> for1 body .)
    FOR             reduce using rule 100 (for -> for1 body .)
    CLOSEBRACES     reduce using rule 100 (for -> for1 body .)


state 140

    (113) graphfig -> graphfig1 SEMICOLON .

    IF              reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)
    PRINT           reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)
    READ            reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)
    RETURN          reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)
    ID              reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)
    REPEAT          reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)
    CIRCLE          reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)
    SQUARE          reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)
    TRIANGLE        reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)
    RECTANGLE       reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)
    HIDE_STAR       reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)
    SHOW_STAR       reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)
    COLOR_STAR      reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)
    SIZE_STAR       reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)
    SETXY           reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)
    HAND_DOWN       reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)
    HAND_UP         reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)
    GO              reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)
    LEFT            reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)
    RIGHT           reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)
    BACK            reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)
    ARC             reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)
    WHILE           reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)
    FOR             reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 113 (graphfig -> graphfig1 SEMICOLON .)


state 141

    (114) graphfig -> graphfig2 SEMICOLON .

    IF              reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)
    PRINT           reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)
    READ            reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)
    RETURN          reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)
    ID              reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)
    REPEAT          reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)
    CIRCLE          reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)
    SQUARE          reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)
    TRIANGLE        reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)
    RECTANGLE       reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)
    HIDE_STAR       reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)
    SHOW_STAR       reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)
    COLOR_STAR      reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)
    SIZE_STAR       reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)
    SETXY           reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)
    HAND_DOWN       reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)
    HAND_UP         reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)
    GO              reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)
    LEFT            reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)
    RIGHT           reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)
    BACK            reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)
    ARC             reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)
    WHILE           reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)
    FOR             reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 114 (graphfig -> graphfig2 SEMICOLON .)


state 142

    (134) graphview -> graphview0 SEMICOLON .

    IF              reduce using rule 134 (graphview -> graphview0 SEMICOLON .)
    PRINT           reduce using rule 134 (graphview -> graphview0 SEMICOLON .)
    READ            reduce using rule 134 (graphview -> graphview0 SEMICOLON .)
    RETURN          reduce using rule 134 (graphview -> graphview0 SEMICOLON .)
    ID              reduce using rule 134 (graphview -> graphview0 SEMICOLON .)
    REPEAT          reduce using rule 134 (graphview -> graphview0 SEMICOLON .)
    CIRCLE          reduce using rule 134 (graphview -> graphview0 SEMICOLON .)
    SQUARE          reduce using rule 134 (graphview -> graphview0 SEMICOLON .)
    TRIANGLE        reduce using rule 134 (graphview -> graphview0 SEMICOLON .)
    RECTANGLE       reduce using rule 134 (graphview -> graphview0 SEMICOLON .)
    HIDE_STAR       reduce using rule 134 (graphview -> graphview0 SEMICOLON .)
    SHOW_STAR       reduce using rule 134 (graphview -> graphview0 SEMICOLON .)
    COLOR_STAR      reduce using rule 134 (graphview -> graphview0 SEMICOLON .)
    SIZE_STAR       reduce using rule 134 (graphview -> graphview0 SEMICOLON .)
    SETXY           reduce using rule 134 (graphview -> graphview0 SEMICOLON .)
    HAND_DOWN       reduce using rule 134 (graphview -> graphview0 SEMICOLON .)
    HAND_UP         reduce using rule 134 (graphview -> graphview0 SEMICOLON .)
    GO              reduce using rule 134 (graphview -> graphview0 SEMICOLON .)
    LEFT            reduce using rule 134 (graphview -> graphview0 SEMICOLON .)
    RIGHT           reduce using rule 134 (graphview -> graphview0 SEMICOLON .)
    BACK            reduce using rule 134 (graphview -> graphview0 SEMICOLON .)
    ARC             reduce using rule 134 (graphview -> graphview0 SEMICOLON .)
    WHILE           reduce using rule 134 (graphview -> graphview0 SEMICOLON .)
    FOR             reduce using rule 134 (graphview -> graphview0 SEMICOLON .)
    CLOSEBRACES     reduce using rule 134 (graphview -> graphview0 SEMICOLON .)


state 143

    (135) graphview -> graphview1 SEMICOLON .

    IF              reduce using rule 135 (graphview -> graphview1 SEMICOLON .)
    PRINT           reduce using rule 135 (graphview -> graphview1 SEMICOLON .)
    READ            reduce using rule 135 (graphview -> graphview1 SEMICOLON .)
    RETURN          reduce using rule 135 (graphview -> graphview1 SEMICOLON .)
    ID              reduce using rule 135 (graphview -> graphview1 SEMICOLON .)
    REPEAT          reduce using rule 135 (graphview -> graphview1 SEMICOLON .)
    CIRCLE          reduce using rule 135 (graphview -> graphview1 SEMICOLON .)
    SQUARE          reduce using rule 135 (graphview -> graphview1 SEMICOLON .)
    TRIANGLE        reduce using rule 135 (graphview -> graphview1 SEMICOLON .)
    RECTANGLE       reduce using rule 135 (graphview -> graphview1 SEMICOLON .)
    HIDE_STAR       reduce using rule 135 (graphview -> graphview1 SEMICOLON .)
    SHOW_STAR       reduce using rule 135 (graphview -> graphview1 SEMICOLON .)
    COLOR_STAR      reduce using rule 135 (graphview -> graphview1 SEMICOLON .)
    SIZE_STAR       reduce using rule 135 (graphview -> graphview1 SEMICOLON .)
    SETXY           reduce using rule 135 (graphview -> graphview1 SEMICOLON .)
    HAND_DOWN       reduce using rule 135 (graphview -> graphview1 SEMICOLON .)
    HAND_UP         reduce using rule 135 (graphview -> graphview1 SEMICOLON .)
    GO              reduce using rule 135 (graphview -> graphview1 SEMICOLON .)
    LEFT            reduce using rule 135 (graphview -> graphview1 SEMICOLON .)
    RIGHT           reduce using rule 135 (graphview -> graphview1 SEMICOLON .)
    BACK            reduce using rule 135 (graphview -> graphview1 SEMICOLON .)
    ARC             reduce using rule 135 (graphview -> graphview1 SEMICOLON .)
    WHILE           reduce using rule 135 (graphview -> graphview1 SEMICOLON .)
    FOR             reduce using rule 135 (graphview -> graphview1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 135 (graphview -> graphview1 SEMICOLON .)


state 144

    (136) graphview -> graphview2 SEMICOLON .

    IF              reduce using rule 136 (graphview -> graphview2 SEMICOLON .)
    PRINT           reduce using rule 136 (graphview -> graphview2 SEMICOLON .)
    READ            reduce using rule 136 (graphview -> graphview2 SEMICOLON .)
    RETURN          reduce using rule 136 (graphview -> graphview2 SEMICOLON .)
    ID              reduce using rule 136 (graphview -> graphview2 SEMICOLON .)
    REPEAT          reduce using rule 136 (graphview -> graphview2 SEMICOLON .)
    CIRCLE          reduce using rule 136 (graphview -> graphview2 SEMICOLON .)
    SQUARE          reduce using rule 136 (graphview -> graphview2 SEMICOLON .)
    TRIANGLE        reduce using rule 136 (graphview -> graphview2 SEMICOLON .)
    RECTANGLE       reduce using rule 136 (graphview -> graphview2 SEMICOLON .)
    HIDE_STAR       reduce using rule 136 (graphview -> graphview2 SEMICOLON .)
    SHOW_STAR       reduce using rule 136 (graphview -> graphview2 SEMICOLON .)
    COLOR_STAR      reduce using rule 136 (graphview -> graphview2 SEMICOLON .)
    SIZE_STAR       reduce using rule 136 (graphview -> graphview2 SEMICOLON .)
    SETXY           reduce using rule 136 (graphview -> graphview2 SEMICOLON .)
    HAND_DOWN       reduce using rule 136 (graphview -> graphview2 SEMICOLON .)
    HAND_UP         reduce using rule 136 (graphview -> graphview2 SEMICOLON .)
    GO              reduce using rule 136 (graphview -> graphview2 SEMICOLON .)
    LEFT            reduce using rule 136 (graphview -> graphview2 SEMICOLON .)
    RIGHT           reduce using rule 136 (graphview -> graphview2 SEMICOLON .)
    BACK            reduce using rule 136 (graphview -> graphview2 SEMICOLON .)
    ARC             reduce using rule 136 (graphview -> graphview2 SEMICOLON .)
    WHILE           reduce using rule 136 (graphview -> graphview2 SEMICOLON .)
    FOR             reduce using rule 136 (graphview -> graphview2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 136 (graphview -> graphview2 SEMICOLON .)


state 145

    (119) graphmove -> graphmove0 SEMICOLON .

    IF              reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)
    PRINT           reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)
    READ            reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)
    RETURN          reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)
    ID              reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)
    REPEAT          reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)
    CIRCLE          reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)
    SQUARE          reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)
    TRIANGLE        reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)
    RECTANGLE       reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)
    HIDE_STAR       reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)
    SHOW_STAR       reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)
    COLOR_STAR      reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)
    SIZE_STAR       reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)
    SETXY           reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)
    HAND_DOWN       reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)
    HAND_UP         reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)
    GO              reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)
    LEFT            reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)
    RIGHT           reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)
    BACK            reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)
    ARC             reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)
    WHILE           reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)
    FOR             reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)
    CLOSEBRACES     reduce using rule 119 (graphmove -> graphmove0 SEMICOLON .)


state 146

    (120) graphmove -> graphmove1 SEMICOLON .

    IF              reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)
    PRINT           reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)
    READ            reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)
    RETURN          reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)
    ID              reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)
    REPEAT          reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)
    CIRCLE          reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)
    SQUARE          reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)
    TRIANGLE        reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)
    RECTANGLE       reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)
    HIDE_STAR       reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)
    SHOW_STAR       reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)
    COLOR_STAR      reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)
    SIZE_STAR       reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)
    SETXY           reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)
    HAND_DOWN       reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)
    HAND_UP         reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)
    GO              reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)
    LEFT            reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)
    RIGHT           reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)
    BACK            reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)
    ARC             reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)
    WHILE           reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)
    FOR             reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 120 (graphmove -> graphmove1 SEMICOLON .)


state 147

    (121) graphmove -> graphmove2 SEMICOLON .

    IF              reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)
    PRINT           reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)
    READ            reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)
    RETURN          reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)
    ID              reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)
    REPEAT          reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)
    CIRCLE          reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)
    SQUARE          reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)
    TRIANGLE        reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)
    RECTANGLE       reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)
    HIDE_STAR       reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)
    SHOW_STAR       reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)
    COLOR_STAR      reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)
    SIZE_STAR       reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)
    SETXY           reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)
    HAND_DOWN       reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)
    HAND_UP         reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)
    GO              reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)
    LEFT            reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)
    RIGHT           reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)
    BACK            reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)
    ARC             reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)
    WHILE           reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)
    FOR             reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 121 (graphmove -> graphmove2 SEMICOLON .)


state 148

    (106) while1 -> while_w OPENPAREN . expression CLOSEPAREN
    (82) expression -> . exp expression1
    (142) exp -> . term exp1
    (148) term -> . factor term1
    (153) factor -> . vcte
    (154) factor -> . factor1
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (155) factor1 -> . factor2 vcte
    (156) factor1 -> . openP expression closeP
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (157) factor2 -> . ADDITION
    (158) factor2 -> . SUBSTRACTION
    (146) openP -> . OPENPAREN

    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63
    ADDITION        shift and go to state 117
    SUBSTRACTION    shift and go to state 118
    OPENPAREN       shift and go to state 116

    expression                     shift and go to state 204
    exp                            shift and go to state 184
    term                           shift and go to state 102
    factor                         shift and go to state 103
    vcte                           shift and go to state 104
    factor1                        shift and go to state 105
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    id                             shift and go to state 109
    funCall                        shift and go to state 110
    factor2                        shift and go to state 111
    openP                          shift and go to state 112

state 149

    (101) for1 -> forInit OPENPAREN . ID for2

    ID              shift and go to state 205


state 150

    (115) graphfig1 -> CIRCLE unaExp .

    SEMICOLON       reduce using rule 115 (graphfig1 -> CIRCLE unaExp .)


state 151

    (109) unaExp -> OPENPAREN . exp CLOSEPAREN
    (142) exp -> . term exp1
    (148) term -> . factor term1
    (153) factor -> . vcte
    (154) factor -> . factor1
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (155) factor1 -> . factor2 vcte
    (156) factor1 -> . openP expression closeP
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (157) factor2 -> . ADDITION
    (158) factor2 -> . SUBSTRACTION
    (146) openP -> . OPENPAREN

    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63
    ADDITION        shift and go to state 117
    SUBSTRACTION    shift and go to state 118
    OPENPAREN       shift and go to state 116

    exp                            shift and go to state 206
    term                           shift and go to state 102
    factor                         shift and go to state 103
    vcte                           shift and go to state 104
    factor1                        shift and go to state 105
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    id                             shift and go to state 109
    funCall                        shift and go to state 110
    factor2                        shift and go to state 111
    openP                          shift and go to state 112

state 152

    (116) graphfig1 -> SQUARE unaExp .

    SEMICOLON       reduce using rule 116 (graphfig1 -> SQUARE unaExp .)


state 153

    (117) graphfig2 -> TRIANGLE dosExp .

    SEMICOLON       reduce using rule 117 (graphfig2 -> TRIANGLE dosExp .)


state 154

    (108) dosExp -> OPENPAREN . exp COMMA exp CLOSEPAREN
    (142) exp -> . term exp1
    (148) term -> . factor term1
    (153) factor -> . vcte
    (154) factor -> . factor1
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (155) factor1 -> . factor2 vcte
    (156) factor1 -> . openP expression closeP
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (157) factor2 -> . ADDITION
    (158) factor2 -> . SUBSTRACTION
    (146) openP -> . OPENPAREN

    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63
    ADDITION        shift and go to state 117
    SUBSTRACTION    shift and go to state 118
    OPENPAREN       shift and go to state 116

    exp                            shift and go to state 207
    term                           shift and go to state 102
    factor                         shift and go to state 103
    vcte                           shift and go to state 104
    factor1                        shift and go to state 105
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    id                             shift and go to state 109
    funCall                        shift and go to state 110
    factor2                        shift and go to state 111
    openP                          shift and go to state 112

state 155

    (118) graphfig2 -> RECTANGLE dosExp .

    SEMICOLON       reduce using rule 118 (graphfig2 -> RECTANGLE dosExp .)


state 156

    (139) graphview1 -> COLOR_STAR unaExp .

    SEMICOLON       reduce using rule 139 (graphview1 -> COLOR_STAR unaExp .)


state 157

    (140) graphview1 -> SIZE_STAR unaExp .

    SEMICOLON       reduce using rule 140 (graphview1 -> SIZE_STAR unaExp .)


state 158

    (141) graphview2 -> SETXY dosExp .

    SEMICOLON       reduce using rule 141 (graphview2 -> SETXY dosExp .)


state 159

    (124) graphmove1 -> GO unaExp .

    SEMICOLON       reduce using rule 124 (graphmove1 -> GO unaExp .)


state 160

    (125) graphmove1 -> LEFT unaExp .

    SEMICOLON       reduce using rule 125 (graphmove1 -> LEFT unaExp .)


state 161

    (126) graphmove1 -> RIGHT unaExp .

    SEMICOLON       reduce using rule 126 (graphmove1 -> RIGHT unaExp .)


state 162

    (127) graphmove1 -> BACK unaExp .

    SEMICOLON       reduce using rule 127 (graphmove1 -> BACK unaExp .)


state 163

    (128) graphmove2 -> ARC dosExp .

    SEMICOLON       reduce using rule 128 (graphmove2 -> ARC dosExp .)


state 164

    (47) function -> FUN functionI function2 inicia_fun declara_vars . function4 termina_fun
    (53) function4 -> . stmt function4
    (54) function4 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . graphr
    (27) stmt -> . funCall SEMICOLON
    (28) stmt -> . return
    (159) empty -> .
    (29) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (89) condition -> . IF head_cond body condition1
    (61) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for
    (62) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (110) graphstmt -> . graphfig
    (111) graphstmt -> . graphview
    (112) graphstmt -> . graphmove
    (129) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (79) return -> . RETURN return1 SEMICOLON
    (67) id -> . ID
    (105) while -> . while1 body
    (100) for -> . for1 body
    (113) graphfig -> . graphfig1 SEMICOLON
    (114) graphfig -> . graphfig2 SEMICOLON
    (134) graphview -> . graphview0 SEMICOLON
    (135) graphview -> . graphview1 SEMICOLON
    (136) graphview -> . graphview2 SEMICOLON
    (119) graphmove -> . graphmove0 SEMICOLON
    (120) graphmove -> . graphmove1 SEMICOLON
    (121) graphmove -> . graphmove2 SEMICOLON
    (133) repeat -> . REPEAT
    (106) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (101) for1 -> . forInit OPENPAREN ID for2
    (115) graphfig1 -> . CIRCLE unaExp
    (116) graphfig1 -> . SQUARE unaExp
    (117) graphfig2 -> . TRIANGLE dosExp
    (118) graphfig2 -> . RECTANGLE dosExp
    (137) graphview0 -> . HIDE_STAR
    (138) graphview0 -> . SHOW_STAR
    (139) graphview1 -> . COLOR_STAR unaExp
    (140) graphview1 -> . SIZE_STAR unaExp
    (141) graphview2 -> . SETXY dosExp
    (122) graphmove0 -> . HAND_DOWN
    (123) graphmove0 -> . HAND_UP
    (124) graphmove1 -> . GO unaExp
    (125) graphmove1 -> . LEFT unaExp
    (126) graphmove1 -> . RIGHT unaExp
    (127) graphmove1 -> . BACK unaExp
    (128) graphmove2 -> . ARC dosExp
    (107) while_w -> . WHILE
    (104) forInit -> . FOR

    CLOSEBRACES     reduce using rule 159 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    RETURN          shift and go to state 62
    ID              shift and go to state 63
    REPEAT          shift and go to state 74
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92
    WHILE           shift and go to state 93
    FOR             shift and go to state 94

    function4                      shift and go to state 208
    stmt                           shift and go to state 209
    empty                          shift and go to state 210
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    graphr                         shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    repeat                         shift and go to state 61
    while1                         shift and go to state 64
    for1                           shift and go to state 65
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73
    while_w                        shift and go to state 75
    forInit                        shift and go to state 76

state 165

    (50) function2 -> OPENPAREN function3 CLOSEPAREN .

    OPENBRACES      reduce using rule 50 (function2 -> OPENPAREN function3 CLOSEPAREN .)


state 166

    (51) function3 -> funParam function5 .

    CLOSEPAREN      reduce using rule 51 (function3 -> funParam function5 .)


state 167

    (55) function5 -> COMMA . funParam function5
    (57) funParam -> . type ID
    (58) type -> . INT
    (59) type -> . FLOAT
    (60) type -> . CHAR

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    funParam                       shift and go to state 211
    type                           shift and go to state 100

state 168

    (56) function5 -> empty .

    CLOSEPAREN      reduce using rule 56 (function5 -> empty .)


state 169

    (57) funParam -> type ID .

    COMMA           reduce using rule 57 (funParam -> type ID .)
    CLOSEPAREN      reduce using rule 57 (funParam -> type ID .)


state 170

    (12) vars -> type ID vars1 equals exp SEMICOLON .

    INT             reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    FLOAT           reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    CHAR            reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    FUN             reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    MULTIPLICATION  reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    IF              reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    PRINT           reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    READ            reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    RETURN          reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    ID              reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    REPEAT          reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    CIRCLE          reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    SQUARE          reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    TRIANGLE        reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    RECTANGLE       reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    HIDE_STAR       reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    SHOW_STAR       reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    COLOR_STAR      reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    SIZE_STAR       reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    SETXY           reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    HAND_DOWN       reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    HAND_UP         reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    GO              reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    LEFT            reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    RIGHT           reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    BACK            reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    ARC             reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    WHILE           reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    FOR             reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    CLOSEBRACES     reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)


state 171

    (142) exp -> term exp1 .

    SEMICOLON       reduce using rule 142 (exp -> term exp1 .)
    GREATER         reduce using rule 142 (exp -> term exp1 .)
    LESS            reduce using rule 142 (exp -> term exp1 .)
    NOTEQUAL        reduce using rule 142 (exp -> term exp1 .)
    ISEQUAL         reduce using rule 142 (exp -> term exp1 .)
    CLOSEPAREN      reduce using rule 142 (exp -> term exp1 .)
    COMMA           reduce using rule 142 (exp -> term exp1 .)
    CLOSEBRACKET    reduce using rule 142 (exp -> term exp1 .)


state 172

    (143) exp1 -> ADDITION . exp
    (142) exp -> . term exp1
    (148) term -> . factor term1
    (153) factor -> . vcte
    (154) factor -> . factor1
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (155) factor1 -> . factor2 vcte
    (156) factor1 -> . openP expression closeP
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (157) factor2 -> . ADDITION
    (158) factor2 -> . SUBSTRACTION
    (146) openP -> . OPENPAREN

    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63
    ADDITION        shift and go to state 117
    SUBSTRACTION    shift and go to state 118
    OPENPAREN       shift and go to state 116

    exp                            shift and go to state 212
    term                           shift and go to state 102
    factor                         shift and go to state 103
    vcte                           shift and go to state 104
    factor1                        shift and go to state 105
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    id                             shift and go to state 109
    funCall                        shift and go to state 110
    factor2                        shift and go to state 111
    openP                          shift and go to state 112

state 173

    (144) exp1 -> SUBSTRACTION . exp
    (142) exp -> . term exp1
    (148) term -> . factor term1
    (153) factor -> . vcte
    (154) factor -> . factor1
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (155) factor1 -> . factor2 vcte
    (156) factor1 -> . openP expression closeP
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (157) factor2 -> . ADDITION
    (158) factor2 -> . SUBSTRACTION
    (146) openP -> . OPENPAREN

    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63
    ADDITION        shift and go to state 117
    SUBSTRACTION    shift and go to state 118
    OPENPAREN       shift and go to state 116

    exp                            shift and go to state 213
    term                           shift and go to state 102
    factor                         shift and go to state 103
    vcte                           shift and go to state 104
    factor1                        shift and go to state 105
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    id                             shift and go to state 109
    funCall                        shift and go to state 110
    factor2                        shift and go to state 111
    openP                          shift and go to state 112

state 174

    (145) exp1 -> empty .

    SEMICOLON       reduce using rule 145 (exp1 -> empty .)
    GREATER         reduce using rule 145 (exp1 -> empty .)
    LESS            reduce using rule 145 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 145 (exp1 -> empty .)
    ISEQUAL         reduce using rule 145 (exp1 -> empty .)
    CLOSEPAREN      reduce using rule 145 (exp1 -> empty .)
    COMMA           reduce using rule 145 (exp1 -> empty .)
    CLOSEBRACKET    reduce using rule 145 (exp1 -> empty .)


state 175

    (148) term -> factor term1 .

    ADDITION        reduce using rule 148 (term -> factor term1 .)
    SUBSTRACTION    reduce using rule 148 (term -> factor term1 .)
    SEMICOLON       reduce using rule 148 (term -> factor term1 .)
    GREATER         reduce using rule 148 (term -> factor term1 .)
    LESS            reduce using rule 148 (term -> factor term1 .)
    NOTEQUAL        reduce using rule 148 (term -> factor term1 .)
    ISEQUAL         reduce using rule 148 (term -> factor term1 .)
    CLOSEPAREN      reduce using rule 148 (term -> factor term1 .)
    COMMA           reduce using rule 148 (term -> factor term1 .)
    CLOSEBRACKET    reduce using rule 148 (term -> factor term1 .)


state 176

    (149) term1 -> MULTIPLICATION . term
    (148) term -> . factor term1
    (153) factor -> . vcte
    (154) factor -> . factor1
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (155) factor1 -> . factor2 vcte
    (156) factor1 -> . openP expression closeP
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (157) factor2 -> . ADDITION
    (158) factor2 -> . SUBSTRACTION
    (146) openP -> . OPENPAREN

    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63
    ADDITION        shift and go to state 117
    SUBSTRACTION    shift and go to state 118
    OPENPAREN       shift and go to state 116

    term                           shift and go to state 214
    factor                         shift and go to state 103
    vcte                           shift and go to state 104
    factor1                        shift and go to state 105
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    id                             shift and go to state 109
    funCall                        shift and go to state 110
    factor2                        shift and go to state 111
    openP                          shift and go to state 112

state 177

    (150) term1 -> DIVISION . term
    (148) term -> . factor term1
    (153) factor -> . vcte
    (154) factor -> . factor1
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (155) factor1 -> . factor2 vcte
    (156) factor1 -> . openP expression closeP
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (157) factor2 -> . ADDITION
    (158) factor2 -> . SUBSTRACTION
    (146) openP -> . OPENPAREN

    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63
    ADDITION        shift and go to state 117
    SUBSTRACTION    shift and go to state 118
    OPENPAREN       shift and go to state 116

    term                           shift and go to state 215
    factor                         shift and go to state 103
    vcte                           shift and go to state 104
    factor1                        shift and go to state 105
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    id                             shift and go to state 109
    funCall                        shift and go to state 110
    factor2                        shift and go to state 111
    openP                          shift and go to state 112

state 178

    (151) term1 -> empty .

    ADDITION        reduce using rule 151 (term1 -> empty .)
    SUBSTRACTION    reduce using rule 151 (term1 -> empty .)
    SEMICOLON       reduce using rule 151 (term1 -> empty .)
    GREATER         reduce using rule 151 (term1 -> empty .)
    LESS            reduce using rule 151 (term1 -> empty .)
    NOTEQUAL        reduce using rule 151 (term1 -> empty .)
    ISEQUAL         reduce using rule 151 (term1 -> empty .)
    CLOSEPAREN      reduce using rule 151 (term1 -> empty .)
    COMMA           reduce using rule 151 (term1 -> empty .)
    CLOSEBRACKET    reduce using rule 151 (term1 -> empty .)


state 179

    (39) vcte -> id vcte1 .

    MULTIPLICATION  reduce using rule 39 (vcte -> id vcte1 .)
    DIVISION        reduce using rule 39 (vcte -> id vcte1 .)
    ADDITION        reduce using rule 39 (vcte -> id vcte1 .)
    SUBSTRACTION    reduce using rule 39 (vcte -> id vcte1 .)
    SEMICOLON       reduce using rule 39 (vcte -> id vcte1 .)
    GREATER         reduce using rule 39 (vcte -> id vcte1 .)
    LESS            reduce using rule 39 (vcte -> id vcte1 .)
    NOTEQUAL        reduce using rule 39 (vcte -> id vcte1 .)
    ISEQUAL         reduce using rule 39 (vcte -> id vcte1 .)
    CLOSEPAREN      reduce using rule 39 (vcte -> id vcte1 .)
    COMMA           reduce using rule 39 (vcte -> id vcte1 .)
    CLOSEBRACKET    reduce using rule 39 (vcte -> id vcte1 .)


state 180

    (41) vcte1 -> OPENBRACKET . exp CLOSEBRACKET vcte3
    (142) exp -> . term exp1
    (148) term -> . factor term1
    (153) factor -> . vcte
    (154) factor -> . factor1
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (155) factor1 -> . factor2 vcte
    (156) factor1 -> . openP expression closeP
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (157) factor2 -> . ADDITION
    (158) factor2 -> . SUBSTRACTION
    (146) openP -> . OPENPAREN

    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63
    ADDITION        shift and go to state 117
    SUBSTRACTION    shift and go to state 118
    OPENPAREN       shift and go to state 116

    exp                            shift and go to state 216
    term                           shift and go to state 102
    factor                         shift and go to state 103
    vcte                           shift and go to state 104
    factor1                        shift and go to state 105
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    id                             shift and go to state 109
    funCall                        shift and go to state 110
    factor2                        shift and go to state 111
    openP                          shift and go to state 112

state 181

    (42) vcte1 -> empty .

    MULTIPLICATION  reduce using rule 42 (vcte1 -> empty .)
    DIVISION        reduce using rule 42 (vcte1 -> empty .)
    ADDITION        reduce using rule 42 (vcte1 -> empty .)
    SUBSTRACTION    reduce using rule 42 (vcte1 -> empty .)
    SEMICOLON       reduce using rule 42 (vcte1 -> empty .)
    GREATER         reduce using rule 42 (vcte1 -> empty .)
    LESS            reduce using rule 42 (vcte1 -> empty .)
    NOTEQUAL        reduce using rule 42 (vcte1 -> empty .)
    ISEQUAL         reduce using rule 42 (vcte1 -> empty .)
    CLOSEPAREN      reduce using rule 42 (vcte1 -> empty .)
    COMMA           reduce using rule 42 (vcte1 -> empty .)
    CLOSEBRACKET    reduce using rule 42 (vcte1 -> empty .)


state 182

    (155) factor1 -> factor2 vcte .

    MULTIPLICATION  reduce using rule 155 (factor1 -> factor2 vcte .)
    DIVISION        reduce using rule 155 (factor1 -> factor2 vcte .)
    ADDITION        reduce using rule 155 (factor1 -> factor2 vcte .)
    SUBSTRACTION    reduce using rule 155 (factor1 -> factor2 vcte .)
    SEMICOLON       reduce using rule 155 (factor1 -> factor2 vcte .)
    GREATER         reduce using rule 155 (factor1 -> factor2 vcte .)
    LESS            reduce using rule 155 (factor1 -> factor2 vcte .)
    NOTEQUAL        reduce using rule 155 (factor1 -> factor2 vcte .)
    ISEQUAL         reduce using rule 155 (factor1 -> factor2 vcte .)
    CLOSEPAREN      reduce using rule 155 (factor1 -> factor2 vcte .)
    COMMA           reduce using rule 155 (factor1 -> factor2 vcte .)
    CLOSEBRACKET    reduce using rule 155 (factor1 -> factor2 vcte .)


state 183

    (156) factor1 -> openP expression . closeP
    (147) closeP -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 218

    closeP                         shift and go to state 217

state 184

    (82) expression -> exp . expression1
    (83) expression1 -> . loper exp
    (84) expression1 -> . empty
    (85) loper -> . GREATER
    (86) loper -> . LESS
    (87) loper -> . NOTEQUAL
    (88) loper -> . ISEQUAL
    (159) empty -> .

    GREATER         shift and go to state 222
    LESS            shift and go to state 223
    NOTEQUAL        shift and go to state 224
    ISEQUAL         shift and go to state 225
    CLOSEPAREN      reduce using rule 159 (empty -> .)

    expression1                    shift and go to state 219
    loper                          shift and go to state 220
    empty                          shift and go to state 221

state 185

    (16) vars3 -> OPENBRACKET . CTEINT CLOSEBRACKET

    CTEINT          shift and go to state 226


state 186

    (14) vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .

    SEMICOLON       reduce using rule 14 (vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .)
    EQUALS          reduce using rule 14 (vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .)


state 187

    (17) vars3 -> empty .

    SEMICOLON       reduce using rule 17 (vars3 -> empty .)
    EQUALS          reduce using rule 17 (vars3 -> empty .)


state 188

    (29) assignment -> id assignment1 equals . assignment3 SEMICOLON
    (34) assignment3 -> . exp
    (35) assignment3 -> . read
    (142) exp -> . term exp1
    (62) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (148) term -> . factor term1
    (153) factor -> . vcte
    (154) factor -> . factor1
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (155) factor1 -> . factor2 vcte
    (156) factor1 -> . openP expression closeP
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (157) factor2 -> . ADDITION
    (158) factor2 -> . SUBSTRACTION
    (146) openP -> . OPENPAREN

    READ            shift and go to state 57
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63
    ADDITION        shift and go to state 117
    SUBSTRACTION    shift and go to state 118
    OPENPAREN       shift and go to state 116

    id                             shift and go to state 109
    assignment3                    shift and go to state 227
    exp                            shift and go to state 228
    read                           shift and go to state 229
    term                           shift and go to state 102
    factor                         shift and go to state 103
    vcte                           shift and go to state 104
    factor1                        shift and go to state 105
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    funCall                        shift and go to state 110
    factor2                        shift and go to state 111
    openP                          shift and go to state 112

state 189

    (68) funCall -> id OPENPAREN funCall2 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 230


state 190

    (72) funCall2 -> exp . funCall3
    (74) funCall3 -> . COMMA funCall2
    (75) funCall3 -> . empty
    (159) empty -> .

    COMMA           shift and go to state 232
    CLOSEPAREN      reduce using rule 159 (empty -> .)

    funCall3                       shift and go to state 231
    empty                          shift and go to state 233

state 191

    (73) funCall2 -> empty .

    CLOSEPAREN      reduce using rule 73 (funCall2 -> empty .)


state 192

    (31) assignment1 -> assignment2 assignment1 .

    EQUALS          reduce using rule 31 (assignment1 -> assignment2 assignment1 .)


state 193

    (33) assignment2 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 234


state 194

    (89) condition -> IF head_cond body . condition1
    (90) condition1 -> . elseif head_cond body condition1
    (91) condition1 -> . else body
    (92) condition1 -> . empty
    (93) elseif -> . ELSEIF
    (94) else -> . ELSE
    (159) empty -> .

    ELSEIF          shift and go to state 239
    ELSE            shift and go to state 240
    IF              reduce using rule 159 (empty -> .)
    PRINT           reduce using rule 159 (empty -> .)
    READ            reduce using rule 159 (empty -> .)
    RETURN          reduce using rule 159 (empty -> .)
    ID              reduce using rule 159 (empty -> .)
    REPEAT          reduce using rule 159 (empty -> .)
    CIRCLE          reduce using rule 159 (empty -> .)
    SQUARE          reduce using rule 159 (empty -> .)
    TRIANGLE        reduce using rule 159 (empty -> .)
    RECTANGLE       reduce using rule 159 (empty -> .)
    HIDE_STAR       reduce using rule 159 (empty -> .)
    SHOW_STAR       reduce using rule 159 (empty -> .)
    COLOR_STAR      reduce using rule 159 (empty -> .)
    SIZE_STAR       reduce using rule 159 (empty -> .)
    SETXY           reduce using rule 159 (empty -> .)
    HAND_DOWN       reduce using rule 159 (empty -> .)
    HAND_UP         reduce using rule 159 (empty -> .)
    GO              reduce using rule 159 (empty -> .)
    LEFT            reduce using rule 159 (empty -> .)
    RIGHT           reduce using rule 159 (empty -> .)
    BACK            reduce using rule 159 (empty -> .)
    ARC             reduce using rule 159 (empty -> .)
    WHILE           reduce using rule 159 (empty -> .)
    FOR             reduce using rule 159 (empty -> .)
    CLOSEBRACES     reduce using rule 159 (empty -> .)

    condition1                     shift and go to state 235
    elseif                         shift and go to state 236
    else                           shift and go to state 237
    empty                          shift and go to state 238

state 195

    (95) head_cond -> OPENPAREN expression . close_condition
    (97) close_condition -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 242

    close_condition                shift and go to state 241

state 196

    (61) print -> PRINT OPENPAREN expression . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 243


state 197

    (62) read -> READ OPENPAREN id . read1 CLOSEPAREN SEMICOLON
    (63) read1 -> . OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (64) read1 -> . OPENBRACKET exp CLOSEBRACKET
    (65) read1 -> . empty
    (159) empty -> .

    OPENBRACKET     shift and go to state 245
    CLOSEPAREN      reduce using rule 159 (empty -> .)

    read1                          shift and go to state 244
    empty                          shift and go to state 246

state 198

    (129) graphr -> repeat rep OPENBRACES . graphstmt graphr1 CLOSEBRACES
    (110) graphstmt -> . graphfig
    (111) graphstmt -> . graphview
    (112) graphstmt -> . graphmove
    (113) graphfig -> . graphfig1 SEMICOLON
    (114) graphfig -> . graphfig2 SEMICOLON
    (134) graphview -> . graphview0 SEMICOLON
    (135) graphview -> . graphview1 SEMICOLON
    (136) graphview -> . graphview2 SEMICOLON
    (119) graphmove -> . graphmove0 SEMICOLON
    (120) graphmove -> . graphmove1 SEMICOLON
    (121) graphmove -> . graphmove2 SEMICOLON
    (115) graphfig1 -> . CIRCLE unaExp
    (116) graphfig1 -> . SQUARE unaExp
    (117) graphfig2 -> . TRIANGLE dosExp
    (118) graphfig2 -> . RECTANGLE dosExp
    (137) graphview0 -> . HIDE_STAR
    (138) graphview0 -> . SHOW_STAR
    (139) graphview1 -> . COLOR_STAR unaExp
    (140) graphview1 -> . SIZE_STAR unaExp
    (141) graphview2 -> . SETXY dosExp
    (122) graphmove0 -> . HAND_DOWN
    (123) graphmove0 -> . HAND_UP
    (124) graphmove1 -> . GO unaExp
    (125) graphmove1 -> . LEFT unaExp
    (126) graphmove1 -> . RIGHT unaExp
    (127) graphmove1 -> . BACK unaExp
    (128) graphmove2 -> . ARC dosExp

    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92

    graphstmt                      shift and go to state 247
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73

state 199

    (132) rep -> OPENPAREN exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 248


state 200

    (79) return -> RETURN return1 SEMICOLON .

    IF              reduce using rule 79 (return -> RETURN return1 SEMICOLON .)
    PRINT           reduce using rule 79 (return -> RETURN return1 SEMICOLON .)
    READ            reduce using rule 79 (return -> RETURN return1 SEMICOLON .)
    RETURN          reduce using rule 79 (return -> RETURN return1 SEMICOLON .)
    ID              reduce using rule 79 (return -> RETURN return1 SEMICOLON .)
    REPEAT          reduce using rule 79 (return -> RETURN return1 SEMICOLON .)
    CIRCLE          reduce using rule 79 (return -> RETURN return1 SEMICOLON .)
    SQUARE          reduce using rule 79 (return -> RETURN return1 SEMICOLON .)
    TRIANGLE        reduce using rule 79 (return -> RETURN return1 SEMICOLON .)
    RECTANGLE       reduce using rule 79 (return -> RETURN return1 SEMICOLON .)
    HIDE_STAR       reduce using rule 79 (return -> RETURN return1 SEMICOLON .)
    SHOW_STAR       reduce using rule 79 (return -> RETURN return1 SEMICOLON .)
    COLOR_STAR      reduce using rule 79 (return -> RETURN return1 SEMICOLON .)
    SIZE_STAR       reduce using rule 79 (return -> RETURN return1 SEMICOLON .)
    SETXY           reduce using rule 79 (return -> RETURN return1 SEMICOLON .)
    HAND_DOWN       reduce using rule 79 (return -> RETURN return1 SEMICOLON .)
    HAND_UP         reduce using rule 79 (return -> RETURN return1 SEMICOLON .)
    GO              reduce using rule 79 (return -> RETURN return1 SEMICOLON .)
    LEFT            reduce using rule 79 (return -> RETURN return1 SEMICOLON .)
    RIGHT           reduce using rule 79 (return -> RETURN return1 SEMICOLON .)
    BACK            reduce using rule 79 (return -> RETURN return1 SEMICOLON .)
    ARC             reduce using rule 79 (return -> RETURN return1 SEMICOLON .)
    WHILE           reduce using rule 79 (return -> RETURN return1 SEMICOLON .)
    FOR             reduce using rule 79 (return -> RETURN return1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 79 (return -> RETURN return1 SEMICOLON .)


state 201

    (96) body -> OPENBRACES body1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 249


state 202

    (98) body1 -> stmt . body1
    (98) body1 -> . stmt body1
    (99) body1 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . graphr
    (27) stmt -> . funCall SEMICOLON
    (28) stmt -> . return
    (159) empty -> .
    (29) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (89) condition -> . IF head_cond body condition1
    (61) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for
    (62) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (110) graphstmt -> . graphfig
    (111) graphstmt -> . graphview
    (112) graphstmt -> . graphmove
    (129) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (79) return -> . RETURN return1 SEMICOLON
    (67) id -> . ID
    (105) while -> . while1 body
    (100) for -> . for1 body
    (113) graphfig -> . graphfig1 SEMICOLON
    (114) graphfig -> . graphfig2 SEMICOLON
    (134) graphview -> . graphview0 SEMICOLON
    (135) graphview -> . graphview1 SEMICOLON
    (136) graphview -> . graphview2 SEMICOLON
    (119) graphmove -> . graphmove0 SEMICOLON
    (120) graphmove -> . graphmove1 SEMICOLON
    (121) graphmove -> . graphmove2 SEMICOLON
    (133) repeat -> . REPEAT
    (106) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (101) for1 -> . forInit OPENPAREN ID for2
    (115) graphfig1 -> . CIRCLE unaExp
    (116) graphfig1 -> . SQUARE unaExp
    (117) graphfig2 -> . TRIANGLE dosExp
    (118) graphfig2 -> . RECTANGLE dosExp
    (137) graphview0 -> . HIDE_STAR
    (138) graphview0 -> . SHOW_STAR
    (139) graphview1 -> . COLOR_STAR unaExp
    (140) graphview1 -> . SIZE_STAR unaExp
    (141) graphview2 -> . SETXY dosExp
    (122) graphmove0 -> . HAND_DOWN
    (123) graphmove0 -> . HAND_UP
    (124) graphmove1 -> . GO unaExp
    (125) graphmove1 -> . LEFT unaExp
    (126) graphmove1 -> . RIGHT unaExp
    (127) graphmove1 -> . BACK unaExp
    (128) graphmove2 -> . ARC dosExp
    (107) while_w -> . WHILE
    (104) forInit -> . FOR

    CLOSEBRACES     reduce using rule 159 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    RETURN          shift and go to state 62
    ID              shift and go to state 63
    REPEAT          shift and go to state 74
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92
    WHILE           shift and go to state 93
    FOR             shift and go to state 94

    stmt                           shift and go to state 202
    body1                          shift and go to state 250
    empty                          shift and go to state 203
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    graphr                         shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    repeat                         shift and go to state 61
    while1                         shift and go to state 64
    for1                           shift and go to state 65
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73
    while_w                        shift and go to state 75
    forInit                        shift and go to state 76

state 203

    (99) body1 -> empty .

    CLOSEBRACES     reduce using rule 99 (body1 -> empty .)


state 204

    (106) while1 -> while_w OPENPAREN expression . CLOSEPAREN

    CLOSEPAREN      shift and go to state 251


state 205

    (101) for1 -> forInit OPENPAREN ID . for2
    (102) for2 -> . TWODOTS exp for3

    TWODOTS         shift and go to state 253

    for2                           shift and go to state 252

state 206

    (109) unaExp -> OPENPAREN exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 254


state 207

    (108) dosExp -> OPENPAREN exp . COMMA exp CLOSEPAREN

    COMMA           shift and go to state 255


state 208

    (47) function -> FUN functionI function2 inicia_fun declara_vars function4 . termina_fun
    (49) termina_fun -> . CLOSEBRACES

    CLOSEBRACES     shift and go to state 257

    termina_fun                    shift and go to state 256

state 209

    (53) function4 -> stmt . function4
    (53) function4 -> . stmt function4
    (54) function4 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . graphr
    (27) stmt -> . funCall SEMICOLON
    (28) stmt -> . return
    (159) empty -> .
    (29) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (89) condition -> . IF head_cond body condition1
    (61) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for
    (62) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (110) graphstmt -> . graphfig
    (111) graphstmt -> . graphview
    (112) graphstmt -> . graphmove
    (129) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (79) return -> . RETURN return1 SEMICOLON
    (67) id -> . ID
    (105) while -> . while1 body
    (100) for -> . for1 body
    (113) graphfig -> . graphfig1 SEMICOLON
    (114) graphfig -> . graphfig2 SEMICOLON
    (134) graphview -> . graphview0 SEMICOLON
    (135) graphview -> . graphview1 SEMICOLON
    (136) graphview -> . graphview2 SEMICOLON
    (119) graphmove -> . graphmove0 SEMICOLON
    (120) graphmove -> . graphmove1 SEMICOLON
    (121) graphmove -> . graphmove2 SEMICOLON
    (133) repeat -> . REPEAT
    (106) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (101) for1 -> . forInit OPENPAREN ID for2
    (115) graphfig1 -> . CIRCLE unaExp
    (116) graphfig1 -> . SQUARE unaExp
    (117) graphfig2 -> . TRIANGLE dosExp
    (118) graphfig2 -> . RECTANGLE dosExp
    (137) graphview0 -> . HIDE_STAR
    (138) graphview0 -> . SHOW_STAR
    (139) graphview1 -> . COLOR_STAR unaExp
    (140) graphview1 -> . SIZE_STAR unaExp
    (141) graphview2 -> . SETXY dosExp
    (122) graphmove0 -> . HAND_DOWN
    (123) graphmove0 -> . HAND_UP
    (124) graphmove1 -> . GO unaExp
    (125) graphmove1 -> . LEFT unaExp
    (126) graphmove1 -> . RIGHT unaExp
    (127) graphmove1 -> . BACK unaExp
    (128) graphmove2 -> . ARC dosExp
    (107) while_w -> . WHILE
    (104) forInit -> . FOR

    CLOSEBRACES     reduce using rule 159 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    RETURN          shift and go to state 62
    ID              shift and go to state 63
    REPEAT          shift and go to state 74
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92
    WHILE           shift and go to state 93
    FOR             shift and go to state 94

    stmt                           shift and go to state 209
    function4                      shift and go to state 258
    empty                          shift and go to state 210
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    graphr                         shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    repeat                         shift and go to state 61
    while1                         shift and go to state 64
    for1                           shift and go to state 65
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73
    while_w                        shift and go to state 75
    forInit                        shift and go to state 76

state 210

    (54) function4 -> empty .

    CLOSEBRACES     reduce using rule 54 (function4 -> empty .)


state 211

    (55) function5 -> COMMA funParam . function5
    (55) function5 -> . COMMA funParam function5
    (56) function5 -> . empty
    (159) empty -> .

    COMMA           shift and go to state 167
    CLOSEPAREN      reduce using rule 159 (empty -> .)

    function5                      shift and go to state 259
    empty                          shift and go to state 168

state 212

    (143) exp1 -> ADDITION exp .

    SEMICOLON       reduce using rule 143 (exp1 -> ADDITION exp .)
    GREATER         reduce using rule 143 (exp1 -> ADDITION exp .)
    LESS            reduce using rule 143 (exp1 -> ADDITION exp .)
    NOTEQUAL        reduce using rule 143 (exp1 -> ADDITION exp .)
    ISEQUAL         reduce using rule 143 (exp1 -> ADDITION exp .)
    CLOSEPAREN      reduce using rule 143 (exp1 -> ADDITION exp .)
    COMMA           reduce using rule 143 (exp1 -> ADDITION exp .)
    CLOSEBRACKET    reduce using rule 143 (exp1 -> ADDITION exp .)


state 213

    (144) exp1 -> SUBSTRACTION exp .

    SEMICOLON       reduce using rule 144 (exp1 -> SUBSTRACTION exp .)
    GREATER         reduce using rule 144 (exp1 -> SUBSTRACTION exp .)
    LESS            reduce using rule 144 (exp1 -> SUBSTRACTION exp .)
    NOTEQUAL        reduce using rule 144 (exp1 -> SUBSTRACTION exp .)
    ISEQUAL         reduce using rule 144 (exp1 -> SUBSTRACTION exp .)
    CLOSEPAREN      reduce using rule 144 (exp1 -> SUBSTRACTION exp .)
    COMMA           reduce using rule 144 (exp1 -> SUBSTRACTION exp .)
    CLOSEBRACKET    reduce using rule 144 (exp1 -> SUBSTRACTION exp .)


state 214

    (149) term1 -> MULTIPLICATION term .

    ADDITION        reduce using rule 149 (term1 -> MULTIPLICATION term .)
    SUBSTRACTION    reduce using rule 149 (term1 -> MULTIPLICATION term .)
    SEMICOLON       reduce using rule 149 (term1 -> MULTIPLICATION term .)
    GREATER         reduce using rule 149 (term1 -> MULTIPLICATION term .)
    LESS            reduce using rule 149 (term1 -> MULTIPLICATION term .)
    NOTEQUAL        reduce using rule 149 (term1 -> MULTIPLICATION term .)
    ISEQUAL         reduce using rule 149 (term1 -> MULTIPLICATION term .)
    CLOSEPAREN      reduce using rule 149 (term1 -> MULTIPLICATION term .)
    COMMA           reduce using rule 149 (term1 -> MULTIPLICATION term .)
    CLOSEBRACKET    reduce using rule 149 (term1 -> MULTIPLICATION term .)


state 215

    (150) term1 -> DIVISION term .

    ADDITION        reduce using rule 150 (term1 -> DIVISION term .)
    SUBSTRACTION    reduce using rule 150 (term1 -> DIVISION term .)
    SEMICOLON       reduce using rule 150 (term1 -> DIVISION term .)
    GREATER         reduce using rule 150 (term1 -> DIVISION term .)
    LESS            reduce using rule 150 (term1 -> DIVISION term .)
    NOTEQUAL        reduce using rule 150 (term1 -> DIVISION term .)
    ISEQUAL         reduce using rule 150 (term1 -> DIVISION term .)
    CLOSEPAREN      reduce using rule 150 (term1 -> DIVISION term .)
    COMMA           reduce using rule 150 (term1 -> DIVISION term .)
    CLOSEBRACKET    reduce using rule 150 (term1 -> DIVISION term .)


state 216

    (41) vcte1 -> OPENBRACKET exp . CLOSEBRACKET vcte3

    CLOSEBRACKET    shift and go to state 260


state 217

    (156) factor1 -> openP expression closeP .

    MULTIPLICATION  reduce using rule 156 (factor1 -> openP expression closeP .)
    DIVISION        reduce using rule 156 (factor1 -> openP expression closeP .)
    ADDITION        reduce using rule 156 (factor1 -> openP expression closeP .)
    SUBSTRACTION    reduce using rule 156 (factor1 -> openP expression closeP .)
    SEMICOLON       reduce using rule 156 (factor1 -> openP expression closeP .)
    GREATER         reduce using rule 156 (factor1 -> openP expression closeP .)
    LESS            reduce using rule 156 (factor1 -> openP expression closeP .)
    NOTEQUAL        reduce using rule 156 (factor1 -> openP expression closeP .)
    ISEQUAL         reduce using rule 156 (factor1 -> openP expression closeP .)
    CLOSEPAREN      reduce using rule 156 (factor1 -> openP expression closeP .)
    COMMA           reduce using rule 156 (factor1 -> openP expression closeP .)
    CLOSEBRACKET    reduce using rule 156 (factor1 -> openP expression closeP .)


state 218

    (147) closeP -> CLOSEPAREN .

    MULTIPLICATION  reduce using rule 147 (closeP -> CLOSEPAREN .)
    DIVISION        reduce using rule 147 (closeP -> CLOSEPAREN .)
    ADDITION        reduce using rule 147 (closeP -> CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 147 (closeP -> CLOSEPAREN .)
    SEMICOLON       reduce using rule 147 (closeP -> CLOSEPAREN .)
    GREATER         reduce using rule 147 (closeP -> CLOSEPAREN .)
    LESS            reduce using rule 147 (closeP -> CLOSEPAREN .)
    NOTEQUAL        reduce using rule 147 (closeP -> CLOSEPAREN .)
    ISEQUAL         reduce using rule 147 (closeP -> CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 147 (closeP -> CLOSEPAREN .)
    COMMA           reduce using rule 147 (closeP -> CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 147 (closeP -> CLOSEPAREN .)


state 219

    (82) expression -> exp expression1 .

    CLOSEPAREN      reduce using rule 82 (expression -> exp expression1 .)


state 220

    (83) expression1 -> loper . exp
    (142) exp -> . term exp1
    (148) term -> . factor term1
    (153) factor -> . vcte
    (154) factor -> . factor1
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (155) factor1 -> . factor2 vcte
    (156) factor1 -> . openP expression closeP
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (157) factor2 -> . ADDITION
    (158) factor2 -> . SUBSTRACTION
    (146) openP -> . OPENPAREN

    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63
    ADDITION        shift and go to state 117
    SUBSTRACTION    shift and go to state 118
    OPENPAREN       shift and go to state 116

    exp                            shift and go to state 261
    term                           shift and go to state 102
    factor                         shift and go to state 103
    vcte                           shift and go to state 104
    factor1                        shift and go to state 105
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    id                             shift and go to state 109
    funCall                        shift and go to state 110
    factor2                        shift and go to state 111
    openP                          shift and go to state 112

state 221

    (84) expression1 -> empty .

    CLOSEPAREN      reduce using rule 84 (expression1 -> empty .)


state 222

    (85) loper -> GREATER .

    CTEINT          reduce using rule 85 (loper -> GREATER .)
    CTEFLOAT        reduce using rule 85 (loper -> GREATER .)
    CTECHAR         reduce using rule 85 (loper -> GREATER .)
    ID              reduce using rule 85 (loper -> GREATER .)
    ADDITION        reduce using rule 85 (loper -> GREATER .)
    SUBSTRACTION    reduce using rule 85 (loper -> GREATER .)
    OPENPAREN       reduce using rule 85 (loper -> GREATER .)


state 223

    (86) loper -> LESS .

    CTEINT          reduce using rule 86 (loper -> LESS .)
    CTEFLOAT        reduce using rule 86 (loper -> LESS .)
    CTECHAR         reduce using rule 86 (loper -> LESS .)
    ID              reduce using rule 86 (loper -> LESS .)
    ADDITION        reduce using rule 86 (loper -> LESS .)
    SUBSTRACTION    reduce using rule 86 (loper -> LESS .)
    OPENPAREN       reduce using rule 86 (loper -> LESS .)


state 224

    (87) loper -> NOTEQUAL .

    CTEINT          reduce using rule 87 (loper -> NOTEQUAL .)
    CTEFLOAT        reduce using rule 87 (loper -> NOTEQUAL .)
    CTECHAR         reduce using rule 87 (loper -> NOTEQUAL .)
    ID              reduce using rule 87 (loper -> NOTEQUAL .)
    ADDITION        reduce using rule 87 (loper -> NOTEQUAL .)
    SUBSTRACTION    reduce using rule 87 (loper -> NOTEQUAL .)
    OPENPAREN       reduce using rule 87 (loper -> NOTEQUAL .)


state 225

    (88) loper -> ISEQUAL .

    CTEINT          reduce using rule 88 (loper -> ISEQUAL .)
    CTEFLOAT        reduce using rule 88 (loper -> ISEQUAL .)
    CTECHAR         reduce using rule 88 (loper -> ISEQUAL .)
    ID              reduce using rule 88 (loper -> ISEQUAL .)
    ADDITION        reduce using rule 88 (loper -> ISEQUAL .)
    SUBSTRACTION    reduce using rule 88 (loper -> ISEQUAL .)
    OPENPAREN       reduce using rule 88 (loper -> ISEQUAL .)


state 226

    (16) vars3 -> OPENBRACKET CTEINT . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 262


state 227

    (29) assignment -> id assignment1 equals assignment3 . SEMICOLON

    SEMICOLON       shift and go to state 263


state 228

    (34) assignment3 -> exp .

    SEMICOLON       reduce using rule 34 (assignment3 -> exp .)


state 229

    (35) assignment3 -> read .

    SEMICOLON       reduce using rule 35 (assignment3 -> read .)


state 230

    (68) funCall -> id OPENPAREN funCall2 CLOSEPAREN .

    SEMICOLON       reduce using rule 68 (funCall -> id OPENPAREN funCall2 CLOSEPAREN .)
    MULTIPLICATION  reduce using rule 68 (funCall -> id OPENPAREN funCall2 CLOSEPAREN .)
    DIVISION        reduce using rule 68 (funCall -> id OPENPAREN funCall2 CLOSEPAREN .)
    ADDITION        reduce using rule 68 (funCall -> id OPENPAREN funCall2 CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 68 (funCall -> id OPENPAREN funCall2 CLOSEPAREN .)
    GREATER         reduce using rule 68 (funCall -> id OPENPAREN funCall2 CLOSEPAREN .)
    LESS            reduce using rule 68 (funCall -> id OPENPAREN funCall2 CLOSEPAREN .)
    NOTEQUAL        reduce using rule 68 (funCall -> id OPENPAREN funCall2 CLOSEPAREN .)
    ISEQUAL         reduce using rule 68 (funCall -> id OPENPAREN funCall2 CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 68 (funCall -> id OPENPAREN funCall2 CLOSEPAREN .)
    COMMA           reduce using rule 68 (funCall -> id OPENPAREN funCall2 CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 68 (funCall -> id OPENPAREN funCall2 CLOSEPAREN .)


state 231

    (72) funCall2 -> exp funCall3 .

    CLOSEPAREN      reduce using rule 72 (funCall2 -> exp funCall3 .)


state 232

    (74) funCall3 -> COMMA . funCall2
    (72) funCall2 -> . exp funCall3
    (73) funCall2 -> . empty
    (142) exp -> . term exp1
    (159) empty -> .
    (148) term -> . factor term1
    (153) factor -> . vcte
    (154) factor -> . factor1
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (155) factor1 -> . factor2 vcte
    (156) factor1 -> . openP expression closeP
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (157) factor2 -> . ADDITION
    (158) factor2 -> . SUBSTRACTION
    (146) openP -> . OPENPAREN

    CLOSEPAREN      reduce using rule 159 (empty -> .)
    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63
    ADDITION        shift and go to state 117
    SUBSTRACTION    shift and go to state 118
    OPENPAREN       shift and go to state 116

    funCall2                       shift and go to state 264
    exp                            shift and go to state 190
    empty                          shift and go to state 191
    term                           shift and go to state 102
    factor                         shift and go to state 103
    vcte                           shift and go to state 104
    factor1                        shift and go to state 105
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    id                             shift and go to state 109
    funCall                        shift and go to state 110
    factor2                        shift and go to state 111
    openP                          shift and go to state 112

state 233

    (75) funCall3 -> empty .

    CLOSEPAREN      reduce using rule 75 (funCall3 -> empty .)


state 234

    (33) assignment2 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     reduce using rule 33 (assignment2 -> OPENBRACKET exp CLOSEBRACKET .)
    EQUALS          reduce using rule 33 (assignment2 -> OPENBRACKET exp CLOSEBRACKET .)


state 235

    (89) condition -> IF head_cond body condition1 .

    IF              reduce using rule 89 (condition -> IF head_cond body condition1 .)
    PRINT           reduce using rule 89 (condition -> IF head_cond body condition1 .)
    READ            reduce using rule 89 (condition -> IF head_cond body condition1 .)
    RETURN          reduce using rule 89 (condition -> IF head_cond body condition1 .)
    ID              reduce using rule 89 (condition -> IF head_cond body condition1 .)
    REPEAT          reduce using rule 89 (condition -> IF head_cond body condition1 .)
    CIRCLE          reduce using rule 89 (condition -> IF head_cond body condition1 .)
    SQUARE          reduce using rule 89 (condition -> IF head_cond body condition1 .)
    TRIANGLE        reduce using rule 89 (condition -> IF head_cond body condition1 .)
    RECTANGLE       reduce using rule 89 (condition -> IF head_cond body condition1 .)
    HIDE_STAR       reduce using rule 89 (condition -> IF head_cond body condition1 .)
    SHOW_STAR       reduce using rule 89 (condition -> IF head_cond body condition1 .)
    COLOR_STAR      reduce using rule 89 (condition -> IF head_cond body condition1 .)
    SIZE_STAR       reduce using rule 89 (condition -> IF head_cond body condition1 .)
    SETXY           reduce using rule 89 (condition -> IF head_cond body condition1 .)
    HAND_DOWN       reduce using rule 89 (condition -> IF head_cond body condition1 .)
    HAND_UP         reduce using rule 89 (condition -> IF head_cond body condition1 .)
    GO              reduce using rule 89 (condition -> IF head_cond body condition1 .)
    LEFT            reduce using rule 89 (condition -> IF head_cond body condition1 .)
    RIGHT           reduce using rule 89 (condition -> IF head_cond body condition1 .)
    BACK            reduce using rule 89 (condition -> IF head_cond body condition1 .)
    ARC             reduce using rule 89 (condition -> IF head_cond body condition1 .)
    WHILE           reduce using rule 89 (condition -> IF head_cond body condition1 .)
    FOR             reduce using rule 89 (condition -> IF head_cond body condition1 .)
    CLOSEBRACES     reduce using rule 89 (condition -> IF head_cond body condition1 .)


state 236

    (90) condition1 -> elseif . head_cond body condition1
    (95) head_cond -> . OPENPAREN expression close_condition

    OPENPAREN       shift and go to state 129

    head_cond                      shift and go to state 265

state 237

    (91) condition1 -> else . body
    (96) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 138

    body                           shift and go to state 266

state 238

    (92) condition1 -> empty .

    IF              reduce using rule 92 (condition1 -> empty .)
    PRINT           reduce using rule 92 (condition1 -> empty .)
    READ            reduce using rule 92 (condition1 -> empty .)
    RETURN          reduce using rule 92 (condition1 -> empty .)
    ID              reduce using rule 92 (condition1 -> empty .)
    REPEAT          reduce using rule 92 (condition1 -> empty .)
    CIRCLE          reduce using rule 92 (condition1 -> empty .)
    SQUARE          reduce using rule 92 (condition1 -> empty .)
    TRIANGLE        reduce using rule 92 (condition1 -> empty .)
    RECTANGLE       reduce using rule 92 (condition1 -> empty .)
    HIDE_STAR       reduce using rule 92 (condition1 -> empty .)
    SHOW_STAR       reduce using rule 92 (condition1 -> empty .)
    COLOR_STAR      reduce using rule 92 (condition1 -> empty .)
    SIZE_STAR       reduce using rule 92 (condition1 -> empty .)
    SETXY           reduce using rule 92 (condition1 -> empty .)
    HAND_DOWN       reduce using rule 92 (condition1 -> empty .)
    HAND_UP         reduce using rule 92 (condition1 -> empty .)
    GO              reduce using rule 92 (condition1 -> empty .)
    LEFT            reduce using rule 92 (condition1 -> empty .)
    RIGHT           reduce using rule 92 (condition1 -> empty .)
    BACK            reduce using rule 92 (condition1 -> empty .)
    ARC             reduce using rule 92 (condition1 -> empty .)
    WHILE           reduce using rule 92 (condition1 -> empty .)
    FOR             reduce using rule 92 (condition1 -> empty .)
    CLOSEBRACES     reduce using rule 92 (condition1 -> empty .)


state 239

    (93) elseif -> ELSEIF .

    OPENPAREN       reduce using rule 93 (elseif -> ELSEIF .)


state 240

    (94) else -> ELSE .

    OPENBRACES      reduce using rule 94 (else -> ELSE .)


state 241

    (95) head_cond -> OPENPAREN expression close_condition .

    OPENBRACES      reduce using rule 95 (head_cond -> OPENPAREN expression close_condition .)


state 242

    (97) close_condition -> CLOSEPAREN .

    OPENBRACES      reduce using rule 97 (close_condition -> CLOSEPAREN .)


state 243

    (61) print -> PRINT OPENPAREN expression CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 267


state 244

    (62) read -> READ OPENPAREN id read1 . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 268


state 245

    (63) read1 -> OPENBRACKET . exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (64) read1 -> OPENBRACKET . exp CLOSEBRACKET
    (142) exp -> . term exp1
    (148) term -> . factor term1
    (153) factor -> . vcte
    (154) factor -> . factor1
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (155) factor1 -> . factor2 vcte
    (156) factor1 -> . openP expression closeP
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (157) factor2 -> . ADDITION
    (158) factor2 -> . SUBSTRACTION
    (146) openP -> . OPENPAREN

    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63
    ADDITION        shift and go to state 117
    SUBSTRACTION    shift and go to state 118
    OPENPAREN       shift and go to state 116

    exp                            shift and go to state 269
    term                           shift and go to state 102
    factor                         shift and go to state 103
    vcte                           shift and go to state 104
    factor1                        shift and go to state 105
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    id                             shift and go to state 109
    funCall                        shift and go to state 110
    factor2                        shift and go to state 111
    openP                          shift and go to state 112

state 246

    (65) read1 -> empty .

    CLOSEPAREN      reduce using rule 65 (read1 -> empty .)


state 247

    (129) graphr -> repeat rep OPENBRACES graphstmt . graphr1 CLOSEBRACES
    (130) graphr1 -> . graphstmt graphr1
    (131) graphr1 -> . empty
    (110) graphstmt -> . graphfig
    (111) graphstmt -> . graphview
    (112) graphstmt -> . graphmove
    (159) empty -> .
    (113) graphfig -> . graphfig1 SEMICOLON
    (114) graphfig -> . graphfig2 SEMICOLON
    (134) graphview -> . graphview0 SEMICOLON
    (135) graphview -> . graphview1 SEMICOLON
    (136) graphview -> . graphview2 SEMICOLON
    (119) graphmove -> . graphmove0 SEMICOLON
    (120) graphmove -> . graphmove1 SEMICOLON
    (121) graphmove -> . graphmove2 SEMICOLON
    (115) graphfig1 -> . CIRCLE unaExp
    (116) graphfig1 -> . SQUARE unaExp
    (117) graphfig2 -> . TRIANGLE dosExp
    (118) graphfig2 -> . RECTANGLE dosExp
    (137) graphview0 -> . HIDE_STAR
    (138) graphview0 -> . SHOW_STAR
    (139) graphview1 -> . COLOR_STAR unaExp
    (140) graphview1 -> . SIZE_STAR unaExp
    (141) graphview2 -> . SETXY dosExp
    (122) graphmove0 -> . HAND_DOWN
    (123) graphmove0 -> . HAND_UP
    (124) graphmove1 -> . GO unaExp
    (125) graphmove1 -> . LEFT unaExp
    (126) graphmove1 -> . RIGHT unaExp
    (127) graphmove1 -> . BACK unaExp
    (128) graphmove2 -> . ARC dosExp

    CLOSEBRACES     reduce using rule 159 (empty -> .)
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92

    graphstmt                      shift and go to state 270
    graphr1                        shift and go to state 271
    empty                          shift and go to state 272
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73

state 248

    (132) rep -> OPENPAREN exp CLOSEPAREN .

    OPENBRACES      reduce using rule 132 (rep -> OPENPAREN exp CLOSEPAREN .)


state 249

    (96) body -> OPENBRACES body1 CLOSEBRACES .

    IF              reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    PRINT           reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    READ            reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    RETURN          reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    ID              reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    REPEAT          reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    CIRCLE          reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    SQUARE          reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    SETXY           reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_UP         reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    GO              reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    LEFT            reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    RIGHT           reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    BACK            reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    ARC             reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    WHILE           reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    FOR             reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSEIF          reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSE            reduce using rule 96 (body -> OPENBRACES body1 CLOSEBRACES .)


state 250

    (98) body1 -> stmt body1 .

    CLOSEBRACES     reduce using rule 98 (body1 -> stmt body1 .)


state 251

    (106) while1 -> while_w OPENPAREN expression CLOSEPAREN .

    OPENBRACES      reduce using rule 106 (while1 -> while_w OPENPAREN expression CLOSEPAREN .)


state 252

    (101) for1 -> forInit OPENPAREN ID for2 .

    OPENBRACES      reduce using rule 101 (for1 -> forInit OPENPAREN ID for2 .)


state 253

    (102) for2 -> TWODOTS . exp for3
    (142) exp -> . term exp1
    (148) term -> . factor term1
    (153) factor -> . vcte
    (154) factor -> . factor1
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (155) factor1 -> . factor2 vcte
    (156) factor1 -> . openP expression closeP
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (157) factor2 -> . ADDITION
    (158) factor2 -> . SUBSTRACTION
    (146) openP -> . OPENPAREN

    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63
    ADDITION        shift and go to state 117
    SUBSTRACTION    shift and go to state 118
    OPENPAREN       shift and go to state 116

    exp                            shift and go to state 273
    term                           shift and go to state 102
    factor                         shift and go to state 103
    vcte                           shift and go to state 104
    factor1                        shift and go to state 105
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    id                             shift and go to state 109
    funCall                        shift and go to state 110
    factor2                        shift and go to state 111
    openP                          shift and go to state 112

state 254

    (109) unaExp -> OPENPAREN exp CLOSEPAREN .

    SEMICOLON       reduce using rule 109 (unaExp -> OPENPAREN exp CLOSEPAREN .)


state 255

    (108) dosExp -> OPENPAREN exp COMMA . exp CLOSEPAREN
    (142) exp -> . term exp1
    (148) term -> . factor term1
    (153) factor -> . vcte
    (154) factor -> . factor1
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (155) factor1 -> . factor2 vcte
    (156) factor1 -> . openP expression closeP
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (157) factor2 -> . ADDITION
    (158) factor2 -> . SUBSTRACTION
    (146) openP -> . OPENPAREN

    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63
    ADDITION        shift and go to state 117
    SUBSTRACTION    shift and go to state 118
    OPENPAREN       shift and go to state 116

    exp                            shift and go to state 274
    term                           shift and go to state 102
    factor                         shift and go to state 103
    vcte                           shift and go to state 104
    factor1                        shift and go to state 105
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    id                             shift and go to state 109
    funCall                        shift and go to state 110
    factor2                        shift and go to state 111
    openP                          shift and go to state 112

state 256

    (47) function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .

    FUN             reduce using rule 47 (function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .)
    MULTIPLICATION  reduce using rule 47 (function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .)


state 257

    (49) termina_fun -> CLOSEBRACES .

    FUN             reduce using rule 49 (termina_fun -> CLOSEBRACES .)
    MULTIPLICATION  reduce using rule 49 (termina_fun -> CLOSEBRACES .)


state 258

    (53) function4 -> stmt function4 .

    CLOSEBRACES     reduce using rule 53 (function4 -> stmt function4 .)


state 259

    (55) function5 -> COMMA funParam function5 .

    CLOSEPAREN      reduce using rule 55 (function5 -> COMMA funParam function5 .)


state 260

    (41) vcte1 -> OPENBRACKET exp CLOSEBRACKET . vcte3
    (43) vcte3 -> . OPENBRACKET exp CLOSEBRACKET
    (44) vcte3 -> . empty
    (159) empty -> .

    OPENBRACKET     shift and go to state 275
    MULTIPLICATION  reduce using rule 159 (empty -> .)
    DIVISION        reduce using rule 159 (empty -> .)
    ADDITION        reduce using rule 159 (empty -> .)
    SUBSTRACTION    reduce using rule 159 (empty -> .)
    SEMICOLON       reduce using rule 159 (empty -> .)
    GREATER         reduce using rule 159 (empty -> .)
    LESS            reduce using rule 159 (empty -> .)
    NOTEQUAL        reduce using rule 159 (empty -> .)
    ISEQUAL         reduce using rule 159 (empty -> .)
    CLOSEPAREN      reduce using rule 159 (empty -> .)
    COMMA           reduce using rule 159 (empty -> .)
    CLOSEBRACKET    reduce using rule 159 (empty -> .)

    vcte3                          shift and go to state 276
    empty                          shift and go to state 277

state 261

    (83) expression1 -> loper exp .

    CLOSEPAREN      reduce using rule 83 (expression1 -> loper exp .)


state 262

    (16) vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .

    SEMICOLON       reduce using rule 16 (vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .)
    EQUALS          reduce using rule 16 (vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .)


state 263

    (29) assignment -> id assignment1 equals assignment3 SEMICOLON .

    IF              reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    PRINT           reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    READ            reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    RETURN          reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    ID              reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    REPEAT          reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    CIRCLE          reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SQUARE          reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    TRIANGLE        reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    RECTANGLE       reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    HIDE_STAR       reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SHOW_STAR       reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    COLOR_STAR      reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SIZE_STAR       reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SETXY           reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    HAND_DOWN       reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    HAND_UP         reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    GO              reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    LEFT            reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    RIGHT           reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    BACK            reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    ARC             reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    WHILE           reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    FOR             reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    CLOSEBRACES     reduce using rule 29 (assignment -> id assignment1 equals assignment3 SEMICOLON .)


state 264

    (74) funCall3 -> COMMA funCall2 .

    CLOSEPAREN      reduce using rule 74 (funCall3 -> COMMA funCall2 .)


state 265

    (90) condition1 -> elseif head_cond . body condition1
    (96) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 138

    body                           shift and go to state 278

state 266

    (91) condition1 -> else body .

    IF              reduce using rule 91 (condition1 -> else body .)
    PRINT           reduce using rule 91 (condition1 -> else body .)
    READ            reduce using rule 91 (condition1 -> else body .)
    RETURN          reduce using rule 91 (condition1 -> else body .)
    ID              reduce using rule 91 (condition1 -> else body .)
    REPEAT          reduce using rule 91 (condition1 -> else body .)
    CIRCLE          reduce using rule 91 (condition1 -> else body .)
    SQUARE          reduce using rule 91 (condition1 -> else body .)
    TRIANGLE        reduce using rule 91 (condition1 -> else body .)
    RECTANGLE       reduce using rule 91 (condition1 -> else body .)
    HIDE_STAR       reduce using rule 91 (condition1 -> else body .)
    SHOW_STAR       reduce using rule 91 (condition1 -> else body .)
    COLOR_STAR      reduce using rule 91 (condition1 -> else body .)
    SIZE_STAR       reduce using rule 91 (condition1 -> else body .)
    SETXY           reduce using rule 91 (condition1 -> else body .)
    HAND_DOWN       reduce using rule 91 (condition1 -> else body .)
    HAND_UP         reduce using rule 91 (condition1 -> else body .)
    GO              reduce using rule 91 (condition1 -> else body .)
    LEFT            reduce using rule 91 (condition1 -> else body .)
    RIGHT           reduce using rule 91 (condition1 -> else body .)
    BACK            reduce using rule 91 (condition1 -> else body .)
    ARC             reduce using rule 91 (condition1 -> else body .)
    WHILE           reduce using rule 91 (condition1 -> else body .)
    FOR             reduce using rule 91 (condition1 -> else body .)
    CLOSEBRACES     reduce using rule 91 (condition1 -> else body .)


state 267

    (61) print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .

    IF              reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 61 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)


state 268

    (62) read -> READ OPENPAREN id read1 CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 279


state 269

    (63) read1 -> OPENBRACKET exp . CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (64) read1 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 280


state 270

    (130) graphr1 -> graphstmt . graphr1
    (130) graphr1 -> . graphstmt graphr1
    (131) graphr1 -> . empty
    (110) graphstmt -> . graphfig
    (111) graphstmt -> . graphview
    (112) graphstmt -> . graphmove
    (159) empty -> .
    (113) graphfig -> . graphfig1 SEMICOLON
    (114) graphfig -> . graphfig2 SEMICOLON
    (134) graphview -> . graphview0 SEMICOLON
    (135) graphview -> . graphview1 SEMICOLON
    (136) graphview -> . graphview2 SEMICOLON
    (119) graphmove -> . graphmove0 SEMICOLON
    (120) graphmove -> . graphmove1 SEMICOLON
    (121) graphmove -> . graphmove2 SEMICOLON
    (115) graphfig1 -> . CIRCLE unaExp
    (116) graphfig1 -> . SQUARE unaExp
    (117) graphfig2 -> . TRIANGLE dosExp
    (118) graphfig2 -> . RECTANGLE dosExp
    (137) graphview0 -> . HIDE_STAR
    (138) graphview0 -> . SHOW_STAR
    (139) graphview1 -> . COLOR_STAR unaExp
    (140) graphview1 -> . SIZE_STAR unaExp
    (141) graphview2 -> . SETXY dosExp
    (122) graphmove0 -> . HAND_DOWN
    (123) graphmove0 -> . HAND_UP
    (124) graphmove1 -> . GO unaExp
    (125) graphmove1 -> . LEFT unaExp
    (126) graphmove1 -> . RIGHT unaExp
    (127) graphmove1 -> . BACK unaExp
    (128) graphmove2 -> . ARC dosExp

    CLOSEBRACES     reduce using rule 159 (empty -> .)
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92

    graphstmt                      shift and go to state 270
    graphr1                        shift and go to state 281
    empty                          shift and go to state 272
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73

state 271

    (129) graphr -> repeat rep OPENBRACES graphstmt graphr1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 282


state 272

    (131) graphr1 -> empty .

    CLOSEBRACES     reduce using rule 131 (graphr1 -> empty .)


state 273

    (102) for2 -> TWODOTS exp . for3
    (103) for3 -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 284

    for3                           shift and go to state 283

state 274

    (108) dosExp -> OPENPAREN exp COMMA exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 285


state 275

    (43) vcte3 -> OPENBRACKET . exp CLOSEBRACKET
    (142) exp -> . term exp1
    (148) term -> . factor term1
    (153) factor -> . vcte
    (154) factor -> . factor1
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (155) factor1 -> . factor2 vcte
    (156) factor1 -> . openP expression closeP
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (157) factor2 -> . ADDITION
    (158) factor2 -> . SUBSTRACTION
    (146) openP -> . OPENPAREN

    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63
    ADDITION        shift and go to state 117
    SUBSTRACTION    shift and go to state 118
    OPENPAREN       shift and go to state 116

    exp                            shift and go to state 286
    term                           shift and go to state 102
    factor                         shift and go to state 103
    vcte                           shift and go to state 104
    factor1                        shift and go to state 105
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    id                             shift and go to state 109
    funCall                        shift and go to state 110
    factor2                        shift and go to state 111
    openP                          shift and go to state 112

state 276

    (41) vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .

    MULTIPLICATION  reduce using rule 41 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    DIVISION        reduce using rule 41 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ADDITION        reduce using rule 41 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    SUBSTRACTION    reduce using rule 41 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    SEMICOLON       reduce using rule 41 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    GREATER         reduce using rule 41 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    LESS            reduce using rule 41 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    NOTEQUAL        reduce using rule 41 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ISEQUAL         reduce using rule 41 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CLOSEPAREN      reduce using rule 41 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    COMMA           reduce using rule 41 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CLOSEBRACKET    reduce using rule 41 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)


state 277

    (44) vcte3 -> empty .

    MULTIPLICATION  reduce using rule 44 (vcte3 -> empty .)
    DIVISION        reduce using rule 44 (vcte3 -> empty .)
    ADDITION        reduce using rule 44 (vcte3 -> empty .)
    SUBSTRACTION    reduce using rule 44 (vcte3 -> empty .)
    SEMICOLON       reduce using rule 44 (vcte3 -> empty .)
    GREATER         reduce using rule 44 (vcte3 -> empty .)
    LESS            reduce using rule 44 (vcte3 -> empty .)
    NOTEQUAL        reduce using rule 44 (vcte3 -> empty .)
    ISEQUAL         reduce using rule 44 (vcte3 -> empty .)
    CLOSEPAREN      reduce using rule 44 (vcte3 -> empty .)
    COMMA           reduce using rule 44 (vcte3 -> empty .)
    CLOSEBRACKET    reduce using rule 44 (vcte3 -> empty .)


state 278

    (90) condition1 -> elseif head_cond body . condition1
    (90) condition1 -> . elseif head_cond body condition1
    (91) condition1 -> . else body
    (92) condition1 -> . empty
    (93) elseif -> . ELSEIF
    (94) else -> . ELSE
    (159) empty -> .

    ELSEIF          shift and go to state 239
    ELSE            shift and go to state 240
    IF              reduce using rule 159 (empty -> .)
    PRINT           reduce using rule 159 (empty -> .)
    READ            reduce using rule 159 (empty -> .)
    RETURN          reduce using rule 159 (empty -> .)
    ID              reduce using rule 159 (empty -> .)
    REPEAT          reduce using rule 159 (empty -> .)
    CIRCLE          reduce using rule 159 (empty -> .)
    SQUARE          reduce using rule 159 (empty -> .)
    TRIANGLE        reduce using rule 159 (empty -> .)
    RECTANGLE       reduce using rule 159 (empty -> .)
    HIDE_STAR       reduce using rule 159 (empty -> .)
    SHOW_STAR       reduce using rule 159 (empty -> .)
    COLOR_STAR      reduce using rule 159 (empty -> .)
    SIZE_STAR       reduce using rule 159 (empty -> .)
    SETXY           reduce using rule 159 (empty -> .)
    HAND_DOWN       reduce using rule 159 (empty -> .)
    HAND_UP         reduce using rule 159 (empty -> .)
    GO              reduce using rule 159 (empty -> .)
    LEFT            reduce using rule 159 (empty -> .)
    RIGHT           reduce using rule 159 (empty -> .)
    BACK            reduce using rule 159 (empty -> .)
    ARC             reduce using rule 159 (empty -> .)
    WHILE           reduce using rule 159 (empty -> .)
    FOR             reduce using rule 159 (empty -> .)
    CLOSEBRACES     reduce using rule 159 (empty -> .)

    elseif                         shift and go to state 236
    condition1                     shift and go to state 287
    else                           shift and go to state 237
    empty                          shift and go to state 238

state 279

    (62) read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .

    IF              reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 62 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)


state 280

    (63) read1 -> OPENBRACKET exp CLOSEBRACKET . OPENBRACKET exp CLOSEBRACKET
    (64) read1 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     shift and go to state 288
    CLOSEPAREN      reduce using rule 64 (read1 -> OPENBRACKET exp CLOSEBRACKET .)


state 281

    (130) graphr1 -> graphstmt graphr1 .

    CLOSEBRACES     reduce using rule 130 (graphr1 -> graphstmt graphr1 .)


state 282

    (129) graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .

    IF              reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    PRINT           reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    READ            reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RETURN          reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    ID              reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    REPEAT          reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    CIRCLE          reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SQUARE          reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SETXY           reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HAND_UP         reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    GO              reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    LEFT            reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RIGHT           reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    BACK            reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    ARC             reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    WHILE           reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    FOR             reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 129 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)


state 283

    (102) for2 -> TWODOTS exp for3 .

    OPENBRACES      reduce using rule 102 (for2 -> TWODOTS exp for3 .)


state 284

    (103) for3 -> CLOSEPAREN .

    OPENBRACES      reduce using rule 103 (for3 -> CLOSEPAREN .)


state 285

    (108) dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN .

    SEMICOLON       reduce using rule 108 (dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN .)


state 286

    (43) vcte3 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 289


state 287

    (90) condition1 -> elseif head_cond body condition1 .

    IF              reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)
    PRINT           reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)
    READ            reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)
    RETURN          reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)
    ID              reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)
    REPEAT          reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)
    CIRCLE          reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)
    SQUARE          reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)
    TRIANGLE        reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)
    RECTANGLE       reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)
    HIDE_STAR       reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)
    SHOW_STAR       reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)
    COLOR_STAR      reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)
    SIZE_STAR       reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)
    SETXY           reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)
    HAND_DOWN       reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)
    HAND_UP         reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)
    GO              reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)
    LEFT            reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)
    RIGHT           reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)
    BACK            reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)
    ARC             reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)
    WHILE           reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)
    FOR             reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)
    CLOSEBRACES     reduce using rule 90 (condition1 -> elseif head_cond body condition1 .)


state 288

    (63) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET . exp CLOSEBRACKET
    (142) exp -> . term exp1
    (148) term -> . factor term1
    (153) factor -> . vcte
    (154) factor -> . factor1
    (36) vcte -> . cte_int
    (37) vcte -> . cte_float
    (38) vcte -> . cte_char
    (39) vcte -> . id vcte1
    (40) vcte -> . funCall
    (155) factor1 -> . factor2 vcte
    (156) factor1 -> . openP expression closeP
    (76) cte_int -> . CTEINT
    (77) cte_float -> . CTEFLOAT
    (78) cte_char -> . CTECHAR
    (67) id -> . ID
    (68) funCall -> . id OPENPAREN funCall2 CLOSEPAREN
    (157) factor2 -> . ADDITION
    (158) factor2 -> . SUBSTRACTION
    (146) openP -> . OPENPAREN

    CTEINT          shift and go to state 113
    CTEFLOAT        shift and go to state 114
    CTECHAR         shift and go to state 115
    ID              shift and go to state 63
    ADDITION        shift and go to state 117
    SUBSTRACTION    shift and go to state 118
    OPENPAREN       shift and go to state 116

    exp                            shift and go to state 290
    term                           shift and go to state 102
    factor                         shift and go to state 103
    vcte                           shift and go to state 104
    factor1                        shift and go to state 105
    cte_int                        shift and go to state 106
    cte_float                      shift and go to state 107
    cte_char                       shift and go to state 108
    id                             shift and go to state 109
    funCall                        shift and go to state 110
    factor2                        shift and go to state 111
    openP                          shift and go to state 112

state 289

    (43) vcte3 -> OPENBRACKET exp CLOSEBRACKET .

    MULTIPLICATION  reduce using rule 43 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    DIVISION        reduce using rule 43 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ADDITION        reduce using rule 43 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    SUBSTRACTION    reduce using rule 43 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    SEMICOLON       reduce using rule 43 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    GREATER         reduce using rule 43 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    LESS            reduce using rule 43 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 43 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ISEQUAL         reduce using rule 43 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 43 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    COMMA           reduce using rule 43 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 43 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)


state 290

    (63) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 291


state 291

    (63) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .

    CLOSEPAREN      reduce using rule 63 (read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 125 resolved using rule (assignment1 -> assignment2)
WARNING: rejected rule (empty -> <empty>) in state 125
WARNING: reduce/reduce conflict in state 135 resolved using rule (return1 -> vcte)
WARNING: rejected rule (factor -> vcte) in state 135
