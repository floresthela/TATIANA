Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON declara_vars program_modules
Rule 2     program_modules -> program_fun star
Rule 3     program_fun -> function program_fun
Rule 4     program_fun -> empty
Rule 5     star -> starI declara_vars star1 CLOSEBRACES
Rule 6     starI -> star_sign OPENBRACES
Rule 7     star_sign -> MULTIPLICATION
Rule 8     star1 -> stmt star1
Rule 9     star1 -> empty
Rule 10    declara_vars -> vars declara_vars
Rule 11    declara_vars -> empty
Rule 12    vars -> type ID vars1 equals exp SEMICOLON
Rule 13    vars -> type ID vars1 SEMICOLON
Rule 14    vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3
Rule 15    vars1 -> empty
Rule 16    vars3 -> OPENBRACKET CTEINT CLOSEBRACKET
Rule 17    vars3 -> empty
Rule 18    loop -> while
Rule 19    loop -> for
Rule 20    stmt -> assignment
Rule 21    stmt -> condition
Rule 22    stmt -> print
Rule 23    stmt -> loop
Rule 24    stmt -> read
Rule 25    stmt -> graphstmt
Rule 26    stmt -> graphr
Rule 27    stmt -> funCall SEMICOLON
Rule 28    stmt -> return
Rule 29    functionI -> type ID
Rule 30    functionI -> VOID ID
Rule 31    function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun
Rule 32    inicia_fun -> OPENBRACES
Rule 33    termina_fun -> CLOSEBRACES
Rule 34    function2 -> OPENPAREN function3 CLOSEPAREN
Rule 35    function3 -> funParam function5
Rule 36    function3 -> empty
Rule 37    function4 -> stmt function4
Rule 38    function4 -> empty
Rule 39    function5 -> COMMA funParam function5
Rule 40    function5 -> empty
Rule 41    funParam -> type ID
Rule 42    type -> INT
Rule 43    type -> FLOAT
Rule 44    type -> CHAR
Rule 45    print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
Rule 46    read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
Rule 47    read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
Rule 48    read1 -> OPENBRACKET exp CLOSEBRACKET
Rule 49    read1 -> empty
Rule 50    equals -> EQUALS
Rule 51    id -> ID
Rule 52    assignment -> id assignment1 equals assignment3 SEMICOLON
Rule 53    assignment1 -> assignment2
Rule 54    assignment1 -> assignment2 assignment1
Rule 55    assignment1 -> empty
Rule 56    assignment2 -> OPENBRACKET exp CLOSEBRACKET
Rule 57    assignment3 -> exp
Rule 58    assignment3 -> read
Rule 59    vcte -> cte_int
Rule 60    vcte -> cte_float
Rule 61    vcte -> cte_char
Rule 62    vcte -> id vcte1
Rule 63    vcte -> funCall
Rule 64    vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3
Rule 65    vcte1 -> empty
Rule 66    vcte3 -> OPENBRACKET exp CLOSEBRACKET
Rule 67    vcte3 -> empty
Rule 68    cte_int -> CTEINT
Rule 69    cte_float -> CTEFLOAT
Rule 70    cte_char -> CTECHAR
Rule 71    return -> RETURN return1 SEMICOLON
Rule 72    return1 -> vcte
Rule 73    return1 -> exp
Rule 74    expression -> exp expression1
Rule 75    expression1 -> loper exp
Rule 76    expression1 -> empty
Rule 77    loper -> GREATER
Rule 78    loper -> LESS
Rule 79    loper -> NOTEQUAL
Rule 80    loper -> ISEQUAL
Rule 81    condition -> IF head_cond body condition1
Rule 82    condition1 -> elseif head_cond body condition1
Rule 83    condition1 -> else body
Rule 84    condition1 -> empty
Rule 85    elseif -> ELSEIF
Rule 86    else -> ELSE
Rule 87    head_cond -> OPENPAREN expression close_condition
Rule 88    body -> OPENBRACES body1 CLOSEBRACES
Rule 89    close_condition -> CLOSEPAREN
Rule 90    body1 -> stmt body1
Rule 91    body1 -> empty
Rule 92    for -> for1 body
Rule 93    for1 -> forInit OPENPAREN ID for2
Rule 94    for2 -> TWODOTS exp for3
Rule 95    for3 -> CLOSEPAREN
Rule 96    forInit -> FOR
Rule 97    while -> while1 body
Rule 98    while1 -> while_w OPENPAREN expression CLOSEPAREN
Rule 99    while_w -> WHILE
Rule 100   funCall -> ID OPENPAREN funCall2 CLOSEPAREN
Rule 101   funCall2 -> exp funCall3
Rule 102   funCall2 -> empty
Rule 103   funCall3 -> COMMA exp funCall2
Rule 104   funCall3 -> empty
Rule 105   dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN
Rule 106   unaExp -> OPENPAREN exp CLOSEPAREN
Rule 107   graphstmt -> graphfig
Rule 108   graphstmt -> graphview
Rule 109   graphstmt -> graphmove
Rule 110   graphfig -> graphfig1 SEMICOLON
Rule 111   graphfig -> graphfig2 SEMICOLON
Rule 112   graphfig1 -> CIRCLE unaExp
Rule 113   graphfig1 -> SQUARE unaExp
Rule 114   graphfig2 -> TRIANGLE dosExp
Rule 115   graphfig2 -> RECTANGLE dosExp
Rule 116   graphmove -> graphmove0 SEMICOLON
Rule 117   graphmove -> graphmove1 SEMICOLON
Rule 118   graphmove -> graphmove2 SEMICOLON
Rule 119   graphmove0 -> HAND_DOWN
Rule 120   graphmove0 -> HAND_UP
Rule 121   graphmove1 -> GO unaExp
Rule 122   graphmove1 -> LEFT unaExp
Rule 123   graphmove1 -> RIGHT unaExp
Rule 124   graphmove1 -> BACK unaExp
Rule 125   graphmove2 -> ARC dosExp
Rule 126   graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
Rule 127   graphr1 -> graphstmt graphr1
Rule 128   graphr1 -> empty
Rule 129   rep -> OPENPAREN exp CLOSEPAREN
Rule 130   repeat -> REPEAT
Rule 131   graphview -> graphview0 SEMICOLON
Rule 132   graphview -> graphview1 SEMICOLON
Rule 133   graphview -> graphview2 SEMICOLON
Rule 134   graphview0 -> HIDE_STAR
Rule 135   graphview0 -> SHOW_STAR
Rule 136   graphview1 -> COLOR_STAR unaExp
Rule 137   graphview1 -> SIZE_STAR unaExp
Rule 138   graphview2 -> SETXY dosExp
Rule 139   exp -> term exp1
Rule 140   exp1 -> ADDITION exp
Rule 141   exp1 -> SUBSTRACTION exp
Rule 142   exp1 -> empty
Rule 143   openP -> OPENPAREN
Rule 144   closeP -> CLOSEPAREN
Rule 145   factor -> vcte
Rule 146   factor -> factor1
Rule 147   factor1 -> factor2 vcte
Rule 148   factor1 -> openP expression closeP
Rule 149   factor2 -> ADDITION
Rule 150   factor2 -> SUBSTRACTION
Rule 151   term -> factor term1
Rule 152   term1 -> MULTIPLICATION term
Rule 153   term1 -> DIVISION term
Rule 154   term1 -> empty
Rule 155   empty -> <empty>

Terminals, with rules where they appear

ADDITION             : 140 149
ARC                  : 125
BACK                 : 124
CHAR                 : 44
CIRCLE               : 112
CLOSEBRACES          : 5 33 88 126
CLOSEBRACKET         : 14 16 47 47 48 56 64 66
CLOSEPAREN           : 34 45 46 89 95 98 100 105 106 129 144
COLOR_STAR           : 136
COMMA                : 39 103 105
CTECHAR              : 70
CTEFLOAT             : 69
CTEINT               : 14 16 68
DIVISION             : 153
ELSE                 : 86
ELSEIF               : 85
EQUALS               : 50
FLOAT                : 43
FOR                  : 96
FUN                  : 31
GO                   : 121
GREATER              : 77
HAND_DOWN            : 119
HAND_UP              : 120
HIDE_STAR            : 134
ID                   : 1 12 13 29 30 41 51 93 100
IF                   : 81
INT                  : 42
ISEQUAL              : 80
LEFT                 : 122
LESS                 : 78
MULTIPLICATION       : 7 152
NOTEQUAL             : 79
OPENBRACES           : 6 32 88 126
OPENBRACKET          : 14 16 47 47 48 56 64 66
OPENPAREN            : 34 45 46 87 93 98 100 105 106 129 143
PRINT                : 45
PROGRAM              : 1
READ                 : 46
RECTANGLE            : 115
REPEAT               : 130
RETURN               : 71
RIGHT                : 123
SEMICOLON            : 1 12 13 27 45 46 52 71 110 111 116 117 118 131 132 133
SETXY                : 138
SHOW_STAR            : 135
SIZE_STAR            : 137
SQUARE               : 113
SUBSTRACTION         : 141 150
TRIANGLE             : 114
TWODOTS              : 94
VOID                 : 30
WHILE                : 99
error                : 

Nonterminals, with rules where they appear

assignment           : 20
assignment1          : 52 54
assignment2          : 53 54
assignment3          : 52
body                 : 81 82 83 92 97
body1                : 88 90
closeP               : 148
close_condition      : 87
condition            : 21
condition1           : 81 82
cte_char             : 61
cte_float            : 60
cte_int              : 59
declara_vars         : 1 5 10 31
dosExp               : 114 115 125 138
else                 : 83
elseif               : 82
empty                : 4 9 11 15 17 36 38 40 49 55 65 67 76 84 91 102 104 128 142 154
equals               : 12 52
exp                  : 12 47 47 48 56 57 64 66 73 74 75 94 101 103 105 105 106 129 140 141
exp1                 : 139
expression           : 45 87 98 148
expression1          : 74
factor               : 151
factor1              : 146
factor2              : 147
for                  : 19
for1                 : 92
for2                 : 93
for3                 : 94
forInit              : 93
funCall              : 27 63
funCall2             : 100 103
funCall3             : 101
funParam             : 35 39
function             : 3
function2            : 31
function3            : 34
function4            : 31 37
function5            : 35 39
functionI            : 31
graphfig             : 107
graphfig1            : 110
graphfig2            : 111
graphmove            : 109
graphmove0           : 116
graphmove1           : 117
graphmove2           : 118
graphr               : 26
graphr1              : 126 127
graphstmt            : 25 126 127
graphview            : 108
graphview0           : 131
graphview1           : 132
graphview2           : 133
head_cond            : 81 82
id                   : 46 52 62
inicia_fun           : 31
loop                 : 23
loper                : 75
openP                : 148
print                : 22
program              : 0
program_fun          : 2 3
program_modules      : 1
read                 : 24 58
read1                : 46
rep                  : 126
repeat               : 126
return               : 28
return1              : 71
star                 : 2
star1                : 5 8
starI                : 5
star_sign            : 6
stmt                 : 8 37 90
term                 : 139 152 153
term1                : 151
termina_fun          : 31
type                 : 12 13 29 41
unaExp               : 112 113 121 122 123 124 136 137
vars                 : 10
vars1                : 12 13
vars3                : 14
vcte                 : 72 145 147
vcte1                : 62
vcte3                : 64
while                : 18
while1               : 97
while_w              : 98

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON declara_vars program_modules

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON declara_vars program_modules

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON declara_vars program_modules

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . declara_vars program_modules
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (12) vars -> . type ID vars1 equals exp SEMICOLON
    (13) vars -> . type ID vars1 SEMICOLON
    (155) empty -> .
    (42) type -> . INT
    (43) type -> . FLOAT
    (44) type -> . CHAR

    FUN             reduce using rule 155 (empty -> .)
    MULTIPLICATION  reduce using rule 155 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    declara_vars                   shift and go to state 5
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 5

    (1) program -> PROGRAM ID SEMICOLON declara_vars . program_modules
    (2) program_modules -> . program_fun star
    (3) program_fun -> . function program_fun
    (4) program_fun -> . empty
    (31) function -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (155) empty -> .

    FUN             shift and go to state 16
    MULTIPLICATION  reduce using rule 155 (empty -> .)

    program_modules                shift and go to state 12
    program_fun                    shift and go to state 13
    function                       shift and go to state 14
    empty                          shift and go to state 15

state 6

    (10) declara_vars -> vars . declara_vars
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (12) vars -> . type ID vars1 equals exp SEMICOLON
    (13) vars -> . type ID vars1 SEMICOLON
    (155) empty -> .
    (42) type -> . INT
    (43) type -> . FLOAT
    (44) type -> . CHAR

    FUN             reduce using rule 155 (empty -> .)
    MULTIPLICATION  reduce using rule 155 (empty -> .)
    IF              reduce using rule 155 (empty -> .)
    PRINT           reduce using rule 155 (empty -> .)
    READ            reduce using rule 155 (empty -> .)
    ID              reduce using rule 155 (empty -> .)
    RETURN          reduce using rule 155 (empty -> .)
    REPEAT          reduce using rule 155 (empty -> .)
    CIRCLE          reduce using rule 155 (empty -> .)
    SQUARE          reduce using rule 155 (empty -> .)
    TRIANGLE        reduce using rule 155 (empty -> .)
    RECTANGLE       reduce using rule 155 (empty -> .)
    HIDE_STAR       reduce using rule 155 (empty -> .)
    SHOW_STAR       reduce using rule 155 (empty -> .)
    COLOR_STAR      reduce using rule 155 (empty -> .)
    SIZE_STAR       reduce using rule 155 (empty -> .)
    SETXY           reduce using rule 155 (empty -> .)
    HAND_DOWN       reduce using rule 155 (empty -> .)
    HAND_UP         reduce using rule 155 (empty -> .)
    GO              reduce using rule 155 (empty -> .)
    LEFT            reduce using rule 155 (empty -> .)
    RIGHT           reduce using rule 155 (empty -> .)
    BACK            reduce using rule 155 (empty -> .)
    ARC             reduce using rule 155 (empty -> .)
    WHILE           reduce using rule 155 (empty -> .)
    FOR             reduce using rule 155 (empty -> .)
    CLOSEBRACES     reduce using rule 155 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    vars                           shift and go to state 6
    declara_vars                   shift and go to state 17
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 7

    (11) declara_vars -> empty .

    FUN             reduce using rule 11 (declara_vars -> empty .)
    MULTIPLICATION  reduce using rule 11 (declara_vars -> empty .)
    IF              reduce using rule 11 (declara_vars -> empty .)
    PRINT           reduce using rule 11 (declara_vars -> empty .)
    READ            reduce using rule 11 (declara_vars -> empty .)
    ID              reduce using rule 11 (declara_vars -> empty .)
    RETURN          reduce using rule 11 (declara_vars -> empty .)
    REPEAT          reduce using rule 11 (declara_vars -> empty .)
    CIRCLE          reduce using rule 11 (declara_vars -> empty .)
    SQUARE          reduce using rule 11 (declara_vars -> empty .)
    TRIANGLE        reduce using rule 11 (declara_vars -> empty .)
    RECTANGLE       reduce using rule 11 (declara_vars -> empty .)
    HIDE_STAR       reduce using rule 11 (declara_vars -> empty .)
    SHOW_STAR       reduce using rule 11 (declara_vars -> empty .)
    COLOR_STAR      reduce using rule 11 (declara_vars -> empty .)
    SIZE_STAR       reduce using rule 11 (declara_vars -> empty .)
    SETXY           reduce using rule 11 (declara_vars -> empty .)
    HAND_DOWN       reduce using rule 11 (declara_vars -> empty .)
    HAND_UP         reduce using rule 11 (declara_vars -> empty .)
    GO              reduce using rule 11 (declara_vars -> empty .)
    LEFT            reduce using rule 11 (declara_vars -> empty .)
    RIGHT           reduce using rule 11 (declara_vars -> empty .)
    BACK            reduce using rule 11 (declara_vars -> empty .)
    ARC             reduce using rule 11 (declara_vars -> empty .)
    WHILE           reduce using rule 11 (declara_vars -> empty .)
    FOR             reduce using rule 11 (declara_vars -> empty .)
    CLOSEBRACES     reduce using rule 11 (declara_vars -> empty .)


state 8

    (12) vars -> type . ID vars1 equals exp SEMICOLON
    (13) vars -> type . ID vars1 SEMICOLON

    ID              shift and go to state 18


state 9

    (42) type -> INT .

    ID              reduce using rule 42 (type -> INT .)


state 10

    (43) type -> FLOAT .

    ID              reduce using rule 43 (type -> FLOAT .)


state 11

    (44) type -> CHAR .

    ID              reduce using rule 44 (type -> CHAR .)


state 12

    (1) program -> PROGRAM ID SEMICOLON declara_vars program_modules .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON declara_vars program_modules .)


state 13

    (2) program_modules -> program_fun . star
    (5) star -> . starI declara_vars star1 CLOSEBRACES
    (6) starI -> . star_sign OPENBRACES
    (7) star_sign -> . MULTIPLICATION

    MULTIPLICATION  shift and go to state 22

    star                           shift and go to state 19
    starI                          shift and go to state 20
    star_sign                      shift and go to state 21

state 14

    (3) program_fun -> function . program_fun
    (3) program_fun -> . function program_fun
    (4) program_fun -> . empty
    (31) function -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (155) empty -> .

    FUN             shift and go to state 16
    MULTIPLICATION  reduce using rule 155 (empty -> .)

    function                       shift and go to state 14
    program_fun                    shift and go to state 23
    empty                          shift and go to state 15

state 15

    (4) program_fun -> empty .

    MULTIPLICATION  reduce using rule 4 (program_fun -> empty .)


state 16

    (31) function -> FUN . functionI function2 inicia_fun declara_vars function4 termina_fun
    (29) functionI -> . type ID
    (30) functionI -> . VOID ID
    (42) type -> . INT
    (43) type -> . FLOAT
    (44) type -> . CHAR

    VOID            shift and go to state 26
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    functionI                      shift and go to state 24
    type                           shift and go to state 25

state 17

    (10) declara_vars -> vars declara_vars .

    FUN             reduce using rule 10 (declara_vars -> vars declara_vars .)
    MULTIPLICATION  reduce using rule 10 (declara_vars -> vars declara_vars .)
    IF              reduce using rule 10 (declara_vars -> vars declara_vars .)
    PRINT           reduce using rule 10 (declara_vars -> vars declara_vars .)
    READ            reduce using rule 10 (declara_vars -> vars declara_vars .)
    ID              reduce using rule 10 (declara_vars -> vars declara_vars .)
    RETURN          reduce using rule 10 (declara_vars -> vars declara_vars .)
    REPEAT          reduce using rule 10 (declara_vars -> vars declara_vars .)
    CIRCLE          reduce using rule 10 (declara_vars -> vars declara_vars .)
    SQUARE          reduce using rule 10 (declara_vars -> vars declara_vars .)
    TRIANGLE        reduce using rule 10 (declara_vars -> vars declara_vars .)
    RECTANGLE       reduce using rule 10 (declara_vars -> vars declara_vars .)
    HIDE_STAR       reduce using rule 10 (declara_vars -> vars declara_vars .)
    SHOW_STAR       reduce using rule 10 (declara_vars -> vars declara_vars .)
    COLOR_STAR      reduce using rule 10 (declara_vars -> vars declara_vars .)
    SIZE_STAR       reduce using rule 10 (declara_vars -> vars declara_vars .)
    SETXY           reduce using rule 10 (declara_vars -> vars declara_vars .)
    HAND_DOWN       reduce using rule 10 (declara_vars -> vars declara_vars .)
    HAND_UP         reduce using rule 10 (declara_vars -> vars declara_vars .)
    GO              reduce using rule 10 (declara_vars -> vars declara_vars .)
    LEFT            reduce using rule 10 (declara_vars -> vars declara_vars .)
    RIGHT           reduce using rule 10 (declara_vars -> vars declara_vars .)
    BACK            reduce using rule 10 (declara_vars -> vars declara_vars .)
    ARC             reduce using rule 10 (declara_vars -> vars declara_vars .)
    WHILE           reduce using rule 10 (declara_vars -> vars declara_vars .)
    FOR             reduce using rule 10 (declara_vars -> vars declara_vars .)
    CLOSEBRACES     reduce using rule 10 (declara_vars -> vars declara_vars .)


state 18

    (12) vars -> type ID . vars1 equals exp SEMICOLON
    (13) vars -> type ID . vars1 SEMICOLON
    (14) vars1 -> . OPENBRACKET CTEINT CLOSEBRACKET vars3
    (15) vars1 -> . empty
    (155) empty -> .

    OPENBRACKET     shift and go to state 28
    SEMICOLON       reduce using rule 155 (empty -> .)
    EQUALS          reduce using rule 155 (empty -> .)

    vars1                          shift and go to state 27
    empty                          shift and go to state 29

state 19

    (2) program_modules -> program_fun star .

    $end            reduce using rule 2 (program_modules -> program_fun star .)


state 20

    (5) star -> starI . declara_vars star1 CLOSEBRACES
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (12) vars -> . type ID vars1 equals exp SEMICOLON
    (13) vars -> . type ID vars1 SEMICOLON
    (155) empty -> .
    (42) type -> . INT
    (43) type -> . FLOAT
    (44) type -> . CHAR

    IF              reduce using rule 155 (empty -> .)
    PRINT           reduce using rule 155 (empty -> .)
    READ            reduce using rule 155 (empty -> .)
    ID              reduce using rule 155 (empty -> .)
    RETURN          reduce using rule 155 (empty -> .)
    REPEAT          reduce using rule 155 (empty -> .)
    CIRCLE          reduce using rule 155 (empty -> .)
    SQUARE          reduce using rule 155 (empty -> .)
    TRIANGLE        reduce using rule 155 (empty -> .)
    RECTANGLE       reduce using rule 155 (empty -> .)
    HIDE_STAR       reduce using rule 155 (empty -> .)
    SHOW_STAR       reduce using rule 155 (empty -> .)
    COLOR_STAR      reduce using rule 155 (empty -> .)
    SIZE_STAR       reduce using rule 155 (empty -> .)
    SETXY           reduce using rule 155 (empty -> .)
    HAND_DOWN       reduce using rule 155 (empty -> .)
    HAND_UP         reduce using rule 155 (empty -> .)
    GO              reduce using rule 155 (empty -> .)
    LEFT            reduce using rule 155 (empty -> .)
    RIGHT           reduce using rule 155 (empty -> .)
    BACK            reduce using rule 155 (empty -> .)
    ARC             reduce using rule 155 (empty -> .)
    WHILE           reduce using rule 155 (empty -> .)
    FOR             reduce using rule 155 (empty -> .)
    CLOSEBRACES     reduce using rule 155 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    declara_vars                   shift and go to state 30
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 21

    (6) starI -> star_sign . OPENBRACES

    OPENBRACES      shift and go to state 31


state 22

    (7) star_sign -> MULTIPLICATION .

    OPENBRACES      reduce using rule 7 (star_sign -> MULTIPLICATION .)


state 23

    (3) program_fun -> function program_fun .

    MULTIPLICATION  reduce using rule 3 (program_fun -> function program_fun .)


state 24

    (31) function -> FUN functionI . function2 inicia_fun declara_vars function4 termina_fun
    (34) function2 -> . OPENPAREN function3 CLOSEPAREN

    OPENPAREN       shift and go to state 33

    function2                      shift and go to state 32

state 25

    (29) functionI -> type . ID

    ID              shift and go to state 34


state 26

    (30) functionI -> VOID . ID

    ID              shift and go to state 35


state 27

    (12) vars -> type ID vars1 . equals exp SEMICOLON
    (13) vars -> type ID vars1 . SEMICOLON
    (50) equals -> . EQUALS

    SEMICOLON       shift and go to state 37
    EQUALS          shift and go to state 38

    equals                         shift and go to state 36

state 28

    (14) vars1 -> OPENBRACKET . CTEINT CLOSEBRACKET vars3

    CTEINT          shift and go to state 39


state 29

    (15) vars1 -> empty .

    SEMICOLON       reduce using rule 15 (vars1 -> empty .)
    EQUALS          reduce using rule 15 (vars1 -> empty .)


state 30

    (5) star -> starI declara_vars . star1 CLOSEBRACES
    (8) star1 -> . stmt star1
    (9) star1 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . graphr
    (27) stmt -> . funCall SEMICOLON
    (28) stmt -> . return
    (155) empty -> .
    (52) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (81) condition -> . IF head_cond body condition1
    (45) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for
    (46) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (107) graphstmt -> . graphfig
    (108) graphstmt -> . graphview
    (109) graphstmt -> . graphmove
    (126) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (71) return -> . RETURN return1 SEMICOLON
    (51) id -> . ID
    (97) while -> . while1 body
    (92) for -> . for1 body
    (110) graphfig -> . graphfig1 SEMICOLON
    (111) graphfig -> . graphfig2 SEMICOLON
    (131) graphview -> . graphview0 SEMICOLON
    (132) graphview -> . graphview1 SEMICOLON
    (133) graphview -> . graphview2 SEMICOLON
    (116) graphmove -> . graphmove0 SEMICOLON
    (117) graphmove -> . graphmove1 SEMICOLON
    (118) graphmove -> . graphmove2 SEMICOLON
    (130) repeat -> . REPEAT
    (98) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (93) for1 -> . forInit OPENPAREN ID for2
    (112) graphfig1 -> . CIRCLE unaExp
    (113) graphfig1 -> . SQUARE unaExp
    (114) graphfig2 -> . TRIANGLE dosExp
    (115) graphfig2 -> . RECTANGLE dosExp
    (134) graphview0 -> . HIDE_STAR
    (135) graphview0 -> . SHOW_STAR
    (136) graphview1 -> . COLOR_STAR unaExp
    (137) graphview1 -> . SIZE_STAR unaExp
    (138) graphview2 -> . SETXY dosExp
    (119) graphmove0 -> . HAND_DOWN
    (120) graphmove0 -> . HAND_UP
    (121) graphmove1 -> . GO unaExp
    (122) graphmove1 -> . LEFT unaExp
    (123) graphmove1 -> . RIGHT unaExp
    (124) graphmove1 -> . BACK unaExp
    (125) graphmove2 -> . ARC dosExp
    (99) while_w -> . WHILE
    (96) forInit -> . FOR

    CLOSEBRACES     reduce using rule 155 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    ID              shift and go to state 62
    RETURN          shift and go to state 63
    REPEAT          shift and go to state 74
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92
    WHILE           shift and go to state 93
    FOR             shift and go to state 94

    star1                          shift and go to state 40
    stmt                           shift and go to state 41
    empty                          shift and go to state 42
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    graphr                         shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    repeat                         shift and go to state 61
    while1                         shift and go to state 64
    for1                           shift and go to state 65
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73
    while_w                        shift and go to state 75
    forInit                        shift and go to state 76

state 31

    (6) starI -> star_sign OPENBRACES .

    INT             reduce using rule 6 (starI -> star_sign OPENBRACES .)
    FLOAT           reduce using rule 6 (starI -> star_sign OPENBRACES .)
    CHAR            reduce using rule 6 (starI -> star_sign OPENBRACES .)
    IF              reduce using rule 6 (starI -> star_sign OPENBRACES .)
    PRINT           reduce using rule 6 (starI -> star_sign OPENBRACES .)
    READ            reduce using rule 6 (starI -> star_sign OPENBRACES .)
    ID              reduce using rule 6 (starI -> star_sign OPENBRACES .)
    RETURN          reduce using rule 6 (starI -> star_sign OPENBRACES .)
    REPEAT          reduce using rule 6 (starI -> star_sign OPENBRACES .)
    CIRCLE          reduce using rule 6 (starI -> star_sign OPENBRACES .)
    SQUARE          reduce using rule 6 (starI -> star_sign OPENBRACES .)
    TRIANGLE        reduce using rule 6 (starI -> star_sign OPENBRACES .)
    RECTANGLE       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    HIDE_STAR       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    SHOW_STAR       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    COLOR_STAR      reduce using rule 6 (starI -> star_sign OPENBRACES .)
    SIZE_STAR       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    SETXY           reduce using rule 6 (starI -> star_sign OPENBRACES .)
    HAND_DOWN       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    HAND_UP         reduce using rule 6 (starI -> star_sign OPENBRACES .)
    GO              reduce using rule 6 (starI -> star_sign OPENBRACES .)
    LEFT            reduce using rule 6 (starI -> star_sign OPENBRACES .)
    RIGHT           reduce using rule 6 (starI -> star_sign OPENBRACES .)
    BACK            reduce using rule 6 (starI -> star_sign OPENBRACES .)
    ARC             reduce using rule 6 (starI -> star_sign OPENBRACES .)
    WHILE           reduce using rule 6 (starI -> star_sign OPENBRACES .)
    FOR             reduce using rule 6 (starI -> star_sign OPENBRACES .)
    CLOSEBRACES     reduce using rule 6 (starI -> star_sign OPENBRACES .)


state 32

    (31) function -> FUN functionI function2 . inicia_fun declara_vars function4 termina_fun
    (32) inicia_fun -> . OPENBRACES

    OPENBRACES      shift and go to state 96

    inicia_fun                     shift and go to state 95

state 33

    (34) function2 -> OPENPAREN . function3 CLOSEPAREN
    (35) function3 -> . funParam function5
    (36) function3 -> . empty
    (41) funParam -> . type ID
    (155) empty -> .
    (42) type -> . INT
    (43) type -> . FLOAT
    (44) type -> . CHAR

    CLOSEPAREN      reduce using rule 155 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    function3                      shift and go to state 97
    funParam                       shift and go to state 98
    empty                          shift and go to state 99
    type                           shift and go to state 100

state 34

    (29) functionI -> type ID .

    OPENPAREN       reduce using rule 29 (functionI -> type ID .)


state 35

    (30) functionI -> VOID ID .

    OPENPAREN       reduce using rule 30 (functionI -> VOID ID .)


state 36

    (12) vars -> type ID vars1 equals . exp SEMICOLON
    (139) exp -> . term exp1
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    exp                            shift and go to state 102
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    factor1                        shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    factor2                        shift and go to state 112
    openP                          shift and go to state 113

state 37

    (13) vars -> type ID vars1 SEMICOLON .

    INT             reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    FLOAT           reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    CHAR            reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    FUN             reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    MULTIPLICATION  reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    IF              reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    PRINT           reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    READ            reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    ID              reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    RETURN          reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    REPEAT          reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    CIRCLE          reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    SQUARE          reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    TRIANGLE        reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    RECTANGLE       reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    HIDE_STAR       reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    SHOW_STAR       reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    COLOR_STAR      reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    SIZE_STAR       reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    SETXY           reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    HAND_DOWN       reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    HAND_UP         reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    GO              reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    LEFT            reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    RIGHT           reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    BACK            reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    ARC             reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    WHILE           reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    FOR             reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 13 (vars -> type ID vars1 SEMICOLON .)


state 38

    (50) equals -> EQUALS .

    CTEINT          reduce using rule 50 (equals -> EQUALS .)
    CTEFLOAT        reduce using rule 50 (equals -> EQUALS .)
    CTECHAR         reduce using rule 50 (equals -> EQUALS .)
    ID              reduce using rule 50 (equals -> EQUALS .)
    ADDITION        reduce using rule 50 (equals -> EQUALS .)
    SUBSTRACTION    reduce using rule 50 (equals -> EQUALS .)
    OPENPAREN       reduce using rule 50 (equals -> EQUALS .)
    READ            reduce using rule 50 (equals -> EQUALS .)


state 39

    (14) vars1 -> OPENBRACKET CTEINT . CLOSEBRACKET vars3

    CLOSEBRACKET    shift and go to state 120


state 40

    (5) star -> starI declara_vars star1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 121


state 41

    (8) star1 -> stmt . star1
    (8) star1 -> . stmt star1
    (9) star1 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . graphr
    (27) stmt -> . funCall SEMICOLON
    (28) stmt -> . return
    (155) empty -> .
    (52) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (81) condition -> . IF head_cond body condition1
    (45) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for
    (46) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (107) graphstmt -> . graphfig
    (108) graphstmt -> . graphview
    (109) graphstmt -> . graphmove
    (126) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (71) return -> . RETURN return1 SEMICOLON
    (51) id -> . ID
    (97) while -> . while1 body
    (92) for -> . for1 body
    (110) graphfig -> . graphfig1 SEMICOLON
    (111) graphfig -> . graphfig2 SEMICOLON
    (131) graphview -> . graphview0 SEMICOLON
    (132) graphview -> . graphview1 SEMICOLON
    (133) graphview -> . graphview2 SEMICOLON
    (116) graphmove -> . graphmove0 SEMICOLON
    (117) graphmove -> . graphmove1 SEMICOLON
    (118) graphmove -> . graphmove2 SEMICOLON
    (130) repeat -> . REPEAT
    (98) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (93) for1 -> . forInit OPENPAREN ID for2
    (112) graphfig1 -> . CIRCLE unaExp
    (113) graphfig1 -> . SQUARE unaExp
    (114) graphfig2 -> . TRIANGLE dosExp
    (115) graphfig2 -> . RECTANGLE dosExp
    (134) graphview0 -> . HIDE_STAR
    (135) graphview0 -> . SHOW_STAR
    (136) graphview1 -> . COLOR_STAR unaExp
    (137) graphview1 -> . SIZE_STAR unaExp
    (138) graphview2 -> . SETXY dosExp
    (119) graphmove0 -> . HAND_DOWN
    (120) graphmove0 -> . HAND_UP
    (121) graphmove1 -> . GO unaExp
    (122) graphmove1 -> . LEFT unaExp
    (123) graphmove1 -> . RIGHT unaExp
    (124) graphmove1 -> . BACK unaExp
    (125) graphmove2 -> . ARC dosExp
    (99) while_w -> . WHILE
    (96) forInit -> . FOR

    CLOSEBRACES     reduce using rule 155 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    ID              shift and go to state 62
    RETURN          shift and go to state 63
    REPEAT          shift and go to state 74
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92
    WHILE           shift and go to state 93
    FOR             shift and go to state 94

    stmt                           shift and go to state 41
    star1                          shift and go to state 122
    empty                          shift and go to state 42
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    graphr                         shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    repeat                         shift and go to state 61
    while1                         shift and go to state 64
    for1                           shift and go to state 65
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73
    while_w                        shift and go to state 75
    forInit                        shift and go to state 76

state 42

    (9) star1 -> empty .

    CLOSEBRACES     reduce using rule 9 (star1 -> empty .)


state 43

    (20) stmt -> assignment .

    IF              reduce using rule 20 (stmt -> assignment .)
    PRINT           reduce using rule 20 (stmt -> assignment .)
    READ            reduce using rule 20 (stmt -> assignment .)
    ID              reduce using rule 20 (stmt -> assignment .)
    RETURN          reduce using rule 20 (stmt -> assignment .)
    REPEAT          reduce using rule 20 (stmt -> assignment .)
    CIRCLE          reduce using rule 20 (stmt -> assignment .)
    SQUARE          reduce using rule 20 (stmt -> assignment .)
    TRIANGLE        reduce using rule 20 (stmt -> assignment .)
    RECTANGLE       reduce using rule 20 (stmt -> assignment .)
    HIDE_STAR       reduce using rule 20 (stmt -> assignment .)
    SHOW_STAR       reduce using rule 20 (stmt -> assignment .)
    COLOR_STAR      reduce using rule 20 (stmt -> assignment .)
    SIZE_STAR       reduce using rule 20 (stmt -> assignment .)
    SETXY           reduce using rule 20 (stmt -> assignment .)
    HAND_DOWN       reduce using rule 20 (stmt -> assignment .)
    HAND_UP         reduce using rule 20 (stmt -> assignment .)
    GO              reduce using rule 20 (stmt -> assignment .)
    LEFT            reduce using rule 20 (stmt -> assignment .)
    RIGHT           reduce using rule 20 (stmt -> assignment .)
    BACK            reduce using rule 20 (stmt -> assignment .)
    ARC             reduce using rule 20 (stmt -> assignment .)
    WHILE           reduce using rule 20 (stmt -> assignment .)
    FOR             reduce using rule 20 (stmt -> assignment .)
    CLOSEBRACES     reduce using rule 20 (stmt -> assignment .)


state 44

    (21) stmt -> condition .

    IF              reduce using rule 21 (stmt -> condition .)
    PRINT           reduce using rule 21 (stmt -> condition .)
    READ            reduce using rule 21 (stmt -> condition .)
    ID              reduce using rule 21 (stmt -> condition .)
    RETURN          reduce using rule 21 (stmt -> condition .)
    REPEAT          reduce using rule 21 (stmt -> condition .)
    CIRCLE          reduce using rule 21 (stmt -> condition .)
    SQUARE          reduce using rule 21 (stmt -> condition .)
    TRIANGLE        reduce using rule 21 (stmt -> condition .)
    RECTANGLE       reduce using rule 21 (stmt -> condition .)
    HIDE_STAR       reduce using rule 21 (stmt -> condition .)
    SHOW_STAR       reduce using rule 21 (stmt -> condition .)
    COLOR_STAR      reduce using rule 21 (stmt -> condition .)
    SIZE_STAR       reduce using rule 21 (stmt -> condition .)
    SETXY           reduce using rule 21 (stmt -> condition .)
    HAND_DOWN       reduce using rule 21 (stmt -> condition .)
    HAND_UP         reduce using rule 21 (stmt -> condition .)
    GO              reduce using rule 21 (stmt -> condition .)
    LEFT            reduce using rule 21 (stmt -> condition .)
    RIGHT           reduce using rule 21 (stmt -> condition .)
    BACK            reduce using rule 21 (stmt -> condition .)
    ARC             reduce using rule 21 (stmt -> condition .)
    WHILE           reduce using rule 21 (stmt -> condition .)
    FOR             reduce using rule 21 (stmt -> condition .)
    CLOSEBRACES     reduce using rule 21 (stmt -> condition .)


state 45

    (22) stmt -> print .

    IF              reduce using rule 22 (stmt -> print .)
    PRINT           reduce using rule 22 (stmt -> print .)
    READ            reduce using rule 22 (stmt -> print .)
    ID              reduce using rule 22 (stmt -> print .)
    RETURN          reduce using rule 22 (stmt -> print .)
    REPEAT          reduce using rule 22 (stmt -> print .)
    CIRCLE          reduce using rule 22 (stmt -> print .)
    SQUARE          reduce using rule 22 (stmt -> print .)
    TRIANGLE        reduce using rule 22 (stmt -> print .)
    RECTANGLE       reduce using rule 22 (stmt -> print .)
    HIDE_STAR       reduce using rule 22 (stmt -> print .)
    SHOW_STAR       reduce using rule 22 (stmt -> print .)
    COLOR_STAR      reduce using rule 22 (stmt -> print .)
    SIZE_STAR       reduce using rule 22 (stmt -> print .)
    SETXY           reduce using rule 22 (stmt -> print .)
    HAND_DOWN       reduce using rule 22 (stmt -> print .)
    HAND_UP         reduce using rule 22 (stmt -> print .)
    GO              reduce using rule 22 (stmt -> print .)
    LEFT            reduce using rule 22 (stmt -> print .)
    RIGHT           reduce using rule 22 (stmt -> print .)
    BACK            reduce using rule 22 (stmt -> print .)
    ARC             reduce using rule 22 (stmt -> print .)
    WHILE           reduce using rule 22 (stmt -> print .)
    FOR             reduce using rule 22 (stmt -> print .)
    CLOSEBRACES     reduce using rule 22 (stmt -> print .)


state 46

    (23) stmt -> loop .

    IF              reduce using rule 23 (stmt -> loop .)
    PRINT           reduce using rule 23 (stmt -> loop .)
    READ            reduce using rule 23 (stmt -> loop .)
    ID              reduce using rule 23 (stmt -> loop .)
    RETURN          reduce using rule 23 (stmt -> loop .)
    REPEAT          reduce using rule 23 (stmt -> loop .)
    CIRCLE          reduce using rule 23 (stmt -> loop .)
    SQUARE          reduce using rule 23 (stmt -> loop .)
    TRIANGLE        reduce using rule 23 (stmt -> loop .)
    RECTANGLE       reduce using rule 23 (stmt -> loop .)
    HIDE_STAR       reduce using rule 23 (stmt -> loop .)
    SHOW_STAR       reduce using rule 23 (stmt -> loop .)
    COLOR_STAR      reduce using rule 23 (stmt -> loop .)
    SIZE_STAR       reduce using rule 23 (stmt -> loop .)
    SETXY           reduce using rule 23 (stmt -> loop .)
    HAND_DOWN       reduce using rule 23 (stmt -> loop .)
    HAND_UP         reduce using rule 23 (stmt -> loop .)
    GO              reduce using rule 23 (stmt -> loop .)
    LEFT            reduce using rule 23 (stmt -> loop .)
    RIGHT           reduce using rule 23 (stmt -> loop .)
    BACK            reduce using rule 23 (stmt -> loop .)
    ARC             reduce using rule 23 (stmt -> loop .)
    WHILE           reduce using rule 23 (stmt -> loop .)
    FOR             reduce using rule 23 (stmt -> loop .)
    CLOSEBRACES     reduce using rule 23 (stmt -> loop .)


state 47

    (24) stmt -> read .

    IF              reduce using rule 24 (stmt -> read .)
    PRINT           reduce using rule 24 (stmt -> read .)
    READ            reduce using rule 24 (stmt -> read .)
    ID              reduce using rule 24 (stmt -> read .)
    RETURN          reduce using rule 24 (stmt -> read .)
    REPEAT          reduce using rule 24 (stmt -> read .)
    CIRCLE          reduce using rule 24 (stmt -> read .)
    SQUARE          reduce using rule 24 (stmt -> read .)
    TRIANGLE        reduce using rule 24 (stmt -> read .)
    RECTANGLE       reduce using rule 24 (stmt -> read .)
    HIDE_STAR       reduce using rule 24 (stmt -> read .)
    SHOW_STAR       reduce using rule 24 (stmt -> read .)
    COLOR_STAR      reduce using rule 24 (stmt -> read .)
    SIZE_STAR       reduce using rule 24 (stmt -> read .)
    SETXY           reduce using rule 24 (stmt -> read .)
    HAND_DOWN       reduce using rule 24 (stmt -> read .)
    HAND_UP         reduce using rule 24 (stmt -> read .)
    GO              reduce using rule 24 (stmt -> read .)
    LEFT            reduce using rule 24 (stmt -> read .)
    RIGHT           reduce using rule 24 (stmt -> read .)
    BACK            reduce using rule 24 (stmt -> read .)
    ARC             reduce using rule 24 (stmt -> read .)
    WHILE           reduce using rule 24 (stmt -> read .)
    FOR             reduce using rule 24 (stmt -> read .)
    CLOSEBRACES     reduce using rule 24 (stmt -> read .)


state 48

    (25) stmt -> graphstmt .

    IF              reduce using rule 25 (stmt -> graphstmt .)
    PRINT           reduce using rule 25 (stmt -> graphstmt .)
    READ            reduce using rule 25 (stmt -> graphstmt .)
    ID              reduce using rule 25 (stmt -> graphstmt .)
    RETURN          reduce using rule 25 (stmt -> graphstmt .)
    REPEAT          reduce using rule 25 (stmt -> graphstmt .)
    CIRCLE          reduce using rule 25 (stmt -> graphstmt .)
    SQUARE          reduce using rule 25 (stmt -> graphstmt .)
    TRIANGLE        reduce using rule 25 (stmt -> graphstmt .)
    RECTANGLE       reduce using rule 25 (stmt -> graphstmt .)
    HIDE_STAR       reduce using rule 25 (stmt -> graphstmt .)
    SHOW_STAR       reduce using rule 25 (stmt -> graphstmt .)
    COLOR_STAR      reduce using rule 25 (stmt -> graphstmt .)
    SIZE_STAR       reduce using rule 25 (stmt -> graphstmt .)
    SETXY           reduce using rule 25 (stmt -> graphstmt .)
    HAND_DOWN       reduce using rule 25 (stmt -> graphstmt .)
    HAND_UP         reduce using rule 25 (stmt -> graphstmt .)
    GO              reduce using rule 25 (stmt -> graphstmt .)
    LEFT            reduce using rule 25 (stmt -> graphstmt .)
    RIGHT           reduce using rule 25 (stmt -> graphstmt .)
    BACK            reduce using rule 25 (stmt -> graphstmt .)
    ARC             reduce using rule 25 (stmt -> graphstmt .)
    WHILE           reduce using rule 25 (stmt -> graphstmt .)
    FOR             reduce using rule 25 (stmt -> graphstmt .)
    CLOSEBRACES     reduce using rule 25 (stmt -> graphstmt .)


state 49

    (26) stmt -> graphr .

    IF              reduce using rule 26 (stmt -> graphr .)
    PRINT           reduce using rule 26 (stmt -> graphr .)
    READ            reduce using rule 26 (stmt -> graphr .)
    ID              reduce using rule 26 (stmt -> graphr .)
    RETURN          reduce using rule 26 (stmt -> graphr .)
    REPEAT          reduce using rule 26 (stmt -> graphr .)
    CIRCLE          reduce using rule 26 (stmt -> graphr .)
    SQUARE          reduce using rule 26 (stmt -> graphr .)
    TRIANGLE        reduce using rule 26 (stmt -> graphr .)
    RECTANGLE       reduce using rule 26 (stmt -> graphr .)
    HIDE_STAR       reduce using rule 26 (stmt -> graphr .)
    SHOW_STAR       reduce using rule 26 (stmt -> graphr .)
    COLOR_STAR      reduce using rule 26 (stmt -> graphr .)
    SIZE_STAR       reduce using rule 26 (stmt -> graphr .)
    SETXY           reduce using rule 26 (stmt -> graphr .)
    HAND_DOWN       reduce using rule 26 (stmt -> graphr .)
    HAND_UP         reduce using rule 26 (stmt -> graphr .)
    GO              reduce using rule 26 (stmt -> graphr .)
    LEFT            reduce using rule 26 (stmt -> graphr .)
    RIGHT           reduce using rule 26 (stmt -> graphr .)
    BACK            reduce using rule 26 (stmt -> graphr .)
    ARC             reduce using rule 26 (stmt -> graphr .)
    WHILE           reduce using rule 26 (stmt -> graphr .)
    FOR             reduce using rule 26 (stmt -> graphr .)
    CLOSEBRACES     reduce using rule 26 (stmt -> graphr .)


state 50

    (27) stmt -> funCall . SEMICOLON

    SEMICOLON       shift and go to state 123


state 51

    (28) stmt -> return .

    IF              reduce using rule 28 (stmt -> return .)
    PRINT           reduce using rule 28 (stmt -> return .)
    READ            reduce using rule 28 (stmt -> return .)
    ID              reduce using rule 28 (stmt -> return .)
    RETURN          reduce using rule 28 (stmt -> return .)
    REPEAT          reduce using rule 28 (stmt -> return .)
    CIRCLE          reduce using rule 28 (stmt -> return .)
    SQUARE          reduce using rule 28 (stmt -> return .)
    TRIANGLE        reduce using rule 28 (stmt -> return .)
    RECTANGLE       reduce using rule 28 (stmt -> return .)
    HIDE_STAR       reduce using rule 28 (stmt -> return .)
    SHOW_STAR       reduce using rule 28 (stmt -> return .)
    COLOR_STAR      reduce using rule 28 (stmt -> return .)
    SIZE_STAR       reduce using rule 28 (stmt -> return .)
    SETXY           reduce using rule 28 (stmt -> return .)
    HAND_DOWN       reduce using rule 28 (stmt -> return .)
    HAND_UP         reduce using rule 28 (stmt -> return .)
    GO              reduce using rule 28 (stmt -> return .)
    LEFT            reduce using rule 28 (stmt -> return .)
    RIGHT           reduce using rule 28 (stmt -> return .)
    BACK            reduce using rule 28 (stmt -> return .)
    ARC             reduce using rule 28 (stmt -> return .)
    WHILE           reduce using rule 28 (stmt -> return .)
    FOR             reduce using rule 28 (stmt -> return .)
    CLOSEBRACES     reduce using rule 28 (stmt -> return .)


state 52

    (52) assignment -> id . assignment1 equals assignment3 SEMICOLON
    (53) assignment1 -> . assignment2
    (54) assignment1 -> . assignment2 assignment1
    (55) assignment1 -> . empty
    (56) assignment2 -> . OPENBRACKET exp CLOSEBRACKET
    (155) empty -> .

    OPENBRACKET     shift and go to state 127
    EQUALS          reduce using rule 155 (empty -> .)

    assignment1                    shift and go to state 124
    assignment2                    shift and go to state 125
    empty                          shift and go to state 126

state 53

    (81) condition -> IF . head_cond body condition1
    (87) head_cond -> . OPENPAREN expression close_condition

    OPENPAREN       shift and go to state 129

    head_cond                      shift and go to state 128

state 54

    (45) print -> PRINT . OPENPAREN expression CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 130


state 55

    (18) loop -> while .

    IF              reduce using rule 18 (loop -> while .)
    PRINT           reduce using rule 18 (loop -> while .)
    READ            reduce using rule 18 (loop -> while .)
    ID              reduce using rule 18 (loop -> while .)
    RETURN          reduce using rule 18 (loop -> while .)
    REPEAT          reduce using rule 18 (loop -> while .)
    CIRCLE          reduce using rule 18 (loop -> while .)
    SQUARE          reduce using rule 18 (loop -> while .)
    TRIANGLE        reduce using rule 18 (loop -> while .)
    RECTANGLE       reduce using rule 18 (loop -> while .)
    HIDE_STAR       reduce using rule 18 (loop -> while .)
    SHOW_STAR       reduce using rule 18 (loop -> while .)
    COLOR_STAR      reduce using rule 18 (loop -> while .)
    SIZE_STAR       reduce using rule 18 (loop -> while .)
    SETXY           reduce using rule 18 (loop -> while .)
    HAND_DOWN       reduce using rule 18 (loop -> while .)
    HAND_UP         reduce using rule 18 (loop -> while .)
    GO              reduce using rule 18 (loop -> while .)
    LEFT            reduce using rule 18 (loop -> while .)
    RIGHT           reduce using rule 18 (loop -> while .)
    BACK            reduce using rule 18 (loop -> while .)
    ARC             reduce using rule 18 (loop -> while .)
    WHILE           reduce using rule 18 (loop -> while .)
    FOR             reduce using rule 18 (loop -> while .)
    CLOSEBRACES     reduce using rule 18 (loop -> while .)


state 56

    (19) loop -> for .

    IF              reduce using rule 19 (loop -> for .)
    PRINT           reduce using rule 19 (loop -> for .)
    READ            reduce using rule 19 (loop -> for .)
    ID              reduce using rule 19 (loop -> for .)
    RETURN          reduce using rule 19 (loop -> for .)
    REPEAT          reduce using rule 19 (loop -> for .)
    CIRCLE          reduce using rule 19 (loop -> for .)
    SQUARE          reduce using rule 19 (loop -> for .)
    TRIANGLE        reduce using rule 19 (loop -> for .)
    RECTANGLE       reduce using rule 19 (loop -> for .)
    HIDE_STAR       reduce using rule 19 (loop -> for .)
    SHOW_STAR       reduce using rule 19 (loop -> for .)
    COLOR_STAR      reduce using rule 19 (loop -> for .)
    SIZE_STAR       reduce using rule 19 (loop -> for .)
    SETXY           reduce using rule 19 (loop -> for .)
    HAND_DOWN       reduce using rule 19 (loop -> for .)
    HAND_UP         reduce using rule 19 (loop -> for .)
    GO              reduce using rule 19 (loop -> for .)
    LEFT            reduce using rule 19 (loop -> for .)
    RIGHT           reduce using rule 19 (loop -> for .)
    BACK            reduce using rule 19 (loop -> for .)
    ARC             reduce using rule 19 (loop -> for .)
    WHILE           reduce using rule 19 (loop -> for .)
    FOR             reduce using rule 19 (loop -> for .)
    CLOSEBRACES     reduce using rule 19 (loop -> for .)


state 57

    (46) read -> READ . OPENPAREN id read1 CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 131


state 58

    (107) graphstmt -> graphfig .

    IF              reduce using rule 107 (graphstmt -> graphfig .)
    PRINT           reduce using rule 107 (graphstmt -> graphfig .)
    READ            reduce using rule 107 (graphstmt -> graphfig .)
    ID              reduce using rule 107 (graphstmt -> graphfig .)
    RETURN          reduce using rule 107 (graphstmt -> graphfig .)
    REPEAT          reduce using rule 107 (graphstmt -> graphfig .)
    CIRCLE          reduce using rule 107 (graphstmt -> graphfig .)
    SQUARE          reduce using rule 107 (graphstmt -> graphfig .)
    TRIANGLE        reduce using rule 107 (graphstmt -> graphfig .)
    RECTANGLE       reduce using rule 107 (graphstmt -> graphfig .)
    HIDE_STAR       reduce using rule 107 (graphstmt -> graphfig .)
    SHOW_STAR       reduce using rule 107 (graphstmt -> graphfig .)
    COLOR_STAR      reduce using rule 107 (graphstmt -> graphfig .)
    SIZE_STAR       reduce using rule 107 (graphstmt -> graphfig .)
    SETXY           reduce using rule 107 (graphstmt -> graphfig .)
    HAND_DOWN       reduce using rule 107 (graphstmt -> graphfig .)
    HAND_UP         reduce using rule 107 (graphstmt -> graphfig .)
    GO              reduce using rule 107 (graphstmt -> graphfig .)
    LEFT            reduce using rule 107 (graphstmt -> graphfig .)
    RIGHT           reduce using rule 107 (graphstmt -> graphfig .)
    BACK            reduce using rule 107 (graphstmt -> graphfig .)
    ARC             reduce using rule 107 (graphstmt -> graphfig .)
    WHILE           reduce using rule 107 (graphstmt -> graphfig .)
    FOR             reduce using rule 107 (graphstmt -> graphfig .)
    CLOSEBRACES     reduce using rule 107 (graphstmt -> graphfig .)


state 59

    (108) graphstmt -> graphview .

    IF              reduce using rule 108 (graphstmt -> graphview .)
    PRINT           reduce using rule 108 (graphstmt -> graphview .)
    READ            reduce using rule 108 (graphstmt -> graphview .)
    ID              reduce using rule 108 (graphstmt -> graphview .)
    RETURN          reduce using rule 108 (graphstmt -> graphview .)
    REPEAT          reduce using rule 108 (graphstmt -> graphview .)
    CIRCLE          reduce using rule 108 (graphstmt -> graphview .)
    SQUARE          reduce using rule 108 (graphstmt -> graphview .)
    TRIANGLE        reduce using rule 108 (graphstmt -> graphview .)
    RECTANGLE       reduce using rule 108 (graphstmt -> graphview .)
    HIDE_STAR       reduce using rule 108 (graphstmt -> graphview .)
    SHOW_STAR       reduce using rule 108 (graphstmt -> graphview .)
    COLOR_STAR      reduce using rule 108 (graphstmt -> graphview .)
    SIZE_STAR       reduce using rule 108 (graphstmt -> graphview .)
    SETXY           reduce using rule 108 (graphstmt -> graphview .)
    HAND_DOWN       reduce using rule 108 (graphstmt -> graphview .)
    HAND_UP         reduce using rule 108 (graphstmt -> graphview .)
    GO              reduce using rule 108 (graphstmt -> graphview .)
    LEFT            reduce using rule 108 (graphstmt -> graphview .)
    RIGHT           reduce using rule 108 (graphstmt -> graphview .)
    BACK            reduce using rule 108 (graphstmt -> graphview .)
    ARC             reduce using rule 108 (graphstmt -> graphview .)
    WHILE           reduce using rule 108 (graphstmt -> graphview .)
    FOR             reduce using rule 108 (graphstmt -> graphview .)
    CLOSEBRACES     reduce using rule 108 (graphstmt -> graphview .)


state 60

    (109) graphstmt -> graphmove .

    IF              reduce using rule 109 (graphstmt -> graphmove .)
    PRINT           reduce using rule 109 (graphstmt -> graphmove .)
    READ            reduce using rule 109 (graphstmt -> graphmove .)
    ID              reduce using rule 109 (graphstmt -> graphmove .)
    RETURN          reduce using rule 109 (graphstmt -> graphmove .)
    REPEAT          reduce using rule 109 (graphstmt -> graphmove .)
    CIRCLE          reduce using rule 109 (graphstmt -> graphmove .)
    SQUARE          reduce using rule 109 (graphstmt -> graphmove .)
    TRIANGLE        reduce using rule 109 (graphstmt -> graphmove .)
    RECTANGLE       reduce using rule 109 (graphstmt -> graphmove .)
    HIDE_STAR       reduce using rule 109 (graphstmt -> graphmove .)
    SHOW_STAR       reduce using rule 109 (graphstmt -> graphmove .)
    COLOR_STAR      reduce using rule 109 (graphstmt -> graphmove .)
    SIZE_STAR       reduce using rule 109 (graphstmt -> graphmove .)
    SETXY           reduce using rule 109 (graphstmt -> graphmove .)
    HAND_DOWN       reduce using rule 109 (graphstmt -> graphmove .)
    HAND_UP         reduce using rule 109 (graphstmt -> graphmove .)
    GO              reduce using rule 109 (graphstmt -> graphmove .)
    LEFT            reduce using rule 109 (graphstmt -> graphmove .)
    RIGHT           reduce using rule 109 (graphstmt -> graphmove .)
    BACK            reduce using rule 109 (graphstmt -> graphmove .)
    ARC             reduce using rule 109 (graphstmt -> graphmove .)
    WHILE           reduce using rule 109 (graphstmt -> graphmove .)
    FOR             reduce using rule 109 (graphstmt -> graphmove .)
    CLOSEBRACES     reduce using rule 109 (graphstmt -> graphmove .)


state 61

    (126) graphr -> repeat . rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (129) rep -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 133

    rep                            shift and go to state 132

state 62

    (100) funCall -> ID . OPENPAREN funCall2 CLOSEPAREN
    (51) id -> ID .

    OPENPAREN       shift and go to state 134
    OPENBRACKET     reduce using rule 51 (id -> ID .)
    EQUALS          reduce using rule 51 (id -> ID .)


state 63

    (71) return -> RETURN . return1 SEMICOLON
    (72) return1 -> . vcte
    (73) return1 -> . exp
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (139) exp -> . term exp1
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    return1                        shift and go to state 135
    vcte                           shift and go to state 136
    exp                            shift and go to state 137
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    term                           shift and go to state 103
    factor                         shift and go to state 104
    factor1                        shift and go to state 106
    factor2                        shift and go to state 112
    openP                          shift and go to state 113

state 64

    (97) while -> while1 . body
    (88) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 139

    body                           shift and go to state 138

state 65

    (92) for -> for1 . body
    (88) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 139

    body                           shift and go to state 140

state 66

    (110) graphfig -> graphfig1 . SEMICOLON

    SEMICOLON       shift and go to state 141


state 67

    (111) graphfig -> graphfig2 . SEMICOLON

    SEMICOLON       shift and go to state 142


state 68

    (131) graphview -> graphview0 . SEMICOLON

    SEMICOLON       shift and go to state 143


state 69

    (132) graphview -> graphview1 . SEMICOLON

    SEMICOLON       shift and go to state 144


state 70

    (133) graphview -> graphview2 . SEMICOLON

    SEMICOLON       shift and go to state 145


state 71

    (116) graphmove -> graphmove0 . SEMICOLON

    SEMICOLON       shift and go to state 146


state 72

    (117) graphmove -> graphmove1 . SEMICOLON

    SEMICOLON       shift and go to state 147


state 73

    (118) graphmove -> graphmove2 . SEMICOLON

    SEMICOLON       shift and go to state 148


state 74

    (130) repeat -> REPEAT .

    OPENPAREN       reduce using rule 130 (repeat -> REPEAT .)


state 75

    (98) while1 -> while_w . OPENPAREN expression CLOSEPAREN

    OPENPAREN       shift and go to state 149


state 76

    (93) for1 -> forInit . OPENPAREN ID for2

    OPENPAREN       shift and go to state 150


state 77

    (112) graphfig1 -> CIRCLE . unaExp
    (106) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 152

    unaExp                         shift and go to state 151

state 78

    (113) graphfig1 -> SQUARE . unaExp
    (106) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 152

    unaExp                         shift and go to state 153

state 79

    (114) graphfig2 -> TRIANGLE . dosExp
    (105) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 155

    dosExp                         shift and go to state 154

state 80

    (115) graphfig2 -> RECTANGLE . dosExp
    (105) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 155

    dosExp                         shift and go to state 156

state 81

    (134) graphview0 -> HIDE_STAR .

    SEMICOLON       reduce using rule 134 (graphview0 -> HIDE_STAR .)


state 82

    (135) graphview0 -> SHOW_STAR .

    SEMICOLON       reduce using rule 135 (graphview0 -> SHOW_STAR .)


state 83

    (136) graphview1 -> COLOR_STAR . unaExp
    (106) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 152

    unaExp                         shift and go to state 157

state 84

    (137) graphview1 -> SIZE_STAR . unaExp
    (106) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 152

    unaExp                         shift and go to state 158

state 85

    (138) graphview2 -> SETXY . dosExp
    (105) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 155

    dosExp                         shift and go to state 159

state 86

    (119) graphmove0 -> HAND_DOWN .

    SEMICOLON       reduce using rule 119 (graphmove0 -> HAND_DOWN .)


state 87

    (120) graphmove0 -> HAND_UP .

    SEMICOLON       reduce using rule 120 (graphmove0 -> HAND_UP .)


state 88

    (121) graphmove1 -> GO . unaExp
    (106) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 152

    unaExp                         shift and go to state 160

state 89

    (122) graphmove1 -> LEFT . unaExp
    (106) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 152

    unaExp                         shift and go to state 161

state 90

    (123) graphmove1 -> RIGHT . unaExp
    (106) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 152

    unaExp                         shift and go to state 162

state 91

    (124) graphmove1 -> BACK . unaExp
    (106) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 152

    unaExp                         shift and go to state 163

state 92

    (125) graphmove2 -> ARC . dosExp
    (105) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 155

    dosExp                         shift and go to state 164

state 93

    (99) while_w -> WHILE .

    OPENPAREN       reduce using rule 99 (while_w -> WHILE .)


state 94

    (96) forInit -> FOR .

    OPENPAREN       reduce using rule 96 (forInit -> FOR .)


state 95

    (31) function -> FUN functionI function2 inicia_fun . declara_vars function4 termina_fun
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (12) vars -> . type ID vars1 equals exp SEMICOLON
    (13) vars -> . type ID vars1 SEMICOLON
    (155) empty -> .
    (42) type -> . INT
    (43) type -> . FLOAT
    (44) type -> . CHAR

    IF              reduce using rule 155 (empty -> .)
    PRINT           reduce using rule 155 (empty -> .)
    READ            reduce using rule 155 (empty -> .)
    ID              reduce using rule 155 (empty -> .)
    RETURN          reduce using rule 155 (empty -> .)
    REPEAT          reduce using rule 155 (empty -> .)
    CIRCLE          reduce using rule 155 (empty -> .)
    SQUARE          reduce using rule 155 (empty -> .)
    TRIANGLE        reduce using rule 155 (empty -> .)
    RECTANGLE       reduce using rule 155 (empty -> .)
    HIDE_STAR       reduce using rule 155 (empty -> .)
    SHOW_STAR       reduce using rule 155 (empty -> .)
    COLOR_STAR      reduce using rule 155 (empty -> .)
    SIZE_STAR       reduce using rule 155 (empty -> .)
    SETXY           reduce using rule 155 (empty -> .)
    HAND_DOWN       reduce using rule 155 (empty -> .)
    HAND_UP         reduce using rule 155 (empty -> .)
    GO              reduce using rule 155 (empty -> .)
    LEFT            reduce using rule 155 (empty -> .)
    RIGHT           reduce using rule 155 (empty -> .)
    BACK            reduce using rule 155 (empty -> .)
    ARC             reduce using rule 155 (empty -> .)
    WHILE           reduce using rule 155 (empty -> .)
    FOR             reduce using rule 155 (empty -> .)
    CLOSEBRACES     reduce using rule 155 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    declara_vars                   shift and go to state 165
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 96

    (32) inicia_fun -> OPENBRACES .

    INT             reduce using rule 32 (inicia_fun -> OPENBRACES .)
    FLOAT           reduce using rule 32 (inicia_fun -> OPENBRACES .)
    CHAR            reduce using rule 32 (inicia_fun -> OPENBRACES .)
    IF              reduce using rule 32 (inicia_fun -> OPENBRACES .)
    PRINT           reduce using rule 32 (inicia_fun -> OPENBRACES .)
    READ            reduce using rule 32 (inicia_fun -> OPENBRACES .)
    ID              reduce using rule 32 (inicia_fun -> OPENBRACES .)
    RETURN          reduce using rule 32 (inicia_fun -> OPENBRACES .)
    REPEAT          reduce using rule 32 (inicia_fun -> OPENBRACES .)
    CIRCLE          reduce using rule 32 (inicia_fun -> OPENBRACES .)
    SQUARE          reduce using rule 32 (inicia_fun -> OPENBRACES .)
    TRIANGLE        reduce using rule 32 (inicia_fun -> OPENBRACES .)
    RECTANGLE       reduce using rule 32 (inicia_fun -> OPENBRACES .)
    HIDE_STAR       reduce using rule 32 (inicia_fun -> OPENBRACES .)
    SHOW_STAR       reduce using rule 32 (inicia_fun -> OPENBRACES .)
    COLOR_STAR      reduce using rule 32 (inicia_fun -> OPENBRACES .)
    SIZE_STAR       reduce using rule 32 (inicia_fun -> OPENBRACES .)
    SETXY           reduce using rule 32 (inicia_fun -> OPENBRACES .)
    HAND_DOWN       reduce using rule 32 (inicia_fun -> OPENBRACES .)
    HAND_UP         reduce using rule 32 (inicia_fun -> OPENBRACES .)
    GO              reduce using rule 32 (inicia_fun -> OPENBRACES .)
    LEFT            reduce using rule 32 (inicia_fun -> OPENBRACES .)
    RIGHT           reduce using rule 32 (inicia_fun -> OPENBRACES .)
    BACK            reduce using rule 32 (inicia_fun -> OPENBRACES .)
    ARC             reduce using rule 32 (inicia_fun -> OPENBRACES .)
    WHILE           reduce using rule 32 (inicia_fun -> OPENBRACES .)
    FOR             reduce using rule 32 (inicia_fun -> OPENBRACES .)
    CLOSEBRACES     reduce using rule 32 (inicia_fun -> OPENBRACES .)


state 97

    (34) function2 -> OPENPAREN function3 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 166


state 98

    (35) function3 -> funParam . function5
    (39) function5 -> . COMMA funParam function5
    (40) function5 -> . empty
    (155) empty -> .

    COMMA           shift and go to state 168
    CLOSEPAREN      reduce using rule 155 (empty -> .)

    function5                      shift and go to state 167
    empty                          shift and go to state 169

state 99

    (36) function3 -> empty .

    CLOSEPAREN      reduce using rule 36 (function3 -> empty .)


state 100

    (41) funParam -> type . ID

    ID              shift and go to state 170


state 101

    (51) id -> ID .
    (100) funCall -> ID . OPENPAREN funCall2 CLOSEPAREN

  ! shift/reduce conflict for OPENPAREN resolved as shift
    OPENBRACKET     reduce using rule 51 (id -> ID .)
    MULTIPLICATION  reduce using rule 51 (id -> ID .)
    DIVISION        reduce using rule 51 (id -> ID .)
    ADDITION        reduce using rule 51 (id -> ID .)
    SUBSTRACTION    reduce using rule 51 (id -> ID .)
    SEMICOLON       reduce using rule 51 (id -> ID .)
    GREATER         reduce using rule 51 (id -> ID .)
    LESS            reduce using rule 51 (id -> ID .)
    NOTEQUAL        reduce using rule 51 (id -> ID .)
    ISEQUAL         reduce using rule 51 (id -> ID .)
    CLOSEPAREN      reduce using rule 51 (id -> ID .)
    CLOSEBRACKET    reduce using rule 51 (id -> ID .)
    COMMA           reduce using rule 51 (id -> ID .)
    CTEINT          reduce using rule 51 (id -> ID .)
    CTEFLOAT        reduce using rule 51 (id -> ID .)
    CTECHAR         reduce using rule 51 (id -> ID .)
    ID              reduce using rule 51 (id -> ID .)
    OPENPAREN       shift and go to state 134

  ! OPENPAREN       [ reduce using rule 51 (id -> ID .) ]


state 102

    (12) vars -> type ID vars1 equals exp . SEMICOLON

    SEMICOLON       shift and go to state 171


state 103

    (139) exp -> term . exp1
    (140) exp1 -> . ADDITION exp
    (141) exp1 -> . SUBSTRACTION exp
    (142) exp1 -> . empty
    (155) empty -> .

  ! shift/reduce conflict for ADDITION resolved as shift
  ! shift/reduce conflict for SUBSTRACTION resolved as shift
    ADDITION        shift and go to state 173
    SUBSTRACTION    shift and go to state 174
    SEMICOLON       reduce using rule 155 (empty -> .)
    GREATER         reduce using rule 155 (empty -> .)
    LESS            reduce using rule 155 (empty -> .)
    NOTEQUAL        reduce using rule 155 (empty -> .)
    ISEQUAL         reduce using rule 155 (empty -> .)
    CLOSEPAREN      reduce using rule 155 (empty -> .)
    CLOSEBRACKET    reduce using rule 155 (empty -> .)
    COMMA           reduce using rule 155 (empty -> .)
    CTEINT          reduce using rule 155 (empty -> .)
    CTEFLOAT        reduce using rule 155 (empty -> .)
    CTECHAR         reduce using rule 155 (empty -> .)
    ID              reduce using rule 155 (empty -> .)
    OPENPAREN       reduce using rule 155 (empty -> .)

  ! ADDITION        [ reduce using rule 155 (empty -> .) ]
  ! SUBSTRACTION    [ reduce using rule 155 (empty -> .) ]

    exp1                           shift and go to state 172
    empty                          shift and go to state 175

state 104

    (151) term -> factor . term1
    (152) term1 -> . MULTIPLICATION term
    (153) term1 -> . DIVISION term
    (154) term1 -> . empty
    (155) empty -> .

    MULTIPLICATION  shift and go to state 177
    DIVISION        shift and go to state 178
    ADDITION        reduce using rule 155 (empty -> .)
    SUBSTRACTION    reduce using rule 155 (empty -> .)
    SEMICOLON       reduce using rule 155 (empty -> .)
    GREATER         reduce using rule 155 (empty -> .)
    LESS            reduce using rule 155 (empty -> .)
    NOTEQUAL        reduce using rule 155 (empty -> .)
    ISEQUAL         reduce using rule 155 (empty -> .)
    CLOSEPAREN      reduce using rule 155 (empty -> .)
    CLOSEBRACKET    reduce using rule 155 (empty -> .)
    COMMA           reduce using rule 155 (empty -> .)
    CTEINT          reduce using rule 155 (empty -> .)
    CTEFLOAT        reduce using rule 155 (empty -> .)
    CTECHAR         reduce using rule 155 (empty -> .)
    ID              reduce using rule 155 (empty -> .)
    OPENPAREN       reduce using rule 155 (empty -> .)

    term1                          shift and go to state 176
    empty                          shift and go to state 179

state 105

    (145) factor -> vcte .

    MULTIPLICATION  reduce using rule 145 (factor -> vcte .)
    DIVISION        reduce using rule 145 (factor -> vcte .)
    ADDITION        reduce using rule 145 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 145 (factor -> vcte .)
    SEMICOLON       reduce using rule 145 (factor -> vcte .)
    GREATER         reduce using rule 145 (factor -> vcte .)
    LESS            reduce using rule 145 (factor -> vcte .)
    NOTEQUAL        reduce using rule 145 (factor -> vcte .)
    ISEQUAL         reduce using rule 145 (factor -> vcte .)
    CLOSEPAREN      reduce using rule 145 (factor -> vcte .)
    CLOSEBRACKET    reduce using rule 145 (factor -> vcte .)
    COMMA           reduce using rule 145 (factor -> vcte .)
    CTEINT          reduce using rule 145 (factor -> vcte .)
    CTEFLOAT        reduce using rule 145 (factor -> vcte .)
    CTECHAR         reduce using rule 145 (factor -> vcte .)
    ID              reduce using rule 145 (factor -> vcte .)
    OPENPAREN       reduce using rule 145 (factor -> vcte .)


state 106

    (146) factor -> factor1 .

    MULTIPLICATION  reduce using rule 146 (factor -> factor1 .)
    DIVISION        reduce using rule 146 (factor -> factor1 .)
    ADDITION        reduce using rule 146 (factor -> factor1 .)
    SUBSTRACTION    reduce using rule 146 (factor -> factor1 .)
    SEMICOLON       reduce using rule 146 (factor -> factor1 .)
    GREATER         reduce using rule 146 (factor -> factor1 .)
    LESS            reduce using rule 146 (factor -> factor1 .)
    NOTEQUAL        reduce using rule 146 (factor -> factor1 .)
    ISEQUAL         reduce using rule 146 (factor -> factor1 .)
    CLOSEPAREN      reduce using rule 146 (factor -> factor1 .)
    CLOSEBRACKET    reduce using rule 146 (factor -> factor1 .)
    COMMA           reduce using rule 146 (factor -> factor1 .)
    CTEINT          reduce using rule 146 (factor -> factor1 .)
    CTEFLOAT        reduce using rule 146 (factor -> factor1 .)
    CTECHAR         reduce using rule 146 (factor -> factor1 .)
    ID              reduce using rule 146 (factor -> factor1 .)
    OPENPAREN       reduce using rule 146 (factor -> factor1 .)


state 107

    (59) vcte -> cte_int .

    MULTIPLICATION  reduce using rule 59 (vcte -> cte_int .)
    DIVISION        reduce using rule 59 (vcte -> cte_int .)
    ADDITION        reduce using rule 59 (vcte -> cte_int .)
    SUBSTRACTION    reduce using rule 59 (vcte -> cte_int .)
    SEMICOLON       reduce using rule 59 (vcte -> cte_int .)
    GREATER         reduce using rule 59 (vcte -> cte_int .)
    LESS            reduce using rule 59 (vcte -> cte_int .)
    NOTEQUAL        reduce using rule 59 (vcte -> cte_int .)
    ISEQUAL         reduce using rule 59 (vcte -> cte_int .)
    CLOSEPAREN      reduce using rule 59 (vcte -> cte_int .)
    CLOSEBRACKET    reduce using rule 59 (vcte -> cte_int .)
    COMMA           reduce using rule 59 (vcte -> cte_int .)
    CTEINT          reduce using rule 59 (vcte -> cte_int .)
    CTEFLOAT        reduce using rule 59 (vcte -> cte_int .)
    CTECHAR         reduce using rule 59 (vcte -> cte_int .)
    ID              reduce using rule 59 (vcte -> cte_int .)
    OPENPAREN       reduce using rule 59 (vcte -> cte_int .)


state 108

    (60) vcte -> cte_float .

    MULTIPLICATION  reduce using rule 60 (vcte -> cte_float .)
    DIVISION        reduce using rule 60 (vcte -> cte_float .)
    ADDITION        reduce using rule 60 (vcte -> cte_float .)
    SUBSTRACTION    reduce using rule 60 (vcte -> cte_float .)
    SEMICOLON       reduce using rule 60 (vcte -> cte_float .)
    GREATER         reduce using rule 60 (vcte -> cte_float .)
    LESS            reduce using rule 60 (vcte -> cte_float .)
    NOTEQUAL        reduce using rule 60 (vcte -> cte_float .)
    ISEQUAL         reduce using rule 60 (vcte -> cte_float .)
    CLOSEPAREN      reduce using rule 60 (vcte -> cte_float .)
    CLOSEBRACKET    reduce using rule 60 (vcte -> cte_float .)
    COMMA           reduce using rule 60 (vcte -> cte_float .)
    CTEINT          reduce using rule 60 (vcte -> cte_float .)
    CTEFLOAT        reduce using rule 60 (vcte -> cte_float .)
    CTECHAR         reduce using rule 60 (vcte -> cte_float .)
    ID              reduce using rule 60 (vcte -> cte_float .)
    OPENPAREN       reduce using rule 60 (vcte -> cte_float .)


state 109

    (61) vcte -> cte_char .

    MULTIPLICATION  reduce using rule 61 (vcte -> cte_char .)
    DIVISION        reduce using rule 61 (vcte -> cte_char .)
    ADDITION        reduce using rule 61 (vcte -> cte_char .)
    SUBSTRACTION    reduce using rule 61 (vcte -> cte_char .)
    SEMICOLON       reduce using rule 61 (vcte -> cte_char .)
    GREATER         reduce using rule 61 (vcte -> cte_char .)
    LESS            reduce using rule 61 (vcte -> cte_char .)
    NOTEQUAL        reduce using rule 61 (vcte -> cte_char .)
    ISEQUAL         reduce using rule 61 (vcte -> cte_char .)
    CLOSEPAREN      reduce using rule 61 (vcte -> cte_char .)
    CLOSEBRACKET    reduce using rule 61 (vcte -> cte_char .)
    COMMA           reduce using rule 61 (vcte -> cte_char .)
    CTEINT          reduce using rule 61 (vcte -> cte_char .)
    CTEFLOAT        reduce using rule 61 (vcte -> cte_char .)
    CTECHAR         reduce using rule 61 (vcte -> cte_char .)
    ID              reduce using rule 61 (vcte -> cte_char .)
    OPENPAREN       reduce using rule 61 (vcte -> cte_char .)


state 110

    (62) vcte -> id . vcte1
    (64) vcte1 -> . OPENBRACKET exp CLOSEBRACKET vcte3
    (65) vcte1 -> . empty
    (155) empty -> .

    OPENBRACKET     shift and go to state 181
    MULTIPLICATION  reduce using rule 155 (empty -> .)
    DIVISION        reduce using rule 155 (empty -> .)
    ADDITION        reduce using rule 155 (empty -> .)
    SUBSTRACTION    reduce using rule 155 (empty -> .)
    SEMICOLON       reduce using rule 155 (empty -> .)
    GREATER         reduce using rule 155 (empty -> .)
    LESS            reduce using rule 155 (empty -> .)
    NOTEQUAL        reduce using rule 155 (empty -> .)
    ISEQUAL         reduce using rule 155 (empty -> .)
    CLOSEPAREN      reduce using rule 155 (empty -> .)
    CLOSEBRACKET    reduce using rule 155 (empty -> .)
    COMMA           reduce using rule 155 (empty -> .)
    CTEINT          reduce using rule 155 (empty -> .)
    CTEFLOAT        reduce using rule 155 (empty -> .)
    CTECHAR         reduce using rule 155 (empty -> .)
    ID              reduce using rule 155 (empty -> .)
    OPENPAREN       reduce using rule 155 (empty -> .)

    vcte1                          shift and go to state 180
    empty                          shift and go to state 182

state 111

    (63) vcte -> funCall .

    MULTIPLICATION  reduce using rule 63 (vcte -> funCall .)
    DIVISION        reduce using rule 63 (vcte -> funCall .)
    ADDITION        reduce using rule 63 (vcte -> funCall .)
    SUBSTRACTION    reduce using rule 63 (vcte -> funCall .)
    SEMICOLON       reduce using rule 63 (vcte -> funCall .)
    GREATER         reduce using rule 63 (vcte -> funCall .)
    LESS            reduce using rule 63 (vcte -> funCall .)
    NOTEQUAL        reduce using rule 63 (vcte -> funCall .)
    ISEQUAL         reduce using rule 63 (vcte -> funCall .)
    CLOSEPAREN      reduce using rule 63 (vcte -> funCall .)
    CLOSEBRACKET    reduce using rule 63 (vcte -> funCall .)
    COMMA           reduce using rule 63 (vcte -> funCall .)
    CTEINT          reduce using rule 63 (vcte -> funCall .)
    CTEFLOAT        reduce using rule 63 (vcte -> funCall .)
    CTECHAR         reduce using rule 63 (vcte -> funCall .)
    ID              reduce using rule 63 (vcte -> funCall .)
    OPENPAREN       reduce using rule 63 (vcte -> funCall .)


state 112

    (147) factor1 -> factor2 . vcte
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN

    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101

    vcte                           shift and go to state 183
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111

state 113

    (148) factor1 -> openP . expression closeP
    (74) expression -> . exp expression1
    (139) exp -> . term exp1
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    openP                          shift and go to state 113
    expression                     shift and go to state 184
    exp                            shift and go to state 185
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    factor1                        shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    factor2                        shift and go to state 112

state 114

    (68) cte_int -> CTEINT .

    MULTIPLICATION  reduce using rule 68 (cte_int -> CTEINT .)
    DIVISION        reduce using rule 68 (cte_int -> CTEINT .)
    ADDITION        reduce using rule 68 (cte_int -> CTEINT .)
    SUBSTRACTION    reduce using rule 68 (cte_int -> CTEINT .)
    SEMICOLON       reduce using rule 68 (cte_int -> CTEINT .)
    GREATER         reduce using rule 68 (cte_int -> CTEINT .)
    LESS            reduce using rule 68 (cte_int -> CTEINT .)
    NOTEQUAL        reduce using rule 68 (cte_int -> CTEINT .)
    ISEQUAL         reduce using rule 68 (cte_int -> CTEINT .)
    CLOSEPAREN      reduce using rule 68 (cte_int -> CTEINT .)
    CLOSEBRACKET    reduce using rule 68 (cte_int -> CTEINT .)
    COMMA           reduce using rule 68 (cte_int -> CTEINT .)
    CTEINT          reduce using rule 68 (cte_int -> CTEINT .)
    CTEFLOAT        reduce using rule 68 (cte_int -> CTEINT .)
    CTECHAR         reduce using rule 68 (cte_int -> CTEINT .)
    ID              reduce using rule 68 (cte_int -> CTEINT .)
    OPENPAREN       reduce using rule 68 (cte_int -> CTEINT .)


state 115

    (69) cte_float -> CTEFLOAT .

    MULTIPLICATION  reduce using rule 69 (cte_float -> CTEFLOAT .)
    DIVISION        reduce using rule 69 (cte_float -> CTEFLOAT .)
    ADDITION        reduce using rule 69 (cte_float -> CTEFLOAT .)
    SUBSTRACTION    reduce using rule 69 (cte_float -> CTEFLOAT .)
    SEMICOLON       reduce using rule 69 (cte_float -> CTEFLOAT .)
    GREATER         reduce using rule 69 (cte_float -> CTEFLOAT .)
    LESS            reduce using rule 69 (cte_float -> CTEFLOAT .)
    NOTEQUAL        reduce using rule 69 (cte_float -> CTEFLOAT .)
    ISEQUAL         reduce using rule 69 (cte_float -> CTEFLOAT .)
    CLOSEPAREN      reduce using rule 69 (cte_float -> CTEFLOAT .)
    CLOSEBRACKET    reduce using rule 69 (cte_float -> CTEFLOAT .)
    COMMA           reduce using rule 69 (cte_float -> CTEFLOAT .)
    CTEINT          reduce using rule 69 (cte_float -> CTEFLOAT .)
    CTEFLOAT        reduce using rule 69 (cte_float -> CTEFLOAT .)
    CTECHAR         reduce using rule 69 (cte_float -> CTEFLOAT .)
    ID              reduce using rule 69 (cte_float -> CTEFLOAT .)
    OPENPAREN       reduce using rule 69 (cte_float -> CTEFLOAT .)


state 116

    (70) cte_char -> CTECHAR .

    MULTIPLICATION  reduce using rule 70 (cte_char -> CTECHAR .)
    DIVISION        reduce using rule 70 (cte_char -> CTECHAR .)
    ADDITION        reduce using rule 70 (cte_char -> CTECHAR .)
    SUBSTRACTION    reduce using rule 70 (cte_char -> CTECHAR .)
    SEMICOLON       reduce using rule 70 (cte_char -> CTECHAR .)
    GREATER         reduce using rule 70 (cte_char -> CTECHAR .)
    LESS            reduce using rule 70 (cte_char -> CTECHAR .)
    NOTEQUAL        reduce using rule 70 (cte_char -> CTECHAR .)
    ISEQUAL         reduce using rule 70 (cte_char -> CTECHAR .)
    CLOSEPAREN      reduce using rule 70 (cte_char -> CTECHAR .)
    CLOSEBRACKET    reduce using rule 70 (cte_char -> CTECHAR .)
    COMMA           reduce using rule 70 (cte_char -> CTECHAR .)
    CTEINT          reduce using rule 70 (cte_char -> CTECHAR .)
    CTEFLOAT        reduce using rule 70 (cte_char -> CTECHAR .)
    CTECHAR         reduce using rule 70 (cte_char -> CTECHAR .)
    ID              reduce using rule 70 (cte_char -> CTECHAR .)
    OPENPAREN       reduce using rule 70 (cte_char -> CTECHAR .)


state 117

    (143) openP -> OPENPAREN .

    CTEINT          reduce using rule 143 (openP -> OPENPAREN .)
    CTEFLOAT        reduce using rule 143 (openP -> OPENPAREN .)
    CTECHAR         reduce using rule 143 (openP -> OPENPAREN .)
    ID              reduce using rule 143 (openP -> OPENPAREN .)
    ADDITION        reduce using rule 143 (openP -> OPENPAREN .)
    SUBSTRACTION    reduce using rule 143 (openP -> OPENPAREN .)
    OPENPAREN       reduce using rule 143 (openP -> OPENPAREN .)


state 118

    (149) factor2 -> ADDITION .

    CTEINT          reduce using rule 149 (factor2 -> ADDITION .)
    CTEFLOAT        reduce using rule 149 (factor2 -> ADDITION .)
    CTECHAR         reduce using rule 149 (factor2 -> ADDITION .)
    ID              reduce using rule 149 (factor2 -> ADDITION .)


state 119

    (150) factor2 -> SUBSTRACTION .

    CTEINT          reduce using rule 150 (factor2 -> SUBSTRACTION .)
    CTEFLOAT        reduce using rule 150 (factor2 -> SUBSTRACTION .)
    CTECHAR         reduce using rule 150 (factor2 -> SUBSTRACTION .)
    ID              reduce using rule 150 (factor2 -> SUBSTRACTION .)


state 120

    (14) vars1 -> OPENBRACKET CTEINT CLOSEBRACKET . vars3
    (16) vars3 -> . OPENBRACKET CTEINT CLOSEBRACKET
    (17) vars3 -> . empty
    (155) empty -> .

    OPENBRACKET     shift and go to state 186
    SEMICOLON       reduce using rule 155 (empty -> .)
    EQUALS          reduce using rule 155 (empty -> .)

    vars3                          shift and go to state 187
    empty                          shift and go to state 188

state 121

    (5) star -> starI declara_vars star1 CLOSEBRACES .

    $end            reduce using rule 5 (star -> starI declara_vars star1 CLOSEBRACES .)


state 122

    (8) star1 -> stmt star1 .

    CLOSEBRACES     reduce using rule 8 (star1 -> stmt star1 .)


state 123

    (27) stmt -> funCall SEMICOLON .

    IF              reduce using rule 27 (stmt -> funCall SEMICOLON .)
    PRINT           reduce using rule 27 (stmt -> funCall SEMICOLON .)
    READ            reduce using rule 27 (stmt -> funCall SEMICOLON .)
    ID              reduce using rule 27 (stmt -> funCall SEMICOLON .)
    RETURN          reduce using rule 27 (stmt -> funCall SEMICOLON .)
    REPEAT          reduce using rule 27 (stmt -> funCall SEMICOLON .)
    CIRCLE          reduce using rule 27 (stmt -> funCall SEMICOLON .)
    SQUARE          reduce using rule 27 (stmt -> funCall SEMICOLON .)
    TRIANGLE        reduce using rule 27 (stmt -> funCall SEMICOLON .)
    RECTANGLE       reduce using rule 27 (stmt -> funCall SEMICOLON .)
    HIDE_STAR       reduce using rule 27 (stmt -> funCall SEMICOLON .)
    SHOW_STAR       reduce using rule 27 (stmt -> funCall SEMICOLON .)
    COLOR_STAR      reduce using rule 27 (stmt -> funCall SEMICOLON .)
    SIZE_STAR       reduce using rule 27 (stmt -> funCall SEMICOLON .)
    SETXY           reduce using rule 27 (stmt -> funCall SEMICOLON .)
    HAND_DOWN       reduce using rule 27 (stmt -> funCall SEMICOLON .)
    HAND_UP         reduce using rule 27 (stmt -> funCall SEMICOLON .)
    GO              reduce using rule 27 (stmt -> funCall SEMICOLON .)
    LEFT            reduce using rule 27 (stmt -> funCall SEMICOLON .)
    RIGHT           reduce using rule 27 (stmt -> funCall SEMICOLON .)
    BACK            reduce using rule 27 (stmt -> funCall SEMICOLON .)
    ARC             reduce using rule 27 (stmt -> funCall SEMICOLON .)
    WHILE           reduce using rule 27 (stmt -> funCall SEMICOLON .)
    FOR             reduce using rule 27 (stmt -> funCall SEMICOLON .)
    CLOSEBRACES     reduce using rule 27 (stmt -> funCall SEMICOLON .)


state 124

    (52) assignment -> id assignment1 . equals assignment3 SEMICOLON
    (50) equals -> . EQUALS

    EQUALS          shift and go to state 38

    equals                         shift and go to state 189

state 125

    (53) assignment1 -> assignment2 .
    (54) assignment1 -> assignment2 . assignment1
    (53) assignment1 -> . assignment2
    (54) assignment1 -> . assignment2 assignment1
    (55) assignment1 -> . empty
    (56) assignment2 -> . OPENBRACKET exp CLOSEBRACKET
    (155) empty -> .

  ! reduce/reduce conflict for EQUALS resolved using rule 53 (assignment1 -> assignment2 .)
    EQUALS          reduce using rule 53 (assignment1 -> assignment2 .)
    OPENBRACKET     shift and go to state 127

  ! EQUALS          [ reduce using rule 155 (empty -> .) ]

    assignment2                    shift and go to state 125
    assignment1                    shift and go to state 190
    empty                          shift and go to state 126

state 126

    (55) assignment1 -> empty .

    EQUALS          reduce using rule 55 (assignment1 -> empty .)


state 127

    (56) assignment2 -> OPENBRACKET . exp CLOSEBRACKET
    (139) exp -> . term exp1
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    exp                            shift and go to state 191
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    factor1                        shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    factor2                        shift and go to state 112
    openP                          shift and go to state 113

state 128

    (81) condition -> IF head_cond . body condition1
    (88) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 139

    body                           shift and go to state 192

state 129

    (87) head_cond -> OPENPAREN . expression close_condition
    (74) expression -> . exp expression1
    (139) exp -> . term exp1
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    expression                     shift and go to state 193
    exp                            shift and go to state 185
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    factor1                        shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    factor2                        shift and go to state 112
    openP                          shift and go to state 113

state 130

    (45) print -> PRINT OPENPAREN . expression CLOSEPAREN SEMICOLON
    (74) expression -> . exp expression1
    (139) exp -> . term exp1
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    expression                     shift and go to state 194
    exp                            shift and go to state 185
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    factor1                        shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    factor2                        shift and go to state 112
    openP                          shift and go to state 113

state 131

    (46) read -> READ OPENPAREN . id read1 CLOSEPAREN SEMICOLON
    (51) id -> . ID

    ID              shift and go to state 196

    id                             shift and go to state 195

state 132

    (126) graphr -> repeat rep . OPENBRACES graphstmt graphr1 CLOSEBRACES

    OPENBRACES      shift and go to state 197


state 133

    (129) rep -> OPENPAREN . exp CLOSEPAREN
    (139) exp -> . term exp1
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    exp                            shift and go to state 198
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    factor1                        shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    factor2                        shift and go to state 112
    openP                          shift and go to state 113

state 134

    (100) funCall -> ID OPENPAREN . funCall2 CLOSEPAREN
    (101) funCall2 -> . exp funCall3
    (102) funCall2 -> . empty
    (139) exp -> . term exp1
    (155) empty -> .
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    CLOSEPAREN      reduce using rule 155 (empty -> .)
    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    funCall2                       shift and go to state 199
    exp                            shift and go to state 200
    empty                          shift and go to state 201
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    factor1                        shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    factor2                        shift and go to state 112
    openP                          shift and go to state 113

state 135

    (71) return -> RETURN return1 . SEMICOLON

    SEMICOLON       shift and go to state 202


state 136

    (72) return1 -> vcte .
    (145) factor -> vcte .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 72 (return1 -> vcte .)
    SEMICOLON       reduce using rule 72 (return1 -> vcte .)
    MULTIPLICATION  reduce using rule 145 (factor -> vcte .)
    DIVISION        reduce using rule 145 (factor -> vcte .)
    ADDITION        reduce using rule 145 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 145 (factor -> vcte .)

  ! SEMICOLON       [ reduce using rule 145 (factor -> vcte .) ]


state 137

    (73) return1 -> exp .

    SEMICOLON       reduce using rule 73 (return1 -> exp .)


state 138

    (97) while -> while1 body .

    IF              reduce using rule 97 (while -> while1 body .)
    PRINT           reduce using rule 97 (while -> while1 body .)
    READ            reduce using rule 97 (while -> while1 body .)
    ID              reduce using rule 97 (while -> while1 body .)
    RETURN          reduce using rule 97 (while -> while1 body .)
    REPEAT          reduce using rule 97 (while -> while1 body .)
    CIRCLE          reduce using rule 97 (while -> while1 body .)
    SQUARE          reduce using rule 97 (while -> while1 body .)
    TRIANGLE        reduce using rule 97 (while -> while1 body .)
    RECTANGLE       reduce using rule 97 (while -> while1 body .)
    HIDE_STAR       reduce using rule 97 (while -> while1 body .)
    SHOW_STAR       reduce using rule 97 (while -> while1 body .)
    COLOR_STAR      reduce using rule 97 (while -> while1 body .)
    SIZE_STAR       reduce using rule 97 (while -> while1 body .)
    SETXY           reduce using rule 97 (while -> while1 body .)
    HAND_DOWN       reduce using rule 97 (while -> while1 body .)
    HAND_UP         reduce using rule 97 (while -> while1 body .)
    GO              reduce using rule 97 (while -> while1 body .)
    LEFT            reduce using rule 97 (while -> while1 body .)
    RIGHT           reduce using rule 97 (while -> while1 body .)
    BACK            reduce using rule 97 (while -> while1 body .)
    ARC             reduce using rule 97 (while -> while1 body .)
    WHILE           reduce using rule 97 (while -> while1 body .)
    FOR             reduce using rule 97 (while -> while1 body .)
    CLOSEBRACES     reduce using rule 97 (while -> while1 body .)


state 139

    (88) body -> OPENBRACES . body1 CLOSEBRACES
    (90) body1 -> . stmt body1
    (91) body1 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . graphr
    (27) stmt -> . funCall SEMICOLON
    (28) stmt -> . return
    (155) empty -> .
    (52) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (81) condition -> . IF head_cond body condition1
    (45) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for
    (46) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (107) graphstmt -> . graphfig
    (108) graphstmt -> . graphview
    (109) graphstmt -> . graphmove
    (126) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (71) return -> . RETURN return1 SEMICOLON
    (51) id -> . ID
    (97) while -> . while1 body
    (92) for -> . for1 body
    (110) graphfig -> . graphfig1 SEMICOLON
    (111) graphfig -> . graphfig2 SEMICOLON
    (131) graphview -> . graphview0 SEMICOLON
    (132) graphview -> . graphview1 SEMICOLON
    (133) graphview -> . graphview2 SEMICOLON
    (116) graphmove -> . graphmove0 SEMICOLON
    (117) graphmove -> . graphmove1 SEMICOLON
    (118) graphmove -> . graphmove2 SEMICOLON
    (130) repeat -> . REPEAT
    (98) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (93) for1 -> . forInit OPENPAREN ID for2
    (112) graphfig1 -> . CIRCLE unaExp
    (113) graphfig1 -> . SQUARE unaExp
    (114) graphfig2 -> . TRIANGLE dosExp
    (115) graphfig2 -> . RECTANGLE dosExp
    (134) graphview0 -> . HIDE_STAR
    (135) graphview0 -> . SHOW_STAR
    (136) graphview1 -> . COLOR_STAR unaExp
    (137) graphview1 -> . SIZE_STAR unaExp
    (138) graphview2 -> . SETXY dosExp
    (119) graphmove0 -> . HAND_DOWN
    (120) graphmove0 -> . HAND_UP
    (121) graphmove1 -> . GO unaExp
    (122) graphmove1 -> . LEFT unaExp
    (123) graphmove1 -> . RIGHT unaExp
    (124) graphmove1 -> . BACK unaExp
    (125) graphmove2 -> . ARC dosExp
    (99) while_w -> . WHILE
    (96) forInit -> . FOR

    CLOSEBRACES     reduce using rule 155 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    ID              shift and go to state 62
    RETURN          shift and go to state 63
    REPEAT          shift and go to state 74
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92
    WHILE           shift and go to state 93
    FOR             shift and go to state 94

    body1                          shift and go to state 203
    stmt                           shift and go to state 204
    empty                          shift and go to state 205
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    graphr                         shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    repeat                         shift and go to state 61
    while1                         shift and go to state 64
    for1                           shift and go to state 65
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73
    while_w                        shift and go to state 75
    forInit                        shift and go to state 76

state 140

    (92) for -> for1 body .

    IF              reduce using rule 92 (for -> for1 body .)
    PRINT           reduce using rule 92 (for -> for1 body .)
    READ            reduce using rule 92 (for -> for1 body .)
    ID              reduce using rule 92 (for -> for1 body .)
    RETURN          reduce using rule 92 (for -> for1 body .)
    REPEAT          reduce using rule 92 (for -> for1 body .)
    CIRCLE          reduce using rule 92 (for -> for1 body .)
    SQUARE          reduce using rule 92 (for -> for1 body .)
    TRIANGLE        reduce using rule 92 (for -> for1 body .)
    RECTANGLE       reduce using rule 92 (for -> for1 body .)
    HIDE_STAR       reduce using rule 92 (for -> for1 body .)
    SHOW_STAR       reduce using rule 92 (for -> for1 body .)
    COLOR_STAR      reduce using rule 92 (for -> for1 body .)
    SIZE_STAR       reduce using rule 92 (for -> for1 body .)
    SETXY           reduce using rule 92 (for -> for1 body .)
    HAND_DOWN       reduce using rule 92 (for -> for1 body .)
    HAND_UP         reduce using rule 92 (for -> for1 body .)
    GO              reduce using rule 92 (for -> for1 body .)
    LEFT            reduce using rule 92 (for -> for1 body .)
    RIGHT           reduce using rule 92 (for -> for1 body .)
    BACK            reduce using rule 92 (for -> for1 body .)
    ARC             reduce using rule 92 (for -> for1 body .)
    WHILE           reduce using rule 92 (for -> for1 body .)
    FOR             reduce using rule 92 (for -> for1 body .)
    CLOSEBRACES     reduce using rule 92 (for -> for1 body .)


state 141

    (110) graphfig -> graphfig1 SEMICOLON .

    IF              reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)
    PRINT           reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)
    READ            reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)
    ID              reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)
    RETURN          reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)
    REPEAT          reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)
    CIRCLE          reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)
    SQUARE          reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)
    TRIANGLE        reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)
    RECTANGLE       reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)
    HIDE_STAR       reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)
    SHOW_STAR       reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)
    COLOR_STAR      reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)
    SIZE_STAR       reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)
    SETXY           reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)
    HAND_DOWN       reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)
    HAND_UP         reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)
    GO              reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)
    LEFT            reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)
    RIGHT           reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)
    BACK            reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)
    ARC             reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)
    WHILE           reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)
    FOR             reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 110 (graphfig -> graphfig1 SEMICOLON .)


state 142

    (111) graphfig -> graphfig2 SEMICOLON .

    IF              reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)
    PRINT           reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)
    READ            reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)
    ID              reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)
    RETURN          reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)
    REPEAT          reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)
    CIRCLE          reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)
    SQUARE          reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)
    TRIANGLE        reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)
    RECTANGLE       reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)
    HIDE_STAR       reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)
    SHOW_STAR       reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)
    COLOR_STAR      reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)
    SIZE_STAR       reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)
    SETXY           reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)
    HAND_DOWN       reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)
    HAND_UP         reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)
    GO              reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)
    LEFT            reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)
    RIGHT           reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)
    BACK            reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)
    ARC             reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)
    WHILE           reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)
    FOR             reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 111 (graphfig -> graphfig2 SEMICOLON .)


state 143

    (131) graphview -> graphview0 SEMICOLON .

    IF              reduce using rule 131 (graphview -> graphview0 SEMICOLON .)
    PRINT           reduce using rule 131 (graphview -> graphview0 SEMICOLON .)
    READ            reduce using rule 131 (graphview -> graphview0 SEMICOLON .)
    ID              reduce using rule 131 (graphview -> graphview0 SEMICOLON .)
    RETURN          reduce using rule 131 (graphview -> graphview0 SEMICOLON .)
    REPEAT          reduce using rule 131 (graphview -> graphview0 SEMICOLON .)
    CIRCLE          reduce using rule 131 (graphview -> graphview0 SEMICOLON .)
    SQUARE          reduce using rule 131 (graphview -> graphview0 SEMICOLON .)
    TRIANGLE        reduce using rule 131 (graphview -> graphview0 SEMICOLON .)
    RECTANGLE       reduce using rule 131 (graphview -> graphview0 SEMICOLON .)
    HIDE_STAR       reduce using rule 131 (graphview -> graphview0 SEMICOLON .)
    SHOW_STAR       reduce using rule 131 (graphview -> graphview0 SEMICOLON .)
    COLOR_STAR      reduce using rule 131 (graphview -> graphview0 SEMICOLON .)
    SIZE_STAR       reduce using rule 131 (graphview -> graphview0 SEMICOLON .)
    SETXY           reduce using rule 131 (graphview -> graphview0 SEMICOLON .)
    HAND_DOWN       reduce using rule 131 (graphview -> graphview0 SEMICOLON .)
    HAND_UP         reduce using rule 131 (graphview -> graphview0 SEMICOLON .)
    GO              reduce using rule 131 (graphview -> graphview0 SEMICOLON .)
    LEFT            reduce using rule 131 (graphview -> graphview0 SEMICOLON .)
    RIGHT           reduce using rule 131 (graphview -> graphview0 SEMICOLON .)
    BACK            reduce using rule 131 (graphview -> graphview0 SEMICOLON .)
    ARC             reduce using rule 131 (graphview -> graphview0 SEMICOLON .)
    WHILE           reduce using rule 131 (graphview -> graphview0 SEMICOLON .)
    FOR             reduce using rule 131 (graphview -> graphview0 SEMICOLON .)
    CLOSEBRACES     reduce using rule 131 (graphview -> graphview0 SEMICOLON .)


state 144

    (132) graphview -> graphview1 SEMICOLON .

    IF              reduce using rule 132 (graphview -> graphview1 SEMICOLON .)
    PRINT           reduce using rule 132 (graphview -> graphview1 SEMICOLON .)
    READ            reduce using rule 132 (graphview -> graphview1 SEMICOLON .)
    ID              reduce using rule 132 (graphview -> graphview1 SEMICOLON .)
    RETURN          reduce using rule 132 (graphview -> graphview1 SEMICOLON .)
    REPEAT          reduce using rule 132 (graphview -> graphview1 SEMICOLON .)
    CIRCLE          reduce using rule 132 (graphview -> graphview1 SEMICOLON .)
    SQUARE          reduce using rule 132 (graphview -> graphview1 SEMICOLON .)
    TRIANGLE        reduce using rule 132 (graphview -> graphview1 SEMICOLON .)
    RECTANGLE       reduce using rule 132 (graphview -> graphview1 SEMICOLON .)
    HIDE_STAR       reduce using rule 132 (graphview -> graphview1 SEMICOLON .)
    SHOW_STAR       reduce using rule 132 (graphview -> graphview1 SEMICOLON .)
    COLOR_STAR      reduce using rule 132 (graphview -> graphview1 SEMICOLON .)
    SIZE_STAR       reduce using rule 132 (graphview -> graphview1 SEMICOLON .)
    SETXY           reduce using rule 132 (graphview -> graphview1 SEMICOLON .)
    HAND_DOWN       reduce using rule 132 (graphview -> graphview1 SEMICOLON .)
    HAND_UP         reduce using rule 132 (graphview -> graphview1 SEMICOLON .)
    GO              reduce using rule 132 (graphview -> graphview1 SEMICOLON .)
    LEFT            reduce using rule 132 (graphview -> graphview1 SEMICOLON .)
    RIGHT           reduce using rule 132 (graphview -> graphview1 SEMICOLON .)
    BACK            reduce using rule 132 (graphview -> graphview1 SEMICOLON .)
    ARC             reduce using rule 132 (graphview -> graphview1 SEMICOLON .)
    WHILE           reduce using rule 132 (graphview -> graphview1 SEMICOLON .)
    FOR             reduce using rule 132 (graphview -> graphview1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 132 (graphview -> graphview1 SEMICOLON .)


state 145

    (133) graphview -> graphview2 SEMICOLON .

    IF              reduce using rule 133 (graphview -> graphview2 SEMICOLON .)
    PRINT           reduce using rule 133 (graphview -> graphview2 SEMICOLON .)
    READ            reduce using rule 133 (graphview -> graphview2 SEMICOLON .)
    ID              reduce using rule 133 (graphview -> graphview2 SEMICOLON .)
    RETURN          reduce using rule 133 (graphview -> graphview2 SEMICOLON .)
    REPEAT          reduce using rule 133 (graphview -> graphview2 SEMICOLON .)
    CIRCLE          reduce using rule 133 (graphview -> graphview2 SEMICOLON .)
    SQUARE          reduce using rule 133 (graphview -> graphview2 SEMICOLON .)
    TRIANGLE        reduce using rule 133 (graphview -> graphview2 SEMICOLON .)
    RECTANGLE       reduce using rule 133 (graphview -> graphview2 SEMICOLON .)
    HIDE_STAR       reduce using rule 133 (graphview -> graphview2 SEMICOLON .)
    SHOW_STAR       reduce using rule 133 (graphview -> graphview2 SEMICOLON .)
    COLOR_STAR      reduce using rule 133 (graphview -> graphview2 SEMICOLON .)
    SIZE_STAR       reduce using rule 133 (graphview -> graphview2 SEMICOLON .)
    SETXY           reduce using rule 133 (graphview -> graphview2 SEMICOLON .)
    HAND_DOWN       reduce using rule 133 (graphview -> graphview2 SEMICOLON .)
    HAND_UP         reduce using rule 133 (graphview -> graphview2 SEMICOLON .)
    GO              reduce using rule 133 (graphview -> graphview2 SEMICOLON .)
    LEFT            reduce using rule 133 (graphview -> graphview2 SEMICOLON .)
    RIGHT           reduce using rule 133 (graphview -> graphview2 SEMICOLON .)
    BACK            reduce using rule 133 (graphview -> graphview2 SEMICOLON .)
    ARC             reduce using rule 133 (graphview -> graphview2 SEMICOLON .)
    WHILE           reduce using rule 133 (graphview -> graphview2 SEMICOLON .)
    FOR             reduce using rule 133 (graphview -> graphview2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 133 (graphview -> graphview2 SEMICOLON .)


state 146

    (116) graphmove -> graphmove0 SEMICOLON .

    IF              reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)
    PRINT           reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)
    READ            reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)
    ID              reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)
    RETURN          reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)
    REPEAT          reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)
    CIRCLE          reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)
    SQUARE          reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)
    TRIANGLE        reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)
    RECTANGLE       reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)
    HIDE_STAR       reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)
    SHOW_STAR       reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)
    COLOR_STAR      reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)
    SIZE_STAR       reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)
    SETXY           reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)
    HAND_DOWN       reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)
    HAND_UP         reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)
    GO              reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)
    LEFT            reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)
    RIGHT           reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)
    BACK            reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)
    ARC             reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)
    WHILE           reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)
    FOR             reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)
    CLOSEBRACES     reduce using rule 116 (graphmove -> graphmove0 SEMICOLON .)


state 147

    (117) graphmove -> graphmove1 SEMICOLON .

    IF              reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)
    PRINT           reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)
    READ            reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)
    ID              reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)
    RETURN          reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)
    REPEAT          reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)
    CIRCLE          reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)
    SQUARE          reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)
    TRIANGLE        reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)
    RECTANGLE       reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)
    HIDE_STAR       reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)
    SHOW_STAR       reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)
    COLOR_STAR      reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)
    SIZE_STAR       reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)
    SETXY           reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)
    HAND_DOWN       reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)
    HAND_UP         reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)
    GO              reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)
    LEFT            reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)
    RIGHT           reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)
    BACK            reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)
    ARC             reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)
    WHILE           reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)
    FOR             reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 117 (graphmove -> graphmove1 SEMICOLON .)


state 148

    (118) graphmove -> graphmove2 SEMICOLON .

    IF              reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)
    PRINT           reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)
    READ            reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)
    ID              reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)
    RETURN          reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)
    REPEAT          reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)
    CIRCLE          reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)
    SQUARE          reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)
    TRIANGLE        reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)
    RECTANGLE       reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)
    HIDE_STAR       reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)
    SHOW_STAR       reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)
    COLOR_STAR      reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)
    SIZE_STAR       reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)
    SETXY           reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)
    HAND_DOWN       reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)
    HAND_UP         reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)
    GO              reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)
    LEFT            reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)
    RIGHT           reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)
    BACK            reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)
    ARC             reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)
    WHILE           reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)
    FOR             reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 118 (graphmove -> graphmove2 SEMICOLON .)


state 149

    (98) while1 -> while_w OPENPAREN . expression CLOSEPAREN
    (74) expression -> . exp expression1
    (139) exp -> . term exp1
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    expression                     shift and go to state 206
    exp                            shift and go to state 185
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    factor1                        shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    factor2                        shift and go to state 112
    openP                          shift and go to state 113

state 150

    (93) for1 -> forInit OPENPAREN . ID for2

    ID              shift and go to state 207


state 151

    (112) graphfig1 -> CIRCLE unaExp .

    SEMICOLON       reduce using rule 112 (graphfig1 -> CIRCLE unaExp .)


state 152

    (106) unaExp -> OPENPAREN . exp CLOSEPAREN
    (139) exp -> . term exp1
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    exp                            shift and go to state 208
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    factor1                        shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    factor2                        shift and go to state 112
    openP                          shift and go to state 113

state 153

    (113) graphfig1 -> SQUARE unaExp .

    SEMICOLON       reduce using rule 113 (graphfig1 -> SQUARE unaExp .)


state 154

    (114) graphfig2 -> TRIANGLE dosExp .

    SEMICOLON       reduce using rule 114 (graphfig2 -> TRIANGLE dosExp .)


state 155

    (105) dosExp -> OPENPAREN . exp COMMA exp CLOSEPAREN
    (139) exp -> . term exp1
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    exp                            shift and go to state 209
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    factor1                        shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    factor2                        shift and go to state 112
    openP                          shift and go to state 113

state 156

    (115) graphfig2 -> RECTANGLE dosExp .

    SEMICOLON       reduce using rule 115 (graphfig2 -> RECTANGLE dosExp .)


state 157

    (136) graphview1 -> COLOR_STAR unaExp .

    SEMICOLON       reduce using rule 136 (graphview1 -> COLOR_STAR unaExp .)


state 158

    (137) graphview1 -> SIZE_STAR unaExp .

    SEMICOLON       reduce using rule 137 (graphview1 -> SIZE_STAR unaExp .)


state 159

    (138) graphview2 -> SETXY dosExp .

    SEMICOLON       reduce using rule 138 (graphview2 -> SETXY dosExp .)


state 160

    (121) graphmove1 -> GO unaExp .

    SEMICOLON       reduce using rule 121 (graphmove1 -> GO unaExp .)


state 161

    (122) graphmove1 -> LEFT unaExp .

    SEMICOLON       reduce using rule 122 (graphmove1 -> LEFT unaExp .)


state 162

    (123) graphmove1 -> RIGHT unaExp .

    SEMICOLON       reduce using rule 123 (graphmove1 -> RIGHT unaExp .)


state 163

    (124) graphmove1 -> BACK unaExp .

    SEMICOLON       reduce using rule 124 (graphmove1 -> BACK unaExp .)


state 164

    (125) graphmove2 -> ARC dosExp .

    SEMICOLON       reduce using rule 125 (graphmove2 -> ARC dosExp .)


state 165

    (31) function -> FUN functionI function2 inicia_fun declara_vars . function4 termina_fun
    (37) function4 -> . stmt function4
    (38) function4 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . graphr
    (27) stmt -> . funCall SEMICOLON
    (28) stmt -> . return
    (155) empty -> .
    (52) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (81) condition -> . IF head_cond body condition1
    (45) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for
    (46) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (107) graphstmt -> . graphfig
    (108) graphstmt -> . graphview
    (109) graphstmt -> . graphmove
    (126) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (71) return -> . RETURN return1 SEMICOLON
    (51) id -> . ID
    (97) while -> . while1 body
    (92) for -> . for1 body
    (110) graphfig -> . graphfig1 SEMICOLON
    (111) graphfig -> . graphfig2 SEMICOLON
    (131) graphview -> . graphview0 SEMICOLON
    (132) graphview -> . graphview1 SEMICOLON
    (133) graphview -> . graphview2 SEMICOLON
    (116) graphmove -> . graphmove0 SEMICOLON
    (117) graphmove -> . graphmove1 SEMICOLON
    (118) graphmove -> . graphmove2 SEMICOLON
    (130) repeat -> . REPEAT
    (98) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (93) for1 -> . forInit OPENPAREN ID for2
    (112) graphfig1 -> . CIRCLE unaExp
    (113) graphfig1 -> . SQUARE unaExp
    (114) graphfig2 -> . TRIANGLE dosExp
    (115) graphfig2 -> . RECTANGLE dosExp
    (134) graphview0 -> . HIDE_STAR
    (135) graphview0 -> . SHOW_STAR
    (136) graphview1 -> . COLOR_STAR unaExp
    (137) graphview1 -> . SIZE_STAR unaExp
    (138) graphview2 -> . SETXY dosExp
    (119) graphmove0 -> . HAND_DOWN
    (120) graphmove0 -> . HAND_UP
    (121) graphmove1 -> . GO unaExp
    (122) graphmove1 -> . LEFT unaExp
    (123) graphmove1 -> . RIGHT unaExp
    (124) graphmove1 -> . BACK unaExp
    (125) graphmove2 -> . ARC dosExp
    (99) while_w -> . WHILE
    (96) forInit -> . FOR

    CLOSEBRACES     reduce using rule 155 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    ID              shift and go to state 62
    RETURN          shift and go to state 63
    REPEAT          shift and go to state 74
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92
    WHILE           shift and go to state 93
    FOR             shift and go to state 94

    function4                      shift and go to state 210
    stmt                           shift and go to state 211
    empty                          shift and go to state 212
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    graphr                         shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    repeat                         shift and go to state 61
    while1                         shift and go to state 64
    for1                           shift and go to state 65
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73
    while_w                        shift and go to state 75
    forInit                        shift and go to state 76

state 166

    (34) function2 -> OPENPAREN function3 CLOSEPAREN .

    OPENBRACES      reduce using rule 34 (function2 -> OPENPAREN function3 CLOSEPAREN .)


state 167

    (35) function3 -> funParam function5 .

    CLOSEPAREN      reduce using rule 35 (function3 -> funParam function5 .)


state 168

    (39) function5 -> COMMA . funParam function5
    (41) funParam -> . type ID
    (42) type -> . INT
    (43) type -> . FLOAT
    (44) type -> . CHAR

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    funParam                       shift and go to state 213
    type                           shift and go to state 100

state 169

    (40) function5 -> empty .

    CLOSEPAREN      reduce using rule 40 (function5 -> empty .)


state 170

    (41) funParam -> type ID .

    COMMA           reduce using rule 41 (funParam -> type ID .)
    CLOSEPAREN      reduce using rule 41 (funParam -> type ID .)


state 171

    (12) vars -> type ID vars1 equals exp SEMICOLON .

    INT             reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    FLOAT           reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    CHAR            reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    FUN             reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    MULTIPLICATION  reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    IF              reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    PRINT           reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    READ            reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    ID              reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    RETURN          reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    REPEAT          reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    CIRCLE          reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    SQUARE          reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    TRIANGLE        reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    RECTANGLE       reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    HIDE_STAR       reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    SHOW_STAR       reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    COLOR_STAR      reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    SIZE_STAR       reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    SETXY           reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    HAND_DOWN       reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    HAND_UP         reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    GO              reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    LEFT            reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    RIGHT           reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    BACK            reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    ARC             reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    WHILE           reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    FOR             reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)
    CLOSEBRACES     reduce using rule 12 (vars -> type ID vars1 equals exp SEMICOLON .)


state 172

    (139) exp -> term exp1 .

    SEMICOLON       reduce using rule 139 (exp -> term exp1 .)
    GREATER         reduce using rule 139 (exp -> term exp1 .)
    LESS            reduce using rule 139 (exp -> term exp1 .)
    NOTEQUAL        reduce using rule 139 (exp -> term exp1 .)
    ISEQUAL         reduce using rule 139 (exp -> term exp1 .)
    CLOSEPAREN      reduce using rule 139 (exp -> term exp1 .)
    CLOSEBRACKET    reduce using rule 139 (exp -> term exp1 .)
    COMMA           reduce using rule 139 (exp -> term exp1 .)
    CTEINT          reduce using rule 139 (exp -> term exp1 .)
    CTEFLOAT        reduce using rule 139 (exp -> term exp1 .)
    CTECHAR         reduce using rule 139 (exp -> term exp1 .)
    ID              reduce using rule 139 (exp -> term exp1 .)
    ADDITION        reduce using rule 139 (exp -> term exp1 .)
    SUBSTRACTION    reduce using rule 139 (exp -> term exp1 .)
    OPENPAREN       reduce using rule 139 (exp -> term exp1 .)


state 173

    (140) exp1 -> ADDITION . exp
    (139) exp -> . term exp1
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    exp                            shift and go to state 214
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    factor1                        shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    factor2                        shift and go to state 112
    openP                          shift and go to state 113

state 174

    (141) exp1 -> SUBSTRACTION . exp
    (139) exp -> . term exp1
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    exp                            shift and go to state 215
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    factor1                        shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    factor2                        shift and go to state 112
    openP                          shift and go to state 113

state 175

    (142) exp1 -> empty .

    SEMICOLON       reduce using rule 142 (exp1 -> empty .)
    GREATER         reduce using rule 142 (exp1 -> empty .)
    LESS            reduce using rule 142 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 142 (exp1 -> empty .)
    ISEQUAL         reduce using rule 142 (exp1 -> empty .)
    CLOSEPAREN      reduce using rule 142 (exp1 -> empty .)
    CLOSEBRACKET    reduce using rule 142 (exp1 -> empty .)
    COMMA           reduce using rule 142 (exp1 -> empty .)
    CTEINT          reduce using rule 142 (exp1 -> empty .)
    CTEFLOAT        reduce using rule 142 (exp1 -> empty .)
    CTECHAR         reduce using rule 142 (exp1 -> empty .)
    ID              reduce using rule 142 (exp1 -> empty .)
    ADDITION        reduce using rule 142 (exp1 -> empty .)
    SUBSTRACTION    reduce using rule 142 (exp1 -> empty .)
    OPENPAREN       reduce using rule 142 (exp1 -> empty .)


state 176

    (151) term -> factor term1 .

    ADDITION        reduce using rule 151 (term -> factor term1 .)
    SUBSTRACTION    reduce using rule 151 (term -> factor term1 .)
    SEMICOLON       reduce using rule 151 (term -> factor term1 .)
    GREATER         reduce using rule 151 (term -> factor term1 .)
    LESS            reduce using rule 151 (term -> factor term1 .)
    NOTEQUAL        reduce using rule 151 (term -> factor term1 .)
    ISEQUAL         reduce using rule 151 (term -> factor term1 .)
    CLOSEPAREN      reduce using rule 151 (term -> factor term1 .)
    CLOSEBRACKET    reduce using rule 151 (term -> factor term1 .)
    COMMA           reduce using rule 151 (term -> factor term1 .)
    CTEINT          reduce using rule 151 (term -> factor term1 .)
    CTEFLOAT        reduce using rule 151 (term -> factor term1 .)
    CTECHAR         reduce using rule 151 (term -> factor term1 .)
    ID              reduce using rule 151 (term -> factor term1 .)
    OPENPAREN       reduce using rule 151 (term -> factor term1 .)


state 177

    (152) term1 -> MULTIPLICATION . term
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    term                           shift and go to state 216
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    factor1                        shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    factor2                        shift and go to state 112
    openP                          shift and go to state 113

state 178

    (153) term1 -> DIVISION . term
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    term                           shift and go to state 217
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    factor1                        shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    factor2                        shift and go to state 112
    openP                          shift and go to state 113

state 179

    (154) term1 -> empty .

    ADDITION        reduce using rule 154 (term1 -> empty .)
    SUBSTRACTION    reduce using rule 154 (term1 -> empty .)
    SEMICOLON       reduce using rule 154 (term1 -> empty .)
    GREATER         reduce using rule 154 (term1 -> empty .)
    LESS            reduce using rule 154 (term1 -> empty .)
    NOTEQUAL        reduce using rule 154 (term1 -> empty .)
    ISEQUAL         reduce using rule 154 (term1 -> empty .)
    CLOSEPAREN      reduce using rule 154 (term1 -> empty .)
    CLOSEBRACKET    reduce using rule 154 (term1 -> empty .)
    COMMA           reduce using rule 154 (term1 -> empty .)
    CTEINT          reduce using rule 154 (term1 -> empty .)
    CTEFLOAT        reduce using rule 154 (term1 -> empty .)
    CTECHAR         reduce using rule 154 (term1 -> empty .)
    ID              reduce using rule 154 (term1 -> empty .)
    OPENPAREN       reduce using rule 154 (term1 -> empty .)


state 180

    (62) vcte -> id vcte1 .

    MULTIPLICATION  reduce using rule 62 (vcte -> id vcte1 .)
    DIVISION        reduce using rule 62 (vcte -> id vcte1 .)
    ADDITION        reduce using rule 62 (vcte -> id vcte1 .)
    SUBSTRACTION    reduce using rule 62 (vcte -> id vcte1 .)
    SEMICOLON       reduce using rule 62 (vcte -> id vcte1 .)
    GREATER         reduce using rule 62 (vcte -> id vcte1 .)
    LESS            reduce using rule 62 (vcte -> id vcte1 .)
    NOTEQUAL        reduce using rule 62 (vcte -> id vcte1 .)
    ISEQUAL         reduce using rule 62 (vcte -> id vcte1 .)
    CLOSEPAREN      reduce using rule 62 (vcte -> id vcte1 .)
    CLOSEBRACKET    reduce using rule 62 (vcte -> id vcte1 .)
    COMMA           reduce using rule 62 (vcte -> id vcte1 .)
    CTEINT          reduce using rule 62 (vcte -> id vcte1 .)
    CTEFLOAT        reduce using rule 62 (vcte -> id vcte1 .)
    CTECHAR         reduce using rule 62 (vcte -> id vcte1 .)
    ID              reduce using rule 62 (vcte -> id vcte1 .)
    OPENPAREN       reduce using rule 62 (vcte -> id vcte1 .)


state 181

    (64) vcte1 -> OPENBRACKET . exp CLOSEBRACKET vcte3
    (139) exp -> . term exp1
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    exp                            shift and go to state 218
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    factor1                        shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    factor2                        shift and go to state 112
    openP                          shift and go to state 113

state 182

    (65) vcte1 -> empty .

    MULTIPLICATION  reduce using rule 65 (vcte1 -> empty .)
    DIVISION        reduce using rule 65 (vcte1 -> empty .)
    ADDITION        reduce using rule 65 (vcte1 -> empty .)
    SUBSTRACTION    reduce using rule 65 (vcte1 -> empty .)
    SEMICOLON       reduce using rule 65 (vcte1 -> empty .)
    GREATER         reduce using rule 65 (vcte1 -> empty .)
    LESS            reduce using rule 65 (vcte1 -> empty .)
    NOTEQUAL        reduce using rule 65 (vcte1 -> empty .)
    ISEQUAL         reduce using rule 65 (vcte1 -> empty .)
    CLOSEPAREN      reduce using rule 65 (vcte1 -> empty .)
    CLOSEBRACKET    reduce using rule 65 (vcte1 -> empty .)
    COMMA           reduce using rule 65 (vcte1 -> empty .)
    CTEINT          reduce using rule 65 (vcte1 -> empty .)
    CTEFLOAT        reduce using rule 65 (vcte1 -> empty .)
    CTECHAR         reduce using rule 65 (vcte1 -> empty .)
    ID              reduce using rule 65 (vcte1 -> empty .)
    OPENPAREN       reduce using rule 65 (vcte1 -> empty .)


state 183

    (147) factor1 -> factor2 vcte .

    MULTIPLICATION  reduce using rule 147 (factor1 -> factor2 vcte .)
    DIVISION        reduce using rule 147 (factor1 -> factor2 vcte .)
    ADDITION        reduce using rule 147 (factor1 -> factor2 vcte .)
    SUBSTRACTION    reduce using rule 147 (factor1 -> factor2 vcte .)
    SEMICOLON       reduce using rule 147 (factor1 -> factor2 vcte .)
    GREATER         reduce using rule 147 (factor1 -> factor2 vcte .)
    LESS            reduce using rule 147 (factor1 -> factor2 vcte .)
    NOTEQUAL        reduce using rule 147 (factor1 -> factor2 vcte .)
    ISEQUAL         reduce using rule 147 (factor1 -> factor2 vcte .)
    CLOSEPAREN      reduce using rule 147 (factor1 -> factor2 vcte .)
    CLOSEBRACKET    reduce using rule 147 (factor1 -> factor2 vcte .)
    COMMA           reduce using rule 147 (factor1 -> factor2 vcte .)
    CTEINT          reduce using rule 147 (factor1 -> factor2 vcte .)
    CTEFLOAT        reduce using rule 147 (factor1 -> factor2 vcte .)
    CTECHAR         reduce using rule 147 (factor1 -> factor2 vcte .)
    ID              reduce using rule 147 (factor1 -> factor2 vcte .)
    OPENPAREN       reduce using rule 147 (factor1 -> factor2 vcte .)


state 184

    (148) factor1 -> openP expression . closeP
    (144) closeP -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 220

    closeP                         shift and go to state 219

state 185

    (74) expression -> exp . expression1
    (75) expression1 -> . loper exp
    (76) expression1 -> . empty
    (77) loper -> . GREATER
    (78) loper -> . LESS
    (79) loper -> . NOTEQUAL
    (80) loper -> . ISEQUAL
    (155) empty -> .

    GREATER         shift and go to state 224
    LESS            shift and go to state 225
    NOTEQUAL        shift and go to state 226
    ISEQUAL         shift and go to state 227
    CLOSEPAREN      reduce using rule 155 (empty -> .)

    expression1                    shift and go to state 221
    loper                          shift and go to state 222
    empty                          shift and go to state 223

state 186

    (16) vars3 -> OPENBRACKET . CTEINT CLOSEBRACKET

    CTEINT          shift and go to state 228


state 187

    (14) vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .

    SEMICOLON       reduce using rule 14 (vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .)
    EQUALS          reduce using rule 14 (vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .)


state 188

    (17) vars3 -> empty .

    SEMICOLON       reduce using rule 17 (vars3 -> empty .)
    EQUALS          reduce using rule 17 (vars3 -> empty .)


state 189

    (52) assignment -> id assignment1 equals . assignment3 SEMICOLON
    (57) assignment3 -> . exp
    (58) assignment3 -> . read
    (139) exp -> . term exp1
    (46) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    READ            shift and go to state 57
    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    id                             shift and go to state 110
    assignment3                    shift and go to state 229
    exp                            shift and go to state 230
    read                           shift and go to state 231
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    factor1                        shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    funCall                        shift and go to state 111
    factor2                        shift and go to state 112
    openP                          shift and go to state 113

state 190

    (54) assignment1 -> assignment2 assignment1 .

    EQUALS          reduce using rule 54 (assignment1 -> assignment2 assignment1 .)


state 191

    (56) assignment2 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 232


state 192

    (81) condition -> IF head_cond body . condition1
    (82) condition1 -> . elseif head_cond body condition1
    (83) condition1 -> . else body
    (84) condition1 -> . empty
    (85) elseif -> . ELSEIF
    (86) else -> . ELSE
    (155) empty -> .

    ELSEIF          shift and go to state 237
    ELSE            shift and go to state 238
    IF              reduce using rule 155 (empty -> .)
    PRINT           reduce using rule 155 (empty -> .)
    READ            reduce using rule 155 (empty -> .)
    ID              reduce using rule 155 (empty -> .)
    RETURN          reduce using rule 155 (empty -> .)
    REPEAT          reduce using rule 155 (empty -> .)
    CIRCLE          reduce using rule 155 (empty -> .)
    SQUARE          reduce using rule 155 (empty -> .)
    TRIANGLE        reduce using rule 155 (empty -> .)
    RECTANGLE       reduce using rule 155 (empty -> .)
    HIDE_STAR       reduce using rule 155 (empty -> .)
    SHOW_STAR       reduce using rule 155 (empty -> .)
    COLOR_STAR      reduce using rule 155 (empty -> .)
    SIZE_STAR       reduce using rule 155 (empty -> .)
    SETXY           reduce using rule 155 (empty -> .)
    HAND_DOWN       reduce using rule 155 (empty -> .)
    HAND_UP         reduce using rule 155 (empty -> .)
    GO              reduce using rule 155 (empty -> .)
    LEFT            reduce using rule 155 (empty -> .)
    RIGHT           reduce using rule 155 (empty -> .)
    BACK            reduce using rule 155 (empty -> .)
    ARC             reduce using rule 155 (empty -> .)
    WHILE           reduce using rule 155 (empty -> .)
    FOR             reduce using rule 155 (empty -> .)
    CLOSEBRACES     reduce using rule 155 (empty -> .)

    condition1                     shift and go to state 233
    elseif                         shift and go to state 234
    else                           shift and go to state 235
    empty                          shift and go to state 236

state 193

    (87) head_cond -> OPENPAREN expression . close_condition
    (89) close_condition -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 240

    close_condition                shift and go to state 239

state 194

    (45) print -> PRINT OPENPAREN expression . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 241


state 195

    (46) read -> READ OPENPAREN id . read1 CLOSEPAREN SEMICOLON
    (47) read1 -> . OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (48) read1 -> . OPENBRACKET exp CLOSEBRACKET
    (49) read1 -> . empty
    (155) empty -> .

    OPENBRACKET     shift and go to state 243
    CLOSEPAREN      reduce using rule 155 (empty -> .)

    read1                          shift and go to state 242
    empty                          shift and go to state 244

state 196

    (51) id -> ID .

    OPENBRACKET     reduce using rule 51 (id -> ID .)
    CLOSEPAREN      reduce using rule 51 (id -> ID .)


state 197

    (126) graphr -> repeat rep OPENBRACES . graphstmt graphr1 CLOSEBRACES
    (107) graphstmt -> . graphfig
    (108) graphstmt -> . graphview
    (109) graphstmt -> . graphmove
    (110) graphfig -> . graphfig1 SEMICOLON
    (111) graphfig -> . graphfig2 SEMICOLON
    (131) graphview -> . graphview0 SEMICOLON
    (132) graphview -> . graphview1 SEMICOLON
    (133) graphview -> . graphview2 SEMICOLON
    (116) graphmove -> . graphmove0 SEMICOLON
    (117) graphmove -> . graphmove1 SEMICOLON
    (118) graphmove -> . graphmove2 SEMICOLON
    (112) graphfig1 -> . CIRCLE unaExp
    (113) graphfig1 -> . SQUARE unaExp
    (114) graphfig2 -> . TRIANGLE dosExp
    (115) graphfig2 -> . RECTANGLE dosExp
    (134) graphview0 -> . HIDE_STAR
    (135) graphview0 -> . SHOW_STAR
    (136) graphview1 -> . COLOR_STAR unaExp
    (137) graphview1 -> . SIZE_STAR unaExp
    (138) graphview2 -> . SETXY dosExp
    (119) graphmove0 -> . HAND_DOWN
    (120) graphmove0 -> . HAND_UP
    (121) graphmove1 -> . GO unaExp
    (122) graphmove1 -> . LEFT unaExp
    (123) graphmove1 -> . RIGHT unaExp
    (124) graphmove1 -> . BACK unaExp
    (125) graphmove2 -> . ARC dosExp

    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92

    graphstmt                      shift and go to state 245
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73

state 198

    (129) rep -> OPENPAREN exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 246


state 199

    (100) funCall -> ID OPENPAREN funCall2 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 247


state 200

    (101) funCall2 -> exp . funCall3
    (103) funCall3 -> . COMMA exp funCall2
    (104) funCall3 -> . empty
    (155) empty -> .

    COMMA           shift and go to state 249
    CLOSEPAREN      reduce using rule 155 (empty -> .)

    funCall3                       shift and go to state 248
    empty                          shift and go to state 250

state 201

    (102) funCall2 -> empty .

    CLOSEPAREN      reduce using rule 102 (funCall2 -> empty .)


state 202

    (71) return -> RETURN return1 SEMICOLON .

    IF              reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    PRINT           reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    READ            reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    ID              reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    RETURN          reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    REPEAT          reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    CIRCLE          reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    SQUARE          reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    TRIANGLE        reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    RECTANGLE       reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    HIDE_STAR       reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    SHOW_STAR       reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    COLOR_STAR      reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    SIZE_STAR       reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    SETXY           reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    HAND_DOWN       reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    HAND_UP         reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    GO              reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    LEFT            reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    RIGHT           reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    BACK            reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    ARC             reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    WHILE           reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    FOR             reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 71 (return -> RETURN return1 SEMICOLON .)


state 203

    (88) body -> OPENBRACES body1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 251


state 204

    (90) body1 -> stmt . body1
    (90) body1 -> . stmt body1
    (91) body1 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . graphr
    (27) stmt -> . funCall SEMICOLON
    (28) stmt -> . return
    (155) empty -> .
    (52) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (81) condition -> . IF head_cond body condition1
    (45) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for
    (46) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (107) graphstmt -> . graphfig
    (108) graphstmt -> . graphview
    (109) graphstmt -> . graphmove
    (126) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (71) return -> . RETURN return1 SEMICOLON
    (51) id -> . ID
    (97) while -> . while1 body
    (92) for -> . for1 body
    (110) graphfig -> . graphfig1 SEMICOLON
    (111) graphfig -> . graphfig2 SEMICOLON
    (131) graphview -> . graphview0 SEMICOLON
    (132) graphview -> . graphview1 SEMICOLON
    (133) graphview -> . graphview2 SEMICOLON
    (116) graphmove -> . graphmove0 SEMICOLON
    (117) graphmove -> . graphmove1 SEMICOLON
    (118) graphmove -> . graphmove2 SEMICOLON
    (130) repeat -> . REPEAT
    (98) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (93) for1 -> . forInit OPENPAREN ID for2
    (112) graphfig1 -> . CIRCLE unaExp
    (113) graphfig1 -> . SQUARE unaExp
    (114) graphfig2 -> . TRIANGLE dosExp
    (115) graphfig2 -> . RECTANGLE dosExp
    (134) graphview0 -> . HIDE_STAR
    (135) graphview0 -> . SHOW_STAR
    (136) graphview1 -> . COLOR_STAR unaExp
    (137) graphview1 -> . SIZE_STAR unaExp
    (138) graphview2 -> . SETXY dosExp
    (119) graphmove0 -> . HAND_DOWN
    (120) graphmove0 -> . HAND_UP
    (121) graphmove1 -> . GO unaExp
    (122) graphmove1 -> . LEFT unaExp
    (123) graphmove1 -> . RIGHT unaExp
    (124) graphmove1 -> . BACK unaExp
    (125) graphmove2 -> . ARC dosExp
    (99) while_w -> . WHILE
    (96) forInit -> . FOR

    CLOSEBRACES     reduce using rule 155 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    ID              shift and go to state 62
    RETURN          shift and go to state 63
    REPEAT          shift and go to state 74
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92
    WHILE           shift and go to state 93
    FOR             shift and go to state 94

    stmt                           shift and go to state 204
    body1                          shift and go to state 252
    empty                          shift and go to state 205
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    graphr                         shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    repeat                         shift and go to state 61
    while1                         shift and go to state 64
    for1                           shift and go to state 65
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73
    while_w                        shift and go to state 75
    forInit                        shift and go to state 76

state 205

    (91) body1 -> empty .

    CLOSEBRACES     reduce using rule 91 (body1 -> empty .)


state 206

    (98) while1 -> while_w OPENPAREN expression . CLOSEPAREN

    CLOSEPAREN      shift and go to state 253


state 207

    (93) for1 -> forInit OPENPAREN ID . for2
    (94) for2 -> . TWODOTS exp for3

    TWODOTS         shift and go to state 255

    for2                           shift and go to state 254

state 208

    (106) unaExp -> OPENPAREN exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 256


state 209

    (105) dosExp -> OPENPAREN exp . COMMA exp CLOSEPAREN

    COMMA           shift and go to state 257


state 210

    (31) function -> FUN functionI function2 inicia_fun declara_vars function4 . termina_fun
    (33) termina_fun -> . CLOSEBRACES

    CLOSEBRACES     shift and go to state 259

    termina_fun                    shift and go to state 258

state 211

    (37) function4 -> stmt . function4
    (37) function4 -> . stmt function4
    (38) function4 -> . empty
    (20) stmt -> . assignment
    (21) stmt -> . condition
    (22) stmt -> . print
    (23) stmt -> . loop
    (24) stmt -> . read
    (25) stmt -> . graphstmt
    (26) stmt -> . graphr
    (27) stmt -> . funCall SEMICOLON
    (28) stmt -> . return
    (155) empty -> .
    (52) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (81) condition -> . IF head_cond body condition1
    (45) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (18) loop -> . while
    (19) loop -> . for
    (46) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (107) graphstmt -> . graphfig
    (108) graphstmt -> . graphview
    (109) graphstmt -> . graphmove
    (126) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (71) return -> . RETURN return1 SEMICOLON
    (51) id -> . ID
    (97) while -> . while1 body
    (92) for -> . for1 body
    (110) graphfig -> . graphfig1 SEMICOLON
    (111) graphfig -> . graphfig2 SEMICOLON
    (131) graphview -> . graphview0 SEMICOLON
    (132) graphview -> . graphview1 SEMICOLON
    (133) graphview -> . graphview2 SEMICOLON
    (116) graphmove -> . graphmove0 SEMICOLON
    (117) graphmove -> . graphmove1 SEMICOLON
    (118) graphmove -> . graphmove2 SEMICOLON
    (130) repeat -> . REPEAT
    (98) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (93) for1 -> . forInit OPENPAREN ID for2
    (112) graphfig1 -> . CIRCLE unaExp
    (113) graphfig1 -> . SQUARE unaExp
    (114) graphfig2 -> . TRIANGLE dosExp
    (115) graphfig2 -> . RECTANGLE dosExp
    (134) graphview0 -> . HIDE_STAR
    (135) graphview0 -> . SHOW_STAR
    (136) graphview1 -> . COLOR_STAR unaExp
    (137) graphview1 -> . SIZE_STAR unaExp
    (138) graphview2 -> . SETXY dosExp
    (119) graphmove0 -> . HAND_DOWN
    (120) graphmove0 -> . HAND_UP
    (121) graphmove1 -> . GO unaExp
    (122) graphmove1 -> . LEFT unaExp
    (123) graphmove1 -> . RIGHT unaExp
    (124) graphmove1 -> . BACK unaExp
    (125) graphmove2 -> . ARC dosExp
    (99) while_w -> . WHILE
    (96) forInit -> . FOR

    CLOSEBRACES     reduce using rule 155 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    ID              shift and go to state 62
    RETURN          shift and go to state 63
    REPEAT          shift and go to state 74
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92
    WHILE           shift and go to state 93
    FOR             shift and go to state 94

    stmt                           shift and go to state 211
    function4                      shift and go to state 260
    empty                          shift and go to state 212
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    graphr                         shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    repeat                         shift and go to state 61
    while1                         shift and go to state 64
    for1                           shift and go to state 65
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73
    while_w                        shift and go to state 75
    forInit                        shift and go to state 76

state 212

    (38) function4 -> empty .

    CLOSEBRACES     reduce using rule 38 (function4 -> empty .)


state 213

    (39) function5 -> COMMA funParam . function5
    (39) function5 -> . COMMA funParam function5
    (40) function5 -> . empty
    (155) empty -> .

    COMMA           shift and go to state 168
    CLOSEPAREN      reduce using rule 155 (empty -> .)

    function5                      shift and go to state 261
    empty                          shift and go to state 169

state 214

    (140) exp1 -> ADDITION exp .

    SEMICOLON       reduce using rule 140 (exp1 -> ADDITION exp .)
    GREATER         reduce using rule 140 (exp1 -> ADDITION exp .)
    LESS            reduce using rule 140 (exp1 -> ADDITION exp .)
    NOTEQUAL        reduce using rule 140 (exp1 -> ADDITION exp .)
    ISEQUAL         reduce using rule 140 (exp1 -> ADDITION exp .)
    CLOSEPAREN      reduce using rule 140 (exp1 -> ADDITION exp .)
    CLOSEBRACKET    reduce using rule 140 (exp1 -> ADDITION exp .)
    COMMA           reduce using rule 140 (exp1 -> ADDITION exp .)
    CTEINT          reduce using rule 140 (exp1 -> ADDITION exp .)
    CTEFLOAT        reduce using rule 140 (exp1 -> ADDITION exp .)
    CTECHAR         reduce using rule 140 (exp1 -> ADDITION exp .)
    ID              reduce using rule 140 (exp1 -> ADDITION exp .)
    ADDITION        reduce using rule 140 (exp1 -> ADDITION exp .)
    SUBSTRACTION    reduce using rule 140 (exp1 -> ADDITION exp .)
    OPENPAREN       reduce using rule 140 (exp1 -> ADDITION exp .)


state 215

    (141) exp1 -> SUBSTRACTION exp .

    SEMICOLON       reduce using rule 141 (exp1 -> SUBSTRACTION exp .)
    GREATER         reduce using rule 141 (exp1 -> SUBSTRACTION exp .)
    LESS            reduce using rule 141 (exp1 -> SUBSTRACTION exp .)
    NOTEQUAL        reduce using rule 141 (exp1 -> SUBSTRACTION exp .)
    ISEQUAL         reduce using rule 141 (exp1 -> SUBSTRACTION exp .)
    CLOSEPAREN      reduce using rule 141 (exp1 -> SUBSTRACTION exp .)
    CLOSEBRACKET    reduce using rule 141 (exp1 -> SUBSTRACTION exp .)
    COMMA           reduce using rule 141 (exp1 -> SUBSTRACTION exp .)
    CTEINT          reduce using rule 141 (exp1 -> SUBSTRACTION exp .)
    CTEFLOAT        reduce using rule 141 (exp1 -> SUBSTRACTION exp .)
    CTECHAR         reduce using rule 141 (exp1 -> SUBSTRACTION exp .)
    ID              reduce using rule 141 (exp1 -> SUBSTRACTION exp .)
    ADDITION        reduce using rule 141 (exp1 -> SUBSTRACTION exp .)
    SUBSTRACTION    reduce using rule 141 (exp1 -> SUBSTRACTION exp .)
    OPENPAREN       reduce using rule 141 (exp1 -> SUBSTRACTION exp .)


state 216

    (152) term1 -> MULTIPLICATION term .

    ADDITION        reduce using rule 152 (term1 -> MULTIPLICATION term .)
    SUBSTRACTION    reduce using rule 152 (term1 -> MULTIPLICATION term .)
    SEMICOLON       reduce using rule 152 (term1 -> MULTIPLICATION term .)
    GREATER         reduce using rule 152 (term1 -> MULTIPLICATION term .)
    LESS            reduce using rule 152 (term1 -> MULTIPLICATION term .)
    NOTEQUAL        reduce using rule 152 (term1 -> MULTIPLICATION term .)
    ISEQUAL         reduce using rule 152 (term1 -> MULTIPLICATION term .)
    CLOSEPAREN      reduce using rule 152 (term1 -> MULTIPLICATION term .)
    CLOSEBRACKET    reduce using rule 152 (term1 -> MULTIPLICATION term .)
    COMMA           reduce using rule 152 (term1 -> MULTIPLICATION term .)
    CTEINT          reduce using rule 152 (term1 -> MULTIPLICATION term .)
    CTEFLOAT        reduce using rule 152 (term1 -> MULTIPLICATION term .)
    CTECHAR         reduce using rule 152 (term1 -> MULTIPLICATION term .)
    ID              reduce using rule 152 (term1 -> MULTIPLICATION term .)
    OPENPAREN       reduce using rule 152 (term1 -> MULTIPLICATION term .)


state 217

    (153) term1 -> DIVISION term .

    ADDITION        reduce using rule 153 (term1 -> DIVISION term .)
    SUBSTRACTION    reduce using rule 153 (term1 -> DIVISION term .)
    SEMICOLON       reduce using rule 153 (term1 -> DIVISION term .)
    GREATER         reduce using rule 153 (term1 -> DIVISION term .)
    LESS            reduce using rule 153 (term1 -> DIVISION term .)
    NOTEQUAL        reduce using rule 153 (term1 -> DIVISION term .)
    ISEQUAL         reduce using rule 153 (term1 -> DIVISION term .)
    CLOSEPAREN      reduce using rule 153 (term1 -> DIVISION term .)
    CLOSEBRACKET    reduce using rule 153 (term1 -> DIVISION term .)
    COMMA           reduce using rule 153 (term1 -> DIVISION term .)
    CTEINT          reduce using rule 153 (term1 -> DIVISION term .)
    CTEFLOAT        reduce using rule 153 (term1 -> DIVISION term .)
    CTECHAR         reduce using rule 153 (term1 -> DIVISION term .)
    ID              reduce using rule 153 (term1 -> DIVISION term .)
    OPENPAREN       reduce using rule 153 (term1 -> DIVISION term .)


state 218

    (64) vcte1 -> OPENBRACKET exp . CLOSEBRACKET vcte3

    CLOSEBRACKET    shift and go to state 262


state 219

    (148) factor1 -> openP expression closeP .

    MULTIPLICATION  reduce using rule 148 (factor1 -> openP expression closeP .)
    DIVISION        reduce using rule 148 (factor1 -> openP expression closeP .)
    ADDITION        reduce using rule 148 (factor1 -> openP expression closeP .)
    SUBSTRACTION    reduce using rule 148 (factor1 -> openP expression closeP .)
    SEMICOLON       reduce using rule 148 (factor1 -> openP expression closeP .)
    GREATER         reduce using rule 148 (factor1 -> openP expression closeP .)
    LESS            reduce using rule 148 (factor1 -> openP expression closeP .)
    NOTEQUAL        reduce using rule 148 (factor1 -> openP expression closeP .)
    ISEQUAL         reduce using rule 148 (factor1 -> openP expression closeP .)
    CLOSEPAREN      reduce using rule 148 (factor1 -> openP expression closeP .)
    CLOSEBRACKET    reduce using rule 148 (factor1 -> openP expression closeP .)
    COMMA           reduce using rule 148 (factor1 -> openP expression closeP .)
    CTEINT          reduce using rule 148 (factor1 -> openP expression closeP .)
    CTEFLOAT        reduce using rule 148 (factor1 -> openP expression closeP .)
    CTECHAR         reduce using rule 148 (factor1 -> openP expression closeP .)
    ID              reduce using rule 148 (factor1 -> openP expression closeP .)
    OPENPAREN       reduce using rule 148 (factor1 -> openP expression closeP .)


state 220

    (144) closeP -> CLOSEPAREN .

    MULTIPLICATION  reduce using rule 144 (closeP -> CLOSEPAREN .)
    DIVISION        reduce using rule 144 (closeP -> CLOSEPAREN .)
    ADDITION        reduce using rule 144 (closeP -> CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 144 (closeP -> CLOSEPAREN .)
    SEMICOLON       reduce using rule 144 (closeP -> CLOSEPAREN .)
    GREATER         reduce using rule 144 (closeP -> CLOSEPAREN .)
    LESS            reduce using rule 144 (closeP -> CLOSEPAREN .)
    NOTEQUAL        reduce using rule 144 (closeP -> CLOSEPAREN .)
    ISEQUAL         reduce using rule 144 (closeP -> CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 144 (closeP -> CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 144 (closeP -> CLOSEPAREN .)
    COMMA           reduce using rule 144 (closeP -> CLOSEPAREN .)
    CTEINT          reduce using rule 144 (closeP -> CLOSEPAREN .)
    CTEFLOAT        reduce using rule 144 (closeP -> CLOSEPAREN .)
    CTECHAR         reduce using rule 144 (closeP -> CLOSEPAREN .)
    ID              reduce using rule 144 (closeP -> CLOSEPAREN .)
    OPENPAREN       reduce using rule 144 (closeP -> CLOSEPAREN .)


state 221

    (74) expression -> exp expression1 .

    CLOSEPAREN      reduce using rule 74 (expression -> exp expression1 .)


state 222

    (75) expression1 -> loper . exp
    (139) exp -> . term exp1
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    exp                            shift and go to state 263
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    factor1                        shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    factor2                        shift and go to state 112
    openP                          shift and go to state 113

state 223

    (76) expression1 -> empty .

    CLOSEPAREN      reduce using rule 76 (expression1 -> empty .)


state 224

    (77) loper -> GREATER .

    CTEINT          reduce using rule 77 (loper -> GREATER .)
    CTEFLOAT        reduce using rule 77 (loper -> GREATER .)
    CTECHAR         reduce using rule 77 (loper -> GREATER .)
    ID              reduce using rule 77 (loper -> GREATER .)
    ADDITION        reduce using rule 77 (loper -> GREATER .)
    SUBSTRACTION    reduce using rule 77 (loper -> GREATER .)
    OPENPAREN       reduce using rule 77 (loper -> GREATER .)


state 225

    (78) loper -> LESS .

    CTEINT          reduce using rule 78 (loper -> LESS .)
    CTEFLOAT        reduce using rule 78 (loper -> LESS .)
    CTECHAR         reduce using rule 78 (loper -> LESS .)
    ID              reduce using rule 78 (loper -> LESS .)
    ADDITION        reduce using rule 78 (loper -> LESS .)
    SUBSTRACTION    reduce using rule 78 (loper -> LESS .)
    OPENPAREN       reduce using rule 78 (loper -> LESS .)


state 226

    (79) loper -> NOTEQUAL .

    CTEINT          reduce using rule 79 (loper -> NOTEQUAL .)
    CTEFLOAT        reduce using rule 79 (loper -> NOTEQUAL .)
    CTECHAR         reduce using rule 79 (loper -> NOTEQUAL .)
    ID              reduce using rule 79 (loper -> NOTEQUAL .)
    ADDITION        reduce using rule 79 (loper -> NOTEQUAL .)
    SUBSTRACTION    reduce using rule 79 (loper -> NOTEQUAL .)
    OPENPAREN       reduce using rule 79 (loper -> NOTEQUAL .)


state 227

    (80) loper -> ISEQUAL .

    CTEINT          reduce using rule 80 (loper -> ISEQUAL .)
    CTEFLOAT        reduce using rule 80 (loper -> ISEQUAL .)
    CTECHAR         reduce using rule 80 (loper -> ISEQUAL .)
    ID              reduce using rule 80 (loper -> ISEQUAL .)
    ADDITION        reduce using rule 80 (loper -> ISEQUAL .)
    SUBSTRACTION    reduce using rule 80 (loper -> ISEQUAL .)
    OPENPAREN       reduce using rule 80 (loper -> ISEQUAL .)


state 228

    (16) vars3 -> OPENBRACKET CTEINT . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 264


state 229

    (52) assignment -> id assignment1 equals assignment3 . SEMICOLON

    SEMICOLON       shift and go to state 265


state 230

    (57) assignment3 -> exp .

    SEMICOLON       reduce using rule 57 (assignment3 -> exp .)


state 231

    (58) assignment3 -> read .

    SEMICOLON       reduce using rule 58 (assignment3 -> read .)


state 232

    (56) assignment2 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     reduce using rule 56 (assignment2 -> OPENBRACKET exp CLOSEBRACKET .)
    EQUALS          reduce using rule 56 (assignment2 -> OPENBRACKET exp CLOSEBRACKET .)


state 233

    (81) condition -> IF head_cond body condition1 .

    IF              reduce using rule 81 (condition -> IF head_cond body condition1 .)
    PRINT           reduce using rule 81 (condition -> IF head_cond body condition1 .)
    READ            reduce using rule 81 (condition -> IF head_cond body condition1 .)
    ID              reduce using rule 81 (condition -> IF head_cond body condition1 .)
    RETURN          reduce using rule 81 (condition -> IF head_cond body condition1 .)
    REPEAT          reduce using rule 81 (condition -> IF head_cond body condition1 .)
    CIRCLE          reduce using rule 81 (condition -> IF head_cond body condition1 .)
    SQUARE          reduce using rule 81 (condition -> IF head_cond body condition1 .)
    TRIANGLE        reduce using rule 81 (condition -> IF head_cond body condition1 .)
    RECTANGLE       reduce using rule 81 (condition -> IF head_cond body condition1 .)
    HIDE_STAR       reduce using rule 81 (condition -> IF head_cond body condition1 .)
    SHOW_STAR       reduce using rule 81 (condition -> IF head_cond body condition1 .)
    COLOR_STAR      reduce using rule 81 (condition -> IF head_cond body condition1 .)
    SIZE_STAR       reduce using rule 81 (condition -> IF head_cond body condition1 .)
    SETXY           reduce using rule 81 (condition -> IF head_cond body condition1 .)
    HAND_DOWN       reduce using rule 81 (condition -> IF head_cond body condition1 .)
    HAND_UP         reduce using rule 81 (condition -> IF head_cond body condition1 .)
    GO              reduce using rule 81 (condition -> IF head_cond body condition1 .)
    LEFT            reduce using rule 81 (condition -> IF head_cond body condition1 .)
    RIGHT           reduce using rule 81 (condition -> IF head_cond body condition1 .)
    BACK            reduce using rule 81 (condition -> IF head_cond body condition1 .)
    ARC             reduce using rule 81 (condition -> IF head_cond body condition1 .)
    WHILE           reduce using rule 81 (condition -> IF head_cond body condition1 .)
    FOR             reduce using rule 81 (condition -> IF head_cond body condition1 .)
    CLOSEBRACES     reduce using rule 81 (condition -> IF head_cond body condition1 .)


state 234

    (82) condition1 -> elseif . head_cond body condition1
    (87) head_cond -> . OPENPAREN expression close_condition

    OPENPAREN       shift and go to state 129

    head_cond                      shift and go to state 266

state 235

    (83) condition1 -> else . body
    (88) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 139

    body                           shift and go to state 267

state 236

    (84) condition1 -> empty .

    IF              reduce using rule 84 (condition1 -> empty .)
    PRINT           reduce using rule 84 (condition1 -> empty .)
    READ            reduce using rule 84 (condition1 -> empty .)
    ID              reduce using rule 84 (condition1 -> empty .)
    RETURN          reduce using rule 84 (condition1 -> empty .)
    REPEAT          reduce using rule 84 (condition1 -> empty .)
    CIRCLE          reduce using rule 84 (condition1 -> empty .)
    SQUARE          reduce using rule 84 (condition1 -> empty .)
    TRIANGLE        reduce using rule 84 (condition1 -> empty .)
    RECTANGLE       reduce using rule 84 (condition1 -> empty .)
    HIDE_STAR       reduce using rule 84 (condition1 -> empty .)
    SHOW_STAR       reduce using rule 84 (condition1 -> empty .)
    COLOR_STAR      reduce using rule 84 (condition1 -> empty .)
    SIZE_STAR       reduce using rule 84 (condition1 -> empty .)
    SETXY           reduce using rule 84 (condition1 -> empty .)
    HAND_DOWN       reduce using rule 84 (condition1 -> empty .)
    HAND_UP         reduce using rule 84 (condition1 -> empty .)
    GO              reduce using rule 84 (condition1 -> empty .)
    LEFT            reduce using rule 84 (condition1 -> empty .)
    RIGHT           reduce using rule 84 (condition1 -> empty .)
    BACK            reduce using rule 84 (condition1 -> empty .)
    ARC             reduce using rule 84 (condition1 -> empty .)
    WHILE           reduce using rule 84 (condition1 -> empty .)
    FOR             reduce using rule 84 (condition1 -> empty .)
    CLOSEBRACES     reduce using rule 84 (condition1 -> empty .)


state 237

    (85) elseif -> ELSEIF .

    OPENPAREN       reduce using rule 85 (elseif -> ELSEIF .)


state 238

    (86) else -> ELSE .

    OPENBRACES      reduce using rule 86 (else -> ELSE .)


state 239

    (87) head_cond -> OPENPAREN expression close_condition .

    OPENBRACES      reduce using rule 87 (head_cond -> OPENPAREN expression close_condition .)


state 240

    (89) close_condition -> CLOSEPAREN .

    OPENBRACES      reduce using rule 89 (close_condition -> CLOSEPAREN .)


state 241

    (45) print -> PRINT OPENPAREN expression CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 268


state 242

    (46) read -> READ OPENPAREN id read1 . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 269


state 243

    (47) read1 -> OPENBRACKET . exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (48) read1 -> OPENBRACKET . exp CLOSEBRACKET
    (139) exp -> . term exp1
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    exp                            shift and go to state 270
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    factor1                        shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    factor2                        shift and go to state 112
    openP                          shift and go to state 113

state 244

    (49) read1 -> empty .

    CLOSEPAREN      reduce using rule 49 (read1 -> empty .)


state 245

    (126) graphr -> repeat rep OPENBRACES graphstmt . graphr1 CLOSEBRACES
    (127) graphr1 -> . graphstmt graphr1
    (128) graphr1 -> . empty
    (107) graphstmt -> . graphfig
    (108) graphstmt -> . graphview
    (109) graphstmt -> . graphmove
    (155) empty -> .
    (110) graphfig -> . graphfig1 SEMICOLON
    (111) graphfig -> . graphfig2 SEMICOLON
    (131) graphview -> . graphview0 SEMICOLON
    (132) graphview -> . graphview1 SEMICOLON
    (133) graphview -> . graphview2 SEMICOLON
    (116) graphmove -> . graphmove0 SEMICOLON
    (117) graphmove -> . graphmove1 SEMICOLON
    (118) graphmove -> . graphmove2 SEMICOLON
    (112) graphfig1 -> . CIRCLE unaExp
    (113) graphfig1 -> . SQUARE unaExp
    (114) graphfig2 -> . TRIANGLE dosExp
    (115) graphfig2 -> . RECTANGLE dosExp
    (134) graphview0 -> . HIDE_STAR
    (135) graphview0 -> . SHOW_STAR
    (136) graphview1 -> . COLOR_STAR unaExp
    (137) graphview1 -> . SIZE_STAR unaExp
    (138) graphview2 -> . SETXY dosExp
    (119) graphmove0 -> . HAND_DOWN
    (120) graphmove0 -> . HAND_UP
    (121) graphmove1 -> . GO unaExp
    (122) graphmove1 -> . LEFT unaExp
    (123) graphmove1 -> . RIGHT unaExp
    (124) graphmove1 -> . BACK unaExp
    (125) graphmove2 -> . ARC dosExp

    CLOSEBRACES     reduce using rule 155 (empty -> .)
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92

    graphstmt                      shift and go to state 271
    graphr1                        shift and go to state 272
    empty                          shift and go to state 273
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73

state 246

    (129) rep -> OPENPAREN exp CLOSEPAREN .

    OPENBRACES      reduce using rule 129 (rep -> OPENPAREN exp CLOSEPAREN .)


state 247

    (100) funCall -> ID OPENPAREN funCall2 CLOSEPAREN .

    SEMICOLON       reduce using rule 100 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    MULTIPLICATION  reduce using rule 100 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    DIVISION        reduce using rule 100 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    ADDITION        reduce using rule 100 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 100 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    GREATER         reduce using rule 100 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    LESS            reduce using rule 100 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    NOTEQUAL        reduce using rule 100 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    ISEQUAL         reduce using rule 100 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 100 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 100 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    COMMA           reduce using rule 100 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    CTEINT          reduce using rule 100 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    CTEFLOAT        reduce using rule 100 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    CTECHAR         reduce using rule 100 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    ID              reduce using rule 100 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    OPENPAREN       reduce using rule 100 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)


state 248

    (101) funCall2 -> exp funCall3 .

    CLOSEPAREN      reduce using rule 101 (funCall2 -> exp funCall3 .)


state 249

    (103) funCall3 -> COMMA . exp funCall2
    (139) exp -> . term exp1
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    exp                            shift and go to state 274
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    factor1                        shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    factor2                        shift and go to state 112
    openP                          shift and go to state 113

state 250

    (104) funCall3 -> empty .

    CLOSEPAREN      reduce using rule 104 (funCall3 -> empty .)


state 251

    (88) body -> OPENBRACES body1 CLOSEBRACES .

    IF              reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    PRINT           reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    READ            reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    ID              reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    RETURN          reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    REPEAT          reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    CIRCLE          reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    SQUARE          reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    SETXY           reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_UP         reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    GO              reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    LEFT            reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    RIGHT           reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    BACK            reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    ARC             reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    WHILE           reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    FOR             reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSEIF          reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSE            reduce using rule 88 (body -> OPENBRACES body1 CLOSEBRACES .)


state 252

    (90) body1 -> stmt body1 .

    CLOSEBRACES     reduce using rule 90 (body1 -> stmt body1 .)


state 253

    (98) while1 -> while_w OPENPAREN expression CLOSEPAREN .

    OPENBRACES      reduce using rule 98 (while1 -> while_w OPENPAREN expression CLOSEPAREN .)


state 254

    (93) for1 -> forInit OPENPAREN ID for2 .

    OPENBRACES      reduce using rule 93 (for1 -> forInit OPENPAREN ID for2 .)


state 255

    (94) for2 -> TWODOTS . exp for3
    (139) exp -> . term exp1
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    exp                            shift and go to state 275
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    factor1                        shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    factor2                        shift and go to state 112
    openP                          shift and go to state 113

state 256

    (106) unaExp -> OPENPAREN exp CLOSEPAREN .

    SEMICOLON       reduce using rule 106 (unaExp -> OPENPAREN exp CLOSEPAREN .)


state 257

    (105) dosExp -> OPENPAREN exp COMMA . exp CLOSEPAREN
    (139) exp -> . term exp1
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    exp                            shift and go to state 276
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    factor1                        shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    factor2                        shift and go to state 112
    openP                          shift and go to state 113

state 258

    (31) function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .

    FUN             reduce using rule 31 (function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .)
    MULTIPLICATION  reduce using rule 31 (function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .)


state 259

    (33) termina_fun -> CLOSEBRACES .

    FUN             reduce using rule 33 (termina_fun -> CLOSEBRACES .)
    MULTIPLICATION  reduce using rule 33 (termina_fun -> CLOSEBRACES .)


state 260

    (37) function4 -> stmt function4 .

    CLOSEBRACES     reduce using rule 37 (function4 -> stmt function4 .)


state 261

    (39) function5 -> COMMA funParam function5 .

    CLOSEPAREN      reduce using rule 39 (function5 -> COMMA funParam function5 .)


state 262

    (64) vcte1 -> OPENBRACKET exp CLOSEBRACKET . vcte3
    (66) vcte3 -> . OPENBRACKET exp CLOSEBRACKET
    (67) vcte3 -> . empty
    (155) empty -> .

    OPENBRACKET     shift and go to state 277
    MULTIPLICATION  reduce using rule 155 (empty -> .)
    DIVISION        reduce using rule 155 (empty -> .)
    ADDITION        reduce using rule 155 (empty -> .)
    SUBSTRACTION    reduce using rule 155 (empty -> .)
    SEMICOLON       reduce using rule 155 (empty -> .)
    GREATER         reduce using rule 155 (empty -> .)
    LESS            reduce using rule 155 (empty -> .)
    NOTEQUAL        reduce using rule 155 (empty -> .)
    ISEQUAL         reduce using rule 155 (empty -> .)
    CLOSEPAREN      reduce using rule 155 (empty -> .)
    CLOSEBRACKET    reduce using rule 155 (empty -> .)
    COMMA           reduce using rule 155 (empty -> .)
    CTEINT          reduce using rule 155 (empty -> .)
    CTEFLOAT        reduce using rule 155 (empty -> .)
    CTECHAR         reduce using rule 155 (empty -> .)
    ID              reduce using rule 155 (empty -> .)
    OPENPAREN       reduce using rule 155 (empty -> .)

    vcte3                          shift and go to state 278
    empty                          shift and go to state 279

state 263

    (75) expression1 -> loper exp .

    CLOSEPAREN      reduce using rule 75 (expression1 -> loper exp .)


state 264

    (16) vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .

    SEMICOLON       reduce using rule 16 (vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .)
    EQUALS          reduce using rule 16 (vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .)


state 265

    (52) assignment -> id assignment1 equals assignment3 SEMICOLON .

    IF              reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    PRINT           reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    READ            reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    ID              reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    RETURN          reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    REPEAT          reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    CIRCLE          reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SQUARE          reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    TRIANGLE        reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    RECTANGLE       reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    HIDE_STAR       reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SHOW_STAR       reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    COLOR_STAR      reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SIZE_STAR       reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SETXY           reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    HAND_DOWN       reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    HAND_UP         reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    GO              reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    LEFT            reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    RIGHT           reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    BACK            reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    ARC             reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    WHILE           reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    FOR             reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    CLOSEBRACES     reduce using rule 52 (assignment -> id assignment1 equals assignment3 SEMICOLON .)


state 266

    (82) condition1 -> elseif head_cond . body condition1
    (88) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 139

    body                           shift and go to state 280

state 267

    (83) condition1 -> else body .

    IF              reduce using rule 83 (condition1 -> else body .)
    PRINT           reduce using rule 83 (condition1 -> else body .)
    READ            reduce using rule 83 (condition1 -> else body .)
    ID              reduce using rule 83 (condition1 -> else body .)
    RETURN          reduce using rule 83 (condition1 -> else body .)
    REPEAT          reduce using rule 83 (condition1 -> else body .)
    CIRCLE          reduce using rule 83 (condition1 -> else body .)
    SQUARE          reduce using rule 83 (condition1 -> else body .)
    TRIANGLE        reduce using rule 83 (condition1 -> else body .)
    RECTANGLE       reduce using rule 83 (condition1 -> else body .)
    HIDE_STAR       reduce using rule 83 (condition1 -> else body .)
    SHOW_STAR       reduce using rule 83 (condition1 -> else body .)
    COLOR_STAR      reduce using rule 83 (condition1 -> else body .)
    SIZE_STAR       reduce using rule 83 (condition1 -> else body .)
    SETXY           reduce using rule 83 (condition1 -> else body .)
    HAND_DOWN       reduce using rule 83 (condition1 -> else body .)
    HAND_UP         reduce using rule 83 (condition1 -> else body .)
    GO              reduce using rule 83 (condition1 -> else body .)
    LEFT            reduce using rule 83 (condition1 -> else body .)
    RIGHT           reduce using rule 83 (condition1 -> else body .)
    BACK            reduce using rule 83 (condition1 -> else body .)
    ARC             reduce using rule 83 (condition1 -> else body .)
    WHILE           reduce using rule 83 (condition1 -> else body .)
    FOR             reduce using rule 83 (condition1 -> else body .)
    CLOSEBRACES     reduce using rule 83 (condition1 -> else body .)


state 268

    (45) print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .

    IF              reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 45 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)


state 269

    (46) read -> READ OPENPAREN id read1 CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 281


state 270

    (47) read1 -> OPENBRACKET exp . CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (48) read1 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 282


state 271

    (127) graphr1 -> graphstmt . graphr1
    (127) graphr1 -> . graphstmt graphr1
    (128) graphr1 -> . empty
    (107) graphstmt -> . graphfig
    (108) graphstmt -> . graphview
    (109) graphstmt -> . graphmove
    (155) empty -> .
    (110) graphfig -> . graphfig1 SEMICOLON
    (111) graphfig -> . graphfig2 SEMICOLON
    (131) graphview -> . graphview0 SEMICOLON
    (132) graphview -> . graphview1 SEMICOLON
    (133) graphview -> . graphview2 SEMICOLON
    (116) graphmove -> . graphmove0 SEMICOLON
    (117) graphmove -> . graphmove1 SEMICOLON
    (118) graphmove -> . graphmove2 SEMICOLON
    (112) graphfig1 -> . CIRCLE unaExp
    (113) graphfig1 -> . SQUARE unaExp
    (114) graphfig2 -> . TRIANGLE dosExp
    (115) graphfig2 -> . RECTANGLE dosExp
    (134) graphview0 -> . HIDE_STAR
    (135) graphview0 -> . SHOW_STAR
    (136) graphview1 -> . COLOR_STAR unaExp
    (137) graphview1 -> . SIZE_STAR unaExp
    (138) graphview2 -> . SETXY dosExp
    (119) graphmove0 -> . HAND_DOWN
    (120) graphmove0 -> . HAND_UP
    (121) graphmove1 -> . GO unaExp
    (122) graphmove1 -> . LEFT unaExp
    (123) graphmove1 -> . RIGHT unaExp
    (124) graphmove1 -> . BACK unaExp
    (125) graphmove2 -> . ARC dosExp

    CLOSEBRACES     reduce using rule 155 (empty -> .)
    CIRCLE          shift and go to state 77
    SQUARE          shift and go to state 78
    TRIANGLE        shift and go to state 79
    RECTANGLE       shift and go to state 80
    HIDE_STAR       shift and go to state 81
    SHOW_STAR       shift and go to state 82
    COLOR_STAR      shift and go to state 83
    SIZE_STAR       shift and go to state 84
    SETXY           shift and go to state 85
    HAND_DOWN       shift and go to state 86
    HAND_UP         shift and go to state 87
    GO              shift and go to state 88
    LEFT            shift and go to state 89
    RIGHT           shift and go to state 90
    BACK            shift and go to state 91
    ARC             shift and go to state 92

    graphstmt                      shift and go to state 271
    graphr1                        shift and go to state 283
    empty                          shift and go to state 273
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73

state 272

    (126) graphr -> repeat rep OPENBRACES graphstmt graphr1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 284


state 273

    (128) graphr1 -> empty .

    CLOSEBRACES     reduce using rule 128 (graphr1 -> empty .)


state 274

    (103) funCall3 -> COMMA exp . funCall2
    (101) funCall2 -> . exp funCall3
    (102) funCall2 -> . empty
    (139) exp -> . term exp1
    (155) empty -> .
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    CLOSEPAREN      reduce using rule 155 (empty -> .)
    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    exp                            shift and go to state 200
    funCall2                       shift and go to state 285
    empty                          shift and go to state 201
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    factor1                        shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    factor2                        shift and go to state 112
    openP                          shift and go to state 113

state 275

    (94) for2 -> TWODOTS exp . for3
    (95) for3 -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 287

    for3                           shift and go to state 286

state 276

    (105) dosExp -> OPENPAREN exp COMMA exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 288


state 277

    (66) vcte3 -> OPENBRACKET . exp CLOSEBRACKET
    (139) exp -> . term exp1
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    exp                            shift and go to state 289
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    factor1                        shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    factor2                        shift and go to state 112
    openP                          shift and go to state 113

state 278

    (64) vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .

    MULTIPLICATION  reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    DIVISION        reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ADDITION        reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    SUBSTRACTION    reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    SEMICOLON       reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    GREATER         reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    LESS            reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    NOTEQUAL        reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ISEQUAL         reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CLOSEPAREN      reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CLOSEBRACKET    reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    COMMA           reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CTEINT          reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CTEFLOAT        reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CTECHAR         reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ID              reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    OPENPAREN       reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)


state 279

    (67) vcte3 -> empty .

    MULTIPLICATION  reduce using rule 67 (vcte3 -> empty .)
    DIVISION        reduce using rule 67 (vcte3 -> empty .)
    ADDITION        reduce using rule 67 (vcte3 -> empty .)
    SUBSTRACTION    reduce using rule 67 (vcte3 -> empty .)
    SEMICOLON       reduce using rule 67 (vcte3 -> empty .)
    GREATER         reduce using rule 67 (vcte3 -> empty .)
    LESS            reduce using rule 67 (vcte3 -> empty .)
    NOTEQUAL        reduce using rule 67 (vcte3 -> empty .)
    ISEQUAL         reduce using rule 67 (vcte3 -> empty .)
    CLOSEPAREN      reduce using rule 67 (vcte3 -> empty .)
    CLOSEBRACKET    reduce using rule 67 (vcte3 -> empty .)
    COMMA           reduce using rule 67 (vcte3 -> empty .)
    CTEINT          reduce using rule 67 (vcte3 -> empty .)
    CTEFLOAT        reduce using rule 67 (vcte3 -> empty .)
    CTECHAR         reduce using rule 67 (vcte3 -> empty .)
    ID              reduce using rule 67 (vcte3 -> empty .)
    OPENPAREN       reduce using rule 67 (vcte3 -> empty .)


state 280

    (82) condition1 -> elseif head_cond body . condition1
    (82) condition1 -> . elseif head_cond body condition1
    (83) condition1 -> . else body
    (84) condition1 -> . empty
    (85) elseif -> . ELSEIF
    (86) else -> . ELSE
    (155) empty -> .

    ELSEIF          shift and go to state 237
    ELSE            shift and go to state 238
    IF              reduce using rule 155 (empty -> .)
    PRINT           reduce using rule 155 (empty -> .)
    READ            reduce using rule 155 (empty -> .)
    ID              reduce using rule 155 (empty -> .)
    RETURN          reduce using rule 155 (empty -> .)
    REPEAT          reduce using rule 155 (empty -> .)
    CIRCLE          reduce using rule 155 (empty -> .)
    SQUARE          reduce using rule 155 (empty -> .)
    TRIANGLE        reduce using rule 155 (empty -> .)
    RECTANGLE       reduce using rule 155 (empty -> .)
    HIDE_STAR       reduce using rule 155 (empty -> .)
    SHOW_STAR       reduce using rule 155 (empty -> .)
    COLOR_STAR      reduce using rule 155 (empty -> .)
    SIZE_STAR       reduce using rule 155 (empty -> .)
    SETXY           reduce using rule 155 (empty -> .)
    HAND_DOWN       reduce using rule 155 (empty -> .)
    HAND_UP         reduce using rule 155 (empty -> .)
    GO              reduce using rule 155 (empty -> .)
    LEFT            reduce using rule 155 (empty -> .)
    RIGHT           reduce using rule 155 (empty -> .)
    BACK            reduce using rule 155 (empty -> .)
    ARC             reduce using rule 155 (empty -> .)
    WHILE           reduce using rule 155 (empty -> .)
    FOR             reduce using rule 155 (empty -> .)
    CLOSEBRACES     reduce using rule 155 (empty -> .)

    elseif                         shift and go to state 234
    condition1                     shift and go to state 290
    else                           shift and go to state 235
    empty                          shift and go to state 236

state 281

    (46) read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .

    IF              reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 46 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)


state 282

    (47) read1 -> OPENBRACKET exp CLOSEBRACKET . OPENBRACKET exp CLOSEBRACKET
    (48) read1 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     shift and go to state 291
    CLOSEPAREN      reduce using rule 48 (read1 -> OPENBRACKET exp CLOSEBRACKET .)


state 283

    (127) graphr1 -> graphstmt graphr1 .

    CLOSEBRACES     reduce using rule 127 (graphr1 -> graphstmt graphr1 .)


state 284

    (126) graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .

    IF              reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    PRINT           reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    READ            reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    ID              reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RETURN          reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    REPEAT          reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    CIRCLE          reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SQUARE          reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SETXY           reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HAND_UP         reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    GO              reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    LEFT            reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RIGHT           reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    BACK            reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    ARC             reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    WHILE           reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    FOR             reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 126 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)


state 285

    (103) funCall3 -> COMMA exp funCall2 .

    CLOSEPAREN      reduce using rule 103 (funCall3 -> COMMA exp funCall2 .)


state 286

    (94) for2 -> TWODOTS exp for3 .

    OPENBRACES      reduce using rule 94 (for2 -> TWODOTS exp for3 .)


state 287

    (95) for3 -> CLOSEPAREN .

    OPENBRACES      reduce using rule 95 (for3 -> CLOSEPAREN .)


state 288

    (105) dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN .

    SEMICOLON       reduce using rule 105 (dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN .)


state 289

    (66) vcte3 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 292


state 290

    (82) condition1 -> elseif head_cond body condition1 .

    IF              reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)
    PRINT           reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)
    READ            reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)
    ID              reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)
    RETURN          reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)
    REPEAT          reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)
    CIRCLE          reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)
    SQUARE          reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)
    TRIANGLE        reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)
    RECTANGLE       reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)
    HIDE_STAR       reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)
    SHOW_STAR       reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)
    COLOR_STAR      reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)
    SIZE_STAR       reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)
    SETXY           reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)
    HAND_DOWN       reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)
    HAND_UP         reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)
    GO              reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)
    LEFT            reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)
    RIGHT           reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)
    BACK            reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)
    ARC             reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)
    WHILE           reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)
    FOR             reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)
    CLOSEBRACES     reduce using rule 82 (condition1 -> elseif head_cond body condition1 .)


state 291

    (47) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET . exp CLOSEBRACKET
    (139) exp -> . term exp1
    (151) term -> . factor term1
    (145) factor -> . vcte
    (146) factor -> . factor1
    (59) vcte -> . cte_int
    (60) vcte -> . cte_float
    (61) vcte -> . cte_char
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (147) factor1 -> . factor2 vcte
    (148) factor1 -> . openP expression closeP
    (68) cte_int -> . CTEINT
    (69) cte_float -> . CTEFLOAT
    (70) cte_char -> . CTECHAR
    (51) id -> . ID
    (100) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (149) factor2 -> . ADDITION
    (150) factor2 -> . SUBSTRACTION
    (143) openP -> . OPENPAREN

    CTEINT          shift and go to state 114
    CTEFLOAT        shift and go to state 115
    CTECHAR         shift and go to state 116
    ID              shift and go to state 101
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    OPENPAREN       shift and go to state 117

    exp                            shift and go to state 293
    term                           shift and go to state 103
    factor                         shift and go to state 104
    vcte                           shift and go to state 105
    factor1                        shift and go to state 106
    cte_int                        shift and go to state 107
    cte_float                      shift and go to state 108
    cte_char                       shift and go to state 109
    id                             shift and go to state 110
    funCall                        shift and go to state 111
    factor2                        shift and go to state 112
    openP                          shift and go to state 113

state 292

    (66) vcte3 -> OPENBRACKET exp CLOSEBRACKET .

    MULTIPLICATION  reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    DIVISION        reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ADDITION        reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    SUBSTRACTION    reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    SEMICOLON       reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    GREATER         reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    LESS            reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ISEQUAL         reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    COMMA           reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CTEINT          reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CTEFLOAT        reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CTECHAR         reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ID              reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    OPENPAREN       reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)


state 293

    (47) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 294


state 294

    (47) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .

    CLOSEPAREN      reduce using rule 47 (read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OPENPAREN in state 101 resolved as shift
WARNING: shift/reduce conflict for ADDITION in state 103 resolved as shift
WARNING: shift/reduce conflict for SUBSTRACTION in state 103 resolved as shift
WARNING: reduce/reduce conflict in state 125 resolved using rule (assignment1 -> assignment2)
WARNING: rejected rule (empty -> <empty>) in state 125
WARNING: reduce/reduce conflict in state 136 resolved using rule (return1 -> vcte)
WARNING: rejected rule (factor -> vcte) in state 136
