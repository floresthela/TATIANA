Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON program1 program2 star
Rule 2     program1 -> vars
Rule 3     program1 -> empty
Rule 4     program2 -> function program2
Rule 5     program2 -> empty
Rule 6     star -> MULTIPLICATION OPENBRACES vars star1 CLOSEBRACES
Rule 7     star1 -> stmt star1
Rule 8     star1 -> empty
Rule 9     loop -> while
Rule 10    loop -> for
Rule 11    stmt -> assignment
Rule 12    stmt -> condition
Rule 13    stmt -> print
Rule 14    stmt -> loop
Rule 15    stmt -> read
Rule 16    stmt -> graphstmt
Rule 17    stmt -> graphr
Rule 18    stmt -> funCall
Rule 19    stmt -> return
Rule 20    vars -> VARS type ID vars1 SEMICOLON
Rule 21    vars1 -> EQUALS expression vars2
Rule 22    vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3
Rule 23    vars1 -> empty vars2
Rule 24    vars2 -> COMMA ID vars1 vars2
Rule 25    vars2 -> empty
Rule 26    vars3 -> OPENBRACKET CTEINT CLOSEBRACKET
Rule 27    vars3 -> empty
Rule 28    type -> INT
Rule 29    type -> FLOAT
Rule 30    type -> CHAR
Rule 31    print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
Rule 32    read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
Rule 33    read1 -> OPENBRACKET expression CLOSEBRACKET OPENBRACKET expression CLOSEBRACKET
Rule 34    read1 -> OPENBRACKET expression CLOSEBRACKET
Rule 35    read1 -> empty
Rule 36    assignment -> ID assignment1 EQUALS assignment3 SEMICOLON
Rule 37    assignment1 -> assignment2
Rule 38    assignment1 -> assignment2 assignment1
Rule 39    assignment1 -> empty
Rule 40    assignment2 -> OPENBRACKET expression CLOSEBRACKET
Rule 41    assignment3 -> expression
Rule 42    assignment3 -> read
Rule 43    vcte -> cte
Rule 44    vcte -> ID vcte1 vcte2
Rule 45    vcte1 -> OPENBRACKET expression CLOSEBRACKET vcte3
Rule 46    vcte1 -> empty
Rule 47    vcte2 -> OPENPAREN expression CLOSEPAREN vcte4
Rule 48    vcte2 -> empty
Rule 49    vcte3 -> OPENBRACKET expression CLOSEBRACKET
Rule 50    vcte3 -> empty
Rule 51    vcte4 -> COMMA expression vcte4
Rule 52    vcte4 -> empty
Rule 53    cte -> CTEINT
Rule 54    cte -> CTEFLOAT
Rule 55    cte -> CTECHAR
Rule 56    expression -> vcte
Rule 57    expression -> operation
Rule 58    expression -> empty
Rule 59    return -> RETURN return1 SEMICOLON
Rule 60    return1 -> vcte
Rule 61    return1 -> operation
Rule 62    compare -> expression loper expression
Rule 63    loper -> GREATER
Rule 64    loper -> LESS
Rule 65    loper -> NOTEQUAL
Rule 66    loper -> ISEQUAL
Rule 67    logical -> compare logical1 compare
Rule 68    logical1 -> OR
Rule 69    logical1 -> AND
Rule 70    condition -> IF head body condition1
Rule 71    condition1 -> ELSEIF head body condition1
Rule 72    condition1 -> ELSE body
Rule 73    condition1 -> empty
Rule 74    head -> OPENPAREN head1 CLOSEPAREN
Rule 75    head1 -> compare
Rule 76    head1 -> logical
Rule 77    body -> OPENBRACES body1 CLOSEBRACES
Rule 78    body1 -> stmt body1
Rule 79    body1 -> empty
Rule 80    for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body
Rule 81    while -> WHILE head body
Rule 82    funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON
Rule 83    function -> FUN function1 ID function2 OPENBRACES vars function4 CLOSEBRACES
Rule 84    function1 -> type
Rule 85    function1 -> VOID
Rule 86    function2 -> OPENPAREN function3 CLOSEPAREN
Rule 87    function3 -> type ID
Rule 88    function3 -> function3 COMMA
Rule 89    function3 -> empty
Rule 90    function4 -> stmt function4
Rule 91    function4 -> empty
Rule 92    graphstmt -> graphfig
Rule 93    graphstmt -> graphview
Rule 94    graphstmt -> graphmove
Rule 95    graphfig -> graphfig1 expression SEMICOLON
Rule 96    graphfig1 -> CIRCLE
Rule 97    graphfig1 -> SQUARE
Rule 98    graphfig1 -> TRIANGLE expression
Rule 99    graphfig1 -> RECTANGLE expression
Rule 100   graphmove -> graphmove1 SEMICOLON
Rule 101   graphmove1 -> HAND_DOWN
Rule 102   graphmove1 -> HAND_UP
Rule 103   graphmove1 -> graphmove2 expression
Rule 104   graphmove2 -> GO
Rule 105   graphmove2 -> LEFT
Rule 106   graphmove2 -> RIGHT
Rule 107   graphmove2 -> BACK
Rule 108   graphmove2 -> ARC expression
Rule 109   graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES
Rule 110   graphr1 -> graphstmt graphr1
Rule 111   graphr1 -> empty
Rule 112   graphview -> graphview1 SEMICOLON
Rule 113   graphview1 -> HIDE_STAR
Rule 114   graphview1 -> SHOW_STAR
Rule 115   graphview1 -> graphview2 expression
Rule 116   graphview2 -> SETXY expression
Rule 117   graphview2 -> COLOR_STAR
Rule 118   graphview2 -> SIZE_STAR
Rule 119   operation -> term operation1
Rule 120   operation1 -> ADDITION
Rule 121   operation1 -> SUBSTRACTION
Rule 122   operation1 -> empty
Rule 123   factor -> vcte
Rule 124   factor -> factor1
Rule 125   factor1 -> factor2 vcte
Rule 126   factor1 -> OPENPAREN compare CLOSEPAREN
Rule 127   factor2 -> ADDITION
Rule 128   factor2 -> SUBSTRACTION
Rule 129   term -> factor term1
Rule 130   term1 -> MULTIPLICATION
Rule 131   term1 -> DIVISION
Rule 132   term1 -> empty
Rule 133   empty -> <empty>

Terminals, with rules where they appear

ADDITION             : 120 127
AND                  : 69
ARC                  : 108
BACK                 : 107
CHAR                 : 30
CIRCLE               : 96
CLOSEBRACES          : 6 77 83 109
CLOSEBRACKET         : 22 26 33 33 34 40 45 49
CLOSEPAREN           : 31 32 47 74 80 82 86 126
COLOR_STAR           : 117
COMMA                : 24 51 88
CTECHAR              : 55
CTEFLOAT             : 54
CTEINT               : 22 26 53
DIVISION             : 131
ELSE                 : 72
ELSEIF               : 71
EQUALS               : 21 36
FLOAT                : 29
FOR                  : 80
FUN                  : 83
GO                   : 104
GREATER              : 63
HAND_DOWN            : 101
HAND_UP              : 102
HIDE_STAR            : 113
ID                   : 1 20 24 32 36 44 80 82 83 87
IF                   : 70
INT                  : 28
ISEQUAL              : 66
LEFT                 : 105
LESS                 : 64
MULTIPLICATION       : 6 130
NOTEQUAL             : 65
OPENBRACES           : 6 77 83 109
OPENBRACKET          : 22 26 33 33 34 40 45 49
OPENPAREN            : 31 32 47 74 80 82 86 126
OR                   : 68
PRINT                : 31
PROGRAM              : 1
READ                 : 32
RECTANGLE            : 99
REPEAT               : 109
RETURN               : 59
RIGHT                : 106
SEMICOLON            : 1 20 31 32 36 59 82 95 100 112
SETXY                : 116
SHOW_STAR            : 114
SIZE_STAR            : 118
SQUARE               : 97
SUBSTRACTION         : 121 128
TRIANGLE             : 98
TWODOTS              : 80
VARS                 : 20
VOID                 : 85
WHILE                : 81
error                : 

Nonterminals, with rules where they appear

assignment           : 11
assignment1          : 36 38
assignment2          : 37 38
assignment3          : 36
body                 : 70 71 72 80 81
body1                : 77 78
compare              : 67 67 75 126
condition            : 12
condition1           : 70 71
cte                  : 43
empty                : 3 5 8 23 25 27 35 39 46 48 50 52 58 73 79 89 91 111 122 132
expression           : 21 31 33 33 34 40 41 45 47 49 51 62 62 80 82 95 98 99 103 108 109 115 116
factor               : 129
factor1              : 124
factor2              : 125
for                  : 10
funCall              : 18
function             : 4
function1            : 83
function2            : 83
function3            : 86 88
function4            : 83 90
graphfig             : 92
graphfig1            : 95
graphmove            : 94
graphmove1           : 100
graphmove2           : 103
graphr               : 17
graphr1              : 109 110
graphstmt            : 16 109 110
graphview            : 93
graphview1           : 112
graphview2           : 115
head                 : 70 71 81
head1                : 74
logical              : 76
logical1             : 67
loop                 : 14
loper                : 62
operation            : 57 61
operation1           : 119
print                : 13
program              : 0
program1             : 1
program2             : 1 4
read                 : 15 42
read1                : 32
return               : 19
return1              : 59
star                 : 1
star1                : 6 7
stmt                 : 7 78 90
term                 : 119
term1                : 129
type                 : 20 84 87
vars                 : 2 6 83
vars1                : 20 24
vars2                : 21 23 24
vars3                : 22
vcte                 : 56 60 123 125
vcte1                : 44
vcte2                : 44
vcte3                : 45
vcte4                : 47 51
while                : 9

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON program1 program2 star

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON program1 program2 star

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON program1 program2 star

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . program1 program2 star
    (2) program1 -> . vars
    (3) program1 -> . empty
    (20) vars -> . VARS type ID vars1 SEMICOLON
    (133) empty -> .

    VARS            shift and go to state 8
    FUN             reduce using rule 133 (empty -> .)
    MULTIPLICATION  reduce using rule 133 (empty -> .)

    program1                       shift and go to state 5
    vars                           shift and go to state 6
    empty                          shift and go to state 7

state 5

    (1) program -> PROGRAM ID SEMICOLON program1 . program2 star
    (4) program2 -> . function program2
    (5) program2 -> . empty
    (83) function -> . FUN function1 ID function2 OPENBRACES vars function4 CLOSEBRACES
    (133) empty -> .

    FUN             shift and go to state 12
    MULTIPLICATION  reduce using rule 133 (empty -> .)

    program2                       shift and go to state 9
    function                       shift and go to state 10
    empty                          shift and go to state 11

state 6

    (2) program1 -> vars .

    FUN             reduce using rule 2 (program1 -> vars .)
    MULTIPLICATION  reduce using rule 2 (program1 -> vars .)


state 7

    (3) program1 -> empty .

    FUN             reduce using rule 3 (program1 -> empty .)
    MULTIPLICATION  reduce using rule 3 (program1 -> empty .)


state 8

    (20) vars -> VARS . type ID vars1 SEMICOLON
    (28) type -> . INT
    (29) type -> . FLOAT
    (30) type -> . CHAR

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    type                           shift and go to state 13

state 9

    (1) program -> PROGRAM ID SEMICOLON program1 program2 . star
    (6) star -> . MULTIPLICATION OPENBRACES vars star1 CLOSEBRACES

    MULTIPLICATION  shift and go to state 18

    star                           shift and go to state 17

state 10

    (4) program2 -> function . program2
    (4) program2 -> . function program2
    (5) program2 -> . empty
    (83) function -> . FUN function1 ID function2 OPENBRACES vars function4 CLOSEBRACES
    (133) empty -> .

    FUN             shift and go to state 12
    MULTIPLICATION  reduce using rule 133 (empty -> .)

    function                       shift and go to state 10
    program2                       shift and go to state 19
    empty                          shift and go to state 11

state 11

    (5) program2 -> empty .

    MULTIPLICATION  reduce using rule 5 (program2 -> empty .)


state 12

    (83) function -> FUN . function1 ID function2 OPENBRACES vars function4 CLOSEBRACES
    (84) function1 -> . type
    (85) function1 -> . VOID
    (28) type -> . INT
    (29) type -> . FLOAT
    (30) type -> . CHAR

    VOID            shift and go to state 22
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    function1                      shift and go to state 20
    type                           shift and go to state 21

state 13

    (20) vars -> VARS type . ID vars1 SEMICOLON

    ID              shift and go to state 23


state 14

    (28) type -> INT .

    ID              reduce using rule 28 (type -> INT .)


state 15

    (29) type -> FLOAT .

    ID              reduce using rule 29 (type -> FLOAT .)


state 16

    (30) type -> CHAR .

    ID              reduce using rule 30 (type -> CHAR .)


state 17

    (1) program -> PROGRAM ID SEMICOLON program1 program2 star .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON program1 program2 star .)


state 18

    (6) star -> MULTIPLICATION . OPENBRACES vars star1 CLOSEBRACES

    OPENBRACES      shift and go to state 24


state 19

    (4) program2 -> function program2 .

    MULTIPLICATION  reduce using rule 4 (program2 -> function program2 .)


state 20

    (83) function -> FUN function1 . ID function2 OPENBRACES vars function4 CLOSEBRACES

    ID              shift and go to state 25


state 21

    (84) function1 -> type .

    ID              reduce using rule 84 (function1 -> type .)


state 22

    (85) function1 -> VOID .

    ID              reduce using rule 85 (function1 -> VOID .)


state 23

    (20) vars -> VARS type ID . vars1 SEMICOLON
    (21) vars1 -> . EQUALS expression vars2
    (22) vars1 -> . OPENBRACKET CTEINT CLOSEBRACKET vars3
    (23) vars1 -> . empty vars2
    (133) empty -> .

    EQUALS          shift and go to state 27
    OPENBRACKET     shift and go to state 28
    COMMA           reduce using rule 133 (empty -> .)
    SEMICOLON       reduce using rule 133 (empty -> .)

    vars1                          shift and go to state 26
    empty                          shift and go to state 29

state 24

    (6) star -> MULTIPLICATION OPENBRACES . vars star1 CLOSEBRACES
    (20) vars -> . VARS type ID vars1 SEMICOLON

    VARS            shift and go to state 8

    vars                           shift and go to state 30

state 25

    (83) function -> FUN function1 ID . function2 OPENBRACES vars function4 CLOSEBRACES
    (86) function2 -> . OPENPAREN function3 CLOSEPAREN

    OPENPAREN       shift and go to state 32

    function2                      shift and go to state 31

state 26

    (20) vars -> VARS type ID vars1 . SEMICOLON

    SEMICOLON       shift and go to state 33


state 27

    (21) vars1 -> EQUALS . expression vars2
    (56) expression -> . vcte
    (57) expression -> . operation
    (58) expression -> . empty
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (133) empty -> .
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

    ID              shift and go to state 39
    COMMA           reduce using rule 133 (empty -> .)
    SEMICOLON       reduce using rule 133 (empty -> .)
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

    expression                     shift and go to state 34
    vcte                           shift and go to state 35
    operation                      shift and go to state 36
    empty                          shift and go to state 37
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 28

    (22) vars1 -> OPENBRACKET . CTEINT CLOSEBRACKET vars3

    CTEINT          shift and go to state 50


state 29

    (23) vars1 -> empty . vars2
    (24) vars2 -> . COMMA ID vars1 vars2
    (25) vars2 -> . empty
    (133) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 53
    SEMICOLON       reduce using rule 133 (empty -> .)

  ! COMMA           [ reduce using rule 133 (empty -> .) ]

    empty                          shift and go to state 51
    vars2                          shift and go to state 52

state 30

    (6) star -> MULTIPLICATION OPENBRACES vars . star1 CLOSEBRACES
    (7) star1 -> . stmt star1
    (8) star1 -> . empty
    (11) stmt -> . assignment
    (12) stmt -> . condition
    (13) stmt -> . print
    (14) stmt -> . loop
    (15) stmt -> . read
    (16) stmt -> . graphstmt
    (17) stmt -> . graphr
    (18) stmt -> . funCall
    (19) stmt -> . return
    (133) empty -> .
    (36) assignment -> . ID assignment1 EQUALS assignment3 SEMICOLON
    (70) condition -> . IF head body condition1
    (31) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (9) loop -> . while
    (10) loop -> . for
    (32) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (92) graphstmt -> . graphfig
    (93) graphstmt -> . graphview
    (94) graphstmt -> . graphmove
    (109) graphr -> . REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES
    (82) funCall -> . ID OPENPAREN expression CLOSEPAREN SEMICOLON
    (59) return -> . RETURN return1 SEMICOLON
    (81) while -> . WHILE head body
    (80) for -> . FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body
    (95) graphfig -> . graphfig1 expression SEMICOLON
    (112) graphview -> . graphview1 SEMICOLON
    (100) graphmove -> . graphmove1 SEMICOLON
    (96) graphfig1 -> . CIRCLE
    (97) graphfig1 -> . SQUARE
    (98) graphfig1 -> . TRIANGLE expression
    (99) graphfig1 -> . RECTANGLE expression
    (113) graphview1 -> . HIDE_STAR
    (114) graphview1 -> . SHOW_STAR
    (115) graphview1 -> . graphview2 expression
    (101) graphmove1 -> . HAND_DOWN
    (102) graphmove1 -> . HAND_UP
    (103) graphmove1 -> . graphmove2 expression
    (116) graphview2 -> . SETXY expression
    (117) graphview2 -> . COLOR_STAR
    (118) graphview2 -> . SIZE_STAR
    (104) graphmove2 -> . GO
    (105) graphmove2 -> . LEFT
    (106) graphmove2 -> . RIGHT
    (107) graphmove2 -> . BACK
    (108) graphmove2 -> . ARC expression

    CLOSEBRACES     reduce using rule 133 (empty -> .)
    ID              shift and go to state 66
    IF              shift and go to state 67
    PRINT           shift and go to state 68
    READ            shift and go to state 71
    REPEAT          shift and go to state 75
    RETURN          shift and go to state 76
    WHILE           shift and go to state 77
    FOR             shift and go to state 78
    CIRCLE          shift and go to state 82
    SQUARE          shift and go to state 83
    TRIANGLE        shift and go to state 84
    RECTANGLE       shift and go to state 85
    HIDE_STAR       shift and go to state 86
    SHOW_STAR       shift and go to state 87
    HAND_DOWN       shift and go to state 89
    HAND_UP         shift and go to state 90
    SETXY           shift and go to state 92
    COLOR_STAR      shift and go to state 93
    SIZE_STAR       shift and go to state 94
    GO              shift and go to state 95
    LEFT            shift and go to state 96
    RIGHT           shift and go to state 97
    BACK            shift and go to state 98
    ARC             shift and go to state 99

    star1                          shift and go to state 54
    stmt                           shift and go to state 55
    empty                          shift and go to state 56
    assignment                     shift and go to state 57
    condition                      shift and go to state 58
    print                          shift and go to state 59
    loop                           shift and go to state 60
    read                           shift and go to state 61
    graphstmt                      shift and go to state 62
    graphr                         shift and go to state 63
    funCall                        shift and go to state 64
    return                         shift and go to state 65
    while                          shift and go to state 69
    for                            shift and go to state 70
    graphfig                       shift and go to state 72
    graphview                      shift and go to state 73
    graphmove                      shift and go to state 74
    graphfig1                      shift and go to state 79
    graphview1                     shift and go to state 80
    graphmove1                     shift and go to state 81
    graphview2                     shift and go to state 88
    graphmove2                     shift and go to state 91

state 31

    (83) function -> FUN function1 ID function2 . OPENBRACES vars function4 CLOSEBRACES

    OPENBRACES      shift and go to state 100


state 32

    (86) function2 -> OPENPAREN . function3 CLOSEPAREN
    (87) function3 -> . type ID
    (88) function3 -> . function3 COMMA
    (89) function3 -> . empty
    (28) type -> . INT
    (29) type -> . FLOAT
    (30) type -> . CHAR
    (133) empty -> .

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    CLOSEPAREN      reduce using rule 133 (empty -> .)
    COMMA           reduce using rule 133 (empty -> .)

    function3                      shift and go to state 101
    type                           shift and go to state 102
    empty                          shift and go to state 103

state 33

    (20) vars -> VARS type ID vars1 SEMICOLON .

    FUN             reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    MULTIPLICATION  reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    ID              reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    IF              reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    PRINT           reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    READ            reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    REPEAT          reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    RETURN          reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    WHILE           reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    FOR             reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    CIRCLE          reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    SQUARE          reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    TRIANGLE        reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    RECTANGLE       reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    HIDE_STAR       reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    SHOW_STAR       reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    HAND_DOWN       reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    HAND_UP         reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    SETXY           reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    COLOR_STAR      reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    SIZE_STAR       reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    GO              reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    LEFT            reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    RIGHT           reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    BACK            reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    ARC             reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 20 (vars -> VARS type ID vars1 SEMICOLON .)


state 34

    (21) vars1 -> EQUALS expression . vars2
    (24) vars2 -> . COMMA ID vars1 vars2
    (25) vars2 -> . empty
    (133) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 53
    SEMICOLON       reduce using rule 133 (empty -> .)

  ! COMMA           [ reduce using rule 133 (empty -> .) ]

    vars2                          shift and go to state 104
    empty                          shift and go to state 51

state 35

    (56) expression -> vcte .
    (123) factor -> vcte .

  ! reduce/reduce conflict for MULTIPLICATION resolved using rule 56 (expression -> vcte .)
  ! reduce/reduce conflict for DIVISION resolved using rule 56 (expression -> vcte .)
  ! reduce/reduce conflict for ADDITION resolved using rule 56 (expression -> vcte .)
  ! reduce/reduce conflict for SUBSTRACTION resolved using rule 56 (expression -> vcte .)
  ! reduce/reduce conflict for COMMA resolved using rule 56 (expression -> vcte .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 56 (expression -> vcte .)
  ! reduce/reduce conflict for GREATER resolved using rule 56 (expression -> vcte .)
  ! reduce/reduce conflict for LESS resolved using rule 56 (expression -> vcte .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 56 (expression -> vcte .)
  ! reduce/reduce conflict for ISEQUAL resolved using rule 56 (expression -> vcte .)
  ! reduce/reduce conflict for OPENBRACES resolved using rule 56 (expression -> vcte .)
  ! reduce/reduce conflict for ID resolved using rule 56 (expression -> vcte .)
  ! reduce/reduce conflict for CTEINT resolved using rule 56 (expression -> vcte .)
  ! reduce/reduce conflict for CTEFLOAT resolved using rule 56 (expression -> vcte .)
  ! reduce/reduce conflict for CTECHAR resolved using rule 56 (expression -> vcte .)
  ! reduce/reduce conflict for OPENPAREN resolved using rule 56 (expression -> vcte .)
  ! reduce/reduce conflict for CLOSEBRACKET resolved using rule 56 (expression -> vcte .)
  ! reduce/reduce conflict for CLOSEPAREN resolved using rule 56 (expression -> vcte .)
  ! reduce/reduce conflict for OR resolved using rule 56 (expression -> vcte .)
  ! reduce/reduce conflict for AND resolved using rule 56 (expression -> vcte .)
    COMMA           reduce using rule 56 (expression -> vcte .)
    SEMICOLON       reduce using rule 56 (expression -> vcte .)
    GREATER         reduce using rule 56 (expression -> vcte .)
    LESS            reduce using rule 56 (expression -> vcte .)
    NOTEQUAL        reduce using rule 56 (expression -> vcte .)
    ISEQUAL         reduce using rule 56 (expression -> vcte .)
    OPENBRACES      reduce using rule 56 (expression -> vcte .)
    ID              reduce using rule 56 (expression -> vcte .)
    CTEINT          reduce using rule 56 (expression -> vcte .)
    CTEFLOAT        reduce using rule 56 (expression -> vcte .)
    CTECHAR         reduce using rule 56 (expression -> vcte .)
    OPENPAREN       reduce using rule 56 (expression -> vcte .)
    ADDITION        reduce using rule 56 (expression -> vcte .)
    SUBSTRACTION    reduce using rule 56 (expression -> vcte .)
    CLOSEBRACKET    reduce using rule 56 (expression -> vcte .)
    CLOSEPAREN      reduce using rule 56 (expression -> vcte .)
    OR              reduce using rule 56 (expression -> vcte .)
    AND             reduce using rule 56 (expression -> vcte .)
    MULTIPLICATION  reduce using rule 56 (expression -> vcte .)
    DIVISION        reduce using rule 56 (expression -> vcte .)

  ! MULTIPLICATION  [ reduce using rule 123 (factor -> vcte .) ]
  ! DIVISION        [ reduce using rule 123 (factor -> vcte .) ]
  ! ADDITION        [ reduce using rule 123 (factor -> vcte .) ]
  ! SUBSTRACTION    [ reduce using rule 123 (factor -> vcte .) ]
  ! COMMA           [ reduce using rule 123 (factor -> vcte .) ]
  ! SEMICOLON       [ reduce using rule 123 (factor -> vcte .) ]
  ! GREATER         [ reduce using rule 123 (factor -> vcte .) ]
  ! LESS            [ reduce using rule 123 (factor -> vcte .) ]
  ! NOTEQUAL        [ reduce using rule 123 (factor -> vcte .) ]
  ! ISEQUAL         [ reduce using rule 123 (factor -> vcte .) ]
  ! OPENBRACES      [ reduce using rule 123 (factor -> vcte .) ]
  ! ID              [ reduce using rule 123 (factor -> vcte .) ]
  ! CTEINT          [ reduce using rule 123 (factor -> vcte .) ]
  ! CTEFLOAT        [ reduce using rule 123 (factor -> vcte .) ]
  ! CTECHAR         [ reduce using rule 123 (factor -> vcte .) ]
  ! OPENPAREN       [ reduce using rule 123 (factor -> vcte .) ]
  ! CLOSEBRACKET    [ reduce using rule 123 (factor -> vcte .) ]
  ! CLOSEPAREN      [ reduce using rule 123 (factor -> vcte .) ]
  ! OR              [ reduce using rule 123 (factor -> vcte .) ]
  ! AND             [ reduce using rule 123 (factor -> vcte .) ]


state 36

    (57) expression -> operation .

    COMMA           reduce using rule 57 (expression -> operation .)
    SEMICOLON       reduce using rule 57 (expression -> operation .)
    GREATER         reduce using rule 57 (expression -> operation .)
    LESS            reduce using rule 57 (expression -> operation .)
    NOTEQUAL        reduce using rule 57 (expression -> operation .)
    ISEQUAL         reduce using rule 57 (expression -> operation .)
    OPENBRACES      reduce using rule 57 (expression -> operation .)
    ID              reduce using rule 57 (expression -> operation .)
    CTEINT          reduce using rule 57 (expression -> operation .)
    CTEFLOAT        reduce using rule 57 (expression -> operation .)
    CTECHAR         reduce using rule 57 (expression -> operation .)
    OPENPAREN       reduce using rule 57 (expression -> operation .)
    ADDITION        reduce using rule 57 (expression -> operation .)
    SUBSTRACTION    reduce using rule 57 (expression -> operation .)
    CLOSEBRACKET    reduce using rule 57 (expression -> operation .)
    CLOSEPAREN      reduce using rule 57 (expression -> operation .)
    OR              reduce using rule 57 (expression -> operation .)
    AND             reduce using rule 57 (expression -> operation .)
    MULTIPLICATION  reduce using rule 57 (expression -> operation .)
    DIVISION        reduce using rule 57 (expression -> operation .)


state 37

    (58) expression -> empty .

    COMMA           reduce using rule 58 (expression -> empty .)
    SEMICOLON       reduce using rule 58 (expression -> empty .)
    GREATER         reduce using rule 58 (expression -> empty .)
    LESS            reduce using rule 58 (expression -> empty .)
    NOTEQUAL        reduce using rule 58 (expression -> empty .)
    ISEQUAL         reduce using rule 58 (expression -> empty .)
    OPENBRACES      reduce using rule 58 (expression -> empty .)
    ID              reduce using rule 58 (expression -> empty .)
    CTEINT          reduce using rule 58 (expression -> empty .)
    CTEFLOAT        reduce using rule 58 (expression -> empty .)
    CTECHAR         reduce using rule 58 (expression -> empty .)
    OPENPAREN       reduce using rule 58 (expression -> empty .)
    ADDITION        reduce using rule 58 (expression -> empty .)
    SUBSTRACTION    reduce using rule 58 (expression -> empty .)
    CLOSEBRACKET    reduce using rule 58 (expression -> empty .)
    CLOSEPAREN      reduce using rule 58 (expression -> empty .)
    OR              reduce using rule 58 (expression -> empty .)
    AND             reduce using rule 58 (expression -> empty .)
    MULTIPLICATION  reduce using rule 58 (expression -> empty .)
    DIVISION        reduce using rule 58 (expression -> empty .)


state 38

    (43) vcte -> cte .

    COMMA           reduce using rule 43 (vcte -> cte .)
    SEMICOLON       reduce using rule 43 (vcte -> cte .)
    MULTIPLICATION  reduce using rule 43 (vcte -> cte .)
    DIVISION        reduce using rule 43 (vcte -> cte .)
    ADDITION        reduce using rule 43 (vcte -> cte .)
    SUBSTRACTION    reduce using rule 43 (vcte -> cte .)
    GREATER         reduce using rule 43 (vcte -> cte .)
    LESS            reduce using rule 43 (vcte -> cte .)
    NOTEQUAL        reduce using rule 43 (vcte -> cte .)
    ISEQUAL         reduce using rule 43 (vcte -> cte .)
    OPENBRACES      reduce using rule 43 (vcte -> cte .)
    ID              reduce using rule 43 (vcte -> cte .)
    CTEINT          reduce using rule 43 (vcte -> cte .)
    CTEFLOAT        reduce using rule 43 (vcte -> cte .)
    CTECHAR         reduce using rule 43 (vcte -> cte .)
    OPENPAREN       reduce using rule 43 (vcte -> cte .)
    CLOSEBRACKET    reduce using rule 43 (vcte -> cte .)
    CLOSEPAREN      reduce using rule 43 (vcte -> cte .)
    OR              reduce using rule 43 (vcte -> cte .)
    AND             reduce using rule 43 (vcte -> cte .)


state 39

    (44) vcte -> ID . vcte1 vcte2
    (45) vcte1 -> . OPENBRACKET expression CLOSEBRACKET vcte3
    (46) vcte1 -> . empty
    (133) empty -> .

    OPENBRACKET     shift and go to state 106
    OPENPAREN       reduce using rule 133 (empty -> .)
    COMMA           reduce using rule 133 (empty -> .)
    SEMICOLON       reduce using rule 133 (empty -> .)
    MULTIPLICATION  reduce using rule 133 (empty -> .)
    DIVISION        reduce using rule 133 (empty -> .)
    ADDITION        reduce using rule 133 (empty -> .)
    SUBSTRACTION    reduce using rule 133 (empty -> .)
    GREATER         reduce using rule 133 (empty -> .)
    LESS            reduce using rule 133 (empty -> .)
    NOTEQUAL        reduce using rule 133 (empty -> .)
    ISEQUAL         reduce using rule 133 (empty -> .)
    OPENBRACES      reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    CTEINT          reduce using rule 133 (empty -> .)
    CTEFLOAT        reduce using rule 133 (empty -> .)
    CTECHAR         reduce using rule 133 (empty -> .)
    CLOSEBRACKET    reduce using rule 133 (empty -> .)
    CLOSEPAREN      reduce using rule 133 (empty -> .)
    OR              reduce using rule 133 (empty -> .)
    AND             reduce using rule 133 (empty -> .)

    vcte1                          shift and go to state 105
    empty                          shift and go to state 107

state 40

    (119) operation -> term . operation1
    (120) operation1 -> . ADDITION
    (121) operation1 -> . SUBSTRACTION
    (122) operation1 -> . empty
    (133) empty -> .

  ! shift/reduce conflict for ADDITION resolved as shift
  ! shift/reduce conflict for SUBSTRACTION resolved as shift
    ADDITION        shift and go to state 109
    SUBSTRACTION    shift and go to state 110
    COMMA           reduce using rule 133 (empty -> .)
    SEMICOLON       reduce using rule 133 (empty -> .)
    GREATER         reduce using rule 133 (empty -> .)
    LESS            reduce using rule 133 (empty -> .)
    NOTEQUAL        reduce using rule 133 (empty -> .)
    ISEQUAL         reduce using rule 133 (empty -> .)
    OPENBRACES      reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    CTEINT          reduce using rule 133 (empty -> .)
    CTEFLOAT        reduce using rule 133 (empty -> .)
    CTECHAR         reduce using rule 133 (empty -> .)
    OPENPAREN       reduce using rule 133 (empty -> .)
    CLOSEBRACKET    reduce using rule 133 (empty -> .)
    CLOSEPAREN      reduce using rule 133 (empty -> .)
    OR              reduce using rule 133 (empty -> .)
    AND             reduce using rule 133 (empty -> .)
    MULTIPLICATION  reduce using rule 133 (empty -> .)
    DIVISION        reduce using rule 133 (empty -> .)

  ! ADDITION        [ reduce using rule 133 (empty -> .) ]
  ! SUBSTRACTION    [ reduce using rule 133 (empty -> .) ]

    operation1                     shift and go to state 108
    empty                          shift and go to state 111

state 41

    (53) cte -> CTEINT .

    COMMA           reduce using rule 53 (cte -> CTEINT .)
    SEMICOLON       reduce using rule 53 (cte -> CTEINT .)
    MULTIPLICATION  reduce using rule 53 (cte -> CTEINT .)
    DIVISION        reduce using rule 53 (cte -> CTEINT .)
    ADDITION        reduce using rule 53 (cte -> CTEINT .)
    SUBSTRACTION    reduce using rule 53 (cte -> CTEINT .)
    GREATER         reduce using rule 53 (cte -> CTEINT .)
    LESS            reduce using rule 53 (cte -> CTEINT .)
    NOTEQUAL        reduce using rule 53 (cte -> CTEINT .)
    ISEQUAL         reduce using rule 53 (cte -> CTEINT .)
    OPENBRACES      reduce using rule 53 (cte -> CTEINT .)
    ID              reduce using rule 53 (cte -> CTEINT .)
    CTEINT          reduce using rule 53 (cte -> CTEINT .)
    CTEFLOAT        reduce using rule 53 (cte -> CTEINT .)
    CTECHAR         reduce using rule 53 (cte -> CTEINT .)
    OPENPAREN       reduce using rule 53 (cte -> CTEINT .)
    CLOSEBRACKET    reduce using rule 53 (cte -> CTEINT .)
    CLOSEPAREN      reduce using rule 53 (cte -> CTEINT .)
    OR              reduce using rule 53 (cte -> CTEINT .)
    AND             reduce using rule 53 (cte -> CTEINT .)


state 42

    (54) cte -> CTEFLOAT .

    COMMA           reduce using rule 54 (cte -> CTEFLOAT .)
    SEMICOLON       reduce using rule 54 (cte -> CTEFLOAT .)
    MULTIPLICATION  reduce using rule 54 (cte -> CTEFLOAT .)
    DIVISION        reduce using rule 54 (cte -> CTEFLOAT .)
    ADDITION        reduce using rule 54 (cte -> CTEFLOAT .)
    SUBSTRACTION    reduce using rule 54 (cte -> CTEFLOAT .)
    GREATER         reduce using rule 54 (cte -> CTEFLOAT .)
    LESS            reduce using rule 54 (cte -> CTEFLOAT .)
    NOTEQUAL        reduce using rule 54 (cte -> CTEFLOAT .)
    ISEQUAL         reduce using rule 54 (cte -> CTEFLOAT .)
    OPENBRACES      reduce using rule 54 (cte -> CTEFLOAT .)
    ID              reduce using rule 54 (cte -> CTEFLOAT .)
    CTEINT          reduce using rule 54 (cte -> CTEFLOAT .)
    CTEFLOAT        reduce using rule 54 (cte -> CTEFLOAT .)
    CTECHAR         reduce using rule 54 (cte -> CTEFLOAT .)
    OPENPAREN       reduce using rule 54 (cte -> CTEFLOAT .)
    CLOSEBRACKET    reduce using rule 54 (cte -> CTEFLOAT .)
    CLOSEPAREN      reduce using rule 54 (cte -> CTEFLOAT .)
    OR              reduce using rule 54 (cte -> CTEFLOAT .)
    AND             reduce using rule 54 (cte -> CTEFLOAT .)


state 43

    (55) cte -> CTECHAR .

    COMMA           reduce using rule 55 (cte -> CTECHAR .)
    SEMICOLON       reduce using rule 55 (cte -> CTECHAR .)
    MULTIPLICATION  reduce using rule 55 (cte -> CTECHAR .)
    DIVISION        reduce using rule 55 (cte -> CTECHAR .)
    ADDITION        reduce using rule 55 (cte -> CTECHAR .)
    SUBSTRACTION    reduce using rule 55 (cte -> CTECHAR .)
    GREATER         reduce using rule 55 (cte -> CTECHAR .)
    LESS            reduce using rule 55 (cte -> CTECHAR .)
    NOTEQUAL        reduce using rule 55 (cte -> CTECHAR .)
    ISEQUAL         reduce using rule 55 (cte -> CTECHAR .)
    OPENBRACES      reduce using rule 55 (cte -> CTECHAR .)
    ID              reduce using rule 55 (cte -> CTECHAR .)
    CTEINT          reduce using rule 55 (cte -> CTECHAR .)
    CTEFLOAT        reduce using rule 55 (cte -> CTECHAR .)
    CTECHAR         reduce using rule 55 (cte -> CTECHAR .)
    OPENPAREN       reduce using rule 55 (cte -> CTECHAR .)
    CLOSEBRACKET    reduce using rule 55 (cte -> CTECHAR .)
    CLOSEPAREN      reduce using rule 55 (cte -> CTECHAR .)
    OR              reduce using rule 55 (cte -> CTECHAR .)
    AND             reduce using rule 55 (cte -> CTECHAR .)


state 44

    (129) term -> factor . term1
    (130) term1 -> . MULTIPLICATION
    (131) term1 -> . DIVISION
    (132) term1 -> . empty
    (133) empty -> .

  ! shift/reduce conflict for MULTIPLICATION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    MULTIPLICATION  shift and go to state 113
    DIVISION        shift and go to state 114
    ADDITION        reduce using rule 133 (empty -> .)
    SUBSTRACTION    reduce using rule 133 (empty -> .)
    COMMA           reduce using rule 133 (empty -> .)
    SEMICOLON       reduce using rule 133 (empty -> .)
    GREATER         reduce using rule 133 (empty -> .)
    LESS            reduce using rule 133 (empty -> .)
    NOTEQUAL        reduce using rule 133 (empty -> .)
    ISEQUAL         reduce using rule 133 (empty -> .)
    OPENBRACES      reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    CTEINT          reduce using rule 133 (empty -> .)
    CTEFLOAT        reduce using rule 133 (empty -> .)
    CTECHAR         reduce using rule 133 (empty -> .)
    OPENPAREN       reduce using rule 133 (empty -> .)
    CLOSEBRACKET    reduce using rule 133 (empty -> .)
    CLOSEPAREN      reduce using rule 133 (empty -> .)
    OR              reduce using rule 133 (empty -> .)
    AND             reduce using rule 133 (empty -> .)

  ! MULTIPLICATION  [ reduce using rule 133 (empty -> .) ]
  ! DIVISION        [ reduce using rule 133 (empty -> .) ]

    term1                          shift and go to state 112
    empty                          shift and go to state 115

state 45

    (124) factor -> factor1 .

    MULTIPLICATION  reduce using rule 124 (factor -> factor1 .)
    DIVISION        reduce using rule 124 (factor -> factor1 .)
    ADDITION        reduce using rule 124 (factor -> factor1 .)
    SUBSTRACTION    reduce using rule 124 (factor -> factor1 .)
    COMMA           reduce using rule 124 (factor -> factor1 .)
    SEMICOLON       reduce using rule 124 (factor -> factor1 .)
    GREATER         reduce using rule 124 (factor -> factor1 .)
    LESS            reduce using rule 124 (factor -> factor1 .)
    NOTEQUAL        reduce using rule 124 (factor -> factor1 .)
    ISEQUAL         reduce using rule 124 (factor -> factor1 .)
    OPENBRACES      reduce using rule 124 (factor -> factor1 .)
    ID              reduce using rule 124 (factor -> factor1 .)
    CTEINT          reduce using rule 124 (factor -> factor1 .)
    CTEFLOAT        reduce using rule 124 (factor -> factor1 .)
    CTECHAR         reduce using rule 124 (factor -> factor1 .)
    OPENPAREN       reduce using rule 124 (factor -> factor1 .)
    CLOSEBRACKET    reduce using rule 124 (factor -> factor1 .)
    CLOSEPAREN      reduce using rule 124 (factor -> factor1 .)
    OR              reduce using rule 124 (factor -> factor1 .)
    AND             reduce using rule 124 (factor -> factor1 .)


state 46

    (125) factor1 -> factor2 . vcte
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR

    ID              shift and go to state 39
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43

    vcte                           shift and go to state 116
    cte                            shift and go to state 38

state 47

    (126) factor1 -> OPENPAREN . compare CLOSEPAREN
    (62) compare -> . expression loper expression
    (56) expression -> . vcte
    (57) expression -> . operation
    (58) expression -> . empty
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (133) empty -> .
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

    ID              shift and go to state 39
    GREATER         reduce using rule 133 (empty -> .)
    LESS            reduce using rule 133 (empty -> .)
    NOTEQUAL        reduce using rule 133 (empty -> .)
    ISEQUAL         reduce using rule 133 (empty -> .)
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

    compare                        shift and go to state 117
    expression                     shift and go to state 118
    vcte                           shift and go to state 35
    operation                      shift and go to state 36
    empty                          shift and go to state 37
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 48

    (127) factor2 -> ADDITION .

    ID              reduce using rule 127 (factor2 -> ADDITION .)
    CTEINT          reduce using rule 127 (factor2 -> ADDITION .)
    CTEFLOAT        reduce using rule 127 (factor2 -> ADDITION .)
    CTECHAR         reduce using rule 127 (factor2 -> ADDITION .)


state 49

    (128) factor2 -> SUBSTRACTION .

    ID              reduce using rule 128 (factor2 -> SUBSTRACTION .)
    CTEINT          reduce using rule 128 (factor2 -> SUBSTRACTION .)
    CTEFLOAT        reduce using rule 128 (factor2 -> SUBSTRACTION .)
    CTECHAR         reduce using rule 128 (factor2 -> SUBSTRACTION .)


state 50

    (22) vars1 -> OPENBRACKET CTEINT . CLOSEBRACKET vars3

    CLOSEBRACKET    shift and go to state 119


state 51

    (25) vars2 -> empty .

    COMMA           reduce using rule 25 (vars2 -> empty .)
    SEMICOLON       reduce using rule 25 (vars2 -> empty .)


state 52

    (23) vars1 -> empty vars2 .

    SEMICOLON       reduce using rule 23 (vars1 -> empty vars2 .)
    COMMA           reduce using rule 23 (vars1 -> empty vars2 .)


state 53

    (24) vars2 -> COMMA . ID vars1 vars2

    ID              shift and go to state 120


state 54

    (6) star -> MULTIPLICATION OPENBRACES vars star1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 121


state 55

    (7) star1 -> stmt . star1
    (7) star1 -> . stmt star1
    (8) star1 -> . empty
    (11) stmt -> . assignment
    (12) stmt -> . condition
    (13) stmt -> . print
    (14) stmt -> . loop
    (15) stmt -> . read
    (16) stmt -> . graphstmt
    (17) stmt -> . graphr
    (18) stmt -> . funCall
    (19) stmt -> . return
    (133) empty -> .
    (36) assignment -> . ID assignment1 EQUALS assignment3 SEMICOLON
    (70) condition -> . IF head body condition1
    (31) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (9) loop -> . while
    (10) loop -> . for
    (32) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (92) graphstmt -> . graphfig
    (93) graphstmt -> . graphview
    (94) graphstmt -> . graphmove
    (109) graphr -> . REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES
    (82) funCall -> . ID OPENPAREN expression CLOSEPAREN SEMICOLON
    (59) return -> . RETURN return1 SEMICOLON
    (81) while -> . WHILE head body
    (80) for -> . FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body
    (95) graphfig -> . graphfig1 expression SEMICOLON
    (112) graphview -> . graphview1 SEMICOLON
    (100) graphmove -> . graphmove1 SEMICOLON
    (96) graphfig1 -> . CIRCLE
    (97) graphfig1 -> . SQUARE
    (98) graphfig1 -> . TRIANGLE expression
    (99) graphfig1 -> . RECTANGLE expression
    (113) graphview1 -> . HIDE_STAR
    (114) graphview1 -> . SHOW_STAR
    (115) graphview1 -> . graphview2 expression
    (101) graphmove1 -> . HAND_DOWN
    (102) graphmove1 -> . HAND_UP
    (103) graphmove1 -> . graphmove2 expression
    (116) graphview2 -> . SETXY expression
    (117) graphview2 -> . COLOR_STAR
    (118) graphview2 -> . SIZE_STAR
    (104) graphmove2 -> . GO
    (105) graphmove2 -> . LEFT
    (106) graphmove2 -> . RIGHT
    (107) graphmove2 -> . BACK
    (108) graphmove2 -> . ARC expression

    CLOSEBRACES     reduce using rule 133 (empty -> .)
    ID              shift and go to state 66
    IF              shift and go to state 67
    PRINT           shift and go to state 68
    READ            shift and go to state 71
    REPEAT          shift and go to state 75
    RETURN          shift and go to state 76
    WHILE           shift and go to state 77
    FOR             shift and go to state 78
    CIRCLE          shift and go to state 82
    SQUARE          shift and go to state 83
    TRIANGLE        shift and go to state 84
    RECTANGLE       shift and go to state 85
    HIDE_STAR       shift and go to state 86
    SHOW_STAR       shift and go to state 87
    HAND_DOWN       shift and go to state 89
    HAND_UP         shift and go to state 90
    SETXY           shift and go to state 92
    COLOR_STAR      shift and go to state 93
    SIZE_STAR       shift and go to state 94
    GO              shift and go to state 95
    LEFT            shift and go to state 96
    RIGHT           shift and go to state 97
    BACK            shift and go to state 98
    ARC             shift and go to state 99

    stmt                           shift and go to state 55
    star1                          shift and go to state 122
    empty                          shift and go to state 56
    assignment                     shift and go to state 57
    condition                      shift and go to state 58
    print                          shift and go to state 59
    loop                           shift and go to state 60
    read                           shift and go to state 61
    graphstmt                      shift and go to state 62
    graphr                         shift and go to state 63
    funCall                        shift and go to state 64
    return                         shift and go to state 65
    while                          shift and go to state 69
    for                            shift and go to state 70
    graphfig                       shift and go to state 72
    graphview                      shift and go to state 73
    graphmove                      shift and go to state 74
    graphfig1                      shift and go to state 79
    graphview1                     shift and go to state 80
    graphmove1                     shift and go to state 81
    graphview2                     shift and go to state 88
    graphmove2                     shift and go to state 91

state 56

    (8) star1 -> empty .

    CLOSEBRACES     reduce using rule 8 (star1 -> empty .)


state 57

    (11) stmt -> assignment .

    ID              reduce using rule 11 (stmt -> assignment .)
    IF              reduce using rule 11 (stmt -> assignment .)
    PRINT           reduce using rule 11 (stmt -> assignment .)
    READ            reduce using rule 11 (stmt -> assignment .)
    REPEAT          reduce using rule 11 (stmt -> assignment .)
    RETURN          reduce using rule 11 (stmt -> assignment .)
    WHILE           reduce using rule 11 (stmt -> assignment .)
    FOR             reduce using rule 11 (stmt -> assignment .)
    CIRCLE          reduce using rule 11 (stmt -> assignment .)
    SQUARE          reduce using rule 11 (stmt -> assignment .)
    TRIANGLE        reduce using rule 11 (stmt -> assignment .)
    RECTANGLE       reduce using rule 11 (stmt -> assignment .)
    HIDE_STAR       reduce using rule 11 (stmt -> assignment .)
    SHOW_STAR       reduce using rule 11 (stmt -> assignment .)
    HAND_DOWN       reduce using rule 11 (stmt -> assignment .)
    HAND_UP         reduce using rule 11 (stmt -> assignment .)
    SETXY           reduce using rule 11 (stmt -> assignment .)
    COLOR_STAR      reduce using rule 11 (stmt -> assignment .)
    SIZE_STAR       reduce using rule 11 (stmt -> assignment .)
    GO              reduce using rule 11 (stmt -> assignment .)
    LEFT            reduce using rule 11 (stmt -> assignment .)
    RIGHT           reduce using rule 11 (stmt -> assignment .)
    BACK            reduce using rule 11 (stmt -> assignment .)
    ARC             reduce using rule 11 (stmt -> assignment .)
    CLOSEBRACES     reduce using rule 11 (stmt -> assignment .)


state 58

    (12) stmt -> condition .

    ID              reduce using rule 12 (stmt -> condition .)
    IF              reduce using rule 12 (stmt -> condition .)
    PRINT           reduce using rule 12 (stmt -> condition .)
    READ            reduce using rule 12 (stmt -> condition .)
    REPEAT          reduce using rule 12 (stmt -> condition .)
    RETURN          reduce using rule 12 (stmt -> condition .)
    WHILE           reduce using rule 12 (stmt -> condition .)
    FOR             reduce using rule 12 (stmt -> condition .)
    CIRCLE          reduce using rule 12 (stmt -> condition .)
    SQUARE          reduce using rule 12 (stmt -> condition .)
    TRIANGLE        reduce using rule 12 (stmt -> condition .)
    RECTANGLE       reduce using rule 12 (stmt -> condition .)
    HIDE_STAR       reduce using rule 12 (stmt -> condition .)
    SHOW_STAR       reduce using rule 12 (stmt -> condition .)
    HAND_DOWN       reduce using rule 12 (stmt -> condition .)
    HAND_UP         reduce using rule 12 (stmt -> condition .)
    SETXY           reduce using rule 12 (stmt -> condition .)
    COLOR_STAR      reduce using rule 12 (stmt -> condition .)
    SIZE_STAR       reduce using rule 12 (stmt -> condition .)
    GO              reduce using rule 12 (stmt -> condition .)
    LEFT            reduce using rule 12 (stmt -> condition .)
    RIGHT           reduce using rule 12 (stmt -> condition .)
    BACK            reduce using rule 12 (stmt -> condition .)
    ARC             reduce using rule 12 (stmt -> condition .)
    CLOSEBRACES     reduce using rule 12 (stmt -> condition .)


state 59

    (13) stmt -> print .

    ID              reduce using rule 13 (stmt -> print .)
    IF              reduce using rule 13 (stmt -> print .)
    PRINT           reduce using rule 13 (stmt -> print .)
    READ            reduce using rule 13 (stmt -> print .)
    REPEAT          reduce using rule 13 (stmt -> print .)
    RETURN          reduce using rule 13 (stmt -> print .)
    WHILE           reduce using rule 13 (stmt -> print .)
    FOR             reduce using rule 13 (stmt -> print .)
    CIRCLE          reduce using rule 13 (stmt -> print .)
    SQUARE          reduce using rule 13 (stmt -> print .)
    TRIANGLE        reduce using rule 13 (stmt -> print .)
    RECTANGLE       reduce using rule 13 (stmt -> print .)
    HIDE_STAR       reduce using rule 13 (stmt -> print .)
    SHOW_STAR       reduce using rule 13 (stmt -> print .)
    HAND_DOWN       reduce using rule 13 (stmt -> print .)
    HAND_UP         reduce using rule 13 (stmt -> print .)
    SETXY           reduce using rule 13 (stmt -> print .)
    COLOR_STAR      reduce using rule 13 (stmt -> print .)
    SIZE_STAR       reduce using rule 13 (stmt -> print .)
    GO              reduce using rule 13 (stmt -> print .)
    LEFT            reduce using rule 13 (stmt -> print .)
    RIGHT           reduce using rule 13 (stmt -> print .)
    BACK            reduce using rule 13 (stmt -> print .)
    ARC             reduce using rule 13 (stmt -> print .)
    CLOSEBRACES     reduce using rule 13 (stmt -> print .)


state 60

    (14) stmt -> loop .

    ID              reduce using rule 14 (stmt -> loop .)
    IF              reduce using rule 14 (stmt -> loop .)
    PRINT           reduce using rule 14 (stmt -> loop .)
    READ            reduce using rule 14 (stmt -> loop .)
    REPEAT          reduce using rule 14 (stmt -> loop .)
    RETURN          reduce using rule 14 (stmt -> loop .)
    WHILE           reduce using rule 14 (stmt -> loop .)
    FOR             reduce using rule 14 (stmt -> loop .)
    CIRCLE          reduce using rule 14 (stmt -> loop .)
    SQUARE          reduce using rule 14 (stmt -> loop .)
    TRIANGLE        reduce using rule 14 (stmt -> loop .)
    RECTANGLE       reduce using rule 14 (stmt -> loop .)
    HIDE_STAR       reduce using rule 14 (stmt -> loop .)
    SHOW_STAR       reduce using rule 14 (stmt -> loop .)
    HAND_DOWN       reduce using rule 14 (stmt -> loop .)
    HAND_UP         reduce using rule 14 (stmt -> loop .)
    SETXY           reduce using rule 14 (stmt -> loop .)
    COLOR_STAR      reduce using rule 14 (stmt -> loop .)
    SIZE_STAR       reduce using rule 14 (stmt -> loop .)
    GO              reduce using rule 14 (stmt -> loop .)
    LEFT            reduce using rule 14 (stmt -> loop .)
    RIGHT           reduce using rule 14 (stmt -> loop .)
    BACK            reduce using rule 14 (stmt -> loop .)
    ARC             reduce using rule 14 (stmt -> loop .)
    CLOSEBRACES     reduce using rule 14 (stmt -> loop .)


state 61

    (15) stmt -> read .

    ID              reduce using rule 15 (stmt -> read .)
    IF              reduce using rule 15 (stmt -> read .)
    PRINT           reduce using rule 15 (stmt -> read .)
    READ            reduce using rule 15 (stmt -> read .)
    REPEAT          reduce using rule 15 (stmt -> read .)
    RETURN          reduce using rule 15 (stmt -> read .)
    WHILE           reduce using rule 15 (stmt -> read .)
    FOR             reduce using rule 15 (stmt -> read .)
    CIRCLE          reduce using rule 15 (stmt -> read .)
    SQUARE          reduce using rule 15 (stmt -> read .)
    TRIANGLE        reduce using rule 15 (stmt -> read .)
    RECTANGLE       reduce using rule 15 (stmt -> read .)
    HIDE_STAR       reduce using rule 15 (stmt -> read .)
    SHOW_STAR       reduce using rule 15 (stmt -> read .)
    HAND_DOWN       reduce using rule 15 (stmt -> read .)
    HAND_UP         reduce using rule 15 (stmt -> read .)
    SETXY           reduce using rule 15 (stmt -> read .)
    COLOR_STAR      reduce using rule 15 (stmt -> read .)
    SIZE_STAR       reduce using rule 15 (stmt -> read .)
    GO              reduce using rule 15 (stmt -> read .)
    LEFT            reduce using rule 15 (stmt -> read .)
    RIGHT           reduce using rule 15 (stmt -> read .)
    BACK            reduce using rule 15 (stmt -> read .)
    ARC             reduce using rule 15 (stmt -> read .)
    CLOSEBRACES     reduce using rule 15 (stmt -> read .)


state 62

    (16) stmt -> graphstmt .

    ID              reduce using rule 16 (stmt -> graphstmt .)
    IF              reduce using rule 16 (stmt -> graphstmt .)
    PRINT           reduce using rule 16 (stmt -> graphstmt .)
    READ            reduce using rule 16 (stmt -> graphstmt .)
    REPEAT          reduce using rule 16 (stmt -> graphstmt .)
    RETURN          reduce using rule 16 (stmt -> graphstmt .)
    WHILE           reduce using rule 16 (stmt -> graphstmt .)
    FOR             reduce using rule 16 (stmt -> graphstmt .)
    CIRCLE          reduce using rule 16 (stmt -> graphstmt .)
    SQUARE          reduce using rule 16 (stmt -> graphstmt .)
    TRIANGLE        reduce using rule 16 (stmt -> graphstmt .)
    RECTANGLE       reduce using rule 16 (stmt -> graphstmt .)
    HIDE_STAR       reduce using rule 16 (stmt -> graphstmt .)
    SHOW_STAR       reduce using rule 16 (stmt -> graphstmt .)
    HAND_DOWN       reduce using rule 16 (stmt -> graphstmt .)
    HAND_UP         reduce using rule 16 (stmt -> graphstmt .)
    SETXY           reduce using rule 16 (stmt -> graphstmt .)
    COLOR_STAR      reduce using rule 16 (stmt -> graphstmt .)
    SIZE_STAR       reduce using rule 16 (stmt -> graphstmt .)
    GO              reduce using rule 16 (stmt -> graphstmt .)
    LEFT            reduce using rule 16 (stmt -> graphstmt .)
    RIGHT           reduce using rule 16 (stmt -> graphstmt .)
    BACK            reduce using rule 16 (stmt -> graphstmt .)
    ARC             reduce using rule 16 (stmt -> graphstmt .)
    CLOSEBRACES     reduce using rule 16 (stmt -> graphstmt .)


state 63

    (17) stmt -> graphr .

    ID              reduce using rule 17 (stmt -> graphr .)
    IF              reduce using rule 17 (stmt -> graphr .)
    PRINT           reduce using rule 17 (stmt -> graphr .)
    READ            reduce using rule 17 (stmt -> graphr .)
    REPEAT          reduce using rule 17 (stmt -> graphr .)
    RETURN          reduce using rule 17 (stmt -> graphr .)
    WHILE           reduce using rule 17 (stmt -> graphr .)
    FOR             reduce using rule 17 (stmt -> graphr .)
    CIRCLE          reduce using rule 17 (stmt -> graphr .)
    SQUARE          reduce using rule 17 (stmt -> graphr .)
    TRIANGLE        reduce using rule 17 (stmt -> graphr .)
    RECTANGLE       reduce using rule 17 (stmt -> graphr .)
    HIDE_STAR       reduce using rule 17 (stmt -> graphr .)
    SHOW_STAR       reduce using rule 17 (stmt -> graphr .)
    HAND_DOWN       reduce using rule 17 (stmt -> graphr .)
    HAND_UP         reduce using rule 17 (stmt -> graphr .)
    SETXY           reduce using rule 17 (stmt -> graphr .)
    COLOR_STAR      reduce using rule 17 (stmt -> graphr .)
    SIZE_STAR       reduce using rule 17 (stmt -> graphr .)
    GO              reduce using rule 17 (stmt -> graphr .)
    LEFT            reduce using rule 17 (stmt -> graphr .)
    RIGHT           reduce using rule 17 (stmt -> graphr .)
    BACK            reduce using rule 17 (stmt -> graphr .)
    ARC             reduce using rule 17 (stmt -> graphr .)
    CLOSEBRACES     reduce using rule 17 (stmt -> graphr .)


state 64

    (18) stmt -> funCall .

    ID              reduce using rule 18 (stmt -> funCall .)
    IF              reduce using rule 18 (stmt -> funCall .)
    PRINT           reduce using rule 18 (stmt -> funCall .)
    READ            reduce using rule 18 (stmt -> funCall .)
    REPEAT          reduce using rule 18 (stmt -> funCall .)
    RETURN          reduce using rule 18 (stmt -> funCall .)
    WHILE           reduce using rule 18 (stmt -> funCall .)
    FOR             reduce using rule 18 (stmt -> funCall .)
    CIRCLE          reduce using rule 18 (stmt -> funCall .)
    SQUARE          reduce using rule 18 (stmt -> funCall .)
    TRIANGLE        reduce using rule 18 (stmt -> funCall .)
    RECTANGLE       reduce using rule 18 (stmt -> funCall .)
    HIDE_STAR       reduce using rule 18 (stmt -> funCall .)
    SHOW_STAR       reduce using rule 18 (stmt -> funCall .)
    HAND_DOWN       reduce using rule 18 (stmt -> funCall .)
    HAND_UP         reduce using rule 18 (stmt -> funCall .)
    SETXY           reduce using rule 18 (stmt -> funCall .)
    COLOR_STAR      reduce using rule 18 (stmt -> funCall .)
    SIZE_STAR       reduce using rule 18 (stmt -> funCall .)
    GO              reduce using rule 18 (stmt -> funCall .)
    LEFT            reduce using rule 18 (stmt -> funCall .)
    RIGHT           reduce using rule 18 (stmt -> funCall .)
    BACK            reduce using rule 18 (stmt -> funCall .)
    ARC             reduce using rule 18 (stmt -> funCall .)
    CLOSEBRACES     reduce using rule 18 (stmt -> funCall .)


state 65

    (19) stmt -> return .

    ID              reduce using rule 19 (stmt -> return .)
    IF              reduce using rule 19 (stmt -> return .)
    PRINT           reduce using rule 19 (stmt -> return .)
    READ            reduce using rule 19 (stmt -> return .)
    REPEAT          reduce using rule 19 (stmt -> return .)
    RETURN          reduce using rule 19 (stmt -> return .)
    WHILE           reduce using rule 19 (stmt -> return .)
    FOR             reduce using rule 19 (stmt -> return .)
    CIRCLE          reduce using rule 19 (stmt -> return .)
    SQUARE          reduce using rule 19 (stmt -> return .)
    TRIANGLE        reduce using rule 19 (stmt -> return .)
    RECTANGLE       reduce using rule 19 (stmt -> return .)
    HIDE_STAR       reduce using rule 19 (stmt -> return .)
    SHOW_STAR       reduce using rule 19 (stmt -> return .)
    HAND_DOWN       reduce using rule 19 (stmt -> return .)
    HAND_UP         reduce using rule 19 (stmt -> return .)
    SETXY           reduce using rule 19 (stmt -> return .)
    COLOR_STAR      reduce using rule 19 (stmt -> return .)
    SIZE_STAR       reduce using rule 19 (stmt -> return .)
    GO              reduce using rule 19 (stmt -> return .)
    LEFT            reduce using rule 19 (stmt -> return .)
    RIGHT           reduce using rule 19 (stmt -> return .)
    BACK            reduce using rule 19 (stmt -> return .)
    ARC             reduce using rule 19 (stmt -> return .)
    CLOSEBRACES     reduce using rule 19 (stmt -> return .)


state 66

    (36) assignment -> ID . assignment1 EQUALS assignment3 SEMICOLON
    (82) funCall -> ID . OPENPAREN expression CLOSEPAREN SEMICOLON
    (37) assignment1 -> . assignment2
    (38) assignment1 -> . assignment2 assignment1
    (39) assignment1 -> . empty
    (40) assignment2 -> . OPENBRACKET expression CLOSEBRACKET
    (133) empty -> .

    OPENPAREN       shift and go to state 124
    OPENBRACKET     shift and go to state 127
    EQUALS          reduce using rule 133 (empty -> .)

    assignment1                    shift and go to state 123
    assignment2                    shift and go to state 125
    empty                          shift and go to state 126

state 67

    (70) condition -> IF . head body condition1
    (74) head -> . OPENPAREN head1 CLOSEPAREN

    OPENPAREN       shift and go to state 129

    head                           shift and go to state 128

state 68

    (31) print -> PRINT . OPENPAREN expression CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 130


state 69

    (9) loop -> while .

    ID              reduce using rule 9 (loop -> while .)
    IF              reduce using rule 9 (loop -> while .)
    PRINT           reduce using rule 9 (loop -> while .)
    READ            reduce using rule 9 (loop -> while .)
    REPEAT          reduce using rule 9 (loop -> while .)
    RETURN          reduce using rule 9 (loop -> while .)
    WHILE           reduce using rule 9 (loop -> while .)
    FOR             reduce using rule 9 (loop -> while .)
    CIRCLE          reduce using rule 9 (loop -> while .)
    SQUARE          reduce using rule 9 (loop -> while .)
    TRIANGLE        reduce using rule 9 (loop -> while .)
    RECTANGLE       reduce using rule 9 (loop -> while .)
    HIDE_STAR       reduce using rule 9 (loop -> while .)
    SHOW_STAR       reduce using rule 9 (loop -> while .)
    HAND_DOWN       reduce using rule 9 (loop -> while .)
    HAND_UP         reduce using rule 9 (loop -> while .)
    SETXY           reduce using rule 9 (loop -> while .)
    COLOR_STAR      reduce using rule 9 (loop -> while .)
    SIZE_STAR       reduce using rule 9 (loop -> while .)
    GO              reduce using rule 9 (loop -> while .)
    LEFT            reduce using rule 9 (loop -> while .)
    RIGHT           reduce using rule 9 (loop -> while .)
    BACK            reduce using rule 9 (loop -> while .)
    ARC             reduce using rule 9 (loop -> while .)
    CLOSEBRACES     reduce using rule 9 (loop -> while .)


state 70

    (10) loop -> for .

    ID              reduce using rule 10 (loop -> for .)
    IF              reduce using rule 10 (loop -> for .)
    PRINT           reduce using rule 10 (loop -> for .)
    READ            reduce using rule 10 (loop -> for .)
    REPEAT          reduce using rule 10 (loop -> for .)
    RETURN          reduce using rule 10 (loop -> for .)
    WHILE           reduce using rule 10 (loop -> for .)
    FOR             reduce using rule 10 (loop -> for .)
    CIRCLE          reduce using rule 10 (loop -> for .)
    SQUARE          reduce using rule 10 (loop -> for .)
    TRIANGLE        reduce using rule 10 (loop -> for .)
    RECTANGLE       reduce using rule 10 (loop -> for .)
    HIDE_STAR       reduce using rule 10 (loop -> for .)
    SHOW_STAR       reduce using rule 10 (loop -> for .)
    HAND_DOWN       reduce using rule 10 (loop -> for .)
    HAND_UP         reduce using rule 10 (loop -> for .)
    SETXY           reduce using rule 10 (loop -> for .)
    COLOR_STAR      reduce using rule 10 (loop -> for .)
    SIZE_STAR       reduce using rule 10 (loop -> for .)
    GO              reduce using rule 10 (loop -> for .)
    LEFT            reduce using rule 10 (loop -> for .)
    RIGHT           reduce using rule 10 (loop -> for .)
    BACK            reduce using rule 10 (loop -> for .)
    ARC             reduce using rule 10 (loop -> for .)
    CLOSEBRACES     reduce using rule 10 (loop -> for .)


state 71

    (32) read -> READ . OPENPAREN ID read1 CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 131


state 72

    (92) graphstmt -> graphfig .

    ID              reduce using rule 92 (graphstmt -> graphfig .)
    IF              reduce using rule 92 (graphstmt -> graphfig .)
    PRINT           reduce using rule 92 (graphstmt -> graphfig .)
    READ            reduce using rule 92 (graphstmt -> graphfig .)
    REPEAT          reduce using rule 92 (graphstmt -> graphfig .)
    RETURN          reduce using rule 92 (graphstmt -> graphfig .)
    WHILE           reduce using rule 92 (graphstmt -> graphfig .)
    FOR             reduce using rule 92 (graphstmt -> graphfig .)
    CIRCLE          reduce using rule 92 (graphstmt -> graphfig .)
    SQUARE          reduce using rule 92 (graphstmt -> graphfig .)
    TRIANGLE        reduce using rule 92 (graphstmt -> graphfig .)
    RECTANGLE       reduce using rule 92 (graphstmt -> graphfig .)
    HIDE_STAR       reduce using rule 92 (graphstmt -> graphfig .)
    SHOW_STAR       reduce using rule 92 (graphstmt -> graphfig .)
    HAND_DOWN       reduce using rule 92 (graphstmt -> graphfig .)
    HAND_UP         reduce using rule 92 (graphstmt -> graphfig .)
    SETXY           reduce using rule 92 (graphstmt -> graphfig .)
    COLOR_STAR      reduce using rule 92 (graphstmt -> graphfig .)
    SIZE_STAR       reduce using rule 92 (graphstmt -> graphfig .)
    GO              reduce using rule 92 (graphstmt -> graphfig .)
    LEFT            reduce using rule 92 (graphstmt -> graphfig .)
    RIGHT           reduce using rule 92 (graphstmt -> graphfig .)
    BACK            reduce using rule 92 (graphstmt -> graphfig .)
    ARC             reduce using rule 92 (graphstmt -> graphfig .)
    CLOSEBRACES     reduce using rule 92 (graphstmt -> graphfig .)


state 73

    (93) graphstmt -> graphview .

    ID              reduce using rule 93 (graphstmt -> graphview .)
    IF              reduce using rule 93 (graphstmt -> graphview .)
    PRINT           reduce using rule 93 (graphstmt -> graphview .)
    READ            reduce using rule 93 (graphstmt -> graphview .)
    REPEAT          reduce using rule 93 (graphstmt -> graphview .)
    RETURN          reduce using rule 93 (graphstmt -> graphview .)
    WHILE           reduce using rule 93 (graphstmt -> graphview .)
    FOR             reduce using rule 93 (graphstmt -> graphview .)
    CIRCLE          reduce using rule 93 (graphstmt -> graphview .)
    SQUARE          reduce using rule 93 (graphstmt -> graphview .)
    TRIANGLE        reduce using rule 93 (graphstmt -> graphview .)
    RECTANGLE       reduce using rule 93 (graphstmt -> graphview .)
    HIDE_STAR       reduce using rule 93 (graphstmt -> graphview .)
    SHOW_STAR       reduce using rule 93 (graphstmt -> graphview .)
    HAND_DOWN       reduce using rule 93 (graphstmt -> graphview .)
    HAND_UP         reduce using rule 93 (graphstmt -> graphview .)
    SETXY           reduce using rule 93 (graphstmt -> graphview .)
    COLOR_STAR      reduce using rule 93 (graphstmt -> graphview .)
    SIZE_STAR       reduce using rule 93 (graphstmt -> graphview .)
    GO              reduce using rule 93 (graphstmt -> graphview .)
    LEFT            reduce using rule 93 (graphstmt -> graphview .)
    RIGHT           reduce using rule 93 (graphstmt -> graphview .)
    BACK            reduce using rule 93 (graphstmt -> graphview .)
    ARC             reduce using rule 93 (graphstmt -> graphview .)
    CLOSEBRACES     reduce using rule 93 (graphstmt -> graphview .)


state 74

    (94) graphstmt -> graphmove .

    ID              reduce using rule 94 (graphstmt -> graphmove .)
    IF              reduce using rule 94 (graphstmt -> graphmove .)
    PRINT           reduce using rule 94 (graphstmt -> graphmove .)
    READ            reduce using rule 94 (graphstmt -> graphmove .)
    REPEAT          reduce using rule 94 (graphstmt -> graphmove .)
    RETURN          reduce using rule 94 (graphstmt -> graphmove .)
    WHILE           reduce using rule 94 (graphstmt -> graphmove .)
    FOR             reduce using rule 94 (graphstmt -> graphmove .)
    CIRCLE          reduce using rule 94 (graphstmt -> graphmove .)
    SQUARE          reduce using rule 94 (graphstmt -> graphmove .)
    TRIANGLE        reduce using rule 94 (graphstmt -> graphmove .)
    RECTANGLE       reduce using rule 94 (graphstmt -> graphmove .)
    HIDE_STAR       reduce using rule 94 (graphstmt -> graphmove .)
    SHOW_STAR       reduce using rule 94 (graphstmt -> graphmove .)
    HAND_DOWN       reduce using rule 94 (graphstmt -> graphmove .)
    HAND_UP         reduce using rule 94 (graphstmt -> graphmove .)
    SETXY           reduce using rule 94 (graphstmt -> graphmove .)
    COLOR_STAR      reduce using rule 94 (graphstmt -> graphmove .)
    SIZE_STAR       reduce using rule 94 (graphstmt -> graphmove .)
    GO              reduce using rule 94 (graphstmt -> graphmove .)
    LEFT            reduce using rule 94 (graphstmt -> graphmove .)
    RIGHT           reduce using rule 94 (graphstmt -> graphmove .)
    BACK            reduce using rule 94 (graphstmt -> graphmove .)
    ARC             reduce using rule 94 (graphstmt -> graphmove .)
    CLOSEBRACES     reduce using rule 94 (graphstmt -> graphmove .)


state 75

    (109) graphr -> REPEAT . expression OPENBRACES graphstmt graphr1 CLOSEBRACES
    (56) expression -> . vcte
    (57) expression -> . operation
    (58) expression -> . empty
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (133) empty -> .
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

    ID              shift and go to state 39
    OPENBRACES      reduce using rule 133 (empty -> .)
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

    expression                     shift and go to state 132
    vcte                           shift and go to state 35
    operation                      shift and go to state 36
    empty                          shift and go to state 37
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 76

    (59) return -> RETURN . return1 SEMICOLON
    (60) return1 -> . vcte
    (61) return1 -> . operation
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

    ID              shift and go to state 39
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

    return1                        shift and go to state 133
    vcte                           shift and go to state 134
    operation                      shift and go to state 135
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 77

    (81) while -> WHILE . head body
    (74) head -> . OPENPAREN head1 CLOSEPAREN

    OPENPAREN       shift and go to state 129

    head                           shift and go to state 136

state 78

    (80) for -> FOR . OPENPAREN ID TWODOTS expression CLOSEPAREN body

    OPENPAREN       shift and go to state 137


state 79

    (95) graphfig -> graphfig1 . expression SEMICOLON
    (56) expression -> . vcte
    (57) expression -> . operation
    (58) expression -> . empty
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (133) empty -> .
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

    ID              shift and go to state 39
    SEMICOLON       reduce using rule 133 (empty -> .)
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

    expression                     shift and go to state 138
    vcte                           shift and go to state 35
    operation                      shift and go to state 36
    empty                          shift and go to state 37
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 80

    (112) graphview -> graphview1 . SEMICOLON

    SEMICOLON       shift and go to state 139


state 81

    (100) graphmove -> graphmove1 . SEMICOLON

    SEMICOLON       shift and go to state 140


state 82

    (96) graphfig1 -> CIRCLE .

    ID              reduce using rule 96 (graphfig1 -> CIRCLE .)
    CTEINT          reduce using rule 96 (graphfig1 -> CIRCLE .)
    CTEFLOAT        reduce using rule 96 (graphfig1 -> CIRCLE .)
    CTECHAR         reduce using rule 96 (graphfig1 -> CIRCLE .)
    OPENPAREN       reduce using rule 96 (graphfig1 -> CIRCLE .)
    ADDITION        reduce using rule 96 (graphfig1 -> CIRCLE .)
    SUBSTRACTION    reduce using rule 96 (graphfig1 -> CIRCLE .)
    SEMICOLON       reduce using rule 96 (graphfig1 -> CIRCLE .)


state 83

    (97) graphfig1 -> SQUARE .

    ID              reduce using rule 97 (graphfig1 -> SQUARE .)
    CTEINT          reduce using rule 97 (graphfig1 -> SQUARE .)
    CTEFLOAT        reduce using rule 97 (graphfig1 -> SQUARE .)
    CTECHAR         reduce using rule 97 (graphfig1 -> SQUARE .)
    OPENPAREN       reduce using rule 97 (graphfig1 -> SQUARE .)
    ADDITION        reduce using rule 97 (graphfig1 -> SQUARE .)
    SUBSTRACTION    reduce using rule 97 (graphfig1 -> SQUARE .)
    SEMICOLON       reduce using rule 97 (graphfig1 -> SQUARE .)


state 84

    (98) graphfig1 -> TRIANGLE . expression
    (56) expression -> . vcte
    (57) expression -> . operation
    (58) expression -> . empty
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (133) empty -> .
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTEINT resolved as shift
  ! shift/reduce conflict for CTEFLOAT resolved as shift
  ! shift/reduce conflict for CTECHAR resolved as shift
  ! shift/reduce conflict for OPENPAREN resolved as shift
  ! shift/reduce conflict for ADDITION resolved as shift
  ! shift/reduce conflict for SUBSTRACTION resolved as shift
    ID              shift and go to state 39
    SEMICOLON       reduce using rule 133 (empty -> .)
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

  ! ID              [ reduce using rule 133 (empty -> .) ]
  ! CTEINT          [ reduce using rule 133 (empty -> .) ]
  ! CTEFLOAT        [ reduce using rule 133 (empty -> .) ]
  ! CTECHAR         [ reduce using rule 133 (empty -> .) ]
  ! OPENPAREN       [ reduce using rule 133 (empty -> .) ]
  ! ADDITION        [ reduce using rule 133 (empty -> .) ]
  ! SUBSTRACTION    [ reduce using rule 133 (empty -> .) ]

    expression                     shift and go to state 141
    vcte                           shift and go to state 35
    operation                      shift and go to state 36
    empty                          shift and go to state 37
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 85

    (99) graphfig1 -> RECTANGLE . expression
    (56) expression -> . vcte
    (57) expression -> . operation
    (58) expression -> . empty
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (133) empty -> .
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTEINT resolved as shift
  ! shift/reduce conflict for CTEFLOAT resolved as shift
  ! shift/reduce conflict for CTECHAR resolved as shift
  ! shift/reduce conflict for OPENPAREN resolved as shift
  ! shift/reduce conflict for ADDITION resolved as shift
  ! shift/reduce conflict for SUBSTRACTION resolved as shift
    ID              shift and go to state 39
    SEMICOLON       reduce using rule 133 (empty -> .)
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

  ! ID              [ reduce using rule 133 (empty -> .) ]
  ! CTEINT          [ reduce using rule 133 (empty -> .) ]
  ! CTEFLOAT        [ reduce using rule 133 (empty -> .) ]
  ! CTECHAR         [ reduce using rule 133 (empty -> .) ]
  ! OPENPAREN       [ reduce using rule 133 (empty -> .) ]
  ! ADDITION        [ reduce using rule 133 (empty -> .) ]
  ! SUBSTRACTION    [ reduce using rule 133 (empty -> .) ]

    expression                     shift and go to state 142
    vcte                           shift and go to state 35
    operation                      shift and go to state 36
    empty                          shift and go to state 37
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 86

    (113) graphview1 -> HIDE_STAR .

    SEMICOLON       reduce using rule 113 (graphview1 -> HIDE_STAR .)


state 87

    (114) graphview1 -> SHOW_STAR .

    SEMICOLON       reduce using rule 114 (graphview1 -> SHOW_STAR .)


state 88

    (115) graphview1 -> graphview2 . expression
    (56) expression -> . vcte
    (57) expression -> . operation
    (58) expression -> . empty
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (133) empty -> .
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

    ID              shift and go to state 39
    SEMICOLON       reduce using rule 133 (empty -> .)
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

    expression                     shift and go to state 143
    vcte                           shift and go to state 35
    operation                      shift and go to state 36
    empty                          shift and go to state 37
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 89

    (101) graphmove1 -> HAND_DOWN .

    SEMICOLON       reduce using rule 101 (graphmove1 -> HAND_DOWN .)


state 90

    (102) graphmove1 -> HAND_UP .

    SEMICOLON       reduce using rule 102 (graphmove1 -> HAND_UP .)


state 91

    (103) graphmove1 -> graphmove2 . expression
    (56) expression -> . vcte
    (57) expression -> . operation
    (58) expression -> . empty
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (133) empty -> .
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

    ID              shift and go to state 39
    SEMICOLON       reduce using rule 133 (empty -> .)
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

    expression                     shift and go to state 144
    vcte                           shift and go to state 35
    operation                      shift and go to state 36
    empty                          shift and go to state 37
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 92

    (116) graphview2 -> SETXY . expression
    (56) expression -> . vcte
    (57) expression -> . operation
    (58) expression -> . empty
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (133) empty -> .
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTEINT resolved as shift
  ! shift/reduce conflict for CTEFLOAT resolved as shift
  ! shift/reduce conflict for CTECHAR resolved as shift
  ! shift/reduce conflict for OPENPAREN resolved as shift
  ! shift/reduce conflict for ADDITION resolved as shift
  ! shift/reduce conflict for SUBSTRACTION resolved as shift
    ID              shift and go to state 39
    SEMICOLON       reduce using rule 133 (empty -> .)
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

  ! ID              [ reduce using rule 133 (empty -> .) ]
  ! CTEINT          [ reduce using rule 133 (empty -> .) ]
  ! CTEFLOAT        [ reduce using rule 133 (empty -> .) ]
  ! CTECHAR         [ reduce using rule 133 (empty -> .) ]
  ! OPENPAREN       [ reduce using rule 133 (empty -> .) ]
  ! ADDITION        [ reduce using rule 133 (empty -> .) ]
  ! SUBSTRACTION    [ reduce using rule 133 (empty -> .) ]

    expression                     shift and go to state 145
    vcte                           shift and go to state 35
    operation                      shift and go to state 36
    empty                          shift and go to state 37
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 93

    (117) graphview2 -> COLOR_STAR .

    ID              reduce using rule 117 (graphview2 -> COLOR_STAR .)
    CTEINT          reduce using rule 117 (graphview2 -> COLOR_STAR .)
    CTEFLOAT        reduce using rule 117 (graphview2 -> COLOR_STAR .)
    CTECHAR         reduce using rule 117 (graphview2 -> COLOR_STAR .)
    OPENPAREN       reduce using rule 117 (graphview2 -> COLOR_STAR .)
    ADDITION        reduce using rule 117 (graphview2 -> COLOR_STAR .)
    SUBSTRACTION    reduce using rule 117 (graphview2 -> COLOR_STAR .)
    SEMICOLON       reduce using rule 117 (graphview2 -> COLOR_STAR .)


state 94

    (118) graphview2 -> SIZE_STAR .

    ID              reduce using rule 118 (graphview2 -> SIZE_STAR .)
    CTEINT          reduce using rule 118 (graphview2 -> SIZE_STAR .)
    CTEFLOAT        reduce using rule 118 (graphview2 -> SIZE_STAR .)
    CTECHAR         reduce using rule 118 (graphview2 -> SIZE_STAR .)
    OPENPAREN       reduce using rule 118 (graphview2 -> SIZE_STAR .)
    ADDITION        reduce using rule 118 (graphview2 -> SIZE_STAR .)
    SUBSTRACTION    reduce using rule 118 (graphview2 -> SIZE_STAR .)
    SEMICOLON       reduce using rule 118 (graphview2 -> SIZE_STAR .)


state 95

    (104) graphmove2 -> GO .

    ID              reduce using rule 104 (graphmove2 -> GO .)
    CTEINT          reduce using rule 104 (graphmove2 -> GO .)
    CTEFLOAT        reduce using rule 104 (graphmove2 -> GO .)
    CTECHAR         reduce using rule 104 (graphmove2 -> GO .)
    OPENPAREN       reduce using rule 104 (graphmove2 -> GO .)
    ADDITION        reduce using rule 104 (graphmove2 -> GO .)
    SUBSTRACTION    reduce using rule 104 (graphmove2 -> GO .)
    SEMICOLON       reduce using rule 104 (graphmove2 -> GO .)


state 96

    (105) graphmove2 -> LEFT .

    ID              reduce using rule 105 (graphmove2 -> LEFT .)
    CTEINT          reduce using rule 105 (graphmove2 -> LEFT .)
    CTEFLOAT        reduce using rule 105 (graphmove2 -> LEFT .)
    CTECHAR         reduce using rule 105 (graphmove2 -> LEFT .)
    OPENPAREN       reduce using rule 105 (graphmove2 -> LEFT .)
    ADDITION        reduce using rule 105 (graphmove2 -> LEFT .)
    SUBSTRACTION    reduce using rule 105 (graphmove2 -> LEFT .)
    SEMICOLON       reduce using rule 105 (graphmove2 -> LEFT .)


state 97

    (106) graphmove2 -> RIGHT .

    ID              reduce using rule 106 (graphmove2 -> RIGHT .)
    CTEINT          reduce using rule 106 (graphmove2 -> RIGHT .)
    CTEFLOAT        reduce using rule 106 (graphmove2 -> RIGHT .)
    CTECHAR         reduce using rule 106 (graphmove2 -> RIGHT .)
    OPENPAREN       reduce using rule 106 (graphmove2 -> RIGHT .)
    ADDITION        reduce using rule 106 (graphmove2 -> RIGHT .)
    SUBSTRACTION    reduce using rule 106 (graphmove2 -> RIGHT .)
    SEMICOLON       reduce using rule 106 (graphmove2 -> RIGHT .)


state 98

    (107) graphmove2 -> BACK .

    ID              reduce using rule 107 (graphmove2 -> BACK .)
    CTEINT          reduce using rule 107 (graphmove2 -> BACK .)
    CTEFLOAT        reduce using rule 107 (graphmove2 -> BACK .)
    CTECHAR         reduce using rule 107 (graphmove2 -> BACK .)
    OPENPAREN       reduce using rule 107 (graphmove2 -> BACK .)
    ADDITION        reduce using rule 107 (graphmove2 -> BACK .)
    SUBSTRACTION    reduce using rule 107 (graphmove2 -> BACK .)
    SEMICOLON       reduce using rule 107 (graphmove2 -> BACK .)


state 99

    (108) graphmove2 -> ARC . expression
    (56) expression -> . vcte
    (57) expression -> . operation
    (58) expression -> . empty
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (133) empty -> .
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTEINT resolved as shift
  ! shift/reduce conflict for CTEFLOAT resolved as shift
  ! shift/reduce conflict for CTECHAR resolved as shift
  ! shift/reduce conflict for OPENPAREN resolved as shift
  ! shift/reduce conflict for ADDITION resolved as shift
  ! shift/reduce conflict for SUBSTRACTION resolved as shift
    ID              shift and go to state 39
    SEMICOLON       reduce using rule 133 (empty -> .)
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

  ! ID              [ reduce using rule 133 (empty -> .) ]
  ! CTEINT          [ reduce using rule 133 (empty -> .) ]
  ! CTEFLOAT        [ reduce using rule 133 (empty -> .) ]
  ! CTECHAR         [ reduce using rule 133 (empty -> .) ]
  ! OPENPAREN       [ reduce using rule 133 (empty -> .) ]
  ! ADDITION        [ reduce using rule 133 (empty -> .) ]
  ! SUBSTRACTION    [ reduce using rule 133 (empty -> .) ]

    expression                     shift and go to state 146
    vcte                           shift and go to state 35
    operation                      shift and go to state 36
    empty                          shift and go to state 37
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 100

    (83) function -> FUN function1 ID function2 OPENBRACES . vars function4 CLOSEBRACES
    (20) vars -> . VARS type ID vars1 SEMICOLON

    VARS            shift and go to state 8

    vars                           shift and go to state 147

state 101

    (86) function2 -> OPENPAREN function3 . CLOSEPAREN
    (88) function3 -> function3 . COMMA

    CLOSEPAREN      shift and go to state 148
    COMMA           shift and go to state 149


state 102

    (87) function3 -> type . ID

    ID              shift and go to state 150


state 103

    (89) function3 -> empty .

    CLOSEPAREN      reduce using rule 89 (function3 -> empty .)
    COMMA           reduce using rule 89 (function3 -> empty .)


state 104

    (21) vars1 -> EQUALS expression vars2 .

    SEMICOLON       reduce using rule 21 (vars1 -> EQUALS expression vars2 .)
    COMMA           reduce using rule 21 (vars1 -> EQUALS expression vars2 .)


state 105

    (44) vcte -> ID vcte1 . vcte2
    (47) vcte2 -> . OPENPAREN expression CLOSEPAREN vcte4
    (48) vcte2 -> . empty
    (133) empty -> .

  ! shift/reduce conflict for OPENPAREN resolved as shift
    OPENPAREN       shift and go to state 152
    MULTIPLICATION  reduce using rule 133 (empty -> .)
    DIVISION        reduce using rule 133 (empty -> .)
    ADDITION        reduce using rule 133 (empty -> .)
    SUBSTRACTION    reduce using rule 133 (empty -> .)
    COMMA           reduce using rule 133 (empty -> .)
    SEMICOLON       reduce using rule 133 (empty -> .)
    GREATER         reduce using rule 133 (empty -> .)
    LESS            reduce using rule 133 (empty -> .)
    NOTEQUAL        reduce using rule 133 (empty -> .)
    ISEQUAL         reduce using rule 133 (empty -> .)
    OPENBRACES      reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    CTEINT          reduce using rule 133 (empty -> .)
    CTEFLOAT        reduce using rule 133 (empty -> .)
    CTECHAR         reduce using rule 133 (empty -> .)
    CLOSEBRACKET    reduce using rule 133 (empty -> .)
    CLOSEPAREN      reduce using rule 133 (empty -> .)
    OR              reduce using rule 133 (empty -> .)
    AND             reduce using rule 133 (empty -> .)

  ! OPENPAREN       [ reduce using rule 133 (empty -> .) ]

    vcte2                          shift and go to state 151
    empty                          shift and go to state 153

state 106

    (45) vcte1 -> OPENBRACKET . expression CLOSEBRACKET vcte3
    (56) expression -> . vcte
    (57) expression -> . operation
    (58) expression -> . empty
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (133) empty -> .
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

    ID              shift and go to state 39
    CLOSEBRACKET    reduce using rule 133 (empty -> .)
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

    expression                     shift and go to state 154
    vcte                           shift and go to state 35
    operation                      shift and go to state 36
    empty                          shift and go to state 37
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 107

    (46) vcte1 -> empty .

    OPENPAREN       reduce using rule 46 (vcte1 -> empty .)
    COMMA           reduce using rule 46 (vcte1 -> empty .)
    SEMICOLON       reduce using rule 46 (vcte1 -> empty .)
    MULTIPLICATION  reduce using rule 46 (vcte1 -> empty .)
    DIVISION        reduce using rule 46 (vcte1 -> empty .)
    ADDITION        reduce using rule 46 (vcte1 -> empty .)
    SUBSTRACTION    reduce using rule 46 (vcte1 -> empty .)
    GREATER         reduce using rule 46 (vcte1 -> empty .)
    LESS            reduce using rule 46 (vcte1 -> empty .)
    NOTEQUAL        reduce using rule 46 (vcte1 -> empty .)
    ISEQUAL         reduce using rule 46 (vcte1 -> empty .)
    OPENBRACES      reduce using rule 46 (vcte1 -> empty .)
    ID              reduce using rule 46 (vcte1 -> empty .)
    CTEINT          reduce using rule 46 (vcte1 -> empty .)
    CTEFLOAT        reduce using rule 46 (vcte1 -> empty .)
    CTECHAR         reduce using rule 46 (vcte1 -> empty .)
    CLOSEBRACKET    reduce using rule 46 (vcte1 -> empty .)
    CLOSEPAREN      reduce using rule 46 (vcte1 -> empty .)
    OR              reduce using rule 46 (vcte1 -> empty .)
    AND             reduce using rule 46 (vcte1 -> empty .)


state 108

    (119) operation -> term operation1 .

    COMMA           reduce using rule 119 (operation -> term operation1 .)
    SEMICOLON       reduce using rule 119 (operation -> term operation1 .)
    GREATER         reduce using rule 119 (operation -> term operation1 .)
    LESS            reduce using rule 119 (operation -> term operation1 .)
    NOTEQUAL        reduce using rule 119 (operation -> term operation1 .)
    ISEQUAL         reduce using rule 119 (operation -> term operation1 .)
    OPENBRACES      reduce using rule 119 (operation -> term operation1 .)
    ID              reduce using rule 119 (operation -> term operation1 .)
    CTEINT          reduce using rule 119 (operation -> term operation1 .)
    CTEFLOAT        reduce using rule 119 (operation -> term operation1 .)
    CTECHAR         reduce using rule 119 (operation -> term operation1 .)
    OPENPAREN       reduce using rule 119 (operation -> term operation1 .)
    ADDITION        reduce using rule 119 (operation -> term operation1 .)
    SUBSTRACTION    reduce using rule 119 (operation -> term operation1 .)
    CLOSEBRACKET    reduce using rule 119 (operation -> term operation1 .)
    CLOSEPAREN      reduce using rule 119 (operation -> term operation1 .)
    OR              reduce using rule 119 (operation -> term operation1 .)
    AND             reduce using rule 119 (operation -> term operation1 .)
    MULTIPLICATION  reduce using rule 119 (operation -> term operation1 .)
    DIVISION        reduce using rule 119 (operation -> term operation1 .)


state 109

    (120) operation1 -> ADDITION .

    COMMA           reduce using rule 120 (operation1 -> ADDITION .)
    SEMICOLON       reduce using rule 120 (operation1 -> ADDITION .)
    GREATER         reduce using rule 120 (operation1 -> ADDITION .)
    LESS            reduce using rule 120 (operation1 -> ADDITION .)
    NOTEQUAL        reduce using rule 120 (operation1 -> ADDITION .)
    ISEQUAL         reduce using rule 120 (operation1 -> ADDITION .)
    OPENBRACES      reduce using rule 120 (operation1 -> ADDITION .)
    ID              reduce using rule 120 (operation1 -> ADDITION .)
    CTEINT          reduce using rule 120 (operation1 -> ADDITION .)
    CTEFLOAT        reduce using rule 120 (operation1 -> ADDITION .)
    CTECHAR         reduce using rule 120 (operation1 -> ADDITION .)
    OPENPAREN       reduce using rule 120 (operation1 -> ADDITION .)
    ADDITION        reduce using rule 120 (operation1 -> ADDITION .)
    SUBSTRACTION    reduce using rule 120 (operation1 -> ADDITION .)
    CLOSEBRACKET    reduce using rule 120 (operation1 -> ADDITION .)
    CLOSEPAREN      reduce using rule 120 (operation1 -> ADDITION .)
    OR              reduce using rule 120 (operation1 -> ADDITION .)
    AND             reduce using rule 120 (operation1 -> ADDITION .)
    MULTIPLICATION  reduce using rule 120 (operation1 -> ADDITION .)
    DIVISION        reduce using rule 120 (operation1 -> ADDITION .)


state 110

    (121) operation1 -> SUBSTRACTION .

    COMMA           reduce using rule 121 (operation1 -> SUBSTRACTION .)
    SEMICOLON       reduce using rule 121 (operation1 -> SUBSTRACTION .)
    GREATER         reduce using rule 121 (operation1 -> SUBSTRACTION .)
    LESS            reduce using rule 121 (operation1 -> SUBSTRACTION .)
    NOTEQUAL        reduce using rule 121 (operation1 -> SUBSTRACTION .)
    ISEQUAL         reduce using rule 121 (operation1 -> SUBSTRACTION .)
    OPENBRACES      reduce using rule 121 (operation1 -> SUBSTRACTION .)
    ID              reduce using rule 121 (operation1 -> SUBSTRACTION .)
    CTEINT          reduce using rule 121 (operation1 -> SUBSTRACTION .)
    CTEFLOAT        reduce using rule 121 (operation1 -> SUBSTRACTION .)
    CTECHAR         reduce using rule 121 (operation1 -> SUBSTRACTION .)
    OPENPAREN       reduce using rule 121 (operation1 -> SUBSTRACTION .)
    ADDITION        reduce using rule 121 (operation1 -> SUBSTRACTION .)
    SUBSTRACTION    reduce using rule 121 (operation1 -> SUBSTRACTION .)
    CLOSEBRACKET    reduce using rule 121 (operation1 -> SUBSTRACTION .)
    CLOSEPAREN      reduce using rule 121 (operation1 -> SUBSTRACTION .)
    OR              reduce using rule 121 (operation1 -> SUBSTRACTION .)
    AND             reduce using rule 121 (operation1 -> SUBSTRACTION .)
    MULTIPLICATION  reduce using rule 121 (operation1 -> SUBSTRACTION .)
    DIVISION        reduce using rule 121 (operation1 -> SUBSTRACTION .)


state 111

    (122) operation1 -> empty .

    COMMA           reduce using rule 122 (operation1 -> empty .)
    SEMICOLON       reduce using rule 122 (operation1 -> empty .)
    GREATER         reduce using rule 122 (operation1 -> empty .)
    LESS            reduce using rule 122 (operation1 -> empty .)
    NOTEQUAL        reduce using rule 122 (operation1 -> empty .)
    ISEQUAL         reduce using rule 122 (operation1 -> empty .)
    OPENBRACES      reduce using rule 122 (operation1 -> empty .)
    ID              reduce using rule 122 (operation1 -> empty .)
    CTEINT          reduce using rule 122 (operation1 -> empty .)
    CTEFLOAT        reduce using rule 122 (operation1 -> empty .)
    CTECHAR         reduce using rule 122 (operation1 -> empty .)
    OPENPAREN       reduce using rule 122 (operation1 -> empty .)
    ADDITION        reduce using rule 122 (operation1 -> empty .)
    SUBSTRACTION    reduce using rule 122 (operation1 -> empty .)
    CLOSEBRACKET    reduce using rule 122 (operation1 -> empty .)
    CLOSEPAREN      reduce using rule 122 (operation1 -> empty .)
    OR              reduce using rule 122 (operation1 -> empty .)
    AND             reduce using rule 122 (operation1 -> empty .)
    MULTIPLICATION  reduce using rule 122 (operation1 -> empty .)
    DIVISION        reduce using rule 122 (operation1 -> empty .)


state 112

    (129) term -> factor term1 .

    ADDITION        reduce using rule 129 (term -> factor term1 .)
    SUBSTRACTION    reduce using rule 129 (term -> factor term1 .)
    COMMA           reduce using rule 129 (term -> factor term1 .)
    SEMICOLON       reduce using rule 129 (term -> factor term1 .)
    GREATER         reduce using rule 129 (term -> factor term1 .)
    LESS            reduce using rule 129 (term -> factor term1 .)
    NOTEQUAL        reduce using rule 129 (term -> factor term1 .)
    ISEQUAL         reduce using rule 129 (term -> factor term1 .)
    OPENBRACES      reduce using rule 129 (term -> factor term1 .)
    ID              reduce using rule 129 (term -> factor term1 .)
    CTEINT          reduce using rule 129 (term -> factor term1 .)
    CTEFLOAT        reduce using rule 129 (term -> factor term1 .)
    CTECHAR         reduce using rule 129 (term -> factor term1 .)
    OPENPAREN       reduce using rule 129 (term -> factor term1 .)
    CLOSEBRACKET    reduce using rule 129 (term -> factor term1 .)
    CLOSEPAREN      reduce using rule 129 (term -> factor term1 .)
    OR              reduce using rule 129 (term -> factor term1 .)
    AND             reduce using rule 129 (term -> factor term1 .)
    MULTIPLICATION  reduce using rule 129 (term -> factor term1 .)
    DIVISION        reduce using rule 129 (term -> factor term1 .)


state 113

    (130) term1 -> MULTIPLICATION .

    ADDITION        reduce using rule 130 (term1 -> MULTIPLICATION .)
    SUBSTRACTION    reduce using rule 130 (term1 -> MULTIPLICATION .)
    COMMA           reduce using rule 130 (term1 -> MULTIPLICATION .)
    SEMICOLON       reduce using rule 130 (term1 -> MULTIPLICATION .)
    GREATER         reduce using rule 130 (term1 -> MULTIPLICATION .)
    LESS            reduce using rule 130 (term1 -> MULTIPLICATION .)
    NOTEQUAL        reduce using rule 130 (term1 -> MULTIPLICATION .)
    ISEQUAL         reduce using rule 130 (term1 -> MULTIPLICATION .)
    OPENBRACES      reduce using rule 130 (term1 -> MULTIPLICATION .)
    ID              reduce using rule 130 (term1 -> MULTIPLICATION .)
    CTEINT          reduce using rule 130 (term1 -> MULTIPLICATION .)
    CTEFLOAT        reduce using rule 130 (term1 -> MULTIPLICATION .)
    CTECHAR         reduce using rule 130 (term1 -> MULTIPLICATION .)
    OPENPAREN       reduce using rule 130 (term1 -> MULTIPLICATION .)
    CLOSEBRACKET    reduce using rule 130 (term1 -> MULTIPLICATION .)
    CLOSEPAREN      reduce using rule 130 (term1 -> MULTIPLICATION .)
    OR              reduce using rule 130 (term1 -> MULTIPLICATION .)
    AND             reduce using rule 130 (term1 -> MULTIPLICATION .)
    MULTIPLICATION  reduce using rule 130 (term1 -> MULTIPLICATION .)
    DIVISION        reduce using rule 130 (term1 -> MULTIPLICATION .)


state 114

    (131) term1 -> DIVISION .

    ADDITION        reduce using rule 131 (term1 -> DIVISION .)
    SUBSTRACTION    reduce using rule 131 (term1 -> DIVISION .)
    COMMA           reduce using rule 131 (term1 -> DIVISION .)
    SEMICOLON       reduce using rule 131 (term1 -> DIVISION .)
    GREATER         reduce using rule 131 (term1 -> DIVISION .)
    LESS            reduce using rule 131 (term1 -> DIVISION .)
    NOTEQUAL        reduce using rule 131 (term1 -> DIVISION .)
    ISEQUAL         reduce using rule 131 (term1 -> DIVISION .)
    OPENBRACES      reduce using rule 131 (term1 -> DIVISION .)
    ID              reduce using rule 131 (term1 -> DIVISION .)
    CTEINT          reduce using rule 131 (term1 -> DIVISION .)
    CTEFLOAT        reduce using rule 131 (term1 -> DIVISION .)
    CTECHAR         reduce using rule 131 (term1 -> DIVISION .)
    OPENPAREN       reduce using rule 131 (term1 -> DIVISION .)
    CLOSEBRACKET    reduce using rule 131 (term1 -> DIVISION .)
    CLOSEPAREN      reduce using rule 131 (term1 -> DIVISION .)
    OR              reduce using rule 131 (term1 -> DIVISION .)
    AND             reduce using rule 131 (term1 -> DIVISION .)
    MULTIPLICATION  reduce using rule 131 (term1 -> DIVISION .)
    DIVISION        reduce using rule 131 (term1 -> DIVISION .)


state 115

    (132) term1 -> empty .

    ADDITION        reduce using rule 132 (term1 -> empty .)
    SUBSTRACTION    reduce using rule 132 (term1 -> empty .)
    COMMA           reduce using rule 132 (term1 -> empty .)
    SEMICOLON       reduce using rule 132 (term1 -> empty .)
    GREATER         reduce using rule 132 (term1 -> empty .)
    LESS            reduce using rule 132 (term1 -> empty .)
    NOTEQUAL        reduce using rule 132 (term1 -> empty .)
    ISEQUAL         reduce using rule 132 (term1 -> empty .)
    OPENBRACES      reduce using rule 132 (term1 -> empty .)
    ID              reduce using rule 132 (term1 -> empty .)
    CTEINT          reduce using rule 132 (term1 -> empty .)
    CTEFLOAT        reduce using rule 132 (term1 -> empty .)
    CTECHAR         reduce using rule 132 (term1 -> empty .)
    OPENPAREN       reduce using rule 132 (term1 -> empty .)
    CLOSEBRACKET    reduce using rule 132 (term1 -> empty .)
    CLOSEPAREN      reduce using rule 132 (term1 -> empty .)
    OR              reduce using rule 132 (term1 -> empty .)
    AND             reduce using rule 132 (term1 -> empty .)
    MULTIPLICATION  reduce using rule 132 (term1 -> empty .)
    DIVISION        reduce using rule 132 (term1 -> empty .)


state 116

    (125) factor1 -> factor2 vcte .

    MULTIPLICATION  reduce using rule 125 (factor1 -> factor2 vcte .)
    DIVISION        reduce using rule 125 (factor1 -> factor2 vcte .)
    ADDITION        reduce using rule 125 (factor1 -> factor2 vcte .)
    SUBSTRACTION    reduce using rule 125 (factor1 -> factor2 vcte .)
    COMMA           reduce using rule 125 (factor1 -> factor2 vcte .)
    SEMICOLON       reduce using rule 125 (factor1 -> factor2 vcte .)
    GREATER         reduce using rule 125 (factor1 -> factor2 vcte .)
    LESS            reduce using rule 125 (factor1 -> factor2 vcte .)
    NOTEQUAL        reduce using rule 125 (factor1 -> factor2 vcte .)
    ISEQUAL         reduce using rule 125 (factor1 -> factor2 vcte .)
    OPENBRACES      reduce using rule 125 (factor1 -> factor2 vcte .)
    ID              reduce using rule 125 (factor1 -> factor2 vcte .)
    CTEINT          reduce using rule 125 (factor1 -> factor2 vcte .)
    CTEFLOAT        reduce using rule 125 (factor1 -> factor2 vcte .)
    CTECHAR         reduce using rule 125 (factor1 -> factor2 vcte .)
    OPENPAREN       reduce using rule 125 (factor1 -> factor2 vcte .)
    CLOSEBRACKET    reduce using rule 125 (factor1 -> factor2 vcte .)
    CLOSEPAREN      reduce using rule 125 (factor1 -> factor2 vcte .)
    OR              reduce using rule 125 (factor1 -> factor2 vcte .)
    AND             reduce using rule 125 (factor1 -> factor2 vcte .)


state 117

    (126) factor1 -> OPENPAREN compare . CLOSEPAREN

    CLOSEPAREN      shift and go to state 155


state 118

    (62) compare -> expression . loper expression
    (63) loper -> . GREATER
    (64) loper -> . LESS
    (65) loper -> . NOTEQUAL
    (66) loper -> . ISEQUAL

    GREATER         shift and go to state 157
    LESS            shift and go to state 158
    NOTEQUAL        shift and go to state 159
    ISEQUAL         shift and go to state 160

    loper                          shift and go to state 156

state 119

    (22) vars1 -> OPENBRACKET CTEINT CLOSEBRACKET . vars3
    (26) vars3 -> . OPENBRACKET CTEINT CLOSEBRACKET
    (27) vars3 -> . empty
    (133) empty -> .

    OPENBRACKET     shift and go to state 161
    SEMICOLON       reduce using rule 133 (empty -> .)
    COMMA           reduce using rule 133 (empty -> .)

    vars3                          shift and go to state 162
    empty                          shift and go to state 163

state 120

    (24) vars2 -> COMMA ID . vars1 vars2
    (21) vars1 -> . EQUALS expression vars2
    (22) vars1 -> . OPENBRACKET CTEINT CLOSEBRACKET vars3
    (23) vars1 -> . empty vars2
    (133) empty -> .

    EQUALS          shift and go to state 27
    OPENBRACKET     shift and go to state 28
    COMMA           reduce using rule 133 (empty -> .)
    SEMICOLON       reduce using rule 133 (empty -> .)

    vars1                          shift and go to state 164
    empty                          shift and go to state 29

state 121

    (6) star -> MULTIPLICATION OPENBRACES vars star1 CLOSEBRACES .

    $end            reduce using rule 6 (star -> MULTIPLICATION OPENBRACES vars star1 CLOSEBRACES .)


state 122

    (7) star1 -> stmt star1 .

    CLOSEBRACES     reduce using rule 7 (star1 -> stmt star1 .)


state 123

    (36) assignment -> ID assignment1 . EQUALS assignment3 SEMICOLON

    EQUALS          shift and go to state 165


state 124

    (82) funCall -> ID OPENPAREN . expression CLOSEPAREN SEMICOLON
    (56) expression -> . vcte
    (57) expression -> . operation
    (58) expression -> . empty
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (133) empty -> .
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

    ID              shift and go to state 39
    CLOSEPAREN      reduce using rule 133 (empty -> .)
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

    expression                     shift and go to state 166
    vcte                           shift and go to state 35
    operation                      shift and go to state 36
    empty                          shift and go to state 37
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 125

    (37) assignment1 -> assignment2 .
    (38) assignment1 -> assignment2 . assignment1
    (37) assignment1 -> . assignment2
    (38) assignment1 -> . assignment2 assignment1
    (39) assignment1 -> . empty
    (40) assignment2 -> . OPENBRACKET expression CLOSEBRACKET
    (133) empty -> .

  ! reduce/reduce conflict for EQUALS resolved using rule 37 (assignment1 -> assignment2 .)
    EQUALS          reduce using rule 37 (assignment1 -> assignment2 .)
    OPENBRACKET     shift and go to state 127

  ! EQUALS          [ reduce using rule 133 (empty -> .) ]

    assignment2                    shift and go to state 125
    assignment1                    shift and go to state 167
    empty                          shift and go to state 126

state 126

    (39) assignment1 -> empty .

    EQUALS          reduce using rule 39 (assignment1 -> empty .)


state 127

    (40) assignment2 -> OPENBRACKET . expression CLOSEBRACKET
    (56) expression -> . vcte
    (57) expression -> . operation
    (58) expression -> . empty
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (133) empty -> .
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

    ID              shift and go to state 39
    CLOSEBRACKET    reduce using rule 133 (empty -> .)
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

    expression                     shift and go to state 168
    vcte                           shift and go to state 35
    operation                      shift and go to state 36
    empty                          shift and go to state 37
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 128

    (70) condition -> IF head . body condition1
    (77) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 170

    body                           shift and go to state 169

state 129

    (74) head -> OPENPAREN . head1 CLOSEPAREN
    (75) head1 -> . compare
    (76) head1 -> . logical
    (62) compare -> . expression loper expression
    (67) logical -> . compare logical1 compare
    (56) expression -> . vcte
    (57) expression -> . operation
    (58) expression -> . empty
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (133) empty -> .
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

    ID              shift and go to state 39
    GREATER         reduce using rule 133 (empty -> .)
    LESS            reduce using rule 133 (empty -> .)
    NOTEQUAL        reduce using rule 133 (empty -> .)
    ISEQUAL         reduce using rule 133 (empty -> .)
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

    head1                          shift and go to state 171
    compare                        shift and go to state 172
    logical                        shift and go to state 173
    expression                     shift and go to state 118
    vcte                           shift and go to state 35
    operation                      shift and go to state 36
    empty                          shift and go to state 37
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 130

    (31) print -> PRINT OPENPAREN . expression CLOSEPAREN SEMICOLON
    (56) expression -> . vcte
    (57) expression -> . operation
    (58) expression -> . empty
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (133) empty -> .
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

    ID              shift and go to state 39
    CLOSEPAREN      reduce using rule 133 (empty -> .)
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

    expression                     shift and go to state 174
    vcte                           shift and go to state 35
    operation                      shift and go to state 36
    empty                          shift and go to state 37
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 131

    (32) read -> READ OPENPAREN . ID read1 CLOSEPAREN SEMICOLON

    ID              shift and go to state 175


state 132

    (109) graphr -> REPEAT expression . OPENBRACES graphstmt graphr1 CLOSEBRACES

    OPENBRACES      shift and go to state 176


state 133

    (59) return -> RETURN return1 . SEMICOLON

    SEMICOLON       shift and go to state 177


state 134

    (60) return1 -> vcte .
    (123) factor -> vcte .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 60 (return1 -> vcte .)
    SEMICOLON       reduce using rule 60 (return1 -> vcte .)
    MULTIPLICATION  reduce using rule 123 (factor -> vcte .)
    DIVISION        reduce using rule 123 (factor -> vcte .)
    ADDITION        reduce using rule 123 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 123 (factor -> vcte .)

  ! SEMICOLON       [ reduce using rule 123 (factor -> vcte .) ]


state 135

    (61) return1 -> operation .

    SEMICOLON       reduce using rule 61 (return1 -> operation .)


state 136

    (81) while -> WHILE head . body
    (77) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 170

    body                           shift and go to state 178

state 137

    (80) for -> FOR OPENPAREN . ID TWODOTS expression CLOSEPAREN body

    ID              shift and go to state 179


state 138

    (95) graphfig -> graphfig1 expression . SEMICOLON

    SEMICOLON       shift and go to state 180


state 139

    (112) graphview -> graphview1 SEMICOLON .

    ID              reduce using rule 112 (graphview -> graphview1 SEMICOLON .)
    IF              reduce using rule 112 (graphview -> graphview1 SEMICOLON .)
    PRINT           reduce using rule 112 (graphview -> graphview1 SEMICOLON .)
    READ            reduce using rule 112 (graphview -> graphview1 SEMICOLON .)
    REPEAT          reduce using rule 112 (graphview -> graphview1 SEMICOLON .)
    RETURN          reduce using rule 112 (graphview -> graphview1 SEMICOLON .)
    WHILE           reduce using rule 112 (graphview -> graphview1 SEMICOLON .)
    FOR             reduce using rule 112 (graphview -> graphview1 SEMICOLON .)
    CIRCLE          reduce using rule 112 (graphview -> graphview1 SEMICOLON .)
    SQUARE          reduce using rule 112 (graphview -> graphview1 SEMICOLON .)
    TRIANGLE        reduce using rule 112 (graphview -> graphview1 SEMICOLON .)
    RECTANGLE       reduce using rule 112 (graphview -> graphview1 SEMICOLON .)
    HIDE_STAR       reduce using rule 112 (graphview -> graphview1 SEMICOLON .)
    SHOW_STAR       reduce using rule 112 (graphview -> graphview1 SEMICOLON .)
    HAND_DOWN       reduce using rule 112 (graphview -> graphview1 SEMICOLON .)
    HAND_UP         reduce using rule 112 (graphview -> graphview1 SEMICOLON .)
    SETXY           reduce using rule 112 (graphview -> graphview1 SEMICOLON .)
    COLOR_STAR      reduce using rule 112 (graphview -> graphview1 SEMICOLON .)
    SIZE_STAR       reduce using rule 112 (graphview -> graphview1 SEMICOLON .)
    GO              reduce using rule 112 (graphview -> graphview1 SEMICOLON .)
    LEFT            reduce using rule 112 (graphview -> graphview1 SEMICOLON .)
    RIGHT           reduce using rule 112 (graphview -> graphview1 SEMICOLON .)
    BACK            reduce using rule 112 (graphview -> graphview1 SEMICOLON .)
    ARC             reduce using rule 112 (graphview -> graphview1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 112 (graphview -> graphview1 SEMICOLON .)


state 140

    (100) graphmove -> graphmove1 SEMICOLON .

    ID              reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)
    IF              reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)
    PRINT           reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)
    READ            reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)
    REPEAT          reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)
    RETURN          reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)
    WHILE           reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)
    FOR             reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)
    CIRCLE          reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)
    SQUARE          reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)
    TRIANGLE        reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)
    RECTANGLE       reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)
    HIDE_STAR       reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)
    SHOW_STAR       reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)
    HAND_DOWN       reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)
    HAND_UP         reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)
    SETXY           reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)
    COLOR_STAR      reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)
    SIZE_STAR       reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)
    GO              reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)
    LEFT            reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)
    RIGHT           reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)
    BACK            reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)
    ARC             reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 100 (graphmove -> graphmove1 SEMICOLON .)


state 141

    (98) graphfig1 -> TRIANGLE expression .

    ID              reduce using rule 98 (graphfig1 -> TRIANGLE expression .)
    CTEINT          reduce using rule 98 (graphfig1 -> TRIANGLE expression .)
    CTEFLOAT        reduce using rule 98 (graphfig1 -> TRIANGLE expression .)
    CTECHAR         reduce using rule 98 (graphfig1 -> TRIANGLE expression .)
    OPENPAREN       reduce using rule 98 (graphfig1 -> TRIANGLE expression .)
    ADDITION        reduce using rule 98 (graphfig1 -> TRIANGLE expression .)
    SUBSTRACTION    reduce using rule 98 (graphfig1 -> TRIANGLE expression .)
    SEMICOLON       reduce using rule 98 (graphfig1 -> TRIANGLE expression .)


state 142

    (99) graphfig1 -> RECTANGLE expression .

    ID              reduce using rule 99 (graphfig1 -> RECTANGLE expression .)
    CTEINT          reduce using rule 99 (graphfig1 -> RECTANGLE expression .)
    CTEFLOAT        reduce using rule 99 (graphfig1 -> RECTANGLE expression .)
    CTECHAR         reduce using rule 99 (graphfig1 -> RECTANGLE expression .)
    OPENPAREN       reduce using rule 99 (graphfig1 -> RECTANGLE expression .)
    ADDITION        reduce using rule 99 (graphfig1 -> RECTANGLE expression .)
    SUBSTRACTION    reduce using rule 99 (graphfig1 -> RECTANGLE expression .)
    SEMICOLON       reduce using rule 99 (graphfig1 -> RECTANGLE expression .)


state 143

    (115) graphview1 -> graphview2 expression .

    SEMICOLON       reduce using rule 115 (graphview1 -> graphview2 expression .)


state 144

    (103) graphmove1 -> graphmove2 expression .

    SEMICOLON       reduce using rule 103 (graphmove1 -> graphmove2 expression .)


state 145

    (116) graphview2 -> SETXY expression .

    ID              reduce using rule 116 (graphview2 -> SETXY expression .)
    CTEINT          reduce using rule 116 (graphview2 -> SETXY expression .)
    CTEFLOAT        reduce using rule 116 (graphview2 -> SETXY expression .)
    CTECHAR         reduce using rule 116 (graphview2 -> SETXY expression .)
    OPENPAREN       reduce using rule 116 (graphview2 -> SETXY expression .)
    ADDITION        reduce using rule 116 (graphview2 -> SETXY expression .)
    SUBSTRACTION    reduce using rule 116 (graphview2 -> SETXY expression .)
    SEMICOLON       reduce using rule 116 (graphview2 -> SETXY expression .)


state 146

    (108) graphmove2 -> ARC expression .

    ID              reduce using rule 108 (graphmove2 -> ARC expression .)
    CTEINT          reduce using rule 108 (graphmove2 -> ARC expression .)
    CTEFLOAT        reduce using rule 108 (graphmove2 -> ARC expression .)
    CTECHAR         reduce using rule 108 (graphmove2 -> ARC expression .)
    OPENPAREN       reduce using rule 108 (graphmove2 -> ARC expression .)
    ADDITION        reduce using rule 108 (graphmove2 -> ARC expression .)
    SUBSTRACTION    reduce using rule 108 (graphmove2 -> ARC expression .)
    SEMICOLON       reduce using rule 108 (graphmove2 -> ARC expression .)


state 147

    (83) function -> FUN function1 ID function2 OPENBRACES vars . function4 CLOSEBRACES
    (90) function4 -> . stmt function4
    (91) function4 -> . empty
    (11) stmt -> . assignment
    (12) stmt -> . condition
    (13) stmt -> . print
    (14) stmt -> . loop
    (15) stmt -> . read
    (16) stmt -> . graphstmt
    (17) stmt -> . graphr
    (18) stmt -> . funCall
    (19) stmt -> . return
    (133) empty -> .
    (36) assignment -> . ID assignment1 EQUALS assignment3 SEMICOLON
    (70) condition -> . IF head body condition1
    (31) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (9) loop -> . while
    (10) loop -> . for
    (32) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (92) graphstmt -> . graphfig
    (93) graphstmt -> . graphview
    (94) graphstmt -> . graphmove
    (109) graphr -> . REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES
    (82) funCall -> . ID OPENPAREN expression CLOSEPAREN SEMICOLON
    (59) return -> . RETURN return1 SEMICOLON
    (81) while -> . WHILE head body
    (80) for -> . FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body
    (95) graphfig -> . graphfig1 expression SEMICOLON
    (112) graphview -> . graphview1 SEMICOLON
    (100) graphmove -> . graphmove1 SEMICOLON
    (96) graphfig1 -> . CIRCLE
    (97) graphfig1 -> . SQUARE
    (98) graphfig1 -> . TRIANGLE expression
    (99) graphfig1 -> . RECTANGLE expression
    (113) graphview1 -> . HIDE_STAR
    (114) graphview1 -> . SHOW_STAR
    (115) graphview1 -> . graphview2 expression
    (101) graphmove1 -> . HAND_DOWN
    (102) graphmove1 -> . HAND_UP
    (103) graphmove1 -> . graphmove2 expression
    (116) graphview2 -> . SETXY expression
    (117) graphview2 -> . COLOR_STAR
    (118) graphview2 -> . SIZE_STAR
    (104) graphmove2 -> . GO
    (105) graphmove2 -> . LEFT
    (106) graphmove2 -> . RIGHT
    (107) graphmove2 -> . BACK
    (108) graphmove2 -> . ARC expression

    CLOSEBRACES     reduce using rule 133 (empty -> .)
    ID              shift and go to state 66
    IF              shift and go to state 67
    PRINT           shift and go to state 68
    READ            shift and go to state 71
    REPEAT          shift and go to state 75
    RETURN          shift and go to state 76
    WHILE           shift and go to state 77
    FOR             shift and go to state 78
    CIRCLE          shift and go to state 82
    SQUARE          shift and go to state 83
    TRIANGLE        shift and go to state 84
    RECTANGLE       shift and go to state 85
    HIDE_STAR       shift and go to state 86
    SHOW_STAR       shift and go to state 87
    HAND_DOWN       shift and go to state 89
    HAND_UP         shift and go to state 90
    SETXY           shift and go to state 92
    COLOR_STAR      shift and go to state 93
    SIZE_STAR       shift and go to state 94
    GO              shift and go to state 95
    LEFT            shift and go to state 96
    RIGHT           shift and go to state 97
    BACK            shift and go to state 98
    ARC             shift and go to state 99

    function4                      shift and go to state 181
    stmt                           shift and go to state 182
    empty                          shift and go to state 183
    assignment                     shift and go to state 57
    condition                      shift and go to state 58
    print                          shift and go to state 59
    loop                           shift and go to state 60
    read                           shift and go to state 61
    graphstmt                      shift and go to state 62
    graphr                         shift and go to state 63
    funCall                        shift and go to state 64
    return                         shift and go to state 65
    while                          shift and go to state 69
    for                            shift and go to state 70
    graphfig                       shift and go to state 72
    graphview                      shift and go to state 73
    graphmove                      shift and go to state 74
    graphfig1                      shift and go to state 79
    graphview1                     shift and go to state 80
    graphmove1                     shift and go to state 81
    graphview2                     shift and go to state 88
    graphmove2                     shift and go to state 91

state 148

    (86) function2 -> OPENPAREN function3 CLOSEPAREN .

    OPENBRACES      reduce using rule 86 (function2 -> OPENPAREN function3 CLOSEPAREN .)


state 149

    (88) function3 -> function3 COMMA .

    CLOSEPAREN      reduce using rule 88 (function3 -> function3 COMMA .)
    COMMA           reduce using rule 88 (function3 -> function3 COMMA .)


state 150

    (87) function3 -> type ID .

    CLOSEPAREN      reduce using rule 87 (function3 -> type ID .)
    COMMA           reduce using rule 87 (function3 -> type ID .)


state 151

    (44) vcte -> ID vcte1 vcte2 .

    COMMA           reduce using rule 44 (vcte -> ID vcte1 vcte2 .)
    SEMICOLON       reduce using rule 44 (vcte -> ID vcte1 vcte2 .)
    MULTIPLICATION  reduce using rule 44 (vcte -> ID vcte1 vcte2 .)
    DIVISION        reduce using rule 44 (vcte -> ID vcte1 vcte2 .)
    ADDITION        reduce using rule 44 (vcte -> ID vcte1 vcte2 .)
    SUBSTRACTION    reduce using rule 44 (vcte -> ID vcte1 vcte2 .)
    GREATER         reduce using rule 44 (vcte -> ID vcte1 vcte2 .)
    LESS            reduce using rule 44 (vcte -> ID vcte1 vcte2 .)
    NOTEQUAL        reduce using rule 44 (vcte -> ID vcte1 vcte2 .)
    ISEQUAL         reduce using rule 44 (vcte -> ID vcte1 vcte2 .)
    OPENBRACES      reduce using rule 44 (vcte -> ID vcte1 vcte2 .)
    ID              reduce using rule 44 (vcte -> ID vcte1 vcte2 .)
    CTEINT          reduce using rule 44 (vcte -> ID vcte1 vcte2 .)
    CTEFLOAT        reduce using rule 44 (vcte -> ID vcte1 vcte2 .)
    CTECHAR         reduce using rule 44 (vcte -> ID vcte1 vcte2 .)
    OPENPAREN       reduce using rule 44 (vcte -> ID vcte1 vcte2 .)
    CLOSEBRACKET    reduce using rule 44 (vcte -> ID vcte1 vcte2 .)
    CLOSEPAREN      reduce using rule 44 (vcte -> ID vcte1 vcte2 .)
    OR              reduce using rule 44 (vcte -> ID vcte1 vcte2 .)
    AND             reduce using rule 44 (vcte -> ID vcte1 vcte2 .)


state 152

    (47) vcte2 -> OPENPAREN . expression CLOSEPAREN vcte4
    (56) expression -> . vcte
    (57) expression -> . operation
    (58) expression -> . empty
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (133) empty -> .
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

    ID              shift and go to state 39
    CLOSEPAREN      reduce using rule 133 (empty -> .)
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

    expression                     shift and go to state 184
    vcte                           shift and go to state 35
    operation                      shift and go to state 36
    empty                          shift and go to state 37
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 153

    (48) vcte2 -> empty .

    MULTIPLICATION  reduce using rule 48 (vcte2 -> empty .)
    DIVISION        reduce using rule 48 (vcte2 -> empty .)
    ADDITION        reduce using rule 48 (vcte2 -> empty .)
    SUBSTRACTION    reduce using rule 48 (vcte2 -> empty .)
    COMMA           reduce using rule 48 (vcte2 -> empty .)
    SEMICOLON       reduce using rule 48 (vcte2 -> empty .)
    GREATER         reduce using rule 48 (vcte2 -> empty .)
    LESS            reduce using rule 48 (vcte2 -> empty .)
    NOTEQUAL        reduce using rule 48 (vcte2 -> empty .)
    ISEQUAL         reduce using rule 48 (vcte2 -> empty .)
    OPENBRACES      reduce using rule 48 (vcte2 -> empty .)
    ID              reduce using rule 48 (vcte2 -> empty .)
    CTEINT          reduce using rule 48 (vcte2 -> empty .)
    CTEFLOAT        reduce using rule 48 (vcte2 -> empty .)
    CTECHAR         reduce using rule 48 (vcte2 -> empty .)
    OPENPAREN       reduce using rule 48 (vcte2 -> empty .)
    CLOSEBRACKET    reduce using rule 48 (vcte2 -> empty .)
    CLOSEPAREN      reduce using rule 48 (vcte2 -> empty .)
    OR              reduce using rule 48 (vcte2 -> empty .)
    AND             reduce using rule 48 (vcte2 -> empty .)


state 154

    (45) vcte1 -> OPENBRACKET expression . CLOSEBRACKET vcte3

    CLOSEBRACKET    shift and go to state 185


state 155

    (126) factor1 -> OPENPAREN compare CLOSEPAREN .

    MULTIPLICATION  reduce using rule 126 (factor1 -> OPENPAREN compare CLOSEPAREN .)
    DIVISION        reduce using rule 126 (factor1 -> OPENPAREN compare CLOSEPAREN .)
    ADDITION        reduce using rule 126 (factor1 -> OPENPAREN compare CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 126 (factor1 -> OPENPAREN compare CLOSEPAREN .)
    COMMA           reduce using rule 126 (factor1 -> OPENPAREN compare CLOSEPAREN .)
    SEMICOLON       reduce using rule 126 (factor1 -> OPENPAREN compare CLOSEPAREN .)
    GREATER         reduce using rule 126 (factor1 -> OPENPAREN compare CLOSEPAREN .)
    LESS            reduce using rule 126 (factor1 -> OPENPAREN compare CLOSEPAREN .)
    NOTEQUAL        reduce using rule 126 (factor1 -> OPENPAREN compare CLOSEPAREN .)
    ISEQUAL         reduce using rule 126 (factor1 -> OPENPAREN compare CLOSEPAREN .)
    OPENBRACES      reduce using rule 126 (factor1 -> OPENPAREN compare CLOSEPAREN .)
    ID              reduce using rule 126 (factor1 -> OPENPAREN compare CLOSEPAREN .)
    CTEINT          reduce using rule 126 (factor1 -> OPENPAREN compare CLOSEPAREN .)
    CTEFLOAT        reduce using rule 126 (factor1 -> OPENPAREN compare CLOSEPAREN .)
    CTECHAR         reduce using rule 126 (factor1 -> OPENPAREN compare CLOSEPAREN .)
    OPENPAREN       reduce using rule 126 (factor1 -> OPENPAREN compare CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 126 (factor1 -> OPENPAREN compare CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 126 (factor1 -> OPENPAREN compare CLOSEPAREN .)
    OR              reduce using rule 126 (factor1 -> OPENPAREN compare CLOSEPAREN .)
    AND             reduce using rule 126 (factor1 -> OPENPAREN compare CLOSEPAREN .)


state 156

    (62) compare -> expression loper . expression
    (56) expression -> . vcte
    (57) expression -> . operation
    (58) expression -> . empty
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (133) empty -> .
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

    ID              shift and go to state 39
    CLOSEPAREN      reduce using rule 133 (empty -> .)
    OR              reduce using rule 133 (empty -> .)
    AND             reduce using rule 133 (empty -> .)
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

    expression                     shift and go to state 186
    vcte                           shift and go to state 35
    operation                      shift and go to state 36
    empty                          shift and go to state 37
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 157

    (63) loper -> GREATER .

    ID              reduce using rule 63 (loper -> GREATER .)
    CTEINT          reduce using rule 63 (loper -> GREATER .)
    CTEFLOAT        reduce using rule 63 (loper -> GREATER .)
    CTECHAR         reduce using rule 63 (loper -> GREATER .)
    OPENPAREN       reduce using rule 63 (loper -> GREATER .)
    ADDITION        reduce using rule 63 (loper -> GREATER .)
    SUBSTRACTION    reduce using rule 63 (loper -> GREATER .)
    CLOSEPAREN      reduce using rule 63 (loper -> GREATER .)
    OR              reduce using rule 63 (loper -> GREATER .)
    AND             reduce using rule 63 (loper -> GREATER .)


state 158

    (64) loper -> LESS .

    ID              reduce using rule 64 (loper -> LESS .)
    CTEINT          reduce using rule 64 (loper -> LESS .)
    CTEFLOAT        reduce using rule 64 (loper -> LESS .)
    CTECHAR         reduce using rule 64 (loper -> LESS .)
    OPENPAREN       reduce using rule 64 (loper -> LESS .)
    ADDITION        reduce using rule 64 (loper -> LESS .)
    SUBSTRACTION    reduce using rule 64 (loper -> LESS .)
    CLOSEPAREN      reduce using rule 64 (loper -> LESS .)
    OR              reduce using rule 64 (loper -> LESS .)
    AND             reduce using rule 64 (loper -> LESS .)


state 159

    (65) loper -> NOTEQUAL .

    ID              reduce using rule 65 (loper -> NOTEQUAL .)
    CTEINT          reduce using rule 65 (loper -> NOTEQUAL .)
    CTEFLOAT        reduce using rule 65 (loper -> NOTEQUAL .)
    CTECHAR         reduce using rule 65 (loper -> NOTEQUAL .)
    OPENPAREN       reduce using rule 65 (loper -> NOTEQUAL .)
    ADDITION        reduce using rule 65 (loper -> NOTEQUAL .)
    SUBSTRACTION    reduce using rule 65 (loper -> NOTEQUAL .)
    CLOSEPAREN      reduce using rule 65 (loper -> NOTEQUAL .)
    OR              reduce using rule 65 (loper -> NOTEQUAL .)
    AND             reduce using rule 65 (loper -> NOTEQUAL .)


state 160

    (66) loper -> ISEQUAL .

    ID              reduce using rule 66 (loper -> ISEQUAL .)
    CTEINT          reduce using rule 66 (loper -> ISEQUAL .)
    CTEFLOAT        reduce using rule 66 (loper -> ISEQUAL .)
    CTECHAR         reduce using rule 66 (loper -> ISEQUAL .)
    OPENPAREN       reduce using rule 66 (loper -> ISEQUAL .)
    ADDITION        reduce using rule 66 (loper -> ISEQUAL .)
    SUBSTRACTION    reduce using rule 66 (loper -> ISEQUAL .)
    CLOSEPAREN      reduce using rule 66 (loper -> ISEQUAL .)
    OR              reduce using rule 66 (loper -> ISEQUAL .)
    AND             reduce using rule 66 (loper -> ISEQUAL .)


state 161

    (26) vars3 -> OPENBRACKET . CTEINT CLOSEBRACKET

    CTEINT          shift and go to state 187


state 162

    (22) vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .

    SEMICOLON       reduce using rule 22 (vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .)
    COMMA           reduce using rule 22 (vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .)


state 163

    (27) vars3 -> empty .

    SEMICOLON       reduce using rule 27 (vars3 -> empty .)
    COMMA           reduce using rule 27 (vars3 -> empty .)


state 164

    (24) vars2 -> COMMA ID vars1 . vars2
    (24) vars2 -> . COMMA ID vars1 vars2
    (25) vars2 -> . empty
    (133) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 53
    SEMICOLON       reduce using rule 133 (empty -> .)

  ! COMMA           [ reduce using rule 133 (empty -> .) ]

    vars2                          shift and go to state 188
    empty                          shift and go to state 51

state 165

    (36) assignment -> ID assignment1 EQUALS . assignment3 SEMICOLON
    (41) assignment3 -> . expression
    (42) assignment3 -> . read
    (56) expression -> . vcte
    (57) expression -> . operation
    (58) expression -> . empty
    (32) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (133) empty -> .
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

    READ            shift and go to state 71
    ID              shift and go to state 39
    SEMICOLON       reduce using rule 133 (empty -> .)
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

    assignment3                    shift and go to state 189
    expression                     shift and go to state 190
    read                           shift and go to state 191
    vcte                           shift and go to state 35
    operation                      shift and go to state 36
    empty                          shift and go to state 37
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 166

    (82) funCall -> ID OPENPAREN expression . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 192


state 167

    (38) assignment1 -> assignment2 assignment1 .

    EQUALS          reduce using rule 38 (assignment1 -> assignment2 assignment1 .)


state 168

    (40) assignment2 -> OPENBRACKET expression . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 193


state 169

    (70) condition -> IF head body . condition1
    (71) condition1 -> . ELSEIF head body condition1
    (72) condition1 -> . ELSE body
    (73) condition1 -> . empty
    (133) empty -> .

    ELSEIF          shift and go to state 195
    ELSE            shift and go to state 196
    ID              reduce using rule 133 (empty -> .)
    IF              reduce using rule 133 (empty -> .)
    PRINT           reduce using rule 133 (empty -> .)
    READ            reduce using rule 133 (empty -> .)
    REPEAT          reduce using rule 133 (empty -> .)
    RETURN          reduce using rule 133 (empty -> .)
    WHILE           reduce using rule 133 (empty -> .)
    FOR             reduce using rule 133 (empty -> .)
    CIRCLE          reduce using rule 133 (empty -> .)
    SQUARE          reduce using rule 133 (empty -> .)
    TRIANGLE        reduce using rule 133 (empty -> .)
    RECTANGLE       reduce using rule 133 (empty -> .)
    HIDE_STAR       reduce using rule 133 (empty -> .)
    SHOW_STAR       reduce using rule 133 (empty -> .)
    HAND_DOWN       reduce using rule 133 (empty -> .)
    HAND_UP         reduce using rule 133 (empty -> .)
    SETXY           reduce using rule 133 (empty -> .)
    COLOR_STAR      reduce using rule 133 (empty -> .)
    SIZE_STAR       reduce using rule 133 (empty -> .)
    GO              reduce using rule 133 (empty -> .)
    LEFT            reduce using rule 133 (empty -> .)
    RIGHT           reduce using rule 133 (empty -> .)
    BACK            reduce using rule 133 (empty -> .)
    ARC             reduce using rule 133 (empty -> .)
    CLOSEBRACES     reduce using rule 133 (empty -> .)

    condition1                     shift and go to state 194
    empty                          shift and go to state 197

state 170

    (77) body -> OPENBRACES . body1 CLOSEBRACES
    (78) body1 -> . stmt body1
    (79) body1 -> . empty
    (11) stmt -> . assignment
    (12) stmt -> . condition
    (13) stmt -> . print
    (14) stmt -> . loop
    (15) stmt -> . read
    (16) stmt -> . graphstmt
    (17) stmt -> . graphr
    (18) stmt -> . funCall
    (19) stmt -> . return
    (133) empty -> .
    (36) assignment -> . ID assignment1 EQUALS assignment3 SEMICOLON
    (70) condition -> . IF head body condition1
    (31) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (9) loop -> . while
    (10) loop -> . for
    (32) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (92) graphstmt -> . graphfig
    (93) graphstmt -> . graphview
    (94) graphstmt -> . graphmove
    (109) graphr -> . REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES
    (82) funCall -> . ID OPENPAREN expression CLOSEPAREN SEMICOLON
    (59) return -> . RETURN return1 SEMICOLON
    (81) while -> . WHILE head body
    (80) for -> . FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body
    (95) graphfig -> . graphfig1 expression SEMICOLON
    (112) graphview -> . graphview1 SEMICOLON
    (100) graphmove -> . graphmove1 SEMICOLON
    (96) graphfig1 -> . CIRCLE
    (97) graphfig1 -> . SQUARE
    (98) graphfig1 -> . TRIANGLE expression
    (99) graphfig1 -> . RECTANGLE expression
    (113) graphview1 -> . HIDE_STAR
    (114) graphview1 -> . SHOW_STAR
    (115) graphview1 -> . graphview2 expression
    (101) graphmove1 -> . HAND_DOWN
    (102) graphmove1 -> . HAND_UP
    (103) graphmove1 -> . graphmove2 expression
    (116) graphview2 -> . SETXY expression
    (117) graphview2 -> . COLOR_STAR
    (118) graphview2 -> . SIZE_STAR
    (104) graphmove2 -> . GO
    (105) graphmove2 -> . LEFT
    (106) graphmove2 -> . RIGHT
    (107) graphmove2 -> . BACK
    (108) graphmove2 -> . ARC expression

    CLOSEBRACES     reduce using rule 133 (empty -> .)
    ID              shift and go to state 66
    IF              shift and go to state 67
    PRINT           shift and go to state 68
    READ            shift and go to state 71
    REPEAT          shift and go to state 75
    RETURN          shift and go to state 76
    WHILE           shift and go to state 77
    FOR             shift and go to state 78
    CIRCLE          shift and go to state 82
    SQUARE          shift and go to state 83
    TRIANGLE        shift and go to state 84
    RECTANGLE       shift and go to state 85
    HIDE_STAR       shift and go to state 86
    SHOW_STAR       shift and go to state 87
    HAND_DOWN       shift and go to state 89
    HAND_UP         shift and go to state 90
    SETXY           shift and go to state 92
    COLOR_STAR      shift and go to state 93
    SIZE_STAR       shift and go to state 94
    GO              shift and go to state 95
    LEFT            shift and go to state 96
    RIGHT           shift and go to state 97
    BACK            shift and go to state 98
    ARC             shift and go to state 99

    body1                          shift and go to state 198
    stmt                           shift and go to state 199
    empty                          shift and go to state 200
    assignment                     shift and go to state 57
    condition                      shift and go to state 58
    print                          shift and go to state 59
    loop                           shift and go to state 60
    read                           shift and go to state 61
    graphstmt                      shift and go to state 62
    graphr                         shift and go to state 63
    funCall                        shift and go to state 64
    return                         shift and go to state 65
    while                          shift and go to state 69
    for                            shift and go to state 70
    graphfig                       shift and go to state 72
    graphview                      shift and go to state 73
    graphmove                      shift and go to state 74
    graphfig1                      shift and go to state 79
    graphview1                     shift and go to state 80
    graphmove1                     shift and go to state 81
    graphview2                     shift and go to state 88
    graphmove2                     shift and go to state 91

state 171

    (74) head -> OPENPAREN head1 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 201


state 172

    (75) head1 -> compare .
    (67) logical -> compare . logical1 compare
    (68) logical1 -> . OR
    (69) logical1 -> . AND

    CLOSEPAREN      reduce using rule 75 (head1 -> compare .)
    OR              shift and go to state 203
    AND             shift and go to state 204

    logical1                       shift and go to state 202

state 173

    (76) head1 -> logical .

    CLOSEPAREN      reduce using rule 76 (head1 -> logical .)


state 174

    (31) print -> PRINT OPENPAREN expression . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 205


state 175

    (32) read -> READ OPENPAREN ID . read1 CLOSEPAREN SEMICOLON
    (33) read1 -> . OPENBRACKET expression CLOSEBRACKET OPENBRACKET expression CLOSEBRACKET
    (34) read1 -> . OPENBRACKET expression CLOSEBRACKET
    (35) read1 -> . empty
    (133) empty -> .

    OPENBRACKET     shift and go to state 207
    CLOSEPAREN      reduce using rule 133 (empty -> .)

    read1                          shift and go to state 206
    empty                          shift and go to state 208

state 176

    (109) graphr -> REPEAT expression OPENBRACES . graphstmt graphr1 CLOSEBRACES
    (92) graphstmt -> . graphfig
    (93) graphstmt -> . graphview
    (94) graphstmt -> . graphmove
    (95) graphfig -> . graphfig1 expression SEMICOLON
    (112) graphview -> . graphview1 SEMICOLON
    (100) graphmove -> . graphmove1 SEMICOLON
    (96) graphfig1 -> . CIRCLE
    (97) graphfig1 -> . SQUARE
    (98) graphfig1 -> . TRIANGLE expression
    (99) graphfig1 -> . RECTANGLE expression
    (113) graphview1 -> . HIDE_STAR
    (114) graphview1 -> . SHOW_STAR
    (115) graphview1 -> . graphview2 expression
    (101) graphmove1 -> . HAND_DOWN
    (102) graphmove1 -> . HAND_UP
    (103) graphmove1 -> . graphmove2 expression
    (116) graphview2 -> . SETXY expression
    (117) graphview2 -> . COLOR_STAR
    (118) graphview2 -> . SIZE_STAR
    (104) graphmove2 -> . GO
    (105) graphmove2 -> . LEFT
    (106) graphmove2 -> . RIGHT
    (107) graphmove2 -> . BACK
    (108) graphmove2 -> . ARC expression

    CIRCLE          shift and go to state 82
    SQUARE          shift and go to state 83
    TRIANGLE        shift and go to state 84
    RECTANGLE       shift and go to state 85
    HIDE_STAR       shift and go to state 86
    SHOW_STAR       shift and go to state 87
    HAND_DOWN       shift and go to state 89
    HAND_UP         shift and go to state 90
    SETXY           shift and go to state 92
    COLOR_STAR      shift and go to state 93
    SIZE_STAR       shift and go to state 94
    GO              shift and go to state 95
    LEFT            shift and go to state 96
    RIGHT           shift and go to state 97
    BACK            shift and go to state 98
    ARC             shift and go to state 99

    graphstmt                      shift and go to state 209
    graphfig                       shift and go to state 72
    graphview                      shift and go to state 73
    graphmove                      shift and go to state 74
    graphfig1                      shift and go to state 79
    graphview1                     shift and go to state 80
    graphmove1                     shift and go to state 81
    graphview2                     shift and go to state 88
    graphmove2                     shift and go to state 91

state 177

    (59) return -> RETURN return1 SEMICOLON .

    ID              reduce using rule 59 (return -> RETURN return1 SEMICOLON .)
    IF              reduce using rule 59 (return -> RETURN return1 SEMICOLON .)
    PRINT           reduce using rule 59 (return -> RETURN return1 SEMICOLON .)
    READ            reduce using rule 59 (return -> RETURN return1 SEMICOLON .)
    REPEAT          reduce using rule 59 (return -> RETURN return1 SEMICOLON .)
    RETURN          reduce using rule 59 (return -> RETURN return1 SEMICOLON .)
    WHILE           reduce using rule 59 (return -> RETURN return1 SEMICOLON .)
    FOR             reduce using rule 59 (return -> RETURN return1 SEMICOLON .)
    CIRCLE          reduce using rule 59 (return -> RETURN return1 SEMICOLON .)
    SQUARE          reduce using rule 59 (return -> RETURN return1 SEMICOLON .)
    TRIANGLE        reduce using rule 59 (return -> RETURN return1 SEMICOLON .)
    RECTANGLE       reduce using rule 59 (return -> RETURN return1 SEMICOLON .)
    HIDE_STAR       reduce using rule 59 (return -> RETURN return1 SEMICOLON .)
    SHOW_STAR       reduce using rule 59 (return -> RETURN return1 SEMICOLON .)
    HAND_DOWN       reduce using rule 59 (return -> RETURN return1 SEMICOLON .)
    HAND_UP         reduce using rule 59 (return -> RETURN return1 SEMICOLON .)
    SETXY           reduce using rule 59 (return -> RETURN return1 SEMICOLON .)
    COLOR_STAR      reduce using rule 59 (return -> RETURN return1 SEMICOLON .)
    SIZE_STAR       reduce using rule 59 (return -> RETURN return1 SEMICOLON .)
    GO              reduce using rule 59 (return -> RETURN return1 SEMICOLON .)
    LEFT            reduce using rule 59 (return -> RETURN return1 SEMICOLON .)
    RIGHT           reduce using rule 59 (return -> RETURN return1 SEMICOLON .)
    BACK            reduce using rule 59 (return -> RETURN return1 SEMICOLON .)
    ARC             reduce using rule 59 (return -> RETURN return1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 59 (return -> RETURN return1 SEMICOLON .)


state 178

    (81) while -> WHILE head body .

    ID              reduce using rule 81 (while -> WHILE head body .)
    IF              reduce using rule 81 (while -> WHILE head body .)
    PRINT           reduce using rule 81 (while -> WHILE head body .)
    READ            reduce using rule 81 (while -> WHILE head body .)
    REPEAT          reduce using rule 81 (while -> WHILE head body .)
    RETURN          reduce using rule 81 (while -> WHILE head body .)
    WHILE           reduce using rule 81 (while -> WHILE head body .)
    FOR             reduce using rule 81 (while -> WHILE head body .)
    CIRCLE          reduce using rule 81 (while -> WHILE head body .)
    SQUARE          reduce using rule 81 (while -> WHILE head body .)
    TRIANGLE        reduce using rule 81 (while -> WHILE head body .)
    RECTANGLE       reduce using rule 81 (while -> WHILE head body .)
    HIDE_STAR       reduce using rule 81 (while -> WHILE head body .)
    SHOW_STAR       reduce using rule 81 (while -> WHILE head body .)
    HAND_DOWN       reduce using rule 81 (while -> WHILE head body .)
    HAND_UP         reduce using rule 81 (while -> WHILE head body .)
    SETXY           reduce using rule 81 (while -> WHILE head body .)
    COLOR_STAR      reduce using rule 81 (while -> WHILE head body .)
    SIZE_STAR       reduce using rule 81 (while -> WHILE head body .)
    GO              reduce using rule 81 (while -> WHILE head body .)
    LEFT            reduce using rule 81 (while -> WHILE head body .)
    RIGHT           reduce using rule 81 (while -> WHILE head body .)
    BACK            reduce using rule 81 (while -> WHILE head body .)
    ARC             reduce using rule 81 (while -> WHILE head body .)
    CLOSEBRACES     reduce using rule 81 (while -> WHILE head body .)


state 179

    (80) for -> FOR OPENPAREN ID . TWODOTS expression CLOSEPAREN body

    TWODOTS         shift and go to state 210


state 180

    (95) graphfig -> graphfig1 expression SEMICOLON .

    ID              reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)
    IF              reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)
    PRINT           reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)
    READ            reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)
    REPEAT          reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)
    RETURN          reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)
    WHILE           reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)
    FOR             reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)
    CIRCLE          reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)
    SQUARE          reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)
    TRIANGLE        reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)
    RECTANGLE       reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)
    HIDE_STAR       reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)
    SHOW_STAR       reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)
    HAND_DOWN       reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)
    HAND_UP         reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)
    SETXY           reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)
    COLOR_STAR      reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)
    SIZE_STAR       reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)
    GO              reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)
    LEFT            reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)
    RIGHT           reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)
    BACK            reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)
    ARC             reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)
    CLOSEBRACES     reduce using rule 95 (graphfig -> graphfig1 expression SEMICOLON .)


state 181

    (83) function -> FUN function1 ID function2 OPENBRACES vars function4 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 211


state 182

    (90) function4 -> stmt . function4
    (90) function4 -> . stmt function4
    (91) function4 -> . empty
    (11) stmt -> . assignment
    (12) stmt -> . condition
    (13) stmt -> . print
    (14) stmt -> . loop
    (15) stmt -> . read
    (16) stmt -> . graphstmt
    (17) stmt -> . graphr
    (18) stmt -> . funCall
    (19) stmt -> . return
    (133) empty -> .
    (36) assignment -> . ID assignment1 EQUALS assignment3 SEMICOLON
    (70) condition -> . IF head body condition1
    (31) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (9) loop -> . while
    (10) loop -> . for
    (32) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (92) graphstmt -> . graphfig
    (93) graphstmt -> . graphview
    (94) graphstmt -> . graphmove
    (109) graphr -> . REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES
    (82) funCall -> . ID OPENPAREN expression CLOSEPAREN SEMICOLON
    (59) return -> . RETURN return1 SEMICOLON
    (81) while -> . WHILE head body
    (80) for -> . FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body
    (95) graphfig -> . graphfig1 expression SEMICOLON
    (112) graphview -> . graphview1 SEMICOLON
    (100) graphmove -> . graphmove1 SEMICOLON
    (96) graphfig1 -> . CIRCLE
    (97) graphfig1 -> . SQUARE
    (98) graphfig1 -> . TRIANGLE expression
    (99) graphfig1 -> . RECTANGLE expression
    (113) graphview1 -> . HIDE_STAR
    (114) graphview1 -> . SHOW_STAR
    (115) graphview1 -> . graphview2 expression
    (101) graphmove1 -> . HAND_DOWN
    (102) graphmove1 -> . HAND_UP
    (103) graphmove1 -> . graphmove2 expression
    (116) graphview2 -> . SETXY expression
    (117) graphview2 -> . COLOR_STAR
    (118) graphview2 -> . SIZE_STAR
    (104) graphmove2 -> . GO
    (105) graphmove2 -> . LEFT
    (106) graphmove2 -> . RIGHT
    (107) graphmove2 -> . BACK
    (108) graphmove2 -> . ARC expression

    CLOSEBRACES     reduce using rule 133 (empty -> .)
    ID              shift and go to state 66
    IF              shift and go to state 67
    PRINT           shift and go to state 68
    READ            shift and go to state 71
    REPEAT          shift and go to state 75
    RETURN          shift and go to state 76
    WHILE           shift and go to state 77
    FOR             shift and go to state 78
    CIRCLE          shift and go to state 82
    SQUARE          shift and go to state 83
    TRIANGLE        shift and go to state 84
    RECTANGLE       shift and go to state 85
    HIDE_STAR       shift and go to state 86
    SHOW_STAR       shift and go to state 87
    HAND_DOWN       shift and go to state 89
    HAND_UP         shift and go to state 90
    SETXY           shift and go to state 92
    COLOR_STAR      shift and go to state 93
    SIZE_STAR       shift and go to state 94
    GO              shift and go to state 95
    LEFT            shift and go to state 96
    RIGHT           shift and go to state 97
    BACK            shift and go to state 98
    ARC             shift and go to state 99

    stmt                           shift and go to state 182
    function4                      shift and go to state 212
    empty                          shift and go to state 183
    assignment                     shift and go to state 57
    condition                      shift and go to state 58
    print                          shift and go to state 59
    loop                           shift and go to state 60
    read                           shift and go to state 61
    graphstmt                      shift and go to state 62
    graphr                         shift and go to state 63
    funCall                        shift and go to state 64
    return                         shift and go to state 65
    while                          shift and go to state 69
    for                            shift and go to state 70
    graphfig                       shift and go to state 72
    graphview                      shift and go to state 73
    graphmove                      shift and go to state 74
    graphfig1                      shift and go to state 79
    graphview1                     shift and go to state 80
    graphmove1                     shift and go to state 81
    graphview2                     shift and go to state 88
    graphmove2                     shift and go to state 91

state 183

    (91) function4 -> empty .

    CLOSEBRACES     reduce using rule 91 (function4 -> empty .)


state 184

    (47) vcte2 -> OPENPAREN expression . CLOSEPAREN vcte4

    CLOSEPAREN      shift and go to state 213


state 185

    (45) vcte1 -> OPENBRACKET expression CLOSEBRACKET . vcte3
    (49) vcte3 -> . OPENBRACKET expression CLOSEBRACKET
    (50) vcte3 -> . empty
    (133) empty -> .

    OPENBRACKET     shift and go to state 214
    OPENPAREN       reduce using rule 133 (empty -> .)
    COMMA           reduce using rule 133 (empty -> .)
    SEMICOLON       reduce using rule 133 (empty -> .)
    MULTIPLICATION  reduce using rule 133 (empty -> .)
    DIVISION        reduce using rule 133 (empty -> .)
    ADDITION        reduce using rule 133 (empty -> .)
    SUBSTRACTION    reduce using rule 133 (empty -> .)
    GREATER         reduce using rule 133 (empty -> .)
    LESS            reduce using rule 133 (empty -> .)
    NOTEQUAL        reduce using rule 133 (empty -> .)
    ISEQUAL         reduce using rule 133 (empty -> .)
    OPENBRACES      reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    CTEINT          reduce using rule 133 (empty -> .)
    CTEFLOAT        reduce using rule 133 (empty -> .)
    CTECHAR         reduce using rule 133 (empty -> .)
    CLOSEBRACKET    reduce using rule 133 (empty -> .)
    CLOSEPAREN      reduce using rule 133 (empty -> .)
    OR              reduce using rule 133 (empty -> .)
    AND             reduce using rule 133 (empty -> .)

    vcte3                          shift and go to state 215
    empty                          shift and go to state 216

state 186

    (62) compare -> expression loper expression .

    CLOSEPAREN      reduce using rule 62 (compare -> expression loper expression .)
    OR              reduce using rule 62 (compare -> expression loper expression .)
    AND             reduce using rule 62 (compare -> expression loper expression .)


state 187

    (26) vars3 -> OPENBRACKET CTEINT . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 217


state 188

    (24) vars2 -> COMMA ID vars1 vars2 .

    COMMA           reduce using rule 24 (vars2 -> COMMA ID vars1 vars2 .)
    SEMICOLON       reduce using rule 24 (vars2 -> COMMA ID vars1 vars2 .)


state 189

    (36) assignment -> ID assignment1 EQUALS assignment3 . SEMICOLON

    SEMICOLON       shift and go to state 218


state 190

    (41) assignment3 -> expression .

    SEMICOLON       reduce using rule 41 (assignment3 -> expression .)


state 191

    (42) assignment3 -> read .

    SEMICOLON       reduce using rule 42 (assignment3 -> read .)


state 192

    (82) funCall -> ID OPENPAREN expression CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 219


state 193

    (40) assignment2 -> OPENBRACKET expression CLOSEBRACKET .

    OPENBRACKET     reduce using rule 40 (assignment2 -> OPENBRACKET expression CLOSEBRACKET .)
    EQUALS          reduce using rule 40 (assignment2 -> OPENBRACKET expression CLOSEBRACKET .)


state 194

    (70) condition -> IF head body condition1 .

    ID              reduce using rule 70 (condition -> IF head body condition1 .)
    IF              reduce using rule 70 (condition -> IF head body condition1 .)
    PRINT           reduce using rule 70 (condition -> IF head body condition1 .)
    READ            reduce using rule 70 (condition -> IF head body condition1 .)
    REPEAT          reduce using rule 70 (condition -> IF head body condition1 .)
    RETURN          reduce using rule 70 (condition -> IF head body condition1 .)
    WHILE           reduce using rule 70 (condition -> IF head body condition1 .)
    FOR             reduce using rule 70 (condition -> IF head body condition1 .)
    CIRCLE          reduce using rule 70 (condition -> IF head body condition1 .)
    SQUARE          reduce using rule 70 (condition -> IF head body condition1 .)
    TRIANGLE        reduce using rule 70 (condition -> IF head body condition1 .)
    RECTANGLE       reduce using rule 70 (condition -> IF head body condition1 .)
    HIDE_STAR       reduce using rule 70 (condition -> IF head body condition1 .)
    SHOW_STAR       reduce using rule 70 (condition -> IF head body condition1 .)
    HAND_DOWN       reduce using rule 70 (condition -> IF head body condition1 .)
    HAND_UP         reduce using rule 70 (condition -> IF head body condition1 .)
    SETXY           reduce using rule 70 (condition -> IF head body condition1 .)
    COLOR_STAR      reduce using rule 70 (condition -> IF head body condition1 .)
    SIZE_STAR       reduce using rule 70 (condition -> IF head body condition1 .)
    GO              reduce using rule 70 (condition -> IF head body condition1 .)
    LEFT            reduce using rule 70 (condition -> IF head body condition1 .)
    RIGHT           reduce using rule 70 (condition -> IF head body condition1 .)
    BACK            reduce using rule 70 (condition -> IF head body condition1 .)
    ARC             reduce using rule 70 (condition -> IF head body condition1 .)
    CLOSEBRACES     reduce using rule 70 (condition -> IF head body condition1 .)


state 195

    (71) condition1 -> ELSEIF . head body condition1
    (74) head -> . OPENPAREN head1 CLOSEPAREN

    OPENPAREN       shift and go to state 129

    head                           shift and go to state 220

state 196

    (72) condition1 -> ELSE . body
    (77) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 170

    body                           shift and go to state 221

state 197

    (73) condition1 -> empty .

    ID              reduce using rule 73 (condition1 -> empty .)
    IF              reduce using rule 73 (condition1 -> empty .)
    PRINT           reduce using rule 73 (condition1 -> empty .)
    READ            reduce using rule 73 (condition1 -> empty .)
    REPEAT          reduce using rule 73 (condition1 -> empty .)
    RETURN          reduce using rule 73 (condition1 -> empty .)
    WHILE           reduce using rule 73 (condition1 -> empty .)
    FOR             reduce using rule 73 (condition1 -> empty .)
    CIRCLE          reduce using rule 73 (condition1 -> empty .)
    SQUARE          reduce using rule 73 (condition1 -> empty .)
    TRIANGLE        reduce using rule 73 (condition1 -> empty .)
    RECTANGLE       reduce using rule 73 (condition1 -> empty .)
    HIDE_STAR       reduce using rule 73 (condition1 -> empty .)
    SHOW_STAR       reduce using rule 73 (condition1 -> empty .)
    HAND_DOWN       reduce using rule 73 (condition1 -> empty .)
    HAND_UP         reduce using rule 73 (condition1 -> empty .)
    SETXY           reduce using rule 73 (condition1 -> empty .)
    COLOR_STAR      reduce using rule 73 (condition1 -> empty .)
    SIZE_STAR       reduce using rule 73 (condition1 -> empty .)
    GO              reduce using rule 73 (condition1 -> empty .)
    LEFT            reduce using rule 73 (condition1 -> empty .)
    RIGHT           reduce using rule 73 (condition1 -> empty .)
    BACK            reduce using rule 73 (condition1 -> empty .)
    ARC             reduce using rule 73 (condition1 -> empty .)
    CLOSEBRACES     reduce using rule 73 (condition1 -> empty .)


state 198

    (77) body -> OPENBRACES body1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 222


state 199

    (78) body1 -> stmt . body1
    (78) body1 -> . stmt body1
    (79) body1 -> . empty
    (11) stmt -> . assignment
    (12) stmt -> . condition
    (13) stmt -> . print
    (14) stmt -> . loop
    (15) stmt -> . read
    (16) stmt -> . graphstmt
    (17) stmt -> . graphr
    (18) stmt -> . funCall
    (19) stmt -> . return
    (133) empty -> .
    (36) assignment -> . ID assignment1 EQUALS assignment3 SEMICOLON
    (70) condition -> . IF head body condition1
    (31) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (9) loop -> . while
    (10) loop -> . for
    (32) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (92) graphstmt -> . graphfig
    (93) graphstmt -> . graphview
    (94) graphstmt -> . graphmove
    (109) graphr -> . REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES
    (82) funCall -> . ID OPENPAREN expression CLOSEPAREN SEMICOLON
    (59) return -> . RETURN return1 SEMICOLON
    (81) while -> . WHILE head body
    (80) for -> . FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body
    (95) graphfig -> . graphfig1 expression SEMICOLON
    (112) graphview -> . graphview1 SEMICOLON
    (100) graphmove -> . graphmove1 SEMICOLON
    (96) graphfig1 -> . CIRCLE
    (97) graphfig1 -> . SQUARE
    (98) graphfig1 -> . TRIANGLE expression
    (99) graphfig1 -> . RECTANGLE expression
    (113) graphview1 -> . HIDE_STAR
    (114) graphview1 -> . SHOW_STAR
    (115) graphview1 -> . graphview2 expression
    (101) graphmove1 -> . HAND_DOWN
    (102) graphmove1 -> . HAND_UP
    (103) graphmove1 -> . graphmove2 expression
    (116) graphview2 -> . SETXY expression
    (117) graphview2 -> . COLOR_STAR
    (118) graphview2 -> . SIZE_STAR
    (104) graphmove2 -> . GO
    (105) graphmove2 -> . LEFT
    (106) graphmove2 -> . RIGHT
    (107) graphmove2 -> . BACK
    (108) graphmove2 -> . ARC expression

    CLOSEBRACES     reduce using rule 133 (empty -> .)
    ID              shift and go to state 66
    IF              shift and go to state 67
    PRINT           shift and go to state 68
    READ            shift and go to state 71
    REPEAT          shift and go to state 75
    RETURN          shift and go to state 76
    WHILE           shift and go to state 77
    FOR             shift and go to state 78
    CIRCLE          shift and go to state 82
    SQUARE          shift and go to state 83
    TRIANGLE        shift and go to state 84
    RECTANGLE       shift and go to state 85
    HIDE_STAR       shift and go to state 86
    SHOW_STAR       shift and go to state 87
    HAND_DOWN       shift and go to state 89
    HAND_UP         shift and go to state 90
    SETXY           shift and go to state 92
    COLOR_STAR      shift and go to state 93
    SIZE_STAR       shift and go to state 94
    GO              shift and go to state 95
    LEFT            shift and go to state 96
    RIGHT           shift and go to state 97
    BACK            shift and go to state 98
    ARC             shift and go to state 99

    stmt                           shift and go to state 199
    body1                          shift and go to state 223
    empty                          shift and go to state 200
    assignment                     shift and go to state 57
    condition                      shift and go to state 58
    print                          shift and go to state 59
    loop                           shift and go to state 60
    read                           shift and go to state 61
    graphstmt                      shift and go to state 62
    graphr                         shift and go to state 63
    funCall                        shift and go to state 64
    return                         shift and go to state 65
    while                          shift and go to state 69
    for                            shift and go to state 70
    graphfig                       shift and go to state 72
    graphview                      shift and go to state 73
    graphmove                      shift and go to state 74
    graphfig1                      shift and go to state 79
    graphview1                     shift and go to state 80
    graphmove1                     shift and go to state 81
    graphview2                     shift and go to state 88
    graphmove2                     shift and go to state 91

state 200

    (79) body1 -> empty .

    CLOSEBRACES     reduce using rule 79 (body1 -> empty .)


state 201

    (74) head -> OPENPAREN head1 CLOSEPAREN .

    OPENBRACES      reduce using rule 74 (head -> OPENPAREN head1 CLOSEPAREN .)


state 202

    (67) logical -> compare logical1 . compare
    (62) compare -> . expression loper expression
    (56) expression -> . vcte
    (57) expression -> . operation
    (58) expression -> . empty
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (133) empty -> .
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

    ID              shift and go to state 39
    GREATER         reduce using rule 133 (empty -> .)
    LESS            reduce using rule 133 (empty -> .)
    NOTEQUAL        reduce using rule 133 (empty -> .)
    ISEQUAL         reduce using rule 133 (empty -> .)
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

    compare                        shift and go to state 224
    expression                     shift and go to state 118
    vcte                           shift and go to state 35
    operation                      shift and go to state 36
    empty                          shift and go to state 37
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 203

    (68) logical1 -> OR .

    ID              reduce using rule 68 (logical1 -> OR .)
    CTEINT          reduce using rule 68 (logical1 -> OR .)
    CTEFLOAT        reduce using rule 68 (logical1 -> OR .)
    CTECHAR         reduce using rule 68 (logical1 -> OR .)
    OPENPAREN       reduce using rule 68 (logical1 -> OR .)
    ADDITION        reduce using rule 68 (logical1 -> OR .)
    SUBSTRACTION    reduce using rule 68 (logical1 -> OR .)
    GREATER         reduce using rule 68 (logical1 -> OR .)
    LESS            reduce using rule 68 (logical1 -> OR .)
    NOTEQUAL        reduce using rule 68 (logical1 -> OR .)
    ISEQUAL         reduce using rule 68 (logical1 -> OR .)


state 204

    (69) logical1 -> AND .

    ID              reduce using rule 69 (logical1 -> AND .)
    CTEINT          reduce using rule 69 (logical1 -> AND .)
    CTEFLOAT        reduce using rule 69 (logical1 -> AND .)
    CTECHAR         reduce using rule 69 (logical1 -> AND .)
    OPENPAREN       reduce using rule 69 (logical1 -> AND .)
    ADDITION        reduce using rule 69 (logical1 -> AND .)
    SUBSTRACTION    reduce using rule 69 (logical1 -> AND .)
    GREATER         reduce using rule 69 (logical1 -> AND .)
    LESS            reduce using rule 69 (logical1 -> AND .)
    NOTEQUAL        reduce using rule 69 (logical1 -> AND .)
    ISEQUAL         reduce using rule 69 (logical1 -> AND .)


state 205

    (31) print -> PRINT OPENPAREN expression CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 225


state 206

    (32) read -> READ OPENPAREN ID read1 . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 226


state 207

    (33) read1 -> OPENBRACKET . expression CLOSEBRACKET OPENBRACKET expression CLOSEBRACKET
    (34) read1 -> OPENBRACKET . expression CLOSEBRACKET
    (56) expression -> . vcte
    (57) expression -> . operation
    (58) expression -> . empty
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (133) empty -> .
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

    ID              shift and go to state 39
    CLOSEBRACKET    reduce using rule 133 (empty -> .)
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

    expression                     shift and go to state 227
    vcte                           shift and go to state 35
    operation                      shift and go to state 36
    empty                          shift and go to state 37
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 208

    (35) read1 -> empty .

    CLOSEPAREN      reduce using rule 35 (read1 -> empty .)


state 209

    (109) graphr -> REPEAT expression OPENBRACES graphstmt . graphr1 CLOSEBRACES
    (110) graphr1 -> . graphstmt graphr1
    (111) graphr1 -> . empty
    (92) graphstmt -> . graphfig
    (93) graphstmt -> . graphview
    (94) graphstmt -> . graphmove
    (133) empty -> .
    (95) graphfig -> . graphfig1 expression SEMICOLON
    (112) graphview -> . graphview1 SEMICOLON
    (100) graphmove -> . graphmove1 SEMICOLON
    (96) graphfig1 -> . CIRCLE
    (97) graphfig1 -> . SQUARE
    (98) graphfig1 -> . TRIANGLE expression
    (99) graphfig1 -> . RECTANGLE expression
    (113) graphview1 -> . HIDE_STAR
    (114) graphview1 -> . SHOW_STAR
    (115) graphview1 -> . graphview2 expression
    (101) graphmove1 -> . HAND_DOWN
    (102) graphmove1 -> . HAND_UP
    (103) graphmove1 -> . graphmove2 expression
    (116) graphview2 -> . SETXY expression
    (117) graphview2 -> . COLOR_STAR
    (118) graphview2 -> . SIZE_STAR
    (104) graphmove2 -> . GO
    (105) graphmove2 -> . LEFT
    (106) graphmove2 -> . RIGHT
    (107) graphmove2 -> . BACK
    (108) graphmove2 -> . ARC expression

    CLOSEBRACES     reduce using rule 133 (empty -> .)
    CIRCLE          shift and go to state 82
    SQUARE          shift and go to state 83
    TRIANGLE        shift and go to state 84
    RECTANGLE       shift and go to state 85
    HIDE_STAR       shift and go to state 86
    SHOW_STAR       shift and go to state 87
    HAND_DOWN       shift and go to state 89
    HAND_UP         shift and go to state 90
    SETXY           shift and go to state 92
    COLOR_STAR      shift and go to state 93
    SIZE_STAR       shift and go to state 94
    GO              shift and go to state 95
    LEFT            shift and go to state 96
    RIGHT           shift and go to state 97
    BACK            shift and go to state 98
    ARC             shift and go to state 99

    graphstmt                      shift and go to state 228
    graphr1                        shift and go to state 229
    empty                          shift and go to state 230
    graphfig                       shift and go to state 72
    graphview                      shift and go to state 73
    graphmove                      shift and go to state 74
    graphfig1                      shift and go to state 79
    graphview1                     shift and go to state 80
    graphmove1                     shift and go to state 81
    graphview2                     shift and go to state 88
    graphmove2                     shift and go to state 91

state 210

    (80) for -> FOR OPENPAREN ID TWODOTS . expression CLOSEPAREN body
    (56) expression -> . vcte
    (57) expression -> . operation
    (58) expression -> . empty
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (133) empty -> .
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

    ID              shift and go to state 39
    CLOSEPAREN      reduce using rule 133 (empty -> .)
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

    expression                     shift and go to state 231
    vcte                           shift and go to state 35
    operation                      shift and go to state 36
    empty                          shift and go to state 37
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 211

    (83) function -> FUN function1 ID function2 OPENBRACES vars function4 CLOSEBRACES .

    FUN             reduce using rule 83 (function -> FUN function1 ID function2 OPENBRACES vars function4 CLOSEBRACES .)
    MULTIPLICATION  reduce using rule 83 (function -> FUN function1 ID function2 OPENBRACES vars function4 CLOSEBRACES .)


state 212

    (90) function4 -> stmt function4 .

    CLOSEBRACES     reduce using rule 90 (function4 -> stmt function4 .)


state 213

    (47) vcte2 -> OPENPAREN expression CLOSEPAREN . vcte4
    (51) vcte4 -> . COMMA expression vcte4
    (52) vcte4 -> . empty
    (133) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 233
    MULTIPLICATION  reduce using rule 133 (empty -> .)
    DIVISION        reduce using rule 133 (empty -> .)
    ADDITION        reduce using rule 133 (empty -> .)
    SUBSTRACTION    reduce using rule 133 (empty -> .)
    SEMICOLON       reduce using rule 133 (empty -> .)
    GREATER         reduce using rule 133 (empty -> .)
    LESS            reduce using rule 133 (empty -> .)
    NOTEQUAL        reduce using rule 133 (empty -> .)
    ISEQUAL         reduce using rule 133 (empty -> .)
    OPENBRACES      reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    CTEINT          reduce using rule 133 (empty -> .)
    CTEFLOAT        reduce using rule 133 (empty -> .)
    CTECHAR         reduce using rule 133 (empty -> .)
    OPENPAREN       reduce using rule 133 (empty -> .)
    CLOSEBRACKET    reduce using rule 133 (empty -> .)
    CLOSEPAREN      reduce using rule 133 (empty -> .)
    OR              reduce using rule 133 (empty -> .)
    AND             reduce using rule 133 (empty -> .)

  ! COMMA           [ reduce using rule 133 (empty -> .) ]

    vcte4                          shift and go to state 232
    empty                          shift and go to state 234

state 214

    (49) vcte3 -> OPENBRACKET . expression CLOSEBRACKET
    (56) expression -> . vcte
    (57) expression -> . operation
    (58) expression -> . empty
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (133) empty -> .
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

    ID              shift and go to state 39
    CLOSEBRACKET    reduce using rule 133 (empty -> .)
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

    expression                     shift and go to state 235
    vcte                           shift and go to state 35
    operation                      shift and go to state 36
    empty                          shift and go to state 37
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 215

    (45) vcte1 -> OPENBRACKET expression CLOSEBRACKET vcte3 .

    OPENPAREN       reduce using rule 45 (vcte1 -> OPENBRACKET expression CLOSEBRACKET vcte3 .)
    COMMA           reduce using rule 45 (vcte1 -> OPENBRACKET expression CLOSEBRACKET vcte3 .)
    SEMICOLON       reduce using rule 45 (vcte1 -> OPENBRACKET expression CLOSEBRACKET vcte3 .)
    MULTIPLICATION  reduce using rule 45 (vcte1 -> OPENBRACKET expression CLOSEBRACKET vcte3 .)
    DIVISION        reduce using rule 45 (vcte1 -> OPENBRACKET expression CLOSEBRACKET vcte3 .)
    ADDITION        reduce using rule 45 (vcte1 -> OPENBRACKET expression CLOSEBRACKET vcte3 .)
    SUBSTRACTION    reduce using rule 45 (vcte1 -> OPENBRACKET expression CLOSEBRACKET vcte3 .)
    GREATER         reduce using rule 45 (vcte1 -> OPENBRACKET expression CLOSEBRACKET vcte3 .)
    LESS            reduce using rule 45 (vcte1 -> OPENBRACKET expression CLOSEBRACKET vcte3 .)
    NOTEQUAL        reduce using rule 45 (vcte1 -> OPENBRACKET expression CLOSEBRACKET vcte3 .)
    ISEQUAL         reduce using rule 45 (vcte1 -> OPENBRACKET expression CLOSEBRACKET vcte3 .)
    OPENBRACES      reduce using rule 45 (vcte1 -> OPENBRACKET expression CLOSEBRACKET vcte3 .)
    ID              reduce using rule 45 (vcte1 -> OPENBRACKET expression CLOSEBRACKET vcte3 .)
    CTEINT          reduce using rule 45 (vcte1 -> OPENBRACKET expression CLOSEBRACKET vcte3 .)
    CTEFLOAT        reduce using rule 45 (vcte1 -> OPENBRACKET expression CLOSEBRACKET vcte3 .)
    CTECHAR         reduce using rule 45 (vcte1 -> OPENBRACKET expression CLOSEBRACKET vcte3 .)
    CLOSEBRACKET    reduce using rule 45 (vcte1 -> OPENBRACKET expression CLOSEBRACKET vcte3 .)
    CLOSEPAREN      reduce using rule 45 (vcte1 -> OPENBRACKET expression CLOSEBRACKET vcte3 .)
    OR              reduce using rule 45 (vcte1 -> OPENBRACKET expression CLOSEBRACKET vcte3 .)
    AND             reduce using rule 45 (vcte1 -> OPENBRACKET expression CLOSEBRACKET vcte3 .)


state 216

    (50) vcte3 -> empty .

    OPENPAREN       reduce using rule 50 (vcte3 -> empty .)
    COMMA           reduce using rule 50 (vcte3 -> empty .)
    SEMICOLON       reduce using rule 50 (vcte3 -> empty .)
    MULTIPLICATION  reduce using rule 50 (vcte3 -> empty .)
    DIVISION        reduce using rule 50 (vcte3 -> empty .)
    ADDITION        reduce using rule 50 (vcte3 -> empty .)
    SUBSTRACTION    reduce using rule 50 (vcte3 -> empty .)
    GREATER         reduce using rule 50 (vcte3 -> empty .)
    LESS            reduce using rule 50 (vcte3 -> empty .)
    NOTEQUAL        reduce using rule 50 (vcte3 -> empty .)
    ISEQUAL         reduce using rule 50 (vcte3 -> empty .)
    OPENBRACES      reduce using rule 50 (vcte3 -> empty .)
    ID              reduce using rule 50 (vcte3 -> empty .)
    CTEINT          reduce using rule 50 (vcte3 -> empty .)
    CTEFLOAT        reduce using rule 50 (vcte3 -> empty .)
    CTECHAR         reduce using rule 50 (vcte3 -> empty .)
    CLOSEBRACKET    reduce using rule 50 (vcte3 -> empty .)
    CLOSEPAREN      reduce using rule 50 (vcte3 -> empty .)
    OR              reduce using rule 50 (vcte3 -> empty .)
    AND             reduce using rule 50 (vcte3 -> empty .)


state 217

    (26) vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .

    SEMICOLON       reduce using rule 26 (vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .)
    COMMA           reduce using rule 26 (vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .)


state 218

    (36) assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .

    ID              reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    IF              reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    PRINT           reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    READ            reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    REPEAT          reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    RETURN          reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    WHILE           reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    FOR             reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    CIRCLE          reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    SQUARE          reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    TRIANGLE        reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    RECTANGLE       reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    HIDE_STAR       reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    SHOW_STAR       reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    HAND_DOWN       reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    HAND_UP         reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    SETXY           reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    COLOR_STAR      reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    SIZE_STAR       reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    GO              reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    LEFT            reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    RIGHT           reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    BACK            reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    ARC             reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)
    CLOSEBRACES     reduce using rule 36 (assignment -> ID assignment1 EQUALS assignment3 SEMICOLON .)


state 219

    (82) funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .

    ID              reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 82 (funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON .)


state 220

    (71) condition1 -> ELSEIF head . body condition1
    (77) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 170

    body                           shift and go to state 236

state 221

    (72) condition1 -> ELSE body .

    ID              reduce using rule 72 (condition1 -> ELSE body .)
    IF              reduce using rule 72 (condition1 -> ELSE body .)
    PRINT           reduce using rule 72 (condition1 -> ELSE body .)
    READ            reduce using rule 72 (condition1 -> ELSE body .)
    REPEAT          reduce using rule 72 (condition1 -> ELSE body .)
    RETURN          reduce using rule 72 (condition1 -> ELSE body .)
    WHILE           reduce using rule 72 (condition1 -> ELSE body .)
    FOR             reduce using rule 72 (condition1 -> ELSE body .)
    CIRCLE          reduce using rule 72 (condition1 -> ELSE body .)
    SQUARE          reduce using rule 72 (condition1 -> ELSE body .)
    TRIANGLE        reduce using rule 72 (condition1 -> ELSE body .)
    RECTANGLE       reduce using rule 72 (condition1 -> ELSE body .)
    HIDE_STAR       reduce using rule 72 (condition1 -> ELSE body .)
    SHOW_STAR       reduce using rule 72 (condition1 -> ELSE body .)
    HAND_DOWN       reduce using rule 72 (condition1 -> ELSE body .)
    HAND_UP         reduce using rule 72 (condition1 -> ELSE body .)
    SETXY           reduce using rule 72 (condition1 -> ELSE body .)
    COLOR_STAR      reduce using rule 72 (condition1 -> ELSE body .)
    SIZE_STAR       reduce using rule 72 (condition1 -> ELSE body .)
    GO              reduce using rule 72 (condition1 -> ELSE body .)
    LEFT            reduce using rule 72 (condition1 -> ELSE body .)
    RIGHT           reduce using rule 72 (condition1 -> ELSE body .)
    BACK            reduce using rule 72 (condition1 -> ELSE body .)
    ARC             reduce using rule 72 (condition1 -> ELSE body .)
    CLOSEBRACES     reduce using rule 72 (condition1 -> ELSE body .)


state 222

    (77) body -> OPENBRACES body1 CLOSEBRACES .

    ELSEIF          reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSE            reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    ID              reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    IF              reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    PRINT           reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    READ            reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    REPEAT          reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    RETURN          reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    WHILE           reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    FOR             reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    CIRCLE          reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    SQUARE          reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_UP         reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    SETXY           reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    GO              reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    LEFT            reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    RIGHT           reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    BACK            reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    ARC             reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 77 (body -> OPENBRACES body1 CLOSEBRACES .)


state 223

    (78) body1 -> stmt body1 .

    CLOSEBRACES     reduce using rule 78 (body1 -> stmt body1 .)


state 224

    (67) logical -> compare logical1 compare .

    CLOSEPAREN      reduce using rule 67 (logical -> compare logical1 compare .)


state 225

    (31) print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .

    ID              reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 31 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)


state 226

    (32) read -> READ OPENPAREN ID read1 CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 237


state 227

    (33) read1 -> OPENBRACKET expression . CLOSEBRACKET OPENBRACKET expression CLOSEBRACKET
    (34) read1 -> OPENBRACKET expression . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 238


state 228

    (110) graphr1 -> graphstmt . graphr1
    (110) graphr1 -> . graphstmt graphr1
    (111) graphr1 -> . empty
    (92) graphstmt -> . graphfig
    (93) graphstmt -> . graphview
    (94) graphstmt -> . graphmove
    (133) empty -> .
    (95) graphfig -> . graphfig1 expression SEMICOLON
    (112) graphview -> . graphview1 SEMICOLON
    (100) graphmove -> . graphmove1 SEMICOLON
    (96) graphfig1 -> . CIRCLE
    (97) graphfig1 -> . SQUARE
    (98) graphfig1 -> . TRIANGLE expression
    (99) graphfig1 -> . RECTANGLE expression
    (113) graphview1 -> . HIDE_STAR
    (114) graphview1 -> . SHOW_STAR
    (115) graphview1 -> . graphview2 expression
    (101) graphmove1 -> . HAND_DOWN
    (102) graphmove1 -> . HAND_UP
    (103) graphmove1 -> . graphmove2 expression
    (116) graphview2 -> . SETXY expression
    (117) graphview2 -> . COLOR_STAR
    (118) graphview2 -> . SIZE_STAR
    (104) graphmove2 -> . GO
    (105) graphmove2 -> . LEFT
    (106) graphmove2 -> . RIGHT
    (107) graphmove2 -> . BACK
    (108) graphmove2 -> . ARC expression

    CLOSEBRACES     reduce using rule 133 (empty -> .)
    CIRCLE          shift and go to state 82
    SQUARE          shift and go to state 83
    TRIANGLE        shift and go to state 84
    RECTANGLE       shift and go to state 85
    HIDE_STAR       shift and go to state 86
    SHOW_STAR       shift and go to state 87
    HAND_DOWN       shift and go to state 89
    HAND_UP         shift and go to state 90
    SETXY           shift and go to state 92
    COLOR_STAR      shift and go to state 93
    SIZE_STAR       shift and go to state 94
    GO              shift and go to state 95
    LEFT            shift and go to state 96
    RIGHT           shift and go to state 97
    BACK            shift and go to state 98
    ARC             shift and go to state 99

    graphstmt                      shift and go to state 228
    graphr1                        shift and go to state 239
    empty                          shift and go to state 230
    graphfig                       shift and go to state 72
    graphview                      shift and go to state 73
    graphmove                      shift and go to state 74
    graphfig1                      shift and go to state 79
    graphview1                     shift and go to state 80
    graphmove1                     shift and go to state 81
    graphview2                     shift and go to state 88
    graphmove2                     shift and go to state 91

state 229

    (109) graphr -> REPEAT expression OPENBRACES graphstmt graphr1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 240


state 230

    (111) graphr1 -> empty .

    CLOSEBRACES     reduce using rule 111 (graphr1 -> empty .)


state 231

    (80) for -> FOR OPENPAREN ID TWODOTS expression . CLOSEPAREN body

    CLOSEPAREN      shift and go to state 241


state 232

    (47) vcte2 -> OPENPAREN expression CLOSEPAREN vcte4 .

    MULTIPLICATION  reduce using rule 47 (vcte2 -> OPENPAREN expression CLOSEPAREN vcte4 .)
    DIVISION        reduce using rule 47 (vcte2 -> OPENPAREN expression CLOSEPAREN vcte4 .)
    ADDITION        reduce using rule 47 (vcte2 -> OPENPAREN expression CLOSEPAREN vcte4 .)
    SUBSTRACTION    reduce using rule 47 (vcte2 -> OPENPAREN expression CLOSEPAREN vcte4 .)
    COMMA           reduce using rule 47 (vcte2 -> OPENPAREN expression CLOSEPAREN vcte4 .)
    SEMICOLON       reduce using rule 47 (vcte2 -> OPENPAREN expression CLOSEPAREN vcte4 .)
    GREATER         reduce using rule 47 (vcte2 -> OPENPAREN expression CLOSEPAREN vcte4 .)
    LESS            reduce using rule 47 (vcte2 -> OPENPAREN expression CLOSEPAREN vcte4 .)
    NOTEQUAL        reduce using rule 47 (vcte2 -> OPENPAREN expression CLOSEPAREN vcte4 .)
    ISEQUAL         reduce using rule 47 (vcte2 -> OPENPAREN expression CLOSEPAREN vcte4 .)
    OPENBRACES      reduce using rule 47 (vcte2 -> OPENPAREN expression CLOSEPAREN vcte4 .)
    ID              reduce using rule 47 (vcte2 -> OPENPAREN expression CLOSEPAREN vcte4 .)
    CTEINT          reduce using rule 47 (vcte2 -> OPENPAREN expression CLOSEPAREN vcte4 .)
    CTEFLOAT        reduce using rule 47 (vcte2 -> OPENPAREN expression CLOSEPAREN vcte4 .)
    CTECHAR         reduce using rule 47 (vcte2 -> OPENPAREN expression CLOSEPAREN vcte4 .)
    OPENPAREN       reduce using rule 47 (vcte2 -> OPENPAREN expression CLOSEPAREN vcte4 .)
    CLOSEBRACKET    reduce using rule 47 (vcte2 -> OPENPAREN expression CLOSEPAREN vcte4 .)
    CLOSEPAREN      reduce using rule 47 (vcte2 -> OPENPAREN expression CLOSEPAREN vcte4 .)
    OR              reduce using rule 47 (vcte2 -> OPENPAREN expression CLOSEPAREN vcte4 .)
    AND             reduce using rule 47 (vcte2 -> OPENPAREN expression CLOSEPAREN vcte4 .)


state 233

    (51) vcte4 -> COMMA . expression vcte4
    (56) expression -> . vcte
    (57) expression -> . operation
    (58) expression -> . empty
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (133) empty -> .
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTEINT resolved as shift
  ! shift/reduce conflict for CTEFLOAT resolved as shift
  ! shift/reduce conflict for CTECHAR resolved as shift
  ! shift/reduce conflict for OPENPAREN resolved as shift
  ! shift/reduce conflict for ADDITION resolved as shift
  ! shift/reduce conflict for SUBSTRACTION resolved as shift
    ID              shift and go to state 39
    MULTIPLICATION  reduce using rule 133 (empty -> .)
    DIVISION        reduce using rule 133 (empty -> .)
    COMMA           reduce using rule 133 (empty -> .)
    SEMICOLON       reduce using rule 133 (empty -> .)
    GREATER         reduce using rule 133 (empty -> .)
    LESS            reduce using rule 133 (empty -> .)
    NOTEQUAL        reduce using rule 133 (empty -> .)
    ISEQUAL         reduce using rule 133 (empty -> .)
    OPENBRACES      reduce using rule 133 (empty -> .)
    CLOSEBRACKET    reduce using rule 133 (empty -> .)
    CLOSEPAREN      reduce using rule 133 (empty -> .)
    OR              reduce using rule 133 (empty -> .)
    AND             reduce using rule 133 (empty -> .)
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

  ! ADDITION        [ reduce using rule 133 (empty -> .) ]
  ! SUBSTRACTION    [ reduce using rule 133 (empty -> .) ]
  ! ID              [ reduce using rule 133 (empty -> .) ]
  ! CTEINT          [ reduce using rule 133 (empty -> .) ]
  ! CTEFLOAT        [ reduce using rule 133 (empty -> .) ]
  ! CTECHAR         [ reduce using rule 133 (empty -> .) ]
  ! OPENPAREN       [ reduce using rule 133 (empty -> .) ]

    expression                     shift and go to state 242
    vcte                           shift and go to state 35
    operation                      shift and go to state 36
    empty                          shift and go to state 37
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 234

    (52) vcte4 -> empty .

    MULTIPLICATION  reduce using rule 52 (vcte4 -> empty .)
    DIVISION        reduce using rule 52 (vcte4 -> empty .)
    ADDITION        reduce using rule 52 (vcte4 -> empty .)
    SUBSTRACTION    reduce using rule 52 (vcte4 -> empty .)
    COMMA           reduce using rule 52 (vcte4 -> empty .)
    SEMICOLON       reduce using rule 52 (vcte4 -> empty .)
    GREATER         reduce using rule 52 (vcte4 -> empty .)
    LESS            reduce using rule 52 (vcte4 -> empty .)
    NOTEQUAL        reduce using rule 52 (vcte4 -> empty .)
    ISEQUAL         reduce using rule 52 (vcte4 -> empty .)
    OPENBRACES      reduce using rule 52 (vcte4 -> empty .)
    ID              reduce using rule 52 (vcte4 -> empty .)
    CTEINT          reduce using rule 52 (vcte4 -> empty .)
    CTEFLOAT        reduce using rule 52 (vcte4 -> empty .)
    CTECHAR         reduce using rule 52 (vcte4 -> empty .)
    OPENPAREN       reduce using rule 52 (vcte4 -> empty .)
    CLOSEBRACKET    reduce using rule 52 (vcte4 -> empty .)
    CLOSEPAREN      reduce using rule 52 (vcte4 -> empty .)
    OR              reduce using rule 52 (vcte4 -> empty .)
    AND             reduce using rule 52 (vcte4 -> empty .)


state 235

    (49) vcte3 -> OPENBRACKET expression . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 243


state 236

    (71) condition1 -> ELSEIF head body . condition1
    (71) condition1 -> . ELSEIF head body condition1
    (72) condition1 -> . ELSE body
    (73) condition1 -> . empty
    (133) empty -> .

    ELSEIF          shift and go to state 195
    ELSE            shift and go to state 196
    ID              reduce using rule 133 (empty -> .)
    IF              reduce using rule 133 (empty -> .)
    PRINT           reduce using rule 133 (empty -> .)
    READ            reduce using rule 133 (empty -> .)
    REPEAT          reduce using rule 133 (empty -> .)
    RETURN          reduce using rule 133 (empty -> .)
    WHILE           reduce using rule 133 (empty -> .)
    FOR             reduce using rule 133 (empty -> .)
    CIRCLE          reduce using rule 133 (empty -> .)
    SQUARE          reduce using rule 133 (empty -> .)
    TRIANGLE        reduce using rule 133 (empty -> .)
    RECTANGLE       reduce using rule 133 (empty -> .)
    HIDE_STAR       reduce using rule 133 (empty -> .)
    SHOW_STAR       reduce using rule 133 (empty -> .)
    HAND_DOWN       reduce using rule 133 (empty -> .)
    HAND_UP         reduce using rule 133 (empty -> .)
    SETXY           reduce using rule 133 (empty -> .)
    COLOR_STAR      reduce using rule 133 (empty -> .)
    SIZE_STAR       reduce using rule 133 (empty -> .)
    GO              reduce using rule 133 (empty -> .)
    LEFT            reduce using rule 133 (empty -> .)
    RIGHT           reduce using rule 133 (empty -> .)
    BACK            reduce using rule 133 (empty -> .)
    ARC             reduce using rule 133 (empty -> .)
    CLOSEBRACES     reduce using rule 133 (empty -> .)

    condition1                     shift and go to state 244
    empty                          shift and go to state 197

state 237

    (32) read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .

    ID              reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 32 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)


state 238

    (33) read1 -> OPENBRACKET expression CLOSEBRACKET . OPENBRACKET expression CLOSEBRACKET
    (34) read1 -> OPENBRACKET expression CLOSEBRACKET .

    OPENBRACKET     shift and go to state 245
    CLOSEPAREN      reduce using rule 34 (read1 -> OPENBRACKET expression CLOSEBRACKET .)


state 239

    (110) graphr1 -> graphstmt graphr1 .

    CLOSEBRACES     reduce using rule 110 (graphr1 -> graphstmt graphr1 .)


state 240

    (109) graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .

    ID              reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    IF              reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    PRINT           reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    READ            reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    REPEAT          reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RETURN          reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    WHILE           reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    FOR             reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    CIRCLE          reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SQUARE          reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HAND_UP         reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SETXY           reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    GO              reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    LEFT            reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RIGHT           reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    BACK            reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    ARC             reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 109 (graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES .)


state 241

    (80) for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN . body
    (77) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 170

    body                           shift and go to state 246

state 242

    (51) vcte4 -> COMMA expression . vcte4
    (51) vcte4 -> . COMMA expression vcte4
    (52) vcte4 -> . empty
    (133) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 233
    MULTIPLICATION  reduce using rule 133 (empty -> .)
    DIVISION        reduce using rule 133 (empty -> .)
    ADDITION        reduce using rule 133 (empty -> .)
    SUBSTRACTION    reduce using rule 133 (empty -> .)
    SEMICOLON       reduce using rule 133 (empty -> .)
    GREATER         reduce using rule 133 (empty -> .)
    LESS            reduce using rule 133 (empty -> .)
    NOTEQUAL        reduce using rule 133 (empty -> .)
    ISEQUAL         reduce using rule 133 (empty -> .)
    OPENBRACES      reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    CTEINT          reduce using rule 133 (empty -> .)
    CTEFLOAT        reduce using rule 133 (empty -> .)
    CTECHAR         reduce using rule 133 (empty -> .)
    OPENPAREN       reduce using rule 133 (empty -> .)
    CLOSEBRACKET    reduce using rule 133 (empty -> .)
    CLOSEPAREN      reduce using rule 133 (empty -> .)
    OR              reduce using rule 133 (empty -> .)
    AND             reduce using rule 133 (empty -> .)

  ! COMMA           [ reduce using rule 133 (empty -> .) ]

    vcte4                          shift and go to state 247
    empty                          shift and go to state 234

state 243

    (49) vcte3 -> OPENBRACKET expression CLOSEBRACKET .

    OPENPAREN       reduce using rule 49 (vcte3 -> OPENBRACKET expression CLOSEBRACKET .)
    COMMA           reduce using rule 49 (vcte3 -> OPENBRACKET expression CLOSEBRACKET .)
    SEMICOLON       reduce using rule 49 (vcte3 -> OPENBRACKET expression CLOSEBRACKET .)
    MULTIPLICATION  reduce using rule 49 (vcte3 -> OPENBRACKET expression CLOSEBRACKET .)
    DIVISION        reduce using rule 49 (vcte3 -> OPENBRACKET expression CLOSEBRACKET .)
    ADDITION        reduce using rule 49 (vcte3 -> OPENBRACKET expression CLOSEBRACKET .)
    SUBSTRACTION    reduce using rule 49 (vcte3 -> OPENBRACKET expression CLOSEBRACKET .)
    GREATER         reduce using rule 49 (vcte3 -> OPENBRACKET expression CLOSEBRACKET .)
    LESS            reduce using rule 49 (vcte3 -> OPENBRACKET expression CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 49 (vcte3 -> OPENBRACKET expression CLOSEBRACKET .)
    ISEQUAL         reduce using rule 49 (vcte3 -> OPENBRACKET expression CLOSEBRACKET .)
    OPENBRACES      reduce using rule 49 (vcte3 -> OPENBRACKET expression CLOSEBRACKET .)
    ID              reduce using rule 49 (vcte3 -> OPENBRACKET expression CLOSEBRACKET .)
    CTEINT          reduce using rule 49 (vcte3 -> OPENBRACKET expression CLOSEBRACKET .)
    CTEFLOAT        reduce using rule 49 (vcte3 -> OPENBRACKET expression CLOSEBRACKET .)
    CTECHAR         reduce using rule 49 (vcte3 -> OPENBRACKET expression CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 49 (vcte3 -> OPENBRACKET expression CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 49 (vcte3 -> OPENBRACKET expression CLOSEBRACKET .)
    OR              reduce using rule 49 (vcte3 -> OPENBRACKET expression CLOSEBRACKET .)
    AND             reduce using rule 49 (vcte3 -> OPENBRACKET expression CLOSEBRACKET .)


state 244

    (71) condition1 -> ELSEIF head body condition1 .

    ID              reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)
    IF              reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)
    PRINT           reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)
    READ            reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)
    REPEAT          reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)
    RETURN          reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)
    WHILE           reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)
    FOR             reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)
    CIRCLE          reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)
    SQUARE          reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)
    TRIANGLE        reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)
    RECTANGLE       reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)
    HIDE_STAR       reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)
    SHOW_STAR       reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)
    HAND_DOWN       reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)
    HAND_UP         reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)
    SETXY           reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)
    COLOR_STAR      reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)
    SIZE_STAR       reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)
    GO              reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)
    LEFT            reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)
    RIGHT           reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)
    BACK            reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)
    ARC             reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)
    CLOSEBRACES     reduce using rule 71 (condition1 -> ELSEIF head body condition1 .)


state 245

    (33) read1 -> OPENBRACKET expression CLOSEBRACKET OPENBRACKET . expression CLOSEBRACKET
    (56) expression -> . vcte
    (57) expression -> . operation
    (58) expression -> . empty
    (43) vcte -> . cte
    (44) vcte -> . ID vcte1 vcte2
    (119) operation -> . term operation1
    (133) empty -> .
    (53) cte -> . CTEINT
    (54) cte -> . CTEFLOAT
    (55) cte -> . CTECHAR
    (129) term -> . factor term1
    (123) factor -> . vcte
    (124) factor -> . factor1
    (125) factor1 -> . factor2 vcte
    (126) factor1 -> . OPENPAREN compare CLOSEPAREN
    (127) factor2 -> . ADDITION
    (128) factor2 -> . SUBSTRACTION

    ID              shift and go to state 39
    CLOSEBRACKET    reduce using rule 133 (empty -> .)
    CTEINT          shift and go to state 41
    CTEFLOAT        shift and go to state 42
    CTECHAR         shift and go to state 43
    OPENPAREN       shift and go to state 47
    ADDITION        shift and go to state 48
    SUBSTRACTION    shift and go to state 49

    expression                     shift and go to state 248
    vcte                           shift and go to state 35
    operation                      shift and go to state 36
    empty                          shift and go to state 37
    cte                            shift and go to state 38
    term                           shift and go to state 40
    factor                         shift and go to state 44
    factor1                        shift and go to state 45
    factor2                        shift and go to state 46

state 246

    (80) for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .

    ID              reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)
    IF              reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)
    PRINT           reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)
    READ            reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)
    REPEAT          reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)
    RETURN          reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)
    WHILE           reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)
    FOR             reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)
    CIRCLE          reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)
    SQUARE          reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)
    TRIANGLE        reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)
    RECTANGLE       reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)
    HIDE_STAR       reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)
    SHOW_STAR       reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)
    HAND_DOWN       reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)
    HAND_UP         reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)
    SETXY           reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)
    COLOR_STAR      reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)
    SIZE_STAR       reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)
    GO              reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)
    LEFT            reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)
    RIGHT           reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)
    BACK            reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)
    ARC             reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)
    CLOSEBRACES     reduce using rule 80 (for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body .)


state 247

    (51) vcte4 -> COMMA expression vcte4 .

    MULTIPLICATION  reduce using rule 51 (vcte4 -> COMMA expression vcte4 .)
    DIVISION        reduce using rule 51 (vcte4 -> COMMA expression vcte4 .)
    ADDITION        reduce using rule 51 (vcte4 -> COMMA expression vcte4 .)
    SUBSTRACTION    reduce using rule 51 (vcte4 -> COMMA expression vcte4 .)
    COMMA           reduce using rule 51 (vcte4 -> COMMA expression vcte4 .)
    SEMICOLON       reduce using rule 51 (vcte4 -> COMMA expression vcte4 .)
    GREATER         reduce using rule 51 (vcte4 -> COMMA expression vcte4 .)
    LESS            reduce using rule 51 (vcte4 -> COMMA expression vcte4 .)
    NOTEQUAL        reduce using rule 51 (vcte4 -> COMMA expression vcte4 .)
    ISEQUAL         reduce using rule 51 (vcte4 -> COMMA expression vcte4 .)
    OPENBRACES      reduce using rule 51 (vcte4 -> COMMA expression vcte4 .)
    ID              reduce using rule 51 (vcte4 -> COMMA expression vcte4 .)
    CTEINT          reduce using rule 51 (vcte4 -> COMMA expression vcte4 .)
    CTEFLOAT        reduce using rule 51 (vcte4 -> COMMA expression vcte4 .)
    CTECHAR         reduce using rule 51 (vcte4 -> COMMA expression vcte4 .)
    OPENPAREN       reduce using rule 51 (vcte4 -> COMMA expression vcte4 .)
    CLOSEBRACKET    reduce using rule 51 (vcte4 -> COMMA expression vcte4 .)
    CLOSEPAREN      reduce using rule 51 (vcte4 -> COMMA expression vcte4 .)
    OR              reduce using rule 51 (vcte4 -> COMMA expression vcte4 .)
    AND             reduce using rule 51 (vcte4 -> COMMA expression vcte4 .)


state 248

    (33) read1 -> OPENBRACKET expression CLOSEBRACKET OPENBRACKET expression . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 249


state 249

    (33) read1 -> OPENBRACKET expression CLOSEBRACKET OPENBRACKET expression CLOSEBRACKET .

    CLOSEPAREN      reduce using rule 33 (read1 -> OPENBRACKET expression CLOSEBRACKET OPENBRACKET expression CLOSEBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 29 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 34 resolved as shift
WARNING: shift/reduce conflict for ADDITION in state 40 resolved as shift
WARNING: shift/reduce conflict for SUBSTRACTION in state 40 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICATION in state 44 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 44 resolved as shift
WARNING: shift/reduce conflict for ID in state 84 resolved as shift
WARNING: shift/reduce conflict for CTEINT in state 84 resolved as shift
WARNING: shift/reduce conflict for CTEFLOAT in state 84 resolved as shift
WARNING: shift/reduce conflict for CTECHAR in state 84 resolved as shift
WARNING: shift/reduce conflict for OPENPAREN in state 84 resolved as shift
WARNING: shift/reduce conflict for ADDITION in state 84 resolved as shift
WARNING: shift/reduce conflict for SUBSTRACTION in state 84 resolved as shift
WARNING: shift/reduce conflict for ID in state 85 resolved as shift
WARNING: shift/reduce conflict for CTEINT in state 85 resolved as shift
WARNING: shift/reduce conflict for CTEFLOAT in state 85 resolved as shift
WARNING: shift/reduce conflict for CTECHAR in state 85 resolved as shift
WARNING: shift/reduce conflict for OPENPAREN in state 85 resolved as shift
WARNING: shift/reduce conflict for ADDITION in state 85 resolved as shift
WARNING: shift/reduce conflict for SUBSTRACTION in state 85 resolved as shift
WARNING: shift/reduce conflict for ID in state 92 resolved as shift
WARNING: shift/reduce conflict for CTEINT in state 92 resolved as shift
WARNING: shift/reduce conflict for CTEFLOAT in state 92 resolved as shift
WARNING: shift/reduce conflict for CTECHAR in state 92 resolved as shift
WARNING: shift/reduce conflict for OPENPAREN in state 92 resolved as shift
WARNING: shift/reduce conflict for ADDITION in state 92 resolved as shift
WARNING: shift/reduce conflict for SUBSTRACTION in state 92 resolved as shift
WARNING: shift/reduce conflict for ID in state 99 resolved as shift
WARNING: shift/reduce conflict for CTEINT in state 99 resolved as shift
WARNING: shift/reduce conflict for CTEFLOAT in state 99 resolved as shift
WARNING: shift/reduce conflict for CTECHAR in state 99 resolved as shift
WARNING: shift/reduce conflict for OPENPAREN in state 99 resolved as shift
WARNING: shift/reduce conflict for ADDITION in state 99 resolved as shift
WARNING: shift/reduce conflict for SUBSTRACTION in state 99 resolved as shift
WARNING: shift/reduce conflict for OPENPAREN in state 105 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 164 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 213 resolved as shift
WARNING: shift/reduce conflict for ID in state 233 resolved as shift
WARNING: shift/reduce conflict for CTEINT in state 233 resolved as shift
WARNING: shift/reduce conflict for CTEFLOAT in state 233 resolved as shift
WARNING: shift/reduce conflict for CTECHAR in state 233 resolved as shift
WARNING: shift/reduce conflict for OPENPAREN in state 233 resolved as shift
WARNING: shift/reduce conflict for ADDITION in state 233 resolved as shift
WARNING: shift/reduce conflict for SUBSTRACTION in state 233 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 242 resolved as shift
WARNING: reduce/reduce conflict in state 35 resolved using rule (expression -> vcte)
WARNING: rejected rule (factor -> vcte) in state 35
WARNING: reduce/reduce conflict in state 125 resolved using rule (assignment1 -> assignment2)
WARNING: rejected rule (empty -> <empty>) in state 125
WARNING: reduce/reduce conflict in state 134 resolved using rule (return1 -> vcte)
WARNING: rejected rule (factor -> vcte) in state 134
