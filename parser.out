Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    SIMPLEQUOTES
    VARS

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON declara_vars program_modules
Rule 2     program_modules -> program_fun star
Rule 3     program_fun -> function program_fun
Rule 4     program_fun -> empty
Rule 5     star -> starI declara_vars star1 CLOSEBRACES
Rule 6     starI -> star_sign OPENBRACES
Rule 7     star_sign -> MULTIPLICATION
Rule 8     star1 -> stmt star1
Rule 9     star1 -> empty
Rule 10    declara_vars -> vars declara_vars
Rule 11    declara_vars -> empty
Rule 12    loop -> while
Rule 13    loop -> for
Rule 14    stmt -> assignment
Rule 15    stmt -> condition
Rule 16    stmt -> print
Rule 17    stmt -> loop
Rule 18    stmt -> read
Rule 19    stmt -> graphstmt
Rule 20    stmt -> graphr
Rule 21    stmt -> funCall SEMICOLON
Rule 22    stmt -> return
Rule 23    functionI -> type ID
Rule 24    functionI -> VOID ID
Rule 25    function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun
Rule 26    inicia_fun -> OPENBRACES
Rule 27    termina_fun -> CLOSEBRACES
Rule 28    function2 -> OPENPAREN function3 CLOSEPAREN
Rule 29    function3 -> type ID function5
Rule 30    function3 -> empty
Rule 31    function4 -> stmt function4
Rule 32    function4 -> empty
Rule 33    function5 -> COMMA type ID function5
Rule 34    function5 -> empty
Rule 35    vars -> type ID vars1 equals exp SEMICOLON
Rule 36    vars -> type ID vars1 SEMICOLON
Rule 37    vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3
Rule 38    vars1 -> empty
Rule 39    vars3 -> OPENBRACKET CTEINT CLOSEBRACKET
Rule 40    vars3 -> empty
Rule 41    type -> INT
Rule 42    type -> FLOAT
Rule 43    type -> CHAR
Rule 44    print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
Rule 45    read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
Rule 46    read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
Rule 47    read1 -> OPENBRACKET exp CLOSEBRACKET
Rule 48    read1 -> empty
Rule 49    equals -> EQUALS
Rule 50    id -> ID
Rule 51    assignment -> id assignment1 equals assignment3 SEMICOLON
Rule 52    assignment1 -> assignment2
Rule 53    assignment1 -> assignment2 assignment1
Rule 54    assignment1 -> empty
Rule 55    assignment2 -> OPENBRACKET exp CLOSEBRACKET
Rule 56    assignment3 -> exp
Rule 57    assignment3 -> read
Rule 58    vcte -> cte_int
Rule 59    vcte -> cte_float
Rule 60    vcte -> cte_char
Rule 61    vcte -> id vcte1
Rule 62    vcte -> funCall
Rule 63    vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3
Rule 64    vcte1 -> empty
Rule 65    vcte3 -> OPENBRACKET exp CLOSEBRACKET
Rule 66    vcte3 -> empty
Rule 67    cte_int -> CTEINT
Rule 68    cte_float -> CTEFLOAT
Rule 69    cte_char -> CTECHAR
Rule 70    return -> RETURN return1 SEMICOLON
Rule 71    return1 -> vcte
Rule 72    return1 -> exp
Rule 73    expression -> exp expression1
Rule 74    expression1 -> loper exp
Rule 75    expression1 -> empty
Rule 76    loper -> GREATER
Rule 77    loper -> LESS
Rule 78    loper -> NOTEQUAL
Rule 79    loper -> ISEQUAL
Rule 80    condition -> IF head_cond body condition1
Rule 81    condition1 -> elseif head_cond body condition1
Rule 82    condition1 -> else body
Rule 83    condition1 -> empty
Rule 84    elseif -> ELSEIF
Rule 85    else -> ELSE
Rule 86    head_cond -> OPENPAREN expression close_condition
Rule 87    body -> OPENBRACES body1 CLOSEBRACES
Rule 88    close_condition -> CLOSEPAREN
Rule 89    body1 -> stmt body1
Rule 90    body1 -> empty
Rule 91    for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
Rule 92    while -> while1 body
Rule 93    while1 -> while_w OPENPAREN expression CLOSEPAREN
Rule 94    while_w -> WHILE
Rule 95    funCall -> ID OPENPAREN funCall2 CLOSEPAREN
Rule 96    funCall2 -> exp funCall3
Rule 97    funCall2 -> empty
Rule 98    funCall3 -> COMMA exp funCall2
Rule 99    funCall3 -> empty
Rule 100   dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN
Rule 101   unaExp -> OPENPAREN exp CLOSEPAREN
Rule 102   graphstmt -> graphfig
Rule 103   graphstmt -> graphview
Rule 104   graphstmt -> graphmove
Rule 105   graphfig -> graphfig1 SEMICOLON
Rule 106   graphfig -> graphfig2 SEMICOLON
Rule 107   graphfig1 -> CIRCLE unaExp
Rule 108   graphfig1 -> SQUARE unaExp
Rule 109   graphfig2 -> TRIANGLE dosExp
Rule 110   graphfig2 -> RECTANGLE dosExp
Rule 111   graphmove -> graphmove0 SEMICOLON
Rule 112   graphmove -> graphmove1 SEMICOLON
Rule 113   graphmove -> graphmove2 SEMICOLON
Rule 114   graphmove0 -> HAND_DOWN
Rule 115   graphmove0 -> HAND_UP
Rule 116   graphmove1 -> GO unaExp
Rule 117   graphmove1 -> LEFT unaExp
Rule 118   graphmove1 -> RIGHT unaExp
Rule 119   graphmove1 -> BACK unaExp
Rule 120   graphmove2 -> ARC dosExp
Rule 121   graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
Rule 122   graphr1 -> graphstmt graphr1
Rule 123   graphr1 -> empty
Rule 124   rep -> OPENPAREN exp CLOSEPAREN
Rule 125   repeat -> REPEAT
Rule 126   graphview -> graphview0 SEMICOLON
Rule 127   graphview -> graphview1 SEMICOLON
Rule 128   graphview -> graphview2 SEMICOLON
Rule 129   graphview0 -> HIDE_STAR
Rule 130   graphview0 -> SHOW_STAR
Rule 131   graphview1 -> COLOR_STAR unaExp
Rule 132   graphview1 -> SIZE_STAR unaExp
Rule 133   graphview2 -> SETXY dosExp
Rule 134   exp -> term exp1
Rule 135   exp1 -> ADDITION exp
Rule 136   exp1 -> SUBSTRACTION exp
Rule 137   exp1 -> empty
Rule 138   openP -> OPENPAREN
Rule 139   closeP -> CLOSEPAREN
Rule 140   factor -> vcte
Rule 141   factor -> factor1
Rule 142   factor1 -> factor2 vcte
Rule 143   factor1 -> openP expression closeP
Rule 144   factor2 -> ADDITION
Rule 145   factor2 -> SUBSTRACTION
Rule 146   term -> factor term1
Rule 147   term1 -> MULTIPLICATION term
Rule 148   term1 -> DIVISION term
Rule 149   term1 -> empty
Rule 150   empty -> <empty>

Terminals, with rules where they appear

ADDITION             : 135 144
ARC                  : 120
BACK                 : 119
CHAR                 : 43
CIRCLE               : 107
CLOSEBRACES          : 5 27 87 121
CLOSEBRACKET         : 37 39 46 46 47 55 63 65
CLOSEPAREN           : 28 44 45 88 91 93 95 100 101 124 139
COLOR_STAR           : 131
COMMA                : 33 98 100
CTECHAR              : 69
CTEFLOAT             : 68
CTEINT               : 37 39 67
DIVISION             : 148
ELSE                 : 85
ELSEIF               : 84
EQUALS               : 49
FLOAT                : 42
FOR                  : 91
FUN                  : 25
GO                   : 116
GREATER              : 76
HAND_DOWN            : 114
HAND_UP              : 115
HIDE_STAR            : 129
ID                   : 1 23 24 29 33 35 36 50 91 95
IF                   : 80
INT                  : 41
ISEQUAL              : 79
LEFT                 : 117
LESS                 : 77
MULTIPLICATION       : 7 147
NOTEQUAL             : 78
OPENBRACES           : 6 26 87 121
OPENBRACKET          : 37 39 46 46 47 55 63 65
OPENPAREN            : 28 44 45 86 91 93 95 100 101 124 138
PRINT                : 44
PROGRAM              : 1
READ                 : 45
RECTANGLE            : 110
REPEAT               : 125
RETURN               : 70
RIGHT                : 118
SEMICOLON            : 1 21 35 36 44 45 51 70 105 106 111 112 113 126 127 128
SETXY                : 133
SHOW_STAR            : 130
SIMPLEQUOTES         : 
SIZE_STAR            : 132
SQUARE               : 108
SUBSTRACTION         : 136 145
TRIANGLE             : 109
TWODOTS              : 91
VARS                 : 
VOID                 : 24
WHILE                : 94
error                : 

Nonterminals, with rules where they appear

assignment           : 14
assignment1          : 51 53
assignment2          : 52 53
assignment3          : 51
body                 : 80 81 82 91 92
body1                : 87 89
closeP               : 143
close_condition      : 86
condition            : 15
condition1           : 80 81
cte_char             : 60
cte_float            : 59
cte_int              : 58
declara_vars         : 1 5 10 25
dosExp               : 109 110 120 133
else                 : 82
elseif               : 81
empty                : 4 9 11 30 32 34 38 40 48 54 64 66 75 83 90 97 99 123 137 149
equals               : 35 51
exp                  : 35 46 46 47 55 56 63 65 72 73 74 91 96 98 100 100 101 124 135 136
exp1                 : 134
expression           : 44 86 93 143
expression1          : 73
factor               : 146
factor1              : 141
factor2              : 142
for                  : 13
funCall              : 21 62
funCall2             : 95 98
funCall3             : 96
function             : 3
function2            : 25
function3            : 28
function4            : 25 31
function5            : 29 33
functionI            : 25
graphfig             : 102
graphfig1            : 105
graphfig2            : 106
graphmove            : 104
graphmove0           : 111
graphmove1           : 112
graphmove2           : 113
graphr               : 20
graphr1              : 121 122
graphstmt            : 19 121 122
graphview            : 103
graphview0           : 126
graphview1           : 127
graphview2           : 128
head_cond            : 80 81
id                   : 45 51 61
inicia_fun           : 25
loop                 : 17
loper                : 74
openP                : 143
print                : 16
program              : 0
program_fun          : 2 3
program_modules      : 1
read                 : 18 57
read1                : 45
rep                  : 121
repeat               : 121
return               : 22
return1              : 70
star                 : 2
star1                : 5 8
starI                : 5
star_sign            : 6
stmt                 : 8 31 89
term                 : 134 147 148
term1                : 146
termina_fun          : 25
type                 : 23 29 33 35 36
unaExp               : 107 108 116 117 118 119 131 132
vars                 : 10
vars1                : 35 36
vars3                : 37
vcte                 : 71 140 142
vcte1                : 61
vcte3                : 63
while                : 12
while1               : 92
while_w              : 93

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON declara_vars program_modules

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON declara_vars program_modules

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON declara_vars program_modules

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . declara_vars program_modules
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (35) vars -> . type ID vars1 equals exp SEMICOLON
    (36) vars -> . type ID vars1 SEMICOLON
    (150) empty -> .
    (41) type -> . INT
    (42) type -> . FLOAT
    (43) type -> . CHAR

    FUN             reduce using rule 150 (empty -> .)
    MULTIPLICATION  reduce using rule 150 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    declara_vars                   shift and go to state 5
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 5

    (1) program -> PROGRAM ID SEMICOLON declara_vars . program_modules
    (2) program_modules -> . program_fun star
    (3) program_fun -> . function program_fun
    (4) program_fun -> . empty
    (25) function -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (150) empty -> .

    FUN             shift and go to state 16
    MULTIPLICATION  reduce using rule 150 (empty -> .)

    program_modules                shift and go to state 12
    program_fun                    shift and go to state 13
    function                       shift and go to state 14
    empty                          shift and go to state 15

state 6

    (10) declara_vars -> vars . declara_vars
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (35) vars -> . type ID vars1 equals exp SEMICOLON
    (36) vars -> . type ID vars1 SEMICOLON
    (150) empty -> .
    (41) type -> . INT
    (42) type -> . FLOAT
    (43) type -> . CHAR

    FUN             reduce using rule 150 (empty -> .)
    MULTIPLICATION  reduce using rule 150 (empty -> .)
    IF              reduce using rule 150 (empty -> .)
    PRINT           reduce using rule 150 (empty -> .)
    READ            reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    RETURN          reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    REPEAT          reduce using rule 150 (empty -> .)
    CIRCLE          reduce using rule 150 (empty -> .)
    SQUARE          reduce using rule 150 (empty -> .)
    TRIANGLE        reduce using rule 150 (empty -> .)
    RECTANGLE       reduce using rule 150 (empty -> .)
    HIDE_STAR       reduce using rule 150 (empty -> .)
    SHOW_STAR       reduce using rule 150 (empty -> .)
    COLOR_STAR      reduce using rule 150 (empty -> .)
    SIZE_STAR       reduce using rule 150 (empty -> .)
    SETXY           reduce using rule 150 (empty -> .)
    HAND_DOWN       reduce using rule 150 (empty -> .)
    HAND_UP         reduce using rule 150 (empty -> .)
    GO              reduce using rule 150 (empty -> .)
    LEFT            reduce using rule 150 (empty -> .)
    RIGHT           reduce using rule 150 (empty -> .)
    BACK            reduce using rule 150 (empty -> .)
    ARC             reduce using rule 150 (empty -> .)
    WHILE           reduce using rule 150 (empty -> .)
    CLOSEBRACES     reduce using rule 150 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    vars                           shift and go to state 6
    declara_vars                   shift and go to state 17
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 7

    (11) declara_vars -> empty .

    FUN             reduce using rule 11 (declara_vars -> empty .)
    MULTIPLICATION  reduce using rule 11 (declara_vars -> empty .)
    IF              reduce using rule 11 (declara_vars -> empty .)
    PRINT           reduce using rule 11 (declara_vars -> empty .)
    READ            reduce using rule 11 (declara_vars -> empty .)
    ID              reduce using rule 11 (declara_vars -> empty .)
    RETURN          reduce using rule 11 (declara_vars -> empty .)
    FOR             reduce using rule 11 (declara_vars -> empty .)
    REPEAT          reduce using rule 11 (declara_vars -> empty .)
    CIRCLE          reduce using rule 11 (declara_vars -> empty .)
    SQUARE          reduce using rule 11 (declara_vars -> empty .)
    TRIANGLE        reduce using rule 11 (declara_vars -> empty .)
    RECTANGLE       reduce using rule 11 (declara_vars -> empty .)
    HIDE_STAR       reduce using rule 11 (declara_vars -> empty .)
    SHOW_STAR       reduce using rule 11 (declara_vars -> empty .)
    COLOR_STAR      reduce using rule 11 (declara_vars -> empty .)
    SIZE_STAR       reduce using rule 11 (declara_vars -> empty .)
    SETXY           reduce using rule 11 (declara_vars -> empty .)
    HAND_DOWN       reduce using rule 11 (declara_vars -> empty .)
    HAND_UP         reduce using rule 11 (declara_vars -> empty .)
    GO              reduce using rule 11 (declara_vars -> empty .)
    LEFT            reduce using rule 11 (declara_vars -> empty .)
    RIGHT           reduce using rule 11 (declara_vars -> empty .)
    BACK            reduce using rule 11 (declara_vars -> empty .)
    ARC             reduce using rule 11 (declara_vars -> empty .)
    WHILE           reduce using rule 11 (declara_vars -> empty .)
    CLOSEBRACES     reduce using rule 11 (declara_vars -> empty .)


state 8

    (35) vars -> type . ID vars1 equals exp SEMICOLON
    (36) vars -> type . ID vars1 SEMICOLON

    ID              shift and go to state 18


state 9

    (41) type -> INT .

    ID              reduce using rule 41 (type -> INT .)


state 10

    (42) type -> FLOAT .

    ID              reduce using rule 42 (type -> FLOAT .)


state 11

    (43) type -> CHAR .

    ID              reduce using rule 43 (type -> CHAR .)


state 12

    (1) program -> PROGRAM ID SEMICOLON declara_vars program_modules .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON declara_vars program_modules .)


state 13

    (2) program_modules -> program_fun . star
    (5) star -> . starI declara_vars star1 CLOSEBRACES
    (6) starI -> . star_sign OPENBRACES
    (7) star_sign -> . MULTIPLICATION

    MULTIPLICATION  shift and go to state 22

    star                           shift and go to state 19
    starI                          shift and go to state 20
    star_sign                      shift and go to state 21

state 14

    (3) program_fun -> function . program_fun
    (3) program_fun -> . function program_fun
    (4) program_fun -> . empty
    (25) function -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (150) empty -> .

    FUN             shift and go to state 16
    MULTIPLICATION  reduce using rule 150 (empty -> .)

    function                       shift and go to state 14
    program_fun                    shift and go to state 23
    empty                          shift and go to state 15

state 15

    (4) program_fun -> empty .

    MULTIPLICATION  reduce using rule 4 (program_fun -> empty .)


state 16

    (25) function -> FUN . functionI function2 inicia_fun declara_vars function4 termina_fun
    (23) functionI -> . type ID
    (24) functionI -> . VOID ID
    (41) type -> . INT
    (42) type -> . FLOAT
    (43) type -> . CHAR

    VOID            shift and go to state 26
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    functionI                      shift and go to state 24
    type                           shift and go to state 25

state 17

    (10) declara_vars -> vars declara_vars .

    FUN             reduce using rule 10 (declara_vars -> vars declara_vars .)
    MULTIPLICATION  reduce using rule 10 (declara_vars -> vars declara_vars .)
    IF              reduce using rule 10 (declara_vars -> vars declara_vars .)
    PRINT           reduce using rule 10 (declara_vars -> vars declara_vars .)
    READ            reduce using rule 10 (declara_vars -> vars declara_vars .)
    ID              reduce using rule 10 (declara_vars -> vars declara_vars .)
    RETURN          reduce using rule 10 (declara_vars -> vars declara_vars .)
    FOR             reduce using rule 10 (declara_vars -> vars declara_vars .)
    REPEAT          reduce using rule 10 (declara_vars -> vars declara_vars .)
    CIRCLE          reduce using rule 10 (declara_vars -> vars declara_vars .)
    SQUARE          reduce using rule 10 (declara_vars -> vars declara_vars .)
    TRIANGLE        reduce using rule 10 (declara_vars -> vars declara_vars .)
    RECTANGLE       reduce using rule 10 (declara_vars -> vars declara_vars .)
    HIDE_STAR       reduce using rule 10 (declara_vars -> vars declara_vars .)
    SHOW_STAR       reduce using rule 10 (declara_vars -> vars declara_vars .)
    COLOR_STAR      reduce using rule 10 (declara_vars -> vars declara_vars .)
    SIZE_STAR       reduce using rule 10 (declara_vars -> vars declara_vars .)
    SETXY           reduce using rule 10 (declara_vars -> vars declara_vars .)
    HAND_DOWN       reduce using rule 10 (declara_vars -> vars declara_vars .)
    HAND_UP         reduce using rule 10 (declara_vars -> vars declara_vars .)
    GO              reduce using rule 10 (declara_vars -> vars declara_vars .)
    LEFT            reduce using rule 10 (declara_vars -> vars declara_vars .)
    RIGHT           reduce using rule 10 (declara_vars -> vars declara_vars .)
    BACK            reduce using rule 10 (declara_vars -> vars declara_vars .)
    ARC             reduce using rule 10 (declara_vars -> vars declara_vars .)
    WHILE           reduce using rule 10 (declara_vars -> vars declara_vars .)
    CLOSEBRACES     reduce using rule 10 (declara_vars -> vars declara_vars .)


state 18

    (35) vars -> type ID . vars1 equals exp SEMICOLON
    (36) vars -> type ID . vars1 SEMICOLON
    (37) vars1 -> . OPENBRACKET CTEINT CLOSEBRACKET vars3
    (38) vars1 -> . empty
    (150) empty -> .

    OPENBRACKET     shift and go to state 28
    SEMICOLON       reduce using rule 150 (empty -> .)
    EQUALS          reduce using rule 150 (empty -> .)

    vars1                          shift and go to state 27
    empty                          shift and go to state 29

state 19

    (2) program_modules -> program_fun star .

    $end            reduce using rule 2 (program_modules -> program_fun star .)


state 20

    (5) star -> starI . declara_vars star1 CLOSEBRACES
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (35) vars -> . type ID vars1 equals exp SEMICOLON
    (36) vars -> . type ID vars1 SEMICOLON
    (150) empty -> .
    (41) type -> . INT
    (42) type -> . FLOAT
    (43) type -> . CHAR

    IF              reduce using rule 150 (empty -> .)
    PRINT           reduce using rule 150 (empty -> .)
    READ            reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    RETURN          reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    REPEAT          reduce using rule 150 (empty -> .)
    CIRCLE          reduce using rule 150 (empty -> .)
    SQUARE          reduce using rule 150 (empty -> .)
    TRIANGLE        reduce using rule 150 (empty -> .)
    RECTANGLE       reduce using rule 150 (empty -> .)
    HIDE_STAR       reduce using rule 150 (empty -> .)
    SHOW_STAR       reduce using rule 150 (empty -> .)
    COLOR_STAR      reduce using rule 150 (empty -> .)
    SIZE_STAR       reduce using rule 150 (empty -> .)
    SETXY           reduce using rule 150 (empty -> .)
    HAND_DOWN       reduce using rule 150 (empty -> .)
    HAND_UP         reduce using rule 150 (empty -> .)
    GO              reduce using rule 150 (empty -> .)
    LEFT            reduce using rule 150 (empty -> .)
    RIGHT           reduce using rule 150 (empty -> .)
    BACK            reduce using rule 150 (empty -> .)
    ARC             reduce using rule 150 (empty -> .)
    WHILE           reduce using rule 150 (empty -> .)
    CLOSEBRACES     reduce using rule 150 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    declara_vars                   shift and go to state 30
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 21

    (6) starI -> star_sign . OPENBRACES

    OPENBRACES      shift and go to state 31


state 22

    (7) star_sign -> MULTIPLICATION .

    OPENBRACES      reduce using rule 7 (star_sign -> MULTIPLICATION .)


state 23

    (3) program_fun -> function program_fun .

    MULTIPLICATION  reduce using rule 3 (program_fun -> function program_fun .)


state 24

    (25) function -> FUN functionI . function2 inicia_fun declara_vars function4 termina_fun
    (28) function2 -> . OPENPAREN function3 CLOSEPAREN

    OPENPAREN       shift and go to state 33

    function2                      shift and go to state 32

state 25

    (23) functionI -> type . ID

    ID              shift and go to state 34


state 26

    (24) functionI -> VOID . ID

    ID              shift and go to state 35


state 27

    (35) vars -> type ID vars1 . equals exp SEMICOLON
    (36) vars -> type ID vars1 . SEMICOLON
    (49) equals -> . EQUALS

    SEMICOLON       shift and go to state 37
    EQUALS          shift and go to state 38

    equals                         shift and go to state 36

state 28

    (37) vars1 -> OPENBRACKET . CTEINT CLOSEBRACKET vars3

    CTEINT          shift and go to state 39


state 29

    (38) vars1 -> empty .

    SEMICOLON       reduce using rule 38 (vars1 -> empty .)
    EQUALS          reduce using rule 38 (vars1 -> empty .)


state 30

    (5) star -> starI declara_vars . star1 CLOSEBRACES
    (8) star1 -> . stmt star1
    (9) star1 -> . empty
    (14) stmt -> . assignment
    (15) stmt -> . condition
    (16) stmt -> . print
    (17) stmt -> . loop
    (18) stmt -> . read
    (19) stmt -> . graphstmt
    (20) stmt -> . graphr
    (21) stmt -> . funCall SEMICOLON
    (22) stmt -> . return
    (150) empty -> .
    (51) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (80) condition -> . IF head_cond body condition1
    (44) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (12) loop -> . while
    (13) loop -> . for
    (45) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (102) graphstmt -> . graphfig
    (103) graphstmt -> . graphview
    (104) graphstmt -> . graphmove
    (121) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (70) return -> . RETURN return1 SEMICOLON
    (50) id -> . ID
    (92) while -> . while1 body
    (91) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (105) graphfig -> . graphfig1 SEMICOLON
    (106) graphfig -> . graphfig2 SEMICOLON
    (126) graphview -> . graphview0 SEMICOLON
    (127) graphview -> . graphview1 SEMICOLON
    (128) graphview -> . graphview2 SEMICOLON
    (111) graphmove -> . graphmove0 SEMICOLON
    (112) graphmove -> . graphmove1 SEMICOLON
    (113) graphmove -> . graphmove2 SEMICOLON
    (125) repeat -> . REPEAT
    (93) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (107) graphfig1 -> . CIRCLE unaExp
    (108) graphfig1 -> . SQUARE unaExp
    (109) graphfig2 -> . TRIANGLE dosExp
    (110) graphfig2 -> . RECTANGLE dosExp
    (129) graphview0 -> . HIDE_STAR
    (130) graphview0 -> . SHOW_STAR
    (131) graphview1 -> . COLOR_STAR unaExp
    (132) graphview1 -> . SIZE_STAR unaExp
    (133) graphview2 -> . SETXY dosExp
    (114) graphmove0 -> . HAND_DOWN
    (115) graphmove0 -> . HAND_UP
    (116) graphmove1 -> . GO unaExp
    (117) graphmove1 -> . LEFT unaExp
    (118) graphmove1 -> . RIGHT unaExp
    (119) graphmove1 -> . BACK unaExp
    (120) graphmove2 -> . ARC dosExp
    (94) while_w -> . WHILE

    CLOSEBRACES     reduce using rule 150 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    ID              shift and go to state 62
    RETURN          shift and go to state 63
    FOR             shift and go to state 65
    REPEAT          shift and go to state 74
    CIRCLE          shift and go to state 76
    SQUARE          shift and go to state 77
    TRIANGLE        shift and go to state 78
    RECTANGLE       shift and go to state 79
    HIDE_STAR       shift and go to state 80
    SHOW_STAR       shift and go to state 81
    COLOR_STAR      shift and go to state 82
    SIZE_STAR       shift and go to state 83
    SETXY           shift and go to state 84
    HAND_DOWN       shift and go to state 85
    HAND_UP         shift and go to state 86
    GO              shift and go to state 87
    LEFT            shift and go to state 88
    RIGHT           shift and go to state 89
    BACK            shift and go to state 90
    ARC             shift and go to state 91
    WHILE           shift and go to state 92

    star1                          shift and go to state 40
    stmt                           shift and go to state 41
    empty                          shift and go to state 42
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    graphr                         shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    repeat                         shift and go to state 61
    while1                         shift and go to state 64
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73
    while_w                        shift and go to state 75

state 31

    (6) starI -> star_sign OPENBRACES .

    INT             reduce using rule 6 (starI -> star_sign OPENBRACES .)
    FLOAT           reduce using rule 6 (starI -> star_sign OPENBRACES .)
    CHAR            reduce using rule 6 (starI -> star_sign OPENBRACES .)
    IF              reduce using rule 6 (starI -> star_sign OPENBRACES .)
    PRINT           reduce using rule 6 (starI -> star_sign OPENBRACES .)
    READ            reduce using rule 6 (starI -> star_sign OPENBRACES .)
    ID              reduce using rule 6 (starI -> star_sign OPENBRACES .)
    RETURN          reduce using rule 6 (starI -> star_sign OPENBRACES .)
    FOR             reduce using rule 6 (starI -> star_sign OPENBRACES .)
    REPEAT          reduce using rule 6 (starI -> star_sign OPENBRACES .)
    CIRCLE          reduce using rule 6 (starI -> star_sign OPENBRACES .)
    SQUARE          reduce using rule 6 (starI -> star_sign OPENBRACES .)
    TRIANGLE        reduce using rule 6 (starI -> star_sign OPENBRACES .)
    RECTANGLE       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    HIDE_STAR       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    SHOW_STAR       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    COLOR_STAR      reduce using rule 6 (starI -> star_sign OPENBRACES .)
    SIZE_STAR       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    SETXY           reduce using rule 6 (starI -> star_sign OPENBRACES .)
    HAND_DOWN       reduce using rule 6 (starI -> star_sign OPENBRACES .)
    HAND_UP         reduce using rule 6 (starI -> star_sign OPENBRACES .)
    GO              reduce using rule 6 (starI -> star_sign OPENBRACES .)
    LEFT            reduce using rule 6 (starI -> star_sign OPENBRACES .)
    RIGHT           reduce using rule 6 (starI -> star_sign OPENBRACES .)
    BACK            reduce using rule 6 (starI -> star_sign OPENBRACES .)
    ARC             reduce using rule 6 (starI -> star_sign OPENBRACES .)
    WHILE           reduce using rule 6 (starI -> star_sign OPENBRACES .)
    CLOSEBRACES     reduce using rule 6 (starI -> star_sign OPENBRACES .)


state 32

    (25) function -> FUN functionI function2 . inicia_fun declara_vars function4 termina_fun
    (26) inicia_fun -> . OPENBRACES

    OPENBRACES      shift and go to state 94

    inicia_fun                     shift and go to state 93

state 33

    (28) function2 -> OPENPAREN . function3 CLOSEPAREN
    (29) function3 -> . type ID function5
    (30) function3 -> . empty
    (41) type -> . INT
    (42) type -> . FLOAT
    (43) type -> . CHAR
    (150) empty -> .

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    CLOSEPAREN      reduce using rule 150 (empty -> .)

    function3                      shift and go to state 95
    type                           shift and go to state 96
    empty                          shift and go to state 97

state 34

    (23) functionI -> type ID .

    OPENPAREN       reduce using rule 23 (functionI -> type ID .)


state 35

    (24) functionI -> VOID ID .

    OPENPAREN       reduce using rule 24 (functionI -> VOID ID .)


state 36

    (35) vars -> type ID vars1 equals . exp SEMICOLON
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    exp                            shift and go to state 99
    term                           shift and go to state 100
    factor                         shift and go to state 101
    vcte                           shift and go to state 102
    factor1                        shift and go to state 103
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108
    factor2                        shift and go to state 109
    openP                          shift and go to state 110

state 37

    (36) vars -> type ID vars1 SEMICOLON .

    INT             reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    FLOAT           reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    CHAR            reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    FUN             reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    MULTIPLICATION  reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    IF              reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    PRINT           reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    READ            reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    ID              reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    RETURN          reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    FOR             reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    REPEAT          reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    CIRCLE          reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    SQUARE          reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    TRIANGLE        reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    RECTANGLE       reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    HIDE_STAR       reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    SHOW_STAR       reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    COLOR_STAR      reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    SIZE_STAR       reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    SETXY           reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    HAND_DOWN       reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    HAND_UP         reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    GO              reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    LEFT            reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    RIGHT           reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    BACK            reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    ARC             reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    WHILE           reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 36 (vars -> type ID vars1 SEMICOLON .)


state 38

    (49) equals -> EQUALS .

    CTEINT          reduce using rule 49 (equals -> EQUALS .)
    CTEFLOAT        reduce using rule 49 (equals -> EQUALS .)
    CTECHAR         reduce using rule 49 (equals -> EQUALS .)
    ID              reduce using rule 49 (equals -> EQUALS .)
    ADDITION        reduce using rule 49 (equals -> EQUALS .)
    SUBSTRACTION    reduce using rule 49 (equals -> EQUALS .)
    OPENPAREN       reduce using rule 49 (equals -> EQUALS .)
    READ            reduce using rule 49 (equals -> EQUALS .)


state 39

    (37) vars1 -> OPENBRACKET CTEINT . CLOSEBRACKET vars3

    CLOSEBRACKET    shift and go to state 117


state 40

    (5) star -> starI declara_vars star1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 118


state 41

    (8) star1 -> stmt . star1
    (8) star1 -> . stmt star1
    (9) star1 -> . empty
    (14) stmt -> . assignment
    (15) stmt -> . condition
    (16) stmt -> . print
    (17) stmt -> . loop
    (18) stmt -> . read
    (19) stmt -> . graphstmt
    (20) stmt -> . graphr
    (21) stmt -> . funCall SEMICOLON
    (22) stmt -> . return
    (150) empty -> .
    (51) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (80) condition -> . IF head_cond body condition1
    (44) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (12) loop -> . while
    (13) loop -> . for
    (45) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (102) graphstmt -> . graphfig
    (103) graphstmt -> . graphview
    (104) graphstmt -> . graphmove
    (121) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (70) return -> . RETURN return1 SEMICOLON
    (50) id -> . ID
    (92) while -> . while1 body
    (91) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (105) graphfig -> . graphfig1 SEMICOLON
    (106) graphfig -> . graphfig2 SEMICOLON
    (126) graphview -> . graphview0 SEMICOLON
    (127) graphview -> . graphview1 SEMICOLON
    (128) graphview -> . graphview2 SEMICOLON
    (111) graphmove -> . graphmove0 SEMICOLON
    (112) graphmove -> . graphmove1 SEMICOLON
    (113) graphmove -> . graphmove2 SEMICOLON
    (125) repeat -> . REPEAT
    (93) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (107) graphfig1 -> . CIRCLE unaExp
    (108) graphfig1 -> . SQUARE unaExp
    (109) graphfig2 -> . TRIANGLE dosExp
    (110) graphfig2 -> . RECTANGLE dosExp
    (129) graphview0 -> . HIDE_STAR
    (130) graphview0 -> . SHOW_STAR
    (131) graphview1 -> . COLOR_STAR unaExp
    (132) graphview1 -> . SIZE_STAR unaExp
    (133) graphview2 -> . SETXY dosExp
    (114) graphmove0 -> . HAND_DOWN
    (115) graphmove0 -> . HAND_UP
    (116) graphmove1 -> . GO unaExp
    (117) graphmove1 -> . LEFT unaExp
    (118) graphmove1 -> . RIGHT unaExp
    (119) graphmove1 -> . BACK unaExp
    (120) graphmove2 -> . ARC dosExp
    (94) while_w -> . WHILE

    CLOSEBRACES     reduce using rule 150 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    ID              shift and go to state 62
    RETURN          shift and go to state 63
    FOR             shift and go to state 65
    REPEAT          shift and go to state 74
    CIRCLE          shift and go to state 76
    SQUARE          shift and go to state 77
    TRIANGLE        shift and go to state 78
    RECTANGLE       shift and go to state 79
    HIDE_STAR       shift and go to state 80
    SHOW_STAR       shift and go to state 81
    COLOR_STAR      shift and go to state 82
    SIZE_STAR       shift and go to state 83
    SETXY           shift and go to state 84
    HAND_DOWN       shift and go to state 85
    HAND_UP         shift and go to state 86
    GO              shift and go to state 87
    LEFT            shift and go to state 88
    RIGHT           shift and go to state 89
    BACK            shift and go to state 90
    ARC             shift and go to state 91
    WHILE           shift and go to state 92

    stmt                           shift and go to state 41
    star1                          shift and go to state 119
    empty                          shift and go to state 42
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    graphr                         shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    repeat                         shift and go to state 61
    while1                         shift and go to state 64
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73
    while_w                        shift and go to state 75

state 42

    (9) star1 -> empty .

    CLOSEBRACES     reduce using rule 9 (star1 -> empty .)


state 43

    (14) stmt -> assignment .

    IF              reduce using rule 14 (stmt -> assignment .)
    PRINT           reduce using rule 14 (stmt -> assignment .)
    READ            reduce using rule 14 (stmt -> assignment .)
    ID              reduce using rule 14 (stmt -> assignment .)
    RETURN          reduce using rule 14 (stmt -> assignment .)
    FOR             reduce using rule 14 (stmt -> assignment .)
    REPEAT          reduce using rule 14 (stmt -> assignment .)
    CIRCLE          reduce using rule 14 (stmt -> assignment .)
    SQUARE          reduce using rule 14 (stmt -> assignment .)
    TRIANGLE        reduce using rule 14 (stmt -> assignment .)
    RECTANGLE       reduce using rule 14 (stmt -> assignment .)
    HIDE_STAR       reduce using rule 14 (stmt -> assignment .)
    SHOW_STAR       reduce using rule 14 (stmt -> assignment .)
    COLOR_STAR      reduce using rule 14 (stmt -> assignment .)
    SIZE_STAR       reduce using rule 14 (stmt -> assignment .)
    SETXY           reduce using rule 14 (stmt -> assignment .)
    HAND_DOWN       reduce using rule 14 (stmt -> assignment .)
    HAND_UP         reduce using rule 14 (stmt -> assignment .)
    GO              reduce using rule 14 (stmt -> assignment .)
    LEFT            reduce using rule 14 (stmt -> assignment .)
    RIGHT           reduce using rule 14 (stmt -> assignment .)
    BACK            reduce using rule 14 (stmt -> assignment .)
    ARC             reduce using rule 14 (stmt -> assignment .)
    WHILE           reduce using rule 14 (stmt -> assignment .)
    CLOSEBRACES     reduce using rule 14 (stmt -> assignment .)


state 44

    (15) stmt -> condition .

    IF              reduce using rule 15 (stmt -> condition .)
    PRINT           reduce using rule 15 (stmt -> condition .)
    READ            reduce using rule 15 (stmt -> condition .)
    ID              reduce using rule 15 (stmt -> condition .)
    RETURN          reduce using rule 15 (stmt -> condition .)
    FOR             reduce using rule 15 (stmt -> condition .)
    REPEAT          reduce using rule 15 (stmt -> condition .)
    CIRCLE          reduce using rule 15 (stmt -> condition .)
    SQUARE          reduce using rule 15 (stmt -> condition .)
    TRIANGLE        reduce using rule 15 (stmt -> condition .)
    RECTANGLE       reduce using rule 15 (stmt -> condition .)
    HIDE_STAR       reduce using rule 15 (stmt -> condition .)
    SHOW_STAR       reduce using rule 15 (stmt -> condition .)
    COLOR_STAR      reduce using rule 15 (stmt -> condition .)
    SIZE_STAR       reduce using rule 15 (stmt -> condition .)
    SETXY           reduce using rule 15 (stmt -> condition .)
    HAND_DOWN       reduce using rule 15 (stmt -> condition .)
    HAND_UP         reduce using rule 15 (stmt -> condition .)
    GO              reduce using rule 15 (stmt -> condition .)
    LEFT            reduce using rule 15 (stmt -> condition .)
    RIGHT           reduce using rule 15 (stmt -> condition .)
    BACK            reduce using rule 15 (stmt -> condition .)
    ARC             reduce using rule 15 (stmt -> condition .)
    WHILE           reduce using rule 15 (stmt -> condition .)
    CLOSEBRACES     reduce using rule 15 (stmt -> condition .)


state 45

    (16) stmt -> print .

    IF              reduce using rule 16 (stmt -> print .)
    PRINT           reduce using rule 16 (stmt -> print .)
    READ            reduce using rule 16 (stmt -> print .)
    ID              reduce using rule 16 (stmt -> print .)
    RETURN          reduce using rule 16 (stmt -> print .)
    FOR             reduce using rule 16 (stmt -> print .)
    REPEAT          reduce using rule 16 (stmt -> print .)
    CIRCLE          reduce using rule 16 (stmt -> print .)
    SQUARE          reduce using rule 16 (stmt -> print .)
    TRIANGLE        reduce using rule 16 (stmt -> print .)
    RECTANGLE       reduce using rule 16 (stmt -> print .)
    HIDE_STAR       reduce using rule 16 (stmt -> print .)
    SHOW_STAR       reduce using rule 16 (stmt -> print .)
    COLOR_STAR      reduce using rule 16 (stmt -> print .)
    SIZE_STAR       reduce using rule 16 (stmt -> print .)
    SETXY           reduce using rule 16 (stmt -> print .)
    HAND_DOWN       reduce using rule 16 (stmt -> print .)
    HAND_UP         reduce using rule 16 (stmt -> print .)
    GO              reduce using rule 16 (stmt -> print .)
    LEFT            reduce using rule 16 (stmt -> print .)
    RIGHT           reduce using rule 16 (stmt -> print .)
    BACK            reduce using rule 16 (stmt -> print .)
    ARC             reduce using rule 16 (stmt -> print .)
    WHILE           reduce using rule 16 (stmt -> print .)
    CLOSEBRACES     reduce using rule 16 (stmt -> print .)


state 46

    (17) stmt -> loop .

    IF              reduce using rule 17 (stmt -> loop .)
    PRINT           reduce using rule 17 (stmt -> loop .)
    READ            reduce using rule 17 (stmt -> loop .)
    ID              reduce using rule 17 (stmt -> loop .)
    RETURN          reduce using rule 17 (stmt -> loop .)
    FOR             reduce using rule 17 (stmt -> loop .)
    REPEAT          reduce using rule 17 (stmt -> loop .)
    CIRCLE          reduce using rule 17 (stmt -> loop .)
    SQUARE          reduce using rule 17 (stmt -> loop .)
    TRIANGLE        reduce using rule 17 (stmt -> loop .)
    RECTANGLE       reduce using rule 17 (stmt -> loop .)
    HIDE_STAR       reduce using rule 17 (stmt -> loop .)
    SHOW_STAR       reduce using rule 17 (stmt -> loop .)
    COLOR_STAR      reduce using rule 17 (stmt -> loop .)
    SIZE_STAR       reduce using rule 17 (stmt -> loop .)
    SETXY           reduce using rule 17 (stmt -> loop .)
    HAND_DOWN       reduce using rule 17 (stmt -> loop .)
    HAND_UP         reduce using rule 17 (stmt -> loop .)
    GO              reduce using rule 17 (stmt -> loop .)
    LEFT            reduce using rule 17 (stmt -> loop .)
    RIGHT           reduce using rule 17 (stmt -> loop .)
    BACK            reduce using rule 17 (stmt -> loop .)
    ARC             reduce using rule 17 (stmt -> loop .)
    WHILE           reduce using rule 17 (stmt -> loop .)
    CLOSEBRACES     reduce using rule 17 (stmt -> loop .)


state 47

    (18) stmt -> read .

    IF              reduce using rule 18 (stmt -> read .)
    PRINT           reduce using rule 18 (stmt -> read .)
    READ            reduce using rule 18 (stmt -> read .)
    ID              reduce using rule 18 (stmt -> read .)
    RETURN          reduce using rule 18 (stmt -> read .)
    FOR             reduce using rule 18 (stmt -> read .)
    REPEAT          reduce using rule 18 (stmt -> read .)
    CIRCLE          reduce using rule 18 (stmt -> read .)
    SQUARE          reduce using rule 18 (stmt -> read .)
    TRIANGLE        reduce using rule 18 (stmt -> read .)
    RECTANGLE       reduce using rule 18 (stmt -> read .)
    HIDE_STAR       reduce using rule 18 (stmt -> read .)
    SHOW_STAR       reduce using rule 18 (stmt -> read .)
    COLOR_STAR      reduce using rule 18 (stmt -> read .)
    SIZE_STAR       reduce using rule 18 (stmt -> read .)
    SETXY           reduce using rule 18 (stmt -> read .)
    HAND_DOWN       reduce using rule 18 (stmt -> read .)
    HAND_UP         reduce using rule 18 (stmt -> read .)
    GO              reduce using rule 18 (stmt -> read .)
    LEFT            reduce using rule 18 (stmt -> read .)
    RIGHT           reduce using rule 18 (stmt -> read .)
    BACK            reduce using rule 18 (stmt -> read .)
    ARC             reduce using rule 18 (stmt -> read .)
    WHILE           reduce using rule 18 (stmt -> read .)
    CLOSEBRACES     reduce using rule 18 (stmt -> read .)


state 48

    (19) stmt -> graphstmt .

    IF              reduce using rule 19 (stmt -> graphstmt .)
    PRINT           reduce using rule 19 (stmt -> graphstmt .)
    READ            reduce using rule 19 (stmt -> graphstmt .)
    ID              reduce using rule 19 (stmt -> graphstmt .)
    RETURN          reduce using rule 19 (stmt -> graphstmt .)
    FOR             reduce using rule 19 (stmt -> graphstmt .)
    REPEAT          reduce using rule 19 (stmt -> graphstmt .)
    CIRCLE          reduce using rule 19 (stmt -> graphstmt .)
    SQUARE          reduce using rule 19 (stmt -> graphstmt .)
    TRIANGLE        reduce using rule 19 (stmt -> graphstmt .)
    RECTANGLE       reduce using rule 19 (stmt -> graphstmt .)
    HIDE_STAR       reduce using rule 19 (stmt -> graphstmt .)
    SHOW_STAR       reduce using rule 19 (stmt -> graphstmt .)
    COLOR_STAR      reduce using rule 19 (stmt -> graphstmt .)
    SIZE_STAR       reduce using rule 19 (stmt -> graphstmt .)
    SETXY           reduce using rule 19 (stmt -> graphstmt .)
    HAND_DOWN       reduce using rule 19 (stmt -> graphstmt .)
    HAND_UP         reduce using rule 19 (stmt -> graphstmt .)
    GO              reduce using rule 19 (stmt -> graphstmt .)
    LEFT            reduce using rule 19 (stmt -> graphstmt .)
    RIGHT           reduce using rule 19 (stmt -> graphstmt .)
    BACK            reduce using rule 19 (stmt -> graphstmt .)
    ARC             reduce using rule 19 (stmt -> graphstmt .)
    WHILE           reduce using rule 19 (stmt -> graphstmt .)
    CLOSEBRACES     reduce using rule 19 (stmt -> graphstmt .)


state 49

    (20) stmt -> graphr .

    IF              reduce using rule 20 (stmt -> graphr .)
    PRINT           reduce using rule 20 (stmt -> graphr .)
    READ            reduce using rule 20 (stmt -> graphr .)
    ID              reduce using rule 20 (stmt -> graphr .)
    RETURN          reduce using rule 20 (stmt -> graphr .)
    FOR             reduce using rule 20 (stmt -> graphr .)
    REPEAT          reduce using rule 20 (stmt -> graphr .)
    CIRCLE          reduce using rule 20 (stmt -> graphr .)
    SQUARE          reduce using rule 20 (stmt -> graphr .)
    TRIANGLE        reduce using rule 20 (stmt -> graphr .)
    RECTANGLE       reduce using rule 20 (stmt -> graphr .)
    HIDE_STAR       reduce using rule 20 (stmt -> graphr .)
    SHOW_STAR       reduce using rule 20 (stmt -> graphr .)
    COLOR_STAR      reduce using rule 20 (stmt -> graphr .)
    SIZE_STAR       reduce using rule 20 (stmt -> graphr .)
    SETXY           reduce using rule 20 (stmt -> graphr .)
    HAND_DOWN       reduce using rule 20 (stmt -> graphr .)
    HAND_UP         reduce using rule 20 (stmt -> graphr .)
    GO              reduce using rule 20 (stmt -> graphr .)
    LEFT            reduce using rule 20 (stmt -> graphr .)
    RIGHT           reduce using rule 20 (stmt -> graphr .)
    BACK            reduce using rule 20 (stmt -> graphr .)
    ARC             reduce using rule 20 (stmt -> graphr .)
    WHILE           reduce using rule 20 (stmt -> graphr .)
    CLOSEBRACES     reduce using rule 20 (stmt -> graphr .)


state 50

    (21) stmt -> funCall . SEMICOLON

    SEMICOLON       shift and go to state 120


state 51

    (22) stmt -> return .

    IF              reduce using rule 22 (stmt -> return .)
    PRINT           reduce using rule 22 (stmt -> return .)
    READ            reduce using rule 22 (stmt -> return .)
    ID              reduce using rule 22 (stmt -> return .)
    RETURN          reduce using rule 22 (stmt -> return .)
    FOR             reduce using rule 22 (stmt -> return .)
    REPEAT          reduce using rule 22 (stmt -> return .)
    CIRCLE          reduce using rule 22 (stmt -> return .)
    SQUARE          reduce using rule 22 (stmt -> return .)
    TRIANGLE        reduce using rule 22 (stmt -> return .)
    RECTANGLE       reduce using rule 22 (stmt -> return .)
    HIDE_STAR       reduce using rule 22 (stmt -> return .)
    SHOW_STAR       reduce using rule 22 (stmt -> return .)
    COLOR_STAR      reduce using rule 22 (stmt -> return .)
    SIZE_STAR       reduce using rule 22 (stmt -> return .)
    SETXY           reduce using rule 22 (stmt -> return .)
    HAND_DOWN       reduce using rule 22 (stmt -> return .)
    HAND_UP         reduce using rule 22 (stmt -> return .)
    GO              reduce using rule 22 (stmt -> return .)
    LEFT            reduce using rule 22 (stmt -> return .)
    RIGHT           reduce using rule 22 (stmt -> return .)
    BACK            reduce using rule 22 (stmt -> return .)
    ARC             reduce using rule 22 (stmt -> return .)
    WHILE           reduce using rule 22 (stmt -> return .)
    CLOSEBRACES     reduce using rule 22 (stmt -> return .)


state 52

    (51) assignment -> id . assignment1 equals assignment3 SEMICOLON
    (52) assignment1 -> . assignment2
    (53) assignment1 -> . assignment2 assignment1
    (54) assignment1 -> . empty
    (55) assignment2 -> . OPENBRACKET exp CLOSEBRACKET
    (150) empty -> .

    OPENBRACKET     shift and go to state 124
    EQUALS          reduce using rule 150 (empty -> .)

    assignment1                    shift and go to state 121
    assignment2                    shift and go to state 122
    empty                          shift and go to state 123

state 53

    (80) condition -> IF . head_cond body condition1
    (86) head_cond -> . OPENPAREN expression close_condition

    OPENPAREN       shift and go to state 126

    head_cond                      shift and go to state 125

state 54

    (44) print -> PRINT . OPENPAREN expression CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 127


state 55

    (12) loop -> while .

    IF              reduce using rule 12 (loop -> while .)
    PRINT           reduce using rule 12 (loop -> while .)
    READ            reduce using rule 12 (loop -> while .)
    ID              reduce using rule 12 (loop -> while .)
    RETURN          reduce using rule 12 (loop -> while .)
    FOR             reduce using rule 12 (loop -> while .)
    REPEAT          reduce using rule 12 (loop -> while .)
    CIRCLE          reduce using rule 12 (loop -> while .)
    SQUARE          reduce using rule 12 (loop -> while .)
    TRIANGLE        reduce using rule 12 (loop -> while .)
    RECTANGLE       reduce using rule 12 (loop -> while .)
    HIDE_STAR       reduce using rule 12 (loop -> while .)
    SHOW_STAR       reduce using rule 12 (loop -> while .)
    COLOR_STAR      reduce using rule 12 (loop -> while .)
    SIZE_STAR       reduce using rule 12 (loop -> while .)
    SETXY           reduce using rule 12 (loop -> while .)
    HAND_DOWN       reduce using rule 12 (loop -> while .)
    HAND_UP         reduce using rule 12 (loop -> while .)
    GO              reduce using rule 12 (loop -> while .)
    LEFT            reduce using rule 12 (loop -> while .)
    RIGHT           reduce using rule 12 (loop -> while .)
    BACK            reduce using rule 12 (loop -> while .)
    ARC             reduce using rule 12 (loop -> while .)
    WHILE           reduce using rule 12 (loop -> while .)
    CLOSEBRACES     reduce using rule 12 (loop -> while .)


state 56

    (13) loop -> for .

    IF              reduce using rule 13 (loop -> for .)
    PRINT           reduce using rule 13 (loop -> for .)
    READ            reduce using rule 13 (loop -> for .)
    ID              reduce using rule 13 (loop -> for .)
    RETURN          reduce using rule 13 (loop -> for .)
    FOR             reduce using rule 13 (loop -> for .)
    REPEAT          reduce using rule 13 (loop -> for .)
    CIRCLE          reduce using rule 13 (loop -> for .)
    SQUARE          reduce using rule 13 (loop -> for .)
    TRIANGLE        reduce using rule 13 (loop -> for .)
    RECTANGLE       reduce using rule 13 (loop -> for .)
    HIDE_STAR       reduce using rule 13 (loop -> for .)
    SHOW_STAR       reduce using rule 13 (loop -> for .)
    COLOR_STAR      reduce using rule 13 (loop -> for .)
    SIZE_STAR       reduce using rule 13 (loop -> for .)
    SETXY           reduce using rule 13 (loop -> for .)
    HAND_DOWN       reduce using rule 13 (loop -> for .)
    HAND_UP         reduce using rule 13 (loop -> for .)
    GO              reduce using rule 13 (loop -> for .)
    LEFT            reduce using rule 13 (loop -> for .)
    RIGHT           reduce using rule 13 (loop -> for .)
    BACK            reduce using rule 13 (loop -> for .)
    ARC             reduce using rule 13 (loop -> for .)
    WHILE           reduce using rule 13 (loop -> for .)
    CLOSEBRACES     reduce using rule 13 (loop -> for .)


state 57

    (45) read -> READ . OPENPAREN id read1 CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 128


state 58

    (102) graphstmt -> graphfig .

    IF              reduce using rule 102 (graphstmt -> graphfig .)
    PRINT           reduce using rule 102 (graphstmt -> graphfig .)
    READ            reduce using rule 102 (graphstmt -> graphfig .)
    ID              reduce using rule 102 (graphstmt -> graphfig .)
    RETURN          reduce using rule 102 (graphstmt -> graphfig .)
    FOR             reduce using rule 102 (graphstmt -> graphfig .)
    REPEAT          reduce using rule 102 (graphstmt -> graphfig .)
    CIRCLE          reduce using rule 102 (graphstmt -> graphfig .)
    SQUARE          reduce using rule 102 (graphstmt -> graphfig .)
    TRIANGLE        reduce using rule 102 (graphstmt -> graphfig .)
    RECTANGLE       reduce using rule 102 (graphstmt -> graphfig .)
    HIDE_STAR       reduce using rule 102 (graphstmt -> graphfig .)
    SHOW_STAR       reduce using rule 102 (graphstmt -> graphfig .)
    COLOR_STAR      reduce using rule 102 (graphstmt -> graphfig .)
    SIZE_STAR       reduce using rule 102 (graphstmt -> graphfig .)
    SETXY           reduce using rule 102 (graphstmt -> graphfig .)
    HAND_DOWN       reduce using rule 102 (graphstmt -> graphfig .)
    HAND_UP         reduce using rule 102 (graphstmt -> graphfig .)
    GO              reduce using rule 102 (graphstmt -> graphfig .)
    LEFT            reduce using rule 102 (graphstmt -> graphfig .)
    RIGHT           reduce using rule 102 (graphstmt -> graphfig .)
    BACK            reduce using rule 102 (graphstmt -> graphfig .)
    ARC             reduce using rule 102 (graphstmt -> graphfig .)
    WHILE           reduce using rule 102 (graphstmt -> graphfig .)
    CLOSEBRACES     reduce using rule 102 (graphstmt -> graphfig .)


state 59

    (103) graphstmt -> graphview .

    IF              reduce using rule 103 (graphstmt -> graphview .)
    PRINT           reduce using rule 103 (graphstmt -> graphview .)
    READ            reduce using rule 103 (graphstmt -> graphview .)
    ID              reduce using rule 103 (graphstmt -> graphview .)
    RETURN          reduce using rule 103 (graphstmt -> graphview .)
    FOR             reduce using rule 103 (graphstmt -> graphview .)
    REPEAT          reduce using rule 103 (graphstmt -> graphview .)
    CIRCLE          reduce using rule 103 (graphstmt -> graphview .)
    SQUARE          reduce using rule 103 (graphstmt -> graphview .)
    TRIANGLE        reduce using rule 103 (graphstmt -> graphview .)
    RECTANGLE       reduce using rule 103 (graphstmt -> graphview .)
    HIDE_STAR       reduce using rule 103 (graphstmt -> graphview .)
    SHOW_STAR       reduce using rule 103 (graphstmt -> graphview .)
    COLOR_STAR      reduce using rule 103 (graphstmt -> graphview .)
    SIZE_STAR       reduce using rule 103 (graphstmt -> graphview .)
    SETXY           reduce using rule 103 (graphstmt -> graphview .)
    HAND_DOWN       reduce using rule 103 (graphstmt -> graphview .)
    HAND_UP         reduce using rule 103 (graphstmt -> graphview .)
    GO              reduce using rule 103 (graphstmt -> graphview .)
    LEFT            reduce using rule 103 (graphstmt -> graphview .)
    RIGHT           reduce using rule 103 (graphstmt -> graphview .)
    BACK            reduce using rule 103 (graphstmt -> graphview .)
    ARC             reduce using rule 103 (graphstmt -> graphview .)
    WHILE           reduce using rule 103 (graphstmt -> graphview .)
    CLOSEBRACES     reduce using rule 103 (graphstmt -> graphview .)


state 60

    (104) graphstmt -> graphmove .

    IF              reduce using rule 104 (graphstmt -> graphmove .)
    PRINT           reduce using rule 104 (graphstmt -> graphmove .)
    READ            reduce using rule 104 (graphstmt -> graphmove .)
    ID              reduce using rule 104 (graphstmt -> graphmove .)
    RETURN          reduce using rule 104 (graphstmt -> graphmove .)
    FOR             reduce using rule 104 (graphstmt -> graphmove .)
    REPEAT          reduce using rule 104 (graphstmt -> graphmove .)
    CIRCLE          reduce using rule 104 (graphstmt -> graphmove .)
    SQUARE          reduce using rule 104 (graphstmt -> graphmove .)
    TRIANGLE        reduce using rule 104 (graphstmt -> graphmove .)
    RECTANGLE       reduce using rule 104 (graphstmt -> graphmove .)
    HIDE_STAR       reduce using rule 104 (graphstmt -> graphmove .)
    SHOW_STAR       reduce using rule 104 (graphstmt -> graphmove .)
    COLOR_STAR      reduce using rule 104 (graphstmt -> graphmove .)
    SIZE_STAR       reduce using rule 104 (graphstmt -> graphmove .)
    SETXY           reduce using rule 104 (graphstmt -> graphmove .)
    HAND_DOWN       reduce using rule 104 (graphstmt -> graphmove .)
    HAND_UP         reduce using rule 104 (graphstmt -> graphmove .)
    GO              reduce using rule 104 (graphstmt -> graphmove .)
    LEFT            reduce using rule 104 (graphstmt -> graphmove .)
    RIGHT           reduce using rule 104 (graphstmt -> graphmove .)
    BACK            reduce using rule 104 (graphstmt -> graphmove .)
    ARC             reduce using rule 104 (graphstmt -> graphmove .)
    WHILE           reduce using rule 104 (graphstmt -> graphmove .)
    CLOSEBRACES     reduce using rule 104 (graphstmt -> graphmove .)


state 61

    (121) graphr -> repeat . rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (124) rep -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 130

    rep                            shift and go to state 129

state 62

    (95) funCall -> ID . OPENPAREN funCall2 CLOSEPAREN
    (50) id -> ID .

    OPENPAREN       shift and go to state 131
    OPENBRACKET     reduce using rule 50 (id -> ID .)
    EQUALS          reduce using rule 50 (id -> ID .)


state 63

    (70) return -> RETURN . return1 SEMICOLON
    (71) return1 -> . vcte
    (72) return1 -> . exp
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (134) exp -> . term exp1
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    return1                        shift and go to state 132
    vcte                           shift and go to state 133
    exp                            shift and go to state 134
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108
    term                           shift and go to state 100
    factor                         shift and go to state 101
    factor1                        shift and go to state 103
    factor2                        shift and go to state 109
    openP                          shift and go to state 110

state 64

    (92) while -> while1 . body
    (87) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 136

    body                           shift and go to state 135

state 65

    (91) for -> FOR . OPENPAREN ID TWODOTS exp CLOSEPAREN body

    OPENPAREN       shift and go to state 137


state 66

    (105) graphfig -> graphfig1 . SEMICOLON

    SEMICOLON       shift and go to state 138


state 67

    (106) graphfig -> graphfig2 . SEMICOLON

    SEMICOLON       shift and go to state 139


state 68

    (126) graphview -> graphview0 . SEMICOLON

    SEMICOLON       shift and go to state 140


state 69

    (127) graphview -> graphview1 . SEMICOLON

    SEMICOLON       shift and go to state 141


state 70

    (128) graphview -> graphview2 . SEMICOLON

    SEMICOLON       shift and go to state 142


state 71

    (111) graphmove -> graphmove0 . SEMICOLON

    SEMICOLON       shift and go to state 143


state 72

    (112) graphmove -> graphmove1 . SEMICOLON

    SEMICOLON       shift and go to state 144


state 73

    (113) graphmove -> graphmove2 . SEMICOLON

    SEMICOLON       shift and go to state 145


state 74

    (125) repeat -> REPEAT .

    OPENPAREN       reduce using rule 125 (repeat -> REPEAT .)


state 75

    (93) while1 -> while_w . OPENPAREN expression CLOSEPAREN

    OPENPAREN       shift and go to state 146


state 76

    (107) graphfig1 -> CIRCLE . unaExp
    (101) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 148

    unaExp                         shift and go to state 147

state 77

    (108) graphfig1 -> SQUARE . unaExp
    (101) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 148

    unaExp                         shift and go to state 149

state 78

    (109) graphfig2 -> TRIANGLE . dosExp
    (100) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 151

    dosExp                         shift and go to state 150

state 79

    (110) graphfig2 -> RECTANGLE . dosExp
    (100) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 151

    dosExp                         shift and go to state 152

state 80

    (129) graphview0 -> HIDE_STAR .

    SEMICOLON       reduce using rule 129 (graphview0 -> HIDE_STAR .)


state 81

    (130) graphview0 -> SHOW_STAR .

    SEMICOLON       reduce using rule 130 (graphview0 -> SHOW_STAR .)


state 82

    (131) graphview1 -> COLOR_STAR . unaExp
    (101) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 148

    unaExp                         shift and go to state 153

state 83

    (132) graphview1 -> SIZE_STAR . unaExp
    (101) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 148

    unaExp                         shift and go to state 154

state 84

    (133) graphview2 -> SETXY . dosExp
    (100) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 151

    dosExp                         shift and go to state 155

state 85

    (114) graphmove0 -> HAND_DOWN .

    SEMICOLON       reduce using rule 114 (graphmove0 -> HAND_DOWN .)


state 86

    (115) graphmove0 -> HAND_UP .

    SEMICOLON       reduce using rule 115 (graphmove0 -> HAND_UP .)


state 87

    (116) graphmove1 -> GO . unaExp
    (101) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 148

    unaExp                         shift and go to state 156

state 88

    (117) graphmove1 -> LEFT . unaExp
    (101) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 148

    unaExp                         shift and go to state 157

state 89

    (118) graphmove1 -> RIGHT . unaExp
    (101) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 148

    unaExp                         shift and go to state 158

state 90

    (119) graphmove1 -> BACK . unaExp
    (101) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 148

    unaExp                         shift and go to state 159

state 91

    (120) graphmove2 -> ARC . dosExp
    (100) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 151

    dosExp                         shift and go to state 160

state 92

    (94) while_w -> WHILE .

    OPENPAREN       reduce using rule 94 (while_w -> WHILE .)


state 93

    (25) function -> FUN functionI function2 inicia_fun . declara_vars function4 termina_fun
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (35) vars -> . type ID vars1 equals exp SEMICOLON
    (36) vars -> . type ID vars1 SEMICOLON
    (150) empty -> .
    (41) type -> . INT
    (42) type -> . FLOAT
    (43) type -> . CHAR

    IF              reduce using rule 150 (empty -> .)
    PRINT           reduce using rule 150 (empty -> .)
    READ            reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    RETURN          reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    REPEAT          reduce using rule 150 (empty -> .)
    CIRCLE          reduce using rule 150 (empty -> .)
    SQUARE          reduce using rule 150 (empty -> .)
    TRIANGLE        reduce using rule 150 (empty -> .)
    RECTANGLE       reduce using rule 150 (empty -> .)
    HIDE_STAR       reduce using rule 150 (empty -> .)
    SHOW_STAR       reduce using rule 150 (empty -> .)
    COLOR_STAR      reduce using rule 150 (empty -> .)
    SIZE_STAR       reduce using rule 150 (empty -> .)
    SETXY           reduce using rule 150 (empty -> .)
    HAND_DOWN       reduce using rule 150 (empty -> .)
    HAND_UP         reduce using rule 150 (empty -> .)
    GO              reduce using rule 150 (empty -> .)
    LEFT            reduce using rule 150 (empty -> .)
    RIGHT           reduce using rule 150 (empty -> .)
    BACK            reduce using rule 150 (empty -> .)
    ARC             reduce using rule 150 (empty -> .)
    WHILE           reduce using rule 150 (empty -> .)
    CLOSEBRACES     reduce using rule 150 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    declara_vars                   shift and go to state 161
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 94

    (26) inicia_fun -> OPENBRACES .

    INT             reduce using rule 26 (inicia_fun -> OPENBRACES .)
    FLOAT           reduce using rule 26 (inicia_fun -> OPENBRACES .)
    CHAR            reduce using rule 26 (inicia_fun -> OPENBRACES .)
    IF              reduce using rule 26 (inicia_fun -> OPENBRACES .)
    PRINT           reduce using rule 26 (inicia_fun -> OPENBRACES .)
    READ            reduce using rule 26 (inicia_fun -> OPENBRACES .)
    ID              reduce using rule 26 (inicia_fun -> OPENBRACES .)
    RETURN          reduce using rule 26 (inicia_fun -> OPENBRACES .)
    FOR             reduce using rule 26 (inicia_fun -> OPENBRACES .)
    REPEAT          reduce using rule 26 (inicia_fun -> OPENBRACES .)
    CIRCLE          reduce using rule 26 (inicia_fun -> OPENBRACES .)
    SQUARE          reduce using rule 26 (inicia_fun -> OPENBRACES .)
    TRIANGLE        reduce using rule 26 (inicia_fun -> OPENBRACES .)
    RECTANGLE       reduce using rule 26 (inicia_fun -> OPENBRACES .)
    HIDE_STAR       reduce using rule 26 (inicia_fun -> OPENBRACES .)
    SHOW_STAR       reduce using rule 26 (inicia_fun -> OPENBRACES .)
    COLOR_STAR      reduce using rule 26 (inicia_fun -> OPENBRACES .)
    SIZE_STAR       reduce using rule 26 (inicia_fun -> OPENBRACES .)
    SETXY           reduce using rule 26 (inicia_fun -> OPENBRACES .)
    HAND_DOWN       reduce using rule 26 (inicia_fun -> OPENBRACES .)
    HAND_UP         reduce using rule 26 (inicia_fun -> OPENBRACES .)
    GO              reduce using rule 26 (inicia_fun -> OPENBRACES .)
    LEFT            reduce using rule 26 (inicia_fun -> OPENBRACES .)
    RIGHT           reduce using rule 26 (inicia_fun -> OPENBRACES .)
    BACK            reduce using rule 26 (inicia_fun -> OPENBRACES .)
    ARC             reduce using rule 26 (inicia_fun -> OPENBRACES .)
    WHILE           reduce using rule 26 (inicia_fun -> OPENBRACES .)
    CLOSEBRACES     reduce using rule 26 (inicia_fun -> OPENBRACES .)


state 95

    (28) function2 -> OPENPAREN function3 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 162


state 96

    (29) function3 -> type . ID function5

    ID              shift and go to state 163


state 97

    (30) function3 -> empty .

    CLOSEPAREN      reduce using rule 30 (function3 -> empty .)


state 98

    (50) id -> ID .
    (95) funCall -> ID . OPENPAREN funCall2 CLOSEPAREN

  ! shift/reduce conflict for OPENPAREN resolved as shift
    OPENBRACKET     reduce using rule 50 (id -> ID .)
    MULTIPLICATION  reduce using rule 50 (id -> ID .)
    DIVISION        reduce using rule 50 (id -> ID .)
    ADDITION        reduce using rule 50 (id -> ID .)
    SUBSTRACTION    reduce using rule 50 (id -> ID .)
    SEMICOLON       reduce using rule 50 (id -> ID .)
    GREATER         reduce using rule 50 (id -> ID .)
    LESS            reduce using rule 50 (id -> ID .)
    NOTEQUAL        reduce using rule 50 (id -> ID .)
    ISEQUAL         reduce using rule 50 (id -> ID .)
    CLOSEPAREN      reduce using rule 50 (id -> ID .)
    CLOSEBRACKET    reduce using rule 50 (id -> ID .)
    COMMA           reduce using rule 50 (id -> ID .)
    CTEINT          reduce using rule 50 (id -> ID .)
    CTEFLOAT        reduce using rule 50 (id -> ID .)
    CTECHAR         reduce using rule 50 (id -> ID .)
    ID              reduce using rule 50 (id -> ID .)
    OPENPAREN       shift and go to state 131

  ! OPENPAREN       [ reduce using rule 50 (id -> ID .) ]


state 99

    (35) vars -> type ID vars1 equals exp . SEMICOLON

    SEMICOLON       shift and go to state 164


state 100

    (134) exp -> term . exp1
    (135) exp1 -> . ADDITION exp
    (136) exp1 -> . SUBSTRACTION exp
    (137) exp1 -> . empty
    (150) empty -> .

  ! shift/reduce conflict for ADDITION resolved as shift
  ! shift/reduce conflict for SUBSTRACTION resolved as shift
    ADDITION        shift and go to state 166
    SUBSTRACTION    shift and go to state 167
    SEMICOLON       reduce using rule 150 (empty -> .)
    GREATER         reduce using rule 150 (empty -> .)
    LESS            reduce using rule 150 (empty -> .)
    NOTEQUAL        reduce using rule 150 (empty -> .)
    ISEQUAL         reduce using rule 150 (empty -> .)
    CLOSEPAREN      reduce using rule 150 (empty -> .)
    CLOSEBRACKET    reduce using rule 150 (empty -> .)
    COMMA           reduce using rule 150 (empty -> .)
    CTEINT          reduce using rule 150 (empty -> .)
    CTEFLOAT        reduce using rule 150 (empty -> .)
    CTECHAR         reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    OPENPAREN       reduce using rule 150 (empty -> .)

  ! ADDITION        [ reduce using rule 150 (empty -> .) ]
  ! SUBSTRACTION    [ reduce using rule 150 (empty -> .) ]

    exp1                           shift and go to state 165
    empty                          shift and go to state 168

state 101

    (146) term -> factor . term1
    (147) term1 -> . MULTIPLICATION term
    (148) term1 -> . DIVISION term
    (149) term1 -> . empty
    (150) empty -> .

    MULTIPLICATION  shift and go to state 170
    DIVISION        shift and go to state 171
    ADDITION        reduce using rule 150 (empty -> .)
    SUBSTRACTION    reduce using rule 150 (empty -> .)
    SEMICOLON       reduce using rule 150 (empty -> .)
    GREATER         reduce using rule 150 (empty -> .)
    LESS            reduce using rule 150 (empty -> .)
    NOTEQUAL        reduce using rule 150 (empty -> .)
    ISEQUAL         reduce using rule 150 (empty -> .)
    CLOSEPAREN      reduce using rule 150 (empty -> .)
    CLOSEBRACKET    reduce using rule 150 (empty -> .)
    COMMA           reduce using rule 150 (empty -> .)
    CTEINT          reduce using rule 150 (empty -> .)
    CTEFLOAT        reduce using rule 150 (empty -> .)
    CTECHAR         reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    OPENPAREN       reduce using rule 150 (empty -> .)

    term1                          shift and go to state 169
    empty                          shift and go to state 172

state 102

    (140) factor -> vcte .

    MULTIPLICATION  reduce using rule 140 (factor -> vcte .)
    DIVISION        reduce using rule 140 (factor -> vcte .)
    ADDITION        reduce using rule 140 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 140 (factor -> vcte .)
    SEMICOLON       reduce using rule 140 (factor -> vcte .)
    GREATER         reduce using rule 140 (factor -> vcte .)
    LESS            reduce using rule 140 (factor -> vcte .)
    NOTEQUAL        reduce using rule 140 (factor -> vcte .)
    ISEQUAL         reduce using rule 140 (factor -> vcte .)
    CLOSEPAREN      reduce using rule 140 (factor -> vcte .)
    CLOSEBRACKET    reduce using rule 140 (factor -> vcte .)
    COMMA           reduce using rule 140 (factor -> vcte .)
    CTEINT          reduce using rule 140 (factor -> vcte .)
    CTEFLOAT        reduce using rule 140 (factor -> vcte .)
    CTECHAR         reduce using rule 140 (factor -> vcte .)
    ID              reduce using rule 140 (factor -> vcte .)
    OPENPAREN       reduce using rule 140 (factor -> vcte .)


state 103

    (141) factor -> factor1 .

    MULTIPLICATION  reduce using rule 141 (factor -> factor1 .)
    DIVISION        reduce using rule 141 (factor -> factor1 .)
    ADDITION        reduce using rule 141 (factor -> factor1 .)
    SUBSTRACTION    reduce using rule 141 (factor -> factor1 .)
    SEMICOLON       reduce using rule 141 (factor -> factor1 .)
    GREATER         reduce using rule 141 (factor -> factor1 .)
    LESS            reduce using rule 141 (factor -> factor1 .)
    NOTEQUAL        reduce using rule 141 (factor -> factor1 .)
    ISEQUAL         reduce using rule 141 (factor -> factor1 .)
    CLOSEPAREN      reduce using rule 141 (factor -> factor1 .)
    CLOSEBRACKET    reduce using rule 141 (factor -> factor1 .)
    COMMA           reduce using rule 141 (factor -> factor1 .)
    CTEINT          reduce using rule 141 (factor -> factor1 .)
    CTEFLOAT        reduce using rule 141 (factor -> factor1 .)
    CTECHAR         reduce using rule 141 (factor -> factor1 .)
    ID              reduce using rule 141 (factor -> factor1 .)
    OPENPAREN       reduce using rule 141 (factor -> factor1 .)


state 104

    (58) vcte -> cte_int .

    MULTIPLICATION  reduce using rule 58 (vcte -> cte_int .)
    DIVISION        reduce using rule 58 (vcte -> cte_int .)
    ADDITION        reduce using rule 58 (vcte -> cte_int .)
    SUBSTRACTION    reduce using rule 58 (vcte -> cte_int .)
    SEMICOLON       reduce using rule 58 (vcte -> cte_int .)
    GREATER         reduce using rule 58 (vcte -> cte_int .)
    LESS            reduce using rule 58 (vcte -> cte_int .)
    NOTEQUAL        reduce using rule 58 (vcte -> cte_int .)
    ISEQUAL         reduce using rule 58 (vcte -> cte_int .)
    CLOSEPAREN      reduce using rule 58 (vcte -> cte_int .)
    CLOSEBRACKET    reduce using rule 58 (vcte -> cte_int .)
    COMMA           reduce using rule 58 (vcte -> cte_int .)
    CTEINT          reduce using rule 58 (vcte -> cte_int .)
    CTEFLOAT        reduce using rule 58 (vcte -> cte_int .)
    CTECHAR         reduce using rule 58 (vcte -> cte_int .)
    ID              reduce using rule 58 (vcte -> cte_int .)
    OPENPAREN       reduce using rule 58 (vcte -> cte_int .)


state 105

    (59) vcte -> cte_float .

    MULTIPLICATION  reduce using rule 59 (vcte -> cte_float .)
    DIVISION        reduce using rule 59 (vcte -> cte_float .)
    ADDITION        reduce using rule 59 (vcte -> cte_float .)
    SUBSTRACTION    reduce using rule 59 (vcte -> cte_float .)
    SEMICOLON       reduce using rule 59 (vcte -> cte_float .)
    GREATER         reduce using rule 59 (vcte -> cte_float .)
    LESS            reduce using rule 59 (vcte -> cte_float .)
    NOTEQUAL        reduce using rule 59 (vcte -> cte_float .)
    ISEQUAL         reduce using rule 59 (vcte -> cte_float .)
    CLOSEPAREN      reduce using rule 59 (vcte -> cte_float .)
    CLOSEBRACKET    reduce using rule 59 (vcte -> cte_float .)
    COMMA           reduce using rule 59 (vcte -> cte_float .)
    CTEINT          reduce using rule 59 (vcte -> cte_float .)
    CTEFLOAT        reduce using rule 59 (vcte -> cte_float .)
    CTECHAR         reduce using rule 59 (vcte -> cte_float .)
    ID              reduce using rule 59 (vcte -> cte_float .)
    OPENPAREN       reduce using rule 59 (vcte -> cte_float .)


state 106

    (60) vcte -> cte_char .

    MULTIPLICATION  reduce using rule 60 (vcte -> cte_char .)
    DIVISION        reduce using rule 60 (vcte -> cte_char .)
    ADDITION        reduce using rule 60 (vcte -> cte_char .)
    SUBSTRACTION    reduce using rule 60 (vcte -> cte_char .)
    SEMICOLON       reduce using rule 60 (vcte -> cte_char .)
    GREATER         reduce using rule 60 (vcte -> cte_char .)
    LESS            reduce using rule 60 (vcte -> cte_char .)
    NOTEQUAL        reduce using rule 60 (vcte -> cte_char .)
    ISEQUAL         reduce using rule 60 (vcte -> cte_char .)
    CLOSEPAREN      reduce using rule 60 (vcte -> cte_char .)
    CLOSEBRACKET    reduce using rule 60 (vcte -> cte_char .)
    COMMA           reduce using rule 60 (vcte -> cte_char .)
    CTEINT          reduce using rule 60 (vcte -> cte_char .)
    CTEFLOAT        reduce using rule 60 (vcte -> cte_char .)
    CTECHAR         reduce using rule 60 (vcte -> cte_char .)
    ID              reduce using rule 60 (vcte -> cte_char .)
    OPENPAREN       reduce using rule 60 (vcte -> cte_char .)


state 107

    (61) vcte -> id . vcte1
    (63) vcte1 -> . OPENBRACKET exp CLOSEBRACKET vcte3
    (64) vcte1 -> . empty
    (150) empty -> .

    OPENBRACKET     shift and go to state 174
    MULTIPLICATION  reduce using rule 150 (empty -> .)
    DIVISION        reduce using rule 150 (empty -> .)
    ADDITION        reduce using rule 150 (empty -> .)
    SUBSTRACTION    reduce using rule 150 (empty -> .)
    SEMICOLON       reduce using rule 150 (empty -> .)
    GREATER         reduce using rule 150 (empty -> .)
    LESS            reduce using rule 150 (empty -> .)
    NOTEQUAL        reduce using rule 150 (empty -> .)
    ISEQUAL         reduce using rule 150 (empty -> .)
    CLOSEPAREN      reduce using rule 150 (empty -> .)
    CLOSEBRACKET    reduce using rule 150 (empty -> .)
    COMMA           reduce using rule 150 (empty -> .)
    CTEINT          reduce using rule 150 (empty -> .)
    CTEFLOAT        reduce using rule 150 (empty -> .)
    CTECHAR         reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    OPENPAREN       reduce using rule 150 (empty -> .)

    vcte1                          shift and go to state 173
    empty                          shift and go to state 175

state 108

    (62) vcte -> funCall .

    MULTIPLICATION  reduce using rule 62 (vcte -> funCall .)
    DIVISION        reduce using rule 62 (vcte -> funCall .)
    ADDITION        reduce using rule 62 (vcte -> funCall .)
    SUBSTRACTION    reduce using rule 62 (vcte -> funCall .)
    SEMICOLON       reduce using rule 62 (vcte -> funCall .)
    GREATER         reduce using rule 62 (vcte -> funCall .)
    LESS            reduce using rule 62 (vcte -> funCall .)
    NOTEQUAL        reduce using rule 62 (vcte -> funCall .)
    ISEQUAL         reduce using rule 62 (vcte -> funCall .)
    CLOSEPAREN      reduce using rule 62 (vcte -> funCall .)
    CLOSEBRACKET    reduce using rule 62 (vcte -> funCall .)
    COMMA           reduce using rule 62 (vcte -> funCall .)
    CTEINT          reduce using rule 62 (vcte -> funCall .)
    CTEFLOAT        reduce using rule 62 (vcte -> funCall .)
    CTECHAR         reduce using rule 62 (vcte -> funCall .)
    ID              reduce using rule 62 (vcte -> funCall .)
    OPENPAREN       reduce using rule 62 (vcte -> funCall .)


state 109

    (142) factor1 -> factor2 . vcte
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN

    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98

    vcte                           shift and go to state 176
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108

state 110

    (143) factor1 -> openP . expression closeP
    (73) expression -> . exp expression1
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    openP                          shift and go to state 110
    expression                     shift and go to state 177
    exp                            shift and go to state 178
    term                           shift and go to state 100
    factor                         shift and go to state 101
    vcte                           shift and go to state 102
    factor1                        shift and go to state 103
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108
    factor2                        shift and go to state 109

state 111

    (67) cte_int -> CTEINT .

    MULTIPLICATION  reduce using rule 67 (cte_int -> CTEINT .)
    DIVISION        reduce using rule 67 (cte_int -> CTEINT .)
    ADDITION        reduce using rule 67 (cte_int -> CTEINT .)
    SUBSTRACTION    reduce using rule 67 (cte_int -> CTEINT .)
    SEMICOLON       reduce using rule 67 (cte_int -> CTEINT .)
    GREATER         reduce using rule 67 (cte_int -> CTEINT .)
    LESS            reduce using rule 67 (cte_int -> CTEINT .)
    NOTEQUAL        reduce using rule 67 (cte_int -> CTEINT .)
    ISEQUAL         reduce using rule 67 (cte_int -> CTEINT .)
    CLOSEPAREN      reduce using rule 67 (cte_int -> CTEINT .)
    CLOSEBRACKET    reduce using rule 67 (cte_int -> CTEINT .)
    COMMA           reduce using rule 67 (cte_int -> CTEINT .)
    CTEINT          reduce using rule 67 (cte_int -> CTEINT .)
    CTEFLOAT        reduce using rule 67 (cte_int -> CTEINT .)
    CTECHAR         reduce using rule 67 (cte_int -> CTEINT .)
    ID              reduce using rule 67 (cte_int -> CTEINT .)
    OPENPAREN       reduce using rule 67 (cte_int -> CTEINT .)


state 112

    (68) cte_float -> CTEFLOAT .

    MULTIPLICATION  reduce using rule 68 (cte_float -> CTEFLOAT .)
    DIVISION        reduce using rule 68 (cte_float -> CTEFLOAT .)
    ADDITION        reduce using rule 68 (cte_float -> CTEFLOAT .)
    SUBSTRACTION    reduce using rule 68 (cte_float -> CTEFLOAT .)
    SEMICOLON       reduce using rule 68 (cte_float -> CTEFLOAT .)
    GREATER         reduce using rule 68 (cte_float -> CTEFLOAT .)
    LESS            reduce using rule 68 (cte_float -> CTEFLOAT .)
    NOTEQUAL        reduce using rule 68 (cte_float -> CTEFLOAT .)
    ISEQUAL         reduce using rule 68 (cte_float -> CTEFLOAT .)
    CLOSEPAREN      reduce using rule 68 (cte_float -> CTEFLOAT .)
    CLOSEBRACKET    reduce using rule 68 (cte_float -> CTEFLOAT .)
    COMMA           reduce using rule 68 (cte_float -> CTEFLOAT .)
    CTEINT          reduce using rule 68 (cte_float -> CTEFLOAT .)
    CTEFLOAT        reduce using rule 68 (cte_float -> CTEFLOAT .)
    CTECHAR         reduce using rule 68 (cte_float -> CTEFLOAT .)
    ID              reduce using rule 68 (cte_float -> CTEFLOAT .)
    OPENPAREN       reduce using rule 68 (cte_float -> CTEFLOAT .)


state 113

    (69) cte_char -> CTECHAR .

    MULTIPLICATION  reduce using rule 69 (cte_char -> CTECHAR .)
    DIVISION        reduce using rule 69 (cte_char -> CTECHAR .)
    ADDITION        reduce using rule 69 (cte_char -> CTECHAR .)
    SUBSTRACTION    reduce using rule 69 (cte_char -> CTECHAR .)
    SEMICOLON       reduce using rule 69 (cte_char -> CTECHAR .)
    GREATER         reduce using rule 69 (cte_char -> CTECHAR .)
    LESS            reduce using rule 69 (cte_char -> CTECHAR .)
    NOTEQUAL        reduce using rule 69 (cte_char -> CTECHAR .)
    ISEQUAL         reduce using rule 69 (cte_char -> CTECHAR .)
    CLOSEPAREN      reduce using rule 69 (cte_char -> CTECHAR .)
    CLOSEBRACKET    reduce using rule 69 (cte_char -> CTECHAR .)
    COMMA           reduce using rule 69 (cte_char -> CTECHAR .)
    CTEINT          reduce using rule 69 (cte_char -> CTECHAR .)
    CTEFLOAT        reduce using rule 69 (cte_char -> CTECHAR .)
    CTECHAR         reduce using rule 69 (cte_char -> CTECHAR .)
    ID              reduce using rule 69 (cte_char -> CTECHAR .)
    OPENPAREN       reduce using rule 69 (cte_char -> CTECHAR .)


state 114

    (138) openP -> OPENPAREN .

    CTEINT          reduce using rule 138 (openP -> OPENPAREN .)
    CTEFLOAT        reduce using rule 138 (openP -> OPENPAREN .)
    CTECHAR         reduce using rule 138 (openP -> OPENPAREN .)
    ID              reduce using rule 138 (openP -> OPENPAREN .)
    ADDITION        reduce using rule 138 (openP -> OPENPAREN .)
    SUBSTRACTION    reduce using rule 138 (openP -> OPENPAREN .)
    OPENPAREN       reduce using rule 138 (openP -> OPENPAREN .)


state 115

    (144) factor2 -> ADDITION .

    CTEINT          reduce using rule 144 (factor2 -> ADDITION .)
    CTEFLOAT        reduce using rule 144 (factor2 -> ADDITION .)
    CTECHAR         reduce using rule 144 (factor2 -> ADDITION .)
    ID              reduce using rule 144 (factor2 -> ADDITION .)


state 116

    (145) factor2 -> SUBSTRACTION .

    CTEINT          reduce using rule 145 (factor2 -> SUBSTRACTION .)
    CTEFLOAT        reduce using rule 145 (factor2 -> SUBSTRACTION .)
    CTECHAR         reduce using rule 145 (factor2 -> SUBSTRACTION .)
    ID              reduce using rule 145 (factor2 -> SUBSTRACTION .)


state 117

    (37) vars1 -> OPENBRACKET CTEINT CLOSEBRACKET . vars3
    (39) vars3 -> . OPENBRACKET CTEINT CLOSEBRACKET
    (40) vars3 -> . empty
    (150) empty -> .

    OPENBRACKET     shift and go to state 179
    SEMICOLON       reduce using rule 150 (empty -> .)
    EQUALS          reduce using rule 150 (empty -> .)

    vars3                          shift and go to state 180
    empty                          shift and go to state 181

state 118

    (5) star -> starI declara_vars star1 CLOSEBRACES .

    $end            reduce using rule 5 (star -> starI declara_vars star1 CLOSEBRACES .)


state 119

    (8) star1 -> stmt star1 .

    CLOSEBRACES     reduce using rule 8 (star1 -> stmt star1 .)


state 120

    (21) stmt -> funCall SEMICOLON .

    IF              reduce using rule 21 (stmt -> funCall SEMICOLON .)
    PRINT           reduce using rule 21 (stmt -> funCall SEMICOLON .)
    READ            reduce using rule 21 (stmt -> funCall SEMICOLON .)
    ID              reduce using rule 21 (stmt -> funCall SEMICOLON .)
    RETURN          reduce using rule 21 (stmt -> funCall SEMICOLON .)
    FOR             reduce using rule 21 (stmt -> funCall SEMICOLON .)
    REPEAT          reduce using rule 21 (stmt -> funCall SEMICOLON .)
    CIRCLE          reduce using rule 21 (stmt -> funCall SEMICOLON .)
    SQUARE          reduce using rule 21 (stmt -> funCall SEMICOLON .)
    TRIANGLE        reduce using rule 21 (stmt -> funCall SEMICOLON .)
    RECTANGLE       reduce using rule 21 (stmt -> funCall SEMICOLON .)
    HIDE_STAR       reduce using rule 21 (stmt -> funCall SEMICOLON .)
    SHOW_STAR       reduce using rule 21 (stmt -> funCall SEMICOLON .)
    COLOR_STAR      reduce using rule 21 (stmt -> funCall SEMICOLON .)
    SIZE_STAR       reduce using rule 21 (stmt -> funCall SEMICOLON .)
    SETXY           reduce using rule 21 (stmt -> funCall SEMICOLON .)
    HAND_DOWN       reduce using rule 21 (stmt -> funCall SEMICOLON .)
    HAND_UP         reduce using rule 21 (stmt -> funCall SEMICOLON .)
    GO              reduce using rule 21 (stmt -> funCall SEMICOLON .)
    LEFT            reduce using rule 21 (stmt -> funCall SEMICOLON .)
    RIGHT           reduce using rule 21 (stmt -> funCall SEMICOLON .)
    BACK            reduce using rule 21 (stmt -> funCall SEMICOLON .)
    ARC             reduce using rule 21 (stmt -> funCall SEMICOLON .)
    WHILE           reduce using rule 21 (stmt -> funCall SEMICOLON .)
    CLOSEBRACES     reduce using rule 21 (stmt -> funCall SEMICOLON .)


state 121

    (51) assignment -> id assignment1 . equals assignment3 SEMICOLON
    (49) equals -> . EQUALS

    EQUALS          shift and go to state 38

    equals                         shift and go to state 182

state 122

    (52) assignment1 -> assignment2 .
    (53) assignment1 -> assignment2 . assignment1
    (52) assignment1 -> . assignment2
    (53) assignment1 -> . assignment2 assignment1
    (54) assignment1 -> . empty
    (55) assignment2 -> . OPENBRACKET exp CLOSEBRACKET
    (150) empty -> .

  ! reduce/reduce conflict for EQUALS resolved using rule 52 (assignment1 -> assignment2 .)
    EQUALS          reduce using rule 52 (assignment1 -> assignment2 .)
    OPENBRACKET     shift and go to state 124

  ! EQUALS          [ reduce using rule 150 (empty -> .) ]

    assignment2                    shift and go to state 122
    assignment1                    shift and go to state 183
    empty                          shift and go to state 123

state 123

    (54) assignment1 -> empty .

    EQUALS          reduce using rule 54 (assignment1 -> empty .)


state 124

    (55) assignment2 -> OPENBRACKET . exp CLOSEBRACKET
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    exp                            shift and go to state 184
    term                           shift and go to state 100
    factor                         shift and go to state 101
    vcte                           shift and go to state 102
    factor1                        shift and go to state 103
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108
    factor2                        shift and go to state 109
    openP                          shift and go to state 110

state 125

    (80) condition -> IF head_cond . body condition1
    (87) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 136

    body                           shift and go to state 185

state 126

    (86) head_cond -> OPENPAREN . expression close_condition
    (73) expression -> . exp expression1
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    expression                     shift and go to state 186
    exp                            shift and go to state 178
    term                           shift and go to state 100
    factor                         shift and go to state 101
    vcte                           shift and go to state 102
    factor1                        shift and go to state 103
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108
    factor2                        shift and go to state 109
    openP                          shift and go to state 110

state 127

    (44) print -> PRINT OPENPAREN . expression CLOSEPAREN SEMICOLON
    (73) expression -> . exp expression1
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    expression                     shift and go to state 187
    exp                            shift and go to state 178
    term                           shift and go to state 100
    factor                         shift and go to state 101
    vcte                           shift and go to state 102
    factor1                        shift and go to state 103
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108
    factor2                        shift and go to state 109
    openP                          shift and go to state 110

state 128

    (45) read -> READ OPENPAREN . id read1 CLOSEPAREN SEMICOLON
    (50) id -> . ID

    ID              shift and go to state 189

    id                             shift and go to state 188

state 129

    (121) graphr -> repeat rep . OPENBRACES graphstmt graphr1 CLOSEBRACES

    OPENBRACES      shift and go to state 190


state 130

    (124) rep -> OPENPAREN . exp CLOSEPAREN
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    exp                            shift and go to state 191
    term                           shift and go to state 100
    factor                         shift and go to state 101
    vcte                           shift and go to state 102
    factor1                        shift and go to state 103
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108
    factor2                        shift and go to state 109
    openP                          shift and go to state 110

state 131

    (95) funCall -> ID OPENPAREN . funCall2 CLOSEPAREN
    (96) funCall2 -> . exp funCall3
    (97) funCall2 -> . empty
    (134) exp -> . term exp1
    (150) empty -> .
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CLOSEPAREN      reduce using rule 150 (empty -> .)
    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    funCall2                       shift and go to state 192
    exp                            shift and go to state 193
    empty                          shift and go to state 194
    term                           shift and go to state 100
    factor                         shift and go to state 101
    vcte                           shift and go to state 102
    factor1                        shift and go to state 103
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108
    factor2                        shift and go to state 109
    openP                          shift and go to state 110

state 132

    (70) return -> RETURN return1 . SEMICOLON

    SEMICOLON       shift and go to state 195


state 133

    (71) return1 -> vcte .
    (140) factor -> vcte .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 71 (return1 -> vcte .)
    SEMICOLON       reduce using rule 71 (return1 -> vcte .)
    MULTIPLICATION  reduce using rule 140 (factor -> vcte .)
    DIVISION        reduce using rule 140 (factor -> vcte .)
    ADDITION        reduce using rule 140 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 140 (factor -> vcte .)

  ! SEMICOLON       [ reduce using rule 140 (factor -> vcte .) ]


state 134

    (72) return1 -> exp .

    SEMICOLON       reduce using rule 72 (return1 -> exp .)


state 135

    (92) while -> while1 body .

    IF              reduce using rule 92 (while -> while1 body .)
    PRINT           reduce using rule 92 (while -> while1 body .)
    READ            reduce using rule 92 (while -> while1 body .)
    ID              reduce using rule 92 (while -> while1 body .)
    RETURN          reduce using rule 92 (while -> while1 body .)
    FOR             reduce using rule 92 (while -> while1 body .)
    REPEAT          reduce using rule 92 (while -> while1 body .)
    CIRCLE          reduce using rule 92 (while -> while1 body .)
    SQUARE          reduce using rule 92 (while -> while1 body .)
    TRIANGLE        reduce using rule 92 (while -> while1 body .)
    RECTANGLE       reduce using rule 92 (while -> while1 body .)
    HIDE_STAR       reduce using rule 92 (while -> while1 body .)
    SHOW_STAR       reduce using rule 92 (while -> while1 body .)
    COLOR_STAR      reduce using rule 92 (while -> while1 body .)
    SIZE_STAR       reduce using rule 92 (while -> while1 body .)
    SETXY           reduce using rule 92 (while -> while1 body .)
    HAND_DOWN       reduce using rule 92 (while -> while1 body .)
    HAND_UP         reduce using rule 92 (while -> while1 body .)
    GO              reduce using rule 92 (while -> while1 body .)
    LEFT            reduce using rule 92 (while -> while1 body .)
    RIGHT           reduce using rule 92 (while -> while1 body .)
    BACK            reduce using rule 92 (while -> while1 body .)
    ARC             reduce using rule 92 (while -> while1 body .)
    WHILE           reduce using rule 92 (while -> while1 body .)
    CLOSEBRACES     reduce using rule 92 (while -> while1 body .)


state 136

    (87) body -> OPENBRACES . body1 CLOSEBRACES
    (89) body1 -> . stmt body1
    (90) body1 -> . empty
    (14) stmt -> . assignment
    (15) stmt -> . condition
    (16) stmt -> . print
    (17) stmt -> . loop
    (18) stmt -> . read
    (19) stmt -> . graphstmt
    (20) stmt -> . graphr
    (21) stmt -> . funCall SEMICOLON
    (22) stmt -> . return
    (150) empty -> .
    (51) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (80) condition -> . IF head_cond body condition1
    (44) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (12) loop -> . while
    (13) loop -> . for
    (45) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (102) graphstmt -> . graphfig
    (103) graphstmt -> . graphview
    (104) graphstmt -> . graphmove
    (121) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (70) return -> . RETURN return1 SEMICOLON
    (50) id -> . ID
    (92) while -> . while1 body
    (91) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (105) graphfig -> . graphfig1 SEMICOLON
    (106) graphfig -> . graphfig2 SEMICOLON
    (126) graphview -> . graphview0 SEMICOLON
    (127) graphview -> . graphview1 SEMICOLON
    (128) graphview -> . graphview2 SEMICOLON
    (111) graphmove -> . graphmove0 SEMICOLON
    (112) graphmove -> . graphmove1 SEMICOLON
    (113) graphmove -> . graphmove2 SEMICOLON
    (125) repeat -> . REPEAT
    (93) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (107) graphfig1 -> . CIRCLE unaExp
    (108) graphfig1 -> . SQUARE unaExp
    (109) graphfig2 -> . TRIANGLE dosExp
    (110) graphfig2 -> . RECTANGLE dosExp
    (129) graphview0 -> . HIDE_STAR
    (130) graphview0 -> . SHOW_STAR
    (131) graphview1 -> . COLOR_STAR unaExp
    (132) graphview1 -> . SIZE_STAR unaExp
    (133) graphview2 -> . SETXY dosExp
    (114) graphmove0 -> . HAND_DOWN
    (115) graphmove0 -> . HAND_UP
    (116) graphmove1 -> . GO unaExp
    (117) graphmove1 -> . LEFT unaExp
    (118) graphmove1 -> . RIGHT unaExp
    (119) graphmove1 -> . BACK unaExp
    (120) graphmove2 -> . ARC dosExp
    (94) while_w -> . WHILE

    CLOSEBRACES     reduce using rule 150 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    ID              shift and go to state 62
    RETURN          shift and go to state 63
    FOR             shift and go to state 65
    REPEAT          shift and go to state 74
    CIRCLE          shift and go to state 76
    SQUARE          shift and go to state 77
    TRIANGLE        shift and go to state 78
    RECTANGLE       shift and go to state 79
    HIDE_STAR       shift and go to state 80
    SHOW_STAR       shift and go to state 81
    COLOR_STAR      shift and go to state 82
    SIZE_STAR       shift and go to state 83
    SETXY           shift and go to state 84
    HAND_DOWN       shift and go to state 85
    HAND_UP         shift and go to state 86
    GO              shift and go to state 87
    LEFT            shift and go to state 88
    RIGHT           shift and go to state 89
    BACK            shift and go to state 90
    ARC             shift and go to state 91
    WHILE           shift and go to state 92

    body1                          shift and go to state 196
    stmt                           shift and go to state 197
    empty                          shift and go to state 198
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    graphr                         shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    repeat                         shift and go to state 61
    while1                         shift and go to state 64
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73
    while_w                        shift and go to state 75

state 137

    (91) for -> FOR OPENPAREN . ID TWODOTS exp CLOSEPAREN body

    ID              shift and go to state 199


state 138

    (105) graphfig -> graphfig1 SEMICOLON .

    IF              reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)
    PRINT           reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)
    READ            reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)
    ID              reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)
    RETURN          reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)
    FOR             reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)
    REPEAT          reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)
    CIRCLE          reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)
    SQUARE          reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)
    TRIANGLE        reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)
    RECTANGLE       reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)
    HIDE_STAR       reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)
    SHOW_STAR       reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)
    COLOR_STAR      reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)
    SIZE_STAR       reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)
    SETXY           reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)
    HAND_DOWN       reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)
    HAND_UP         reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)
    GO              reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)
    LEFT            reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)
    RIGHT           reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)
    BACK            reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)
    ARC             reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)
    WHILE           reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 105 (graphfig -> graphfig1 SEMICOLON .)


state 139

    (106) graphfig -> graphfig2 SEMICOLON .

    IF              reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)
    PRINT           reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)
    READ            reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)
    ID              reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)
    RETURN          reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)
    FOR             reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)
    REPEAT          reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)
    CIRCLE          reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)
    SQUARE          reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)
    TRIANGLE        reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)
    RECTANGLE       reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)
    HIDE_STAR       reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)
    SHOW_STAR       reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)
    COLOR_STAR      reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)
    SIZE_STAR       reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)
    SETXY           reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)
    HAND_DOWN       reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)
    HAND_UP         reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)
    GO              reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)
    LEFT            reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)
    RIGHT           reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)
    BACK            reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)
    ARC             reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)
    WHILE           reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 106 (graphfig -> graphfig2 SEMICOLON .)


state 140

    (126) graphview -> graphview0 SEMICOLON .

    IF              reduce using rule 126 (graphview -> graphview0 SEMICOLON .)
    PRINT           reduce using rule 126 (graphview -> graphview0 SEMICOLON .)
    READ            reduce using rule 126 (graphview -> graphview0 SEMICOLON .)
    ID              reduce using rule 126 (graphview -> graphview0 SEMICOLON .)
    RETURN          reduce using rule 126 (graphview -> graphview0 SEMICOLON .)
    FOR             reduce using rule 126 (graphview -> graphview0 SEMICOLON .)
    REPEAT          reduce using rule 126 (graphview -> graphview0 SEMICOLON .)
    CIRCLE          reduce using rule 126 (graphview -> graphview0 SEMICOLON .)
    SQUARE          reduce using rule 126 (graphview -> graphview0 SEMICOLON .)
    TRIANGLE        reduce using rule 126 (graphview -> graphview0 SEMICOLON .)
    RECTANGLE       reduce using rule 126 (graphview -> graphview0 SEMICOLON .)
    HIDE_STAR       reduce using rule 126 (graphview -> graphview0 SEMICOLON .)
    SHOW_STAR       reduce using rule 126 (graphview -> graphview0 SEMICOLON .)
    COLOR_STAR      reduce using rule 126 (graphview -> graphview0 SEMICOLON .)
    SIZE_STAR       reduce using rule 126 (graphview -> graphview0 SEMICOLON .)
    SETXY           reduce using rule 126 (graphview -> graphview0 SEMICOLON .)
    HAND_DOWN       reduce using rule 126 (graphview -> graphview0 SEMICOLON .)
    HAND_UP         reduce using rule 126 (graphview -> graphview0 SEMICOLON .)
    GO              reduce using rule 126 (graphview -> graphview0 SEMICOLON .)
    LEFT            reduce using rule 126 (graphview -> graphview0 SEMICOLON .)
    RIGHT           reduce using rule 126 (graphview -> graphview0 SEMICOLON .)
    BACK            reduce using rule 126 (graphview -> graphview0 SEMICOLON .)
    ARC             reduce using rule 126 (graphview -> graphview0 SEMICOLON .)
    WHILE           reduce using rule 126 (graphview -> graphview0 SEMICOLON .)
    CLOSEBRACES     reduce using rule 126 (graphview -> graphview0 SEMICOLON .)


state 141

    (127) graphview -> graphview1 SEMICOLON .

    IF              reduce using rule 127 (graphview -> graphview1 SEMICOLON .)
    PRINT           reduce using rule 127 (graphview -> graphview1 SEMICOLON .)
    READ            reduce using rule 127 (graphview -> graphview1 SEMICOLON .)
    ID              reduce using rule 127 (graphview -> graphview1 SEMICOLON .)
    RETURN          reduce using rule 127 (graphview -> graphview1 SEMICOLON .)
    FOR             reduce using rule 127 (graphview -> graphview1 SEMICOLON .)
    REPEAT          reduce using rule 127 (graphview -> graphview1 SEMICOLON .)
    CIRCLE          reduce using rule 127 (graphview -> graphview1 SEMICOLON .)
    SQUARE          reduce using rule 127 (graphview -> graphview1 SEMICOLON .)
    TRIANGLE        reduce using rule 127 (graphview -> graphview1 SEMICOLON .)
    RECTANGLE       reduce using rule 127 (graphview -> graphview1 SEMICOLON .)
    HIDE_STAR       reduce using rule 127 (graphview -> graphview1 SEMICOLON .)
    SHOW_STAR       reduce using rule 127 (graphview -> graphview1 SEMICOLON .)
    COLOR_STAR      reduce using rule 127 (graphview -> graphview1 SEMICOLON .)
    SIZE_STAR       reduce using rule 127 (graphview -> graphview1 SEMICOLON .)
    SETXY           reduce using rule 127 (graphview -> graphview1 SEMICOLON .)
    HAND_DOWN       reduce using rule 127 (graphview -> graphview1 SEMICOLON .)
    HAND_UP         reduce using rule 127 (graphview -> graphview1 SEMICOLON .)
    GO              reduce using rule 127 (graphview -> graphview1 SEMICOLON .)
    LEFT            reduce using rule 127 (graphview -> graphview1 SEMICOLON .)
    RIGHT           reduce using rule 127 (graphview -> graphview1 SEMICOLON .)
    BACK            reduce using rule 127 (graphview -> graphview1 SEMICOLON .)
    ARC             reduce using rule 127 (graphview -> graphview1 SEMICOLON .)
    WHILE           reduce using rule 127 (graphview -> graphview1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 127 (graphview -> graphview1 SEMICOLON .)


state 142

    (128) graphview -> graphview2 SEMICOLON .

    IF              reduce using rule 128 (graphview -> graphview2 SEMICOLON .)
    PRINT           reduce using rule 128 (graphview -> graphview2 SEMICOLON .)
    READ            reduce using rule 128 (graphview -> graphview2 SEMICOLON .)
    ID              reduce using rule 128 (graphview -> graphview2 SEMICOLON .)
    RETURN          reduce using rule 128 (graphview -> graphview2 SEMICOLON .)
    FOR             reduce using rule 128 (graphview -> graphview2 SEMICOLON .)
    REPEAT          reduce using rule 128 (graphview -> graphview2 SEMICOLON .)
    CIRCLE          reduce using rule 128 (graphview -> graphview2 SEMICOLON .)
    SQUARE          reduce using rule 128 (graphview -> graphview2 SEMICOLON .)
    TRIANGLE        reduce using rule 128 (graphview -> graphview2 SEMICOLON .)
    RECTANGLE       reduce using rule 128 (graphview -> graphview2 SEMICOLON .)
    HIDE_STAR       reduce using rule 128 (graphview -> graphview2 SEMICOLON .)
    SHOW_STAR       reduce using rule 128 (graphview -> graphview2 SEMICOLON .)
    COLOR_STAR      reduce using rule 128 (graphview -> graphview2 SEMICOLON .)
    SIZE_STAR       reduce using rule 128 (graphview -> graphview2 SEMICOLON .)
    SETXY           reduce using rule 128 (graphview -> graphview2 SEMICOLON .)
    HAND_DOWN       reduce using rule 128 (graphview -> graphview2 SEMICOLON .)
    HAND_UP         reduce using rule 128 (graphview -> graphview2 SEMICOLON .)
    GO              reduce using rule 128 (graphview -> graphview2 SEMICOLON .)
    LEFT            reduce using rule 128 (graphview -> graphview2 SEMICOLON .)
    RIGHT           reduce using rule 128 (graphview -> graphview2 SEMICOLON .)
    BACK            reduce using rule 128 (graphview -> graphview2 SEMICOLON .)
    ARC             reduce using rule 128 (graphview -> graphview2 SEMICOLON .)
    WHILE           reduce using rule 128 (graphview -> graphview2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 128 (graphview -> graphview2 SEMICOLON .)


state 143

    (111) graphmove -> graphmove0 SEMICOLON .

    IF              reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)
    PRINT           reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)
    READ            reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)
    ID              reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)
    RETURN          reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)
    FOR             reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)
    REPEAT          reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)
    CIRCLE          reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)
    SQUARE          reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)
    TRIANGLE        reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)
    RECTANGLE       reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)
    HIDE_STAR       reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)
    SHOW_STAR       reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)
    COLOR_STAR      reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)
    SIZE_STAR       reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)
    SETXY           reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)
    HAND_DOWN       reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)
    HAND_UP         reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)
    GO              reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)
    LEFT            reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)
    RIGHT           reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)
    BACK            reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)
    ARC             reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)
    WHILE           reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)
    CLOSEBRACES     reduce using rule 111 (graphmove -> graphmove0 SEMICOLON .)


state 144

    (112) graphmove -> graphmove1 SEMICOLON .

    IF              reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)
    PRINT           reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)
    READ            reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)
    ID              reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)
    RETURN          reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)
    FOR             reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)
    REPEAT          reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)
    CIRCLE          reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)
    SQUARE          reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)
    TRIANGLE        reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)
    RECTANGLE       reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)
    HIDE_STAR       reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)
    SHOW_STAR       reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)
    COLOR_STAR      reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)
    SIZE_STAR       reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)
    SETXY           reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)
    HAND_DOWN       reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)
    HAND_UP         reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)
    GO              reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)
    LEFT            reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)
    RIGHT           reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)
    BACK            reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)
    ARC             reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)
    WHILE           reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 112 (graphmove -> graphmove1 SEMICOLON .)


state 145

    (113) graphmove -> graphmove2 SEMICOLON .

    IF              reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)
    PRINT           reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)
    READ            reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)
    ID              reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)
    RETURN          reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)
    FOR             reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)
    REPEAT          reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)
    CIRCLE          reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)
    SQUARE          reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)
    TRIANGLE        reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)
    RECTANGLE       reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)
    HIDE_STAR       reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)
    SHOW_STAR       reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)
    COLOR_STAR      reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)
    SIZE_STAR       reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)
    SETXY           reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)
    HAND_DOWN       reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)
    HAND_UP         reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)
    GO              reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)
    LEFT            reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)
    RIGHT           reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)
    BACK            reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)
    ARC             reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)
    WHILE           reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 113 (graphmove -> graphmove2 SEMICOLON .)


state 146

    (93) while1 -> while_w OPENPAREN . expression CLOSEPAREN
    (73) expression -> . exp expression1
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    expression                     shift and go to state 200
    exp                            shift and go to state 178
    term                           shift and go to state 100
    factor                         shift and go to state 101
    vcte                           shift and go to state 102
    factor1                        shift and go to state 103
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108
    factor2                        shift and go to state 109
    openP                          shift and go to state 110

state 147

    (107) graphfig1 -> CIRCLE unaExp .

    SEMICOLON       reduce using rule 107 (graphfig1 -> CIRCLE unaExp .)


state 148

    (101) unaExp -> OPENPAREN . exp CLOSEPAREN
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    exp                            shift and go to state 201
    term                           shift and go to state 100
    factor                         shift and go to state 101
    vcte                           shift and go to state 102
    factor1                        shift and go to state 103
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108
    factor2                        shift and go to state 109
    openP                          shift and go to state 110

state 149

    (108) graphfig1 -> SQUARE unaExp .

    SEMICOLON       reduce using rule 108 (graphfig1 -> SQUARE unaExp .)


state 150

    (109) graphfig2 -> TRIANGLE dosExp .

    SEMICOLON       reduce using rule 109 (graphfig2 -> TRIANGLE dosExp .)


state 151

    (100) dosExp -> OPENPAREN . exp COMMA exp CLOSEPAREN
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    exp                            shift and go to state 202
    term                           shift and go to state 100
    factor                         shift and go to state 101
    vcte                           shift and go to state 102
    factor1                        shift and go to state 103
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108
    factor2                        shift and go to state 109
    openP                          shift and go to state 110

state 152

    (110) graphfig2 -> RECTANGLE dosExp .

    SEMICOLON       reduce using rule 110 (graphfig2 -> RECTANGLE dosExp .)


state 153

    (131) graphview1 -> COLOR_STAR unaExp .

    SEMICOLON       reduce using rule 131 (graphview1 -> COLOR_STAR unaExp .)


state 154

    (132) graphview1 -> SIZE_STAR unaExp .

    SEMICOLON       reduce using rule 132 (graphview1 -> SIZE_STAR unaExp .)


state 155

    (133) graphview2 -> SETXY dosExp .

    SEMICOLON       reduce using rule 133 (graphview2 -> SETXY dosExp .)


state 156

    (116) graphmove1 -> GO unaExp .

    SEMICOLON       reduce using rule 116 (graphmove1 -> GO unaExp .)


state 157

    (117) graphmove1 -> LEFT unaExp .

    SEMICOLON       reduce using rule 117 (graphmove1 -> LEFT unaExp .)


state 158

    (118) graphmove1 -> RIGHT unaExp .

    SEMICOLON       reduce using rule 118 (graphmove1 -> RIGHT unaExp .)


state 159

    (119) graphmove1 -> BACK unaExp .

    SEMICOLON       reduce using rule 119 (graphmove1 -> BACK unaExp .)


state 160

    (120) graphmove2 -> ARC dosExp .

    SEMICOLON       reduce using rule 120 (graphmove2 -> ARC dosExp .)


state 161

    (25) function -> FUN functionI function2 inicia_fun declara_vars . function4 termina_fun
    (31) function4 -> . stmt function4
    (32) function4 -> . empty
    (14) stmt -> . assignment
    (15) stmt -> . condition
    (16) stmt -> . print
    (17) stmt -> . loop
    (18) stmt -> . read
    (19) stmt -> . graphstmt
    (20) stmt -> . graphr
    (21) stmt -> . funCall SEMICOLON
    (22) stmt -> . return
    (150) empty -> .
    (51) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (80) condition -> . IF head_cond body condition1
    (44) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (12) loop -> . while
    (13) loop -> . for
    (45) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (102) graphstmt -> . graphfig
    (103) graphstmt -> . graphview
    (104) graphstmt -> . graphmove
    (121) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (70) return -> . RETURN return1 SEMICOLON
    (50) id -> . ID
    (92) while -> . while1 body
    (91) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (105) graphfig -> . graphfig1 SEMICOLON
    (106) graphfig -> . graphfig2 SEMICOLON
    (126) graphview -> . graphview0 SEMICOLON
    (127) graphview -> . graphview1 SEMICOLON
    (128) graphview -> . graphview2 SEMICOLON
    (111) graphmove -> . graphmove0 SEMICOLON
    (112) graphmove -> . graphmove1 SEMICOLON
    (113) graphmove -> . graphmove2 SEMICOLON
    (125) repeat -> . REPEAT
    (93) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (107) graphfig1 -> . CIRCLE unaExp
    (108) graphfig1 -> . SQUARE unaExp
    (109) graphfig2 -> . TRIANGLE dosExp
    (110) graphfig2 -> . RECTANGLE dosExp
    (129) graphview0 -> . HIDE_STAR
    (130) graphview0 -> . SHOW_STAR
    (131) graphview1 -> . COLOR_STAR unaExp
    (132) graphview1 -> . SIZE_STAR unaExp
    (133) graphview2 -> . SETXY dosExp
    (114) graphmove0 -> . HAND_DOWN
    (115) graphmove0 -> . HAND_UP
    (116) graphmove1 -> . GO unaExp
    (117) graphmove1 -> . LEFT unaExp
    (118) graphmove1 -> . RIGHT unaExp
    (119) graphmove1 -> . BACK unaExp
    (120) graphmove2 -> . ARC dosExp
    (94) while_w -> . WHILE

    CLOSEBRACES     reduce using rule 150 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    ID              shift and go to state 62
    RETURN          shift and go to state 63
    FOR             shift and go to state 65
    REPEAT          shift and go to state 74
    CIRCLE          shift and go to state 76
    SQUARE          shift and go to state 77
    TRIANGLE        shift and go to state 78
    RECTANGLE       shift and go to state 79
    HIDE_STAR       shift and go to state 80
    SHOW_STAR       shift and go to state 81
    COLOR_STAR      shift and go to state 82
    SIZE_STAR       shift and go to state 83
    SETXY           shift and go to state 84
    HAND_DOWN       shift and go to state 85
    HAND_UP         shift and go to state 86
    GO              shift and go to state 87
    LEFT            shift and go to state 88
    RIGHT           shift and go to state 89
    BACK            shift and go to state 90
    ARC             shift and go to state 91
    WHILE           shift and go to state 92

    function4                      shift and go to state 203
    stmt                           shift and go to state 204
    empty                          shift and go to state 205
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    graphr                         shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    repeat                         shift and go to state 61
    while1                         shift and go to state 64
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73
    while_w                        shift and go to state 75

state 162

    (28) function2 -> OPENPAREN function3 CLOSEPAREN .

    OPENBRACES      reduce using rule 28 (function2 -> OPENPAREN function3 CLOSEPAREN .)


state 163

    (29) function3 -> type ID . function5
    (33) function5 -> . COMMA type ID function5
    (34) function5 -> . empty
    (150) empty -> .

    COMMA           shift and go to state 207
    CLOSEPAREN      reduce using rule 150 (empty -> .)

    function5                      shift and go to state 206
    empty                          shift and go to state 208

state 164

    (35) vars -> type ID vars1 equals exp SEMICOLON .

    INT             reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    FLOAT           reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    CHAR            reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    FUN             reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    MULTIPLICATION  reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    IF              reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    PRINT           reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    READ            reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    ID              reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    RETURN          reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    FOR             reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    REPEAT          reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    CIRCLE          reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    SQUARE          reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    TRIANGLE        reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    RECTANGLE       reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    HIDE_STAR       reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    SHOW_STAR       reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    COLOR_STAR      reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    SIZE_STAR       reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    SETXY           reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    HAND_DOWN       reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    HAND_UP         reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    GO              reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    LEFT            reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    RIGHT           reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    BACK            reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    ARC             reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    WHILE           reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)
    CLOSEBRACES     reduce using rule 35 (vars -> type ID vars1 equals exp SEMICOLON .)


state 165

    (134) exp -> term exp1 .

    SEMICOLON       reduce using rule 134 (exp -> term exp1 .)
    GREATER         reduce using rule 134 (exp -> term exp1 .)
    LESS            reduce using rule 134 (exp -> term exp1 .)
    NOTEQUAL        reduce using rule 134 (exp -> term exp1 .)
    ISEQUAL         reduce using rule 134 (exp -> term exp1 .)
    CLOSEPAREN      reduce using rule 134 (exp -> term exp1 .)
    CLOSEBRACKET    reduce using rule 134 (exp -> term exp1 .)
    COMMA           reduce using rule 134 (exp -> term exp1 .)
    CTEINT          reduce using rule 134 (exp -> term exp1 .)
    CTEFLOAT        reduce using rule 134 (exp -> term exp1 .)
    CTECHAR         reduce using rule 134 (exp -> term exp1 .)
    ID              reduce using rule 134 (exp -> term exp1 .)
    ADDITION        reduce using rule 134 (exp -> term exp1 .)
    SUBSTRACTION    reduce using rule 134 (exp -> term exp1 .)
    OPENPAREN       reduce using rule 134 (exp -> term exp1 .)


state 166

    (135) exp1 -> ADDITION . exp
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    exp                            shift and go to state 209
    term                           shift and go to state 100
    factor                         shift and go to state 101
    vcte                           shift and go to state 102
    factor1                        shift and go to state 103
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108
    factor2                        shift and go to state 109
    openP                          shift and go to state 110

state 167

    (136) exp1 -> SUBSTRACTION . exp
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    exp                            shift and go to state 210
    term                           shift and go to state 100
    factor                         shift and go to state 101
    vcte                           shift and go to state 102
    factor1                        shift and go to state 103
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108
    factor2                        shift and go to state 109
    openP                          shift and go to state 110

state 168

    (137) exp1 -> empty .

    SEMICOLON       reduce using rule 137 (exp1 -> empty .)
    GREATER         reduce using rule 137 (exp1 -> empty .)
    LESS            reduce using rule 137 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 137 (exp1 -> empty .)
    ISEQUAL         reduce using rule 137 (exp1 -> empty .)
    CLOSEPAREN      reduce using rule 137 (exp1 -> empty .)
    CLOSEBRACKET    reduce using rule 137 (exp1 -> empty .)
    COMMA           reduce using rule 137 (exp1 -> empty .)
    CTEINT          reduce using rule 137 (exp1 -> empty .)
    CTEFLOAT        reduce using rule 137 (exp1 -> empty .)
    CTECHAR         reduce using rule 137 (exp1 -> empty .)
    ID              reduce using rule 137 (exp1 -> empty .)
    ADDITION        reduce using rule 137 (exp1 -> empty .)
    SUBSTRACTION    reduce using rule 137 (exp1 -> empty .)
    OPENPAREN       reduce using rule 137 (exp1 -> empty .)


state 169

    (146) term -> factor term1 .

    ADDITION        reduce using rule 146 (term -> factor term1 .)
    SUBSTRACTION    reduce using rule 146 (term -> factor term1 .)
    SEMICOLON       reduce using rule 146 (term -> factor term1 .)
    GREATER         reduce using rule 146 (term -> factor term1 .)
    LESS            reduce using rule 146 (term -> factor term1 .)
    NOTEQUAL        reduce using rule 146 (term -> factor term1 .)
    ISEQUAL         reduce using rule 146 (term -> factor term1 .)
    CLOSEPAREN      reduce using rule 146 (term -> factor term1 .)
    CLOSEBRACKET    reduce using rule 146 (term -> factor term1 .)
    COMMA           reduce using rule 146 (term -> factor term1 .)
    CTEINT          reduce using rule 146 (term -> factor term1 .)
    CTEFLOAT        reduce using rule 146 (term -> factor term1 .)
    CTECHAR         reduce using rule 146 (term -> factor term1 .)
    ID              reduce using rule 146 (term -> factor term1 .)
    OPENPAREN       reduce using rule 146 (term -> factor term1 .)


state 170

    (147) term1 -> MULTIPLICATION . term
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    term                           shift and go to state 211
    factor                         shift and go to state 101
    vcte                           shift and go to state 102
    factor1                        shift and go to state 103
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108
    factor2                        shift and go to state 109
    openP                          shift and go to state 110

state 171

    (148) term1 -> DIVISION . term
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    term                           shift and go to state 212
    factor                         shift and go to state 101
    vcte                           shift and go to state 102
    factor1                        shift and go to state 103
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108
    factor2                        shift and go to state 109
    openP                          shift and go to state 110

state 172

    (149) term1 -> empty .

    ADDITION        reduce using rule 149 (term1 -> empty .)
    SUBSTRACTION    reduce using rule 149 (term1 -> empty .)
    SEMICOLON       reduce using rule 149 (term1 -> empty .)
    GREATER         reduce using rule 149 (term1 -> empty .)
    LESS            reduce using rule 149 (term1 -> empty .)
    NOTEQUAL        reduce using rule 149 (term1 -> empty .)
    ISEQUAL         reduce using rule 149 (term1 -> empty .)
    CLOSEPAREN      reduce using rule 149 (term1 -> empty .)
    CLOSEBRACKET    reduce using rule 149 (term1 -> empty .)
    COMMA           reduce using rule 149 (term1 -> empty .)
    CTEINT          reduce using rule 149 (term1 -> empty .)
    CTEFLOAT        reduce using rule 149 (term1 -> empty .)
    CTECHAR         reduce using rule 149 (term1 -> empty .)
    ID              reduce using rule 149 (term1 -> empty .)
    OPENPAREN       reduce using rule 149 (term1 -> empty .)


state 173

    (61) vcte -> id vcte1 .

    MULTIPLICATION  reduce using rule 61 (vcte -> id vcte1 .)
    DIVISION        reduce using rule 61 (vcte -> id vcte1 .)
    ADDITION        reduce using rule 61 (vcte -> id vcte1 .)
    SUBSTRACTION    reduce using rule 61 (vcte -> id vcte1 .)
    SEMICOLON       reduce using rule 61 (vcte -> id vcte1 .)
    GREATER         reduce using rule 61 (vcte -> id vcte1 .)
    LESS            reduce using rule 61 (vcte -> id vcte1 .)
    NOTEQUAL        reduce using rule 61 (vcte -> id vcte1 .)
    ISEQUAL         reduce using rule 61 (vcte -> id vcte1 .)
    CLOSEPAREN      reduce using rule 61 (vcte -> id vcte1 .)
    CLOSEBRACKET    reduce using rule 61 (vcte -> id vcte1 .)
    COMMA           reduce using rule 61 (vcte -> id vcte1 .)
    CTEINT          reduce using rule 61 (vcte -> id vcte1 .)
    CTEFLOAT        reduce using rule 61 (vcte -> id vcte1 .)
    CTECHAR         reduce using rule 61 (vcte -> id vcte1 .)
    ID              reduce using rule 61 (vcte -> id vcte1 .)
    OPENPAREN       reduce using rule 61 (vcte -> id vcte1 .)


state 174

    (63) vcte1 -> OPENBRACKET . exp CLOSEBRACKET vcte3
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    exp                            shift and go to state 213
    term                           shift and go to state 100
    factor                         shift and go to state 101
    vcte                           shift and go to state 102
    factor1                        shift and go to state 103
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108
    factor2                        shift and go to state 109
    openP                          shift and go to state 110

state 175

    (64) vcte1 -> empty .

    MULTIPLICATION  reduce using rule 64 (vcte1 -> empty .)
    DIVISION        reduce using rule 64 (vcte1 -> empty .)
    ADDITION        reduce using rule 64 (vcte1 -> empty .)
    SUBSTRACTION    reduce using rule 64 (vcte1 -> empty .)
    SEMICOLON       reduce using rule 64 (vcte1 -> empty .)
    GREATER         reduce using rule 64 (vcte1 -> empty .)
    LESS            reduce using rule 64 (vcte1 -> empty .)
    NOTEQUAL        reduce using rule 64 (vcte1 -> empty .)
    ISEQUAL         reduce using rule 64 (vcte1 -> empty .)
    CLOSEPAREN      reduce using rule 64 (vcte1 -> empty .)
    CLOSEBRACKET    reduce using rule 64 (vcte1 -> empty .)
    COMMA           reduce using rule 64 (vcte1 -> empty .)
    CTEINT          reduce using rule 64 (vcte1 -> empty .)
    CTEFLOAT        reduce using rule 64 (vcte1 -> empty .)
    CTECHAR         reduce using rule 64 (vcte1 -> empty .)
    ID              reduce using rule 64 (vcte1 -> empty .)
    OPENPAREN       reduce using rule 64 (vcte1 -> empty .)


state 176

    (142) factor1 -> factor2 vcte .

    MULTIPLICATION  reduce using rule 142 (factor1 -> factor2 vcte .)
    DIVISION        reduce using rule 142 (factor1 -> factor2 vcte .)
    ADDITION        reduce using rule 142 (factor1 -> factor2 vcte .)
    SUBSTRACTION    reduce using rule 142 (factor1 -> factor2 vcte .)
    SEMICOLON       reduce using rule 142 (factor1 -> factor2 vcte .)
    GREATER         reduce using rule 142 (factor1 -> factor2 vcte .)
    LESS            reduce using rule 142 (factor1 -> factor2 vcte .)
    NOTEQUAL        reduce using rule 142 (factor1 -> factor2 vcte .)
    ISEQUAL         reduce using rule 142 (factor1 -> factor2 vcte .)
    CLOSEPAREN      reduce using rule 142 (factor1 -> factor2 vcte .)
    CLOSEBRACKET    reduce using rule 142 (factor1 -> factor2 vcte .)
    COMMA           reduce using rule 142 (factor1 -> factor2 vcte .)
    CTEINT          reduce using rule 142 (factor1 -> factor2 vcte .)
    CTEFLOAT        reduce using rule 142 (factor1 -> factor2 vcte .)
    CTECHAR         reduce using rule 142 (factor1 -> factor2 vcte .)
    ID              reduce using rule 142 (factor1 -> factor2 vcte .)
    OPENPAREN       reduce using rule 142 (factor1 -> factor2 vcte .)


state 177

    (143) factor1 -> openP expression . closeP
    (139) closeP -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 215

    closeP                         shift and go to state 214

state 178

    (73) expression -> exp . expression1
    (74) expression1 -> . loper exp
    (75) expression1 -> . empty
    (76) loper -> . GREATER
    (77) loper -> . LESS
    (78) loper -> . NOTEQUAL
    (79) loper -> . ISEQUAL
    (150) empty -> .

    GREATER         shift and go to state 219
    LESS            shift and go to state 220
    NOTEQUAL        shift and go to state 221
    ISEQUAL         shift and go to state 222
    CLOSEPAREN      reduce using rule 150 (empty -> .)

    expression1                    shift and go to state 216
    loper                          shift and go to state 217
    empty                          shift and go to state 218

state 179

    (39) vars3 -> OPENBRACKET . CTEINT CLOSEBRACKET

    CTEINT          shift and go to state 223


state 180

    (37) vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .

    SEMICOLON       reduce using rule 37 (vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .)
    EQUALS          reduce using rule 37 (vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .)


state 181

    (40) vars3 -> empty .

    SEMICOLON       reduce using rule 40 (vars3 -> empty .)
    EQUALS          reduce using rule 40 (vars3 -> empty .)


state 182

    (51) assignment -> id assignment1 equals . assignment3 SEMICOLON
    (56) assignment3 -> . exp
    (57) assignment3 -> . read
    (134) exp -> . term exp1
    (45) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    READ            shift and go to state 57
    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    id                             shift and go to state 107
    assignment3                    shift and go to state 224
    exp                            shift and go to state 225
    read                           shift and go to state 226
    term                           shift and go to state 100
    factor                         shift and go to state 101
    vcte                           shift and go to state 102
    factor1                        shift and go to state 103
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    funCall                        shift and go to state 108
    factor2                        shift and go to state 109
    openP                          shift and go to state 110

state 183

    (53) assignment1 -> assignment2 assignment1 .

    EQUALS          reduce using rule 53 (assignment1 -> assignment2 assignment1 .)


state 184

    (55) assignment2 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 227


state 185

    (80) condition -> IF head_cond body . condition1
    (81) condition1 -> . elseif head_cond body condition1
    (82) condition1 -> . else body
    (83) condition1 -> . empty
    (84) elseif -> . ELSEIF
    (85) else -> . ELSE
    (150) empty -> .

    ELSEIF          shift and go to state 232
    ELSE            shift and go to state 233
    IF              reduce using rule 150 (empty -> .)
    PRINT           reduce using rule 150 (empty -> .)
    READ            reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    RETURN          reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    REPEAT          reduce using rule 150 (empty -> .)
    CIRCLE          reduce using rule 150 (empty -> .)
    SQUARE          reduce using rule 150 (empty -> .)
    TRIANGLE        reduce using rule 150 (empty -> .)
    RECTANGLE       reduce using rule 150 (empty -> .)
    HIDE_STAR       reduce using rule 150 (empty -> .)
    SHOW_STAR       reduce using rule 150 (empty -> .)
    COLOR_STAR      reduce using rule 150 (empty -> .)
    SIZE_STAR       reduce using rule 150 (empty -> .)
    SETXY           reduce using rule 150 (empty -> .)
    HAND_DOWN       reduce using rule 150 (empty -> .)
    HAND_UP         reduce using rule 150 (empty -> .)
    GO              reduce using rule 150 (empty -> .)
    LEFT            reduce using rule 150 (empty -> .)
    RIGHT           reduce using rule 150 (empty -> .)
    BACK            reduce using rule 150 (empty -> .)
    ARC             reduce using rule 150 (empty -> .)
    WHILE           reduce using rule 150 (empty -> .)
    CLOSEBRACES     reduce using rule 150 (empty -> .)

    condition1                     shift and go to state 228
    elseif                         shift and go to state 229
    else                           shift and go to state 230
    empty                          shift and go to state 231

state 186

    (86) head_cond -> OPENPAREN expression . close_condition
    (88) close_condition -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 235

    close_condition                shift and go to state 234

state 187

    (44) print -> PRINT OPENPAREN expression . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 236


state 188

    (45) read -> READ OPENPAREN id . read1 CLOSEPAREN SEMICOLON
    (46) read1 -> . OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (47) read1 -> . OPENBRACKET exp CLOSEBRACKET
    (48) read1 -> . empty
    (150) empty -> .

    OPENBRACKET     shift and go to state 238
    CLOSEPAREN      reduce using rule 150 (empty -> .)

    read1                          shift and go to state 237
    empty                          shift and go to state 239

state 189

    (50) id -> ID .

    OPENBRACKET     reduce using rule 50 (id -> ID .)
    CLOSEPAREN      reduce using rule 50 (id -> ID .)


state 190

    (121) graphr -> repeat rep OPENBRACES . graphstmt graphr1 CLOSEBRACES
    (102) graphstmt -> . graphfig
    (103) graphstmt -> . graphview
    (104) graphstmt -> . graphmove
    (105) graphfig -> . graphfig1 SEMICOLON
    (106) graphfig -> . graphfig2 SEMICOLON
    (126) graphview -> . graphview0 SEMICOLON
    (127) graphview -> . graphview1 SEMICOLON
    (128) graphview -> . graphview2 SEMICOLON
    (111) graphmove -> . graphmove0 SEMICOLON
    (112) graphmove -> . graphmove1 SEMICOLON
    (113) graphmove -> . graphmove2 SEMICOLON
    (107) graphfig1 -> . CIRCLE unaExp
    (108) graphfig1 -> . SQUARE unaExp
    (109) graphfig2 -> . TRIANGLE dosExp
    (110) graphfig2 -> . RECTANGLE dosExp
    (129) graphview0 -> . HIDE_STAR
    (130) graphview0 -> . SHOW_STAR
    (131) graphview1 -> . COLOR_STAR unaExp
    (132) graphview1 -> . SIZE_STAR unaExp
    (133) graphview2 -> . SETXY dosExp
    (114) graphmove0 -> . HAND_DOWN
    (115) graphmove0 -> . HAND_UP
    (116) graphmove1 -> . GO unaExp
    (117) graphmove1 -> . LEFT unaExp
    (118) graphmove1 -> . RIGHT unaExp
    (119) graphmove1 -> . BACK unaExp
    (120) graphmove2 -> . ARC dosExp

    CIRCLE          shift and go to state 76
    SQUARE          shift and go to state 77
    TRIANGLE        shift and go to state 78
    RECTANGLE       shift and go to state 79
    HIDE_STAR       shift and go to state 80
    SHOW_STAR       shift and go to state 81
    COLOR_STAR      shift and go to state 82
    SIZE_STAR       shift and go to state 83
    SETXY           shift and go to state 84
    HAND_DOWN       shift and go to state 85
    HAND_UP         shift and go to state 86
    GO              shift and go to state 87
    LEFT            shift and go to state 88
    RIGHT           shift and go to state 89
    BACK            shift and go to state 90
    ARC             shift and go to state 91

    graphstmt                      shift and go to state 240
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73

state 191

    (124) rep -> OPENPAREN exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 241


state 192

    (95) funCall -> ID OPENPAREN funCall2 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 242


state 193

    (96) funCall2 -> exp . funCall3
    (98) funCall3 -> . COMMA exp funCall2
    (99) funCall3 -> . empty
    (150) empty -> .

    COMMA           shift and go to state 244
    CLOSEPAREN      reduce using rule 150 (empty -> .)

    funCall3                       shift and go to state 243
    empty                          shift and go to state 245

state 194

    (97) funCall2 -> empty .

    CLOSEPAREN      reduce using rule 97 (funCall2 -> empty .)


state 195

    (70) return -> RETURN return1 SEMICOLON .

    IF              reduce using rule 70 (return -> RETURN return1 SEMICOLON .)
    PRINT           reduce using rule 70 (return -> RETURN return1 SEMICOLON .)
    READ            reduce using rule 70 (return -> RETURN return1 SEMICOLON .)
    ID              reduce using rule 70 (return -> RETURN return1 SEMICOLON .)
    RETURN          reduce using rule 70 (return -> RETURN return1 SEMICOLON .)
    FOR             reduce using rule 70 (return -> RETURN return1 SEMICOLON .)
    REPEAT          reduce using rule 70 (return -> RETURN return1 SEMICOLON .)
    CIRCLE          reduce using rule 70 (return -> RETURN return1 SEMICOLON .)
    SQUARE          reduce using rule 70 (return -> RETURN return1 SEMICOLON .)
    TRIANGLE        reduce using rule 70 (return -> RETURN return1 SEMICOLON .)
    RECTANGLE       reduce using rule 70 (return -> RETURN return1 SEMICOLON .)
    HIDE_STAR       reduce using rule 70 (return -> RETURN return1 SEMICOLON .)
    SHOW_STAR       reduce using rule 70 (return -> RETURN return1 SEMICOLON .)
    COLOR_STAR      reduce using rule 70 (return -> RETURN return1 SEMICOLON .)
    SIZE_STAR       reduce using rule 70 (return -> RETURN return1 SEMICOLON .)
    SETXY           reduce using rule 70 (return -> RETURN return1 SEMICOLON .)
    HAND_DOWN       reduce using rule 70 (return -> RETURN return1 SEMICOLON .)
    HAND_UP         reduce using rule 70 (return -> RETURN return1 SEMICOLON .)
    GO              reduce using rule 70 (return -> RETURN return1 SEMICOLON .)
    LEFT            reduce using rule 70 (return -> RETURN return1 SEMICOLON .)
    RIGHT           reduce using rule 70 (return -> RETURN return1 SEMICOLON .)
    BACK            reduce using rule 70 (return -> RETURN return1 SEMICOLON .)
    ARC             reduce using rule 70 (return -> RETURN return1 SEMICOLON .)
    WHILE           reduce using rule 70 (return -> RETURN return1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 70 (return -> RETURN return1 SEMICOLON .)


state 196

    (87) body -> OPENBRACES body1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 246


state 197

    (89) body1 -> stmt . body1
    (89) body1 -> . stmt body1
    (90) body1 -> . empty
    (14) stmt -> . assignment
    (15) stmt -> . condition
    (16) stmt -> . print
    (17) stmt -> . loop
    (18) stmt -> . read
    (19) stmt -> . graphstmt
    (20) stmt -> . graphr
    (21) stmt -> . funCall SEMICOLON
    (22) stmt -> . return
    (150) empty -> .
    (51) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (80) condition -> . IF head_cond body condition1
    (44) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (12) loop -> . while
    (13) loop -> . for
    (45) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (102) graphstmt -> . graphfig
    (103) graphstmt -> . graphview
    (104) graphstmt -> . graphmove
    (121) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (70) return -> . RETURN return1 SEMICOLON
    (50) id -> . ID
    (92) while -> . while1 body
    (91) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (105) graphfig -> . graphfig1 SEMICOLON
    (106) graphfig -> . graphfig2 SEMICOLON
    (126) graphview -> . graphview0 SEMICOLON
    (127) graphview -> . graphview1 SEMICOLON
    (128) graphview -> . graphview2 SEMICOLON
    (111) graphmove -> . graphmove0 SEMICOLON
    (112) graphmove -> . graphmove1 SEMICOLON
    (113) graphmove -> . graphmove2 SEMICOLON
    (125) repeat -> . REPEAT
    (93) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (107) graphfig1 -> . CIRCLE unaExp
    (108) graphfig1 -> . SQUARE unaExp
    (109) graphfig2 -> . TRIANGLE dosExp
    (110) graphfig2 -> . RECTANGLE dosExp
    (129) graphview0 -> . HIDE_STAR
    (130) graphview0 -> . SHOW_STAR
    (131) graphview1 -> . COLOR_STAR unaExp
    (132) graphview1 -> . SIZE_STAR unaExp
    (133) graphview2 -> . SETXY dosExp
    (114) graphmove0 -> . HAND_DOWN
    (115) graphmove0 -> . HAND_UP
    (116) graphmove1 -> . GO unaExp
    (117) graphmove1 -> . LEFT unaExp
    (118) graphmove1 -> . RIGHT unaExp
    (119) graphmove1 -> . BACK unaExp
    (120) graphmove2 -> . ARC dosExp
    (94) while_w -> . WHILE

    CLOSEBRACES     reduce using rule 150 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    ID              shift and go to state 62
    RETURN          shift and go to state 63
    FOR             shift and go to state 65
    REPEAT          shift and go to state 74
    CIRCLE          shift and go to state 76
    SQUARE          shift and go to state 77
    TRIANGLE        shift and go to state 78
    RECTANGLE       shift and go to state 79
    HIDE_STAR       shift and go to state 80
    SHOW_STAR       shift and go to state 81
    COLOR_STAR      shift and go to state 82
    SIZE_STAR       shift and go to state 83
    SETXY           shift and go to state 84
    HAND_DOWN       shift and go to state 85
    HAND_UP         shift and go to state 86
    GO              shift and go to state 87
    LEFT            shift and go to state 88
    RIGHT           shift and go to state 89
    BACK            shift and go to state 90
    ARC             shift and go to state 91
    WHILE           shift and go to state 92

    stmt                           shift and go to state 197
    body1                          shift and go to state 247
    empty                          shift and go to state 198
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    graphr                         shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    repeat                         shift and go to state 61
    while1                         shift and go to state 64
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73
    while_w                        shift and go to state 75

state 198

    (90) body1 -> empty .

    CLOSEBRACES     reduce using rule 90 (body1 -> empty .)


state 199

    (91) for -> FOR OPENPAREN ID . TWODOTS exp CLOSEPAREN body

    TWODOTS         shift and go to state 248


state 200

    (93) while1 -> while_w OPENPAREN expression . CLOSEPAREN

    CLOSEPAREN      shift and go to state 249


state 201

    (101) unaExp -> OPENPAREN exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 250


state 202

    (100) dosExp -> OPENPAREN exp . COMMA exp CLOSEPAREN

    COMMA           shift and go to state 251


state 203

    (25) function -> FUN functionI function2 inicia_fun declara_vars function4 . termina_fun
    (27) termina_fun -> . CLOSEBRACES

    CLOSEBRACES     shift and go to state 253

    termina_fun                    shift and go to state 252

state 204

    (31) function4 -> stmt . function4
    (31) function4 -> . stmt function4
    (32) function4 -> . empty
    (14) stmt -> . assignment
    (15) stmt -> . condition
    (16) stmt -> . print
    (17) stmt -> . loop
    (18) stmt -> . read
    (19) stmt -> . graphstmt
    (20) stmt -> . graphr
    (21) stmt -> . funCall SEMICOLON
    (22) stmt -> . return
    (150) empty -> .
    (51) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (80) condition -> . IF head_cond body condition1
    (44) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (12) loop -> . while
    (13) loop -> . for
    (45) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (102) graphstmt -> . graphfig
    (103) graphstmt -> . graphview
    (104) graphstmt -> . graphmove
    (121) graphr -> . repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (70) return -> . RETURN return1 SEMICOLON
    (50) id -> . ID
    (92) while -> . while1 body
    (91) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (105) graphfig -> . graphfig1 SEMICOLON
    (106) graphfig -> . graphfig2 SEMICOLON
    (126) graphview -> . graphview0 SEMICOLON
    (127) graphview -> . graphview1 SEMICOLON
    (128) graphview -> . graphview2 SEMICOLON
    (111) graphmove -> . graphmove0 SEMICOLON
    (112) graphmove -> . graphmove1 SEMICOLON
    (113) graphmove -> . graphmove2 SEMICOLON
    (125) repeat -> . REPEAT
    (93) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (107) graphfig1 -> . CIRCLE unaExp
    (108) graphfig1 -> . SQUARE unaExp
    (109) graphfig2 -> . TRIANGLE dosExp
    (110) graphfig2 -> . RECTANGLE dosExp
    (129) graphview0 -> . HIDE_STAR
    (130) graphview0 -> . SHOW_STAR
    (131) graphview1 -> . COLOR_STAR unaExp
    (132) graphview1 -> . SIZE_STAR unaExp
    (133) graphview2 -> . SETXY dosExp
    (114) graphmove0 -> . HAND_DOWN
    (115) graphmove0 -> . HAND_UP
    (116) graphmove1 -> . GO unaExp
    (117) graphmove1 -> . LEFT unaExp
    (118) graphmove1 -> . RIGHT unaExp
    (119) graphmove1 -> . BACK unaExp
    (120) graphmove2 -> . ARC dosExp
    (94) while_w -> . WHILE

    CLOSEBRACES     reduce using rule 150 (empty -> .)
    IF              shift and go to state 53
    PRINT           shift and go to state 54
    READ            shift and go to state 57
    ID              shift and go to state 62
    RETURN          shift and go to state 63
    FOR             shift and go to state 65
    REPEAT          shift and go to state 74
    CIRCLE          shift and go to state 76
    SQUARE          shift and go to state 77
    TRIANGLE        shift and go to state 78
    RECTANGLE       shift and go to state 79
    HIDE_STAR       shift and go to state 80
    SHOW_STAR       shift and go to state 81
    COLOR_STAR      shift and go to state 82
    SIZE_STAR       shift and go to state 83
    SETXY           shift and go to state 84
    HAND_DOWN       shift and go to state 85
    HAND_UP         shift and go to state 86
    GO              shift and go to state 87
    LEFT            shift and go to state 88
    RIGHT           shift and go to state 89
    BACK            shift and go to state 90
    ARC             shift and go to state 91
    WHILE           shift and go to state 92

    stmt                           shift and go to state 204
    function4                      shift and go to state 254
    empty                          shift and go to state 205
    assignment                     shift and go to state 43
    condition                      shift and go to state 44
    print                          shift and go to state 45
    loop                           shift and go to state 46
    read                           shift and go to state 47
    graphstmt                      shift and go to state 48
    graphr                         shift and go to state 49
    funCall                        shift and go to state 50
    return                         shift and go to state 51
    id                             shift and go to state 52
    while                          shift and go to state 55
    for                            shift and go to state 56
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    repeat                         shift and go to state 61
    while1                         shift and go to state 64
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73
    while_w                        shift and go to state 75

state 205

    (32) function4 -> empty .

    CLOSEBRACES     reduce using rule 32 (function4 -> empty .)


state 206

    (29) function3 -> type ID function5 .

    CLOSEPAREN      reduce using rule 29 (function3 -> type ID function5 .)


state 207

    (33) function5 -> COMMA . type ID function5
    (41) type -> . INT
    (42) type -> . FLOAT
    (43) type -> . CHAR

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    type                           shift and go to state 255

state 208

    (34) function5 -> empty .

    CLOSEPAREN      reduce using rule 34 (function5 -> empty .)


state 209

    (135) exp1 -> ADDITION exp .

    SEMICOLON       reduce using rule 135 (exp1 -> ADDITION exp .)
    GREATER         reduce using rule 135 (exp1 -> ADDITION exp .)
    LESS            reduce using rule 135 (exp1 -> ADDITION exp .)
    NOTEQUAL        reduce using rule 135 (exp1 -> ADDITION exp .)
    ISEQUAL         reduce using rule 135 (exp1 -> ADDITION exp .)
    CLOSEPAREN      reduce using rule 135 (exp1 -> ADDITION exp .)
    CLOSEBRACKET    reduce using rule 135 (exp1 -> ADDITION exp .)
    COMMA           reduce using rule 135 (exp1 -> ADDITION exp .)
    CTEINT          reduce using rule 135 (exp1 -> ADDITION exp .)
    CTEFLOAT        reduce using rule 135 (exp1 -> ADDITION exp .)
    CTECHAR         reduce using rule 135 (exp1 -> ADDITION exp .)
    ID              reduce using rule 135 (exp1 -> ADDITION exp .)
    ADDITION        reduce using rule 135 (exp1 -> ADDITION exp .)
    SUBSTRACTION    reduce using rule 135 (exp1 -> ADDITION exp .)
    OPENPAREN       reduce using rule 135 (exp1 -> ADDITION exp .)


state 210

    (136) exp1 -> SUBSTRACTION exp .

    SEMICOLON       reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    GREATER         reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    LESS            reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    NOTEQUAL        reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    ISEQUAL         reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    CLOSEPAREN      reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    CLOSEBRACKET    reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    COMMA           reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    CTEINT          reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    CTEFLOAT        reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    CTECHAR         reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    ID              reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    ADDITION        reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    SUBSTRACTION    reduce using rule 136 (exp1 -> SUBSTRACTION exp .)
    OPENPAREN       reduce using rule 136 (exp1 -> SUBSTRACTION exp .)


state 211

    (147) term1 -> MULTIPLICATION term .

    ADDITION        reduce using rule 147 (term1 -> MULTIPLICATION term .)
    SUBSTRACTION    reduce using rule 147 (term1 -> MULTIPLICATION term .)
    SEMICOLON       reduce using rule 147 (term1 -> MULTIPLICATION term .)
    GREATER         reduce using rule 147 (term1 -> MULTIPLICATION term .)
    LESS            reduce using rule 147 (term1 -> MULTIPLICATION term .)
    NOTEQUAL        reduce using rule 147 (term1 -> MULTIPLICATION term .)
    ISEQUAL         reduce using rule 147 (term1 -> MULTIPLICATION term .)
    CLOSEPAREN      reduce using rule 147 (term1 -> MULTIPLICATION term .)
    CLOSEBRACKET    reduce using rule 147 (term1 -> MULTIPLICATION term .)
    COMMA           reduce using rule 147 (term1 -> MULTIPLICATION term .)
    CTEINT          reduce using rule 147 (term1 -> MULTIPLICATION term .)
    CTEFLOAT        reduce using rule 147 (term1 -> MULTIPLICATION term .)
    CTECHAR         reduce using rule 147 (term1 -> MULTIPLICATION term .)
    ID              reduce using rule 147 (term1 -> MULTIPLICATION term .)
    OPENPAREN       reduce using rule 147 (term1 -> MULTIPLICATION term .)


state 212

    (148) term1 -> DIVISION term .

    ADDITION        reduce using rule 148 (term1 -> DIVISION term .)
    SUBSTRACTION    reduce using rule 148 (term1 -> DIVISION term .)
    SEMICOLON       reduce using rule 148 (term1 -> DIVISION term .)
    GREATER         reduce using rule 148 (term1 -> DIVISION term .)
    LESS            reduce using rule 148 (term1 -> DIVISION term .)
    NOTEQUAL        reduce using rule 148 (term1 -> DIVISION term .)
    ISEQUAL         reduce using rule 148 (term1 -> DIVISION term .)
    CLOSEPAREN      reduce using rule 148 (term1 -> DIVISION term .)
    CLOSEBRACKET    reduce using rule 148 (term1 -> DIVISION term .)
    COMMA           reduce using rule 148 (term1 -> DIVISION term .)
    CTEINT          reduce using rule 148 (term1 -> DIVISION term .)
    CTEFLOAT        reduce using rule 148 (term1 -> DIVISION term .)
    CTECHAR         reduce using rule 148 (term1 -> DIVISION term .)
    ID              reduce using rule 148 (term1 -> DIVISION term .)
    OPENPAREN       reduce using rule 148 (term1 -> DIVISION term .)


state 213

    (63) vcte1 -> OPENBRACKET exp . CLOSEBRACKET vcte3

    CLOSEBRACKET    shift and go to state 256


state 214

    (143) factor1 -> openP expression closeP .

    MULTIPLICATION  reduce using rule 143 (factor1 -> openP expression closeP .)
    DIVISION        reduce using rule 143 (factor1 -> openP expression closeP .)
    ADDITION        reduce using rule 143 (factor1 -> openP expression closeP .)
    SUBSTRACTION    reduce using rule 143 (factor1 -> openP expression closeP .)
    SEMICOLON       reduce using rule 143 (factor1 -> openP expression closeP .)
    GREATER         reduce using rule 143 (factor1 -> openP expression closeP .)
    LESS            reduce using rule 143 (factor1 -> openP expression closeP .)
    NOTEQUAL        reduce using rule 143 (factor1 -> openP expression closeP .)
    ISEQUAL         reduce using rule 143 (factor1 -> openP expression closeP .)
    CLOSEPAREN      reduce using rule 143 (factor1 -> openP expression closeP .)
    CLOSEBRACKET    reduce using rule 143 (factor1 -> openP expression closeP .)
    COMMA           reduce using rule 143 (factor1 -> openP expression closeP .)
    CTEINT          reduce using rule 143 (factor1 -> openP expression closeP .)
    CTEFLOAT        reduce using rule 143 (factor1 -> openP expression closeP .)
    CTECHAR         reduce using rule 143 (factor1 -> openP expression closeP .)
    ID              reduce using rule 143 (factor1 -> openP expression closeP .)
    OPENPAREN       reduce using rule 143 (factor1 -> openP expression closeP .)


state 215

    (139) closeP -> CLOSEPAREN .

    MULTIPLICATION  reduce using rule 139 (closeP -> CLOSEPAREN .)
    DIVISION        reduce using rule 139 (closeP -> CLOSEPAREN .)
    ADDITION        reduce using rule 139 (closeP -> CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 139 (closeP -> CLOSEPAREN .)
    SEMICOLON       reduce using rule 139 (closeP -> CLOSEPAREN .)
    GREATER         reduce using rule 139 (closeP -> CLOSEPAREN .)
    LESS            reduce using rule 139 (closeP -> CLOSEPAREN .)
    NOTEQUAL        reduce using rule 139 (closeP -> CLOSEPAREN .)
    ISEQUAL         reduce using rule 139 (closeP -> CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 139 (closeP -> CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 139 (closeP -> CLOSEPAREN .)
    COMMA           reduce using rule 139 (closeP -> CLOSEPAREN .)
    CTEINT          reduce using rule 139 (closeP -> CLOSEPAREN .)
    CTEFLOAT        reduce using rule 139 (closeP -> CLOSEPAREN .)
    CTECHAR         reduce using rule 139 (closeP -> CLOSEPAREN .)
    ID              reduce using rule 139 (closeP -> CLOSEPAREN .)
    OPENPAREN       reduce using rule 139 (closeP -> CLOSEPAREN .)


state 216

    (73) expression -> exp expression1 .

    CLOSEPAREN      reduce using rule 73 (expression -> exp expression1 .)


state 217

    (74) expression1 -> loper . exp
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    exp                            shift and go to state 257
    term                           shift and go to state 100
    factor                         shift and go to state 101
    vcte                           shift and go to state 102
    factor1                        shift and go to state 103
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108
    factor2                        shift and go to state 109
    openP                          shift and go to state 110

state 218

    (75) expression1 -> empty .

    CLOSEPAREN      reduce using rule 75 (expression1 -> empty .)


state 219

    (76) loper -> GREATER .

    CTEINT          reduce using rule 76 (loper -> GREATER .)
    CTEFLOAT        reduce using rule 76 (loper -> GREATER .)
    CTECHAR         reduce using rule 76 (loper -> GREATER .)
    ID              reduce using rule 76 (loper -> GREATER .)
    ADDITION        reduce using rule 76 (loper -> GREATER .)
    SUBSTRACTION    reduce using rule 76 (loper -> GREATER .)
    OPENPAREN       reduce using rule 76 (loper -> GREATER .)


state 220

    (77) loper -> LESS .

    CTEINT          reduce using rule 77 (loper -> LESS .)
    CTEFLOAT        reduce using rule 77 (loper -> LESS .)
    CTECHAR         reduce using rule 77 (loper -> LESS .)
    ID              reduce using rule 77 (loper -> LESS .)
    ADDITION        reduce using rule 77 (loper -> LESS .)
    SUBSTRACTION    reduce using rule 77 (loper -> LESS .)
    OPENPAREN       reduce using rule 77 (loper -> LESS .)


state 221

    (78) loper -> NOTEQUAL .

    CTEINT          reduce using rule 78 (loper -> NOTEQUAL .)
    CTEFLOAT        reduce using rule 78 (loper -> NOTEQUAL .)
    CTECHAR         reduce using rule 78 (loper -> NOTEQUAL .)
    ID              reduce using rule 78 (loper -> NOTEQUAL .)
    ADDITION        reduce using rule 78 (loper -> NOTEQUAL .)
    SUBSTRACTION    reduce using rule 78 (loper -> NOTEQUAL .)
    OPENPAREN       reduce using rule 78 (loper -> NOTEQUAL .)


state 222

    (79) loper -> ISEQUAL .

    CTEINT          reduce using rule 79 (loper -> ISEQUAL .)
    CTEFLOAT        reduce using rule 79 (loper -> ISEQUAL .)
    CTECHAR         reduce using rule 79 (loper -> ISEQUAL .)
    ID              reduce using rule 79 (loper -> ISEQUAL .)
    ADDITION        reduce using rule 79 (loper -> ISEQUAL .)
    SUBSTRACTION    reduce using rule 79 (loper -> ISEQUAL .)
    OPENPAREN       reduce using rule 79 (loper -> ISEQUAL .)


state 223

    (39) vars3 -> OPENBRACKET CTEINT . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 258


state 224

    (51) assignment -> id assignment1 equals assignment3 . SEMICOLON

    SEMICOLON       shift and go to state 259


state 225

    (56) assignment3 -> exp .

    SEMICOLON       reduce using rule 56 (assignment3 -> exp .)


state 226

    (57) assignment3 -> read .

    SEMICOLON       reduce using rule 57 (assignment3 -> read .)


state 227

    (55) assignment2 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     reduce using rule 55 (assignment2 -> OPENBRACKET exp CLOSEBRACKET .)
    EQUALS          reduce using rule 55 (assignment2 -> OPENBRACKET exp CLOSEBRACKET .)


state 228

    (80) condition -> IF head_cond body condition1 .

    IF              reduce using rule 80 (condition -> IF head_cond body condition1 .)
    PRINT           reduce using rule 80 (condition -> IF head_cond body condition1 .)
    READ            reduce using rule 80 (condition -> IF head_cond body condition1 .)
    ID              reduce using rule 80 (condition -> IF head_cond body condition1 .)
    RETURN          reduce using rule 80 (condition -> IF head_cond body condition1 .)
    FOR             reduce using rule 80 (condition -> IF head_cond body condition1 .)
    REPEAT          reduce using rule 80 (condition -> IF head_cond body condition1 .)
    CIRCLE          reduce using rule 80 (condition -> IF head_cond body condition1 .)
    SQUARE          reduce using rule 80 (condition -> IF head_cond body condition1 .)
    TRIANGLE        reduce using rule 80 (condition -> IF head_cond body condition1 .)
    RECTANGLE       reduce using rule 80 (condition -> IF head_cond body condition1 .)
    HIDE_STAR       reduce using rule 80 (condition -> IF head_cond body condition1 .)
    SHOW_STAR       reduce using rule 80 (condition -> IF head_cond body condition1 .)
    COLOR_STAR      reduce using rule 80 (condition -> IF head_cond body condition1 .)
    SIZE_STAR       reduce using rule 80 (condition -> IF head_cond body condition1 .)
    SETXY           reduce using rule 80 (condition -> IF head_cond body condition1 .)
    HAND_DOWN       reduce using rule 80 (condition -> IF head_cond body condition1 .)
    HAND_UP         reduce using rule 80 (condition -> IF head_cond body condition1 .)
    GO              reduce using rule 80 (condition -> IF head_cond body condition1 .)
    LEFT            reduce using rule 80 (condition -> IF head_cond body condition1 .)
    RIGHT           reduce using rule 80 (condition -> IF head_cond body condition1 .)
    BACK            reduce using rule 80 (condition -> IF head_cond body condition1 .)
    ARC             reduce using rule 80 (condition -> IF head_cond body condition1 .)
    WHILE           reduce using rule 80 (condition -> IF head_cond body condition1 .)
    CLOSEBRACES     reduce using rule 80 (condition -> IF head_cond body condition1 .)


state 229

    (81) condition1 -> elseif . head_cond body condition1
    (86) head_cond -> . OPENPAREN expression close_condition

    OPENPAREN       shift and go to state 126

    head_cond                      shift and go to state 260

state 230

    (82) condition1 -> else . body
    (87) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 136

    body                           shift and go to state 261

state 231

    (83) condition1 -> empty .

    IF              reduce using rule 83 (condition1 -> empty .)
    PRINT           reduce using rule 83 (condition1 -> empty .)
    READ            reduce using rule 83 (condition1 -> empty .)
    ID              reduce using rule 83 (condition1 -> empty .)
    RETURN          reduce using rule 83 (condition1 -> empty .)
    FOR             reduce using rule 83 (condition1 -> empty .)
    REPEAT          reduce using rule 83 (condition1 -> empty .)
    CIRCLE          reduce using rule 83 (condition1 -> empty .)
    SQUARE          reduce using rule 83 (condition1 -> empty .)
    TRIANGLE        reduce using rule 83 (condition1 -> empty .)
    RECTANGLE       reduce using rule 83 (condition1 -> empty .)
    HIDE_STAR       reduce using rule 83 (condition1 -> empty .)
    SHOW_STAR       reduce using rule 83 (condition1 -> empty .)
    COLOR_STAR      reduce using rule 83 (condition1 -> empty .)
    SIZE_STAR       reduce using rule 83 (condition1 -> empty .)
    SETXY           reduce using rule 83 (condition1 -> empty .)
    HAND_DOWN       reduce using rule 83 (condition1 -> empty .)
    HAND_UP         reduce using rule 83 (condition1 -> empty .)
    GO              reduce using rule 83 (condition1 -> empty .)
    LEFT            reduce using rule 83 (condition1 -> empty .)
    RIGHT           reduce using rule 83 (condition1 -> empty .)
    BACK            reduce using rule 83 (condition1 -> empty .)
    ARC             reduce using rule 83 (condition1 -> empty .)
    WHILE           reduce using rule 83 (condition1 -> empty .)
    CLOSEBRACES     reduce using rule 83 (condition1 -> empty .)


state 232

    (84) elseif -> ELSEIF .

    OPENPAREN       reduce using rule 84 (elseif -> ELSEIF .)


state 233

    (85) else -> ELSE .

    OPENBRACES      reduce using rule 85 (else -> ELSE .)


state 234

    (86) head_cond -> OPENPAREN expression close_condition .

    OPENBRACES      reduce using rule 86 (head_cond -> OPENPAREN expression close_condition .)


state 235

    (88) close_condition -> CLOSEPAREN .

    OPENBRACES      reduce using rule 88 (close_condition -> CLOSEPAREN .)


state 236

    (44) print -> PRINT OPENPAREN expression CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 262


state 237

    (45) read -> READ OPENPAREN id read1 . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 263


state 238

    (46) read1 -> OPENBRACKET . exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (47) read1 -> OPENBRACKET . exp CLOSEBRACKET
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    exp                            shift and go to state 264
    term                           shift and go to state 100
    factor                         shift and go to state 101
    vcte                           shift and go to state 102
    factor1                        shift and go to state 103
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108
    factor2                        shift and go to state 109
    openP                          shift and go to state 110

state 239

    (48) read1 -> empty .

    CLOSEPAREN      reduce using rule 48 (read1 -> empty .)


state 240

    (121) graphr -> repeat rep OPENBRACES graphstmt . graphr1 CLOSEBRACES
    (122) graphr1 -> . graphstmt graphr1
    (123) graphr1 -> . empty
    (102) graphstmt -> . graphfig
    (103) graphstmt -> . graphview
    (104) graphstmt -> . graphmove
    (150) empty -> .
    (105) graphfig -> . graphfig1 SEMICOLON
    (106) graphfig -> . graphfig2 SEMICOLON
    (126) graphview -> . graphview0 SEMICOLON
    (127) graphview -> . graphview1 SEMICOLON
    (128) graphview -> . graphview2 SEMICOLON
    (111) graphmove -> . graphmove0 SEMICOLON
    (112) graphmove -> . graphmove1 SEMICOLON
    (113) graphmove -> . graphmove2 SEMICOLON
    (107) graphfig1 -> . CIRCLE unaExp
    (108) graphfig1 -> . SQUARE unaExp
    (109) graphfig2 -> . TRIANGLE dosExp
    (110) graphfig2 -> . RECTANGLE dosExp
    (129) graphview0 -> . HIDE_STAR
    (130) graphview0 -> . SHOW_STAR
    (131) graphview1 -> . COLOR_STAR unaExp
    (132) graphview1 -> . SIZE_STAR unaExp
    (133) graphview2 -> . SETXY dosExp
    (114) graphmove0 -> . HAND_DOWN
    (115) graphmove0 -> . HAND_UP
    (116) graphmove1 -> . GO unaExp
    (117) graphmove1 -> . LEFT unaExp
    (118) graphmove1 -> . RIGHT unaExp
    (119) graphmove1 -> . BACK unaExp
    (120) graphmove2 -> . ARC dosExp

    CLOSEBRACES     reduce using rule 150 (empty -> .)
    CIRCLE          shift and go to state 76
    SQUARE          shift and go to state 77
    TRIANGLE        shift and go to state 78
    RECTANGLE       shift and go to state 79
    HIDE_STAR       shift and go to state 80
    SHOW_STAR       shift and go to state 81
    COLOR_STAR      shift and go to state 82
    SIZE_STAR       shift and go to state 83
    SETXY           shift and go to state 84
    HAND_DOWN       shift and go to state 85
    HAND_UP         shift and go to state 86
    GO              shift and go to state 87
    LEFT            shift and go to state 88
    RIGHT           shift and go to state 89
    BACK            shift and go to state 90
    ARC             shift and go to state 91

    graphstmt                      shift and go to state 265
    graphr1                        shift and go to state 266
    empty                          shift and go to state 267
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73

state 241

    (124) rep -> OPENPAREN exp CLOSEPAREN .

    OPENBRACES      reduce using rule 124 (rep -> OPENPAREN exp CLOSEPAREN .)


state 242

    (95) funCall -> ID OPENPAREN funCall2 CLOSEPAREN .

    SEMICOLON       reduce using rule 95 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    MULTIPLICATION  reduce using rule 95 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    DIVISION        reduce using rule 95 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    ADDITION        reduce using rule 95 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 95 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    GREATER         reduce using rule 95 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    LESS            reduce using rule 95 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    NOTEQUAL        reduce using rule 95 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    ISEQUAL         reduce using rule 95 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 95 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 95 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    COMMA           reduce using rule 95 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    CTEINT          reduce using rule 95 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    CTEFLOAT        reduce using rule 95 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    CTECHAR         reduce using rule 95 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    ID              reduce using rule 95 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)
    OPENPAREN       reduce using rule 95 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN .)


state 243

    (96) funCall2 -> exp funCall3 .

    CLOSEPAREN      reduce using rule 96 (funCall2 -> exp funCall3 .)


state 244

    (98) funCall3 -> COMMA . exp funCall2
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    exp                            shift and go to state 268
    term                           shift and go to state 100
    factor                         shift and go to state 101
    vcte                           shift and go to state 102
    factor1                        shift and go to state 103
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108
    factor2                        shift and go to state 109
    openP                          shift and go to state 110

state 245

    (99) funCall3 -> empty .

    CLOSEPAREN      reduce using rule 99 (funCall3 -> empty .)


state 246

    (87) body -> OPENBRACES body1 CLOSEBRACES .

    IF              reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    PRINT           reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    READ            reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    ID              reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    RETURN          reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    FOR             reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    REPEAT          reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    CIRCLE          reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    SQUARE          reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    SETXY           reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_UP         reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    GO              reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    LEFT            reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    RIGHT           reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    BACK            reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    ARC             reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    WHILE           reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSEIF          reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSE            reduce using rule 87 (body -> OPENBRACES body1 CLOSEBRACES .)


state 247

    (89) body1 -> stmt body1 .

    CLOSEBRACES     reduce using rule 89 (body1 -> stmt body1 .)


state 248

    (91) for -> FOR OPENPAREN ID TWODOTS . exp CLOSEPAREN body
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    exp                            shift and go to state 269
    term                           shift and go to state 100
    factor                         shift and go to state 101
    vcte                           shift and go to state 102
    factor1                        shift and go to state 103
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108
    factor2                        shift and go to state 109
    openP                          shift and go to state 110

state 249

    (93) while1 -> while_w OPENPAREN expression CLOSEPAREN .

    OPENBRACES      reduce using rule 93 (while1 -> while_w OPENPAREN expression CLOSEPAREN .)


state 250

    (101) unaExp -> OPENPAREN exp CLOSEPAREN .

    SEMICOLON       reduce using rule 101 (unaExp -> OPENPAREN exp CLOSEPAREN .)


state 251

    (100) dosExp -> OPENPAREN exp COMMA . exp CLOSEPAREN
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    exp                            shift and go to state 270
    term                           shift and go to state 100
    factor                         shift and go to state 101
    vcte                           shift and go to state 102
    factor1                        shift and go to state 103
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108
    factor2                        shift and go to state 109
    openP                          shift and go to state 110

state 252

    (25) function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .

    FUN             reduce using rule 25 (function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .)
    MULTIPLICATION  reduce using rule 25 (function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .)


state 253

    (27) termina_fun -> CLOSEBRACES .

    FUN             reduce using rule 27 (termina_fun -> CLOSEBRACES .)
    MULTIPLICATION  reduce using rule 27 (termina_fun -> CLOSEBRACES .)


state 254

    (31) function4 -> stmt function4 .

    CLOSEBRACES     reduce using rule 31 (function4 -> stmt function4 .)


state 255

    (33) function5 -> COMMA type . ID function5

    ID              shift and go to state 271


state 256

    (63) vcte1 -> OPENBRACKET exp CLOSEBRACKET . vcte3
    (65) vcte3 -> . OPENBRACKET exp CLOSEBRACKET
    (66) vcte3 -> . empty
    (150) empty -> .

    OPENBRACKET     shift and go to state 272
    MULTIPLICATION  reduce using rule 150 (empty -> .)
    DIVISION        reduce using rule 150 (empty -> .)
    ADDITION        reduce using rule 150 (empty -> .)
    SUBSTRACTION    reduce using rule 150 (empty -> .)
    SEMICOLON       reduce using rule 150 (empty -> .)
    GREATER         reduce using rule 150 (empty -> .)
    LESS            reduce using rule 150 (empty -> .)
    NOTEQUAL        reduce using rule 150 (empty -> .)
    ISEQUAL         reduce using rule 150 (empty -> .)
    CLOSEPAREN      reduce using rule 150 (empty -> .)
    CLOSEBRACKET    reduce using rule 150 (empty -> .)
    COMMA           reduce using rule 150 (empty -> .)
    CTEINT          reduce using rule 150 (empty -> .)
    CTEFLOAT        reduce using rule 150 (empty -> .)
    CTECHAR         reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    OPENPAREN       reduce using rule 150 (empty -> .)

    vcte3                          shift and go to state 273
    empty                          shift and go to state 274

state 257

    (74) expression1 -> loper exp .

    CLOSEPAREN      reduce using rule 74 (expression1 -> loper exp .)


state 258

    (39) vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .

    SEMICOLON       reduce using rule 39 (vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .)
    EQUALS          reduce using rule 39 (vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .)


state 259

    (51) assignment -> id assignment1 equals assignment3 SEMICOLON .

    IF              reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    PRINT           reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    READ            reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    ID              reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    RETURN          reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    FOR             reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    REPEAT          reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    CIRCLE          reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SQUARE          reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    TRIANGLE        reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    RECTANGLE       reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    HIDE_STAR       reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SHOW_STAR       reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    COLOR_STAR      reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SIZE_STAR       reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SETXY           reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    HAND_DOWN       reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    HAND_UP         reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    GO              reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    LEFT            reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    RIGHT           reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    BACK            reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    ARC             reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    WHILE           reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    CLOSEBRACES     reduce using rule 51 (assignment -> id assignment1 equals assignment3 SEMICOLON .)


state 260

    (81) condition1 -> elseif head_cond . body condition1
    (87) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 136

    body                           shift and go to state 275

state 261

    (82) condition1 -> else body .

    IF              reduce using rule 82 (condition1 -> else body .)
    PRINT           reduce using rule 82 (condition1 -> else body .)
    READ            reduce using rule 82 (condition1 -> else body .)
    ID              reduce using rule 82 (condition1 -> else body .)
    RETURN          reduce using rule 82 (condition1 -> else body .)
    FOR             reduce using rule 82 (condition1 -> else body .)
    REPEAT          reduce using rule 82 (condition1 -> else body .)
    CIRCLE          reduce using rule 82 (condition1 -> else body .)
    SQUARE          reduce using rule 82 (condition1 -> else body .)
    TRIANGLE        reduce using rule 82 (condition1 -> else body .)
    RECTANGLE       reduce using rule 82 (condition1 -> else body .)
    HIDE_STAR       reduce using rule 82 (condition1 -> else body .)
    SHOW_STAR       reduce using rule 82 (condition1 -> else body .)
    COLOR_STAR      reduce using rule 82 (condition1 -> else body .)
    SIZE_STAR       reduce using rule 82 (condition1 -> else body .)
    SETXY           reduce using rule 82 (condition1 -> else body .)
    HAND_DOWN       reduce using rule 82 (condition1 -> else body .)
    HAND_UP         reduce using rule 82 (condition1 -> else body .)
    GO              reduce using rule 82 (condition1 -> else body .)
    LEFT            reduce using rule 82 (condition1 -> else body .)
    RIGHT           reduce using rule 82 (condition1 -> else body .)
    BACK            reduce using rule 82 (condition1 -> else body .)
    ARC             reduce using rule 82 (condition1 -> else body .)
    WHILE           reduce using rule 82 (condition1 -> else body .)
    CLOSEBRACES     reduce using rule 82 (condition1 -> else body .)


state 262

    (44) print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .

    IF              reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 44 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)


state 263

    (45) read -> READ OPENPAREN id read1 CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 276


state 264

    (46) read1 -> OPENBRACKET exp . CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (47) read1 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 277


state 265

    (122) graphr1 -> graphstmt . graphr1
    (122) graphr1 -> . graphstmt graphr1
    (123) graphr1 -> . empty
    (102) graphstmt -> . graphfig
    (103) graphstmt -> . graphview
    (104) graphstmt -> . graphmove
    (150) empty -> .
    (105) graphfig -> . graphfig1 SEMICOLON
    (106) graphfig -> . graphfig2 SEMICOLON
    (126) graphview -> . graphview0 SEMICOLON
    (127) graphview -> . graphview1 SEMICOLON
    (128) graphview -> . graphview2 SEMICOLON
    (111) graphmove -> . graphmove0 SEMICOLON
    (112) graphmove -> . graphmove1 SEMICOLON
    (113) graphmove -> . graphmove2 SEMICOLON
    (107) graphfig1 -> . CIRCLE unaExp
    (108) graphfig1 -> . SQUARE unaExp
    (109) graphfig2 -> . TRIANGLE dosExp
    (110) graphfig2 -> . RECTANGLE dosExp
    (129) graphview0 -> . HIDE_STAR
    (130) graphview0 -> . SHOW_STAR
    (131) graphview1 -> . COLOR_STAR unaExp
    (132) graphview1 -> . SIZE_STAR unaExp
    (133) graphview2 -> . SETXY dosExp
    (114) graphmove0 -> . HAND_DOWN
    (115) graphmove0 -> . HAND_UP
    (116) graphmove1 -> . GO unaExp
    (117) graphmove1 -> . LEFT unaExp
    (118) graphmove1 -> . RIGHT unaExp
    (119) graphmove1 -> . BACK unaExp
    (120) graphmove2 -> . ARC dosExp

    CLOSEBRACES     reduce using rule 150 (empty -> .)
    CIRCLE          shift and go to state 76
    SQUARE          shift and go to state 77
    TRIANGLE        shift and go to state 78
    RECTANGLE       shift and go to state 79
    HIDE_STAR       shift and go to state 80
    SHOW_STAR       shift and go to state 81
    COLOR_STAR      shift and go to state 82
    SIZE_STAR       shift and go to state 83
    SETXY           shift and go to state 84
    HAND_DOWN       shift and go to state 85
    HAND_UP         shift and go to state 86
    GO              shift and go to state 87
    LEFT            shift and go to state 88
    RIGHT           shift and go to state 89
    BACK            shift and go to state 90
    ARC             shift and go to state 91

    graphstmt                      shift and go to state 265
    graphr1                        shift and go to state 278
    empty                          shift and go to state 267
    graphfig                       shift and go to state 58
    graphview                      shift and go to state 59
    graphmove                      shift and go to state 60
    graphfig1                      shift and go to state 66
    graphfig2                      shift and go to state 67
    graphview0                     shift and go to state 68
    graphview1                     shift and go to state 69
    graphview2                     shift and go to state 70
    graphmove0                     shift and go to state 71
    graphmove1                     shift and go to state 72
    graphmove2                     shift and go to state 73

state 266

    (121) graphr -> repeat rep OPENBRACES graphstmt graphr1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 279


state 267

    (123) graphr1 -> empty .

    CLOSEBRACES     reduce using rule 123 (graphr1 -> empty .)


state 268

    (98) funCall3 -> COMMA exp . funCall2
    (96) funCall2 -> . exp funCall3
    (97) funCall2 -> . empty
    (134) exp -> . term exp1
    (150) empty -> .
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CLOSEPAREN      reduce using rule 150 (empty -> .)
    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    exp                            shift and go to state 193
    funCall2                       shift and go to state 280
    empty                          shift and go to state 194
    term                           shift and go to state 100
    factor                         shift and go to state 101
    vcte                           shift and go to state 102
    factor1                        shift and go to state 103
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108
    factor2                        shift and go to state 109
    openP                          shift and go to state 110

state 269

    (91) for -> FOR OPENPAREN ID TWODOTS exp . CLOSEPAREN body

    CLOSEPAREN      shift and go to state 281


state 270

    (100) dosExp -> OPENPAREN exp COMMA exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 282


state 271

    (33) function5 -> COMMA type ID . function5
    (33) function5 -> . COMMA type ID function5
    (34) function5 -> . empty
    (150) empty -> .

    COMMA           shift and go to state 207
    CLOSEPAREN      reduce using rule 150 (empty -> .)

    function5                      shift and go to state 283
    empty                          shift and go to state 208

state 272

    (65) vcte3 -> OPENBRACKET . exp CLOSEBRACKET
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    exp                            shift and go to state 284
    term                           shift and go to state 100
    factor                         shift and go to state 101
    vcte                           shift and go to state 102
    factor1                        shift and go to state 103
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108
    factor2                        shift and go to state 109
    openP                          shift and go to state 110

state 273

    (63) vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .

    MULTIPLICATION  reduce using rule 63 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    DIVISION        reduce using rule 63 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ADDITION        reduce using rule 63 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    SUBSTRACTION    reduce using rule 63 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    SEMICOLON       reduce using rule 63 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    GREATER         reduce using rule 63 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    LESS            reduce using rule 63 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    NOTEQUAL        reduce using rule 63 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ISEQUAL         reduce using rule 63 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CLOSEPAREN      reduce using rule 63 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CLOSEBRACKET    reduce using rule 63 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    COMMA           reduce using rule 63 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CTEINT          reduce using rule 63 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CTEFLOAT        reduce using rule 63 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CTECHAR         reduce using rule 63 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ID              reduce using rule 63 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    OPENPAREN       reduce using rule 63 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)


state 274

    (66) vcte3 -> empty .

    MULTIPLICATION  reduce using rule 66 (vcte3 -> empty .)
    DIVISION        reduce using rule 66 (vcte3 -> empty .)
    ADDITION        reduce using rule 66 (vcte3 -> empty .)
    SUBSTRACTION    reduce using rule 66 (vcte3 -> empty .)
    SEMICOLON       reduce using rule 66 (vcte3 -> empty .)
    GREATER         reduce using rule 66 (vcte3 -> empty .)
    LESS            reduce using rule 66 (vcte3 -> empty .)
    NOTEQUAL        reduce using rule 66 (vcte3 -> empty .)
    ISEQUAL         reduce using rule 66 (vcte3 -> empty .)
    CLOSEPAREN      reduce using rule 66 (vcte3 -> empty .)
    CLOSEBRACKET    reduce using rule 66 (vcte3 -> empty .)
    COMMA           reduce using rule 66 (vcte3 -> empty .)
    CTEINT          reduce using rule 66 (vcte3 -> empty .)
    CTEFLOAT        reduce using rule 66 (vcte3 -> empty .)
    CTECHAR         reduce using rule 66 (vcte3 -> empty .)
    ID              reduce using rule 66 (vcte3 -> empty .)
    OPENPAREN       reduce using rule 66 (vcte3 -> empty .)


state 275

    (81) condition1 -> elseif head_cond body . condition1
    (81) condition1 -> . elseif head_cond body condition1
    (82) condition1 -> . else body
    (83) condition1 -> . empty
    (84) elseif -> . ELSEIF
    (85) else -> . ELSE
    (150) empty -> .

    ELSEIF          shift and go to state 232
    ELSE            shift and go to state 233
    IF              reduce using rule 150 (empty -> .)
    PRINT           reduce using rule 150 (empty -> .)
    READ            reduce using rule 150 (empty -> .)
    ID              reduce using rule 150 (empty -> .)
    RETURN          reduce using rule 150 (empty -> .)
    FOR             reduce using rule 150 (empty -> .)
    REPEAT          reduce using rule 150 (empty -> .)
    CIRCLE          reduce using rule 150 (empty -> .)
    SQUARE          reduce using rule 150 (empty -> .)
    TRIANGLE        reduce using rule 150 (empty -> .)
    RECTANGLE       reduce using rule 150 (empty -> .)
    HIDE_STAR       reduce using rule 150 (empty -> .)
    SHOW_STAR       reduce using rule 150 (empty -> .)
    COLOR_STAR      reduce using rule 150 (empty -> .)
    SIZE_STAR       reduce using rule 150 (empty -> .)
    SETXY           reduce using rule 150 (empty -> .)
    HAND_DOWN       reduce using rule 150 (empty -> .)
    HAND_UP         reduce using rule 150 (empty -> .)
    GO              reduce using rule 150 (empty -> .)
    LEFT            reduce using rule 150 (empty -> .)
    RIGHT           reduce using rule 150 (empty -> .)
    BACK            reduce using rule 150 (empty -> .)
    ARC             reduce using rule 150 (empty -> .)
    WHILE           reduce using rule 150 (empty -> .)
    CLOSEBRACES     reduce using rule 150 (empty -> .)

    elseif                         shift and go to state 229
    condition1                     shift and go to state 285
    else                           shift and go to state 230
    empty                          shift and go to state 231

state 276

    (45) read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .

    IF              reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 45 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)


state 277

    (46) read1 -> OPENBRACKET exp CLOSEBRACKET . OPENBRACKET exp CLOSEBRACKET
    (47) read1 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     shift and go to state 286
    CLOSEPAREN      reduce using rule 47 (read1 -> OPENBRACKET exp CLOSEBRACKET .)


state 278

    (122) graphr1 -> graphstmt graphr1 .

    CLOSEBRACES     reduce using rule 122 (graphr1 -> graphstmt graphr1 .)


state 279

    (121) graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .

    IF              reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    PRINT           reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    READ            reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    ID              reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RETURN          reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    FOR             reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    REPEAT          reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    CIRCLE          reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SQUARE          reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SETXY           reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HAND_UP         reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    GO              reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    LEFT            reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RIGHT           reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    BACK            reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    ARC             reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    WHILE           reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 121 (graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES .)


state 280

    (98) funCall3 -> COMMA exp funCall2 .

    CLOSEPAREN      reduce using rule 98 (funCall3 -> COMMA exp funCall2 .)


state 281

    (91) for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN . body
    (87) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 136

    body                           shift and go to state 287

state 282

    (100) dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN .

    SEMICOLON       reduce using rule 100 (dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN .)


state 283

    (33) function5 -> COMMA type ID function5 .

    CLOSEPAREN      reduce using rule 33 (function5 -> COMMA type ID function5 .)


state 284

    (65) vcte3 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 288


state 285

    (81) condition1 -> elseif head_cond body condition1 .

    IF              reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)
    PRINT           reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)
    READ            reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)
    ID              reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)
    RETURN          reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)
    FOR             reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)
    REPEAT          reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)
    CIRCLE          reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)
    SQUARE          reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)
    TRIANGLE        reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)
    RECTANGLE       reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)
    HIDE_STAR       reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)
    SHOW_STAR       reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)
    COLOR_STAR      reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)
    SIZE_STAR       reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)
    SETXY           reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)
    HAND_DOWN       reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)
    HAND_UP         reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)
    GO              reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)
    LEFT            reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)
    RIGHT           reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)
    BACK            reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)
    ARC             reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)
    WHILE           reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)
    CLOSEBRACES     reduce using rule 81 (condition1 -> elseif head_cond body condition1 .)


state 286

    (46) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET . exp CLOSEBRACKET
    (134) exp -> . term exp1
    (146) term -> . factor term1
    (140) factor -> . vcte
    (141) factor -> . factor1
    (58) vcte -> . cte_int
    (59) vcte -> . cte_float
    (60) vcte -> . cte_char
    (61) vcte -> . id vcte1
    (62) vcte -> . funCall
    (142) factor1 -> . factor2 vcte
    (143) factor1 -> . openP expression closeP
    (67) cte_int -> . CTEINT
    (68) cte_float -> . CTEFLOAT
    (69) cte_char -> . CTECHAR
    (50) id -> . ID
    (95) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN
    (144) factor2 -> . ADDITION
    (145) factor2 -> . SUBSTRACTION
    (138) openP -> . OPENPAREN

    CTEINT          shift and go to state 111
    CTEFLOAT        shift and go to state 112
    CTECHAR         shift and go to state 113
    ID              shift and go to state 98
    ADDITION        shift and go to state 115
    SUBSTRACTION    shift and go to state 116
    OPENPAREN       shift and go to state 114

    exp                            shift and go to state 289
    term                           shift and go to state 100
    factor                         shift and go to state 101
    vcte                           shift and go to state 102
    factor1                        shift and go to state 103
    cte_int                        shift and go to state 104
    cte_float                      shift and go to state 105
    cte_char                       shift and go to state 106
    id                             shift and go to state 107
    funCall                        shift and go to state 108
    factor2                        shift and go to state 109
    openP                          shift and go to state 110

state 287

    (91) for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .

    IF              reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    PRINT           reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    READ            reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    ID              reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    RETURN          reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    FOR             reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    REPEAT          reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    CIRCLE          reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SQUARE          reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    TRIANGLE        reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    RECTANGLE       reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    HIDE_STAR       reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SHOW_STAR       reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    COLOR_STAR      reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SIZE_STAR       reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SETXY           reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    HAND_DOWN       reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    HAND_UP         reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    GO              reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    LEFT            reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    RIGHT           reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    BACK            reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    ARC             reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    WHILE           reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    CLOSEBRACES     reduce using rule 91 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)


state 288

    (65) vcte3 -> OPENBRACKET exp CLOSEBRACKET .

    MULTIPLICATION  reduce using rule 65 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    DIVISION        reduce using rule 65 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ADDITION        reduce using rule 65 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    SUBSTRACTION    reduce using rule 65 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    SEMICOLON       reduce using rule 65 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    GREATER         reduce using rule 65 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    LESS            reduce using rule 65 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 65 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ISEQUAL         reduce using rule 65 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 65 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 65 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    COMMA           reduce using rule 65 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CTEINT          reduce using rule 65 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CTEFLOAT        reduce using rule 65 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CTECHAR         reduce using rule 65 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ID              reduce using rule 65 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    OPENPAREN       reduce using rule 65 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)


state 289

    (46) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 290


state 290

    (46) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .

    CLOSEPAREN      reduce using rule 46 (read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OPENPAREN in state 98 resolved as shift
WARNING: shift/reduce conflict for ADDITION in state 100 resolved as shift
WARNING: shift/reduce conflict for SUBSTRACTION in state 100 resolved as shift
WARNING: reduce/reduce conflict in state 122 resolved using rule (assignment1 -> assignment2)
WARNING: rejected rule (empty -> <empty>) in state 122
WARNING: reduce/reduce conflict in state 133 resolved using rule (return1 -> vcte)
WARNING: rejected rule (factor -> vcte) in state 133
