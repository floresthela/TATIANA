Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    SIMPLEQUOTES
    VARS

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON declara_vars program2 star
Rule 2     program_vars -> vars program_vars
Rule 3     program_vars -> empty
Rule 4     program2 -> function program2
Rule 5     program2 -> empty
Rule 6     star -> starI declara_vars star1 CLOSEBRACES
Rule 7     starI -> MULTIPLICATION OPENBRACES
Rule 8     star1 -> stmt star1
Rule 9     star1 -> empty
Rule 10    declara_vars -> vars declara_vars
Rule 11    declara_vars -> empty
Rule 12    loop -> while
Rule 13    loop -> for
Rule 14    stmt -> assignment
Rule 15    stmt -> condition
Rule 16    stmt -> print
Rule 17    stmt -> loop
Rule 18    stmt -> read
Rule 19    stmt -> graphstmt
Rule 20    stmt -> graphr
Rule 21    stmt -> funCall
Rule 22    stmt -> return
Rule 23    functionI -> type ID
Rule 24    functionI -> VOID ID
Rule 25    function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun
Rule 26    function1 -> type
Rule 27    function1 -> VOID
Rule 28    inicia_fun -> OPENBRACES
Rule 29    termina_fun -> CLOSEBRACES
Rule 30    function2 -> OPENPAREN function3 CLOSEPAREN
Rule 31    function3 -> type ID function5
Rule 32    function3 -> empty
Rule 33    function4 -> stmt function4
Rule 34    function4 -> empty
Rule 35    function5 -> COMMA type ID function3
Rule 36    fun_vars -> vars fun_vars
Rule 37    fun_vars -> empty
Rule 38    vars -> type ID vars1 SEMICOLON
Rule 39    vars1 -> equals exp
Rule 40    vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3
Rule 41    vars1 -> empty
Rule 42    vars3 -> OPENBRACKET CTEINT CLOSEBRACKET
Rule 43    vars3 -> empty
Rule 44    type -> INT
Rule 45    type -> FLOAT
Rule 46    type -> CHAR
Rule 47    print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
Rule 48    read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
Rule 49    read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
Rule 50    read1 -> OPENBRACKET exp CLOSEBRACKET
Rule 51    read1 -> empty
Rule 52    equals -> EQUALS
Rule 53    id -> ID
Rule 54    assignment -> id assignment1 equals assignment3 SEMICOLON
Rule 55    assignment1 -> assignment2
Rule 56    assignment1 -> assignment2 assignment1
Rule 57    assignment1 -> empty
Rule 58    assignment2 -> OPENBRACKET exp CLOSEBRACKET
Rule 59    assignment3 -> exp
Rule 60    assignment3 -> read
Rule 61    vcte -> cte
Rule 62    vcte -> id vcte1
Rule 63    vcte -> funCall
Rule 64    vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3
Rule 65    vcte1 -> empty
Rule 66    vcte3 -> OPENBRACKET exp CLOSEBRACKET
Rule 67    vcte3 -> empty
Rule 68    cte -> CTEINT
Rule 69    cte -> CTEFLOAT
Rule 70    cte -> CTECHAR
Rule 71    return -> RETURN return1 SEMICOLON
Rule 72    return1 -> vcte
Rule 73    return1 -> exp
Rule 74    expression -> exp expression1
Rule 75    expression1 -> loper exp
Rule 76    expression1 -> empty
Rule 77    loper -> GREATER
Rule 78    loper -> LESS
Rule 79    loper -> NOTEQUAL
Rule 80    loper -> ISEQUAL
Rule 81    logical -> expression logical1 expression
Rule 82    logical1 -> OR
Rule 83    logical1 -> AND
Rule 84    condition -> IF head body condition1
Rule 85    condition1 -> ELSEIF head body condition1
Rule 86    condition1 -> ELSE body
Rule 87    condition1 -> empty
Rule 88    head -> OPENPAREN head1 CLOSEPAREN
Rule 89    head1 -> expression
Rule 90    head1 -> logical
Rule 91    body -> OPENBRACES body1 CLOSEBRACES
Rule 92    body1 -> stmt body1
Rule 93    body1 -> empty
Rule 94    for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
Rule 95    while -> WHILE head body
Rule 96    funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
Rule 97    funCall2 -> exp funCall3
Rule 98    funCall2 -> empty
Rule 99    funCall3 -> COMMA exp funCall2
Rule 100   funCall3 -> empty
Rule 101   laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN
Rule 102   laRegla2 -> OPENPAREN exp CLOSEPAREN
Rule 103   graphstmt -> graphfig
Rule 104   graphstmt -> graphview
Rule 105   graphstmt -> graphmove
Rule 106   graphfig -> graphfig1 SEMICOLON
Rule 107   graphfig1 -> CIRCLE laRegla2
Rule 108   graphfig1 -> SQUARE laRegla2
Rule 109   graphfig1 -> TRIANGLE laRegla
Rule 110   graphfig1 -> RECTANGLE laRegla
Rule 111   graphmove -> graphmove1 SEMICOLON
Rule 112   graphmove1 -> HAND_DOWN
Rule 113   graphmove1 -> HAND_UP
Rule 114   graphmove1 -> graphmove2
Rule 115   graphmove2 -> GO laRegla2
Rule 116   graphmove2 -> LEFT laRegla2
Rule 117   graphmove2 -> RIGHT laRegla2
Rule 118   graphmove2 -> BACK laRegla2
Rule 119   graphmove2 -> ARC laRegla
Rule 120   graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
Rule 121   graphr1 -> graphstmt graphr1
Rule 122   graphr1 -> empty
Rule 123   graphview -> graphview1 SEMICOLON
Rule 124   graphview1 -> HIDE_STAR
Rule 125   graphview1 -> SHOW_STAR
Rule 126   graphview1 -> graphview2 exp
Rule 127   graphview2 -> SETXY graphview3
Rule 128   graphview2 -> COLOR_STAR
Rule 129   graphview2 -> SIZE_STAR
Rule 130   graphview3 -> exp COMMA
Rule 131   graphview3 -> laRegla
Rule 132   exp -> term exp1
Rule 133   exp1 -> ADDITION exp
Rule 134   exp1 -> SUBSTRACTION exp
Rule 135   exp1 -> empty
Rule 136   openP -> OPENPAREN
Rule 137   closeP -> CLOSEPAREN
Rule 138   factor -> vcte
Rule 139   factor -> factor1
Rule 140   factor1 -> factor2 vcte
Rule 141   factor1 -> openP expression closeP
Rule 142   factor2 -> ADDITION
Rule 143   factor2 -> SUBSTRACTION
Rule 144   term -> factor term1
Rule 145   term1 -> MULTIPLICATION term
Rule 146   term1 -> DIVISION term
Rule 147   term1 -> empty
Rule 148   empty -> <empty>

Terminals, with rules where they appear

ADDITION             : 133 142
AND                  : 83
ARC                  : 119
BACK                 : 118
CHAR                 : 46
CIRCLE               : 107
CLOSEBRACES          : 6 29 91 120
CLOSEBRACKET         : 40 42 49 49 50 58 64 66
CLOSEPAREN           : 30 47 48 88 94 96 101 102 137
COLOR_STAR           : 128
COMMA                : 35 99 101 130
CTECHAR              : 70
CTEFLOAT             : 69
CTEINT               : 40 42 68
DIVISION             : 146
ELSE                 : 86
ELSEIF               : 85
EQUALS               : 52
FLOAT                : 45
FOR                  : 94
FUN                  : 25
GO                   : 115
GREATER              : 77
HAND_DOWN            : 112
HAND_UP              : 113
HIDE_STAR            : 124
ID                   : 1 23 24 31 35 38 48 53 94 96
IF                   : 84
INT                  : 44
ISEQUAL              : 80
LEFT                 : 116
LESS                 : 78
MULTIPLICATION       : 7 145
NOTEQUAL             : 79
OPENBRACES           : 7 28 91 120
OPENBRACKET          : 40 42 49 49 50 58 64 66
OPENPAREN            : 30 47 48 88 94 96 101 102 136
OR                   : 82
PRINT                : 47
PROGRAM              : 1
READ                 : 48
RECTANGLE            : 110
REPEAT               : 120
RETURN               : 71
RIGHT                : 117
SEMICOLON            : 1 38 47 48 54 71 96 106 111 123
SETXY                : 127
SHOW_STAR            : 125
SIMPLEQUOTES         : 
SIZE_STAR            : 129
SQUARE               : 108
SUBSTRACTION         : 134 143
TRIANGLE             : 109
TWODOTS              : 94
VARS                 : 
VOID                 : 24 27
WHILE                : 95
error                : 

Nonterminals, with rules where they appear

assignment           : 14
assignment1          : 54 56
assignment2          : 55 56
assignment3          : 54
body                 : 84 85 86 94 95
body1                : 91 92
closeP               : 141
condition            : 15
condition1           : 84 85
cte                  : 61
declara_vars         : 1 6 10 25
empty                : 3 5 9 11 32 34 37 41 43 51 57 65 67 76 87 93 98 100 122 135 147
equals               : 39 54
exp                  : 39 47 49 49 50 58 59 64 66 73 74 75 94 97 99 101 101 102 120 126 130 133 134
exp1                 : 132
expression           : 81 81 89 141
expression1          : 74
factor               : 144
factor1              : 139
factor2              : 140
for                  : 13
funCall              : 21 63
funCall2             : 96 99
funCall3             : 97
fun_vars             : 36
function             : 4
function1            : 
function2            : 25
function3            : 30 35
function4            : 25 33
function5            : 31
functionI            : 25
graphfig             : 103
graphfig1            : 106
graphmove            : 105
graphmove1           : 111
graphmove2           : 114
graphr               : 20
graphr1              : 120 121
graphstmt            : 19 120 121
graphview            : 104
graphview1           : 123
graphview2           : 126
graphview3           : 127
head                 : 84 85 95
head1                : 88
id                   : 54 62
inicia_fun           : 25
laRegla              : 109 110 119 131
laRegla2             : 107 108 115 116 117 118
logical              : 90
logical1             : 81
loop                 : 17
loper                : 75
openP                : 141
print                : 16
program              : 0
program2             : 1 4
program_vars         : 2
read                 : 18 60
read1                : 48
return               : 22
return1              : 71
star                 : 1
star1                : 6 8
starI                : 6
stmt                 : 8 33 92
term                 : 132 145 146
term1                : 144
termina_fun          : 25
type                 : 23 26 31 35 38
vars                 : 2 10 36
vars1                : 38
vars3                : 40
vcte                 : 72 138 140
vcte1                : 62
vcte3                : 64
while                : 12

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON declara_vars program2 star

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON declara_vars program2 star

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON declara_vars program2 star

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . declara_vars program2 star
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (38) vars -> . type ID vars1 SEMICOLON
    (148) empty -> .
    (44) type -> . INT
    (45) type -> . FLOAT
    (46) type -> . CHAR

    FUN             reduce using rule 148 (empty -> .)
    MULTIPLICATION  reduce using rule 148 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    declara_vars                   shift and go to state 5
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 5

    (1) program -> PROGRAM ID SEMICOLON declara_vars . program2 star
    (4) program2 -> . function program2
    (5) program2 -> . empty
    (25) function -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (148) empty -> .

    FUN             shift and go to state 15
    MULTIPLICATION  reduce using rule 148 (empty -> .)

    program2                       shift and go to state 12
    function                       shift and go to state 13
    empty                          shift and go to state 14

state 6

    (10) declara_vars -> vars . declara_vars
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (38) vars -> . type ID vars1 SEMICOLON
    (148) empty -> .
    (44) type -> . INT
    (45) type -> . FLOAT
    (46) type -> . CHAR

    FUN             reduce using rule 148 (empty -> .)
    MULTIPLICATION  reduce using rule 148 (empty -> .)
    IF              reduce using rule 148 (empty -> .)
    PRINT           reduce using rule 148 (empty -> .)
    READ            reduce using rule 148 (empty -> .)
    REPEAT          reduce using rule 148 (empty -> .)
    ID              reduce using rule 148 (empty -> .)
    RETURN          reduce using rule 148 (empty -> .)
    WHILE           reduce using rule 148 (empty -> .)
    FOR             reduce using rule 148 (empty -> .)
    CIRCLE          reduce using rule 148 (empty -> .)
    SQUARE          reduce using rule 148 (empty -> .)
    TRIANGLE        reduce using rule 148 (empty -> .)
    RECTANGLE       reduce using rule 148 (empty -> .)
    HIDE_STAR       reduce using rule 148 (empty -> .)
    SHOW_STAR       reduce using rule 148 (empty -> .)
    HAND_DOWN       reduce using rule 148 (empty -> .)
    HAND_UP         reduce using rule 148 (empty -> .)
    SETXY           reduce using rule 148 (empty -> .)
    COLOR_STAR      reduce using rule 148 (empty -> .)
    SIZE_STAR       reduce using rule 148 (empty -> .)
    GO              reduce using rule 148 (empty -> .)
    LEFT            reduce using rule 148 (empty -> .)
    RIGHT           reduce using rule 148 (empty -> .)
    BACK            reduce using rule 148 (empty -> .)
    ARC             reduce using rule 148 (empty -> .)
    CLOSEBRACES     reduce using rule 148 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    vars                           shift and go to state 6
    declara_vars                   shift and go to state 16
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 7

    (11) declara_vars -> empty .

    FUN             reduce using rule 11 (declara_vars -> empty .)
    MULTIPLICATION  reduce using rule 11 (declara_vars -> empty .)
    IF              reduce using rule 11 (declara_vars -> empty .)
    PRINT           reduce using rule 11 (declara_vars -> empty .)
    READ            reduce using rule 11 (declara_vars -> empty .)
    REPEAT          reduce using rule 11 (declara_vars -> empty .)
    ID              reduce using rule 11 (declara_vars -> empty .)
    RETURN          reduce using rule 11 (declara_vars -> empty .)
    WHILE           reduce using rule 11 (declara_vars -> empty .)
    FOR             reduce using rule 11 (declara_vars -> empty .)
    CIRCLE          reduce using rule 11 (declara_vars -> empty .)
    SQUARE          reduce using rule 11 (declara_vars -> empty .)
    TRIANGLE        reduce using rule 11 (declara_vars -> empty .)
    RECTANGLE       reduce using rule 11 (declara_vars -> empty .)
    HIDE_STAR       reduce using rule 11 (declara_vars -> empty .)
    SHOW_STAR       reduce using rule 11 (declara_vars -> empty .)
    HAND_DOWN       reduce using rule 11 (declara_vars -> empty .)
    HAND_UP         reduce using rule 11 (declara_vars -> empty .)
    SETXY           reduce using rule 11 (declara_vars -> empty .)
    COLOR_STAR      reduce using rule 11 (declara_vars -> empty .)
    SIZE_STAR       reduce using rule 11 (declara_vars -> empty .)
    GO              reduce using rule 11 (declara_vars -> empty .)
    LEFT            reduce using rule 11 (declara_vars -> empty .)
    RIGHT           reduce using rule 11 (declara_vars -> empty .)
    BACK            reduce using rule 11 (declara_vars -> empty .)
    ARC             reduce using rule 11 (declara_vars -> empty .)
    CLOSEBRACES     reduce using rule 11 (declara_vars -> empty .)


state 8

    (38) vars -> type . ID vars1 SEMICOLON

    ID              shift and go to state 17


state 9

    (44) type -> INT .

    ID              reduce using rule 44 (type -> INT .)


state 10

    (45) type -> FLOAT .

    ID              reduce using rule 45 (type -> FLOAT .)


state 11

    (46) type -> CHAR .

    ID              reduce using rule 46 (type -> CHAR .)


state 12

    (1) program -> PROGRAM ID SEMICOLON declara_vars program2 . star
    (6) star -> . starI declara_vars star1 CLOSEBRACES
    (7) starI -> . MULTIPLICATION OPENBRACES

    MULTIPLICATION  shift and go to state 20

    star                           shift and go to state 18
    starI                          shift and go to state 19

state 13

    (4) program2 -> function . program2
    (4) program2 -> . function program2
    (5) program2 -> . empty
    (25) function -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (148) empty -> .

    FUN             shift and go to state 15
    MULTIPLICATION  reduce using rule 148 (empty -> .)

    function                       shift and go to state 13
    program2                       shift and go to state 21
    empty                          shift and go to state 14

state 14

    (5) program2 -> empty .

    MULTIPLICATION  reduce using rule 5 (program2 -> empty .)


state 15

    (25) function -> FUN . functionI function2 inicia_fun declara_vars function4 termina_fun
    (23) functionI -> . type ID
    (24) functionI -> . VOID ID
    (44) type -> . INT
    (45) type -> . FLOAT
    (46) type -> . CHAR

    VOID            shift and go to state 24
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    functionI                      shift and go to state 22
    type                           shift and go to state 23

state 16

    (10) declara_vars -> vars declara_vars .

    FUN             reduce using rule 10 (declara_vars -> vars declara_vars .)
    MULTIPLICATION  reduce using rule 10 (declara_vars -> vars declara_vars .)
    IF              reduce using rule 10 (declara_vars -> vars declara_vars .)
    PRINT           reduce using rule 10 (declara_vars -> vars declara_vars .)
    READ            reduce using rule 10 (declara_vars -> vars declara_vars .)
    REPEAT          reduce using rule 10 (declara_vars -> vars declara_vars .)
    ID              reduce using rule 10 (declara_vars -> vars declara_vars .)
    RETURN          reduce using rule 10 (declara_vars -> vars declara_vars .)
    WHILE           reduce using rule 10 (declara_vars -> vars declara_vars .)
    FOR             reduce using rule 10 (declara_vars -> vars declara_vars .)
    CIRCLE          reduce using rule 10 (declara_vars -> vars declara_vars .)
    SQUARE          reduce using rule 10 (declara_vars -> vars declara_vars .)
    TRIANGLE        reduce using rule 10 (declara_vars -> vars declara_vars .)
    RECTANGLE       reduce using rule 10 (declara_vars -> vars declara_vars .)
    HIDE_STAR       reduce using rule 10 (declara_vars -> vars declara_vars .)
    SHOW_STAR       reduce using rule 10 (declara_vars -> vars declara_vars .)
    HAND_DOWN       reduce using rule 10 (declara_vars -> vars declara_vars .)
    HAND_UP         reduce using rule 10 (declara_vars -> vars declara_vars .)
    SETXY           reduce using rule 10 (declara_vars -> vars declara_vars .)
    COLOR_STAR      reduce using rule 10 (declara_vars -> vars declara_vars .)
    SIZE_STAR       reduce using rule 10 (declara_vars -> vars declara_vars .)
    GO              reduce using rule 10 (declara_vars -> vars declara_vars .)
    LEFT            reduce using rule 10 (declara_vars -> vars declara_vars .)
    RIGHT           reduce using rule 10 (declara_vars -> vars declara_vars .)
    BACK            reduce using rule 10 (declara_vars -> vars declara_vars .)
    ARC             reduce using rule 10 (declara_vars -> vars declara_vars .)
    CLOSEBRACES     reduce using rule 10 (declara_vars -> vars declara_vars .)


state 17

    (38) vars -> type ID . vars1 SEMICOLON
    (39) vars1 -> . equals exp
    (40) vars1 -> . OPENBRACKET CTEINT CLOSEBRACKET vars3
    (41) vars1 -> . empty
    (52) equals -> . EQUALS
    (148) empty -> .

    OPENBRACKET     shift and go to state 27
    EQUALS          shift and go to state 29
    SEMICOLON       reduce using rule 148 (empty -> .)

    vars1                          shift and go to state 25
    equals                         shift and go to state 26
    empty                          shift and go to state 28

state 18

    (1) program -> PROGRAM ID SEMICOLON declara_vars program2 star .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON declara_vars program2 star .)


state 19

    (6) star -> starI . declara_vars star1 CLOSEBRACES
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (38) vars -> . type ID vars1 SEMICOLON
    (148) empty -> .
    (44) type -> . INT
    (45) type -> . FLOAT
    (46) type -> . CHAR

    IF              reduce using rule 148 (empty -> .)
    PRINT           reduce using rule 148 (empty -> .)
    READ            reduce using rule 148 (empty -> .)
    REPEAT          reduce using rule 148 (empty -> .)
    ID              reduce using rule 148 (empty -> .)
    RETURN          reduce using rule 148 (empty -> .)
    WHILE           reduce using rule 148 (empty -> .)
    FOR             reduce using rule 148 (empty -> .)
    CIRCLE          reduce using rule 148 (empty -> .)
    SQUARE          reduce using rule 148 (empty -> .)
    TRIANGLE        reduce using rule 148 (empty -> .)
    RECTANGLE       reduce using rule 148 (empty -> .)
    HIDE_STAR       reduce using rule 148 (empty -> .)
    SHOW_STAR       reduce using rule 148 (empty -> .)
    HAND_DOWN       reduce using rule 148 (empty -> .)
    HAND_UP         reduce using rule 148 (empty -> .)
    SETXY           reduce using rule 148 (empty -> .)
    COLOR_STAR      reduce using rule 148 (empty -> .)
    SIZE_STAR       reduce using rule 148 (empty -> .)
    GO              reduce using rule 148 (empty -> .)
    LEFT            reduce using rule 148 (empty -> .)
    RIGHT           reduce using rule 148 (empty -> .)
    BACK            reduce using rule 148 (empty -> .)
    ARC             reduce using rule 148 (empty -> .)
    CLOSEBRACES     reduce using rule 148 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    declara_vars                   shift and go to state 30
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 20

    (7) starI -> MULTIPLICATION . OPENBRACES

    OPENBRACES      shift and go to state 31


state 21

    (4) program2 -> function program2 .

    MULTIPLICATION  reduce using rule 4 (program2 -> function program2 .)


state 22

    (25) function -> FUN functionI . function2 inicia_fun declara_vars function4 termina_fun
    (30) function2 -> . OPENPAREN function3 CLOSEPAREN

    OPENPAREN       shift and go to state 33

    function2                      shift and go to state 32

state 23

    (23) functionI -> type . ID

    ID              shift and go to state 34


state 24

    (24) functionI -> VOID . ID

    ID              shift and go to state 35


state 25

    (38) vars -> type ID vars1 . SEMICOLON

    SEMICOLON       shift and go to state 36


state 26

    (39) vars1 -> equals . exp
    (132) exp -> . term exp1
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    exp                            shift and go to state 37
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 27

    (40) vars1 -> OPENBRACKET . CTEINT CLOSEBRACKET vars3

    CTEINT          shift and go to state 54


state 28

    (41) vars1 -> empty .

    SEMICOLON       reduce using rule 41 (vars1 -> empty .)


state 29

    (52) equals -> EQUALS .

    CTEINT          reduce using rule 52 (equals -> EQUALS .)
    CTEFLOAT        reduce using rule 52 (equals -> EQUALS .)
    CTECHAR         reduce using rule 52 (equals -> EQUALS .)
    ID              reduce using rule 52 (equals -> EQUALS .)
    ADDITION        reduce using rule 52 (equals -> EQUALS .)
    SUBSTRACTION    reduce using rule 52 (equals -> EQUALS .)
    OPENPAREN       reduce using rule 52 (equals -> EQUALS .)
    READ            reduce using rule 52 (equals -> EQUALS .)


state 30

    (6) star -> starI declara_vars . star1 CLOSEBRACES
    (8) star1 -> . stmt star1
    (9) star1 -> . empty
    (14) stmt -> . assignment
    (15) stmt -> . condition
    (16) stmt -> . print
    (17) stmt -> . loop
    (18) stmt -> . read
    (19) stmt -> . graphstmt
    (20) stmt -> . graphr
    (21) stmt -> . funCall
    (22) stmt -> . return
    (148) empty -> .
    (54) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (84) condition -> . IF head body condition1
    (47) print -> . PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
    (12) loop -> . while
    (13) loop -> . for
    (48) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (103) graphstmt -> . graphfig
    (104) graphstmt -> . graphview
    (105) graphstmt -> . graphmove
    (120) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (71) return -> . RETURN return1 SEMICOLON
    (53) id -> . ID
    (95) while -> . WHILE head body
    (94) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (106) graphfig -> . graphfig1 SEMICOLON
    (123) graphview -> . graphview1 SEMICOLON
    (111) graphmove -> . graphmove1 SEMICOLON
    (107) graphfig1 -> . CIRCLE laRegla2
    (108) graphfig1 -> . SQUARE laRegla2
    (109) graphfig1 -> . TRIANGLE laRegla
    (110) graphfig1 -> . RECTANGLE laRegla
    (124) graphview1 -> . HIDE_STAR
    (125) graphview1 -> . SHOW_STAR
    (126) graphview1 -> . graphview2 exp
    (112) graphmove1 -> . HAND_DOWN
    (113) graphmove1 -> . HAND_UP
    (114) graphmove1 -> . graphmove2
    (127) graphview2 -> . SETXY graphview3
    (128) graphview2 -> . COLOR_STAR
    (129) graphview2 -> . SIZE_STAR
    (115) graphmove2 -> . GO laRegla2
    (116) graphmove2 -> . LEFT laRegla2
    (117) graphmove2 -> . RIGHT laRegla2
    (118) graphmove2 -> . BACK laRegla2
    (119) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 148 (empty -> .)
    IF              shift and go to state 68
    PRINT           shift and go to state 69
    READ            shift and go to state 72
    REPEAT          shift and go to state 77
    ID              shift and go to state 73
    RETURN          shift and go to state 78
    WHILE           shift and go to state 79
    FOR             shift and go to state 80
    CIRCLE          shift and go to state 84
    SQUARE          shift and go to state 85
    TRIANGLE        shift and go to state 86
    RECTANGLE       shift and go to state 87
    HIDE_STAR       shift and go to state 88
    SHOW_STAR       shift and go to state 89
    HAND_DOWN       shift and go to state 91
    HAND_UP         shift and go to state 92
    SETXY           shift and go to state 94
    COLOR_STAR      shift and go to state 95
    SIZE_STAR       shift and go to state 96
    GO              shift and go to state 97
    LEFT            shift and go to state 98
    RIGHT           shift and go to state 99
    BACK            shift and go to state 100
    ARC             shift and go to state 101

    star1                          shift and go to state 55
    stmt                           shift and go to state 56
    empty                          shift and go to state 57
    assignment                     shift and go to state 58
    condition                      shift and go to state 59
    print                          shift and go to state 60
    loop                           shift and go to state 61
    read                           shift and go to state 62
    graphstmt                      shift and go to state 63
    graphr                         shift and go to state 64
    funCall                        shift and go to state 65
    return                         shift and go to state 66
    id                             shift and go to state 67
    while                          shift and go to state 70
    for                            shift and go to state 71
    graphfig                       shift and go to state 74
    graphview                      shift and go to state 75
    graphmove                      shift and go to state 76
    graphfig1                      shift and go to state 81
    graphview1                     shift and go to state 82
    graphmove1                     shift and go to state 83
    graphview2                     shift and go to state 90
    graphmove2                     shift and go to state 93

state 31

    (7) starI -> MULTIPLICATION OPENBRACES .

    INT             reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    FLOAT           reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    CHAR            reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    IF              reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    PRINT           reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    READ            reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    REPEAT          reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    ID              reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    RETURN          reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    WHILE           reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    FOR             reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    CIRCLE          reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    SQUARE          reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    TRIANGLE        reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    RECTANGLE       reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    HIDE_STAR       reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    SHOW_STAR       reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    HAND_DOWN       reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    HAND_UP         reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    SETXY           reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    COLOR_STAR      reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    SIZE_STAR       reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    GO              reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    LEFT            reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    RIGHT           reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    BACK            reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    ARC             reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)
    CLOSEBRACES     reduce using rule 7 (starI -> MULTIPLICATION OPENBRACES .)


state 32

    (25) function -> FUN functionI function2 . inicia_fun declara_vars function4 termina_fun
    (28) inicia_fun -> . OPENBRACES

    OPENBRACES      shift and go to state 103

    inicia_fun                     shift and go to state 102

state 33

    (30) function2 -> OPENPAREN . function3 CLOSEPAREN
    (31) function3 -> . type ID function5
    (32) function3 -> . empty
    (44) type -> . INT
    (45) type -> . FLOAT
    (46) type -> . CHAR
    (148) empty -> .

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    CLOSEPAREN      reduce using rule 148 (empty -> .)

    function3                      shift and go to state 104
    type                           shift and go to state 105
    empty                          shift and go to state 106

state 34

    (23) functionI -> type ID .

    OPENPAREN       reduce using rule 23 (functionI -> type ID .)


state 35

    (24) functionI -> VOID ID .

    OPENPAREN       reduce using rule 24 (functionI -> VOID ID .)


state 36

    (38) vars -> type ID vars1 SEMICOLON .

    INT             reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    FLOAT           reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    CHAR            reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    FUN             reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    MULTIPLICATION  reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    IF              reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    PRINT           reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    READ            reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    REPEAT          reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    ID              reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    RETURN          reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    WHILE           reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    FOR             reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    CIRCLE          reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    SQUARE          reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    TRIANGLE        reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    RECTANGLE       reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    HIDE_STAR       reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    SHOW_STAR       reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    HAND_DOWN       reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    HAND_UP         reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    SETXY           reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    COLOR_STAR      reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    SIZE_STAR       reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    GO              reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    LEFT            reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    RIGHT           reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    BACK            reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    ARC             reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 38 (vars -> type ID vars1 SEMICOLON .)


state 37

    (39) vars1 -> equals exp .

    SEMICOLON       reduce using rule 39 (vars1 -> equals exp .)


state 38

    (132) exp -> term . exp1
    (133) exp1 -> . ADDITION exp
    (134) exp1 -> . SUBSTRACTION exp
    (135) exp1 -> . empty
    (148) empty -> .

  ! shift/reduce conflict for ADDITION resolved as shift
  ! shift/reduce conflict for SUBSTRACTION resolved as shift
    ADDITION        shift and go to state 108
    SUBSTRACTION    shift and go to state 109
    SEMICOLON       reduce using rule 148 (empty -> .)
    GREATER         reduce using rule 148 (empty -> .)
    LESS            reduce using rule 148 (empty -> .)
    NOTEQUAL        reduce using rule 148 (empty -> .)
    ISEQUAL         reduce using rule 148 (empty -> .)
    CLOSEPAREN      reduce using rule 148 (empty -> .)
    OPENBRACES      reduce using rule 148 (empty -> .)
    COMMA           reduce using rule 148 (empty -> .)
    CLOSEBRACKET    reduce using rule 148 (empty -> .)
    OR              reduce using rule 148 (empty -> .)
    AND             reduce using rule 148 (empty -> .)
    CTEINT          reduce using rule 148 (empty -> .)
    CTEFLOAT        reduce using rule 148 (empty -> .)
    CTECHAR         reduce using rule 148 (empty -> .)
    ID              reduce using rule 148 (empty -> .)
    OPENPAREN       reduce using rule 148 (empty -> .)

  ! ADDITION        [ reduce using rule 148 (empty -> .) ]
  ! SUBSTRACTION    [ reduce using rule 148 (empty -> .) ]

    exp1                           shift and go to state 107
    empty                          shift and go to state 110

state 39

    (144) term -> factor . term1
    (145) term1 -> . MULTIPLICATION term
    (146) term1 -> . DIVISION term
    (147) term1 -> . empty
    (148) empty -> .

    MULTIPLICATION  shift and go to state 112
    DIVISION        shift and go to state 113
    ADDITION        reduce using rule 148 (empty -> .)
    SUBSTRACTION    reduce using rule 148 (empty -> .)
    SEMICOLON       reduce using rule 148 (empty -> .)
    GREATER         reduce using rule 148 (empty -> .)
    LESS            reduce using rule 148 (empty -> .)
    NOTEQUAL        reduce using rule 148 (empty -> .)
    ISEQUAL         reduce using rule 148 (empty -> .)
    CLOSEPAREN      reduce using rule 148 (empty -> .)
    OPENBRACES      reduce using rule 148 (empty -> .)
    COMMA           reduce using rule 148 (empty -> .)
    CLOSEBRACKET    reduce using rule 148 (empty -> .)
    OR              reduce using rule 148 (empty -> .)
    AND             reduce using rule 148 (empty -> .)
    CTEINT          reduce using rule 148 (empty -> .)
    CTEFLOAT        reduce using rule 148 (empty -> .)
    CTECHAR         reduce using rule 148 (empty -> .)
    ID              reduce using rule 148 (empty -> .)
    OPENPAREN       reduce using rule 148 (empty -> .)

    term1                          shift and go to state 111
    empty                          shift and go to state 114

state 40

    (138) factor -> vcte .

    MULTIPLICATION  reduce using rule 138 (factor -> vcte .)
    DIVISION        reduce using rule 138 (factor -> vcte .)
    ADDITION        reduce using rule 138 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 138 (factor -> vcte .)
    SEMICOLON       reduce using rule 138 (factor -> vcte .)
    GREATER         reduce using rule 138 (factor -> vcte .)
    LESS            reduce using rule 138 (factor -> vcte .)
    NOTEQUAL        reduce using rule 138 (factor -> vcte .)
    ISEQUAL         reduce using rule 138 (factor -> vcte .)
    CLOSEPAREN      reduce using rule 138 (factor -> vcte .)
    OPENBRACES      reduce using rule 138 (factor -> vcte .)
    COMMA           reduce using rule 138 (factor -> vcte .)
    CLOSEBRACKET    reduce using rule 138 (factor -> vcte .)
    OR              reduce using rule 138 (factor -> vcte .)
    AND             reduce using rule 138 (factor -> vcte .)
    CTEINT          reduce using rule 138 (factor -> vcte .)
    CTEFLOAT        reduce using rule 138 (factor -> vcte .)
    CTECHAR         reduce using rule 138 (factor -> vcte .)
    ID              reduce using rule 138 (factor -> vcte .)
    OPENPAREN       reduce using rule 138 (factor -> vcte .)


state 41

    (139) factor -> factor1 .

    MULTIPLICATION  reduce using rule 139 (factor -> factor1 .)
    DIVISION        reduce using rule 139 (factor -> factor1 .)
    ADDITION        reduce using rule 139 (factor -> factor1 .)
    SUBSTRACTION    reduce using rule 139 (factor -> factor1 .)
    SEMICOLON       reduce using rule 139 (factor -> factor1 .)
    GREATER         reduce using rule 139 (factor -> factor1 .)
    LESS            reduce using rule 139 (factor -> factor1 .)
    NOTEQUAL        reduce using rule 139 (factor -> factor1 .)
    ISEQUAL         reduce using rule 139 (factor -> factor1 .)
    CLOSEPAREN      reduce using rule 139 (factor -> factor1 .)
    OPENBRACES      reduce using rule 139 (factor -> factor1 .)
    COMMA           reduce using rule 139 (factor -> factor1 .)
    CLOSEBRACKET    reduce using rule 139 (factor -> factor1 .)
    OR              reduce using rule 139 (factor -> factor1 .)
    AND             reduce using rule 139 (factor -> factor1 .)
    CTEINT          reduce using rule 139 (factor -> factor1 .)
    CTEFLOAT        reduce using rule 139 (factor -> factor1 .)
    CTECHAR         reduce using rule 139 (factor -> factor1 .)
    ID              reduce using rule 139 (factor -> factor1 .)
    OPENPAREN       reduce using rule 139 (factor -> factor1 .)


state 42

    (61) vcte -> cte .

    MULTIPLICATION  reduce using rule 61 (vcte -> cte .)
    DIVISION        reduce using rule 61 (vcte -> cte .)
    ADDITION        reduce using rule 61 (vcte -> cte .)
    SUBSTRACTION    reduce using rule 61 (vcte -> cte .)
    SEMICOLON       reduce using rule 61 (vcte -> cte .)
    GREATER         reduce using rule 61 (vcte -> cte .)
    LESS            reduce using rule 61 (vcte -> cte .)
    NOTEQUAL        reduce using rule 61 (vcte -> cte .)
    ISEQUAL         reduce using rule 61 (vcte -> cte .)
    CLOSEPAREN      reduce using rule 61 (vcte -> cte .)
    OPENBRACES      reduce using rule 61 (vcte -> cte .)
    COMMA           reduce using rule 61 (vcte -> cte .)
    CLOSEBRACKET    reduce using rule 61 (vcte -> cte .)
    OR              reduce using rule 61 (vcte -> cte .)
    AND             reduce using rule 61 (vcte -> cte .)
    CTEINT          reduce using rule 61 (vcte -> cte .)
    CTEFLOAT        reduce using rule 61 (vcte -> cte .)
    CTECHAR         reduce using rule 61 (vcte -> cte .)
    ID              reduce using rule 61 (vcte -> cte .)
    OPENPAREN       reduce using rule 61 (vcte -> cte .)


state 43

    (62) vcte -> id . vcte1
    (64) vcte1 -> . OPENBRACKET exp CLOSEBRACKET vcte3
    (65) vcte1 -> . empty
    (148) empty -> .

    OPENBRACKET     shift and go to state 116
    MULTIPLICATION  reduce using rule 148 (empty -> .)
    DIVISION        reduce using rule 148 (empty -> .)
    ADDITION        reduce using rule 148 (empty -> .)
    SUBSTRACTION    reduce using rule 148 (empty -> .)
    SEMICOLON       reduce using rule 148 (empty -> .)
    GREATER         reduce using rule 148 (empty -> .)
    LESS            reduce using rule 148 (empty -> .)
    NOTEQUAL        reduce using rule 148 (empty -> .)
    ISEQUAL         reduce using rule 148 (empty -> .)
    CLOSEPAREN      reduce using rule 148 (empty -> .)
    OPENBRACES      reduce using rule 148 (empty -> .)
    COMMA           reduce using rule 148 (empty -> .)
    CLOSEBRACKET    reduce using rule 148 (empty -> .)
    OR              reduce using rule 148 (empty -> .)
    AND             reduce using rule 148 (empty -> .)
    CTEINT          reduce using rule 148 (empty -> .)
    CTEFLOAT        reduce using rule 148 (empty -> .)
    CTECHAR         reduce using rule 148 (empty -> .)
    ID              reduce using rule 148 (empty -> .)
    OPENPAREN       reduce using rule 148 (empty -> .)

    vcte1                          shift and go to state 115
    empty                          shift and go to state 117

state 44

    (63) vcte -> funCall .

    MULTIPLICATION  reduce using rule 63 (vcte -> funCall .)
    DIVISION        reduce using rule 63 (vcte -> funCall .)
    ADDITION        reduce using rule 63 (vcte -> funCall .)
    SUBSTRACTION    reduce using rule 63 (vcte -> funCall .)
    SEMICOLON       reduce using rule 63 (vcte -> funCall .)
    GREATER         reduce using rule 63 (vcte -> funCall .)
    LESS            reduce using rule 63 (vcte -> funCall .)
    NOTEQUAL        reduce using rule 63 (vcte -> funCall .)
    ISEQUAL         reduce using rule 63 (vcte -> funCall .)
    CLOSEPAREN      reduce using rule 63 (vcte -> funCall .)
    OPENBRACES      reduce using rule 63 (vcte -> funCall .)
    COMMA           reduce using rule 63 (vcte -> funCall .)
    CLOSEBRACKET    reduce using rule 63 (vcte -> funCall .)
    OR              reduce using rule 63 (vcte -> funCall .)
    AND             reduce using rule 63 (vcte -> funCall .)
    CTEINT          reduce using rule 63 (vcte -> funCall .)
    CTEFLOAT        reduce using rule 63 (vcte -> funCall .)
    CTECHAR         reduce using rule 63 (vcte -> funCall .)
    ID              reduce using rule 63 (vcte -> funCall .)
    OPENPAREN       reduce using rule 63 (vcte -> funCall .)


state 45

    (140) factor1 -> factor2 . vcte
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON

    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50

    vcte                           shift and go to state 118
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44

state 46

    (141) factor1 -> openP . expression closeP
    (74) expression -> . exp expression1
    (132) exp -> . term exp1
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    openP                          shift and go to state 46
    expression                     shift and go to state 119
    exp                            shift and go to state 120
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45

state 47

    (68) cte -> CTEINT .

    MULTIPLICATION  reduce using rule 68 (cte -> CTEINT .)
    DIVISION        reduce using rule 68 (cte -> CTEINT .)
    ADDITION        reduce using rule 68 (cte -> CTEINT .)
    SUBSTRACTION    reduce using rule 68 (cte -> CTEINT .)
    SEMICOLON       reduce using rule 68 (cte -> CTEINT .)
    GREATER         reduce using rule 68 (cte -> CTEINT .)
    LESS            reduce using rule 68 (cte -> CTEINT .)
    NOTEQUAL        reduce using rule 68 (cte -> CTEINT .)
    ISEQUAL         reduce using rule 68 (cte -> CTEINT .)
    CLOSEPAREN      reduce using rule 68 (cte -> CTEINT .)
    OPENBRACES      reduce using rule 68 (cte -> CTEINT .)
    COMMA           reduce using rule 68 (cte -> CTEINT .)
    CLOSEBRACKET    reduce using rule 68 (cte -> CTEINT .)
    OR              reduce using rule 68 (cte -> CTEINT .)
    AND             reduce using rule 68 (cte -> CTEINT .)
    CTEINT          reduce using rule 68 (cte -> CTEINT .)
    CTEFLOAT        reduce using rule 68 (cte -> CTEINT .)
    CTECHAR         reduce using rule 68 (cte -> CTEINT .)
    ID              reduce using rule 68 (cte -> CTEINT .)
    OPENPAREN       reduce using rule 68 (cte -> CTEINT .)


state 48

    (69) cte -> CTEFLOAT .

    MULTIPLICATION  reduce using rule 69 (cte -> CTEFLOAT .)
    DIVISION        reduce using rule 69 (cte -> CTEFLOAT .)
    ADDITION        reduce using rule 69 (cte -> CTEFLOAT .)
    SUBSTRACTION    reduce using rule 69 (cte -> CTEFLOAT .)
    SEMICOLON       reduce using rule 69 (cte -> CTEFLOAT .)
    GREATER         reduce using rule 69 (cte -> CTEFLOAT .)
    LESS            reduce using rule 69 (cte -> CTEFLOAT .)
    NOTEQUAL        reduce using rule 69 (cte -> CTEFLOAT .)
    ISEQUAL         reduce using rule 69 (cte -> CTEFLOAT .)
    CLOSEPAREN      reduce using rule 69 (cte -> CTEFLOAT .)
    OPENBRACES      reduce using rule 69 (cte -> CTEFLOAT .)
    COMMA           reduce using rule 69 (cte -> CTEFLOAT .)
    CLOSEBRACKET    reduce using rule 69 (cte -> CTEFLOAT .)
    OR              reduce using rule 69 (cte -> CTEFLOAT .)
    AND             reduce using rule 69 (cte -> CTEFLOAT .)
    CTEINT          reduce using rule 69 (cte -> CTEFLOAT .)
    CTEFLOAT        reduce using rule 69 (cte -> CTEFLOAT .)
    CTECHAR         reduce using rule 69 (cte -> CTEFLOAT .)
    ID              reduce using rule 69 (cte -> CTEFLOAT .)
    OPENPAREN       reduce using rule 69 (cte -> CTEFLOAT .)


state 49

    (70) cte -> CTECHAR .

    MULTIPLICATION  reduce using rule 70 (cte -> CTECHAR .)
    DIVISION        reduce using rule 70 (cte -> CTECHAR .)
    ADDITION        reduce using rule 70 (cte -> CTECHAR .)
    SUBSTRACTION    reduce using rule 70 (cte -> CTECHAR .)
    SEMICOLON       reduce using rule 70 (cte -> CTECHAR .)
    GREATER         reduce using rule 70 (cte -> CTECHAR .)
    LESS            reduce using rule 70 (cte -> CTECHAR .)
    NOTEQUAL        reduce using rule 70 (cte -> CTECHAR .)
    ISEQUAL         reduce using rule 70 (cte -> CTECHAR .)
    CLOSEPAREN      reduce using rule 70 (cte -> CTECHAR .)
    OPENBRACES      reduce using rule 70 (cte -> CTECHAR .)
    COMMA           reduce using rule 70 (cte -> CTECHAR .)
    CLOSEBRACKET    reduce using rule 70 (cte -> CTECHAR .)
    OR              reduce using rule 70 (cte -> CTECHAR .)
    AND             reduce using rule 70 (cte -> CTECHAR .)
    CTEINT          reduce using rule 70 (cte -> CTECHAR .)
    CTEFLOAT        reduce using rule 70 (cte -> CTECHAR .)
    CTECHAR         reduce using rule 70 (cte -> CTECHAR .)
    ID              reduce using rule 70 (cte -> CTECHAR .)
    OPENPAREN       reduce using rule 70 (cte -> CTECHAR .)


state 50

    (53) id -> ID .
    (96) funCall -> ID . OPENPAREN funCall2 CLOSEPAREN SEMICOLON

  ! shift/reduce conflict for OPENPAREN resolved as shift
    OPENBRACKET     reduce using rule 53 (id -> ID .)
    MULTIPLICATION  reduce using rule 53 (id -> ID .)
    DIVISION        reduce using rule 53 (id -> ID .)
    ADDITION        reduce using rule 53 (id -> ID .)
    SUBSTRACTION    reduce using rule 53 (id -> ID .)
    SEMICOLON       reduce using rule 53 (id -> ID .)
    GREATER         reduce using rule 53 (id -> ID .)
    LESS            reduce using rule 53 (id -> ID .)
    NOTEQUAL        reduce using rule 53 (id -> ID .)
    ISEQUAL         reduce using rule 53 (id -> ID .)
    CLOSEPAREN      reduce using rule 53 (id -> ID .)
    OPENBRACES      reduce using rule 53 (id -> ID .)
    COMMA           reduce using rule 53 (id -> ID .)
    CLOSEBRACKET    reduce using rule 53 (id -> ID .)
    OR              reduce using rule 53 (id -> ID .)
    AND             reduce using rule 53 (id -> ID .)
    CTEINT          reduce using rule 53 (id -> ID .)
    CTEFLOAT        reduce using rule 53 (id -> ID .)
    CTECHAR         reduce using rule 53 (id -> ID .)
    ID              reduce using rule 53 (id -> ID .)
    OPENPAREN       shift and go to state 121

  ! OPENPAREN       [ reduce using rule 53 (id -> ID .) ]


state 51

    (136) openP -> OPENPAREN .

    CTEINT          reduce using rule 136 (openP -> OPENPAREN .)
    CTEFLOAT        reduce using rule 136 (openP -> OPENPAREN .)
    CTECHAR         reduce using rule 136 (openP -> OPENPAREN .)
    ID              reduce using rule 136 (openP -> OPENPAREN .)
    ADDITION        reduce using rule 136 (openP -> OPENPAREN .)
    SUBSTRACTION    reduce using rule 136 (openP -> OPENPAREN .)
    OPENPAREN       reduce using rule 136 (openP -> OPENPAREN .)


state 52

    (142) factor2 -> ADDITION .

    CTEINT          reduce using rule 142 (factor2 -> ADDITION .)
    CTEFLOAT        reduce using rule 142 (factor2 -> ADDITION .)
    CTECHAR         reduce using rule 142 (factor2 -> ADDITION .)
    ID              reduce using rule 142 (factor2 -> ADDITION .)


state 53

    (143) factor2 -> SUBSTRACTION .

    CTEINT          reduce using rule 143 (factor2 -> SUBSTRACTION .)
    CTEFLOAT        reduce using rule 143 (factor2 -> SUBSTRACTION .)
    CTECHAR         reduce using rule 143 (factor2 -> SUBSTRACTION .)
    ID              reduce using rule 143 (factor2 -> SUBSTRACTION .)


state 54

    (40) vars1 -> OPENBRACKET CTEINT . CLOSEBRACKET vars3

    CLOSEBRACKET    shift and go to state 122


state 55

    (6) star -> starI declara_vars star1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 123


state 56

    (8) star1 -> stmt . star1
    (8) star1 -> . stmt star1
    (9) star1 -> . empty
    (14) stmt -> . assignment
    (15) stmt -> . condition
    (16) stmt -> . print
    (17) stmt -> . loop
    (18) stmt -> . read
    (19) stmt -> . graphstmt
    (20) stmt -> . graphr
    (21) stmt -> . funCall
    (22) stmt -> . return
    (148) empty -> .
    (54) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (84) condition -> . IF head body condition1
    (47) print -> . PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
    (12) loop -> . while
    (13) loop -> . for
    (48) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (103) graphstmt -> . graphfig
    (104) graphstmt -> . graphview
    (105) graphstmt -> . graphmove
    (120) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (71) return -> . RETURN return1 SEMICOLON
    (53) id -> . ID
    (95) while -> . WHILE head body
    (94) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (106) graphfig -> . graphfig1 SEMICOLON
    (123) graphview -> . graphview1 SEMICOLON
    (111) graphmove -> . graphmove1 SEMICOLON
    (107) graphfig1 -> . CIRCLE laRegla2
    (108) graphfig1 -> . SQUARE laRegla2
    (109) graphfig1 -> . TRIANGLE laRegla
    (110) graphfig1 -> . RECTANGLE laRegla
    (124) graphview1 -> . HIDE_STAR
    (125) graphview1 -> . SHOW_STAR
    (126) graphview1 -> . graphview2 exp
    (112) graphmove1 -> . HAND_DOWN
    (113) graphmove1 -> . HAND_UP
    (114) graphmove1 -> . graphmove2
    (127) graphview2 -> . SETXY graphview3
    (128) graphview2 -> . COLOR_STAR
    (129) graphview2 -> . SIZE_STAR
    (115) graphmove2 -> . GO laRegla2
    (116) graphmove2 -> . LEFT laRegla2
    (117) graphmove2 -> . RIGHT laRegla2
    (118) graphmove2 -> . BACK laRegla2
    (119) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 148 (empty -> .)
    IF              shift and go to state 68
    PRINT           shift and go to state 69
    READ            shift and go to state 72
    REPEAT          shift and go to state 77
    ID              shift and go to state 73
    RETURN          shift and go to state 78
    WHILE           shift and go to state 79
    FOR             shift and go to state 80
    CIRCLE          shift and go to state 84
    SQUARE          shift and go to state 85
    TRIANGLE        shift and go to state 86
    RECTANGLE       shift and go to state 87
    HIDE_STAR       shift and go to state 88
    SHOW_STAR       shift and go to state 89
    HAND_DOWN       shift and go to state 91
    HAND_UP         shift and go to state 92
    SETXY           shift and go to state 94
    COLOR_STAR      shift and go to state 95
    SIZE_STAR       shift and go to state 96
    GO              shift and go to state 97
    LEFT            shift and go to state 98
    RIGHT           shift and go to state 99
    BACK            shift and go to state 100
    ARC             shift and go to state 101

    stmt                           shift and go to state 56
    star1                          shift and go to state 124
    empty                          shift and go to state 57
    assignment                     shift and go to state 58
    condition                      shift and go to state 59
    print                          shift and go to state 60
    loop                           shift and go to state 61
    read                           shift and go to state 62
    graphstmt                      shift and go to state 63
    graphr                         shift and go to state 64
    funCall                        shift and go to state 65
    return                         shift and go to state 66
    id                             shift and go to state 67
    while                          shift and go to state 70
    for                            shift and go to state 71
    graphfig                       shift and go to state 74
    graphview                      shift and go to state 75
    graphmove                      shift and go to state 76
    graphfig1                      shift and go to state 81
    graphview1                     shift and go to state 82
    graphmove1                     shift and go to state 83
    graphview2                     shift and go to state 90
    graphmove2                     shift and go to state 93

state 57

    (9) star1 -> empty .

    CLOSEBRACES     reduce using rule 9 (star1 -> empty .)


state 58

    (14) stmt -> assignment .

    IF              reduce using rule 14 (stmt -> assignment .)
    PRINT           reduce using rule 14 (stmt -> assignment .)
    READ            reduce using rule 14 (stmt -> assignment .)
    REPEAT          reduce using rule 14 (stmt -> assignment .)
    ID              reduce using rule 14 (stmt -> assignment .)
    RETURN          reduce using rule 14 (stmt -> assignment .)
    WHILE           reduce using rule 14 (stmt -> assignment .)
    FOR             reduce using rule 14 (stmt -> assignment .)
    CIRCLE          reduce using rule 14 (stmt -> assignment .)
    SQUARE          reduce using rule 14 (stmt -> assignment .)
    TRIANGLE        reduce using rule 14 (stmt -> assignment .)
    RECTANGLE       reduce using rule 14 (stmt -> assignment .)
    HIDE_STAR       reduce using rule 14 (stmt -> assignment .)
    SHOW_STAR       reduce using rule 14 (stmt -> assignment .)
    HAND_DOWN       reduce using rule 14 (stmt -> assignment .)
    HAND_UP         reduce using rule 14 (stmt -> assignment .)
    SETXY           reduce using rule 14 (stmt -> assignment .)
    COLOR_STAR      reduce using rule 14 (stmt -> assignment .)
    SIZE_STAR       reduce using rule 14 (stmt -> assignment .)
    GO              reduce using rule 14 (stmt -> assignment .)
    LEFT            reduce using rule 14 (stmt -> assignment .)
    RIGHT           reduce using rule 14 (stmt -> assignment .)
    BACK            reduce using rule 14 (stmt -> assignment .)
    ARC             reduce using rule 14 (stmt -> assignment .)
    CLOSEBRACES     reduce using rule 14 (stmt -> assignment .)


state 59

    (15) stmt -> condition .

    IF              reduce using rule 15 (stmt -> condition .)
    PRINT           reduce using rule 15 (stmt -> condition .)
    READ            reduce using rule 15 (stmt -> condition .)
    REPEAT          reduce using rule 15 (stmt -> condition .)
    ID              reduce using rule 15 (stmt -> condition .)
    RETURN          reduce using rule 15 (stmt -> condition .)
    WHILE           reduce using rule 15 (stmt -> condition .)
    FOR             reduce using rule 15 (stmt -> condition .)
    CIRCLE          reduce using rule 15 (stmt -> condition .)
    SQUARE          reduce using rule 15 (stmt -> condition .)
    TRIANGLE        reduce using rule 15 (stmt -> condition .)
    RECTANGLE       reduce using rule 15 (stmt -> condition .)
    HIDE_STAR       reduce using rule 15 (stmt -> condition .)
    SHOW_STAR       reduce using rule 15 (stmt -> condition .)
    HAND_DOWN       reduce using rule 15 (stmt -> condition .)
    HAND_UP         reduce using rule 15 (stmt -> condition .)
    SETXY           reduce using rule 15 (stmt -> condition .)
    COLOR_STAR      reduce using rule 15 (stmt -> condition .)
    SIZE_STAR       reduce using rule 15 (stmt -> condition .)
    GO              reduce using rule 15 (stmt -> condition .)
    LEFT            reduce using rule 15 (stmt -> condition .)
    RIGHT           reduce using rule 15 (stmt -> condition .)
    BACK            reduce using rule 15 (stmt -> condition .)
    ARC             reduce using rule 15 (stmt -> condition .)
    CLOSEBRACES     reduce using rule 15 (stmt -> condition .)


state 60

    (16) stmt -> print .

    IF              reduce using rule 16 (stmt -> print .)
    PRINT           reduce using rule 16 (stmt -> print .)
    READ            reduce using rule 16 (stmt -> print .)
    REPEAT          reduce using rule 16 (stmt -> print .)
    ID              reduce using rule 16 (stmt -> print .)
    RETURN          reduce using rule 16 (stmt -> print .)
    WHILE           reduce using rule 16 (stmt -> print .)
    FOR             reduce using rule 16 (stmt -> print .)
    CIRCLE          reduce using rule 16 (stmt -> print .)
    SQUARE          reduce using rule 16 (stmt -> print .)
    TRIANGLE        reduce using rule 16 (stmt -> print .)
    RECTANGLE       reduce using rule 16 (stmt -> print .)
    HIDE_STAR       reduce using rule 16 (stmt -> print .)
    SHOW_STAR       reduce using rule 16 (stmt -> print .)
    HAND_DOWN       reduce using rule 16 (stmt -> print .)
    HAND_UP         reduce using rule 16 (stmt -> print .)
    SETXY           reduce using rule 16 (stmt -> print .)
    COLOR_STAR      reduce using rule 16 (stmt -> print .)
    SIZE_STAR       reduce using rule 16 (stmt -> print .)
    GO              reduce using rule 16 (stmt -> print .)
    LEFT            reduce using rule 16 (stmt -> print .)
    RIGHT           reduce using rule 16 (stmt -> print .)
    BACK            reduce using rule 16 (stmt -> print .)
    ARC             reduce using rule 16 (stmt -> print .)
    CLOSEBRACES     reduce using rule 16 (stmt -> print .)


state 61

    (17) stmt -> loop .

    IF              reduce using rule 17 (stmt -> loop .)
    PRINT           reduce using rule 17 (stmt -> loop .)
    READ            reduce using rule 17 (stmt -> loop .)
    REPEAT          reduce using rule 17 (stmt -> loop .)
    ID              reduce using rule 17 (stmt -> loop .)
    RETURN          reduce using rule 17 (stmt -> loop .)
    WHILE           reduce using rule 17 (stmt -> loop .)
    FOR             reduce using rule 17 (stmt -> loop .)
    CIRCLE          reduce using rule 17 (stmt -> loop .)
    SQUARE          reduce using rule 17 (stmt -> loop .)
    TRIANGLE        reduce using rule 17 (stmt -> loop .)
    RECTANGLE       reduce using rule 17 (stmt -> loop .)
    HIDE_STAR       reduce using rule 17 (stmt -> loop .)
    SHOW_STAR       reduce using rule 17 (stmt -> loop .)
    HAND_DOWN       reduce using rule 17 (stmt -> loop .)
    HAND_UP         reduce using rule 17 (stmt -> loop .)
    SETXY           reduce using rule 17 (stmt -> loop .)
    COLOR_STAR      reduce using rule 17 (stmt -> loop .)
    SIZE_STAR       reduce using rule 17 (stmt -> loop .)
    GO              reduce using rule 17 (stmt -> loop .)
    LEFT            reduce using rule 17 (stmt -> loop .)
    RIGHT           reduce using rule 17 (stmt -> loop .)
    BACK            reduce using rule 17 (stmt -> loop .)
    ARC             reduce using rule 17 (stmt -> loop .)
    CLOSEBRACES     reduce using rule 17 (stmt -> loop .)


state 62

    (18) stmt -> read .

    IF              reduce using rule 18 (stmt -> read .)
    PRINT           reduce using rule 18 (stmt -> read .)
    READ            reduce using rule 18 (stmt -> read .)
    REPEAT          reduce using rule 18 (stmt -> read .)
    ID              reduce using rule 18 (stmt -> read .)
    RETURN          reduce using rule 18 (stmt -> read .)
    WHILE           reduce using rule 18 (stmt -> read .)
    FOR             reduce using rule 18 (stmt -> read .)
    CIRCLE          reduce using rule 18 (stmt -> read .)
    SQUARE          reduce using rule 18 (stmt -> read .)
    TRIANGLE        reduce using rule 18 (stmt -> read .)
    RECTANGLE       reduce using rule 18 (stmt -> read .)
    HIDE_STAR       reduce using rule 18 (stmt -> read .)
    SHOW_STAR       reduce using rule 18 (stmt -> read .)
    HAND_DOWN       reduce using rule 18 (stmt -> read .)
    HAND_UP         reduce using rule 18 (stmt -> read .)
    SETXY           reduce using rule 18 (stmt -> read .)
    COLOR_STAR      reduce using rule 18 (stmt -> read .)
    SIZE_STAR       reduce using rule 18 (stmt -> read .)
    GO              reduce using rule 18 (stmt -> read .)
    LEFT            reduce using rule 18 (stmt -> read .)
    RIGHT           reduce using rule 18 (stmt -> read .)
    BACK            reduce using rule 18 (stmt -> read .)
    ARC             reduce using rule 18 (stmt -> read .)
    CLOSEBRACES     reduce using rule 18 (stmt -> read .)


state 63

    (19) stmt -> graphstmt .

    IF              reduce using rule 19 (stmt -> graphstmt .)
    PRINT           reduce using rule 19 (stmt -> graphstmt .)
    READ            reduce using rule 19 (stmt -> graphstmt .)
    REPEAT          reduce using rule 19 (stmt -> graphstmt .)
    ID              reduce using rule 19 (stmt -> graphstmt .)
    RETURN          reduce using rule 19 (stmt -> graphstmt .)
    WHILE           reduce using rule 19 (stmt -> graphstmt .)
    FOR             reduce using rule 19 (stmt -> graphstmt .)
    CIRCLE          reduce using rule 19 (stmt -> graphstmt .)
    SQUARE          reduce using rule 19 (stmt -> graphstmt .)
    TRIANGLE        reduce using rule 19 (stmt -> graphstmt .)
    RECTANGLE       reduce using rule 19 (stmt -> graphstmt .)
    HIDE_STAR       reduce using rule 19 (stmt -> graphstmt .)
    SHOW_STAR       reduce using rule 19 (stmt -> graphstmt .)
    HAND_DOWN       reduce using rule 19 (stmt -> graphstmt .)
    HAND_UP         reduce using rule 19 (stmt -> graphstmt .)
    SETXY           reduce using rule 19 (stmt -> graphstmt .)
    COLOR_STAR      reduce using rule 19 (stmt -> graphstmt .)
    SIZE_STAR       reduce using rule 19 (stmt -> graphstmt .)
    GO              reduce using rule 19 (stmt -> graphstmt .)
    LEFT            reduce using rule 19 (stmt -> graphstmt .)
    RIGHT           reduce using rule 19 (stmt -> graphstmt .)
    BACK            reduce using rule 19 (stmt -> graphstmt .)
    ARC             reduce using rule 19 (stmt -> graphstmt .)
    CLOSEBRACES     reduce using rule 19 (stmt -> graphstmt .)


state 64

    (20) stmt -> graphr .

    IF              reduce using rule 20 (stmt -> graphr .)
    PRINT           reduce using rule 20 (stmt -> graphr .)
    READ            reduce using rule 20 (stmt -> graphr .)
    REPEAT          reduce using rule 20 (stmt -> graphr .)
    ID              reduce using rule 20 (stmt -> graphr .)
    RETURN          reduce using rule 20 (stmt -> graphr .)
    WHILE           reduce using rule 20 (stmt -> graphr .)
    FOR             reduce using rule 20 (stmt -> graphr .)
    CIRCLE          reduce using rule 20 (stmt -> graphr .)
    SQUARE          reduce using rule 20 (stmt -> graphr .)
    TRIANGLE        reduce using rule 20 (stmt -> graphr .)
    RECTANGLE       reduce using rule 20 (stmt -> graphr .)
    HIDE_STAR       reduce using rule 20 (stmt -> graphr .)
    SHOW_STAR       reduce using rule 20 (stmt -> graphr .)
    HAND_DOWN       reduce using rule 20 (stmt -> graphr .)
    HAND_UP         reduce using rule 20 (stmt -> graphr .)
    SETXY           reduce using rule 20 (stmt -> graphr .)
    COLOR_STAR      reduce using rule 20 (stmt -> graphr .)
    SIZE_STAR       reduce using rule 20 (stmt -> graphr .)
    GO              reduce using rule 20 (stmt -> graphr .)
    LEFT            reduce using rule 20 (stmt -> graphr .)
    RIGHT           reduce using rule 20 (stmt -> graphr .)
    BACK            reduce using rule 20 (stmt -> graphr .)
    ARC             reduce using rule 20 (stmt -> graphr .)
    CLOSEBRACES     reduce using rule 20 (stmt -> graphr .)


state 65

    (21) stmt -> funCall .

    IF              reduce using rule 21 (stmt -> funCall .)
    PRINT           reduce using rule 21 (stmt -> funCall .)
    READ            reduce using rule 21 (stmt -> funCall .)
    REPEAT          reduce using rule 21 (stmt -> funCall .)
    ID              reduce using rule 21 (stmt -> funCall .)
    RETURN          reduce using rule 21 (stmt -> funCall .)
    WHILE           reduce using rule 21 (stmt -> funCall .)
    FOR             reduce using rule 21 (stmt -> funCall .)
    CIRCLE          reduce using rule 21 (stmt -> funCall .)
    SQUARE          reduce using rule 21 (stmt -> funCall .)
    TRIANGLE        reduce using rule 21 (stmt -> funCall .)
    RECTANGLE       reduce using rule 21 (stmt -> funCall .)
    HIDE_STAR       reduce using rule 21 (stmt -> funCall .)
    SHOW_STAR       reduce using rule 21 (stmt -> funCall .)
    HAND_DOWN       reduce using rule 21 (stmt -> funCall .)
    HAND_UP         reduce using rule 21 (stmt -> funCall .)
    SETXY           reduce using rule 21 (stmt -> funCall .)
    COLOR_STAR      reduce using rule 21 (stmt -> funCall .)
    SIZE_STAR       reduce using rule 21 (stmt -> funCall .)
    GO              reduce using rule 21 (stmt -> funCall .)
    LEFT            reduce using rule 21 (stmt -> funCall .)
    RIGHT           reduce using rule 21 (stmt -> funCall .)
    BACK            reduce using rule 21 (stmt -> funCall .)
    ARC             reduce using rule 21 (stmt -> funCall .)
    CLOSEBRACES     reduce using rule 21 (stmt -> funCall .)


state 66

    (22) stmt -> return .

    IF              reduce using rule 22 (stmt -> return .)
    PRINT           reduce using rule 22 (stmt -> return .)
    READ            reduce using rule 22 (stmt -> return .)
    REPEAT          reduce using rule 22 (stmt -> return .)
    ID              reduce using rule 22 (stmt -> return .)
    RETURN          reduce using rule 22 (stmt -> return .)
    WHILE           reduce using rule 22 (stmt -> return .)
    FOR             reduce using rule 22 (stmt -> return .)
    CIRCLE          reduce using rule 22 (stmt -> return .)
    SQUARE          reduce using rule 22 (stmt -> return .)
    TRIANGLE        reduce using rule 22 (stmt -> return .)
    RECTANGLE       reduce using rule 22 (stmt -> return .)
    HIDE_STAR       reduce using rule 22 (stmt -> return .)
    SHOW_STAR       reduce using rule 22 (stmt -> return .)
    HAND_DOWN       reduce using rule 22 (stmt -> return .)
    HAND_UP         reduce using rule 22 (stmt -> return .)
    SETXY           reduce using rule 22 (stmt -> return .)
    COLOR_STAR      reduce using rule 22 (stmt -> return .)
    SIZE_STAR       reduce using rule 22 (stmt -> return .)
    GO              reduce using rule 22 (stmt -> return .)
    LEFT            reduce using rule 22 (stmt -> return .)
    RIGHT           reduce using rule 22 (stmt -> return .)
    BACK            reduce using rule 22 (stmt -> return .)
    ARC             reduce using rule 22 (stmt -> return .)
    CLOSEBRACES     reduce using rule 22 (stmt -> return .)


state 67

    (54) assignment -> id . assignment1 equals assignment3 SEMICOLON
    (55) assignment1 -> . assignment2
    (56) assignment1 -> . assignment2 assignment1
    (57) assignment1 -> . empty
    (58) assignment2 -> . OPENBRACKET exp CLOSEBRACKET
    (148) empty -> .

    OPENBRACKET     shift and go to state 128
    EQUALS          reduce using rule 148 (empty -> .)

    assignment1                    shift and go to state 125
    assignment2                    shift and go to state 126
    empty                          shift and go to state 127

state 68

    (84) condition -> IF . head body condition1
    (88) head -> . OPENPAREN head1 CLOSEPAREN

    OPENPAREN       shift and go to state 130

    head                           shift and go to state 129

state 69

    (47) print -> PRINT . OPENPAREN exp CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 131


state 70

    (12) loop -> while .

    IF              reduce using rule 12 (loop -> while .)
    PRINT           reduce using rule 12 (loop -> while .)
    READ            reduce using rule 12 (loop -> while .)
    REPEAT          reduce using rule 12 (loop -> while .)
    ID              reduce using rule 12 (loop -> while .)
    RETURN          reduce using rule 12 (loop -> while .)
    WHILE           reduce using rule 12 (loop -> while .)
    FOR             reduce using rule 12 (loop -> while .)
    CIRCLE          reduce using rule 12 (loop -> while .)
    SQUARE          reduce using rule 12 (loop -> while .)
    TRIANGLE        reduce using rule 12 (loop -> while .)
    RECTANGLE       reduce using rule 12 (loop -> while .)
    HIDE_STAR       reduce using rule 12 (loop -> while .)
    SHOW_STAR       reduce using rule 12 (loop -> while .)
    HAND_DOWN       reduce using rule 12 (loop -> while .)
    HAND_UP         reduce using rule 12 (loop -> while .)
    SETXY           reduce using rule 12 (loop -> while .)
    COLOR_STAR      reduce using rule 12 (loop -> while .)
    SIZE_STAR       reduce using rule 12 (loop -> while .)
    GO              reduce using rule 12 (loop -> while .)
    LEFT            reduce using rule 12 (loop -> while .)
    RIGHT           reduce using rule 12 (loop -> while .)
    BACK            reduce using rule 12 (loop -> while .)
    ARC             reduce using rule 12 (loop -> while .)
    CLOSEBRACES     reduce using rule 12 (loop -> while .)


state 71

    (13) loop -> for .

    IF              reduce using rule 13 (loop -> for .)
    PRINT           reduce using rule 13 (loop -> for .)
    READ            reduce using rule 13 (loop -> for .)
    REPEAT          reduce using rule 13 (loop -> for .)
    ID              reduce using rule 13 (loop -> for .)
    RETURN          reduce using rule 13 (loop -> for .)
    WHILE           reduce using rule 13 (loop -> for .)
    FOR             reduce using rule 13 (loop -> for .)
    CIRCLE          reduce using rule 13 (loop -> for .)
    SQUARE          reduce using rule 13 (loop -> for .)
    TRIANGLE        reduce using rule 13 (loop -> for .)
    RECTANGLE       reduce using rule 13 (loop -> for .)
    HIDE_STAR       reduce using rule 13 (loop -> for .)
    SHOW_STAR       reduce using rule 13 (loop -> for .)
    HAND_DOWN       reduce using rule 13 (loop -> for .)
    HAND_UP         reduce using rule 13 (loop -> for .)
    SETXY           reduce using rule 13 (loop -> for .)
    COLOR_STAR      reduce using rule 13 (loop -> for .)
    SIZE_STAR       reduce using rule 13 (loop -> for .)
    GO              reduce using rule 13 (loop -> for .)
    LEFT            reduce using rule 13 (loop -> for .)
    RIGHT           reduce using rule 13 (loop -> for .)
    BACK            reduce using rule 13 (loop -> for .)
    ARC             reduce using rule 13 (loop -> for .)
    CLOSEBRACES     reduce using rule 13 (loop -> for .)


state 72

    (48) read -> READ . OPENPAREN ID read1 CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 132


state 73

    (96) funCall -> ID . OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (53) id -> ID .

    OPENPAREN       shift and go to state 121
    OPENBRACKET     reduce using rule 53 (id -> ID .)
    EQUALS          reduce using rule 53 (id -> ID .)


state 74

    (103) graphstmt -> graphfig .

    IF              reduce using rule 103 (graphstmt -> graphfig .)
    PRINT           reduce using rule 103 (graphstmt -> graphfig .)
    READ            reduce using rule 103 (graphstmt -> graphfig .)
    REPEAT          reduce using rule 103 (graphstmt -> graphfig .)
    ID              reduce using rule 103 (graphstmt -> graphfig .)
    RETURN          reduce using rule 103 (graphstmt -> graphfig .)
    WHILE           reduce using rule 103 (graphstmt -> graphfig .)
    FOR             reduce using rule 103 (graphstmt -> graphfig .)
    CIRCLE          reduce using rule 103 (graphstmt -> graphfig .)
    SQUARE          reduce using rule 103 (graphstmt -> graphfig .)
    TRIANGLE        reduce using rule 103 (graphstmt -> graphfig .)
    RECTANGLE       reduce using rule 103 (graphstmt -> graphfig .)
    HIDE_STAR       reduce using rule 103 (graphstmt -> graphfig .)
    SHOW_STAR       reduce using rule 103 (graphstmt -> graphfig .)
    HAND_DOWN       reduce using rule 103 (graphstmt -> graphfig .)
    HAND_UP         reduce using rule 103 (graphstmt -> graphfig .)
    SETXY           reduce using rule 103 (graphstmt -> graphfig .)
    COLOR_STAR      reduce using rule 103 (graphstmt -> graphfig .)
    SIZE_STAR       reduce using rule 103 (graphstmt -> graphfig .)
    GO              reduce using rule 103 (graphstmt -> graphfig .)
    LEFT            reduce using rule 103 (graphstmt -> graphfig .)
    RIGHT           reduce using rule 103 (graphstmt -> graphfig .)
    BACK            reduce using rule 103 (graphstmt -> graphfig .)
    ARC             reduce using rule 103 (graphstmt -> graphfig .)
    CLOSEBRACES     reduce using rule 103 (graphstmt -> graphfig .)


state 75

    (104) graphstmt -> graphview .

    IF              reduce using rule 104 (graphstmt -> graphview .)
    PRINT           reduce using rule 104 (graphstmt -> graphview .)
    READ            reduce using rule 104 (graphstmt -> graphview .)
    REPEAT          reduce using rule 104 (graphstmt -> graphview .)
    ID              reduce using rule 104 (graphstmt -> graphview .)
    RETURN          reduce using rule 104 (graphstmt -> graphview .)
    WHILE           reduce using rule 104 (graphstmt -> graphview .)
    FOR             reduce using rule 104 (graphstmt -> graphview .)
    CIRCLE          reduce using rule 104 (graphstmt -> graphview .)
    SQUARE          reduce using rule 104 (graphstmt -> graphview .)
    TRIANGLE        reduce using rule 104 (graphstmt -> graphview .)
    RECTANGLE       reduce using rule 104 (graphstmt -> graphview .)
    HIDE_STAR       reduce using rule 104 (graphstmt -> graphview .)
    SHOW_STAR       reduce using rule 104 (graphstmt -> graphview .)
    HAND_DOWN       reduce using rule 104 (graphstmt -> graphview .)
    HAND_UP         reduce using rule 104 (graphstmt -> graphview .)
    SETXY           reduce using rule 104 (graphstmt -> graphview .)
    COLOR_STAR      reduce using rule 104 (graphstmt -> graphview .)
    SIZE_STAR       reduce using rule 104 (graphstmt -> graphview .)
    GO              reduce using rule 104 (graphstmt -> graphview .)
    LEFT            reduce using rule 104 (graphstmt -> graphview .)
    RIGHT           reduce using rule 104 (graphstmt -> graphview .)
    BACK            reduce using rule 104 (graphstmt -> graphview .)
    ARC             reduce using rule 104 (graphstmt -> graphview .)
    CLOSEBRACES     reduce using rule 104 (graphstmt -> graphview .)


state 76

    (105) graphstmt -> graphmove .

    IF              reduce using rule 105 (graphstmt -> graphmove .)
    PRINT           reduce using rule 105 (graphstmt -> graphmove .)
    READ            reduce using rule 105 (graphstmt -> graphmove .)
    REPEAT          reduce using rule 105 (graphstmt -> graphmove .)
    ID              reduce using rule 105 (graphstmt -> graphmove .)
    RETURN          reduce using rule 105 (graphstmt -> graphmove .)
    WHILE           reduce using rule 105 (graphstmt -> graphmove .)
    FOR             reduce using rule 105 (graphstmt -> graphmove .)
    CIRCLE          reduce using rule 105 (graphstmt -> graphmove .)
    SQUARE          reduce using rule 105 (graphstmt -> graphmove .)
    TRIANGLE        reduce using rule 105 (graphstmt -> graphmove .)
    RECTANGLE       reduce using rule 105 (graphstmt -> graphmove .)
    HIDE_STAR       reduce using rule 105 (graphstmt -> graphmove .)
    SHOW_STAR       reduce using rule 105 (graphstmt -> graphmove .)
    HAND_DOWN       reduce using rule 105 (graphstmt -> graphmove .)
    HAND_UP         reduce using rule 105 (graphstmt -> graphmove .)
    SETXY           reduce using rule 105 (graphstmt -> graphmove .)
    COLOR_STAR      reduce using rule 105 (graphstmt -> graphmove .)
    SIZE_STAR       reduce using rule 105 (graphstmt -> graphmove .)
    GO              reduce using rule 105 (graphstmt -> graphmove .)
    LEFT            reduce using rule 105 (graphstmt -> graphmove .)
    RIGHT           reduce using rule 105 (graphstmt -> graphmove .)
    BACK            reduce using rule 105 (graphstmt -> graphmove .)
    ARC             reduce using rule 105 (graphstmt -> graphmove .)
    CLOSEBRACES     reduce using rule 105 (graphstmt -> graphmove .)


state 77

    (120) graphr -> REPEAT . exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (132) exp -> . term exp1
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    exp                            shift and go to state 133
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 78

    (71) return -> RETURN . return1 SEMICOLON
    (72) return1 -> . vcte
    (73) return1 -> . exp
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (132) exp -> . term exp1
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    return1                        shift and go to state 134
    vcte                           shift and go to state 135
    exp                            shift and go to state 136
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    term                           shift and go to state 38
    factor                         shift and go to state 39
    factor1                        shift and go to state 41
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 79

    (95) while -> WHILE . head body
    (88) head -> . OPENPAREN head1 CLOSEPAREN

    OPENPAREN       shift and go to state 130

    head                           shift and go to state 137

state 80

    (94) for -> FOR . OPENPAREN ID TWODOTS exp CLOSEPAREN body

    OPENPAREN       shift and go to state 138


state 81

    (106) graphfig -> graphfig1 . SEMICOLON

    SEMICOLON       shift and go to state 139


state 82

    (123) graphview -> graphview1 . SEMICOLON

    SEMICOLON       shift and go to state 140


state 83

    (111) graphmove -> graphmove1 . SEMICOLON

    SEMICOLON       shift and go to state 141


state 84

    (107) graphfig1 -> CIRCLE . laRegla2
    (102) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 143

    laRegla2                       shift and go to state 142

state 85

    (108) graphfig1 -> SQUARE . laRegla2
    (102) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 143

    laRegla2                       shift and go to state 144

state 86

    (109) graphfig1 -> TRIANGLE . laRegla
    (101) laRegla -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    laRegla                        shift and go to state 145

state 87

    (110) graphfig1 -> RECTANGLE . laRegla
    (101) laRegla -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    laRegla                        shift and go to state 147

state 88

    (124) graphview1 -> HIDE_STAR .

    SEMICOLON       reduce using rule 124 (graphview1 -> HIDE_STAR .)


state 89

    (125) graphview1 -> SHOW_STAR .

    SEMICOLON       reduce using rule 125 (graphview1 -> SHOW_STAR .)


state 90

    (126) graphview1 -> graphview2 . exp
    (132) exp -> . term exp1
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    exp                            shift and go to state 148
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 91

    (112) graphmove1 -> HAND_DOWN .

    SEMICOLON       reduce using rule 112 (graphmove1 -> HAND_DOWN .)


state 92

    (113) graphmove1 -> HAND_UP .

    SEMICOLON       reduce using rule 113 (graphmove1 -> HAND_UP .)


state 93

    (114) graphmove1 -> graphmove2 .

    SEMICOLON       reduce using rule 114 (graphmove1 -> graphmove2 .)


state 94

    (127) graphview2 -> SETXY . graphview3
    (130) graphview3 -> . exp COMMA
    (131) graphview3 -> . laRegla
    (132) exp -> . term exp1
    (101) laRegla -> . OPENPAREN exp COMMA exp CLOSEPAREN
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    OPENPAREN       shift and go to state 152
    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53

    graphview3                     shift and go to state 149
    exp                            shift and go to state 150
    laRegla                        shift and go to state 151
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 95

    (128) graphview2 -> COLOR_STAR .

    CTEINT          reduce using rule 128 (graphview2 -> COLOR_STAR .)
    CTEFLOAT        reduce using rule 128 (graphview2 -> COLOR_STAR .)
    CTECHAR         reduce using rule 128 (graphview2 -> COLOR_STAR .)
    ID              reduce using rule 128 (graphview2 -> COLOR_STAR .)
    ADDITION        reduce using rule 128 (graphview2 -> COLOR_STAR .)
    SUBSTRACTION    reduce using rule 128 (graphview2 -> COLOR_STAR .)
    OPENPAREN       reduce using rule 128 (graphview2 -> COLOR_STAR .)


state 96

    (129) graphview2 -> SIZE_STAR .

    CTEINT          reduce using rule 129 (graphview2 -> SIZE_STAR .)
    CTEFLOAT        reduce using rule 129 (graphview2 -> SIZE_STAR .)
    CTECHAR         reduce using rule 129 (graphview2 -> SIZE_STAR .)
    ID              reduce using rule 129 (graphview2 -> SIZE_STAR .)
    ADDITION        reduce using rule 129 (graphview2 -> SIZE_STAR .)
    SUBSTRACTION    reduce using rule 129 (graphview2 -> SIZE_STAR .)
    OPENPAREN       reduce using rule 129 (graphview2 -> SIZE_STAR .)


state 97

    (115) graphmove2 -> GO . laRegla2
    (102) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 143

    laRegla2                       shift and go to state 153

state 98

    (116) graphmove2 -> LEFT . laRegla2
    (102) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 143

    laRegla2                       shift and go to state 154

state 99

    (117) graphmove2 -> RIGHT . laRegla2
    (102) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 143

    laRegla2                       shift and go to state 155

state 100

    (118) graphmove2 -> BACK . laRegla2
    (102) laRegla2 -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 143

    laRegla2                       shift and go to state 156

state 101

    (119) graphmove2 -> ARC . laRegla
    (101) laRegla -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 146

    laRegla                        shift and go to state 157

state 102

    (25) function -> FUN functionI function2 inicia_fun . declara_vars function4 termina_fun
    (10) declara_vars -> . vars declara_vars
    (11) declara_vars -> . empty
    (38) vars -> . type ID vars1 SEMICOLON
    (148) empty -> .
    (44) type -> . INT
    (45) type -> . FLOAT
    (46) type -> . CHAR

    IF              reduce using rule 148 (empty -> .)
    PRINT           reduce using rule 148 (empty -> .)
    READ            reduce using rule 148 (empty -> .)
    REPEAT          reduce using rule 148 (empty -> .)
    ID              reduce using rule 148 (empty -> .)
    RETURN          reduce using rule 148 (empty -> .)
    WHILE           reduce using rule 148 (empty -> .)
    FOR             reduce using rule 148 (empty -> .)
    CIRCLE          reduce using rule 148 (empty -> .)
    SQUARE          reduce using rule 148 (empty -> .)
    TRIANGLE        reduce using rule 148 (empty -> .)
    RECTANGLE       reduce using rule 148 (empty -> .)
    HIDE_STAR       reduce using rule 148 (empty -> .)
    SHOW_STAR       reduce using rule 148 (empty -> .)
    HAND_DOWN       reduce using rule 148 (empty -> .)
    HAND_UP         reduce using rule 148 (empty -> .)
    SETXY           reduce using rule 148 (empty -> .)
    COLOR_STAR      reduce using rule 148 (empty -> .)
    SIZE_STAR       reduce using rule 148 (empty -> .)
    GO              reduce using rule 148 (empty -> .)
    LEFT            reduce using rule 148 (empty -> .)
    RIGHT           reduce using rule 148 (empty -> .)
    BACK            reduce using rule 148 (empty -> .)
    ARC             reduce using rule 148 (empty -> .)
    CLOSEBRACES     reduce using rule 148 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    declara_vars                   shift and go to state 158
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 103

    (28) inicia_fun -> OPENBRACES .

    INT             reduce using rule 28 (inicia_fun -> OPENBRACES .)
    FLOAT           reduce using rule 28 (inicia_fun -> OPENBRACES .)
    CHAR            reduce using rule 28 (inicia_fun -> OPENBRACES .)
    IF              reduce using rule 28 (inicia_fun -> OPENBRACES .)
    PRINT           reduce using rule 28 (inicia_fun -> OPENBRACES .)
    READ            reduce using rule 28 (inicia_fun -> OPENBRACES .)
    REPEAT          reduce using rule 28 (inicia_fun -> OPENBRACES .)
    ID              reduce using rule 28 (inicia_fun -> OPENBRACES .)
    RETURN          reduce using rule 28 (inicia_fun -> OPENBRACES .)
    WHILE           reduce using rule 28 (inicia_fun -> OPENBRACES .)
    FOR             reduce using rule 28 (inicia_fun -> OPENBRACES .)
    CIRCLE          reduce using rule 28 (inicia_fun -> OPENBRACES .)
    SQUARE          reduce using rule 28 (inicia_fun -> OPENBRACES .)
    TRIANGLE        reduce using rule 28 (inicia_fun -> OPENBRACES .)
    RECTANGLE       reduce using rule 28 (inicia_fun -> OPENBRACES .)
    HIDE_STAR       reduce using rule 28 (inicia_fun -> OPENBRACES .)
    SHOW_STAR       reduce using rule 28 (inicia_fun -> OPENBRACES .)
    HAND_DOWN       reduce using rule 28 (inicia_fun -> OPENBRACES .)
    HAND_UP         reduce using rule 28 (inicia_fun -> OPENBRACES .)
    SETXY           reduce using rule 28 (inicia_fun -> OPENBRACES .)
    COLOR_STAR      reduce using rule 28 (inicia_fun -> OPENBRACES .)
    SIZE_STAR       reduce using rule 28 (inicia_fun -> OPENBRACES .)
    GO              reduce using rule 28 (inicia_fun -> OPENBRACES .)
    LEFT            reduce using rule 28 (inicia_fun -> OPENBRACES .)
    RIGHT           reduce using rule 28 (inicia_fun -> OPENBRACES .)
    BACK            reduce using rule 28 (inicia_fun -> OPENBRACES .)
    ARC             reduce using rule 28 (inicia_fun -> OPENBRACES .)
    CLOSEBRACES     reduce using rule 28 (inicia_fun -> OPENBRACES .)


state 104

    (30) function2 -> OPENPAREN function3 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 159


state 105

    (31) function3 -> type . ID function5

    ID              shift and go to state 160


state 106

    (32) function3 -> empty .

    CLOSEPAREN      reduce using rule 32 (function3 -> empty .)


state 107

    (132) exp -> term exp1 .

    SEMICOLON       reduce using rule 132 (exp -> term exp1 .)
    GREATER         reduce using rule 132 (exp -> term exp1 .)
    LESS            reduce using rule 132 (exp -> term exp1 .)
    NOTEQUAL        reduce using rule 132 (exp -> term exp1 .)
    ISEQUAL         reduce using rule 132 (exp -> term exp1 .)
    CLOSEPAREN      reduce using rule 132 (exp -> term exp1 .)
    OPENBRACES      reduce using rule 132 (exp -> term exp1 .)
    COMMA           reduce using rule 132 (exp -> term exp1 .)
    CLOSEBRACKET    reduce using rule 132 (exp -> term exp1 .)
    OR              reduce using rule 132 (exp -> term exp1 .)
    AND             reduce using rule 132 (exp -> term exp1 .)
    CTEINT          reduce using rule 132 (exp -> term exp1 .)
    CTEFLOAT        reduce using rule 132 (exp -> term exp1 .)
    CTECHAR         reduce using rule 132 (exp -> term exp1 .)
    ID              reduce using rule 132 (exp -> term exp1 .)
    ADDITION        reduce using rule 132 (exp -> term exp1 .)
    SUBSTRACTION    reduce using rule 132 (exp -> term exp1 .)
    OPENPAREN       reduce using rule 132 (exp -> term exp1 .)


state 108

    (133) exp1 -> ADDITION . exp
    (132) exp -> . term exp1
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    exp                            shift and go to state 161
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 109

    (134) exp1 -> SUBSTRACTION . exp
    (132) exp -> . term exp1
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    exp                            shift and go to state 162
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 110

    (135) exp1 -> empty .

    SEMICOLON       reduce using rule 135 (exp1 -> empty .)
    GREATER         reduce using rule 135 (exp1 -> empty .)
    LESS            reduce using rule 135 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 135 (exp1 -> empty .)
    ISEQUAL         reduce using rule 135 (exp1 -> empty .)
    CLOSEPAREN      reduce using rule 135 (exp1 -> empty .)
    OPENBRACES      reduce using rule 135 (exp1 -> empty .)
    COMMA           reduce using rule 135 (exp1 -> empty .)
    CLOSEBRACKET    reduce using rule 135 (exp1 -> empty .)
    OR              reduce using rule 135 (exp1 -> empty .)
    AND             reduce using rule 135 (exp1 -> empty .)
    CTEINT          reduce using rule 135 (exp1 -> empty .)
    CTEFLOAT        reduce using rule 135 (exp1 -> empty .)
    CTECHAR         reduce using rule 135 (exp1 -> empty .)
    ID              reduce using rule 135 (exp1 -> empty .)
    ADDITION        reduce using rule 135 (exp1 -> empty .)
    SUBSTRACTION    reduce using rule 135 (exp1 -> empty .)
    OPENPAREN       reduce using rule 135 (exp1 -> empty .)


state 111

    (144) term -> factor term1 .

    ADDITION        reduce using rule 144 (term -> factor term1 .)
    SUBSTRACTION    reduce using rule 144 (term -> factor term1 .)
    SEMICOLON       reduce using rule 144 (term -> factor term1 .)
    GREATER         reduce using rule 144 (term -> factor term1 .)
    LESS            reduce using rule 144 (term -> factor term1 .)
    NOTEQUAL        reduce using rule 144 (term -> factor term1 .)
    ISEQUAL         reduce using rule 144 (term -> factor term1 .)
    CLOSEPAREN      reduce using rule 144 (term -> factor term1 .)
    OPENBRACES      reduce using rule 144 (term -> factor term1 .)
    COMMA           reduce using rule 144 (term -> factor term1 .)
    CLOSEBRACKET    reduce using rule 144 (term -> factor term1 .)
    OR              reduce using rule 144 (term -> factor term1 .)
    AND             reduce using rule 144 (term -> factor term1 .)
    CTEINT          reduce using rule 144 (term -> factor term1 .)
    CTEFLOAT        reduce using rule 144 (term -> factor term1 .)
    CTECHAR         reduce using rule 144 (term -> factor term1 .)
    ID              reduce using rule 144 (term -> factor term1 .)
    OPENPAREN       reduce using rule 144 (term -> factor term1 .)


state 112

    (145) term1 -> MULTIPLICATION . term
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    term                           shift and go to state 163
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 113

    (146) term1 -> DIVISION . term
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    term                           shift and go to state 164
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 114

    (147) term1 -> empty .

    ADDITION        reduce using rule 147 (term1 -> empty .)
    SUBSTRACTION    reduce using rule 147 (term1 -> empty .)
    SEMICOLON       reduce using rule 147 (term1 -> empty .)
    GREATER         reduce using rule 147 (term1 -> empty .)
    LESS            reduce using rule 147 (term1 -> empty .)
    NOTEQUAL        reduce using rule 147 (term1 -> empty .)
    ISEQUAL         reduce using rule 147 (term1 -> empty .)
    CLOSEPAREN      reduce using rule 147 (term1 -> empty .)
    OPENBRACES      reduce using rule 147 (term1 -> empty .)
    COMMA           reduce using rule 147 (term1 -> empty .)
    CLOSEBRACKET    reduce using rule 147 (term1 -> empty .)
    OR              reduce using rule 147 (term1 -> empty .)
    AND             reduce using rule 147 (term1 -> empty .)
    CTEINT          reduce using rule 147 (term1 -> empty .)
    CTEFLOAT        reduce using rule 147 (term1 -> empty .)
    CTECHAR         reduce using rule 147 (term1 -> empty .)
    ID              reduce using rule 147 (term1 -> empty .)
    OPENPAREN       reduce using rule 147 (term1 -> empty .)


state 115

    (62) vcte -> id vcte1 .

    MULTIPLICATION  reduce using rule 62 (vcte -> id vcte1 .)
    DIVISION        reduce using rule 62 (vcte -> id vcte1 .)
    ADDITION        reduce using rule 62 (vcte -> id vcte1 .)
    SUBSTRACTION    reduce using rule 62 (vcte -> id vcte1 .)
    SEMICOLON       reduce using rule 62 (vcte -> id vcte1 .)
    GREATER         reduce using rule 62 (vcte -> id vcte1 .)
    LESS            reduce using rule 62 (vcte -> id vcte1 .)
    NOTEQUAL        reduce using rule 62 (vcte -> id vcte1 .)
    ISEQUAL         reduce using rule 62 (vcte -> id vcte1 .)
    CLOSEPAREN      reduce using rule 62 (vcte -> id vcte1 .)
    OPENBRACES      reduce using rule 62 (vcte -> id vcte1 .)
    COMMA           reduce using rule 62 (vcte -> id vcte1 .)
    CLOSEBRACKET    reduce using rule 62 (vcte -> id vcte1 .)
    OR              reduce using rule 62 (vcte -> id vcte1 .)
    AND             reduce using rule 62 (vcte -> id vcte1 .)
    CTEINT          reduce using rule 62 (vcte -> id vcte1 .)
    CTEFLOAT        reduce using rule 62 (vcte -> id vcte1 .)
    CTECHAR         reduce using rule 62 (vcte -> id vcte1 .)
    ID              reduce using rule 62 (vcte -> id vcte1 .)
    OPENPAREN       reduce using rule 62 (vcte -> id vcte1 .)


state 116

    (64) vcte1 -> OPENBRACKET . exp CLOSEBRACKET vcte3
    (132) exp -> . term exp1
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    exp                            shift and go to state 165
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 117

    (65) vcte1 -> empty .

    MULTIPLICATION  reduce using rule 65 (vcte1 -> empty .)
    DIVISION        reduce using rule 65 (vcte1 -> empty .)
    ADDITION        reduce using rule 65 (vcte1 -> empty .)
    SUBSTRACTION    reduce using rule 65 (vcte1 -> empty .)
    SEMICOLON       reduce using rule 65 (vcte1 -> empty .)
    GREATER         reduce using rule 65 (vcte1 -> empty .)
    LESS            reduce using rule 65 (vcte1 -> empty .)
    NOTEQUAL        reduce using rule 65 (vcte1 -> empty .)
    ISEQUAL         reduce using rule 65 (vcte1 -> empty .)
    CLOSEPAREN      reduce using rule 65 (vcte1 -> empty .)
    OPENBRACES      reduce using rule 65 (vcte1 -> empty .)
    COMMA           reduce using rule 65 (vcte1 -> empty .)
    CLOSEBRACKET    reduce using rule 65 (vcte1 -> empty .)
    OR              reduce using rule 65 (vcte1 -> empty .)
    AND             reduce using rule 65 (vcte1 -> empty .)
    CTEINT          reduce using rule 65 (vcte1 -> empty .)
    CTEFLOAT        reduce using rule 65 (vcte1 -> empty .)
    CTECHAR         reduce using rule 65 (vcte1 -> empty .)
    ID              reduce using rule 65 (vcte1 -> empty .)
    OPENPAREN       reduce using rule 65 (vcte1 -> empty .)


state 118

    (140) factor1 -> factor2 vcte .

    MULTIPLICATION  reduce using rule 140 (factor1 -> factor2 vcte .)
    DIVISION        reduce using rule 140 (factor1 -> factor2 vcte .)
    ADDITION        reduce using rule 140 (factor1 -> factor2 vcte .)
    SUBSTRACTION    reduce using rule 140 (factor1 -> factor2 vcte .)
    SEMICOLON       reduce using rule 140 (factor1 -> factor2 vcte .)
    GREATER         reduce using rule 140 (factor1 -> factor2 vcte .)
    LESS            reduce using rule 140 (factor1 -> factor2 vcte .)
    NOTEQUAL        reduce using rule 140 (factor1 -> factor2 vcte .)
    ISEQUAL         reduce using rule 140 (factor1 -> factor2 vcte .)
    CLOSEPAREN      reduce using rule 140 (factor1 -> factor2 vcte .)
    OPENBRACES      reduce using rule 140 (factor1 -> factor2 vcte .)
    COMMA           reduce using rule 140 (factor1 -> factor2 vcte .)
    CLOSEBRACKET    reduce using rule 140 (factor1 -> factor2 vcte .)
    OR              reduce using rule 140 (factor1 -> factor2 vcte .)
    AND             reduce using rule 140 (factor1 -> factor2 vcte .)
    CTEINT          reduce using rule 140 (factor1 -> factor2 vcte .)
    CTEFLOAT        reduce using rule 140 (factor1 -> factor2 vcte .)
    CTECHAR         reduce using rule 140 (factor1 -> factor2 vcte .)
    ID              reduce using rule 140 (factor1 -> factor2 vcte .)
    OPENPAREN       reduce using rule 140 (factor1 -> factor2 vcte .)


state 119

    (141) factor1 -> openP expression . closeP
    (137) closeP -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 167

    closeP                         shift and go to state 166

state 120

    (74) expression -> exp . expression1
    (75) expression1 -> . loper exp
    (76) expression1 -> . empty
    (77) loper -> . GREATER
    (78) loper -> . LESS
    (79) loper -> . NOTEQUAL
    (80) loper -> . ISEQUAL
    (148) empty -> .

    GREATER         shift and go to state 171
    LESS            shift and go to state 172
    NOTEQUAL        shift and go to state 173
    ISEQUAL         shift and go to state 174
    CLOSEPAREN      reduce using rule 148 (empty -> .)
    OR              reduce using rule 148 (empty -> .)
    AND             reduce using rule 148 (empty -> .)

    expression1                    shift and go to state 168
    loper                          shift and go to state 169
    empty                          shift and go to state 170

state 121

    (96) funCall -> ID OPENPAREN . funCall2 CLOSEPAREN SEMICOLON
    (97) funCall2 -> . exp funCall3
    (98) funCall2 -> . empty
    (132) exp -> . term exp1
    (148) empty -> .
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CLOSEPAREN      reduce using rule 148 (empty -> .)
    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    funCall2                       shift and go to state 175
    exp                            shift and go to state 176
    empty                          shift and go to state 177
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 122

    (40) vars1 -> OPENBRACKET CTEINT CLOSEBRACKET . vars3
    (42) vars3 -> . OPENBRACKET CTEINT CLOSEBRACKET
    (43) vars3 -> . empty
    (148) empty -> .

    OPENBRACKET     shift and go to state 178
    SEMICOLON       reduce using rule 148 (empty -> .)

    vars3                          shift and go to state 179
    empty                          shift and go to state 180

state 123

    (6) star -> starI declara_vars star1 CLOSEBRACES .

    $end            reduce using rule 6 (star -> starI declara_vars star1 CLOSEBRACES .)


state 124

    (8) star1 -> stmt star1 .

    CLOSEBRACES     reduce using rule 8 (star1 -> stmt star1 .)


state 125

    (54) assignment -> id assignment1 . equals assignment3 SEMICOLON
    (52) equals -> . EQUALS

    EQUALS          shift and go to state 29

    equals                         shift and go to state 181

state 126

    (55) assignment1 -> assignment2 .
    (56) assignment1 -> assignment2 . assignment1
    (55) assignment1 -> . assignment2
    (56) assignment1 -> . assignment2 assignment1
    (57) assignment1 -> . empty
    (58) assignment2 -> . OPENBRACKET exp CLOSEBRACKET
    (148) empty -> .

  ! reduce/reduce conflict for EQUALS resolved using rule 55 (assignment1 -> assignment2 .)
    EQUALS          reduce using rule 55 (assignment1 -> assignment2 .)
    OPENBRACKET     shift and go to state 128

  ! EQUALS          [ reduce using rule 148 (empty -> .) ]

    assignment2                    shift and go to state 126
    assignment1                    shift and go to state 182
    empty                          shift and go to state 127

state 127

    (57) assignment1 -> empty .

    EQUALS          reduce using rule 57 (assignment1 -> empty .)


state 128

    (58) assignment2 -> OPENBRACKET . exp CLOSEBRACKET
    (132) exp -> . term exp1
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    exp                            shift and go to state 183
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 129

    (84) condition -> IF head . body condition1
    (91) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 185

    body                           shift and go to state 184

state 130

    (88) head -> OPENPAREN . head1 CLOSEPAREN
    (89) head1 -> . expression
    (90) head1 -> . logical
    (74) expression -> . exp expression1
    (81) logical -> . expression logical1 expression
    (132) exp -> . term exp1
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    head1                          shift and go to state 186
    expression                     shift and go to state 187
    logical                        shift and go to state 188
    exp                            shift and go to state 120
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 131

    (47) print -> PRINT OPENPAREN . exp CLOSEPAREN SEMICOLON
    (132) exp -> . term exp1
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    exp                            shift and go to state 189
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 132

    (48) read -> READ OPENPAREN . ID read1 CLOSEPAREN SEMICOLON

    ID              shift and go to state 190


state 133

    (120) graphr -> REPEAT exp . OPENBRACES graphstmt graphr1 CLOSEBRACES

    OPENBRACES      shift and go to state 191


state 134

    (71) return -> RETURN return1 . SEMICOLON

    SEMICOLON       shift and go to state 192


state 135

    (72) return1 -> vcte .
    (138) factor -> vcte .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 72 (return1 -> vcte .)
    SEMICOLON       reduce using rule 72 (return1 -> vcte .)
    MULTIPLICATION  reduce using rule 138 (factor -> vcte .)
    DIVISION        reduce using rule 138 (factor -> vcte .)
    ADDITION        reduce using rule 138 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 138 (factor -> vcte .)

  ! SEMICOLON       [ reduce using rule 138 (factor -> vcte .) ]


state 136

    (73) return1 -> exp .

    SEMICOLON       reduce using rule 73 (return1 -> exp .)


state 137

    (95) while -> WHILE head . body
    (91) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 185

    body                           shift and go to state 193

state 138

    (94) for -> FOR OPENPAREN . ID TWODOTS exp CLOSEPAREN body

    ID              shift and go to state 194


state 139

    (106) graphfig -> graphfig1 SEMICOLON .

    IF              reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)
    PRINT           reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)
    READ            reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)
    REPEAT          reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)
    ID              reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)
    RETURN          reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)
    WHILE           reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)
    FOR             reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)
    CIRCLE          reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)
    SQUARE          reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)
    TRIANGLE        reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)
    RECTANGLE       reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)
    HIDE_STAR       reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)
    SHOW_STAR       reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)
    HAND_DOWN       reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)
    HAND_UP         reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)
    SETXY           reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)
    COLOR_STAR      reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)
    SIZE_STAR       reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)
    GO              reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)
    LEFT            reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)
    RIGHT           reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)
    BACK            reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)
    ARC             reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 106 (graphfig -> graphfig1 SEMICOLON .)


state 140

    (123) graphview -> graphview1 SEMICOLON .

    IF              reduce using rule 123 (graphview -> graphview1 SEMICOLON .)
    PRINT           reduce using rule 123 (graphview -> graphview1 SEMICOLON .)
    READ            reduce using rule 123 (graphview -> graphview1 SEMICOLON .)
    REPEAT          reduce using rule 123 (graphview -> graphview1 SEMICOLON .)
    ID              reduce using rule 123 (graphview -> graphview1 SEMICOLON .)
    RETURN          reduce using rule 123 (graphview -> graphview1 SEMICOLON .)
    WHILE           reduce using rule 123 (graphview -> graphview1 SEMICOLON .)
    FOR             reduce using rule 123 (graphview -> graphview1 SEMICOLON .)
    CIRCLE          reduce using rule 123 (graphview -> graphview1 SEMICOLON .)
    SQUARE          reduce using rule 123 (graphview -> graphview1 SEMICOLON .)
    TRIANGLE        reduce using rule 123 (graphview -> graphview1 SEMICOLON .)
    RECTANGLE       reduce using rule 123 (graphview -> graphview1 SEMICOLON .)
    HIDE_STAR       reduce using rule 123 (graphview -> graphview1 SEMICOLON .)
    SHOW_STAR       reduce using rule 123 (graphview -> graphview1 SEMICOLON .)
    HAND_DOWN       reduce using rule 123 (graphview -> graphview1 SEMICOLON .)
    HAND_UP         reduce using rule 123 (graphview -> graphview1 SEMICOLON .)
    SETXY           reduce using rule 123 (graphview -> graphview1 SEMICOLON .)
    COLOR_STAR      reduce using rule 123 (graphview -> graphview1 SEMICOLON .)
    SIZE_STAR       reduce using rule 123 (graphview -> graphview1 SEMICOLON .)
    GO              reduce using rule 123 (graphview -> graphview1 SEMICOLON .)
    LEFT            reduce using rule 123 (graphview -> graphview1 SEMICOLON .)
    RIGHT           reduce using rule 123 (graphview -> graphview1 SEMICOLON .)
    BACK            reduce using rule 123 (graphview -> graphview1 SEMICOLON .)
    ARC             reduce using rule 123 (graphview -> graphview1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 123 (graphview -> graphview1 SEMICOLON .)


state 141

    (111) graphmove -> graphmove1 SEMICOLON .

    IF              reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)
    PRINT           reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)
    READ            reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)
    REPEAT          reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)
    ID              reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)
    RETURN          reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)
    WHILE           reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)
    FOR             reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)
    CIRCLE          reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)
    SQUARE          reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)
    TRIANGLE        reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)
    RECTANGLE       reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)
    HIDE_STAR       reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)
    SHOW_STAR       reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)
    HAND_DOWN       reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)
    HAND_UP         reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)
    SETXY           reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)
    COLOR_STAR      reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)
    SIZE_STAR       reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)
    GO              reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)
    LEFT            reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)
    RIGHT           reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)
    BACK            reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)
    ARC             reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 111 (graphmove -> graphmove1 SEMICOLON .)


state 142

    (107) graphfig1 -> CIRCLE laRegla2 .

    SEMICOLON       reduce using rule 107 (graphfig1 -> CIRCLE laRegla2 .)


state 143

    (102) laRegla2 -> OPENPAREN . exp CLOSEPAREN
    (132) exp -> . term exp1
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    exp                            shift and go to state 195
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 144

    (108) graphfig1 -> SQUARE laRegla2 .

    SEMICOLON       reduce using rule 108 (graphfig1 -> SQUARE laRegla2 .)


state 145

    (109) graphfig1 -> TRIANGLE laRegla .

    SEMICOLON       reduce using rule 109 (graphfig1 -> TRIANGLE laRegla .)


state 146

    (101) laRegla -> OPENPAREN . exp COMMA exp CLOSEPAREN
    (132) exp -> . term exp1
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    exp                            shift and go to state 196
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 147

    (110) graphfig1 -> RECTANGLE laRegla .

    SEMICOLON       reduce using rule 110 (graphfig1 -> RECTANGLE laRegla .)


state 148

    (126) graphview1 -> graphview2 exp .

    SEMICOLON       reduce using rule 126 (graphview1 -> graphview2 exp .)


state 149

    (127) graphview2 -> SETXY graphview3 .

    CTEINT          reduce using rule 127 (graphview2 -> SETXY graphview3 .)
    CTEFLOAT        reduce using rule 127 (graphview2 -> SETXY graphview3 .)
    CTECHAR         reduce using rule 127 (graphview2 -> SETXY graphview3 .)
    ID              reduce using rule 127 (graphview2 -> SETXY graphview3 .)
    ADDITION        reduce using rule 127 (graphview2 -> SETXY graphview3 .)
    SUBSTRACTION    reduce using rule 127 (graphview2 -> SETXY graphview3 .)
    OPENPAREN       reduce using rule 127 (graphview2 -> SETXY graphview3 .)


state 150

    (130) graphview3 -> exp . COMMA

    COMMA           shift and go to state 197


state 151

    (131) graphview3 -> laRegla .

    CTEINT          reduce using rule 131 (graphview3 -> laRegla .)
    CTEFLOAT        reduce using rule 131 (graphview3 -> laRegla .)
    CTECHAR         reduce using rule 131 (graphview3 -> laRegla .)
    ID              reduce using rule 131 (graphview3 -> laRegla .)
    ADDITION        reduce using rule 131 (graphview3 -> laRegla .)
    SUBSTRACTION    reduce using rule 131 (graphview3 -> laRegla .)
    OPENPAREN       reduce using rule 131 (graphview3 -> laRegla .)


state 152

    (101) laRegla -> OPENPAREN . exp COMMA exp CLOSEPAREN
    (136) openP -> OPENPAREN .
    (132) exp -> . term exp1
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

  ! shift/reduce conflict for CTEINT resolved as shift
  ! shift/reduce conflict for CTEFLOAT resolved as shift
  ! shift/reduce conflict for CTECHAR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ADDITION resolved as shift
  ! shift/reduce conflict for SUBSTRACTION resolved as shift
  ! shift/reduce conflict for OPENPAREN resolved as shift
    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

  ! CTEINT          [ reduce using rule 136 (openP -> OPENPAREN .) ]
  ! CTEFLOAT        [ reduce using rule 136 (openP -> OPENPAREN .) ]
  ! CTECHAR         [ reduce using rule 136 (openP -> OPENPAREN .) ]
  ! ID              [ reduce using rule 136 (openP -> OPENPAREN .) ]
  ! ADDITION        [ reduce using rule 136 (openP -> OPENPAREN .) ]
  ! SUBSTRACTION    [ reduce using rule 136 (openP -> OPENPAREN .) ]
  ! OPENPAREN       [ reduce using rule 136 (openP -> OPENPAREN .) ]

    exp                            shift and go to state 196
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 153

    (115) graphmove2 -> GO laRegla2 .

    SEMICOLON       reduce using rule 115 (graphmove2 -> GO laRegla2 .)


state 154

    (116) graphmove2 -> LEFT laRegla2 .

    SEMICOLON       reduce using rule 116 (graphmove2 -> LEFT laRegla2 .)


state 155

    (117) graphmove2 -> RIGHT laRegla2 .

    SEMICOLON       reduce using rule 117 (graphmove2 -> RIGHT laRegla2 .)


state 156

    (118) graphmove2 -> BACK laRegla2 .

    SEMICOLON       reduce using rule 118 (graphmove2 -> BACK laRegla2 .)


state 157

    (119) graphmove2 -> ARC laRegla .

    SEMICOLON       reduce using rule 119 (graphmove2 -> ARC laRegla .)


state 158

    (25) function -> FUN functionI function2 inicia_fun declara_vars . function4 termina_fun
    (33) function4 -> . stmt function4
    (34) function4 -> . empty
    (14) stmt -> . assignment
    (15) stmt -> . condition
    (16) stmt -> . print
    (17) stmt -> . loop
    (18) stmt -> . read
    (19) stmt -> . graphstmt
    (20) stmt -> . graphr
    (21) stmt -> . funCall
    (22) stmt -> . return
    (148) empty -> .
    (54) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (84) condition -> . IF head body condition1
    (47) print -> . PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
    (12) loop -> . while
    (13) loop -> . for
    (48) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (103) graphstmt -> . graphfig
    (104) graphstmt -> . graphview
    (105) graphstmt -> . graphmove
    (120) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (71) return -> . RETURN return1 SEMICOLON
    (53) id -> . ID
    (95) while -> . WHILE head body
    (94) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (106) graphfig -> . graphfig1 SEMICOLON
    (123) graphview -> . graphview1 SEMICOLON
    (111) graphmove -> . graphmove1 SEMICOLON
    (107) graphfig1 -> . CIRCLE laRegla2
    (108) graphfig1 -> . SQUARE laRegla2
    (109) graphfig1 -> . TRIANGLE laRegla
    (110) graphfig1 -> . RECTANGLE laRegla
    (124) graphview1 -> . HIDE_STAR
    (125) graphview1 -> . SHOW_STAR
    (126) graphview1 -> . graphview2 exp
    (112) graphmove1 -> . HAND_DOWN
    (113) graphmove1 -> . HAND_UP
    (114) graphmove1 -> . graphmove2
    (127) graphview2 -> . SETXY graphview3
    (128) graphview2 -> . COLOR_STAR
    (129) graphview2 -> . SIZE_STAR
    (115) graphmove2 -> . GO laRegla2
    (116) graphmove2 -> . LEFT laRegla2
    (117) graphmove2 -> . RIGHT laRegla2
    (118) graphmove2 -> . BACK laRegla2
    (119) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 148 (empty -> .)
    IF              shift and go to state 68
    PRINT           shift and go to state 69
    READ            shift and go to state 72
    REPEAT          shift and go to state 77
    ID              shift and go to state 73
    RETURN          shift and go to state 78
    WHILE           shift and go to state 79
    FOR             shift and go to state 80
    CIRCLE          shift and go to state 84
    SQUARE          shift and go to state 85
    TRIANGLE        shift and go to state 86
    RECTANGLE       shift and go to state 87
    HIDE_STAR       shift and go to state 88
    SHOW_STAR       shift and go to state 89
    HAND_DOWN       shift and go to state 91
    HAND_UP         shift and go to state 92
    SETXY           shift and go to state 94
    COLOR_STAR      shift and go to state 95
    SIZE_STAR       shift and go to state 96
    GO              shift and go to state 97
    LEFT            shift and go to state 98
    RIGHT           shift and go to state 99
    BACK            shift and go to state 100
    ARC             shift and go to state 101

    function4                      shift and go to state 198
    stmt                           shift and go to state 199
    empty                          shift and go to state 200
    assignment                     shift and go to state 58
    condition                      shift and go to state 59
    print                          shift and go to state 60
    loop                           shift and go to state 61
    read                           shift and go to state 62
    graphstmt                      shift and go to state 63
    graphr                         shift and go to state 64
    funCall                        shift and go to state 65
    return                         shift and go to state 66
    id                             shift and go to state 67
    while                          shift and go to state 70
    for                            shift and go to state 71
    graphfig                       shift and go to state 74
    graphview                      shift and go to state 75
    graphmove                      shift and go to state 76
    graphfig1                      shift and go to state 81
    graphview1                     shift and go to state 82
    graphmove1                     shift and go to state 83
    graphview2                     shift and go to state 90
    graphmove2                     shift and go to state 93

state 159

    (30) function2 -> OPENPAREN function3 CLOSEPAREN .

    OPENBRACES      reduce using rule 30 (function2 -> OPENPAREN function3 CLOSEPAREN .)


state 160

    (31) function3 -> type ID . function5
    (35) function5 -> . COMMA type ID function3

    COMMA           shift and go to state 202

    function5                      shift and go to state 201

state 161

    (133) exp1 -> ADDITION exp .

    SEMICOLON       reduce using rule 133 (exp1 -> ADDITION exp .)
    GREATER         reduce using rule 133 (exp1 -> ADDITION exp .)
    LESS            reduce using rule 133 (exp1 -> ADDITION exp .)
    NOTEQUAL        reduce using rule 133 (exp1 -> ADDITION exp .)
    ISEQUAL         reduce using rule 133 (exp1 -> ADDITION exp .)
    CLOSEPAREN      reduce using rule 133 (exp1 -> ADDITION exp .)
    OPENBRACES      reduce using rule 133 (exp1 -> ADDITION exp .)
    COMMA           reduce using rule 133 (exp1 -> ADDITION exp .)
    CLOSEBRACKET    reduce using rule 133 (exp1 -> ADDITION exp .)
    OR              reduce using rule 133 (exp1 -> ADDITION exp .)
    AND             reduce using rule 133 (exp1 -> ADDITION exp .)
    CTEINT          reduce using rule 133 (exp1 -> ADDITION exp .)
    CTEFLOAT        reduce using rule 133 (exp1 -> ADDITION exp .)
    CTECHAR         reduce using rule 133 (exp1 -> ADDITION exp .)
    ID              reduce using rule 133 (exp1 -> ADDITION exp .)
    ADDITION        reduce using rule 133 (exp1 -> ADDITION exp .)
    SUBSTRACTION    reduce using rule 133 (exp1 -> ADDITION exp .)
    OPENPAREN       reduce using rule 133 (exp1 -> ADDITION exp .)


state 162

    (134) exp1 -> SUBSTRACTION exp .

    SEMICOLON       reduce using rule 134 (exp1 -> SUBSTRACTION exp .)
    GREATER         reduce using rule 134 (exp1 -> SUBSTRACTION exp .)
    LESS            reduce using rule 134 (exp1 -> SUBSTRACTION exp .)
    NOTEQUAL        reduce using rule 134 (exp1 -> SUBSTRACTION exp .)
    ISEQUAL         reduce using rule 134 (exp1 -> SUBSTRACTION exp .)
    CLOSEPAREN      reduce using rule 134 (exp1 -> SUBSTRACTION exp .)
    OPENBRACES      reduce using rule 134 (exp1 -> SUBSTRACTION exp .)
    COMMA           reduce using rule 134 (exp1 -> SUBSTRACTION exp .)
    CLOSEBRACKET    reduce using rule 134 (exp1 -> SUBSTRACTION exp .)
    OR              reduce using rule 134 (exp1 -> SUBSTRACTION exp .)
    AND             reduce using rule 134 (exp1 -> SUBSTRACTION exp .)
    CTEINT          reduce using rule 134 (exp1 -> SUBSTRACTION exp .)
    CTEFLOAT        reduce using rule 134 (exp1 -> SUBSTRACTION exp .)
    CTECHAR         reduce using rule 134 (exp1 -> SUBSTRACTION exp .)
    ID              reduce using rule 134 (exp1 -> SUBSTRACTION exp .)
    ADDITION        reduce using rule 134 (exp1 -> SUBSTRACTION exp .)
    SUBSTRACTION    reduce using rule 134 (exp1 -> SUBSTRACTION exp .)
    OPENPAREN       reduce using rule 134 (exp1 -> SUBSTRACTION exp .)


state 163

    (145) term1 -> MULTIPLICATION term .

    ADDITION        reduce using rule 145 (term1 -> MULTIPLICATION term .)
    SUBSTRACTION    reduce using rule 145 (term1 -> MULTIPLICATION term .)
    SEMICOLON       reduce using rule 145 (term1 -> MULTIPLICATION term .)
    GREATER         reduce using rule 145 (term1 -> MULTIPLICATION term .)
    LESS            reduce using rule 145 (term1 -> MULTIPLICATION term .)
    NOTEQUAL        reduce using rule 145 (term1 -> MULTIPLICATION term .)
    ISEQUAL         reduce using rule 145 (term1 -> MULTIPLICATION term .)
    CLOSEPAREN      reduce using rule 145 (term1 -> MULTIPLICATION term .)
    OPENBRACES      reduce using rule 145 (term1 -> MULTIPLICATION term .)
    COMMA           reduce using rule 145 (term1 -> MULTIPLICATION term .)
    CLOSEBRACKET    reduce using rule 145 (term1 -> MULTIPLICATION term .)
    OR              reduce using rule 145 (term1 -> MULTIPLICATION term .)
    AND             reduce using rule 145 (term1 -> MULTIPLICATION term .)
    CTEINT          reduce using rule 145 (term1 -> MULTIPLICATION term .)
    CTEFLOAT        reduce using rule 145 (term1 -> MULTIPLICATION term .)
    CTECHAR         reduce using rule 145 (term1 -> MULTIPLICATION term .)
    ID              reduce using rule 145 (term1 -> MULTIPLICATION term .)
    OPENPAREN       reduce using rule 145 (term1 -> MULTIPLICATION term .)


state 164

    (146) term1 -> DIVISION term .

    ADDITION        reduce using rule 146 (term1 -> DIVISION term .)
    SUBSTRACTION    reduce using rule 146 (term1 -> DIVISION term .)
    SEMICOLON       reduce using rule 146 (term1 -> DIVISION term .)
    GREATER         reduce using rule 146 (term1 -> DIVISION term .)
    LESS            reduce using rule 146 (term1 -> DIVISION term .)
    NOTEQUAL        reduce using rule 146 (term1 -> DIVISION term .)
    ISEQUAL         reduce using rule 146 (term1 -> DIVISION term .)
    CLOSEPAREN      reduce using rule 146 (term1 -> DIVISION term .)
    OPENBRACES      reduce using rule 146 (term1 -> DIVISION term .)
    COMMA           reduce using rule 146 (term1 -> DIVISION term .)
    CLOSEBRACKET    reduce using rule 146 (term1 -> DIVISION term .)
    OR              reduce using rule 146 (term1 -> DIVISION term .)
    AND             reduce using rule 146 (term1 -> DIVISION term .)
    CTEINT          reduce using rule 146 (term1 -> DIVISION term .)
    CTEFLOAT        reduce using rule 146 (term1 -> DIVISION term .)
    CTECHAR         reduce using rule 146 (term1 -> DIVISION term .)
    ID              reduce using rule 146 (term1 -> DIVISION term .)
    OPENPAREN       reduce using rule 146 (term1 -> DIVISION term .)


state 165

    (64) vcte1 -> OPENBRACKET exp . CLOSEBRACKET vcte3

    CLOSEBRACKET    shift and go to state 203


state 166

    (141) factor1 -> openP expression closeP .

    MULTIPLICATION  reduce using rule 141 (factor1 -> openP expression closeP .)
    DIVISION        reduce using rule 141 (factor1 -> openP expression closeP .)
    ADDITION        reduce using rule 141 (factor1 -> openP expression closeP .)
    SUBSTRACTION    reduce using rule 141 (factor1 -> openP expression closeP .)
    SEMICOLON       reduce using rule 141 (factor1 -> openP expression closeP .)
    GREATER         reduce using rule 141 (factor1 -> openP expression closeP .)
    LESS            reduce using rule 141 (factor1 -> openP expression closeP .)
    NOTEQUAL        reduce using rule 141 (factor1 -> openP expression closeP .)
    ISEQUAL         reduce using rule 141 (factor1 -> openP expression closeP .)
    CLOSEPAREN      reduce using rule 141 (factor1 -> openP expression closeP .)
    OPENBRACES      reduce using rule 141 (factor1 -> openP expression closeP .)
    COMMA           reduce using rule 141 (factor1 -> openP expression closeP .)
    CLOSEBRACKET    reduce using rule 141 (factor1 -> openP expression closeP .)
    OR              reduce using rule 141 (factor1 -> openP expression closeP .)
    AND             reduce using rule 141 (factor1 -> openP expression closeP .)
    CTEINT          reduce using rule 141 (factor1 -> openP expression closeP .)
    CTEFLOAT        reduce using rule 141 (factor1 -> openP expression closeP .)
    CTECHAR         reduce using rule 141 (factor1 -> openP expression closeP .)
    ID              reduce using rule 141 (factor1 -> openP expression closeP .)
    OPENPAREN       reduce using rule 141 (factor1 -> openP expression closeP .)


state 167

    (137) closeP -> CLOSEPAREN .

    MULTIPLICATION  reduce using rule 137 (closeP -> CLOSEPAREN .)
    DIVISION        reduce using rule 137 (closeP -> CLOSEPAREN .)
    ADDITION        reduce using rule 137 (closeP -> CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 137 (closeP -> CLOSEPAREN .)
    SEMICOLON       reduce using rule 137 (closeP -> CLOSEPAREN .)
    GREATER         reduce using rule 137 (closeP -> CLOSEPAREN .)
    LESS            reduce using rule 137 (closeP -> CLOSEPAREN .)
    NOTEQUAL        reduce using rule 137 (closeP -> CLOSEPAREN .)
    ISEQUAL         reduce using rule 137 (closeP -> CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 137 (closeP -> CLOSEPAREN .)
    OPENBRACES      reduce using rule 137 (closeP -> CLOSEPAREN .)
    COMMA           reduce using rule 137 (closeP -> CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 137 (closeP -> CLOSEPAREN .)
    OR              reduce using rule 137 (closeP -> CLOSEPAREN .)
    AND             reduce using rule 137 (closeP -> CLOSEPAREN .)
    CTEINT          reduce using rule 137 (closeP -> CLOSEPAREN .)
    CTEFLOAT        reduce using rule 137 (closeP -> CLOSEPAREN .)
    CTECHAR         reduce using rule 137 (closeP -> CLOSEPAREN .)
    ID              reduce using rule 137 (closeP -> CLOSEPAREN .)
    OPENPAREN       reduce using rule 137 (closeP -> CLOSEPAREN .)


state 168

    (74) expression -> exp expression1 .

    CLOSEPAREN      reduce using rule 74 (expression -> exp expression1 .)
    OR              reduce using rule 74 (expression -> exp expression1 .)
    AND             reduce using rule 74 (expression -> exp expression1 .)


state 169

    (75) expression1 -> loper . exp
    (132) exp -> . term exp1
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    exp                            shift and go to state 204
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 170

    (76) expression1 -> empty .

    CLOSEPAREN      reduce using rule 76 (expression1 -> empty .)
    OR              reduce using rule 76 (expression1 -> empty .)
    AND             reduce using rule 76 (expression1 -> empty .)


state 171

    (77) loper -> GREATER .

    CTEINT          reduce using rule 77 (loper -> GREATER .)
    CTEFLOAT        reduce using rule 77 (loper -> GREATER .)
    CTECHAR         reduce using rule 77 (loper -> GREATER .)
    ID              reduce using rule 77 (loper -> GREATER .)
    ADDITION        reduce using rule 77 (loper -> GREATER .)
    SUBSTRACTION    reduce using rule 77 (loper -> GREATER .)
    OPENPAREN       reduce using rule 77 (loper -> GREATER .)


state 172

    (78) loper -> LESS .

    CTEINT          reduce using rule 78 (loper -> LESS .)
    CTEFLOAT        reduce using rule 78 (loper -> LESS .)
    CTECHAR         reduce using rule 78 (loper -> LESS .)
    ID              reduce using rule 78 (loper -> LESS .)
    ADDITION        reduce using rule 78 (loper -> LESS .)
    SUBSTRACTION    reduce using rule 78 (loper -> LESS .)
    OPENPAREN       reduce using rule 78 (loper -> LESS .)


state 173

    (79) loper -> NOTEQUAL .

    CTEINT          reduce using rule 79 (loper -> NOTEQUAL .)
    CTEFLOAT        reduce using rule 79 (loper -> NOTEQUAL .)
    CTECHAR         reduce using rule 79 (loper -> NOTEQUAL .)
    ID              reduce using rule 79 (loper -> NOTEQUAL .)
    ADDITION        reduce using rule 79 (loper -> NOTEQUAL .)
    SUBSTRACTION    reduce using rule 79 (loper -> NOTEQUAL .)
    OPENPAREN       reduce using rule 79 (loper -> NOTEQUAL .)


state 174

    (80) loper -> ISEQUAL .

    CTEINT          reduce using rule 80 (loper -> ISEQUAL .)
    CTEFLOAT        reduce using rule 80 (loper -> ISEQUAL .)
    CTECHAR         reduce using rule 80 (loper -> ISEQUAL .)
    ID              reduce using rule 80 (loper -> ISEQUAL .)
    ADDITION        reduce using rule 80 (loper -> ISEQUAL .)
    SUBSTRACTION    reduce using rule 80 (loper -> ISEQUAL .)
    OPENPAREN       reduce using rule 80 (loper -> ISEQUAL .)


state 175

    (96) funCall -> ID OPENPAREN funCall2 . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 205


state 176

    (97) funCall2 -> exp . funCall3
    (99) funCall3 -> . COMMA exp funCall2
    (100) funCall3 -> . empty
    (148) empty -> .

    COMMA           shift and go to state 207
    CLOSEPAREN      reduce using rule 148 (empty -> .)

    funCall3                       shift and go to state 206
    empty                          shift and go to state 208

state 177

    (98) funCall2 -> empty .

    CLOSEPAREN      reduce using rule 98 (funCall2 -> empty .)


state 178

    (42) vars3 -> OPENBRACKET . CTEINT CLOSEBRACKET

    CTEINT          shift and go to state 209


state 179

    (40) vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .

    SEMICOLON       reduce using rule 40 (vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3 .)


state 180

    (43) vars3 -> empty .

    SEMICOLON       reduce using rule 43 (vars3 -> empty .)


state 181

    (54) assignment -> id assignment1 equals . assignment3 SEMICOLON
    (59) assignment3 -> . exp
    (60) assignment3 -> . read
    (132) exp -> . term exp1
    (48) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    READ            shift and go to state 72
    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    id                             shift and go to state 43
    assignment3                    shift and go to state 210
    exp                            shift and go to state 211
    read                           shift and go to state 212
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 182

    (56) assignment1 -> assignment2 assignment1 .

    EQUALS          reduce using rule 56 (assignment1 -> assignment2 assignment1 .)


state 183

    (58) assignment2 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 213


state 184

    (84) condition -> IF head body . condition1
    (85) condition1 -> . ELSEIF head body condition1
    (86) condition1 -> . ELSE body
    (87) condition1 -> . empty
    (148) empty -> .

    ELSEIF          shift and go to state 215
    ELSE            shift and go to state 216
    IF              reduce using rule 148 (empty -> .)
    PRINT           reduce using rule 148 (empty -> .)
    READ            reduce using rule 148 (empty -> .)
    REPEAT          reduce using rule 148 (empty -> .)
    ID              reduce using rule 148 (empty -> .)
    RETURN          reduce using rule 148 (empty -> .)
    WHILE           reduce using rule 148 (empty -> .)
    FOR             reduce using rule 148 (empty -> .)
    CIRCLE          reduce using rule 148 (empty -> .)
    SQUARE          reduce using rule 148 (empty -> .)
    TRIANGLE        reduce using rule 148 (empty -> .)
    RECTANGLE       reduce using rule 148 (empty -> .)
    HIDE_STAR       reduce using rule 148 (empty -> .)
    SHOW_STAR       reduce using rule 148 (empty -> .)
    HAND_DOWN       reduce using rule 148 (empty -> .)
    HAND_UP         reduce using rule 148 (empty -> .)
    SETXY           reduce using rule 148 (empty -> .)
    COLOR_STAR      reduce using rule 148 (empty -> .)
    SIZE_STAR       reduce using rule 148 (empty -> .)
    GO              reduce using rule 148 (empty -> .)
    LEFT            reduce using rule 148 (empty -> .)
    RIGHT           reduce using rule 148 (empty -> .)
    BACK            reduce using rule 148 (empty -> .)
    ARC             reduce using rule 148 (empty -> .)
    CLOSEBRACES     reduce using rule 148 (empty -> .)

    condition1                     shift and go to state 214
    empty                          shift and go to state 217

state 185

    (91) body -> OPENBRACES . body1 CLOSEBRACES
    (92) body1 -> . stmt body1
    (93) body1 -> . empty
    (14) stmt -> . assignment
    (15) stmt -> . condition
    (16) stmt -> . print
    (17) stmt -> . loop
    (18) stmt -> . read
    (19) stmt -> . graphstmt
    (20) stmt -> . graphr
    (21) stmt -> . funCall
    (22) stmt -> . return
    (148) empty -> .
    (54) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (84) condition -> . IF head body condition1
    (47) print -> . PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
    (12) loop -> . while
    (13) loop -> . for
    (48) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (103) graphstmt -> . graphfig
    (104) graphstmt -> . graphview
    (105) graphstmt -> . graphmove
    (120) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (71) return -> . RETURN return1 SEMICOLON
    (53) id -> . ID
    (95) while -> . WHILE head body
    (94) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (106) graphfig -> . graphfig1 SEMICOLON
    (123) graphview -> . graphview1 SEMICOLON
    (111) graphmove -> . graphmove1 SEMICOLON
    (107) graphfig1 -> . CIRCLE laRegla2
    (108) graphfig1 -> . SQUARE laRegla2
    (109) graphfig1 -> . TRIANGLE laRegla
    (110) graphfig1 -> . RECTANGLE laRegla
    (124) graphview1 -> . HIDE_STAR
    (125) graphview1 -> . SHOW_STAR
    (126) graphview1 -> . graphview2 exp
    (112) graphmove1 -> . HAND_DOWN
    (113) graphmove1 -> . HAND_UP
    (114) graphmove1 -> . graphmove2
    (127) graphview2 -> . SETXY graphview3
    (128) graphview2 -> . COLOR_STAR
    (129) graphview2 -> . SIZE_STAR
    (115) graphmove2 -> . GO laRegla2
    (116) graphmove2 -> . LEFT laRegla2
    (117) graphmove2 -> . RIGHT laRegla2
    (118) graphmove2 -> . BACK laRegla2
    (119) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 148 (empty -> .)
    IF              shift and go to state 68
    PRINT           shift and go to state 69
    READ            shift and go to state 72
    REPEAT          shift and go to state 77
    ID              shift and go to state 73
    RETURN          shift and go to state 78
    WHILE           shift and go to state 79
    FOR             shift and go to state 80
    CIRCLE          shift and go to state 84
    SQUARE          shift and go to state 85
    TRIANGLE        shift and go to state 86
    RECTANGLE       shift and go to state 87
    HIDE_STAR       shift and go to state 88
    SHOW_STAR       shift and go to state 89
    HAND_DOWN       shift and go to state 91
    HAND_UP         shift and go to state 92
    SETXY           shift and go to state 94
    COLOR_STAR      shift and go to state 95
    SIZE_STAR       shift and go to state 96
    GO              shift and go to state 97
    LEFT            shift and go to state 98
    RIGHT           shift and go to state 99
    BACK            shift and go to state 100
    ARC             shift and go to state 101

    body1                          shift and go to state 218
    stmt                           shift and go to state 219
    empty                          shift and go to state 220
    assignment                     shift and go to state 58
    condition                      shift and go to state 59
    print                          shift and go to state 60
    loop                           shift and go to state 61
    read                           shift and go to state 62
    graphstmt                      shift and go to state 63
    graphr                         shift and go to state 64
    funCall                        shift and go to state 65
    return                         shift and go to state 66
    id                             shift and go to state 67
    while                          shift and go to state 70
    for                            shift and go to state 71
    graphfig                       shift and go to state 74
    graphview                      shift and go to state 75
    graphmove                      shift and go to state 76
    graphfig1                      shift and go to state 81
    graphview1                     shift and go to state 82
    graphmove1                     shift and go to state 83
    graphview2                     shift and go to state 90
    graphmove2                     shift and go to state 93

state 186

    (88) head -> OPENPAREN head1 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 221


state 187

    (89) head1 -> expression .
    (81) logical -> expression . logical1 expression
    (82) logical1 -> . OR
    (83) logical1 -> . AND

    CLOSEPAREN      reduce using rule 89 (head1 -> expression .)
    OR              shift and go to state 223
    AND             shift and go to state 224

    logical1                       shift and go to state 222

state 188

    (90) head1 -> logical .

    CLOSEPAREN      reduce using rule 90 (head1 -> logical .)


state 189

    (47) print -> PRINT OPENPAREN exp . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 225


state 190

    (48) read -> READ OPENPAREN ID . read1 CLOSEPAREN SEMICOLON
    (49) read1 -> . OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (50) read1 -> . OPENBRACKET exp CLOSEBRACKET
    (51) read1 -> . empty
    (148) empty -> .

    OPENBRACKET     shift and go to state 227
    CLOSEPAREN      reduce using rule 148 (empty -> .)

    read1                          shift and go to state 226
    empty                          shift and go to state 228

state 191

    (120) graphr -> REPEAT exp OPENBRACES . graphstmt graphr1 CLOSEBRACES
    (103) graphstmt -> . graphfig
    (104) graphstmt -> . graphview
    (105) graphstmt -> . graphmove
    (106) graphfig -> . graphfig1 SEMICOLON
    (123) graphview -> . graphview1 SEMICOLON
    (111) graphmove -> . graphmove1 SEMICOLON
    (107) graphfig1 -> . CIRCLE laRegla2
    (108) graphfig1 -> . SQUARE laRegla2
    (109) graphfig1 -> . TRIANGLE laRegla
    (110) graphfig1 -> . RECTANGLE laRegla
    (124) graphview1 -> . HIDE_STAR
    (125) graphview1 -> . SHOW_STAR
    (126) graphview1 -> . graphview2 exp
    (112) graphmove1 -> . HAND_DOWN
    (113) graphmove1 -> . HAND_UP
    (114) graphmove1 -> . graphmove2
    (127) graphview2 -> . SETXY graphview3
    (128) graphview2 -> . COLOR_STAR
    (129) graphview2 -> . SIZE_STAR
    (115) graphmove2 -> . GO laRegla2
    (116) graphmove2 -> . LEFT laRegla2
    (117) graphmove2 -> . RIGHT laRegla2
    (118) graphmove2 -> . BACK laRegla2
    (119) graphmove2 -> . ARC laRegla

    CIRCLE          shift and go to state 84
    SQUARE          shift and go to state 85
    TRIANGLE        shift and go to state 86
    RECTANGLE       shift and go to state 87
    HIDE_STAR       shift and go to state 88
    SHOW_STAR       shift and go to state 89
    HAND_DOWN       shift and go to state 91
    HAND_UP         shift and go to state 92
    SETXY           shift and go to state 94
    COLOR_STAR      shift and go to state 95
    SIZE_STAR       shift and go to state 96
    GO              shift and go to state 97
    LEFT            shift and go to state 98
    RIGHT           shift and go to state 99
    BACK            shift and go to state 100
    ARC             shift and go to state 101

    graphstmt                      shift and go to state 229
    graphfig                       shift and go to state 74
    graphview                      shift and go to state 75
    graphmove                      shift and go to state 76
    graphfig1                      shift and go to state 81
    graphview1                     shift and go to state 82
    graphmove1                     shift and go to state 83
    graphview2                     shift and go to state 90
    graphmove2                     shift and go to state 93

state 192

    (71) return -> RETURN return1 SEMICOLON .

    IF              reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    PRINT           reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    READ            reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    REPEAT          reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    ID              reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    RETURN          reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    WHILE           reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    FOR             reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    CIRCLE          reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    SQUARE          reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    TRIANGLE        reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    RECTANGLE       reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    HIDE_STAR       reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    SHOW_STAR       reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    HAND_DOWN       reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    HAND_UP         reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    SETXY           reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    COLOR_STAR      reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    SIZE_STAR       reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    GO              reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    LEFT            reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    RIGHT           reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    BACK            reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    ARC             reduce using rule 71 (return -> RETURN return1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 71 (return -> RETURN return1 SEMICOLON .)


state 193

    (95) while -> WHILE head body .

    IF              reduce using rule 95 (while -> WHILE head body .)
    PRINT           reduce using rule 95 (while -> WHILE head body .)
    READ            reduce using rule 95 (while -> WHILE head body .)
    REPEAT          reduce using rule 95 (while -> WHILE head body .)
    ID              reduce using rule 95 (while -> WHILE head body .)
    RETURN          reduce using rule 95 (while -> WHILE head body .)
    WHILE           reduce using rule 95 (while -> WHILE head body .)
    FOR             reduce using rule 95 (while -> WHILE head body .)
    CIRCLE          reduce using rule 95 (while -> WHILE head body .)
    SQUARE          reduce using rule 95 (while -> WHILE head body .)
    TRIANGLE        reduce using rule 95 (while -> WHILE head body .)
    RECTANGLE       reduce using rule 95 (while -> WHILE head body .)
    HIDE_STAR       reduce using rule 95 (while -> WHILE head body .)
    SHOW_STAR       reduce using rule 95 (while -> WHILE head body .)
    HAND_DOWN       reduce using rule 95 (while -> WHILE head body .)
    HAND_UP         reduce using rule 95 (while -> WHILE head body .)
    SETXY           reduce using rule 95 (while -> WHILE head body .)
    COLOR_STAR      reduce using rule 95 (while -> WHILE head body .)
    SIZE_STAR       reduce using rule 95 (while -> WHILE head body .)
    GO              reduce using rule 95 (while -> WHILE head body .)
    LEFT            reduce using rule 95 (while -> WHILE head body .)
    RIGHT           reduce using rule 95 (while -> WHILE head body .)
    BACK            reduce using rule 95 (while -> WHILE head body .)
    ARC             reduce using rule 95 (while -> WHILE head body .)
    CLOSEBRACES     reduce using rule 95 (while -> WHILE head body .)


state 194

    (94) for -> FOR OPENPAREN ID . TWODOTS exp CLOSEPAREN body

    TWODOTS         shift and go to state 230


state 195

    (102) laRegla2 -> OPENPAREN exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 231


state 196

    (101) laRegla -> OPENPAREN exp . COMMA exp CLOSEPAREN

    COMMA           shift and go to state 232


state 197

    (130) graphview3 -> exp COMMA .

    CTEINT          reduce using rule 130 (graphview3 -> exp COMMA .)
    CTEFLOAT        reduce using rule 130 (graphview3 -> exp COMMA .)
    CTECHAR         reduce using rule 130 (graphview3 -> exp COMMA .)
    ID              reduce using rule 130 (graphview3 -> exp COMMA .)
    ADDITION        reduce using rule 130 (graphview3 -> exp COMMA .)
    SUBSTRACTION    reduce using rule 130 (graphview3 -> exp COMMA .)
    OPENPAREN       reduce using rule 130 (graphview3 -> exp COMMA .)


state 198

    (25) function -> FUN functionI function2 inicia_fun declara_vars function4 . termina_fun
    (29) termina_fun -> . CLOSEBRACES

    CLOSEBRACES     shift and go to state 234

    termina_fun                    shift and go to state 233

state 199

    (33) function4 -> stmt . function4
    (33) function4 -> . stmt function4
    (34) function4 -> . empty
    (14) stmt -> . assignment
    (15) stmt -> . condition
    (16) stmt -> . print
    (17) stmt -> . loop
    (18) stmt -> . read
    (19) stmt -> . graphstmt
    (20) stmt -> . graphr
    (21) stmt -> . funCall
    (22) stmt -> . return
    (148) empty -> .
    (54) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (84) condition -> . IF head body condition1
    (47) print -> . PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
    (12) loop -> . while
    (13) loop -> . for
    (48) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (103) graphstmt -> . graphfig
    (104) graphstmt -> . graphview
    (105) graphstmt -> . graphmove
    (120) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (71) return -> . RETURN return1 SEMICOLON
    (53) id -> . ID
    (95) while -> . WHILE head body
    (94) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (106) graphfig -> . graphfig1 SEMICOLON
    (123) graphview -> . graphview1 SEMICOLON
    (111) graphmove -> . graphmove1 SEMICOLON
    (107) graphfig1 -> . CIRCLE laRegla2
    (108) graphfig1 -> . SQUARE laRegla2
    (109) graphfig1 -> . TRIANGLE laRegla
    (110) graphfig1 -> . RECTANGLE laRegla
    (124) graphview1 -> . HIDE_STAR
    (125) graphview1 -> . SHOW_STAR
    (126) graphview1 -> . graphview2 exp
    (112) graphmove1 -> . HAND_DOWN
    (113) graphmove1 -> . HAND_UP
    (114) graphmove1 -> . graphmove2
    (127) graphview2 -> . SETXY graphview3
    (128) graphview2 -> . COLOR_STAR
    (129) graphview2 -> . SIZE_STAR
    (115) graphmove2 -> . GO laRegla2
    (116) graphmove2 -> . LEFT laRegla2
    (117) graphmove2 -> . RIGHT laRegla2
    (118) graphmove2 -> . BACK laRegla2
    (119) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 148 (empty -> .)
    IF              shift and go to state 68
    PRINT           shift and go to state 69
    READ            shift and go to state 72
    REPEAT          shift and go to state 77
    ID              shift and go to state 73
    RETURN          shift and go to state 78
    WHILE           shift and go to state 79
    FOR             shift and go to state 80
    CIRCLE          shift and go to state 84
    SQUARE          shift and go to state 85
    TRIANGLE        shift and go to state 86
    RECTANGLE       shift and go to state 87
    HIDE_STAR       shift and go to state 88
    SHOW_STAR       shift and go to state 89
    HAND_DOWN       shift and go to state 91
    HAND_UP         shift and go to state 92
    SETXY           shift and go to state 94
    COLOR_STAR      shift and go to state 95
    SIZE_STAR       shift and go to state 96
    GO              shift and go to state 97
    LEFT            shift and go to state 98
    RIGHT           shift and go to state 99
    BACK            shift and go to state 100
    ARC             shift and go to state 101

    stmt                           shift and go to state 199
    function4                      shift and go to state 235
    empty                          shift and go to state 200
    assignment                     shift and go to state 58
    condition                      shift and go to state 59
    print                          shift and go to state 60
    loop                           shift and go to state 61
    read                           shift and go to state 62
    graphstmt                      shift and go to state 63
    graphr                         shift and go to state 64
    funCall                        shift and go to state 65
    return                         shift and go to state 66
    id                             shift and go to state 67
    while                          shift and go to state 70
    for                            shift and go to state 71
    graphfig                       shift and go to state 74
    graphview                      shift and go to state 75
    graphmove                      shift and go to state 76
    graphfig1                      shift and go to state 81
    graphview1                     shift and go to state 82
    graphmove1                     shift and go to state 83
    graphview2                     shift and go to state 90
    graphmove2                     shift and go to state 93

state 200

    (34) function4 -> empty .

    CLOSEBRACES     reduce using rule 34 (function4 -> empty .)


state 201

    (31) function3 -> type ID function5 .

    CLOSEPAREN      reduce using rule 31 (function3 -> type ID function5 .)


state 202

    (35) function5 -> COMMA . type ID function3
    (44) type -> . INT
    (45) type -> . FLOAT
    (46) type -> . CHAR

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11

    type                           shift and go to state 236

state 203

    (64) vcte1 -> OPENBRACKET exp CLOSEBRACKET . vcte3
    (66) vcte3 -> . OPENBRACKET exp CLOSEBRACKET
    (67) vcte3 -> . empty
    (148) empty -> .

    OPENBRACKET     shift and go to state 237
    MULTIPLICATION  reduce using rule 148 (empty -> .)
    DIVISION        reduce using rule 148 (empty -> .)
    ADDITION        reduce using rule 148 (empty -> .)
    SUBSTRACTION    reduce using rule 148 (empty -> .)
    SEMICOLON       reduce using rule 148 (empty -> .)
    GREATER         reduce using rule 148 (empty -> .)
    LESS            reduce using rule 148 (empty -> .)
    NOTEQUAL        reduce using rule 148 (empty -> .)
    ISEQUAL         reduce using rule 148 (empty -> .)
    CLOSEPAREN      reduce using rule 148 (empty -> .)
    OPENBRACES      reduce using rule 148 (empty -> .)
    COMMA           reduce using rule 148 (empty -> .)
    CLOSEBRACKET    reduce using rule 148 (empty -> .)
    OR              reduce using rule 148 (empty -> .)
    AND             reduce using rule 148 (empty -> .)
    CTEINT          reduce using rule 148 (empty -> .)
    CTEFLOAT        reduce using rule 148 (empty -> .)
    CTECHAR         reduce using rule 148 (empty -> .)
    ID              reduce using rule 148 (empty -> .)
    OPENPAREN       reduce using rule 148 (empty -> .)

    vcte3                          shift and go to state 238
    empty                          shift and go to state 239

state 204

    (75) expression1 -> loper exp .

    CLOSEPAREN      reduce using rule 75 (expression1 -> loper exp .)
    OR              reduce using rule 75 (expression1 -> loper exp .)
    AND             reduce using rule 75 (expression1 -> loper exp .)


state 205

    (96) funCall -> ID OPENPAREN funCall2 CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 240


state 206

    (97) funCall2 -> exp funCall3 .

    CLOSEPAREN      reduce using rule 97 (funCall2 -> exp funCall3 .)


state 207

    (99) funCall3 -> COMMA . exp funCall2
    (132) exp -> . term exp1
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    exp                            shift and go to state 241
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 208

    (100) funCall3 -> empty .

    CLOSEPAREN      reduce using rule 100 (funCall3 -> empty .)


state 209

    (42) vars3 -> OPENBRACKET CTEINT . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 242


state 210

    (54) assignment -> id assignment1 equals assignment3 . SEMICOLON

    SEMICOLON       shift and go to state 243


state 211

    (59) assignment3 -> exp .

    SEMICOLON       reduce using rule 59 (assignment3 -> exp .)


state 212

    (60) assignment3 -> read .

    SEMICOLON       reduce using rule 60 (assignment3 -> read .)


state 213

    (58) assignment2 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     reduce using rule 58 (assignment2 -> OPENBRACKET exp CLOSEBRACKET .)
    EQUALS          reduce using rule 58 (assignment2 -> OPENBRACKET exp CLOSEBRACKET .)


state 214

    (84) condition -> IF head body condition1 .

    IF              reduce using rule 84 (condition -> IF head body condition1 .)
    PRINT           reduce using rule 84 (condition -> IF head body condition1 .)
    READ            reduce using rule 84 (condition -> IF head body condition1 .)
    REPEAT          reduce using rule 84 (condition -> IF head body condition1 .)
    ID              reduce using rule 84 (condition -> IF head body condition1 .)
    RETURN          reduce using rule 84 (condition -> IF head body condition1 .)
    WHILE           reduce using rule 84 (condition -> IF head body condition1 .)
    FOR             reduce using rule 84 (condition -> IF head body condition1 .)
    CIRCLE          reduce using rule 84 (condition -> IF head body condition1 .)
    SQUARE          reduce using rule 84 (condition -> IF head body condition1 .)
    TRIANGLE        reduce using rule 84 (condition -> IF head body condition1 .)
    RECTANGLE       reduce using rule 84 (condition -> IF head body condition1 .)
    HIDE_STAR       reduce using rule 84 (condition -> IF head body condition1 .)
    SHOW_STAR       reduce using rule 84 (condition -> IF head body condition1 .)
    HAND_DOWN       reduce using rule 84 (condition -> IF head body condition1 .)
    HAND_UP         reduce using rule 84 (condition -> IF head body condition1 .)
    SETXY           reduce using rule 84 (condition -> IF head body condition1 .)
    COLOR_STAR      reduce using rule 84 (condition -> IF head body condition1 .)
    SIZE_STAR       reduce using rule 84 (condition -> IF head body condition1 .)
    GO              reduce using rule 84 (condition -> IF head body condition1 .)
    LEFT            reduce using rule 84 (condition -> IF head body condition1 .)
    RIGHT           reduce using rule 84 (condition -> IF head body condition1 .)
    BACK            reduce using rule 84 (condition -> IF head body condition1 .)
    ARC             reduce using rule 84 (condition -> IF head body condition1 .)
    CLOSEBRACES     reduce using rule 84 (condition -> IF head body condition1 .)


state 215

    (85) condition1 -> ELSEIF . head body condition1
    (88) head -> . OPENPAREN head1 CLOSEPAREN

    OPENPAREN       shift and go to state 130

    head                           shift and go to state 244

state 216

    (86) condition1 -> ELSE . body
    (91) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 185

    body                           shift and go to state 245

state 217

    (87) condition1 -> empty .

    IF              reduce using rule 87 (condition1 -> empty .)
    PRINT           reduce using rule 87 (condition1 -> empty .)
    READ            reduce using rule 87 (condition1 -> empty .)
    REPEAT          reduce using rule 87 (condition1 -> empty .)
    ID              reduce using rule 87 (condition1 -> empty .)
    RETURN          reduce using rule 87 (condition1 -> empty .)
    WHILE           reduce using rule 87 (condition1 -> empty .)
    FOR             reduce using rule 87 (condition1 -> empty .)
    CIRCLE          reduce using rule 87 (condition1 -> empty .)
    SQUARE          reduce using rule 87 (condition1 -> empty .)
    TRIANGLE        reduce using rule 87 (condition1 -> empty .)
    RECTANGLE       reduce using rule 87 (condition1 -> empty .)
    HIDE_STAR       reduce using rule 87 (condition1 -> empty .)
    SHOW_STAR       reduce using rule 87 (condition1 -> empty .)
    HAND_DOWN       reduce using rule 87 (condition1 -> empty .)
    HAND_UP         reduce using rule 87 (condition1 -> empty .)
    SETXY           reduce using rule 87 (condition1 -> empty .)
    COLOR_STAR      reduce using rule 87 (condition1 -> empty .)
    SIZE_STAR       reduce using rule 87 (condition1 -> empty .)
    GO              reduce using rule 87 (condition1 -> empty .)
    LEFT            reduce using rule 87 (condition1 -> empty .)
    RIGHT           reduce using rule 87 (condition1 -> empty .)
    BACK            reduce using rule 87 (condition1 -> empty .)
    ARC             reduce using rule 87 (condition1 -> empty .)
    CLOSEBRACES     reduce using rule 87 (condition1 -> empty .)


state 218

    (91) body -> OPENBRACES body1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 246


state 219

    (92) body1 -> stmt . body1
    (92) body1 -> . stmt body1
    (93) body1 -> . empty
    (14) stmt -> . assignment
    (15) stmt -> . condition
    (16) stmt -> . print
    (17) stmt -> . loop
    (18) stmt -> . read
    (19) stmt -> . graphstmt
    (20) stmt -> . graphr
    (21) stmt -> . funCall
    (22) stmt -> . return
    (148) empty -> .
    (54) assignment -> . id assignment1 equals assignment3 SEMICOLON
    (84) condition -> . IF head body condition1
    (47) print -> . PRINT OPENPAREN exp CLOSEPAREN SEMICOLON
    (12) loop -> . while
    (13) loop -> . for
    (48) read -> . READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON
    (103) graphstmt -> . graphfig
    (104) graphstmt -> . graphview
    (105) graphstmt -> . graphmove
    (120) graphr -> . REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (71) return -> . RETURN return1 SEMICOLON
    (53) id -> . ID
    (95) while -> . WHILE head body
    (94) for -> . FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body
    (106) graphfig -> . graphfig1 SEMICOLON
    (123) graphview -> . graphview1 SEMICOLON
    (111) graphmove -> . graphmove1 SEMICOLON
    (107) graphfig1 -> . CIRCLE laRegla2
    (108) graphfig1 -> . SQUARE laRegla2
    (109) graphfig1 -> . TRIANGLE laRegla
    (110) graphfig1 -> . RECTANGLE laRegla
    (124) graphview1 -> . HIDE_STAR
    (125) graphview1 -> . SHOW_STAR
    (126) graphview1 -> . graphview2 exp
    (112) graphmove1 -> . HAND_DOWN
    (113) graphmove1 -> . HAND_UP
    (114) graphmove1 -> . graphmove2
    (127) graphview2 -> . SETXY graphview3
    (128) graphview2 -> . COLOR_STAR
    (129) graphview2 -> . SIZE_STAR
    (115) graphmove2 -> . GO laRegla2
    (116) graphmove2 -> . LEFT laRegla2
    (117) graphmove2 -> . RIGHT laRegla2
    (118) graphmove2 -> . BACK laRegla2
    (119) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 148 (empty -> .)
    IF              shift and go to state 68
    PRINT           shift and go to state 69
    READ            shift and go to state 72
    REPEAT          shift and go to state 77
    ID              shift and go to state 73
    RETURN          shift and go to state 78
    WHILE           shift and go to state 79
    FOR             shift and go to state 80
    CIRCLE          shift and go to state 84
    SQUARE          shift and go to state 85
    TRIANGLE        shift and go to state 86
    RECTANGLE       shift and go to state 87
    HIDE_STAR       shift and go to state 88
    SHOW_STAR       shift and go to state 89
    HAND_DOWN       shift and go to state 91
    HAND_UP         shift and go to state 92
    SETXY           shift and go to state 94
    COLOR_STAR      shift and go to state 95
    SIZE_STAR       shift and go to state 96
    GO              shift and go to state 97
    LEFT            shift and go to state 98
    RIGHT           shift and go to state 99
    BACK            shift and go to state 100
    ARC             shift and go to state 101

    stmt                           shift and go to state 219
    body1                          shift and go to state 247
    empty                          shift and go to state 220
    assignment                     shift and go to state 58
    condition                      shift and go to state 59
    print                          shift and go to state 60
    loop                           shift and go to state 61
    read                           shift and go to state 62
    graphstmt                      shift and go to state 63
    graphr                         shift and go to state 64
    funCall                        shift and go to state 65
    return                         shift and go to state 66
    id                             shift and go to state 67
    while                          shift and go to state 70
    for                            shift and go to state 71
    graphfig                       shift and go to state 74
    graphview                      shift and go to state 75
    graphmove                      shift and go to state 76
    graphfig1                      shift and go to state 81
    graphview1                     shift and go to state 82
    graphmove1                     shift and go to state 83
    graphview2                     shift and go to state 90
    graphmove2                     shift and go to state 93

state 220

    (93) body1 -> empty .

    CLOSEBRACES     reduce using rule 93 (body1 -> empty .)


state 221

    (88) head -> OPENPAREN head1 CLOSEPAREN .

    OPENBRACES      reduce using rule 88 (head -> OPENPAREN head1 CLOSEPAREN .)


state 222

    (81) logical -> expression logical1 . expression
    (74) expression -> . exp expression1
    (132) exp -> . term exp1
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    expression                     shift and go to state 248
    exp                            shift and go to state 120
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 223

    (82) logical1 -> OR .

    CTEINT          reduce using rule 82 (logical1 -> OR .)
    CTEFLOAT        reduce using rule 82 (logical1 -> OR .)
    CTECHAR         reduce using rule 82 (logical1 -> OR .)
    ID              reduce using rule 82 (logical1 -> OR .)
    ADDITION        reduce using rule 82 (logical1 -> OR .)
    SUBSTRACTION    reduce using rule 82 (logical1 -> OR .)
    OPENPAREN       reduce using rule 82 (logical1 -> OR .)


state 224

    (83) logical1 -> AND .

    CTEINT          reduce using rule 83 (logical1 -> AND .)
    CTEFLOAT        reduce using rule 83 (logical1 -> AND .)
    CTECHAR         reduce using rule 83 (logical1 -> AND .)
    ID              reduce using rule 83 (logical1 -> AND .)
    ADDITION        reduce using rule 83 (logical1 -> AND .)
    SUBSTRACTION    reduce using rule 83 (logical1 -> AND .)
    OPENPAREN       reduce using rule 83 (logical1 -> AND .)


state 225

    (47) print -> PRINT OPENPAREN exp CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 249


state 226

    (48) read -> READ OPENPAREN ID read1 . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 250


state 227

    (49) read1 -> OPENBRACKET . exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (50) read1 -> OPENBRACKET . exp CLOSEBRACKET
    (132) exp -> . term exp1
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    exp                            shift and go to state 251
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 228

    (51) read1 -> empty .

    CLOSEPAREN      reduce using rule 51 (read1 -> empty .)


state 229

    (120) graphr -> REPEAT exp OPENBRACES graphstmt . graphr1 CLOSEBRACES
    (121) graphr1 -> . graphstmt graphr1
    (122) graphr1 -> . empty
    (103) graphstmt -> . graphfig
    (104) graphstmt -> . graphview
    (105) graphstmt -> . graphmove
    (148) empty -> .
    (106) graphfig -> . graphfig1 SEMICOLON
    (123) graphview -> . graphview1 SEMICOLON
    (111) graphmove -> . graphmove1 SEMICOLON
    (107) graphfig1 -> . CIRCLE laRegla2
    (108) graphfig1 -> . SQUARE laRegla2
    (109) graphfig1 -> . TRIANGLE laRegla
    (110) graphfig1 -> . RECTANGLE laRegla
    (124) graphview1 -> . HIDE_STAR
    (125) graphview1 -> . SHOW_STAR
    (126) graphview1 -> . graphview2 exp
    (112) graphmove1 -> . HAND_DOWN
    (113) graphmove1 -> . HAND_UP
    (114) graphmove1 -> . graphmove2
    (127) graphview2 -> . SETXY graphview3
    (128) graphview2 -> . COLOR_STAR
    (129) graphview2 -> . SIZE_STAR
    (115) graphmove2 -> . GO laRegla2
    (116) graphmove2 -> . LEFT laRegla2
    (117) graphmove2 -> . RIGHT laRegla2
    (118) graphmove2 -> . BACK laRegla2
    (119) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 148 (empty -> .)
    CIRCLE          shift and go to state 84
    SQUARE          shift and go to state 85
    TRIANGLE        shift and go to state 86
    RECTANGLE       shift and go to state 87
    HIDE_STAR       shift and go to state 88
    SHOW_STAR       shift and go to state 89
    HAND_DOWN       shift and go to state 91
    HAND_UP         shift and go to state 92
    SETXY           shift and go to state 94
    COLOR_STAR      shift and go to state 95
    SIZE_STAR       shift and go to state 96
    GO              shift and go to state 97
    LEFT            shift and go to state 98
    RIGHT           shift and go to state 99
    BACK            shift and go to state 100
    ARC             shift and go to state 101

    graphstmt                      shift and go to state 252
    graphr1                        shift and go to state 253
    empty                          shift and go to state 254
    graphfig                       shift and go to state 74
    graphview                      shift and go to state 75
    graphmove                      shift and go to state 76
    graphfig1                      shift and go to state 81
    graphview1                     shift and go to state 82
    graphmove1                     shift and go to state 83
    graphview2                     shift and go to state 90
    graphmove2                     shift and go to state 93

state 230

    (94) for -> FOR OPENPAREN ID TWODOTS . exp CLOSEPAREN body
    (132) exp -> . term exp1
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    exp                            shift and go to state 255
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 231

    (102) laRegla2 -> OPENPAREN exp CLOSEPAREN .

    SEMICOLON       reduce using rule 102 (laRegla2 -> OPENPAREN exp CLOSEPAREN .)


state 232

    (101) laRegla -> OPENPAREN exp COMMA . exp CLOSEPAREN
    (132) exp -> . term exp1
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    exp                            shift and go to state 256
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 233

    (25) function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .

    FUN             reduce using rule 25 (function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .)
    MULTIPLICATION  reduce using rule 25 (function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .)


state 234

    (29) termina_fun -> CLOSEBRACES .

    FUN             reduce using rule 29 (termina_fun -> CLOSEBRACES .)
    MULTIPLICATION  reduce using rule 29 (termina_fun -> CLOSEBRACES .)


state 235

    (33) function4 -> stmt function4 .

    CLOSEBRACES     reduce using rule 33 (function4 -> stmt function4 .)


state 236

    (35) function5 -> COMMA type . ID function3

    ID              shift and go to state 257


state 237

    (66) vcte3 -> OPENBRACKET . exp CLOSEBRACKET
    (132) exp -> . term exp1
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    exp                            shift and go to state 258
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 238

    (64) vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .

    MULTIPLICATION  reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    DIVISION        reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ADDITION        reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    SUBSTRACTION    reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    SEMICOLON       reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    GREATER         reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    LESS            reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    NOTEQUAL        reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ISEQUAL         reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CLOSEPAREN      reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    OPENBRACES      reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    COMMA           reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CLOSEBRACKET    reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    OR              reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    AND             reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CTEINT          reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CTEFLOAT        reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    CTECHAR         reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    ID              reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)
    OPENPAREN       reduce using rule 64 (vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3 .)


state 239

    (67) vcte3 -> empty .

    MULTIPLICATION  reduce using rule 67 (vcte3 -> empty .)
    DIVISION        reduce using rule 67 (vcte3 -> empty .)
    ADDITION        reduce using rule 67 (vcte3 -> empty .)
    SUBSTRACTION    reduce using rule 67 (vcte3 -> empty .)
    SEMICOLON       reduce using rule 67 (vcte3 -> empty .)
    GREATER         reduce using rule 67 (vcte3 -> empty .)
    LESS            reduce using rule 67 (vcte3 -> empty .)
    NOTEQUAL        reduce using rule 67 (vcte3 -> empty .)
    ISEQUAL         reduce using rule 67 (vcte3 -> empty .)
    CLOSEPAREN      reduce using rule 67 (vcte3 -> empty .)
    OPENBRACES      reduce using rule 67 (vcte3 -> empty .)
    COMMA           reduce using rule 67 (vcte3 -> empty .)
    CLOSEBRACKET    reduce using rule 67 (vcte3 -> empty .)
    OR              reduce using rule 67 (vcte3 -> empty .)
    AND             reduce using rule 67 (vcte3 -> empty .)
    CTEINT          reduce using rule 67 (vcte3 -> empty .)
    CTEFLOAT        reduce using rule 67 (vcte3 -> empty .)
    CTECHAR         reduce using rule 67 (vcte3 -> empty .)
    ID              reduce using rule 67 (vcte3 -> empty .)
    OPENPAREN       reduce using rule 67 (vcte3 -> empty .)


state 240

    (96) funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .

    MULTIPLICATION  reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    DIVISION        reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    ADDITION        reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    SUBSTRACTION    reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    IF              reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    GREATER         reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    LESS            reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    ISEQUAL         reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CLOSEPAREN      reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    OPENBRACES      reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    COMMA           reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CLOSEBRACKET    reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    OR              reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    AND             reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CTEINT          reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CTEFLOAT        reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    CTECHAR         reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)
    OPENPAREN       reduce using rule 96 (funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON .)


state 241

    (99) funCall3 -> COMMA exp . funCall2
    (97) funCall2 -> . exp funCall3
    (98) funCall2 -> . empty
    (132) exp -> . term exp1
    (148) empty -> .
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CLOSEPAREN      reduce using rule 148 (empty -> .)
    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    exp                            shift and go to state 176
    funCall2                       shift and go to state 259
    empty                          shift and go to state 177
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 242

    (42) vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .

    SEMICOLON       reduce using rule 42 (vars3 -> OPENBRACKET CTEINT CLOSEBRACKET .)


state 243

    (54) assignment -> id assignment1 equals assignment3 SEMICOLON .

    IF              reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    PRINT           reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    READ            reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    REPEAT          reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    ID              reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    RETURN          reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    WHILE           reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    FOR             reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    CIRCLE          reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SQUARE          reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    TRIANGLE        reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    RECTANGLE       reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    HIDE_STAR       reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SHOW_STAR       reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    HAND_DOWN       reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    HAND_UP         reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SETXY           reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    COLOR_STAR      reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    SIZE_STAR       reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    GO              reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    LEFT            reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    RIGHT           reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    BACK            reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    ARC             reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)
    CLOSEBRACES     reduce using rule 54 (assignment -> id assignment1 equals assignment3 SEMICOLON .)


state 244

    (85) condition1 -> ELSEIF head . body condition1
    (91) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 185

    body                           shift and go to state 260

state 245

    (86) condition1 -> ELSE body .

    IF              reduce using rule 86 (condition1 -> ELSE body .)
    PRINT           reduce using rule 86 (condition1 -> ELSE body .)
    READ            reduce using rule 86 (condition1 -> ELSE body .)
    REPEAT          reduce using rule 86 (condition1 -> ELSE body .)
    ID              reduce using rule 86 (condition1 -> ELSE body .)
    RETURN          reduce using rule 86 (condition1 -> ELSE body .)
    WHILE           reduce using rule 86 (condition1 -> ELSE body .)
    FOR             reduce using rule 86 (condition1 -> ELSE body .)
    CIRCLE          reduce using rule 86 (condition1 -> ELSE body .)
    SQUARE          reduce using rule 86 (condition1 -> ELSE body .)
    TRIANGLE        reduce using rule 86 (condition1 -> ELSE body .)
    RECTANGLE       reduce using rule 86 (condition1 -> ELSE body .)
    HIDE_STAR       reduce using rule 86 (condition1 -> ELSE body .)
    SHOW_STAR       reduce using rule 86 (condition1 -> ELSE body .)
    HAND_DOWN       reduce using rule 86 (condition1 -> ELSE body .)
    HAND_UP         reduce using rule 86 (condition1 -> ELSE body .)
    SETXY           reduce using rule 86 (condition1 -> ELSE body .)
    COLOR_STAR      reduce using rule 86 (condition1 -> ELSE body .)
    SIZE_STAR       reduce using rule 86 (condition1 -> ELSE body .)
    GO              reduce using rule 86 (condition1 -> ELSE body .)
    LEFT            reduce using rule 86 (condition1 -> ELSE body .)
    RIGHT           reduce using rule 86 (condition1 -> ELSE body .)
    BACK            reduce using rule 86 (condition1 -> ELSE body .)
    ARC             reduce using rule 86 (condition1 -> ELSE body .)
    CLOSEBRACES     reduce using rule 86 (condition1 -> ELSE body .)


state 246

    (91) body -> OPENBRACES body1 CLOSEBRACES .

    ELSEIF          reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSE            reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    IF              reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    PRINT           reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    READ            reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    REPEAT          reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    ID              reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    RETURN          reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    WHILE           reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    FOR             reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    CIRCLE          reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    SQUARE          reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_UP         reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    SETXY           reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    GO              reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    LEFT            reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    RIGHT           reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    BACK            reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    ARC             reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 91 (body -> OPENBRACES body1 CLOSEBRACES .)


state 247

    (92) body1 -> stmt body1 .

    CLOSEBRACES     reduce using rule 92 (body1 -> stmt body1 .)


state 248

    (81) logical -> expression logical1 expression .

    CLOSEPAREN      reduce using rule 81 (logical -> expression logical1 expression .)


state 249

    (47) print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .

    IF              reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 47 (print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON .)


state 250

    (48) read -> READ OPENPAREN ID read1 CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 261


state 251

    (49) read1 -> OPENBRACKET exp . CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (50) read1 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 262


state 252

    (121) graphr1 -> graphstmt . graphr1
    (121) graphr1 -> . graphstmt graphr1
    (122) graphr1 -> . empty
    (103) graphstmt -> . graphfig
    (104) graphstmt -> . graphview
    (105) graphstmt -> . graphmove
    (148) empty -> .
    (106) graphfig -> . graphfig1 SEMICOLON
    (123) graphview -> . graphview1 SEMICOLON
    (111) graphmove -> . graphmove1 SEMICOLON
    (107) graphfig1 -> . CIRCLE laRegla2
    (108) graphfig1 -> . SQUARE laRegla2
    (109) graphfig1 -> . TRIANGLE laRegla
    (110) graphfig1 -> . RECTANGLE laRegla
    (124) graphview1 -> . HIDE_STAR
    (125) graphview1 -> . SHOW_STAR
    (126) graphview1 -> . graphview2 exp
    (112) graphmove1 -> . HAND_DOWN
    (113) graphmove1 -> . HAND_UP
    (114) graphmove1 -> . graphmove2
    (127) graphview2 -> . SETXY graphview3
    (128) graphview2 -> . COLOR_STAR
    (129) graphview2 -> . SIZE_STAR
    (115) graphmove2 -> . GO laRegla2
    (116) graphmove2 -> . LEFT laRegla2
    (117) graphmove2 -> . RIGHT laRegla2
    (118) graphmove2 -> . BACK laRegla2
    (119) graphmove2 -> . ARC laRegla

    CLOSEBRACES     reduce using rule 148 (empty -> .)
    CIRCLE          shift and go to state 84
    SQUARE          shift and go to state 85
    TRIANGLE        shift and go to state 86
    RECTANGLE       shift and go to state 87
    HIDE_STAR       shift and go to state 88
    SHOW_STAR       shift and go to state 89
    HAND_DOWN       shift and go to state 91
    HAND_UP         shift and go to state 92
    SETXY           shift and go to state 94
    COLOR_STAR      shift and go to state 95
    SIZE_STAR       shift and go to state 96
    GO              shift and go to state 97
    LEFT            shift and go to state 98
    RIGHT           shift and go to state 99
    BACK            shift and go to state 100
    ARC             shift and go to state 101

    graphstmt                      shift and go to state 252
    graphr1                        shift and go to state 263
    empty                          shift and go to state 254
    graphfig                       shift and go to state 74
    graphview                      shift and go to state 75
    graphmove                      shift and go to state 76
    graphfig1                      shift and go to state 81
    graphview1                     shift and go to state 82
    graphmove1                     shift and go to state 83
    graphview2                     shift and go to state 90
    graphmove2                     shift and go to state 93

state 253

    (120) graphr -> REPEAT exp OPENBRACES graphstmt graphr1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 264


state 254

    (122) graphr1 -> empty .

    CLOSEBRACES     reduce using rule 122 (graphr1 -> empty .)


state 255

    (94) for -> FOR OPENPAREN ID TWODOTS exp . CLOSEPAREN body

    CLOSEPAREN      shift and go to state 265


state 256

    (101) laRegla -> OPENPAREN exp COMMA exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 266


state 257

    (35) function5 -> COMMA type ID . function3
    (31) function3 -> . type ID function5
    (32) function3 -> . empty
    (44) type -> . INT
    (45) type -> . FLOAT
    (46) type -> . CHAR
    (148) empty -> .

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    CHAR            shift and go to state 11
    CLOSEPAREN      reduce using rule 148 (empty -> .)

    type                           shift and go to state 105
    function3                      shift and go to state 267
    empty                          shift and go to state 106

state 258

    (66) vcte3 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 268


state 259

    (99) funCall3 -> COMMA exp funCall2 .

    CLOSEPAREN      reduce using rule 99 (funCall3 -> COMMA exp funCall2 .)


state 260

    (85) condition1 -> ELSEIF head body . condition1
    (85) condition1 -> . ELSEIF head body condition1
    (86) condition1 -> . ELSE body
    (87) condition1 -> . empty
    (148) empty -> .

    ELSEIF          shift and go to state 215
    ELSE            shift and go to state 216
    IF              reduce using rule 148 (empty -> .)
    PRINT           reduce using rule 148 (empty -> .)
    READ            reduce using rule 148 (empty -> .)
    REPEAT          reduce using rule 148 (empty -> .)
    ID              reduce using rule 148 (empty -> .)
    RETURN          reduce using rule 148 (empty -> .)
    WHILE           reduce using rule 148 (empty -> .)
    FOR             reduce using rule 148 (empty -> .)
    CIRCLE          reduce using rule 148 (empty -> .)
    SQUARE          reduce using rule 148 (empty -> .)
    TRIANGLE        reduce using rule 148 (empty -> .)
    RECTANGLE       reduce using rule 148 (empty -> .)
    HIDE_STAR       reduce using rule 148 (empty -> .)
    SHOW_STAR       reduce using rule 148 (empty -> .)
    HAND_DOWN       reduce using rule 148 (empty -> .)
    HAND_UP         reduce using rule 148 (empty -> .)
    SETXY           reduce using rule 148 (empty -> .)
    COLOR_STAR      reduce using rule 148 (empty -> .)
    SIZE_STAR       reduce using rule 148 (empty -> .)
    GO              reduce using rule 148 (empty -> .)
    LEFT            reduce using rule 148 (empty -> .)
    RIGHT           reduce using rule 148 (empty -> .)
    BACK            reduce using rule 148 (empty -> .)
    ARC             reduce using rule 148 (empty -> .)
    CLOSEBRACES     reduce using rule 148 (empty -> .)

    condition1                     shift and go to state 269
    empty                          shift and go to state 217

state 261

    (48) read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .

    IF              reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    REPEAT          reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 48 (read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON .)


state 262

    (49) read1 -> OPENBRACKET exp CLOSEBRACKET . OPENBRACKET exp CLOSEBRACKET
    (50) read1 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     shift and go to state 270
    CLOSEPAREN      reduce using rule 50 (read1 -> OPENBRACKET exp CLOSEBRACKET .)


state 263

    (121) graphr1 -> graphstmt graphr1 .

    CLOSEBRACES     reduce using rule 121 (graphr1 -> graphstmt graphr1 .)


state 264

    (120) graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .

    IF              reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    PRINT           reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    READ            reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    REPEAT          reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    ID              reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RETURN          reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    WHILE           reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    FOR             reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    CIRCLE          reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SQUARE          reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    HAND_UP         reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SETXY           reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    GO              reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    LEFT            reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    RIGHT           reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    BACK            reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    ARC             reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 120 (graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES .)


state 265

    (94) for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN . body
    (91) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 185

    body                           shift and go to state 271

state 266

    (101) laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .

    SEMICOLON       reduce using rule 101 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    CTEINT          reduce using rule 101 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    CTEFLOAT        reduce using rule 101 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    CTECHAR         reduce using rule 101 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    ID              reduce using rule 101 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    ADDITION        reduce using rule 101 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 101 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)
    OPENPAREN       reduce using rule 101 (laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN .)


state 267

    (35) function5 -> COMMA type ID function3 .

    CLOSEPAREN      reduce using rule 35 (function5 -> COMMA type ID function3 .)


state 268

    (66) vcte3 -> OPENBRACKET exp CLOSEBRACKET .

    MULTIPLICATION  reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    DIVISION        reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ADDITION        reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    SUBSTRACTION    reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    SEMICOLON       reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    GREATER         reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    LESS            reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ISEQUAL         reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    OPENBRACES      reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    COMMA           reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    OR              reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    AND             reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CTEINT          reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CTEFLOAT        reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    CTECHAR         reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    ID              reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)
    OPENPAREN       reduce using rule 66 (vcte3 -> OPENBRACKET exp CLOSEBRACKET .)


state 269

    (85) condition1 -> ELSEIF head body condition1 .

    IF              reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)
    PRINT           reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)
    READ            reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)
    REPEAT          reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)
    ID              reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)
    RETURN          reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)
    WHILE           reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)
    FOR             reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)
    CIRCLE          reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)
    SQUARE          reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)
    TRIANGLE        reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)
    RECTANGLE       reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)
    HIDE_STAR       reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)
    SHOW_STAR       reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)
    HAND_DOWN       reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)
    HAND_UP         reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)
    SETXY           reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)
    COLOR_STAR      reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)
    SIZE_STAR       reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)
    GO              reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)
    LEFT            reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)
    RIGHT           reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)
    BACK            reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)
    ARC             reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)
    CLOSEBRACES     reduce using rule 85 (condition1 -> ELSEIF head body condition1 .)


state 270

    (49) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET . exp CLOSEBRACKET
    (132) exp -> . term exp1
    (144) term -> . factor term1
    (138) factor -> . vcte
    (139) factor -> . factor1
    (61) vcte -> . cte
    (62) vcte -> . id vcte1
    (63) vcte -> . funCall
    (140) factor1 -> . factor2 vcte
    (141) factor1 -> . openP expression closeP
    (68) cte -> . CTEINT
    (69) cte -> . CTEFLOAT
    (70) cte -> . CTECHAR
    (53) id -> . ID
    (96) funCall -> . ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON
    (142) factor2 -> . ADDITION
    (143) factor2 -> . SUBSTRACTION
    (136) openP -> . OPENPAREN

    CTEINT          shift and go to state 47
    CTEFLOAT        shift and go to state 48
    CTECHAR         shift and go to state 49
    ID              shift and go to state 50
    ADDITION        shift and go to state 52
    SUBSTRACTION    shift and go to state 53
    OPENPAREN       shift and go to state 51

    exp                            shift and go to state 272
    term                           shift and go to state 38
    factor                         shift and go to state 39
    vcte                           shift and go to state 40
    factor1                        shift and go to state 41
    cte                            shift and go to state 42
    id                             shift and go to state 43
    funCall                        shift and go to state 44
    factor2                        shift and go to state 45
    openP                          shift and go to state 46

state 271

    (94) for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .

    IF              reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    PRINT           reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    READ            reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    REPEAT          reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    ID              reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    RETURN          reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    WHILE           reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    FOR             reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    CIRCLE          reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SQUARE          reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    TRIANGLE        reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    RECTANGLE       reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    HIDE_STAR       reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SHOW_STAR       reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    HAND_DOWN       reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    HAND_UP         reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SETXY           reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    COLOR_STAR      reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    SIZE_STAR       reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    GO              reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    LEFT            reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    RIGHT           reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    BACK            reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    ARC             reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)
    CLOSEBRACES     reduce using rule 94 (for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body .)


state 272

    (49) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 273


state 273

    (49) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .

    CLOSEPAREN      reduce using rule 49 (read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ADDITION in state 38 resolved as shift
WARNING: shift/reduce conflict for SUBSTRACTION in state 38 resolved as shift
WARNING: shift/reduce conflict for OPENPAREN in state 50 resolved as shift
WARNING: shift/reduce conflict for CTEINT in state 152 resolved as shift
WARNING: shift/reduce conflict for CTEFLOAT in state 152 resolved as shift
WARNING: shift/reduce conflict for CTECHAR in state 152 resolved as shift
WARNING: shift/reduce conflict for ID in state 152 resolved as shift
WARNING: shift/reduce conflict for ADDITION in state 152 resolved as shift
WARNING: shift/reduce conflict for SUBSTRACTION in state 152 resolved as shift
WARNING: shift/reduce conflict for OPENPAREN in state 152 resolved as shift
WARNING: reduce/reduce conflict in state 126 resolved using rule (assignment1 -> assignment2)
WARNING: rejected rule (empty -> <empty>) in state 126
WARNING: reduce/reduce conflict in state 135 resolved using rule (return1 -> vcte)
WARNING: rejected rule (factor -> vcte) in state 135
