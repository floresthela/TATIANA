Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON declara_vars program_fun star
Rule 2     program_fun -> function program_fun
Rule 3     program_fun -> empty
Rule 4     star -> starI declara_vars star1 CLOSEBRACES
Rule 5     starI -> star_sign OPENBRACES
Rule 6     star_sign -> MULTIPLICATION
Rule 7     star1 -> stmt star1
Rule 8     star1 -> empty
Rule 9     declara_vars -> vars declara_vars
Rule 10    declara_vars -> empty
Rule 11    vars -> type ID dimensionada equals exp SEMICOLON
Rule 12    vars -> type ID dimensionada SEMICOLON
Rule 13    dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET
Rule 14    dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET
Rule 15    dimensionada -> empty
Rule 16    loop -> while
Rule 17    loop -> for
Rule 18    stmt -> assignment
Rule 19    stmt -> condition
Rule 20    stmt -> print
Rule 21    stmt -> loop
Rule 22    stmt -> read
Rule 23    stmt -> graphstmt
Rule 24    stmt -> funCall SEMICOLON
Rule 25    stmt -> return
Rule 26    assignment -> id equals assignment3 SEMICOLON
Rule 27    assignment3 -> exp
Rule 28    assignment3 -> read
Rule 29    vcte -> cte_int
Rule 30    vcte -> cte_float
Rule 31    vcte -> cte_string
Rule 32    vcte -> id
Rule 33    vcte -> funCall
Rule 34    vcte -> vectormatriz
Rule 35    vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET
Rule 36    vectormatriz -> vm1
Rule 37    vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
Rule 38    vm1 -> OPENBRACKET vm2 CLOSEBRACKET
Rule 39    vm2 -> exp COMMA vm2
Rule 40    vm2 -> exp
Rule 41    vm2 -> empty
Rule 42    functionI -> type ID
Rule 43    functionI -> VOID ID
Rule 44    function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun
Rule 45    inicia_fun -> OPENBRACES
Rule 46    termina_fun -> CLOSEBRACES
Rule 47    function2 -> OPENPAREN function3 CLOSEPAREN
Rule 48    function3 -> funParam function5
Rule 49    function3 -> empty
Rule 50    function4 -> stmt function4
Rule 51    function4 -> empty
Rule 52    function5 -> COMMA funParam function5
Rule 53    function5 -> empty
Rule 54    funParam -> type ID
Rule 55    type -> INT
Rule 56    type -> FLOAT
Rule 57    type -> STRING
Rule 58    print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
Rule 59    read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
Rule 60    read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
Rule 61    read1 -> OPENBRACKET exp CLOSEBRACKET
Rule 62    read1 -> empty
Rule 63    equals -> EQUALS
Rule 64    id -> ID vectormatriz
Rule 65    funCall -> ID iniciaFunCall funCall2 terminaFunCall
Rule 66    iniciaFunCall -> OPENPAREN
Rule 67    terminaFunCall -> CLOSEPAREN
Rule 68    funCall2 -> funCallParam funCall3
Rule 69    funCall2 -> empty
Rule 70    funCall3 -> COMMA funCallParam funCall3
Rule 71    funCall3 -> empty
Rule 72    funCallParam -> exp
Rule 73    cte_int -> CTEINT
Rule 74    cte_float -> CTEFLOAT
Rule 75    cte_string -> CTESTRING
Rule 76    return -> RETURN return1 SEMICOLON
Rule 77    return1 -> vcte
Rule 78    return1 -> exp
Rule 79    loper -> GREATER
Rule 80    loper -> LESS
Rule 81    loper -> NOTEQUAL
Rule 82    loper -> ISEQUAL
Rule 83    condition -> IF head_cond body condition1
Rule 84    condition1 -> elseif head_cond body condition1
Rule 85    condition1 -> else body
Rule 86    condition1 -> empty
Rule 87    elseif -> ELSEIF
Rule 88    else -> ELSE
Rule 89    head_cond -> OPENPAREN expression close_condition
Rule 90    body -> OPENBRACES body1 CLOSEBRACES
Rule 91    close_condition -> CLOSEPAREN
Rule 92    body1 -> stmt body1
Rule 93    body1 -> empty
Rule 94    for -> for1 body
Rule 95    for1 -> forInit OPENPAREN ID for2
Rule 96    for2 -> TWODOTS exp for3
Rule 97    for3 -> CLOSEPAREN
Rule 98    forInit -> FOR
Rule 99    while -> while1 body
Rule 100   while1 -> while_w OPENPAREN expression CLOSEPAREN
Rule 101   while_w -> WHILE
Rule 102   dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN
Rule 103   unaExp -> OPENPAREN exp CLOSEPAREN
Rule 104   graphstmt -> graphfig
Rule 105   graphstmt -> graphview
Rule 106   graphstmt -> graphmove
Rule 107   graphfig -> graphfig1 SEMICOLON
Rule 108   graphfig -> graphfig2 SEMICOLON
Rule 109   graphfig1 -> CIRCLE unaExp
Rule 110   graphfig1 -> SQUARE unaExp
Rule 111   graphfig2 -> TRIANGLE dosExp
Rule 112   graphfig2 -> RECTANGLE dosExp
Rule 113   graphmove -> graphmove0 SEMICOLON
Rule 114   graphmove -> graphmove1 SEMICOLON
Rule 115   graphmove -> graphmove2 SEMICOLON
Rule 116   graphmove0 -> HAND_DOWN
Rule 117   graphmove0 -> HAND_UP
Rule 118   graphmove1 -> GO unaExp
Rule 119   graphmove1 -> LEFT unaExp
Rule 120   graphmove1 -> RIGHT unaExp
Rule 121   graphmove1 -> BACK unaExp
Rule 122   graphmove2 -> ARC dosExp
Rule 123   graphview -> graphview0 SEMICOLON
Rule 124   graphview -> graphview1 SEMICOLON
Rule 125   graphview -> graphview2 SEMICOLON
Rule 126   graphview0 -> HIDE_STAR
Rule 127   graphview0 -> SHOW_STAR
Rule 128   graphview1 -> COLOR_STAR unaExp
Rule 129   graphview1 -> SIZE_STAR unaExp
Rule 130   graphview2 -> SETXY dosExp
Rule 131   expression -> exp loper exp
Rule 132   expression -> exp
Rule 133   exp -> term
Rule 134   exp -> term exp_o exp
Rule 135   exp_o -> ADDITION
Rule 136   exp_o -> SUBSTRACTION
Rule 137   openP -> OPENPAREN
Rule 138   closeP -> CLOSEPAREN
Rule 139   term -> factor term_o term
Rule 140   term -> factor
Rule 141   term_o -> MULTIPLICATION
Rule 142   term_o -> DIVISION
Rule 143   factor -> vcte
Rule 144   factor -> openP expression closeP
Rule 145   empty -> <empty>

Terminals, with rules where they appear

ADDITION             : 135
ARC                  : 122
BACK                 : 121
CIRCLE               : 109
CLOSEBRACES          : 4 46 90
CLOSEBRACKET         : 13 14 14 35 37 38 60 60 61
CLOSEPAREN           : 47 58 59 67 91 97 100 102 103 138
COLOR_STAR           : 128
COMMA                : 37 39 52 70 102
CTEFLOAT             : 74
CTEINT               : 13 14 14 73
CTESTRING            : 75
DIVISION             : 142
ELSE                 : 88
ELSEIF               : 87
EQUALS               : 63
FLOAT                : 56
FOR                  : 98
FUN                  : 44
GO                   : 118
GREATER              : 79
HAND_DOWN            : 116
HAND_UP              : 117
HIDE_STAR            : 126
ID                   : 1 11 12 42 43 54 64 65 95
IF                   : 83
INT                  : 55
ISEQUAL              : 82
LEFT                 : 119
LESS                 : 80
MULTIPLICATION       : 6 141
NOTEQUAL             : 81
OPENBRACES           : 5 45 90
OPENBRACKET          : 13 14 14 35 37 38 60 60 61
OPENPAREN            : 47 58 59 66 89 95 100 102 103 137
PRINT                : 58
PROGRAM              : 1
READ                 : 59
RECTANGLE            : 112
RETURN               : 76
RIGHT                : 120
SEMICOLON            : 1 11 12 24 26 58 59 76 107 108 113 114 115 123 124 125
SETXY                : 130
SHOW_STAR            : 127
SIZE_STAR            : 129
SQUARE               : 110
STRING               : 57
SUBSTRACTION         : 136
TRIANGLE             : 111
TWODOTS              : 96
VOID                 : 43
WHILE                : 101
error                : 

Nonterminals, with rules where they appear

assignment           : 18
assignment3          : 26
body                 : 83 84 85 94 99
body1                : 90 92
closeP               : 144
close_condition      : 89
condition            : 19
condition1           : 83 84
cte_float            : 30
cte_int              : 29
cte_string           : 31
declara_vars         : 1 4 9 44
dimensionada         : 11 12
dosExp               : 111 112 122 130
else                 : 85
elseif               : 84
empty                : 3 8 10 15 41 49 51 53 62 69 71 86 93
equals               : 11 26
exp                  : 11 27 39 40 60 60 61 72 78 96 102 102 103 131 131 132 134
exp_o                : 134
expression           : 58 89 100 144
factor               : 139 140
for                  : 17
for1                 : 94
for2                 : 95
for3                 : 96
forInit              : 95
funCall              : 24 33
funCall2             : 65
funCall3             : 68 70
funCallParam         : 68 70
funParam             : 48 52
function             : 2
function2            : 44
function3            : 47
function4            : 44 50
function5            : 48 52
functionI            : 44
graphfig             : 104
graphfig1            : 107
graphfig2            : 108
graphmove            : 106
graphmove0           : 113
graphmove1           : 114
graphmove2           : 115
graphstmt            : 23
graphview            : 105
graphview0           : 123
graphview1           : 124
graphview2           : 125
head_cond            : 83 84
id                   : 26 32 59
iniciaFunCall        : 65
inicia_fun           : 44
loop                 : 21
loper                : 131
openP                : 144
print                : 20
program              : 0
program_fun          : 1 2
read                 : 22 28
read1                : 59
return               : 25
return1              : 76
star                 : 1
star1                : 4 7
starI                : 4
star_sign            : 5
stmt                 : 7 50 92
term                 : 133 134 139
term_o               : 139
terminaFunCall       : 65
termina_fun          : 44
type                 : 11 12 42 54
unaExp               : 109 110 118 119 120 121 128 129
vars                 : 9
vcte                 : 77 143
vectormatriz         : 34 64
vm1                  : 35 36 37
vm2                  : 37 38 39
while                : 16
while1               : 99
while_w              : 100

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON declara_vars program_fun star

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON declara_vars program_fun star

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON declara_vars program_fun star

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . declara_vars program_fun star
    (9) declara_vars -> . vars declara_vars
    (10) declara_vars -> . empty
    (11) vars -> . type ID dimensionada equals exp SEMICOLON
    (12) vars -> . type ID dimensionada SEMICOLON
    (145) empty -> .
    (55) type -> . INT
    (56) type -> . FLOAT
    (57) type -> . STRING

    FUN             reduce using rule 145 (empty -> .)
    MULTIPLICATION  reduce using rule 145 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    declara_vars                   shift and go to state 5
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 5

    (1) program -> PROGRAM ID SEMICOLON declara_vars . program_fun star
    (2) program_fun -> . function program_fun
    (3) program_fun -> . empty
    (44) function -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (145) empty -> .

    FUN             shift and go to state 15
    MULTIPLICATION  reduce using rule 145 (empty -> .)

    program_fun                    shift and go to state 12
    function                       shift and go to state 13
    empty                          shift and go to state 14

state 6

    (9) declara_vars -> vars . declara_vars
    (9) declara_vars -> . vars declara_vars
    (10) declara_vars -> . empty
    (11) vars -> . type ID dimensionada equals exp SEMICOLON
    (12) vars -> . type ID dimensionada SEMICOLON
    (145) empty -> .
    (55) type -> . INT
    (56) type -> . FLOAT
    (57) type -> . STRING

    FUN             reduce using rule 145 (empty -> .)
    MULTIPLICATION  reduce using rule 145 (empty -> .)
    IF              reduce using rule 145 (empty -> .)
    PRINT           reduce using rule 145 (empty -> .)
    READ            reduce using rule 145 (empty -> .)
    ID              reduce using rule 145 (empty -> .)
    RETURN          reduce using rule 145 (empty -> .)
    CIRCLE          reduce using rule 145 (empty -> .)
    SQUARE          reduce using rule 145 (empty -> .)
    TRIANGLE        reduce using rule 145 (empty -> .)
    RECTANGLE       reduce using rule 145 (empty -> .)
    HIDE_STAR       reduce using rule 145 (empty -> .)
    SHOW_STAR       reduce using rule 145 (empty -> .)
    COLOR_STAR      reduce using rule 145 (empty -> .)
    SIZE_STAR       reduce using rule 145 (empty -> .)
    SETXY           reduce using rule 145 (empty -> .)
    HAND_DOWN       reduce using rule 145 (empty -> .)
    HAND_UP         reduce using rule 145 (empty -> .)
    GO              reduce using rule 145 (empty -> .)
    LEFT            reduce using rule 145 (empty -> .)
    RIGHT           reduce using rule 145 (empty -> .)
    BACK            reduce using rule 145 (empty -> .)
    ARC             reduce using rule 145 (empty -> .)
    WHILE           reduce using rule 145 (empty -> .)
    FOR             reduce using rule 145 (empty -> .)
    CLOSEBRACES     reduce using rule 145 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    vars                           shift and go to state 6
    declara_vars                   shift and go to state 16
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 7

    (10) declara_vars -> empty .

    FUN             reduce using rule 10 (declara_vars -> empty .)
    MULTIPLICATION  reduce using rule 10 (declara_vars -> empty .)
    IF              reduce using rule 10 (declara_vars -> empty .)
    PRINT           reduce using rule 10 (declara_vars -> empty .)
    READ            reduce using rule 10 (declara_vars -> empty .)
    ID              reduce using rule 10 (declara_vars -> empty .)
    RETURN          reduce using rule 10 (declara_vars -> empty .)
    CIRCLE          reduce using rule 10 (declara_vars -> empty .)
    SQUARE          reduce using rule 10 (declara_vars -> empty .)
    TRIANGLE        reduce using rule 10 (declara_vars -> empty .)
    RECTANGLE       reduce using rule 10 (declara_vars -> empty .)
    HIDE_STAR       reduce using rule 10 (declara_vars -> empty .)
    SHOW_STAR       reduce using rule 10 (declara_vars -> empty .)
    COLOR_STAR      reduce using rule 10 (declara_vars -> empty .)
    SIZE_STAR       reduce using rule 10 (declara_vars -> empty .)
    SETXY           reduce using rule 10 (declara_vars -> empty .)
    HAND_DOWN       reduce using rule 10 (declara_vars -> empty .)
    HAND_UP         reduce using rule 10 (declara_vars -> empty .)
    GO              reduce using rule 10 (declara_vars -> empty .)
    LEFT            reduce using rule 10 (declara_vars -> empty .)
    RIGHT           reduce using rule 10 (declara_vars -> empty .)
    BACK            reduce using rule 10 (declara_vars -> empty .)
    ARC             reduce using rule 10 (declara_vars -> empty .)
    WHILE           reduce using rule 10 (declara_vars -> empty .)
    FOR             reduce using rule 10 (declara_vars -> empty .)
    CLOSEBRACES     reduce using rule 10 (declara_vars -> empty .)


state 8

    (11) vars -> type . ID dimensionada equals exp SEMICOLON
    (12) vars -> type . ID dimensionada SEMICOLON

    ID              shift and go to state 17


state 9

    (55) type -> INT .

    ID              reduce using rule 55 (type -> INT .)


state 10

    (56) type -> FLOAT .

    ID              reduce using rule 56 (type -> FLOAT .)


state 11

    (57) type -> STRING .

    ID              reduce using rule 57 (type -> STRING .)


state 12

    (1) program -> PROGRAM ID SEMICOLON declara_vars program_fun . star
    (4) star -> . starI declara_vars star1 CLOSEBRACES
    (5) starI -> . star_sign OPENBRACES
    (6) star_sign -> . MULTIPLICATION

    MULTIPLICATION  shift and go to state 21

    star                           shift and go to state 18
    starI                          shift and go to state 19
    star_sign                      shift and go to state 20

state 13

    (2) program_fun -> function . program_fun
    (2) program_fun -> . function program_fun
    (3) program_fun -> . empty
    (44) function -> . FUN functionI function2 inicia_fun declara_vars function4 termina_fun
    (145) empty -> .

    FUN             shift and go to state 15
    MULTIPLICATION  reduce using rule 145 (empty -> .)

    function                       shift and go to state 13
    program_fun                    shift and go to state 22
    empty                          shift and go to state 14

state 14

    (3) program_fun -> empty .

    MULTIPLICATION  reduce using rule 3 (program_fun -> empty .)


state 15

    (44) function -> FUN . functionI function2 inicia_fun declara_vars function4 termina_fun
    (42) functionI -> . type ID
    (43) functionI -> . VOID ID
    (55) type -> . INT
    (56) type -> . FLOAT
    (57) type -> . STRING

    VOID            shift and go to state 25
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    functionI                      shift and go to state 23
    type                           shift and go to state 24

state 16

    (9) declara_vars -> vars declara_vars .

    FUN             reduce using rule 9 (declara_vars -> vars declara_vars .)
    MULTIPLICATION  reduce using rule 9 (declara_vars -> vars declara_vars .)
    IF              reduce using rule 9 (declara_vars -> vars declara_vars .)
    PRINT           reduce using rule 9 (declara_vars -> vars declara_vars .)
    READ            reduce using rule 9 (declara_vars -> vars declara_vars .)
    ID              reduce using rule 9 (declara_vars -> vars declara_vars .)
    RETURN          reduce using rule 9 (declara_vars -> vars declara_vars .)
    CIRCLE          reduce using rule 9 (declara_vars -> vars declara_vars .)
    SQUARE          reduce using rule 9 (declara_vars -> vars declara_vars .)
    TRIANGLE        reduce using rule 9 (declara_vars -> vars declara_vars .)
    RECTANGLE       reduce using rule 9 (declara_vars -> vars declara_vars .)
    HIDE_STAR       reduce using rule 9 (declara_vars -> vars declara_vars .)
    SHOW_STAR       reduce using rule 9 (declara_vars -> vars declara_vars .)
    COLOR_STAR      reduce using rule 9 (declara_vars -> vars declara_vars .)
    SIZE_STAR       reduce using rule 9 (declara_vars -> vars declara_vars .)
    SETXY           reduce using rule 9 (declara_vars -> vars declara_vars .)
    HAND_DOWN       reduce using rule 9 (declara_vars -> vars declara_vars .)
    HAND_UP         reduce using rule 9 (declara_vars -> vars declara_vars .)
    GO              reduce using rule 9 (declara_vars -> vars declara_vars .)
    LEFT            reduce using rule 9 (declara_vars -> vars declara_vars .)
    RIGHT           reduce using rule 9 (declara_vars -> vars declara_vars .)
    BACK            reduce using rule 9 (declara_vars -> vars declara_vars .)
    ARC             reduce using rule 9 (declara_vars -> vars declara_vars .)
    WHILE           reduce using rule 9 (declara_vars -> vars declara_vars .)
    FOR             reduce using rule 9 (declara_vars -> vars declara_vars .)
    CLOSEBRACES     reduce using rule 9 (declara_vars -> vars declara_vars .)


state 17

    (11) vars -> type ID . dimensionada equals exp SEMICOLON
    (12) vars -> type ID . dimensionada SEMICOLON
    (13) dimensionada -> . OPENBRACKET CTEINT CLOSEBRACKET
    (14) dimensionada -> . OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET
    (15) dimensionada -> . empty
    (145) empty -> .

    OPENBRACKET     shift and go to state 27
    SEMICOLON       reduce using rule 145 (empty -> .)
    EQUALS          reduce using rule 145 (empty -> .)

    dimensionada                   shift and go to state 26
    empty                          shift and go to state 28

state 18

    (1) program -> PROGRAM ID SEMICOLON declara_vars program_fun star .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON declara_vars program_fun star .)


state 19

    (4) star -> starI . declara_vars star1 CLOSEBRACES
    (9) declara_vars -> . vars declara_vars
    (10) declara_vars -> . empty
    (11) vars -> . type ID dimensionada equals exp SEMICOLON
    (12) vars -> . type ID dimensionada SEMICOLON
    (145) empty -> .
    (55) type -> . INT
    (56) type -> . FLOAT
    (57) type -> . STRING

    IF              reduce using rule 145 (empty -> .)
    PRINT           reduce using rule 145 (empty -> .)
    READ            reduce using rule 145 (empty -> .)
    ID              reduce using rule 145 (empty -> .)
    RETURN          reduce using rule 145 (empty -> .)
    CIRCLE          reduce using rule 145 (empty -> .)
    SQUARE          reduce using rule 145 (empty -> .)
    TRIANGLE        reduce using rule 145 (empty -> .)
    RECTANGLE       reduce using rule 145 (empty -> .)
    HIDE_STAR       reduce using rule 145 (empty -> .)
    SHOW_STAR       reduce using rule 145 (empty -> .)
    COLOR_STAR      reduce using rule 145 (empty -> .)
    SIZE_STAR       reduce using rule 145 (empty -> .)
    SETXY           reduce using rule 145 (empty -> .)
    HAND_DOWN       reduce using rule 145 (empty -> .)
    HAND_UP         reduce using rule 145 (empty -> .)
    GO              reduce using rule 145 (empty -> .)
    LEFT            reduce using rule 145 (empty -> .)
    RIGHT           reduce using rule 145 (empty -> .)
    BACK            reduce using rule 145 (empty -> .)
    ARC             reduce using rule 145 (empty -> .)
    WHILE           reduce using rule 145 (empty -> .)
    FOR             reduce using rule 145 (empty -> .)
    CLOSEBRACES     reduce using rule 145 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    declara_vars                   shift and go to state 29
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 20

    (5) starI -> star_sign . OPENBRACES

    OPENBRACES      shift and go to state 30


state 21

    (6) star_sign -> MULTIPLICATION .

    OPENBRACES      reduce using rule 6 (star_sign -> MULTIPLICATION .)


state 22

    (2) program_fun -> function program_fun .

    MULTIPLICATION  reduce using rule 2 (program_fun -> function program_fun .)


state 23

    (44) function -> FUN functionI . function2 inicia_fun declara_vars function4 termina_fun
    (47) function2 -> . OPENPAREN function3 CLOSEPAREN

    OPENPAREN       shift and go to state 32

    function2                      shift and go to state 31

state 24

    (42) functionI -> type . ID

    ID              shift and go to state 33


state 25

    (43) functionI -> VOID . ID

    ID              shift and go to state 34


state 26

    (11) vars -> type ID dimensionada . equals exp SEMICOLON
    (12) vars -> type ID dimensionada . SEMICOLON
    (63) equals -> . EQUALS

    SEMICOLON       shift and go to state 36
    EQUALS          shift and go to state 37

    equals                         shift and go to state 35

state 27

    (13) dimensionada -> OPENBRACKET . CTEINT CLOSEBRACKET
    (14) dimensionada -> OPENBRACKET . CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET

    CTEINT          shift and go to state 38


state 28

    (15) dimensionada -> empty .

    SEMICOLON       reduce using rule 15 (dimensionada -> empty .)
    EQUALS          reduce using rule 15 (dimensionada -> empty .)


state 29

    (4) star -> starI declara_vars . star1 CLOSEBRACES
    (7) star1 -> . stmt star1
    (8) star1 -> . empty
    (18) stmt -> . assignment
    (19) stmt -> . condition
    (20) stmt -> . print
    (21) stmt -> . loop
    (22) stmt -> . read
    (23) stmt -> . graphstmt
    (24) stmt -> . funCall SEMICOLON
    (25) stmt -> . return
    (145) empty -> .
    (26) assignment -> . id equals assignment3 SEMICOLON
    (83) condition -> . IF head_cond body condition1
    (58) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (16) loop -> . while
    (17) loop -> . for
    (59) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (104) graphstmt -> . graphfig
    (105) graphstmt -> . graphview
    (106) graphstmt -> . graphmove
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (76) return -> . RETURN return1 SEMICOLON
    (64) id -> . ID vectormatriz
    (99) while -> . while1 body
    (94) for -> . for1 body
    (107) graphfig -> . graphfig1 SEMICOLON
    (108) graphfig -> . graphfig2 SEMICOLON
    (123) graphview -> . graphview0 SEMICOLON
    (124) graphview -> . graphview1 SEMICOLON
    (125) graphview -> . graphview2 SEMICOLON
    (113) graphmove -> . graphmove0 SEMICOLON
    (114) graphmove -> . graphmove1 SEMICOLON
    (115) graphmove -> . graphmove2 SEMICOLON
    (100) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (95) for1 -> . forInit OPENPAREN ID for2
    (109) graphfig1 -> . CIRCLE unaExp
    (110) graphfig1 -> . SQUARE unaExp
    (111) graphfig2 -> . TRIANGLE dosExp
    (112) graphfig2 -> . RECTANGLE dosExp
    (126) graphview0 -> . HIDE_STAR
    (127) graphview0 -> . SHOW_STAR
    (128) graphview1 -> . COLOR_STAR unaExp
    (129) graphview1 -> . SIZE_STAR unaExp
    (130) graphview2 -> . SETXY dosExp
    (116) graphmove0 -> . HAND_DOWN
    (117) graphmove0 -> . HAND_UP
    (118) graphmove1 -> . GO unaExp
    (119) graphmove1 -> . LEFT unaExp
    (120) graphmove1 -> . RIGHT unaExp
    (121) graphmove1 -> . BACK unaExp
    (122) graphmove2 -> . ARC dosExp
    (101) while_w -> . WHILE
    (98) forInit -> . FOR

    CLOSEBRACES     reduce using rule 145 (empty -> .)
    IF              shift and go to state 51
    PRINT           shift and go to state 52
    READ            shift and go to state 55
    ID              shift and go to state 59
    RETURN          shift and go to state 60
    CIRCLE          shift and go to state 73
    SQUARE          shift and go to state 74
    TRIANGLE        shift and go to state 75
    RECTANGLE       shift and go to state 76
    HIDE_STAR       shift and go to state 77
    SHOW_STAR       shift and go to state 78
    COLOR_STAR      shift and go to state 79
    SIZE_STAR       shift and go to state 80
    SETXY           shift and go to state 81
    HAND_DOWN       shift and go to state 82
    HAND_UP         shift and go to state 83
    GO              shift and go to state 84
    LEFT            shift and go to state 85
    RIGHT           shift and go to state 86
    BACK            shift and go to state 87
    ARC             shift and go to state 88
    WHILE           shift and go to state 89
    FOR             shift and go to state 90

    star1                          shift and go to state 39
    stmt                           shift and go to state 40
    empty                          shift and go to state 41
    assignment                     shift and go to state 42
    condition                      shift and go to state 43
    print                          shift and go to state 44
    loop                           shift and go to state 45
    read                           shift and go to state 46
    graphstmt                      shift and go to state 47
    funCall                        shift and go to state 48
    return                         shift and go to state 49
    id                             shift and go to state 50
    while                          shift and go to state 53
    for                            shift and go to state 54
    graphfig                       shift and go to state 56
    graphview                      shift and go to state 57
    graphmove                      shift and go to state 58
    while1                         shift and go to state 61
    for1                           shift and go to state 62
    graphfig1                      shift and go to state 63
    graphfig2                      shift and go to state 64
    graphview0                     shift and go to state 65
    graphview1                     shift and go to state 66
    graphview2                     shift and go to state 67
    graphmove0                     shift and go to state 68
    graphmove1                     shift and go to state 69
    graphmove2                     shift and go to state 70
    while_w                        shift and go to state 71
    forInit                        shift and go to state 72

state 30

    (5) starI -> star_sign OPENBRACES .

    INT             reduce using rule 5 (starI -> star_sign OPENBRACES .)
    FLOAT           reduce using rule 5 (starI -> star_sign OPENBRACES .)
    STRING          reduce using rule 5 (starI -> star_sign OPENBRACES .)
    IF              reduce using rule 5 (starI -> star_sign OPENBRACES .)
    PRINT           reduce using rule 5 (starI -> star_sign OPENBRACES .)
    READ            reduce using rule 5 (starI -> star_sign OPENBRACES .)
    ID              reduce using rule 5 (starI -> star_sign OPENBRACES .)
    RETURN          reduce using rule 5 (starI -> star_sign OPENBRACES .)
    CIRCLE          reduce using rule 5 (starI -> star_sign OPENBRACES .)
    SQUARE          reduce using rule 5 (starI -> star_sign OPENBRACES .)
    TRIANGLE        reduce using rule 5 (starI -> star_sign OPENBRACES .)
    RECTANGLE       reduce using rule 5 (starI -> star_sign OPENBRACES .)
    HIDE_STAR       reduce using rule 5 (starI -> star_sign OPENBRACES .)
    SHOW_STAR       reduce using rule 5 (starI -> star_sign OPENBRACES .)
    COLOR_STAR      reduce using rule 5 (starI -> star_sign OPENBRACES .)
    SIZE_STAR       reduce using rule 5 (starI -> star_sign OPENBRACES .)
    SETXY           reduce using rule 5 (starI -> star_sign OPENBRACES .)
    HAND_DOWN       reduce using rule 5 (starI -> star_sign OPENBRACES .)
    HAND_UP         reduce using rule 5 (starI -> star_sign OPENBRACES .)
    GO              reduce using rule 5 (starI -> star_sign OPENBRACES .)
    LEFT            reduce using rule 5 (starI -> star_sign OPENBRACES .)
    RIGHT           reduce using rule 5 (starI -> star_sign OPENBRACES .)
    BACK            reduce using rule 5 (starI -> star_sign OPENBRACES .)
    ARC             reduce using rule 5 (starI -> star_sign OPENBRACES .)
    WHILE           reduce using rule 5 (starI -> star_sign OPENBRACES .)
    FOR             reduce using rule 5 (starI -> star_sign OPENBRACES .)
    CLOSEBRACES     reduce using rule 5 (starI -> star_sign OPENBRACES .)


state 31

    (44) function -> FUN functionI function2 . inicia_fun declara_vars function4 termina_fun
    (45) inicia_fun -> . OPENBRACES

    OPENBRACES      shift and go to state 92

    inicia_fun                     shift and go to state 91

state 32

    (47) function2 -> OPENPAREN . function3 CLOSEPAREN
    (48) function3 -> . funParam function5
    (49) function3 -> . empty
    (54) funParam -> . type ID
    (145) empty -> .
    (55) type -> . INT
    (56) type -> . FLOAT
    (57) type -> . STRING

    CLOSEPAREN      reduce using rule 145 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    function3                      shift and go to state 93
    funParam                       shift and go to state 94
    empty                          shift and go to state 95
    type                           shift and go to state 96

state 33

    (42) functionI -> type ID .

    OPENPAREN       reduce using rule 42 (functionI -> type ID .)


state 34

    (43) functionI -> VOID ID .

    OPENPAREN       reduce using rule 43 (functionI -> VOID ID .)


state 35

    (11) vars -> type ID dimensionada equals . exp SEMICOLON
    (133) exp -> . term
    (134) exp -> . term exp_o exp
    (139) term -> . factor term_o term
    (140) term -> . factor
    (143) factor -> . vcte
    (144) factor -> . openP expression closeP
    (29) vcte -> . cte_int
    (30) vcte -> . cte_float
    (31) vcte -> . cte_string
    (32) vcte -> . id
    (33) vcte -> . funCall
    (34) vcte -> . vectormatriz
    (137) openP -> . OPENPAREN
    (73) cte_int -> . CTEINT
    (74) cte_float -> . CTEFLOAT
    (75) cte_string -> . CTESTRING
    (64) id -> . ID vectormatriz
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 36

    (12) vars -> type ID dimensionada SEMICOLON .

    INT             reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    FLOAT           reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    STRING          reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    FUN             reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    MULTIPLICATION  reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    IF              reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    PRINT           reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    READ            reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    ID              reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    RETURN          reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    CIRCLE          reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    SQUARE          reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    TRIANGLE        reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    RECTANGLE       reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    HIDE_STAR       reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    SHOW_STAR       reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    COLOR_STAR      reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    SIZE_STAR       reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    SETXY           reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    HAND_DOWN       reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    HAND_UP         reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    GO              reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    LEFT            reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    RIGHT           reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    BACK            reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    ARC             reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    WHILE           reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    FOR             reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)
    CLOSEBRACES     reduce using rule 12 (vars -> type ID dimensionada SEMICOLON .)


state 37

    (63) equals -> EQUALS .

    OPENPAREN       reduce using rule 63 (equals -> EQUALS .)
    CTEINT          reduce using rule 63 (equals -> EQUALS .)
    CTEFLOAT        reduce using rule 63 (equals -> EQUALS .)
    CTESTRING       reduce using rule 63 (equals -> EQUALS .)
    ID              reduce using rule 63 (equals -> EQUALS .)
    OPENBRACKET     reduce using rule 63 (equals -> EQUALS .)
    READ            reduce using rule 63 (equals -> EQUALS .)


state 38

    (13) dimensionada -> OPENBRACKET CTEINT . CLOSEBRACKET
    (14) dimensionada -> OPENBRACKET CTEINT . CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 115


state 39

    (4) star -> starI declara_vars star1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 116


state 40

    (7) star1 -> stmt . star1
    (7) star1 -> . stmt star1
    (8) star1 -> . empty
    (18) stmt -> . assignment
    (19) stmt -> . condition
    (20) stmt -> . print
    (21) stmt -> . loop
    (22) stmt -> . read
    (23) stmt -> . graphstmt
    (24) stmt -> . funCall SEMICOLON
    (25) stmt -> . return
    (145) empty -> .
    (26) assignment -> . id equals assignment3 SEMICOLON
    (83) condition -> . IF head_cond body condition1
    (58) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (16) loop -> . while
    (17) loop -> . for
    (59) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (104) graphstmt -> . graphfig
    (105) graphstmt -> . graphview
    (106) graphstmt -> . graphmove
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (76) return -> . RETURN return1 SEMICOLON
    (64) id -> . ID vectormatriz
    (99) while -> . while1 body
    (94) for -> . for1 body
    (107) graphfig -> . graphfig1 SEMICOLON
    (108) graphfig -> . graphfig2 SEMICOLON
    (123) graphview -> . graphview0 SEMICOLON
    (124) graphview -> . graphview1 SEMICOLON
    (125) graphview -> . graphview2 SEMICOLON
    (113) graphmove -> . graphmove0 SEMICOLON
    (114) graphmove -> . graphmove1 SEMICOLON
    (115) graphmove -> . graphmove2 SEMICOLON
    (100) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (95) for1 -> . forInit OPENPAREN ID for2
    (109) graphfig1 -> . CIRCLE unaExp
    (110) graphfig1 -> . SQUARE unaExp
    (111) graphfig2 -> . TRIANGLE dosExp
    (112) graphfig2 -> . RECTANGLE dosExp
    (126) graphview0 -> . HIDE_STAR
    (127) graphview0 -> . SHOW_STAR
    (128) graphview1 -> . COLOR_STAR unaExp
    (129) graphview1 -> . SIZE_STAR unaExp
    (130) graphview2 -> . SETXY dosExp
    (116) graphmove0 -> . HAND_DOWN
    (117) graphmove0 -> . HAND_UP
    (118) graphmove1 -> . GO unaExp
    (119) graphmove1 -> . LEFT unaExp
    (120) graphmove1 -> . RIGHT unaExp
    (121) graphmove1 -> . BACK unaExp
    (122) graphmove2 -> . ARC dosExp
    (101) while_w -> . WHILE
    (98) forInit -> . FOR

    CLOSEBRACES     reduce using rule 145 (empty -> .)
    IF              shift and go to state 51
    PRINT           shift and go to state 52
    READ            shift and go to state 55
    ID              shift and go to state 59
    RETURN          shift and go to state 60
    CIRCLE          shift and go to state 73
    SQUARE          shift and go to state 74
    TRIANGLE        shift and go to state 75
    RECTANGLE       shift and go to state 76
    HIDE_STAR       shift and go to state 77
    SHOW_STAR       shift and go to state 78
    COLOR_STAR      shift and go to state 79
    SIZE_STAR       shift and go to state 80
    SETXY           shift and go to state 81
    HAND_DOWN       shift and go to state 82
    HAND_UP         shift and go to state 83
    GO              shift and go to state 84
    LEFT            shift and go to state 85
    RIGHT           shift and go to state 86
    BACK            shift and go to state 87
    ARC             shift and go to state 88
    WHILE           shift and go to state 89
    FOR             shift and go to state 90

    stmt                           shift and go to state 40
    star1                          shift and go to state 117
    empty                          shift and go to state 41
    assignment                     shift and go to state 42
    condition                      shift and go to state 43
    print                          shift and go to state 44
    loop                           shift and go to state 45
    read                           shift and go to state 46
    graphstmt                      shift and go to state 47
    funCall                        shift and go to state 48
    return                         shift and go to state 49
    id                             shift and go to state 50
    while                          shift and go to state 53
    for                            shift and go to state 54
    graphfig                       shift and go to state 56
    graphview                      shift and go to state 57
    graphmove                      shift and go to state 58
    while1                         shift and go to state 61
    for1                           shift and go to state 62
    graphfig1                      shift and go to state 63
    graphfig2                      shift and go to state 64
    graphview0                     shift and go to state 65
    graphview1                     shift and go to state 66
    graphview2                     shift and go to state 67
    graphmove0                     shift and go to state 68
    graphmove1                     shift and go to state 69
    graphmove2                     shift and go to state 70
    while_w                        shift and go to state 71
    forInit                        shift and go to state 72

state 41

    (8) star1 -> empty .

    CLOSEBRACES     reduce using rule 8 (star1 -> empty .)


state 42

    (18) stmt -> assignment .

    IF              reduce using rule 18 (stmt -> assignment .)
    PRINT           reduce using rule 18 (stmt -> assignment .)
    READ            reduce using rule 18 (stmt -> assignment .)
    ID              reduce using rule 18 (stmt -> assignment .)
    RETURN          reduce using rule 18 (stmt -> assignment .)
    CIRCLE          reduce using rule 18 (stmt -> assignment .)
    SQUARE          reduce using rule 18 (stmt -> assignment .)
    TRIANGLE        reduce using rule 18 (stmt -> assignment .)
    RECTANGLE       reduce using rule 18 (stmt -> assignment .)
    HIDE_STAR       reduce using rule 18 (stmt -> assignment .)
    SHOW_STAR       reduce using rule 18 (stmt -> assignment .)
    COLOR_STAR      reduce using rule 18 (stmt -> assignment .)
    SIZE_STAR       reduce using rule 18 (stmt -> assignment .)
    SETXY           reduce using rule 18 (stmt -> assignment .)
    HAND_DOWN       reduce using rule 18 (stmt -> assignment .)
    HAND_UP         reduce using rule 18 (stmt -> assignment .)
    GO              reduce using rule 18 (stmt -> assignment .)
    LEFT            reduce using rule 18 (stmt -> assignment .)
    RIGHT           reduce using rule 18 (stmt -> assignment .)
    BACK            reduce using rule 18 (stmt -> assignment .)
    ARC             reduce using rule 18 (stmt -> assignment .)
    WHILE           reduce using rule 18 (stmt -> assignment .)
    FOR             reduce using rule 18 (stmt -> assignment .)
    CLOSEBRACES     reduce using rule 18 (stmt -> assignment .)


state 43

    (19) stmt -> condition .

    IF              reduce using rule 19 (stmt -> condition .)
    PRINT           reduce using rule 19 (stmt -> condition .)
    READ            reduce using rule 19 (stmt -> condition .)
    ID              reduce using rule 19 (stmt -> condition .)
    RETURN          reduce using rule 19 (stmt -> condition .)
    CIRCLE          reduce using rule 19 (stmt -> condition .)
    SQUARE          reduce using rule 19 (stmt -> condition .)
    TRIANGLE        reduce using rule 19 (stmt -> condition .)
    RECTANGLE       reduce using rule 19 (stmt -> condition .)
    HIDE_STAR       reduce using rule 19 (stmt -> condition .)
    SHOW_STAR       reduce using rule 19 (stmt -> condition .)
    COLOR_STAR      reduce using rule 19 (stmt -> condition .)
    SIZE_STAR       reduce using rule 19 (stmt -> condition .)
    SETXY           reduce using rule 19 (stmt -> condition .)
    HAND_DOWN       reduce using rule 19 (stmt -> condition .)
    HAND_UP         reduce using rule 19 (stmt -> condition .)
    GO              reduce using rule 19 (stmt -> condition .)
    LEFT            reduce using rule 19 (stmt -> condition .)
    RIGHT           reduce using rule 19 (stmt -> condition .)
    BACK            reduce using rule 19 (stmt -> condition .)
    ARC             reduce using rule 19 (stmt -> condition .)
    WHILE           reduce using rule 19 (stmt -> condition .)
    FOR             reduce using rule 19 (stmt -> condition .)
    CLOSEBRACES     reduce using rule 19 (stmt -> condition .)


state 44

    (20) stmt -> print .

    IF              reduce using rule 20 (stmt -> print .)
    PRINT           reduce using rule 20 (stmt -> print .)
    READ            reduce using rule 20 (stmt -> print .)
    ID              reduce using rule 20 (stmt -> print .)
    RETURN          reduce using rule 20 (stmt -> print .)
    CIRCLE          reduce using rule 20 (stmt -> print .)
    SQUARE          reduce using rule 20 (stmt -> print .)
    TRIANGLE        reduce using rule 20 (stmt -> print .)
    RECTANGLE       reduce using rule 20 (stmt -> print .)
    HIDE_STAR       reduce using rule 20 (stmt -> print .)
    SHOW_STAR       reduce using rule 20 (stmt -> print .)
    COLOR_STAR      reduce using rule 20 (stmt -> print .)
    SIZE_STAR       reduce using rule 20 (stmt -> print .)
    SETXY           reduce using rule 20 (stmt -> print .)
    HAND_DOWN       reduce using rule 20 (stmt -> print .)
    HAND_UP         reduce using rule 20 (stmt -> print .)
    GO              reduce using rule 20 (stmt -> print .)
    LEFT            reduce using rule 20 (stmt -> print .)
    RIGHT           reduce using rule 20 (stmt -> print .)
    BACK            reduce using rule 20 (stmt -> print .)
    ARC             reduce using rule 20 (stmt -> print .)
    WHILE           reduce using rule 20 (stmt -> print .)
    FOR             reduce using rule 20 (stmt -> print .)
    CLOSEBRACES     reduce using rule 20 (stmt -> print .)


state 45

    (21) stmt -> loop .

    IF              reduce using rule 21 (stmt -> loop .)
    PRINT           reduce using rule 21 (stmt -> loop .)
    READ            reduce using rule 21 (stmt -> loop .)
    ID              reduce using rule 21 (stmt -> loop .)
    RETURN          reduce using rule 21 (stmt -> loop .)
    CIRCLE          reduce using rule 21 (stmt -> loop .)
    SQUARE          reduce using rule 21 (stmt -> loop .)
    TRIANGLE        reduce using rule 21 (stmt -> loop .)
    RECTANGLE       reduce using rule 21 (stmt -> loop .)
    HIDE_STAR       reduce using rule 21 (stmt -> loop .)
    SHOW_STAR       reduce using rule 21 (stmt -> loop .)
    COLOR_STAR      reduce using rule 21 (stmt -> loop .)
    SIZE_STAR       reduce using rule 21 (stmt -> loop .)
    SETXY           reduce using rule 21 (stmt -> loop .)
    HAND_DOWN       reduce using rule 21 (stmt -> loop .)
    HAND_UP         reduce using rule 21 (stmt -> loop .)
    GO              reduce using rule 21 (stmt -> loop .)
    LEFT            reduce using rule 21 (stmt -> loop .)
    RIGHT           reduce using rule 21 (stmt -> loop .)
    BACK            reduce using rule 21 (stmt -> loop .)
    ARC             reduce using rule 21 (stmt -> loop .)
    WHILE           reduce using rule 21 (stmt -> loop .)
    FOR             reduce using rule 21 (stmt -> loop .)
    CLOSEBRACES     reduce using rule 21 (stmt -> loop .)


state 46

    (22) stmt -> read .

    IF              reduce using rule 22 (stmt -> read .)
    PRINT           reduce using rule 22 (stmt -> read .)
    READ            reduce using rule 22 (stmt -> read .)
    ID              reduce using rule 22 (stmt -> read .)
    RETURN          reduce using rule 22 (stmt -> read .)
    CIRCLE          reduce using rule 22 (stmt -> read .)
    SQUARE          reduce using rule 22 (stmt -> read .)
    TRIANGLE        reduce using rule 22 (stmt -> read .)
    RECTANGLE       reduce using rule 22 (stmt -> read .)
    HIDE_STAR       reduce using rule 22 (stmt -> read .)
    SHOW_STAR       reduce using rule 22 (stmt -> read .)
    COLOR_STAR      reduce using rule 22 (stmt -> read .)
    SIZE_STAR       reduce using rule 22 (stmt -> read .)
    SETXY           reduce using rule 22 (stmt -> read .)
    HAND_DOWN       reduce using rule 22 (stmt -> read .)
    HAND_UP         reduce using rule 22 (stmt -> read .)
    GO              reduce using rule 22 (stmt -> read .)
    LEFT            reduce using rule 22 (stmt -> read .)
    RIGHT           reduce using rule 22 (stmt -> read .)
    BACK            reduce using rule 22 (stmt -> read .)
    ARC             reduce using rule 22 (stmt -> read .)
    WHILE           reduce using rule 22 (stmt -> read .)
    FOR             reduce using rule 22 (stmt -> read .)
    CLOSEBRACES     reduce using rule 22 (stmt -> read .)


state 47

    (23) stmt -> graphstmt .

    IF              reduce using rule 23 (stmt -> graphstmt .)
    PRINT           reduce using rule 23 (stmt -> graphstmt .)
    READ            reduce using rule 23 (stmt -> graphstmt .)
    ID              reduce using rule 23 (stmt -> graphstmt .)
    RETURN          reduce using rule 23 (stmt -> graphstmt .)
    CIRCLE          reduce using rule 23 (stmt -> graphstmt .)
    SQUARE          reduce using rule 23 (stmt -> graphstmt .)
    TRIANGLE        reduce using rule 23 (stmt -> graphstmt .)
    RECTANGLE       reduce using rule 23 (stmt -> graphstmt .)
    HIDE_STAR       reduce using rule 23 (stmt -> graphstmt .)
    SHOW_STAR       reduce using rule 23 (stmt -> graphstmt .)
    COLOR_STAR      reduce using rule 23 (stmt -> graphstmt .)
    SIZE_STAR       reduce using rule 23 (stmt -> graphstmt .)
    SETXY           reduce using rule 23 (stmt -> graphstmt .)
    HAND_DOWN       reduce using rule 23 (stmt -> graphstmt .)
    HAND_UP         reduce using rule 23 (stmt -> graphstmt .)
    GO              reduce using rule 23 (stmt -> graphstmt .)
    LEFT            reduce using rule 23 (stmt -> graphstmt .)
    RIGHT           reduce using rule 23 (stmt -> graphstmt .)
    BACK            reduce using rule 23 (stmt -> graphstmt .)
    ARC             reduce using rule 23 (stmt -> graphstmt .)
    WHILE           reduce using rule 23 (stmt -> graphstmt .)
    FOR             reduce using rule 23 (stmt -> graphstmt .)
    CLOSEBRACES     reduce using rule 23 (stmt -> graphstmt .)


state 48

    (24) stmt -> funCall . SEMICOLON

    SEMICOLON       shift and go to state 118


state 49

    (25) stmt -> return .

    IF              reduce using rule 25 (stmt -> return .)
    PRINT           reduce using rule 25 (stmt -> return .)
    READ            reduce using rule 25 (stmt -> return .)
    ID              reduce using rule 25 (stmt -> return .)
    RETURN          reduce using rule 25 (stmt -> return .)
    CIRCLE          reduce using rule 25 (stmt -> return .)
    SQUARE          reduce using rule 25 (stmt -> return .)
    TRIANGLE        reduce using rule 25 (stmt -> return .)
    RECTANGLE       reduce using rule 25 (stmt -> return .)
    HIDE_STAR       reduce using rule 25 (stmt -> return .)
    SHOW_STAR       reduce using rule 25 (stmt -> return .)
    COLOR_STAR      reduce using rule 25 (stmt -> return .)
    SIZE_STAR       reduce using rule 25 (stmt -> return .)
    SETXY           reduce using rule 25 (stmt -> return .)
    HAND_DOWN       reduce using rule 25 (stmt -> return .)
    HAND_UP         reduce using rule 25 (stmt -> return .)
    GO              reduce using rule 25 (stmt -> return .)
    LEFT            reduce using rule 25 (stmt -> return .)
    RIGHT           reduce using rule 25 (stmt -> return .)
    BACK            reduce using rule 25 (stmt -> return .)
    ARC             reduce using rule 25 (stmt -> return .)
    WHILE           reduce using rule 25 (stmt -> return .)
    FOR             reduce using rule 25 (stmt -> return .)
    CLOSEBRACES     reduce using rule 25 (stmt -> return .)


state 50

    (26) assignment -> id . equals assignment3 SEMICOLON
    (63) equals -> . EQUALS

    EQUALS          shift and go to state 37

    equals                         shift and go to state 119

state 51

    (83) condition -> IF . head_cond body condition1
    (89) head_cond -> . OPENPAREN expression close_condition

    OPENPAREN       shift and go to state 121

    head_cond                      shift and go to state 120

state 52

    (58) print -> PRINT . OPENPAREN expression CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 122


state 53

    (16) loop -> while .

    IF              reduce using rule 16 (loop -> while .)
    PRINT           reduce using rule 16 (loop -> while .)
    READ            reduce using rule 16 (loop -> while .)
    ID              reduce using rule 16 (loop -> while .)
    RETURN          reduce using rule 16 (loop -> while .)
    CIRCLE          reduce using rule 16 (loop -> while .)
    SQUARE          reduce using rule 16 (loop -> while .)
    TRIANGLE        reduce using rule 16 (loop -> while .)
    RECTANGLE       reduce using rule 16 (loop -> while .)
    HIDE_STAR       reduce using rule 16 (loop -> while .)
    SHOW_STAR       reduce using rule 16 (loop -> while .)
    COLOR_STAR      reduce using rule 16 (loop -> while .)
    SIZE_STAR       reduce using rule 16 (loop -> while .)
    SETXY           reduce using rule 16 (loop -> while .)
    HAND_DOWN       reduce using rule 16 (loop -> while .)
    HAND_UP         reduce using rule 16 (loop -> while .)
    GO              reduce using rule 16 (loop -> while .)
    LEFT            reduce using rule 16 (loop -> while .)
    RIGHT           reduce using rule 16 (loop -> while .)
    BACK            reduce using rule 16 (loop -> while .)
    ARC             reduce using rule 16 (loop -> while .)
    WHILE           reduce using rule 16 (loop -> while .)
    FOR             reduce using rule 16 (loop -> while .)
    CLOSEBRACES     reduce using rule 16 (loop -> while .)


state 54

    (17) loop -> for .

    IF              reduce using rule 17 (loop -> for .)
    PRINT           reduce using rule 17 (loop -> for .)
    READ            reduce using rule 17 (loop -> for .)
    ID              reduce using rule 17 (loop -> for .)
    RETURN          reduce using rule 17 (loop -> for .)
    CIRCLE          reduce using rule 17 (loop -> for .)
    SQUARE          reduce using rule 17 (loop -> for .)
    TRIANGLE        reduce using rule 17 (loop -> for .)
    RECTANGLE       reduce using rule 17 (loop -> for .)
    HIDE_STAR       reduce using rule 17 (loop -> for .)
    SHOW_STAR       reduce using rule 17 (loop -> for .)
    COLOR_STAR      reduce using rule 17 (loop -> for .)
    SIZE_STAR       reduce using rule 17 (loop -> for .)
    SETXY           reduce using rule 17 (loop -> for .)
    HAND_DOWN       reduce using rule 17 (loop -> for .)
    HAND_UP         reduce using rule 17 (loop -> for .)
    GO              reduce using rule 17 (loop -> for .)
    LEFT            reduce using rule 17 (loop -> for .)
    RIGHT           reduce using rule 17 (loop -> for .)
    BACK            reduce using rule 17 (loop -> for .)
    ARC             reduce using rule 17 (loop -> for .)
    WHILE           reduce using rule 17 (loop -> for .)
    FOR             reduce using rule 17 (loop -> for .)
    CLOSEBRACES     reduce using rule 17 (loop -> for .)


state 55

    (59) read -> READ . OPENPAREN id read1 CLOSEPAREN SEMICOLON

    OPENPAREN       shift and go to state 123


state 56

    (104) graphstmt -> graphfig .

    IF              reduce using rule 104 (graphstmt -> graphfig .)
    PRINT           reduce using rule 104 (graphstmt -> graphfig .)
    READ            reduce using rule 104 (graphstmt -> graphfig .)
    ID              reduce using rule 104 (graphstmt -> graphfig .)
    RETURN          reduce using rule 104 (graphstmt -> graphfig .)
    CIRCLE          reduce using rule 104 (graphstmt -> graphfig .)
    SQUARE          reduce using rule 104 (graphstmt -> graphfig .)
    TRIANGLE        reduce using rule 104 (graphstmt -> graphfig .)
    RECTANGLE       reduce using rule 104 (graphstmt -> graphfig .)
    HIDE_STAR       reduce using rule 104 (graphstmt -> graphfig .)
    SHOW_STAR       reduce using rule 104 (graphstmt -> graphfig .)
    COLOR_STAR      reduce using rule 104 (graphstmt -> graphfig .)
    SIZE_STAR       reduce using rule 104 (graphstmt -> graphfig .)
    SETXY           reduce using rule 104 (graphstmt -> graphfig .)
    HAND_DOWN       reduce using rule 104 (graphstmt -> graphfig .)
    HAND_UP         reduce using rule 104 (graphstmt -> graphfig .)
    GO              reduce using rule 104 (graphstmt -> graphfig .)
    LEFT            reduce using rule 104 (graphstmt -> graphfig .)
    RIGHT           reduce using rule 104 (graphstmt -> graphfig .)
    BACK            reduce using rule 104 (graphstmt -> graphfig .)
    ARC             reduce using rule 104 (graphstmt -> graphfig .)
    WHILE           reduce using rule 104 (graphstmt -> graphfig .)
    FOR             reduce using rule 104 (graphstmt -> graphfig .)
    CLOSEBRACES     reduce using rule 104 (graphstmt -> graphfig .)


state 57

    (105) graphstmt -> graphview .

    IF              reduce using rule 105 (graphstmt -> graphview .)
    PRINT           reduce using rule 105 (graphstmt -> graphview .)
    READ            reduce using rule 105 (graphstmt -> graphview .)
    ID              reduce using rule 105 (graphstmt -> graphview .)
    RETURN          reduce using rule 105 (graphstmt -> graphview .)
    CIRCLE          reduce using rule 105 (graphstmt -> graphview .)
    SQUARE          reduce using rule 105 (graphstmt -> graphview .)
    TRIANGLE        reduce using rule 105 (graphstmt -> graphview .)
    RECTANGLE       reduce using rule 105 (graphstmt -> graphview .)
    HIDE_STAR       reduce using rule 105 (graphstmt -> graphview .)
    SHOW_STAR       reduce using rule 105 (graphstmt -> graphview .)
    COLOR_STAR      reduce using rule 105 (graphstmt -> graphview .)
    SIZE_STAR       reduce using rule 105 (graphstmt -> graphview .)
    SETXY           reduce using rule 105 (graphstmt -> graphview .)
    HAND_DOWN       reduce using rule 105 (graphstmt -> graphview .)
    HAND_UP         reduce using rule 105 (graphstmt -> graphview .)
    GO              reduce using rule 105 (graphstmt -> graphview .)
    LEFT            reduce using rule 105 (graphstmt -> graphview .)
    RIGHT           reduce using rule 105 (graphstmt -> graphview .)
    BACK            reduce using rule 105 (graphstmt -> graphview .)
    ARC             reduce using rule 105 (graphstmt -> graphview .)
    WHILE           reduce using rule 105 (graphstmt -> graphview .)
    FOR             reduce using rule 105 (graphstmt -> graphview .)
    CLOSEBRACES     reduce using rule 105 (graphstmt -> graphview .)


state 58

    (106) graphstmt -> graphmove .

    IF              reduce using rule 106 (graphstmt -> graphmove .)
    PRINT           reduce using rule 106 (graphstmt -> graphmove .)
    READ            reduce using rule 106 (graphstmt -> graphmove .)
    ID              reduce using rule 106 (graphstmt -> graphmove .)
    RETURN          reduce using rule 106 (graphstmt -> graphmove .)
    CIRCLE          reduce using rule 106 (graphstmt -> graphmove .)
    SQUARE          reduce using rule 106 (graphstmt -> graphmove .)
    TRIANGLE        reduce using rule 106 (graphstmt -> graphmove .)
    RECTANGLE       reduce using rule 106 (graphstmt -> graphmove .)
    HIDE_STAR       reduce using rule 106 (graphstmt -> graphmove .)
    SHOW_STAR       reduce using rule 106 (graphstmt -> graphmove .)
    COLOR_STAR      reduce using rule 106 (graphstmt -> graphmove .)
    SIZE_STAR       reduce using rule 106 (graphstmt -> graphmove .)
    SETXY           reduce using rule 106 (graphstmt -> graphmove .)
    HAND_DOWN       reduce using rule 106 (graphstmt -> graphmove .)
    HAND_UP         reduce using rule 106 (graphstmt -> graphmove .)
    GO              reduce using rule 106 (graphstmt -> graphmove .)
    LEFT            reduce using rule 106 (graphstmt -> graphmove .)
    RIGHT           reduce using rule 106 (graphstmt -> graphmove .)
    BACK            reduce using rule 106 (graphstmt -> graphmove .)
    ARC             reduce using rule 106 (graphstmt -> graphmove .)
    WHILE           reduce using rule 106 (graphstmt -> graphmove .)
    FOR             reduce using rule 106 (graphstmt -> graphmove .)
    CLOSEBRACES     reduce using rule 106 (graphstmt -> graphmove .)


state 59

    (65) funCall -> ID . iniciaFunCall funCall2 terminaFunCall
    (64) id -> ID . vectormatriz
    (66) iniciaFunCall -> . OPENPAREN
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 126
    OPENBRACKET     shift and go to state 113

    iniciaFunCall                  shift and go to state 124
    vectormatriz                   shift and go to state 125
    vm1                            shift and go to state 114

state 60

    (76) return -> RETURN . return1 SEMICOLON
    (77) return1 -> . vcte
    (78) return1 -> . exp
    (29) vcte -> . cte_int
    (30) vcte -> . cte_float
    (31) vcte -> . cte_string
    (32) vcte -> . id
    (33) vcte -> . funCall
    (34) vcte -> . vectormatriz
    (133) exp -> . term
    (134) exp -> . term exp_o exp
    (73) cte_int -> . CTEINT
    (74) cte_float -> . CTEFLOAT
    (75) cte_string -> . CTESTRING
    (64) id -> . ID vectormatriz
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1
    (139) term -> . factor term_o term
    (140) term -> . factor
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (143) factor -> . vcte
    (144) factor -> . openP expression closeP
    (137) openP -> . OPENPAREN

    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113
    OPENPAREN       shift and go to state 109

    return1                        shift and go to state 127
    vcte                           shift and go to state 128
    exp                            shift and go to state 129
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    term                           shift and go to state 99
    vm1                            shift and go to state 114
    factor                         shift and go to state 100
    openP                          shift and go to state 102

state 61

    (99) while -> while1 . body
    (90) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 131

    body                           shift and go to state 130

state 62

    (94) for -> for1 . body
    (90) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 131

    body                           shift and go to state 132

state 63

    (107) graphfig -> graphfig1 . SEMICOLON

    SEMICOLON       shift and go to state 133


state 64

    (108) graphfig -> graphfig2 . SEMICOLON

    SEMICOLON       shift and go to state 134


state 65

    (123) graphview -> graphview0 . SEMICOLON

    SEMICOLON       shift and go to state 135


state 66

    (124) graphview -> graphview1 . SEMICOLON

    SEMICOLON       shift and go to state 136


state 67

    (125) graphview -> graphview2 . SEMICOLON

    SEMICOLON       shift and go to state 137


state 68

    (113) graphmove -> graphmove0 . SEMICOLON

    SEMICOLON       shift and go to state 138


state 69

    (114) graphmove -> graphmove1 . SEMICOLON

    SEMICOLON       shift and go to state 139


state 70

    (115) graphmove -> graphmove2 . SEMICOLON

    SEMICOLON       shift and go to state 140


state 71

    (100) while1 -> while_w . OPENPAREN expression CLOSEPAREN

    OPENPAREN       shift and go to state 141


state 72

    (95) for1 -> forInit . OPENPAREN ID for2

    OPENPAREN       shift and go to state 142


state 73

    (109) graphfig1 -> CIRCLE . unaExp
    (103) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 144

    unaExp                         shift and go to state 143

state 74

    (110) graphfig1 -> SQUARE . unaExp
    (103) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 144

    unaExp                         shift and go to state 145

state 75

    (111) graphfig2 -> TRIANGLE . dosExp
    (102) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 147

    dosExp                         shift and go to state 146

state 76

    (112) graphfig2 -> RECTANGLE . dosExp
    (102) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 147

    dosExp                         shift and go to state 148

state 77

    (126) graphview0 -> HIDE_STAR .

    SEMICOLON       reduce using rule 126 (graphview0 -> HIDE_STAR .)


state 78

    (127) graphview0 -> SHOW_STAR .

    SEMICOLON       reduce using rule 127 (graphview0 -> SHOW_STAR .)


state 79

    (128) graphview1 -> COLOR_STAR . unaExp
    (103) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 144

    unaExp                         shift and go to state 149

state 80

    (129) graphview1 -> SIZE_STAR . unaExp
    (103) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 144

    unaExp                         shift and go to state 150

state 81

    (130) graphview2 -> SETXY . dosExp
    (102) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 147

    dosExp                         shift and go to state 151

state 82

    (116) graphmove0 -> HAND_DOWN .

    SEMICOLON       reduce using rule 116 (graphmove0 -> HAND_DOWN .)


state 83

    (117) graphmove0 -> HAND_UP .

    SEMICOLON       reduce using rule 117 (graphmove0 -> HAND_UP .)


state 84

    (118) graphmove1 -> GO . unaExp
    (103) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 144

    unaExp                         shift and go to state 152

state 85

    (119) graphmove1 -> LEFT . unaExp
    (103) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 144

    unaExp                         shift and go to state 153

state 86

    (120) graphmove1 -> RIGHT . unaExp
    (103) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 144

    unaExp                         shift and go to state 154

state 87

    (121) graphmove1 -> BACK . unaExp
    (103) unaExp -> . OPENPAREN exp CLOSEPAREN

    OPENPAREN       shift and go to state 144

    unaExp                         shift and go to state 155

state 88

    (122) graphmove2 -> ARC . dosExp
    (102) dosExp -> . OPENPAREN exp COMMA exp CLOSEPAREN

    OPENPAREN       shift and go to state 147

    dosExp                         shift and go to state 156

state 89

    (101) while_w -> WHILE .

    OPENPAREN       reduce using rule 101 (while_w -> WHILE .)


state 90

    (98) forInit -> FOR .

    OPENPAREN       reduce using rule 98 (forInit -> FOR .)


state 91

    (44) function -> FUN functionI function2 inicia_fun . declara_vars function4 termina_fun
    (9) declara_vars -> . vars declara_vars
    (10) declara_vars -> . empty
    (11) vars -> . type ID dimensionada equals exp SEMICOLON
    (12) vars -> . type ID dimensionada SEMICOLON
    (145) empty -> .
    (55) type -> . INT
    (56) type -> . FLOAT
    (57) type -> . STRING

    IF              reduce using rule 145 (empty -> .)
    PRINT           reduce using rule 145 (empty -> .)
    READ            reduce using rule 145 (empty -> .)
    ID              reduce using rule 145 (empty -> .)
    RETURN          reduce using rule 145 (empty -> .)
    CIRCLE          reduce using rule 145 (empty -> .)
    SQUARE          reduce using rule 145 (empty -> .)
    TRIANGLE        reduce using rule 145 (empty -> .)
    RECTANGLE       reduce using rule 145 (empty -> .)
    HIDE_STAR       reduce using rule 145 (empty -> .)
    SHOW_STAR       reduce using rule 145 (empty -> .)
    COLOR_STAR      reduce using rule 145 (empty -> .)
    SIZE_STAR       reduce using rule 145 (empty -> .)
    SETXY           reduce using rule 145 (empty -> .)
    HAND_DOWN       reduce using rule 145 (empty -> .)
    HAND_UP         reduce using rule 145 (empty -> .)
    GO              reduce using rule 145 (empty -> .)
    LEFT            reduce using rule 145 (empty -> .)
    RIGHT           reduce using rule 145 (empty -> .)
    BACK            reduce using rule 145 (empty -> .)
    ARC             reduce using rule 145 (empty -> .)
    WHILE           reduce using rule 145 (empty -> .)
    FOR             reduce using rule 145 (empty -> .)
    CLOSEBRACES     reduce using rule 145 (empty -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    declara_vars                   shift and go to state 157
    vars                           shift and go to state 6
    empty                          shift and go to state 7
    type                           shift and go to state 8

state 92

    (45) inicia_fun -> OPENBRACES .

    INT             reduce using rule 45 (inicia_fun -> OPENBRACES .)
    FLOAT           reduce using rule 45 (inicia_fun -> OPENBRACES .)
    STRING          reduce using rule 45 (inicia_fun -> OPENBRACES .)
    IF              reduce using rule 45 (inicia_fun -> OPENBRACES .)
    PRINT           reduce using rule 45 (inicia_fun -> OPENBRACES .)
    READ            reduce using rule 45 (inicia_fun -> OPENBRACES .)
    ID              reduce using rule 45 (inicia_fun -> OPENBRACES .)
    RETURN          reduce using rule 45 (inicia_fun -> OPENBRACES .)
    CIRCLE          reduce using rule 45 (inicia_fun -> OPENBRACES .)
    SQUARE          reduce using rule 45 (inicia_fun -> OPENBRACES .)
    TRIANGLE        reduce using rule 45 (inicia_fun -> OPENBRACES .)
    RECTANGLE       reduce using rule 45 (inicia_fun -> OPENBRACES .)
    HIDE_STAR       reduce using rule 45 (inicia_fun -> OPENBRACES .)
    SHOW_STAR       reduce using rule 45 (inicia_fun -> OPENBRACES .)
    COLOR_STAR      reduce using rule 45 (inicia_fun -> OPENBRACES .)
    SIZE_STAR       reduce using rule 45 (inicia_fun -> OPENBRACES .)
    SETXY           reduce using rule 45 (inicia_fun -> OPENBRACES .)
    HAND_DOWN       reduce using rule 45 (inicia_fun -> OPENBRACES .)
    HAND_UP         reduce using rule 45 (inicia_fun -> OPENBRACES .)
    GO              reduce using rule 45 (inicia_fun -> OPENBRACES .)
    LEFT            reduce using rule 45 (inicia_fun -> OPENBRACES .)
    RIGHT           reduce using rule 45 (inicia_fun -> OPENBRACES .)
    BACK            reduce using rule 45 (inicia_fun -> OPENBRACES .)
    ARC             reduce using rule 45 (inicia_fun -> OPENBRACES .)
    WHILE           reduce using rule 45 (inicia_fun -> OPENBRACES .)
    FOR             reduce using rule 45 (inicia_fun -> OPENBRACES .)
    CLOSEBRACES     reduce using rule 45 (inicia_fun -> OPENBRACES .)


state 93

    (47) function2 -> OPENPAREN function3 . CLOSEPAREN

    CLOSEPAREN      shift and go to state 158


state 94

    (48) function3 -> funParam . function5
    (52) function5 -> . COMMA funParam function5
    (53) function5 -> . empty
    (145) empty -> .

    COMMA           shift and go to state 160
    CLOSEPAREN      reduce using rule 145 (empty -> .)

    function5                      shift and go to state 159
    empty                          shift and go to state 161

state 95

    (49) function3 -> empty .

    CLOSEPAREN      reduce using rule 49 (function3 -> empty .)


state 96

    (54) funParam -> type . ID

    ID              shift and go to state 162


state 97

    (64) id -> ID . vectormatriz
    (65) funCall -> ID . iniciaFunCall funCall2 terminaFunCall
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1
    (66) iniciaFunCall -> . OPENPAREN
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENBRACKET     shift and go to state 113
    OPENPAREN       shift and go to state 126

    vectormatriz                   shift and go to state 125
    iniciaFunCall                  shift and go to state 124
    vm1                            shift and go to state 114

state 98

    (11) vars -> type ID dimensionada equals exp . SEMICOLON

    SEMICOLON       shift and go to state 163


state 99

    (133) exp -> term .
    (134) exp -> term . exp_o exp
    (135) exp_o -> . ADDITION
    (136) exp_o -> . SUBSTRACTION

    SEMICOLON       reduce using rule 133 (exp -> term .)
    GREATER         reduce using rule 133 (exp -> term .)
    LESS            reduce using rule 133 (exp -> term .)
    NOTEQUAL        reduce using rule 133 (exp -> term .)
    ISEQUAL         reduce using rule 133 (exp -> term .)
    CLOSEPAREN      reduce using rule 133 (exp -> term .)
    COMMA           reduce using rule 133 (exp -> term .)
    CLOSEBRACKET    reduce using rule 133 (exp -> term .)
    ADDITION        shift and go to state 165
    SUBSTRACTION    shift and go to state 166

    exp_o                          shift and go to state 164

state 100

    (139) term -> factor . term_o term
    (140) term -> factor .
    (141) term_o -> . MULTIPLICATION
    (142) term_o -> . DIVISION

    ADDITION        reduce using rule 140 (term -> factor .)
    SUBSTRACTION    reduce using rule 140 (term -> factor .)
    SEMICOLON       reduce using rule 140 (term -> factor .)
    GREATER         reduce using rule 140 (term -> factor .)
    LESS            reduce using rule 140 (term -> factor .)
    NOTEQUAL        reduce using rule 140 (term -> factor .)
    ISEQUAL         reduce using rule 140 (term -> factor .)
    CLOSEPAREN      reduce using rule 140 (term -> factor .)
    COMMA           reduce using rule 140 (term -> factor .)
    CLOSEBRACKET    reduce using rule 140 (term -> factor .)
    MULTIPLICATION  shift and go to state 168
    DIVISION        shift and go to state 169

    term_o                         shift and go to state 167

state 101

    (143) factor -> vcte .

    MULTIPLICATION  reduce using rule 143 (factor -> vcte .)
    DIVISION        reduce using rule 143 (factor -> vcte .)
    ADDITION        reduce using rule 143 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 143 (factor -> vcte .)
    SEMICOLON       reduce using rule 143 (factor -> vcte .)
    GREATER         reduce using rule 143 (factor -> vcte .)
    LESS            reduce using rule 143 (factor -> vcte .)
    NOTEQUAL        reduce using rule 143 (factor -> vcte .)
    ISEQUAL         reduce using rule 143 (factor -> vcte .)
    CLOSEPAREN      reduce using rule 143 (factor -> vcte .)
    COMMA           reduce using rule 143 (factor -> vcte .)
    CLOSEBRACKET    reduce using rule 143 (factor -> vcte .)


state 102

    (144) factor -> openP . expression closeP
    (131) expression -> . exp loper exp
    (132) expression -> . exp
    (133) exp -> . term
    (134) exp -> . term exp_o exp
    (139) term -> . factor term_o term
    (140) term -> . factor
    (143) factor -> . vcte
    (144) factor -> . openP expression closeP
    (29) vcte -> . cte_int
    (30) vcte -> . cte_float
    (31) vcte -> . cte_string
    (32) vcte -> . id
    (33) vcte -> . funCall
    (34) vcte -> . vectormatriz
    (137) openP -> . OPENPAREN
    (73) cte_int -> . CTEINT
    (74) cte_float -> . CTEFLOAT
    (75) cte_string -> . CTESTRING
    (64) id -> . ID vectormatriz
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    openP                          shift and go to state 102
    expression                     shift and go to state 170
    exp                            shift and go to state 171
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 103

    (29) vcte -> cte_int .

    MULTIPLICATION  reduce using rule 29 (vcte -> cte_int .)
    DIVISION        reduce using rule 29 (vcte -> cte_int .)
    ADDITION        reduce using rule 29 (vcte -> cte_int .)
    SUBSTRACTION    reduce using rule 29 (vcte -> cte_int .)
    SEMICOLON       reduce using rule 29 (vcte -> cte_int .)
    GREATER         reduce using rule 29 (vcte -> cte_int .)
    LESS            reduce using rule 29 (vcte -> cte_int .)
    NOTEQUAL        reduce using rule 29 (vcte -> cte_int .)
    ISEQUAL         reduce using rule 29 (vcte -> cte_int .)
    CLOSEPAREN      reduce using rule 29 (vcte -> cte_int .)
    COMMA           reduce using rule 29 (vcte -> cte_int .)
    CLOSEBRACKET    reduce using rule 29 (vcte -> cte_int .)


state 104

    (30) vcte -> cte_float .

    MULTIPLICATION  reduce using rule 30 (vcte -> cte_float .)
    DIVISION        reduce using rule 30 (vcte -> cte_float .)
    ADDITION        reduce using rule 30 (vcte -> cte_float .)
    SUBSTRACTION    reduce using rule 30 (vcte -> cte_float .)
    SEMICOLON       reduce using rule 30 (vcte -> cte_float .)
    GREATER         reduce using rule 30 (vcte -> cte_float .)
    LESS            reduce using rule 30 (vcte -> cte_float .)
    NOTEQUAL        reduce using rule 30 (vcte -> cte_float .)
    ISEQUAL         reduce using rule 30 (vcte -> cte_float .)
    CLOSEPAREN      reduce using rule 30 (vcte -> cte_float .)
    COMMA           reduce using rule 30 (vcte -> cte_float .)
    CLOSEBRACKET    reduce using rule 30 (vcte -> cte_float .)


state 105

    (31) vcte -> cte_string .

    MULTIPLICATION  reduce using rule 31 (vcte -> cte_string .)
    DIVISION        reduce using rule 31 (vcte -> cte_string .)
    ADDITION        reduce using rule 31 (vcte -> cte_string .)
    SUBSTRACTION    reduce using rule 31 (vcte -> cte_string .)
    SEMICOLON       reduce using rule 31 (vcte -> cte_string .)
    GREATER         reduce using rule 31 (vcte -> cte_string .)
    LESS            reduce using rule 31 (vcte -> cte_string .)
    NOTEQUAL        reduce using rule 31 (vcte -> cte_string .)
    ISEQUAL         reduce using rule 31 (vcte -> cte_string .)
    CLOSEPAREN      reduce using rule 31 (vcte -> cte_string .)
    COMMA           reduce using rule 31 (vcte -> cte_string .)
    CLOSEBRACKET    reduce using rule 31 (vcte -> cte_string .)


state 106

    (32) vcte -> id .

    MULTIPLICATION  reduce using rule 32 (vcte -> id .)
    DIVISION        reduce using rule 32 (vcte -> id .)
    ADDITION        reduce using rule 32 (vcte -> id .)
    SUBSTRACTION    reduce using rule 32 (vcte -> id .)
    SEMICOLON       reduce using rule 32 (vcte -> id .)
    GREATER         reduce using rule 32 (vcte -> id .)
    LESS            reduce using rule 32 (vcte -> id .)
    NOTEQUAL        reduce using rule 32 (vcte -> id .)
    ISEQUAL         reduce using rule 32 (vcte -> id .)
    CLOSEPAREN      reduce using rule 32 (vcte -> id .)
    COMMA           reduce using rule 32 (vcte -> id .)
    CLOSEBRACKET    reduce using rule 32 (vcte -> id .)


state 107

    (33) vcte -> funCall .

    MULTIPLICATION  reduce using rule 33 (vcte -> funCall .)
    DIVISION        reduce using rule 33 (vcte -> funCall .)
    ADDITION        reduce using rule 33 (vcte -> funCall .)
    SUBSTRACTION    reduce using rule 33 (vcte -> funCall .)
    SEMICOLON       reduce using rule 33 (vcte -> funCall .)
    GREATER         reduce using rule 33 (vcte -> funCall .)
    LESS            reduce using rule 33 (vcte -> funCall .)
    NOTEQUAL        reduce using rule 33 (vcte -> funCall .)
    ISEQUAL         reduce using rule 33 (vcte -> funCall .)
    CLOSEPAREN      reduce using rule 33 (vcte -> funCall .)
    COMMA           reduce using rule 33 (vcte -> funCall .)
    CLOSEBRACKET    reduce using rule 33 (vcte -> funCall .)


state 108

    (34) vcte -> vectormatriz .

    MULTIPLICATION  reduce using rule 34 (vcte -> vectormatriz .)
    DIVISION        reduce using rule 34 (vcte -> vectormatriz .)
    ADDITION        reduce using rule 34 (vcte -> vectormatriz .)
    SUBSTRACTION    reduce using rule 34 (vcte -> vectormatriz .)
    SEMICOLON       reduce using rule 34 (vcte -> vectormatriz .)
    GREATER         reduce using rule 34 (vcte -> vectormatriz .)
    LESS            reduce using rule 34 (vcte -> vectormatriz .)
    NOTEQUAL        reduce using rule 34 (vcte -> vectormatriz .)
    ISEQUAL         reduce using rule 34 (vcte -> vectormatriz .)
    CLOSEPAREN      reduce using rule 34 (vcte -> vectormatriz .)
    COMMA           reduce using rule 34 (vcte -> vectormatriz .)
    CLOSEBRACKET    reduce using rule 34 (vcte -> vectormatriz .)


state 109

    (137) openP -> OPENPAREN .

    OPENPAREN       reduce using rule 137 (openP -> OPENPAREN .)
    CTEINT          reduce using rule 137 (openP -> OPENPAREN .)
    CTEFLOAT        reduce using rule 137 (openP -> OPENPAREN .)
    CTESTRING       reduce using rule 137 (openP -> OPENPAREN .)
    ID              reduce using rule 137 (openP -> OPENPAREN .)
    OPENBRACKET     reduce using rule 137 (openP -> OPENPAREN .)


state 110

    (73) cte_int -> CTEINT .

    MULTIPLICATION  reduce using rule 73 (cte_int -> CTEINT .)
    DIVISION        reduce using rule 73 (cte_int -> CTEINT .)
    ADDITION        reduce using rule 73 (cte_int -> CTEINT .)
    SUBSTRACTION    reduce using rule 73 (cte_int -> CTEINT .)
    SEMICOLON       reduce using rule 73 (cte_int -> CTEINT .)
    GREATER         reduce using rule 73 (cte_int -> CTEINT .)
    LESS            reduce using rule 73 (cte_int -> CTEINT .)
    NOTEQUAL        reduce using rule 73 (cte_int -> CTEINT .)
    ISEQUAL         reduce using rule 73 (cte_int -> CTEINT .)
    CLOSEPAREN      reduce using rule 73 (cte_int -> CTEINT .)
    COMMA           reduce using rule 73 (cte_int -> CTEINT .)
    CLOSEBRACKET    reduce using rule 73 (cte_int -> CTEINT .)


state 111

    (74) cte_float -> CTEFLOAT .

    MULTIPLICATION  reduce using rule 74 (cte_float -> CTEFLOAT .)
    DIVISION        reduce using rule 74 (cte_float -> CTEFLOAT .)
    ADDITION        reduce using rule 74 (cte_float -> CTEFLOAT .)
    SUBSTRACTION    reduce using rule 74 (cte_float -> CTEFLOAT .)
    SEMICOLON       reduce using rule 74 (cte_float -> CTEFLOAT .)
    GREATER         reduce using rule 74 (cte_float -> CTEFLOAT .)
    LESS            reduce using rule 74 (cte_float -> CTEFLOAT .)
    NOTEQUAL        reduce using rule 74 (cte_float -> CTEFLOAT .)
    ISEQUAL         reduce using rule 74 (cte_float -> CTEFLOAT .)
    CLOSEPAREN      reduce using rule 74 (cte_float -> CTEFLOAT .)
    COMMA           reduce using rule 74 (cte_float -> CTEFLOAT .)
    CLOSEBRACKET    reduce using rule 74 (cte_float -> CTEFLOAT .)


state 112

    (75) cte_string -> CTESTRING .

    MULTIPLICATION  reduce using rule 75 (cte_string -> CTESTRING .)
    DIVISION        reduce using rule 75 (cte_string -> CTESTRING .)
    ADDITION        reduce using rule 75 (cte_string -> CTESTRING .)
    SUBSTRACTION    reduce using rule 75 (cte_string -> CTESTRING .)
    SEMICOLON       reduce using rule 75 (cte_string -> CTESTRING .)
    GREATER         reduce using rule 75 (cte_string -> CTESTRING .)
    LESS            reduce using rule 75 (cte_string -> CTESTRING .)
    NOTEQUAL        reduce using rule 75 (cte_string -> CTESTRING .)
    ISEQUAL         reduce using rule 75 (cte_string -> CTESTRING .)
    CLOSEPAREN      reduce using rule 75 (cte_string -> CTESTRING .)
    COMMA           reduce using rule 75 (cte_string -> CTESTRING .)
    CLOSEBRACKET    reduce using rule 75 (cte_string -> CTESTRING .)


state 113

    (35) vectormatriz -> OPENBRACKET . vm1 CLOSEBRACKET
    (37) vm1 -> OPENBRACKET . vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> OPENBRACKET . vm2 CLOSEBRACKET
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (39) vm2 -> . exp COMMA vm2
    (40) vm2 -> . exp
    (41) vm2 -> . empty
    (133) exp -> . term
    (134) exp -> . term exp_o exp
    (145) empty -> .
    (139) term -> . factor term_o term
    (140) term -> . factor
    (143) factor -> . vcte
    (144) factor -> . openP expression closeP
    (29) vcte -> . cte_int
    (30) vcte -> . cte_float
    (31) vcte -> . cte_string
    (32) vcte -> . id
    (33) vcte -> . funCall
    (34) vcte -> . vectormatriz
    (137) openP -> . OPENPAREN
    (73) cte_int -> . CTEINT
    (74) cte_float -> . CTEFLOAT
    (75) cte_string -> . CTESTRING
    (64) id -> . ID vectormatriz
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1

    OPENBRACKET     shift and go to state 172
    CLOSEBRACKET    reduce using rule 145 (empty -> .)
    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97

    vm1                            shift and go to state 173
    vm2                            shift and go to state 174
    exp                            shift and go to state 175
    empty                          shift and go to state 176
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108

state 114

    (36) vectormatriz -> vm1 .

    MULTIPLICATION  reduce using rule 36 (vectormatriz -> vm1 .)
    DIVISION        reduce using rule 36 (vectormatriz -> vm1 .)
    ADDITION        reduce using rule 36 (vectormatriz -> vm1 .)
    SUBSTRACTION    reduce using rule 36 (vectormatriz -> vm1 .)
    SEMICOLON       reduce using rule 36 (vectormatriz -> vm1 .)
    EQUALS          reduce using rule 36 (vectormatriz -> vm1 .)
    GREATER         reduce using rule 36 (vectormatriz -> vm1 .)
    LESS            reduce using rule 36 (vectormatriz -> vm1 .)
    NOTEQUAL        reduce using rule 36 (vectormatriz -> vm1 .)
    ISEQUAL         reduce using rule 36 (vectormatriz -> vm1 .)
    CLOSEPAREN      reduce using rule 36 (vectormatriz -> vm1 .)
    COMMA           reduce using rule 36 (vectormatriz -> vm1 .)
    CLOSEBRACKET    reduce using rule 36 (vectormatriz -> vm1 .)
    OPENBRACKET     reduce using rule 36 (vectormatriz -> vm1 .)


state 115

    (13) dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET .
    (14) dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET . OPENBRACKET CTEINT CLOSEBRACKET

    SEMICOLON       reduce using rule 13 (dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET .)
    EQUALS          reduce using rule 13 (dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET .)
    OPENBRACKET     shift and go to state 177


state 116

    (4) star -> starI declara_vars star1 CLOSEBRACES .

    $end            reduce using rule 4 (star -> starI declara_vars star1 CLOSEBRACES .)


state 117

    (7) star1 -> stmt star1 .

    CLOSEBRACES     reduce using rule 7 (star1 -> stmt star1 .)


state 118

    (24) stmt -> funCall SEMICOLON .

    IF              reduce using rule 24 (stmt -> funCall SEMICOLON .)
    PRINT           reduce using rule 24 (stmt -> funCall SEMICOLON .)
    READ            reduce using rule 24 (stmt -> funCall SEMICOLON .)
    ID              reduce using rule 24 (stmt -> funCall SEMICOLON .)
    RETURN          reduce using rule 24 (stmt -> funCall SEMICOLON .)
    CIRCLE          reduce using rule 24 (stmt -> funCall SEMICOLON .)
    SQUARE          reduce using rule 24 (stmt -> funCall SEMICOLON .)
    TRIANGLE        reduce using rule 24 (stmt -> funCall SEMICOLON .)
    RECTANGLE       reduce using rule 24 (stmt -> funCall SEMICOLON .)
    HIDE_STAR       reduce using rule 24 (stmt -> funCall SEMICOLON .)
    SHOW_STAR       reduce using rule 24 (stmt -> funCall SEMICOLON .)
    COLOR_STAR      reduce using rule 24 (stmt -> funCall SEMICOLON .)
    SIZE_STAR       reduce using rule 24 (stmt -> funCall SEMICOLON .)
    SETXY           reduce using rule 24 (stmt -> funCall SEMICOLON .)
    HAND_DOWN       reduce using rule 24 (stmt -> funCall SEMICOLON .)
    HAND_UP         reduce using rule 24 (stmt -> funCall SEMICOLON .)
    GO              reduce using rule 24 (stmt -> funCall SEMICOLON .)
    LEFT            reduce using rule 24 (stmt -> funCall SEMICOLON .)
    RIGHT           reduce using rule 24 (stmt -> funCall SEMICOLON .)
    BACK            reduce using rule 24 (stmt -> funCall SEMICOLON .)
    ARC             reduce using rule 24 (stmt -> funCall SEMICOLON .)
    WHILE           reduce using rule 24 (stmt -> funCall SEMICOLON .)
    FOR             reduce using rule 24 (stmt -> funCall SEMICOLON .)
    CLOSEBRACES     reduce using rule 24 (stmt -> funCall SEMICOLON .)


state 119

    (26) assignment -> id equals . assignment3 SEMICOLON
    (27) assignment3 -> . exp
    (28) assignment3 -> . read
    (133) exp -> . term
    (134) exp -> . term exp_o exp
    (59) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (139) term -> . factor term_o term
    (140) term -> . factor
    (143) factor -> . vcte
    (144) factor -> . openP expression closeP
    (29) vcte -> . cte_int
    (30) vcte -> . cte_float
    (31) vcte -> . cte_string
    (32) vcte -> . id
    (33) vcte -> . funCall
    (34) vcte -> . vectormatriz
    (137) openP -> . OPENPAREN
    (73) cte_int -> . CTEINT
    (74) cte_float -> . CTEFLOAT
    (75) cte_string -> . CTESTRING
    (64) id -> . ID vectormatriz
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    READ            shift and go to state 55
    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    id                             shift and go to state 106
    assignment3                    shift and go to state 178
    exp                            shift and go to state 179
    read                           shift and go to state 180
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 120

    (83) condition -> IF head_cond . body condition1
    (90) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 131

    body                           shift and go to state 181

state 121

    (89) head_cond -> OPENPAREN . expression close_condition
    (131) expression -> . exp loper exp
    (132) expression -> . exp
    (133) exp -> . term
    (134) exp -> . term exp_o exp
    (139) term -> . factor term_o term
    (140) term -> . factor
    (143) factor -> . vcte
    (144) factor -> . openP expression closeP
    (29) vcte -> . cte_int
    (30) vcte -> . cte_float
    (31) vcte -> . cte_string
    (32) vcte -> . id
    (33) vcte -> . funCall
    (34) vcte -> . vectormatriz
    (137) openP -> . OPENPAREN
    (73) cte_int -> . CTEINT
    (74) cte_float -> . CTEFLOAT
    (75) cte_string -> . CTESTRING
    (64) id -> . ID vectormatriz
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    expression                     shift and go to state 182
    exp                            shift and go to state 171
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 122

    (58) print -> PRINT OPENPAREN . expression CLOSEPAREN SEMICOLON
    (131) expression -> . exp loper exp
    (132) expression -> . exp
    (133) exp -> . term
    (134) exp -> . term exp_o exp
    (139) term -> . factor term_o term
    (140) term -> . factor
    (143) factor -> . vcte
    (144) factor -> . openP expression closeP
    (29) vcte -> . cte_int
    (30) vcte -> . cte_float
    (31) vcte -> . cte_string
    (32) vcte -> . id
    (33) vcte -> . funCall
    (34) vcte -> . vectormatriz
    (137) openP -> . OPENPAREN
    (73) cte_int -> . CTEINT
    (74) cte_float -> . CTEFLOAT
    (75) cte_string -> . CTESTRING
    (64) id -> . ID vectormatriz
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    expression                     shift and go to state 183
    exp                            shift and go to state 171
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 123

    (59) read -> READ OPENPAREN . id read1 CLOSEPAREN SEMICOLON
    (64) id -> . ID vectormatriz

    ID              shift and go to state 185

    id                             shift and go to state 184

state 124

    (65) funCall -> ID iniciaFunCall . funCall2 terminaFunCall
    (68) funCall2 -> . funCallParam funCall3
    (69) funCall2 -> . empty
    (72) funCallParam -> . exp
    (145) empty -> .
    (133) exp -> . term
    (134) exp -> . term exp_o exp
    (139) term -> . factor term_o term
    (140) term -> . factor
    (143) factor -> . vcte
    (144) factor -> . openP expression closeP
    (29) vcte -> . cte_int
    (30) vcte -> . cte_float
    (31) vcte -> . cte_string
    (32) vcte -> . id
    (33) vcte -> . funCall
    (34) vcte -> . vectormatriz
    (137) openP -> . OPENPAREN
    (73) cte_int -> . CTEINT
    (74) cte_float -> . CTEFLOAT
    (75) cte_string -> . CTESTRING
    (64) id -> . ID vectormatriz
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    CLOSEPAREN      reduce using rule 145 (empty -> .)
    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    funCall2                       shift and go to state 186
    funCallParam                   shift and go to state 187
    empty                          shift and go to state 188
    exp                            shift and go to state 189
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 125

    (64) id -> ID vectormatriz .

    EQUALS          reduce using rule 64 (id -> ID vectormatriz .)
    MULTIPLICATION  reduce using rule 64 (id -> ID vectormatriz .)
    DIVISION        reduce using rule 64 (id -> ID vectormatriz .)
    ADDITION        reduce using rule 64 (id -> ID vectormatriz .)
    SUBSTRACTION    reduce using rule 64 (id -> ID vectormatriz .)
    SEMICOLON       reduce using rule 64 (id -> ID vectormatriz .)
    GREATER         reduce using rule 64 (id -> ID vectormatriz .)
    LESS            reduce using rule 64 (id -> ID vectormatriz .)
    NOTEQUAL        reduce using rule 64 (id -> ID vectormatriz .)
    ISEQUAL         reduce using rule 64 (id -> ID vectormatriz .)
    CLOSEPAREN      reduce using rule 64 (id -> ID vectormatriz .)
    COMMA           reduce using rule 64 (id -> ID vectormatriz .)
    CLOSEBRACKET    reduce using rule 64 (id -> ID vectormatriz .)
    OPENBRACKET     reduce using rule 64 (id -> ID vectormatriz .)


state 126

    (66) iniciaFunCall -> OPENPAREN .

    OPENPAREN       reduce using rule 66 (iniciaFunCall -> OPENPAREN .)
    CTEINT          reduce using rule 66 (iniciaFunCall -> OPENPAREN .)
    CTEFLOAT        reduce using rule 66 (iniciaFunCall -> OPENPAREN .)
    CTESTRING       reduce using rule 66 (iniciaFunCall -> OPENPAREN .)
    ID              reduce using rule 66 (iniciaFunCall -> OPENPAREN .)
    OPENBRACKET     reduce using rule 66 (iniciaFunCall -> OPENPAREN .)
    CLOSEPAREN      reduce using rule 66 (iniciaFunCall -> OPENPAREN .)


state 127

    (76) return -> RETURN return1 . SEMICOLON

    SEMICOLON       shift and go to state 190


state 128

    (77) return1 -> vcte .
    (143) factor -> vcte .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 77 (return1 -> vcte .)
    SEMICOLON       reduce using rule 77 (return1 -> vcte .)
    MULTIPLICATION  reduce using rule 143 (factor -> vcte .)
    DIVISION        reduce using rule 143 (factor -> vcte .)
    ADDITION        reduce using rule 143 (factor -> vcte .)
    SUBSTRACTION    reduce using rule 143 (factor -> vcte .)

  ! SEMICOLON       [ reduce using rule 143 (factor -> vcte .) ]


state 129

    (78) return1 -> exp .

    SEMICOLON       reduce using rule 78 (return1 -> exp .)


state 130

    (99) while -> while1 body .

    IF              reduce using rule 99 (while -> while1 body .)
    PRINT           reduce using rule 99 (while -> while1 body .)
    READ            reduce using rule 99 (while -> while1 body .)
    ID              reduce using rule 99 (while -> while1 body .)
    RETURN          reduce using rule 99 (while -> while1 body .)
    CIRCLE          reduce using rule 99 (while -> while1 body .)
    SQUARE          reduce using rule 99 (while -> while1 body .)
    TRIANGLE        reduce using rule 99 (while -> while1 body .)
    RECTANGLE       reduce using rule 99 (while -> while1 body .)
    HIDE_STAR       reduce using rule 99 (while -> while1 body .)
    SHOW_STAR       reduce using rule 99 (while -> while1 body .)
    COLOR_STAR      reduce using rule 99 (while -> while1 body .)
    SIZE_STAR       reduce using rule 99 (while -> while1 body .)
    SETXY           reduce using rule 99 (while -> while1 body .)
    HAND_DOWN       reduce using rule 99 (while -> while1 body .)
    HAND_UP         reduce using rule 99 (while -> while1 body .)
    GO              reduce using rule 99 (while -> while1 body .)
    LEFT            reduce using rule 99 (while -> while1 body .)
    RIGHT           reduce using rule 99 (while -> while1 body .)
    BACK            reduce using rule 99 (while -> while1 body .)
    ARC             reduce using rule 99 (while -> while1 body .)
    WHILE           reduce using rule 99 (while -> while1 body .)
    FOR             reduce using rule 99 (while -> while1 body .)
    CLOSEBRACES     reduce using rule 99 (while -> while1 body .)


state 131

    (90) body -> OPENBRACES . body1 CLOSEBRACES
    (92) body1 -> . stmt body1
    (93) body1 -> . empty
    (18) stmt -> . assignment
    (19) stmt -> . condition
    (20) stmt -> . print
    (21) stmt -> . loop
    (22) stmt -> . read
    (23) stmt -> . graphstmt
    (24) stmt -> . funCall SEMICOLON
    (25) stmt -> . return
    (145) empty -> .
    (26) assignment -> . id equals assignment3 SEMICOLON
    (83) condition -> . IF head_cond body condition1
    (58) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (16) loop -> . while
    (17) loop -> . for
    (59) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (104) graphstmt -> . graphfig
    (105) graphstmt -> . graphview
    (106) graphstmt -> . graphmove
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (76) return -> . RETURN return1 SEMICOLON
    (64) id -> . ID vectormatriz
    (99) while -> . while1 body
    (94) for -> . for1 body
    (107) graphfig -> . graphfig1 SEMICOLON
    (108) graphfig -> . graphfig2 SEMICOLON
    (123) graphview -> . graphview0 SEMICOLON
    (124) graphview -> . graphview1 SEMICOLON
    (125) graphview -> . graphview2 SEMICOLON
    (113) graphmove -> . graphmove0 SEMICOLON
    (114) graphmove -> . graphmove1 SEMICOLON
    (115) graphmove -> . graphmove2 SEMICOLON
    (100) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (95) for1 -> . forInit OPENPAREN ID for2
    (109) graphfig1 -> . CIRCLE unaExp
    (110) graphfig1 -> . SQUARE unaExp
    (111) graphfig2 -> . TRIANGLE dosExp
    (112) graphfig2 -> . RECTANGLE dosExp
    (126) graphview0 -> . HIDE_STAR
    (127) graphview0 -> . SHOW_STAR
    (128) graphview1 -> . COLOR_STAR unaExp
    (129) graphview1 -> . SIZE_STAR unaExp
    (130) graphview2 -> . SETXY dosExp
    (116) graphmove0 -> . HAND_DOWN
    (117) graphmove0 -> . HAND_UP
    (118) graphmove1 -> . GO unaExp
    (119) graphmove1 -> . LEFT unaExp
    (120) graphmove1 -> . RIGHT unaExp
    (121) graphmove1 -> . BACK unaExp
    (122) graphmove2 -> . ARC dosExp
    (101) while_w -> . WHILE
    (98) forInit -> . FOR

    CLOSEBRACES     reduce using rule 145 (empty -> .)
    IF              shift and go to state 51
    PRINT           shift and go to state 52
    READ            shift and go to state 55
    ID              shift and go to state 59
    RETURN          shift and go to state 60
    CIRCLE          shift and go to state 73
    SQUARE          shift and go to state 74
    TRIANGLE        shift and go to state 75
    RECTANGLE       shift and go to state 76
    HIDE_STAR       shift and go to state 77
    SHOW_STAR       shift and go to state 78
    COLOR_STAR      shift and go to state 79
    SIZE_STAR       shift and go to state 80
    SETXY           shift and go to state 81
    HAND_DOWN       shift and go to state 82
    HAND_UP         shift and go to state 83
    GO              shift and go to state 84
    LEFT            shift and go to state 85
    RIGHT           shift and go to state 86
    BACK            shift and go to state 87
    ARC             shift and go to state 88
    WHILE           shift and go to state 89
    FOR             shift and go to state 90

    body1                          shift and go to state 191
    stmt                           shift and go to state 192
    empty                          shift and go to state 193
    assignment                     shift and go to state 42
    condition                      shift and go to state 43
    print                          shift and go to state 44
    loop                           shift and go to state 45
    read                           shift and go to state 46
    graphstmt                      shift and go to state 47
    funCall                        shift and go to state 48
    return                         shift and go to state 49
    id                             shift and go to state 50
    while                          shift and go to state 53
    for                            shift and go to state 54
    graphfig                       shift and go to state 56
    graphview                      shift and go to state 57
    graphmove                      shift and go to state 58
    while1                         shift and go to state 61
    for1                           shift and go to state 62
    graphfig1                      shift and go to state 63
    graphfig2                      shift and go to state 64
    graphview0                     shift and go to state 65
    graphview1                     shift and go to state 66
    graphview2                     shift and go to state 67
    graphmove0                     shift and go to state 68
    graphmove1                     shift and go to state 69
    graphmove2                     shift and go to state 70
    while_w                        shift and go to state 71
    forInit                        shift and go to state 72

state 132

    (94) for -> for1 body .

    IF              reduce using rule 94 (for -> for1 body .)
    PRINT           reduce using rule 94 (for -> for1 body .)
    READ            reduce using rule 94 (for -> for1 body .)
    ID              reduce using rule 94 (for -> for1 body .)
    RETURN          reduce using rule 94 (for -> for1 body .)
    CIRCLE          reduce using rule 94 (for -> for1 body .)
    SQUARE          reduce using rule 94 (for -> for1 body .)
    TRIANGLE        reduce using rule 94 (for -> for1 body .)
    RECTANGLE       reduce using rule 94 (for -> for1 body .)
    HIDE_STAR       reduce using rule 94 (for -> for1 body .)
    SHOW_STAR       reduce using rule 94 (for -> for1 body .)
    COLOR_STAR      reduce using rule 94 (for -> for1 body .)
    SIZE_STAR       reduce using rule 94 (for -> for1 body .)
    SETXY           reduce using rule 94 (for -> for1 body .)
    HAND_DOWN       reduce using rule 94 (for -> for1 body .)
    HAND_UP         reduce using rule 94 (for -> for1 body .)
    GO              reduce using rule 94 (for -> for1 body .)
    LEFT            reduce using rule 94 (for -> for1 body .)
    RIGHT           reduce using rule 94 (for -> for1 body .)
    BACK            reduce using rule 94 (for -> for1 body .)
    ARC             reduce using rule 94 (for -> for1 body .)
    WHILE           reduce using rule 94 (for -> for1 body .)
    FOR             reduce using rule 94 (for -> for1 body .)
    CLOSEBRACES     reduce using rule 94 (for -> for1 body .)


state 133

    (107) graphfig -> graphfig1 SEMICOLON .

    IF              reduce using rule 107 (graphfig -> graphfig1 SEMICOLON .)
    PRINT           reduce using rule 107 (graphfig -> graphfig1 SEMICOLON .)
    READ            reduce using rule 107 (graphfig -> graphfig1 SEMICOLON .)
    ID              reduce using rule 107 (graphfig -> graphfig1 SEMICOLON .)
    RETURN          reduce using rule 107 (graphfig -> graphfig1 SEMICOLON .)
    CIRCLE          reduce using rule 107 (graphfig -> graphfig1 SEMICOLON .)
    SQUARE          reduce using rule 107 (graphfig -> graphfig1 SEMICOLON .)
    TRIANGLE        reduce using rule 107 (graphfig -> graphfig1 SEMICOLON .)
    RECTANGLE       reduce using rule 107 (graphfig -> graphfig1 SEMICOLON .)
    HIDE_STAR       reduce using rule 107 (graphfig -> graphfig1 SEMICOLON .)
    SHOW_STAR       reduce using rule 107 (graphfig -> graphfig1 SEMICOLON .)
    COLOR_STAR      reduce using rule 107 (graphfig -> graphfig1 SEMICOLON .)
    SIZE_STAR       reduce using rule 107 (graphfig -> graphfig1 SEMICOLON .)
    SETXY           reduce using rule 107 (graphfig -> graphfig1 SEMICOLON .)
    HAND_DOWN       reduce using rule 107 (graphfig -> graphfig1 SEMICOLON .)
    HAND_UP         reduce using rule 107 (graphfig -> graphfig1 SEMICOLON .)
    GO              reduce using rule 107 (graphfig -> graphfig1 SEMICOLON .)
    LEFT            reduce using rule 107 (graphfig -> graphfig1 SEMICOLON .)
    RIGHT           reduce using rule 107 (graphfig -> graphfig1 SEMICOLON .)
    BACK            reduce using rule 107 (graphfig -> graphfig1 SEMICOLON .)
    ARC             reduce using rule 107 (graphfig -> graphfig1 SEMICOLON .)
    WHILE           reduce using rule 107 (graphfig -> graphfig1 SEMICOLON .)
    FOR             reduce using rule 107 (graphfig -> graphfig1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 107 (graphfig -> graphfig1 SEMICOLON .)


state 134

    (108) graphfig -> graphfig2 SEMICOLON .

    IF              reduce using rule 108 (graphfig -> graphfig2 SEMICOLON .)
    PRINT           reduce using rule 108 (graphfig -> graphfig2 SEMICOLON .)
    READ            reduce using rule 108 (graphfig -> graphfig2 SEMICOLON .)
    ID              reduce using rule 108 (graphfig -> graphfig2 SEMICOLON .)
    RETURN          reduce using rule 108 (graphfig -> graphfig2 SEMICOLON .)
    CIRCLE          reduce using rule 108 (graphfig -> graphfig2 SEMICOLON .)
    SQUARE          reduce using rule 108 (graphfig -> graphfig2 SEMICOLON .)
    TRIANGLE        reduce using rule 108 (graphfig -> graphfig2 SEMICOLON .)
    RECTANGLE       reduce using rule 108 (graphfig -> graphfig2 SEMICOLON .)
    HIDE_STAR       reduce using rule 108 (graphfig -> graphfig2 SEMICOLON .)
    SHOW_STAR       reduce using rule 108 (graphfig -> graphfig2 SEMICOLON .)
    COLOR_STAR      reduce using rule 108 (graphfig -> graphfig2 SEMICOLON .)
    SIZE_STAR       reduce using rule 108 (graphfig -> graphfig2 SEMICOLON .)
    SETXY           reduce using rule 108 (graphfig -> graphfig2 SEMICOLON .)
    HAND_DOWN       reduce using rule 108 (graphfig -> graphfig2 SEMICOLON .)
    HAND_UP         reduce using rule 108 (graphfig -> graphfig2 SEMICOLON .)
    GO              reduce using rule 108 (graphfig -> graphfig2 SEMICOLON .)
    LEFT            reduce using rule 108 (graphfig -> graphfig2 SEMICOLON .)
    RIGHT           reduce using rule 108 (graphfig -> graphfig2 SEMICOLON .)
    BACK            reduce using rule 108 (graphfig -> graphfig2 SEMICOLON .)
    ARC             reduce using rule 108 (graphfig -> graphfig2 SEMICOLON .)
    WHILE           reduce using rule 108 (graphfig -> graphfig2 SEMICOLON .)
    FOR             reduce using rule 108 (graphfig -> graphfig2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 108 (graphfig -> graphfig2 SEMICOLON .)


state 135

    (123) graphview -> graphview0 SEMICOLON .

    IF              reduce using rule 123 (graphview -> graphview0 SEMICOLON .)
    PRINT           reduce using rule 123 (graphview -> graphview0 SEMICOLON .)
    READ            reduce using rule 123 (graphview -> graphview0 SEMICOLON .)
    ID              reduce using rule 123 (graphview -> graphview0 SEMICOLON .)
    RETURN          reduce using rule 123 (graphview -> graphview0 SEMICOLON .)
    CIRCLE          reduce using rule 123 (graphview -> graphview0 SEMICOLON .)
    SQUARE          reduce using rule 123 (graphview -> graphview0 SEMICOLON .)
    TRIANGLE        reduce using rule 123 (graphview -> graphview0 SEMICOLON .)
    RECTANGLE       reduce using rule 123 (graphview -> graphview0 SEMICOLON .)
    HIDE_STAR       reduce using rule 123 (graphview -> graphview0 SEMICOLON .)
    SHOW_STAR       reduce using rule 123 (graphview -> graphview0 SEMICOLON .)
    COLOR_STAR      reduce using rule 123 (graphview -> graphview0 SEMICOLON .)
    SIZE_STAR       reduce using rule 123 (graphview -> graphview0 SEMICOLON .)
    SETXY           reduce using rule 123 (graphview -> graphview0 SEMICOLON .)
    HAND_DOWN       reduce using rule 123 (graphview -> graphview0 SEMICOLON .)
    HAND_UP         reduce using rule 123 (graphview -> graphview0 SEMICOLON .)
    GO              reduce using rule 123 (graphview -> graphview0 SEMICOLON .)
    LEFT            reduce using rule 123 (graphview -> graphview0 SEMICOLON .)
    RIGHT           reduce using rule 123 (graphview -> graphview0 SEMICOLON .)
    BACK            reduce using rule 123 (graphview -> graphview0 SEMICOLON .)
    ARC             reduce using rule 123 (graphview -> graphview0 SEMICOLON .)
    WHILE           reduce using rule 123 (graphview -> graphview0 SEMICOLON .)
    FOR             reduce using rule 123 (graphview -> graphview0 SEMICOLON .)
    CLOSEBRACES     reduce using rule 123 (graphview -> graphview0 SEMICOLON .)


state 136

    (124) graphview -> graphview1 SEMICOLON .

    IF              reduce using rule 124 (graphview -> graphview1 SEMICOLON .)
    PRINT           reduce using rule 124 (graphview -> graphview1 SEMICOLON .)
    READ            reduce using rule 124 (graphview -> graphview1 SEMICOLON .)
    ID              reduce using rule 124 (graphview -> graphview1 SEMICOLON .)
    RETURN          reduce using rule 124 (graphview -> graphview1 SEMICOLON .)
    CIRCLE          reduce using rule 124 (graphview -> graphview1 SEMICOLON .)
    SQUARE          reduce using rule 124 (graphview -> graphview1 SEMICOLON .)
    TRIANGLE        reduce using rule 124 (graphview -> graphview1 SEMICOLON .)
    RECTANGLE       reduce using rule 124 (graphview -> graphview1 SEMICOLON .)
    HIDE_STAR       reduce using rule 124 (graphview -> graphview1 SEMICOLON .)
    SHOW_STAR       reduce using rule 124 (graphview -> graphview1 SEMICOLON .)
    COLOR_STAR      reduce using rule 124 (graphview -> graphview1 SEMICOLON .)
    SIZE_STAR       reduce using rule 124 (graphview -> graphview1 SEMICOLON .)
    SETXY           reduce using rule 124 (graphview -> graphview1 SEMICOLON .)
    HAND_DOWN       reduce using rule 124 (graphview -> graphview1 SEMICOLON .)
    HAND_UP         reduce using rule 124 (graphview -> graphview1 SEMICOLON .)
    GO              reduce using rule 124 (graphview -> graphview1 SEMICOLON .)
    LEFT            reduce using rule 124 (graphview -> graphview1 SEMICOLON .)
    RIGHT           reduce using rule 124 (graphview -> graphview1 SEMICOLON .)
    BACK            reduce using rule 124 (graphview -> graphview1 SEMICOLON .)
    ARC             reduce using rule 124 (graphview -> graphview1 SEMICOLON .)
    WHILE           reduce using rule 124 (graphview -> graphview1 SEMICOLON .)
    FOR             reduce using rule 124 (graphview -> graphview1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 124 (graphview -> graphview1 SEMICOLON .)


state 137

    (125) graphview -> graphview2 SEMICOLON .

    IF              reduce using rule 125 (graphview -> graphview2 SEMICOLON .)
    PRINT           reduce using rule 125 (graphview -> graphview2 SEMICOLON .)
    READ            reduce using rule 125 (graphview -> graphview2 SEMICOLON .)
    ID              reduce using rule 125 (graphview -> graphview2 SEMICOLON .)
    RETURN          reduce using rule 125 (graphview -> graphview2 SEMICOLON .)
    CIRCLE          reduce using rule 125 (graphview -> graphview2 SEMICOLON .)
    SQUARE          reduce using rule 125 (graphview -> graphview2 SEMICOLON .)
    TRIANGLE        reduce using rule 125 (graphview -> graphview2 SEMICOLON .)
    RECTANGLE       reduce using rule 125 (graphview -> graphview2 SEMICOLON .)
    HIDE_STAR       reduce using rule 125 (graphview -> graphview2 SEMICOLON .)
    SHOW_STAR       reduce using rule 125 (graphview -> graphview2 SEMICOLON .)
    COLOR_STAR      reduce using rule 125 (graphview -> graphview2 SEMICOLON .)
    SIZE_STAR       reduce using rule 125 (graphview -> graphview2 SEMICOLON .)
    SETXY           reduce using rule 125 (graphview -> graphview2 SEMICOLON .)
    HAND_DOWN       reduce using rule 125 (graphview -> graphview2 SEMICOLON .)
    HAND_UP         reduce using rule 125 (graphview -> graphview2 SEMICOLON .)
    GO              reduce using rule 125 (graphview -> graphview2 SEMICOLON .)
    LEFT            reduce using rule 125 (graphview -> graphview2 SEMICOLON .)
    RIGHT           reduce using rule 125 (graphview -> graphview2 SEMICOLON .)
    BACK            reduce using rule 125 (graphview -> graphview2 SEMICOLON .)
    ARC             reduce using rule 125 (graphview -> graphview2 SEMICOLON .)
    WHILE           reduce using rule 125 (graphview -> graphview2 SEMICOLON .)
    FOR             reduce using rule 125 (graphview -> graphview2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 125 (graphview -> graphview2 SEMICOLON .)


state 138

    (113) graphmove -> graphmove0 SEMICOLON .

    IF              reduce using rule 113 (graphmove -> graphmove0 SEMICOLON .)
    PRINT           reduce using rule 113 (graphmove -> graphmove0 SEMICOLON .)
    READ            reduce using rule 113 (graphmove -> graphmove0 SEMICOLON .)
    ID              reduce using rule 113 (graphmove -> graphmove0 SEMICOLON .)
    RETURN          reduce using rule 113 (graphmove -> graphmove0 SEMICOLON .)
    CIRCLE          reduce using rule 113 (graphmove -> graphmove0 SEMICOLON .)
    SQUARE          reduce using rule 113 (graphmove -> graphmove0 SEMICOLON .)
    TRIANGLE        reduce using rule 113 (graphmove -> graphmove0 SEMICOLON .)
    RECTANGLE       reduce using rule 113 (graphmove -> graphmove0 SEMICOLON .)
    HIDE_STAR       reduce using rule 113 (graphmove -> graphmove0 SEMICOLON .)
    SHOW_STAR       reduce using rule 113 (graphmove -> graphmove0 SEMICOLON .)
    COLOR_STAR      reduce using rule 113 (graphmove -> graphmove0 SEMICOLON .)
    SIZE_STAR       reduce using rule 113 (graphmove -> graphmove0 SEMICOLON .)
    SETXY           reduce using rule 113 (graphmove -> graphmove0 SEMICOLON .)
    HAND_DOWN       reduce using rule 113 (graphmove -> graphmove0 SEMICOLON .)
    HAND_UP         reduce using rule 113 (graphmove -> graphmove0 SEMICOLON .)
    GO              reduce using rule 113 (graphmove -> graphmove0 SEMICOLON .)
    LEFT            reduce using rule 113 (graphmove -> graphmove0 SEMICOLON .)
    RIGHT           reduce using rule 113 (graphmove -> graphmove0 SEMICOLON .)
    BACK            reduce using rule 113 (graphmove -> graphmove0 SEMICOLON .)
    ARC             reduce using rule 113 (graphmove -> graphmove0 SEMICOLON .)
    WHILE           reduce using rule 113 (graphmove -> graphmove0 SEMICOLON .)
    FOR             reduce using rule 113 (graphmove -> graphmove0 SEMICOLON .)
    CLOSEBRACES     reduce using rule 113 (graphmove -> graphmove0 SEMICOLON .)


state 139

    (114) graphmove -> graphmove1 SEMICOLON .

    IF              reduce using rule 114 (graphmove -> graphmove1 SEMICOLON .)
    PRINT           reduce using rule 114 (graphmove -> graphmove1 SEMICOLON .)
    READ            reduce using rule 114 (graphmove -> graphmove1 SEMICOLON .)
    ID              reduce using rule 114 (graphmove -> graphmove1 SEMICOLON .)
    RETURN          reduce using rule 114 (graphmove -> graphmove1 SEMICOLON .)
    CIRCLE          reduce using rule 114 (graphmove -> graphmove1 SEMICOLON .)
    SQUARE          reduce using rule 114 (graphmove -> graphmove1 SEMICOLON .)
    TRIANGLE        reduce using rule 114 (graphmove -> graphmove1 SEMICOLON .)
    RECTANGLE       reduce using rule 114 (graphmove -> graphmove1 SEMICOLON .)
    HIDE_STAR       reduce using rule 114 (graphmove -> graphmove1 SEMICOLON .)
    SHOW_STAR       reduce using rule 114 (graphmove -> graphmove1 SEMICOLON .)
    COLOR_STAR      reduce using rule 114 (graphmove -> graphmove1 SEMICOLON .)
    SIZE_STAR       reduce using rule 114 (graphmove -> graphmove1 SEMICOLON .)
    SETXY           reduce using rule 114 (graphmove -> graphmove1 SEMICOLON .)
    HAND_DOWN       reduce using rule 114 (graphmove -> graphmove1 SEMICOLON .)
    HAND_UP         reduce using rule 114 (graphmove -> graphmove1 SEMICOLON .)
    GO              reduce using rule 114 (graphmove -> graphmove1 SEMICOLON .)
    LEFT            reduce using rule 114 (graphmove -> graphmove1 SEMICOLON .)
    RIGHT           reduce using rule 114 (graphmove -> graphmove1 SEMICOLON .)
    BACK            reduce using rule 114 (graphmove -> graphmove1 SEMICOLON .)
    ARC             reduce using rule 114 (graphmove -> graphmove1 SEMICOLON .)
    WHILE           reduce using rule 114 (graphmove -> graphmove1 SEMICOLON .)
    FOR             reduce using rule 114 (graphmove -> graphmove1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 114 (graphmove -> graphmove1 SEMICOLON .)


state 140

    (115) graphmove -> graphmove2 SEMICOLON .

    IF              reduce using rule 115 (graphmove -> graphmove2 SEMICOLON .)
    PRINT           reduce using rule 115 (graphmove -> graphmove2 SEMICOLON .)
    READ            reduce using rule 115 (graphmove -> graphmove2 SEMICOLON .)
    ID              reduce using rule 115 (graphmove -> graphmove2 SEMICOLON .)
    RETURN          reduce using rule 115 (graphmove -> graphmove2 SEMICOLON .)
    CIRCLE          reduce using rule 115 (graphmove -> graphmove2 SEMICOLON .)
    SQUARE          reduce using rule 115 (graphmove -> graphmove2 SEMICOLON .)
    TRIANGLE        reduce using rule 115 (graphmove -> graphmove2 SEMICOLON .)
    RECTANGLE       reduce using rule 115 (graphmove -> graphmove2 SEMICOLON .)
    HIDE_STAR       reduce using rule 115 (graphmove -> graphmove2 SEMICOLON .)
    SHOW_STAR       reduce using rule 115 (graphmove -> graphmove2 SEMICOLON .)
    COLOR_STAR      reduce using rule 115 (graphmove -> graphmove2 SEMICOLON .)
    SIZE_STAR       reduce using rule 115 (graphmove -> graphmove2 SEMICOLON .)
    SETXY           reduce using rule 115 (graphmove -> graphmove2 SEMICOLON .)
    HAND_DOWN       reduce using rule 115 (graphmove -> graphmove2 SEMICOLON .)
    HAND_UP         reduce using rule 115 (graphmove -> graphmove2 SEMICOLON .)
    GO              reduce using rule 115 (graphmove -> graphmove2 SEMICOLON .)
    LEFT            reduce using rule 115 (graphmove -> graphmove2 SEMICOLON .)
    RIGHT           reduce using rule 115 (graphmove -> graphmove2 SEMICOLON .)
    BACK            reduce using rule 115 (graphmove -> graphmove2 SEMICOLON .)
    ARC             reduce using rule 115 (graphmove -> graphmove2 SEMICOLON .)
    WHILE           reduce using rule 115 (graphmove -> graphmove2 SEMICOLON .)
    FOR             reduce using rule 115 (graphmove -> graphmove2 SEMICOLON .)
    CLOSEBRACES     reduce using rule 115 (graphmove -> graphmove2 SEMICOLON .)


state 141

    (100) while1 -> while_w OPENPAREN . expression CLOSEPAREN
    (131) expression -> . exp loper exp
    (132) expression -> . exp
    (133) exp -> . term
    (134) exp -> . term exp_o exp
    (139) term -> . factor term_o term
    (140) term -> . factor
    (143) factor -> . vcte
    (144) factor -> . openP expression closeP
    (29) vcte -> . cte_int
    (30) vcte -> . cte_float
    (31) vcte -> . cte_string
    (32) vcte -> . id
    (33) vcte -> . funCall
    (34) vcte -> . vectormatriz
    (137) openP -> . OPENPAREN
    (73) cte_int -> . CTEINT
    (74) cte_float -> . CTEFLOAT
    (75) cte_string -> . CTESTRING
    (64) id -> . ID vectormatriz
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    expression                     shift and go to state 194
    exp                            shift and go to state 171
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 142

    (95) for1 -> forInit OPENPAREN . ID for2

    ID              shift and go to state 195


state 143

    (109) graphfig1 -> CIRCLE unaExp .

    SEMICOLON       reduce using rule 109 (graphfig1 -> CIRCLE unaExp .)


state 144

    (103) unaExp -> OPENPAREN . exp CLOSEPAREN
    (133) exp -> . term
    (134) exp -> . term exp_o exp
    (139) term -> . factor term_o term
    (140) term -> . factor
    (143) factor -> . vcte
    (144) factor -> . openP expression closeP
    (29) vcte -> . cte_int
    (30) vcte -> . cte_float
    (31) vcte -> . cte_string
    (32) vcte -> . id
    (33) vcte -> . funCall
    (34) vcte -> . vectormatriz
    (137) openP -> . OPENPAREN
    (73) cte_int -> . CTEINT
    (74) cte_float -> . CTEFLOAT
    (75) cte_string -> . CTESTRING
    (64) id -> . ID vectormatriz
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    exp                            shift and go to state 196
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 145

    (110) graphfig1 -> SQUARE unaExp .

    SEMICOLON       reduce using rule 110 (graphfig1 -> SQUARE unaExp .)


state 146

    (111) graphfig2 -> TRIANGLE dosExp .

    SEMICOLON       reduce using rule 111 (graphfig2 -> TRIANGLE dosExp .)


state 147

    (102) dosExp -> OPENPAREN . exp COMMA exp CLOSEPAREN
    (133) exp -> . term
    (134) exp -> . term exp_o exp
    (139) term -> . factor term_o term
    (140) term -> . factor
    (143) factor -> . vcte
    (144) factor -> . openP expression closeP
    (29) vcte -> . cte_int
    (30) vcte -> . cte_float
    (31) vcte -> . cte_string
    (32) vcte -> . id
    (33) vcte -> . funCall
    (34) vcte -> . vectormatriz
    (137) openP -> . OPENPAREN
    (73) cte_int -> . CTEINT
    (74) cte_float -> . CTEFLOAT
    (75) cte_string -> . CTESTRING
    (64) id -> . ID vectormatriz
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    exp                            shift and go to state 197
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 148

    (112) graphfig2 -> RECTANGLE dosExp .

    SEMICOLON       reduce using rule 112 (graphfig2 -> RECTANGLE dosExp .)


state 149

    (128) graphview1 -> COLOR_STAR unaExp .

    SEMICOLON       reduce using rule 128 (graphview1 -> COLOR_STAR unaExp .)


state 150

    (129) graphview1 -> SIZE_STAR unaExp .

    SEMICOLON       reduce using rule 129 (graphview1 -> SIZE_STAR unaExp .)


state 151

    (130) graphview2 -> SETXY dosExp .

    SEMICOLON       reduce using rule 130 (graphview2 -> SETXY dosExp .)


state 152

    (118) graphmove1 -> GO unaExp .

    SEMICOLON       reduce using rule 118 (graphmove1 -> GO unaExp .)


state 153

    (119) graphmove1 -> LEFT unaExp .

    SEMICOLON       reduce using rule 119 (graphmove1 -> LEFT unaExp .)


state 154

    (120) graphmove1 -> RIGHT unaExp .

    SEMICOLON       reduce using rule 120 (graphmove1 -> RIGHT unaExp .)


state 155

    (121) graphmove1 -> BACK unaExp .

    SEMICOLON       reduce using rule 121 (graphmove1 -> BACK unaExp .)


state 156

    (122) graphmove2 -> ARC dosExp .

    SEMICOLON       reduce using rule 122 (graphmove2 -> ARC dosExp .)


state 157

    (44) function -> FUN functionI function2 inicia_fun declara_vars . function4 termina_fun
    (50) function4 -> . stmt function4
    (51) function4 -> . empty
    (18) stmt -> . assignment
    (19) stmt -> . condition
    (20) stmt -> . print
    (21) stmt -> . loop
    (22) stmt -> . read
    (23) stmt -> . graphstmt
    (24) stmt -> . funCall SEMICOLON
    (25) stmt -> . return
    (145) empty -> .
    (26) assignment -> . id equals assignment3 SEMICOLON
    (83) condition -> . IF head_cond body condition1
    (58) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (16) loop -> . while
    (17) loop -> . for
    (59) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (104) graphstmt -> . graphfig
    (105) graphstmt -> . graphview
    (106) graphstmt -> . graphmove
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (76) return -> . RETURN return1 SEMICOLON
    (64) id -> . ID vectormatriz
    (99) while -> . while1 body
    (94) for -> . for1 body
    (107) graphfig -> . graphfig1 SEMICOLON
    (108) graphfig -> . graphfig2 SEMICOLON
    (123) graphview -> . graphview0 SEMICOLON
    (124) graphview -> . graphview1 SEMICOLON
    (125) graphview -> . graphview2 SEMICOLON
    (113) graphmove -> . graphmove0 SEMICOLON
    (114) graphmove -> . graphmove1 SEMICOLON
    (115) graphmove -> . graphmove2 SEMICOLON
    (100) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (95) for1 -> . forInit OPENPAREN ID for2
    (109) graphfig1 -> . CIRCLE unaExp
    (110) graphfig1 -> . SQUARE unaExp
    (111) graphfig2 -> . TRIANGLE dosExp
    (112) graphfig2 -> . RECTANGLE dosExp
    (126) graphview0 -> . HIDE_STAR
    (127) graphview0 -> . SHOW_STAR
    (128) graphview1 -> . COLOR_STAR unaExp
    (129) graphview1 -> . SIZE_STAR unaExp
    (130) graphview2 -> . SETXY dosExp
    (116) graphmove0 -> . HAND_DOWN
    (117) graphmove0 -> . HAND_UP
    (118) graphmove1 -> . GO unaExp
    (119) graphmove1 -> . LEFT unaExp
    (120) graphmove1 -> . RIGHT unaExp
    (121) graphmove1 -> . BACK unaExp
    (122) graphmove2 -> . ARC dosExp
    (101) while_w -> . WHILE
    (98) forInit -> . FOR

    CLOSEBRACES     reduce using rule 145 (empty -> .)
    IF              shift and go to state 51
    PRINT           shift and go to state 52
    READ            shift and go to state 55
    ID              shift and go to state 59
    RETURN          shift and go to state 60
    CIRCLE          shift and go to state 73
    SQUARE          shift and go to state 74
    TRIANGLE        shift and go to state 75
    RECTANGLE       shift and go to state 76
    HIDE_STAR       shift and go to state 77
    SHOW_STAR       shift and go to state 78
    COLOR_STAR      shift and go to state 79
    SIZE_STAR       shift and go to state 80
    SETXY           shift and go to state 81
    HAND_DOWN       shift and go to state 82
    HAND_UP         shift and go to state 83
    GO              shift and go to state 84
    LEFT            shift and go to state 85
    RIGHT           shift and go to state 86
    BACK            shift and go to state 87
    ARC             shift and go to state 88
    WHILE           shift and go to state 89
    FOR             shift and go to state 90

    function4                      shift and go to state 198
    stmt                           shift and go to state 199
    empty                          shift and go to state 200
    assignment                     shift and go to state 42
    condition                      shift and go to state 43
    print                          shift and go to state 44
    loop                           shift and go to state 45
    read                           shift and go to state 46
    graphstmt                      shift and go to state 47
    funCall                        shift and go to state 48
    return                         shift and go to state 49
    id                             shift and go to state 50
    while                          shift and go to state 53
    for                            shift and go to state 54
    graphfig                       shift and go to state 56
    graphview                      shift and go to state 57
    graphmove                      shift and go to state 58
    while1                         shift and go to state 61
    for1                           shift and go to state 62
    graphfig1                      shift and go to state 63
    graphfig2                      shift and go to state 64
    graphview0                     shift and go to state 65
    graphview1                     shift and go to state 66
    graphview2                     shift and go to state 67
    graphmove0                     shift and go to state 68
    graphmove1                     shift and go to state 69
    graphmove2                     shift and go to state 70
    while_w                        shift and go to state 71
    forInit                        shift and go to state 72

state 158

    (47) function2 -> OPENPAREN function3 CLOSEPAREN .

    OPENBRACES      reduce using rule 47 (function2 -> OPENPAREN function3 CLOSEPAREN .)


state 159

    (48) function3 -> funParam function5 .

    CLOSEPAREN      reduce using rule 48 (function3 -> funParam function5 .)


state 160

    (52) function5 -> COMMA . funParam function5
    (54) funParam -> . type ID
    (55) type -> . INT
    (56) type -> . FLOAT
    (57) type -> . STRING

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRING          shift and go to state 11

    funParam                       shift and go to state 201
    type                           shift and go to state 96

state 161

    (53) function5 -> empty .

    CLOSEPAREN      reduce using rule 53 (function5 -> empty .)


state 162

    (54) funParam -> type ID .

    COMMA           reduce using rule 54 (funParam -> type ID .)
    CLOSEPAREN      reduce using rule 54 (funParam -> type ID .)


state 163

    (11) vars -> type ID dimensionada equals exp SEMICOLON .

    INT             reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    FLOAT           reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    STRING          reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    FUN             reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    MULTIPLICATION  reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    IF              reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    PRINT           reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    READ            reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    ID              reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    RETURN          reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    CIRCLE          reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    SQUARE          reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    TRIANGLE        reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    RECTANGLE       reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    HIDE_STAR       reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    SHOW_STAR       reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    COLOR_STAR      reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    SIZE_STAR       reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    SETXY           reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    HAND_DOWN       reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    HAND_UP         reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    GO              reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    LEFT            reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    RIGHT           reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    BACK            reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    ARC             reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    WHILE           reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    FOR             reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)
    CLOSEBRACES     reduce using rule 11 (vars -> type ID dimensionada equals exp SEMICOLON .)


state 164

    (134) exp -> term exp_o . exp
    (133) exp -> . term
    (134) exp -> . term exp_o exp
    (139) term -> . factor term_o term
    (140) term -> . factor
    (143) factor -> . vcte
    (144) factor -> . openP expression closeP
    (29) vcte -> . cte_int
    (30) vcte -> . cte_float
    (31) vcte -> . cte_string
    (32) vcte -> . id
    (33) vcte -> . funCall
    (34) vcte -> . vectormatriz
    (137) openP -> . OPENPAREN
    (73) cte_int -> . CTEINT
    (74) cte_float -> . CTEFLOAT
    (75) cte_string -> . CTESTRING
    (64) id -> . ID vectormatriz
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    term                           shift and go to state 99
    exp                            shift and go to state 202
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 165

    (135) exp_o -> ADDITION .

    OPENPAREN       reduce using rule 135 (exp_o -> ADDITION .)
    CTEINT          reduce using rule 135 (exp_o -> ADDITION .)
    CTEFLOAT        reduce using rule 135 (exp_o -> ADDITION .)
    CTESTRING       reduce using rule 135 (exp_o -> ADDITION .)
    ID              reduce using rule 135 (exp_o -> ADDITION .)
    OPENBRACKET     reduce using rule 135 (exp_o -> ADDITION .)


state 166

    (136) exp_o -> SUBSTRACTION .

    OPENPAREN       reduce using rule 136 (exp_o -> SUBSTRACTION .)
    CTEINT          reduce using rule 136 (exp_o -> SUBSTRACTION .)
    CTEFLOAT        reduce using rule 136 (exp_o -> SUBSTRACTION .)
    CTESTRING       reduce using rule 136 (exp_o -> SUBSTRACTION .)
    ID              reduce using rule 136 (exp_o -> SUBSTRACTION .)
    OPENBRACKET     reduce using rule 136 (exp_o -> SUBSTRACTION .)


state 167

    (139) term -> factor term_o . term
    (139) term -> . factor term_o term
    (140) term -> . factor
    (143) factor -> . vcte
    (144) factor -> . openP expression closeP
    (29) vcte -> . cte_int
    (30) vcte -> . cte_float
    (31) vcte -> . cte_string
    (32) vcte -> . id
    (33) vcte -> . funCall
    (34) vcte -> . vectormatriz
    (137) openP -> . OPENPAREN
    (73) cte_int -> . CTEINT
    (74) cte_float -> . CTEFLOAT
    (75) cte_string -> . CTESTRING
    (64) id -> . ID vectormatriz
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    factor                         shift and go to state 100
    term                           shift and go to state 203
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 168

    (141) term_o -> MULTIPLICATION .

    OPENPAREN       reduce using rule 141 (term_o -> MULTIPLICATION .)
    CTEINT          reduce using rule 141 (term_o -> MULTIPLICATION .)
    CTEFLOAT        reduce using rule 141 (term_o -> MULTIPLICATION .)
    CTESTRING       reduce using rule 141 (term_o -> MULTIPLICATION .)
    ID              reduce using rule 141 (term_o -> MULTIPLICATION .)
    OPENBRACKET     reduce using rule 141 (term_o -> MULTIPLICATION .)


state 169

    (142) term_o -> DIVISION .

    OPENPAREN       reduce using rule 142 (term_o -> DIVISION .)
    CTEINT          reduce using rule 142 (term_o -> DIVISION .)
    CTEFLOAT        reduce using rule 142 (term_o -> DIVISION .)
    CTESTRING       reduce using rule 142 (term_o -> DIVISION .)
    ID              reduce using rule 142 (term_o -> DIVISION .)
    OPENBRACKET     reduce using rule 142 (term_o -> DIVISION .)


state 170

    (144) factor -> openP expression . closeP
    (138) closeP -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 205

    closeP                         shift and go to state 204

state 171

    (131) expression -> exp . loper exp
    (132) expression -> exp .
    (79) loper -> . GREATER
    (80) loper -> . LESS
    (81) loper -> . NOTEQUAL
    (82) loper -> . ISEQUAL

    CLOSEPAREN      reduce using rule 132 (expression -> exp .)
    GREATER         shift and go to state 207
    LESS            shift and go to state 208
    NOTEQUAL        shift and go to state 209
    ISEQUAL         shift and go to state 210

    loper                          shift and go to state 206

state 172

    (37) vm1 -> OPENBRACKET . vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> OPENBRACKET . vm2 CLOSEBRACKET
    (35) vectormatriz -> OPENBRACKET . vm1 CLOSEBRACKET
    (39) vm2 -> . exp COMMA vm2
    (40) vm2 -> . exp
    (41) vm2 -> . empty
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET
    (133) exp -> . term
    (134) exp -> . term exp_o exp
    (145) empty -> .
    (139) term -> . factor term_o term
    (140) term -> . factor
    (143) factor -> . vcte
    (144) factor -> . openP expression closeP
    (29) vcte -> . cte_int
    (30) vcte -> . cte_float
    (31) vcte -> . cte_string
    (32) vcte -> . id
    (33) vcte -> . funCall
    (34) vcte -> . vectormatriz
    (137) openP -> . OPENPAREN
    (73) cte_int -> . CTEINT
    (74) cte_float -> . CTEFLOAT
    (75) cte_string -> . CTESTRING
    (64) id -> . ID vectormatriz
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1

    OPENBRACKET     shift and go to state 172
    CLOSEBRACKET    reduce using rule 145 (empty -> .)
    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97

    vm2                            shift and go to state 174
    vm1                            shift and go to state 173
    exp                            shift and go to state 175
    empty                          shift and go to state 176
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108

state 173

    (35) vectormatriz -> OPENBRACKET vm1 . CLOSEBRACKET
    (36) vectormatriz -> vm1 .

  ! shift/reduce conflict for CLOSEBRACKET resolved as shift
    CLOSEBRACKET    shift and go to state 211
    MULTIPLICATION  reduce using rule 36 (vectormatriz -> vm1 .)
    DIVISION        reduce using rule 36 (vectormatriz -> vm1 .)
    ADDITION        reduce using rule 36 (vectormatriz -> vm1 .)
    SUBSTRACTION    reduce using rule 36 (vectormatriz -> vm1 .)
    COMMA           reduce using rule 36 (vectormatriz -> vm1 .)

  ! CLOSEBRACKET    [ reduce using rule 36 (vectormatriz -> vm1 .) ]


state 174

    (37) vm1 -> OPENBRACKET vm2 . CLOSEBRACKET COMMA vm1
    (38) vm1 -> OPENBRACKET vm2 . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 212


state 175

    (39) vm2 -> exp . COMMA vm2
    (40) vm2 -> exp .

    COMMA           shift and go to state 213
    CLOSEBRACKET    reduce using rule 40 (vm2 -> exp .)


state 176

    (41) vm2 -> empty .

    CLOSEBRACKET    reduce using rule 41 (vm2 -> empty .)


state 177

    (14) dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET . CTEINT CLOSEBRACKET

    CTEINT          shift and go to state 214


state 178

    (26) assignment -> id equals assignment3 . SEMICOLON

    SEMICOLON       shift and go to state 215


state 179

    (27) assignment3 -> exp .

    SEMICOLON       reduce using rule 27 (assignment3 -> exp .)


state 180

    (28) assignment3 -> read .

    SEMICOLON       reduce using rule 28 (assignment3 -> read .)


state 181

    (83) condition -> IF head_cond body . condition1
    (84) condition1 -> . elseif head_cond body condition1
    (85) condition1 -> . else body
    (86) condition1 -> . empty
    (87) elseif -> . ELSEIF
    (88) else -> . ELSE
    (145) empty -> .

    ELSEIF          shift and go to state 220
    ELSE            shift and go to state 221
    IF              reduce using rule 145 (empty -> .)
    PRINT           reduce using rule 145 (empty -> .)
    READ            reduce using rule 145 (empty -> .)
    ID              reduce using rule 145 (empty -> .)
    RETURN          reduce using rule 145 (empty -> .)
    CIRCLE          reduce using rule 145 (empty -> .)
    SQUARE          reduce using rule 145 (empty -> .)
    TRIANGLE        reduce using rule 145 (empty -> .)
    RECTANGLE       reduce using rule 145 (empty -> .)
    HIDE_STAR       reduce using rule 145 (empty -> .)
    SHOW_STAR       reduce using rule 145 (empty -> .)
    COLOR_STAR      reduce using rule 145 (empty -> .)
    SIZE_STAR       reduce using rule 145 (empty -> .)
    SETXY           reduce using rule 145 (empty -> .)
    HAND_DOWN       reduce using rule 145 (empty -> .)
    HAND_UP         reduce using rule 145 (empty -> .)
    GO              reduce using rule 145 (empty -> .)
    LEFT            reduce using rule 145 (empty -> .)
    RIGHT           reduce using rule 145 (empty -> .)
    BACK            reduce using rule 145 (empty -> .)
    ARC             reduce using rule 145 (empty -> .)
    WHILE           reduce using rule 145 (empty -> .)
    FOR             reduce using rule 145 (empty -> .)
    CLOSEBRACES     reduce using rule 145 (empty -> .)

    condition1                     shift and go to state 216
    elseif                         shift and go to state 217
    else                           shift and go to state 218
    empty                          shift and go to state 219

state 182

    (89) head_cond -> OPENPAREN expression . close_condition
    (91) close_condition -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 223

    close_condition                shift and go to state 222

state 183

    (58) print -> PRINT OPENPAREN expression . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 224


state 184

    (59) read -> READ OPENPAREN id . read1 CLOSEPAREN SEMICOLON
    (60) read1 -> . OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (61) read1 -> . OPENBRACKET exp CLOSEBRACKET
    (62) read1 -> . empty
    (145) empty -> .

    OPENBRACKET     shift and go to state 226
    CLOSEPAREN      reduce using rule 145 (empty -> .)

    read1                          shift and go to state 225
    empty                          shift and go to state 227

state 185

    (64) id -> ID . vectormatriz
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENBRACKET     shift and go to state 113

    vectormatriz                   shift and go to state 125
    vm1                            shift and go to state 114

state 186

    (65) funCall -> ID iniciaFunCall funCall2 . terminaFunCall
    (67) terminaFunCall -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 229

    terminaFunCall                 shift and go to state 228

state 187

    (68) funCall2 -> funCallParam . funCall3
    (70) funCall3 -> . COMMA funCallParam funCall3
    (71) funCall3 -> . empty
    (145) empty -> .

    COMMA           shift and go to state 231
    CLOSEPAREN      reduce using rule 145 (empty -> .)

    funCall3                       shift and go to state 230
    empty                          shift and go to state 232

state 188

    (69) funCall2 -> empty .

    CLOSEPAREN      reduce using rule 69 (funCall2 -> empty .)


state 189

    (72) funCallParam -> exp .

    COMMA           reduce using rule 72 (funCallParam -> exp .)
    CLOSEPAREN      reduce using rule 72 (funCallParam -> exp .)


state 190

    (76) return -> RETURN return1 SEMICOLON .

    IF              reduce using rule 76 (return -> RETURN return1 SEMICOLON .)
    PRINT           reduce using rule 76 (return -> RETURN return1 SEMICOLON .)
    READ            reduce using rule 76 (return -> RETURN return1 SEMICOLON .)
    ID              reduce using rule 76 (return -> RETURN return1 SEMICOLON .)
    RETURN          reduce using rule 76 (return -> RETURN return1 SEMICOLON .)
    CIRCLE          reduce using rule 76 (return -> RETURN return1 SEMICOLON .)
    SQUARE          reduce using rule 76 (return -> RETURN return1 SEMICOLON .)
    TRIANGLE        reduce using rule 76 (return -> RETURN return1 SEMICOLON .)
    RECTANGLE       reduce using rule 76 (return -> RETURN return1 SEMICOLON .)
    HIDE_STAR       reduce using rule 76 (return -> RETURN return1 SEMICOLON .)
    SHOW_STAR       reduce using rule 76 (return -> RETURN return1 SEMICOLON .)
    COLOR_STAR      reduce using rule 76 (return -> RETURN return1 SEMICOLON .)
    SIZE_STAR       reduce using rule 76 (return -> RETURN return1 SEMICOLON .)
    SETXY           reduce using rule 76 (return -> RETURN return1 SEMICOLON .)
    HAND_DOWN       reduce using rule 76 (return -> RETURN return1 SEMICOLON .)
    HAND_UP         reduce using rule 76 (return -> RETURN return1 SEMICOLON .)
    GO              reduce using rule 76 (return -> RETURN return1 SEMICOLON .)
    LEFT            reduce using rule 76 (return -> RETURN return1 SEMICOLON .)
    RIGHT           reduce using rule 76 (return -> RETURN return1 SEMICOLON .)
    BACK            reduce using rule 76 (return -> RETURN return1 SEMICOLON .)
    ARC             reduce using rule 76 (return -> RETURN return1 SEMICOLON .)
    WHILE           reduce using rule 76 (return -> RETURN return1 SEMICOLON .)
    FOR             reduce using rule 76 (return -> RETURN return1 SEMICOLON .)
    CLOSEBRACES     reduce using rule 76 (return -> RETURN return1 SEMICOLON .)


state 191

    (90) body -> OPENBRACES body1 . CLOSEBRACES

    CLOSEBRACES     shift and go to state 233


state 192

    (92) body1 -> stmt . body1
    (92) body1 -> . stmt body1
    (93) body1 -> . empty
    (18) stmt -> . assignment
    (19) stmt -> . condition
    (20) stmt -> . print
    (21) stmt -> . loop
    (22) stmt -> . read
    (23) stmt -> . graphstmt
    (24) stmt -> . funCall SEMICOLON
    (25) stmt -> . return
    (145) empty -> .
    (26) assignment -> . id equals assignment3 SEMICOLON
    (83) condition -> . IF head_cond body condition1
    (58) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (16) loop -> . while
    (17) loop -> . for
    (59) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (104) graphstmt -> . graphfig
    (105) graphstmt -> . graphview
    (106) graphstmt -> . graphmove
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (76) return -> . RETURN return1 SEMICOLON
    (64) id -> . ID vectormatriz
    (99) while -> . while1 body
    (94) for -> . for1 body
    (107) graphfig -> . graphfig1 SEMICOLON
    (108) graphfig -> . graphfig2 SEMICOLON
    (123) graphview -> . graphview0 SEMICOLON
    (124) graphview -> . graphview1 SEMICOLON
    (125) graphview -> . graphview2 SEMICOLON
    (113) graphmove -> . graphmove0 SEMICOLON
    (114) graphmove -> . graphmove1 SEMICOLON
    (115) graphmove -> . graphmove2 SEMICOLON
    (100) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (95) for1 -> . forInit OPENPAREN ID for2
    (109) graphfig1 -> . CIRCLE unaExp
    (110) graphfig1 -> . SQUARE unaExp
    (111) graphfig2 -> . TRIANGLE dosExp
    (112) graphfig2 -> . RECTANGLE dosExp
    (126) graphview0 -> . HIDE_STAR
    (127) graphview0 -> . SHOW_STAR
    (128) graphview1 -> . COLOR_STAR unaExp
    (129) graphview1 -> . SIZE_STAR unaExp
    (130) graphview2 -> . SETXY dosExp
    (116) graphmove0 -> . HAND_DOWN
    (117) graphmove0 -> . HAND_UP
    (118) graphmove1 -> . GO unaExp
    (119) graphmove1 -> . LEFT unaExp
    (120) graphmove1 -> . RIGHT unaExp
    (121) graphmove1 -> . BACK unaExp
    (122) graphmove2 -> . ARC dosExp
    (101) while_w -> . WHILE
    (98) forInit -> . FOR

    CLOSEBRACES     reduce using rule 145 (empty -> .)
    IF              shift and go to state 51
    PRINT           shift and go to state 52
    READ            shift and go to state 55
    ID              shift and go to state 59
    RETURN          shift and go to state 60
    CIRCLE          shift and go to state 73
    SQUARE          shift and go to state 74
    TRIANGLE        shift and go to state 75
    RECTANGLE       shift and go to state 76
    HIDE_STAR       shift and go to state 77
    SHOW_STAR       shift and go to state 78
    COLOR_STAR      shift and go to state 79
    SIZE_STAR       shift and go to state 80
    SETXY           shift and go to state 81
    HAND_DOWN       shift and go to state 82
    HAND_UP         shift and go to state 83
    GO              shift and go to state 84
    LEFT            shift and go to state 85
    RIGHT           shift and go to state 86
    BACK            shift and go to state 87
    ARC             shift and go to state 88
    WHILE           shift and go to state 89
    FOR             shift and go to state 90

    stmt                           shift and go to state 192
    body1                          shift and go to state 234
    empty                          shift and go to state 193
    assignment                     shift and go to state 42
    condition                      shift and go to state 43
    print                          shift and go to state 44
    loop                           shift and go to state 45
    read                           shift and go to state 46
    graphstmt                      shift and go to state 47
    funCall                        shift and go to state 48
    return                         shift and go to state 49
    id                             shift and go to state 50
    while                          shift and go to state 53
    for                            shift and go to state 54
    graphfig                       shift and go to state 56
    graphview                      shift and go to state 57
    graphmove                      shift and go to state 58
    while1                         shift and go to state 61
    for1                           shift and go to state 62
    graphfig1                      shift and go to state 63
    graphfig2                      shift and go to state 64
    graphview0                     shift and go to state 65
    graphview1                     shift and go to state 66
    graphview2                     shift and go to state 67
    graphmove0                     shift and go to state 68
    graphmove1                     shift and go to state 69
    graphmove2                     shift and go to state 70
    while_w                        shift and go to state 71
    forInit                        shift and go to state 72

state 193

    (93) body1 -> empty .

    CLOSEBRACES     reduce using rule 93 (body1 -> empty .)


state 194

    (100) while1 -> while_w OPENPAREN expression . CLOSEPAREN

    CLOSEPAREN      shift and go to state 235


state 195

    (95) for1 -> forInit OPENPAREN ID . for2
    (96) for2 -> . TWODOTS exp for3

    TWODOTS         shift and go to state 237

    for2                           shift and go to state 236

state 196

    (103) unaExp -> OPENPAREN exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 238


state 197

    (102) dosExp -> OPENPAREN exp . COMMA exp CLOSEPAREN

    COMMA           shift and go to state 239


state 198

    (44) function -> FUN functionI function2 inicia_fun declara_vars function4 . termina_fun
    (46) termina_fun -> . CLOSEBRACES

    CLOSEBRACES     shift and go to state 241

    termina_fun                    shift and go to state 240

state 199

    (50) function4 -> stmt . function4
    (50) function4 -> . stmt function4
    (51) function4 -> . empty
    (18) stmt -> . assignment
    (19) stmt -> . condition
    (20) stmt -> . print
    (21) stmt -> . loop
    (22) stmt -> . read
    (23) stmt -> . graphstmt
    (24) stmt -> . funCall SEMICOLON
    (25) stmt -> . return
    (145) empty -> .
    (26) assignment -> . id equals assignment3 SEMICOLON
    (83) condition -> . IF head_cond body condition1
    (58) print -> . PRINT OPENPAREN expression CLOSEPAREN SEMICOLON
    (16) loop -> . while
    (17) loop -> . for
    (59) read -> . READ OPENPAREN id read1 CLOSEPAREN SEMICOLON
    (104) graphstmt -> . graphfig
    (105) graphstmt -> . graphview
    (106) graphstmt -> . graphmove
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (76) return -> . RETURN return1 SEMICOLON
    (64) id -> . ID vectormatriz
    (99) while -> . while1 body
    (94) for -> . for1 body
    (107) graphfig -> . graphfig1 SEMICOLON
    (108) graphfig -> . graphfig2 SEMICOLON
    (123) graphview -> . graphview0 SEMICOLON
    (124) graphview -> . graphview1 SEMICOLON
    (125) graphview -> . graphview2 SEMICOLON
    (113) graphmove -> . graphmove0 SEMICOLON
    (114) graphmove -> . graphmove1 SEMICOLON
    (115) graphmove -> . graphmove2 SEMICOLON
    (100) while1 -> . while_w OPENPAREN expression CLOSEPAREN
    (95) for1 -> . forInit OPENPAREN ID for2
    (109) graphfig1 -> . CIRCLE unaExp
    (110) graphfig1 -> . SQUARE unaExp
    (111) graphfig2 -> . TRIANGLE dosExp
    (112) graphfig2 -> . RECTANGLE dosExp
    (126) graphview0 -> . HIDE_STAR
    (127) graphview0 -> . SHOW_STAR
    (128) graphview1 -> . COLOR_STAR unaExp
    (129) graphview1 -> . SIZE_STAR unaExp
    (130) graphview2 -> . SETXY dosExp
    (116) graphmove0 -> . HAND_DOWN
    (117) graphmove0 -> . HAND_UP
    (118) graphmove1 -> . GO unaExp
    (119) graphmove1 -> . LEFT unaExp
    (120) graphmove1 -> . RIGHT unaExp
    (121) graphmove1 -> . BACK unaExp
    (122) graphmove2 -> . ARC dosExp
    (101) while_w -> . WHILE
    (98) forInit -> . FOR

    CLOSEBRACES     reduce using rule 145 (empty -> .)
    IF              shift and go to state 51
    PRINT           shift and go to state 52
    READ            shift and go to state 55
    ID              shift and go to state 59
    RETURN          shift and go to state 60
    CIRCLE          shift and go to state 73
    SQUARE          shift and go to state 74
    TRIANGLE        shift and go to state 75
    RECTANGLE       shift and go to state 76
    HIDE_STAR       shift and go to state 77
    SHOW_STAR       shift and go to state 78
    COLOR_STAR      shift and go to state 79
    SIZE_STAR       shift and go to state 80
    SETXY           shift and go to state 81
    HAND_DOWN       shift and go to state 82
    HAND_UP         shift and go to state 83
    GO              shift and go to state 84
    LEFT            shift and go to state 85
    RIGHT           shift and go to state 86
    BACK            shift and go to state 87
    ARC             shift and go to state 88
    WHILE           shift and go to state 89
    FOR             shift and go to state 90

    stmt                           shift and go to state 199
    function4                      shift and go to state 242
    empty                          shift and go to state 200
    assignment                     shift and go to state 42
    condition                      shift and go to state 43
    print                          shift and go to state 44
    loop                           shift and go to state 45
    read                           shift and go to state 46
    graphstmt                      shift and go to state 47
    funCall                        shift and go to state 48
    return                         shift and go to state 49
    id                             shift and go to state 50
    while                          shift and go to state 53
    for                            shift and go to state 54
    graphfig                       shift and go to state 56
    graphview                      shift and go to state 57
    graphmove                      shift and go to state 58
    while1                         shift and go to state 61
    for1                           shift and go to state 62
    graphfig1                      shift and go to state 63
    graphfig2                      shift and go to state 64
    graphview0                     shift and go to state 65
    graphview1                     shift and go to state 66
    graphview2                     shift and go to state 67
    graphmove0                     shift and go to state 68
    graphmove1                     shift and go to state 69
    graphmove2                     shift and go to state 70
    while_w                        shift and go to state 71
    forInit                        shift and go to state 72

state 200

    (51) function4 -> empty .

    CLOSEBRACES     reduce using rule 51 (function4 -> empty .)


state 201

    (52) function5 -> COMMA funParam . function5
    (52) function5 -> . COMMA funParam function5
    (53) function5 -> . empty
    (145) empty -> .

    COMMA           shift and go to state 160
    CLOSEPAREN      reduce using rule 145 (empty -> .)

    function5                      shift and go to state 243
    empty                          shift and go to state 161

state 202

    (134) exp -> term exp_o exp .

    SEMICOLON       reduce using rule 134 (exp -> term exp_o exp .)
    GREATER         reduce using rule 134 (exp -> term exp_o exp .)
    LESS            reduce using rule 134 (exp -> term exp_o exp .)
    NOTEQUAL        reduce using rule 134 (exp -> term exp_o exp .)
    ISEQUAL         reduce using rule 134 (exp -> term exp_o exp .)
    CLOSEPAREN      reduce using rule 134 (exp -> term exp_o exp .)
    COMMA           reduce using rule 134 (exp -> term exp_o exp .)
    CLOSEBRACKET    reduce using rule 134 (exp -> term exp_o exp .)


state 203

    (139) term -> factor term_o term .

    ADDITION        reduce using rule 139 (term -> factor term_o term .)
    SUBSTRACTION    reduce using rule 139 (term -> factor term_o term .)
    SEMICOLON       reduce using rule 139 (term -> factor term_o term .)
    GREATER         reduce using rule 139 (term -> factor term_o term .)
    LESS            reduce using rule 139 (term -> factor term_o term .)
    NOTEQUAL        reduce using rule 139 (term -> factor term_o term .)
    ISEQUAL         reduce using rule 139 (term -> factor term_o term .)
    CLOSEPAREN      reduce using rule 139 (term -> factor term_o term .)
    COMMA           reduce using rule 139 (term -> factor term_o term .)
    CLOSEBRACKET    reduce using rule 139 (term -> factor term_o term .)


state 204

    (144) factor -> openP expression closeP .

    MULTIPLICATION  reduce using rule 144 (factor -> openP expression closeP .)
    DIVISION        reduce using rule 144 (factor -> openP expression closeP .)
    ADDITION        reduce using rule 144 (factor -> openP expression closeP .)
    SUBSTRACTION    reduce using rule 144 (factor -> openP expression closeP .)
    SEMICOLON       reduce using rule 144 (factor -> openP expression closeP .)
    GREATER         reduce using rule 144 (factor -> openP expression closeP .)
    LESS            reduce using rule 144 (factor -> openP expression closeP .)
    NOTEQUAL        reduce using rule 144 (factor -> openP expression closeP .)
    ISEQUAL         reduce using rule 144 (factor -> openP expression closeP .)
    CLOSEPAREN      reduce using rule 144 (factor -> openP expression closeP .)
    COMMA           reduce using rule 144 (factor -> openP expression closeP .)
    CLOSEBRACKET    reduce using rule 144 (factor -> openP expression closeP .)


state 205

    (138) closeP -> CLOSEPAREN .

    MULTIPLICATION  reduce using rule 138 (closeP -> CLOSEPAREN .)
    DIVISION        reduce using rule 138 (closeP -> CLOSEPAREN .)
    ADDITION        reduce using rule 138 (closeP -> CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 138 (closeP -> CLOSEPAREN .)
    SEMICOLON       reduce using rule 138 (closeP -> CLOSEPAREN .)
    GREATER         reduce using rule 138 (closeP -> CLOSEPAREN .)
    LESS            reduce using rule 138 (closeP -> CLOSEPAREN .)
    NOTEQUAL        reduce using rule 138 (closeP -> CLOSEPAREN .)
    ISEQUAL         reduce using rule 138 (closeP -> CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 138 (closeP -> CLOSEPAREN .)
    COMMA           reduce using rule 138 (closeP -> CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 138 (closeP -> CLOSEPAREN .)


state 206

    (131) expression -> exp loper . exp
    (133) exp -> . term
    (134) exp -> . term exp_o exp
    (139) term -> . factor term_o term
    (140) term -> . factor
    (143) factor -> . vcte
    (144) factor -> . openP expression closeP
    (29) vcte -> . cte_int
    (30) vcte -> . cte_float
    (31) vcte -> . cte_string
    (32) vcte -> . id
    (33) vcte -> . funCall
    (34) vcte -> . vectormatriz
    (137) openP -> . OPENPAREN
    (73) cte_int -> . CTEINT
    (74) cte_float -> . CTEFLOAT
    (75) cte_string -> . CTESTRING
    (64) id -> . ID vectormatriz
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    exp                            shift and go to state 244
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 207

    (79) loper -> GREATER .

    OPENPAREN       reduce using rule 79 (loper -> GREATER .)
    CTEINT          reduce using rule 79 (loper -> GREATER .)
    CTEFLOAT        reduce using rule 79 (loper -> GREATER .)
    CTESTRING       reduce using rule 79 (loper -> GREATER .)
    ID              reduce using rule 79 (loper -> GREATER .)
    OPENBRACKET     reduce using rule 79 (loper -> GREATER .)


state 208

    (80) loper -> LESS .

    OPENPAREN       reduce using rule 80 (loper -> LESS .)
    CTEINT          reduce using rule 80 (loper -> LESS .)
    CTEFLOAT        reduce using rule 80 (loper -> LESS .)
    CTESTRING       reduce using rule 80 (loper -> LESS .)
    ID              reduce using rule 80 (loper -> LESS .)
    OPENBRACKET     reduce using rule 80 (loper -> LESS .)


state 209

    (81) loper -> NOTEQUAL .

    OPENPAREN       reduce using rule 81 (loper -> NOTEQUAL .)
    CTEINT          reduce using rule 81 (loper -> NOTEQUAL .)
    CTEFLOAT        reduce using rule 81 (loper -> NOTEQUAL .)
    CTESTRING       reduce using rule 81 (loper -> NOTEQUAL .)
    ID              reduce using rule 81 (loper -> NOTEQUAL .)
    OPENBRACKET     reduce using rule 81 (loper -> NOTEQUAL .)


state 210

    (82) loper -> ISEQUAL .

    OPENPAREN       reduce using rule 82 (loper -> ISEQUAL .)
    CTEINT          reduce using rule 82 (loper -> ISEQUAL .)
    CTEFLOAT        reduce using rule 82 (loper -> ISEQUAL .)
    CTESTRING       reduce using rule 82 (loper -> ISEQUAL .)
    ID              reduce using rule 82 (loper -> ISEQUAL .)
    OPENBRACKET     reduce using rule 82 (loper -> ISEQUAL .)


state 211

    (35) vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .

    MULTIPLICATION  reduce using rule 35 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    DIVISION        reduce using rule 35 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    ADDITION        reduce using rule 35 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    SUBSTRACTION    reduce using rule 35 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    SEMICOLON       reduce using rule 35 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    EQUALS          reduce using rule 35 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    GREATER         reduce using rule 35 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    LESS            reduce using rule 35 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 35 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    ISEQUAL         reduce using rule 35 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 35 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    COMMA           reduce using rule 35 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 35 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)
    OPENBRACKET     reduce using rule 35 (vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET .)


state 212

    (37) vm1 -> OPENBRACKET vm2 CLOSEBRACKET . COMMA vm1
    (38) vm1 -> OPENBRACKET vm2 CLOSEBRACKET .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 245
    MULTIPLICATION  reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    DIVISION        reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    ADDITION        reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    SUBSTRACTION    reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    SEMICOLON       reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    EQUALS          reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    GREATER         reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    LESS            reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    NOTEQUAL        reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    ISEQUAL         reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    CLOSEPAREN      reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    CLOSEBRACKET    reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)
    OPENBRACKET     reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .)

  ! COMMA           [ reduce using rule 38 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET .) ]


state 213

    (39) vm2 -> exp COMMA . vm2
    (39) vm2 -> . exp COMMA vm2
    (40) vm2 -> . exp
    (41) vm2 -> . empty
    (133) exp -> . term
    (134) exp -> . term exp_o exp
    (145) empty -> .
    (139) term -> . factor term_o term
    (140) term -> . factor
    (143) factor -> . vcte
    (144) factor -> . openP expression closeP
    (29) vcte -> . cte_int
    (30) vcte -> . cte_float
    (31) vcte -> . cte_string
    (32) vcte -> . id
    (33) vcte -> . funCall
    (34) vcte -> . vectormatriz
    (137) openP -> . OPENPAREN
    (73) cte_int -> . CTEINT
    (74) cte_float -> . CTEFLOAT
    (75) cte_string -> . CTESTRING
    (64) id -> . ID vectormatriz
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    CLOSEBRACKET    reduce using rule 145 (empty -> .)
    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    exp                            shift and go to state 175
    vm2                            shift and go to state 246
    empty                          shift and go to state 176
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 214

    (14) dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 247


state 215

    (26) assignment -> id equals assignment3 SEMICOLON .

    IF              reduce using rule 26 (assignment -> id equals assignment3 SEMICOLON .)
    PRINT           reduce using rule 26 (assignment -> id equals assignment3 SEMICOLON .)
    READ            reduce using rule 26 (assignment -> id equals assignment3 SEMICOLON .)
    ID              reduce using rule 26 (assignment -> id equals assignment3 SEMICOLON .)
    RETURN          reduce using rule 26 (assignment -> id equals assignment3 SEMICOLON .)
    CIRCLE          reduce using rule 26 (assignment -> id equals assignment3 SEMICOLON .)
    SQUARE          reduce using rule 26 (assignment -> id equals assignment3 SEMICOLON .)
    TRIANGLE        reduce using rule 26 (assignment -> id equals assignment3 SEMICOLON .)
    RECTANGLE       reduce using rule 26 (assignment -> id equals assignment3 SEMICOLON .)
    HIDE_STAR       reduce using rule 26 (assignment -> id equals assignment3 SEMICOLON .)
    SHOW_STAR       reduce using rule 26 (assignment -> id equals assignment3 SEMICOLON .)
    COLOR_STAR      reduce using rule 26 (assignment -> id equals assignment3 SEMICOLON .)
    SIZE_STAR       reduce using rule 26 (assignment -> id equals assignment3 SEMICOLON .)
    SETXY           reduce using rule 26 (assignment -> id equals assignment3 SEMICOLON .)
    HAND_DOWN       reduce using rule 26 (assignment -> id equals assignment3 SEMICOLON .)
    HAND_UP         reduce using rule 26 (assignment -> id equals assignment3 SEMICOLON .)
    GO              reduce using rule 26 (assignment -> id equals assignment3 SEMICOLON .)
    LEFT            reduce using rule 26 (assignment -> id equals assignment3 SEMICOLON .)
    RIGHT           reduce using rule 26 (assignment -> id equals assignment3 SEMICOLON .)
    BACK            reduce using rule 26 (assignment -> id equals assignment3 SEMICOLON .)
    ARC             reduce using rule 26 (assignment -> id equals assignment3 SEMICOLON .)
    WHILE           reduce using rule 26 (assignment -> id equals assignment3 SEMICOLON .)
    FOR             reduce using rule 26 (assignment -> id equals assignment3 SEMICOLON .)
    CLOSEBRACES     reduce using rule 26 (assignment -> id equals assignment3 SEMICOLON .)


state 216

    (83) condition -> IF head_cond body condition1 .

    IF              reduce using rule 83 (condition -> IF head_cond body condition1 .)
    PRINT           reduce using rule 83 (condition -> IF head_cond body condition1 .)
    READ            reduce using rule 83 (condition -> IF head_cond body condition1 .)
    ID              reduce using rule 83 (condition -> IF head_cond body condition1 .)
    RETURN          reduce using rule 83 (condition -> IF head_cond body condition1 .)
    CIRCLE          reduce using rule 83 (condition -> IF head_cond body condition1 .)
    SQUARE          reduce using rule 83 (condition -> IF head_cond body condition1 .)
    TRIANGLE        reduce using rule 83 (condition -> IF head_cond body condition1 .)
    RECTANGLE       reduce using rule 83 (condition -> IF head_cond body condition1 .)
    HIDE_STAR       reduce using rule 83 (condition -> IF head_cond body condition1 .)
    SHOW_STAR       reduce using rule 83 (condition -> IF head_cond body condition1 .)
    COLOR_STAR      reduce using rule 83 (condition -> IF head_cond body condition1 .)
    SIZE_STAR       reduce using rule 83 (condition -> IF head_cond body condition1 .)
    SETXY           reduce using rule 83 (condition -> IF head_cond body condition1 .)
    HAND_DOWN       reduce using rule 83 (condition -> IF head_cond body condition1 .)
    HAND_UP         reduce using rule 83 (condition -> IF head_cond body condition1 .)
    GO              reduce using rule 83 (condition -> IF head_cond body condition1 .)
    LEFT            reduce using rule 83 (condition -> IF head_cond body condition1 .)
    RIGHT           reduce using rule 83 (condition -> IF head_cond body condition1 .)
    BACK            reduce using rule 83 (condition -> IF head_cond body condition1 .)
    ARC             reduce using rule 83 (condition -> IF head_cond body condition1 .)
    WHILE           reduce using rule 83 (condition -> IF head_cond body condition1 .)
    FOR             reduce using rule 83 (condition -> IF head_cond body condition1 .)
    CLOSEBRACES     reduce using rule 83 (condition -> IF head_cond body condition1 .)


state 217

    (84) condition1 -> elseif . head_cond body condition1
    (89) head_cond -> . OPENPAREN expression close_condition

    OPENPAREN       shift and go to state 121

    head_cond                      shift and go to state 248

state 218

    (85) condition1 -> else . body
    (90) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 131

    body                           shift and go to state 249

state 219

    (86) condition1 -> empty .

    IF              reduce using rule 86 (condition1 -> empty .)
    PRINT           reduce using rule 86 (condition1 -> empty .)
    READ            reduce using rule 86 (condition1 -> empty .)
    ID              reduce using rule 86 (condition1 -> empty .)
    RETURN          reduce using rule 86 (condition1 -> empty .)
    CIRCLE          reduce using rule 86 (condition1 -> empty .)
    SQUARE          reduce using rule 86 (condition1 -> empty .)
    TRIANGLE        reduce using rule 86 (condition1 -> empty .)
    RECTANGLE       reduce using rule 86 (condition1 -> empty .)
    HIDE_STAR       reduce using rule 86 (condition1 -> empty .)
    SHOW_STAR       reduce using rule 86 (condition1 -> empty .)
    COLOR_STAR      reduce using rule 86 (condition1 -> empty .)
    SIZE_STAR       reduce using rule 86 (condition1 -> empty .)
    SETXY           reduce using rule 86 (condition1 -> empty .)
    HAND_DOWN       reduce using rule 86 (condition1 -> empty .)
    HAND_UP         reduce using rule 86 (condition1 -> empty .)
    GO              reduce using rule 86 (condition1 -> empty .)
    LEFT            reduce using rule 86 (condition1 -> empty .)
    RIGHT           reduce using rule 86 (condition1 -> empty .)
    BACK            reduce using rule 86 (condition1 -> empty .)
    ARC             reduce using rule 86 (condition1 -> empty .)
    WHILE           reduce using rule 86 (condition1 -> empty .)
    FOR             reduce using rule 86 (condition1 -> empty .)
    CLOSEBRACES     reduce using rule 86 (condition1 -> empty .)


state 220

    (87) elseif -> ELSEIF .

    OPENPAREN       reduce using rule 87 (elseif -> ELSEIF .)


state 221

    (88) else -> ELSE .

    OPENBRACES      reduce using rule 88 (else -> ELSE .)


state 222

    (89) head_cond -> OPENPAREN expression close_condition .

    OPENBRACES      reduce using rule 89 (head_cond -> OPENPAREN expression close_condition .)


state 223

    (91) close_condition -> CLOSEPAREN .

    OPENBRACES      reduce using rule 91 (close_condition -> CLOSEPAREN .)


state 224

    (58) print -> PRINT OPENPAREN expression CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 250


state 225

    (59) read -> READ OPENPAREN id read1 . CLOSEPAREN SEMICOLON

    CLOSEPAREN      shift and go to state 251


state 226

    (60) read1 -> OPENBRACKET . exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (61) read1 -> OPENBRACKET . exp CLOSEBRACKET
    (133) exp -> . term
    (134) exp -> . term exp_o exp
    (139) term -> . factor term_o term
    (140) term -> . factor
    (143) factor -> . vcte
    (144) factor -> . openP expression closeP
    (29) vcte -> . cte_int
    (30) vcte -> . cte_float
    (31) vcte -> . cte_string
    (32) vcte -> . id
    (33) vcte -> . funCall
    (34) vcte -> . vectormatriz
    (137) openP -> . OPENPAREN
    (73) cte_int -> . CTEINT
    (74) cte_float -> . CTEFLOAT
    (75) cte_string -> . CTESTRING
    (64) id -> . ID vectormatriz
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    exp                            shift and go to state 252
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 227

    (62) read1 -> empty .

    CLOSEPAREN      reduce using rule 62 (read1 -> empty .)


state 228

    (65) funCall -> ID iniciaFunCall funCall2 terminaFunCall .

    SEMICOLON       reduce using rule 65 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    MULTIPLICATION  reduce using rule 65 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    DIVISION        reduce using rule 65 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    ADDITION        reduce using rule 65 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    SUBSTRACTION    reduce using rule 65 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    GREATER         reduce using rule 65 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    LESS            reduce using rule 65 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    NOTEQUAL        reduce using rule 65 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    ISEQUAL         reduce using rule 65 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    CLOSEPAREN      reduce using rule 65 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    COMMA           reduce using rule 65 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)
    CLOSEBRACKET    reduce using rule 65 (funCall -> ID iniciaFunCall funCall2 terminaFunCall .)


state 229

    (67) terminaFunCall -> CLOSEPAREN .

    SEMICOLON       reduce using rule 67 (terminaFunCall -> CLOSEPAREN .)
    MULTIPLICATION  reduce using rule 67 (terminaFunCall -> CLOSEPAREN .)
    DIVISION        reduce using rule 67 (terminaFunCall -> CLOSEPAREN .)
    ADDITION        reduce using rule 67 (terminaFunCall -> CLOSEPAREN .)
    SUBSTRACTION    reduce using rule 67 (terminaFunCall -> CLOSEPAREN .)
    GREATER         reduce using rule 67 (terminaFunCall -> CLOSEPAREN .)
    LESS            reduce using rule 67 (terminaFunCall -> CLOSEPAREN .)
    NOTEQUAL        reduce using rule 67 (terminaFunCall -> CLOSEPAREN .)
    ISEQUAL         reduce using rule 67 (terminaFunCall -> CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 67 (terminaFunCall -> CLOSEPAREN .)
    COMMA           reduce using rule 67 (terminaFunCall -> CLOSEPAREN .)
    CLOSEBRACKET    reduce using rule 67 (terminaFunCall -> CLOSEPAREN .)


state 230

    (68) funCall2 -> funCallParam funCall3 .

    CLOSEPAREN      reduce using rule 68 (funCall2 -> funCallParam funCall3 .)


state 231

    (70) funCall3 -> COMMA . funCallParam funCall3
    (72) funCallParam -> . exp
    (133) exp -> . term
    (134) exp -> . term exp_o exp
    (139) term -> . factor term_o term
    (140) term -> . factor
    (143) factor -> . vcte
    (144) factor -> . openP expression closeP
    (29) vcte -> . cte_int
    (30) vcte -> . cte_float
    (31) vcte -> . cte_string
    (32) vcte -> . id
    (33) vcte -> . funCall
    (34) vcte -> . vectormatriz
    (137) openP -> . OPENPAREN
    (73) cte_int -> . CTEINT
    (74) cte_float -> . CTEFLOAT
    (75) cte_string -> . CTESTRING
    (64) id -> . ID vectormatriz
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    funCallParam                   shift and go to state 253
    exp                            shift and go to state 189
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 232

    (71) funCall3 -> empty .

    CLOSEPAREN      reduce using rule 71 (funCall3 -> empty .)


state 233

    (90) body -> OPENBRACES body1 CLOSEBRACES .

    IF              reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    PRINT           reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    READ            reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    ID              reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    RETURN          reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    CIRCLE          reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    SQUARE          reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    TRIANGLE        reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    RECTANGLE       reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    HIDE_STAR       reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    SHOW_STAR       reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    COLOR_STAR      reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    SIZE_STAR       reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    SETXY           reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_DOWN       reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    HAND_UP         reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    GO              reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    LEFT            reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    RIGHT           reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    BACK            reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    ARC             reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    WHILE           reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    FOR             reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    CLOSEBRACES     reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSEIF          reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)
    ELSE            reduce using rule 90 (body -> OPENBRACES body1 CLOSEBRACES .)


state 234

    (92) body1 -> stmt body1 .

    CLOSEBRACES     reduce using rule 92 (body1 -> stmt body1 .)


state 235

    (100) while1 -> while_w OPENPAREN expression CLOSEPAREN .

    OPENBRACES      reduce using rule 100 (while1 -> while_w OPENPAREN expression CLOSEPAREN .)


state 236

    (95) for1 -> forInit OPENPAREN ID for2 .

    OPENBRACES      reduce using rule 95 (for1 -> forInit OPENPAREN ID for2 .)


state 237

    (96) for2 -> TWODOTS . exp for3
    (133) exp -> . term
    (134) exp -> . term exp_o exp
    (139) term -> . factor term_o term
    (140) term -> . factor
    (143) factor -> . vcte
    (144) factor -> . openP expression closeP
    (29) vcte -> . cte_int
    (30) vcte -> . cte_float
    (31) vcte -> . cte_string
    (32) vcte -> . id
    (33) vcte -> . funCall
    (34) vcte -> . vectormatriz
    (137) openP -> . OPENPAREN
    (73) cte_int -> . CTEINT
    (74) cte_float -> . CTEFLOAT
    (75) cte_string -> . CTESTRING
    (64) id -> . ID vectormatriz
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    exp                            shift and go to state 254
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 238

    (103) unaExp -> OPENPAREN exp CLOSEPAREN .

    SEMICOLON       reduce using rule 103 (unaExp -> OPENPAREN exp CLOSEPAREN .)


state 239

    (102) dosExp -> OPENPAREN exp COMMA . exp CLOSEPAREN
    (133) exp -> . term
    (134) exp -> . term exp_o exp
    (139) term -> . factor term_o term
    (140) term -> . factor
    (143) factor -> . vcte
    (144) factor -> . openP expression closeP
    (29) vcte -> . cte_int
    (30) vcte -> . cte_float
    (31) vcte -> . cte_string
    (32) vcte -> . id
    (33) vcte -> . funCall
    (34) vcte -> . vectormatriz
    (137) openP -> . OPENPAREN
    (73) cte_int -> . CTEINT
    (74) cte_float -> . CTEFLOAT
    (75) cte_string -> . CTESTRING
    (64) id -> . ID vectormatriz
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    exp                            shift and go to state 255
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 240

    (44) function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .

    FUN             reduce using rule 44 (function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .)
    MULTIPLICATION  reduce using rule 44 (function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun .)


state 241

    (46) termina_fun -> CLOSEBRACES .

    FUN             reduce using rule 46 (termina_fun -> CLOSEBRACES .)
    MULTIPLICATION  reduce using rule 46 (termina_fun -> CLOSEBRACES .)


state 242

    (50) function4 -> stmt function4 .

    CLOSEBRACES     reduce using rule 50 (function4 -> stmt function4 .)


state 243

    (52) function5 -> COMMA funParam function5 .

    CLOSEPAREN      reduce using rule 52 (function5 -> COMMA funParam function5 .)


state 244

    (131) expression -> exp loper exp .

    CLOSEPAREN      reduce using rule 131 (expression -> exp loper exp .)


state 245

    (37) vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA . vm1
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENBRACKET     shift and go to state 256

    vm1                            shift and go to state 257

state 246

    (39) vm2 -> exp COMMA vm2 .

    CLOSEBRACKET    reduce using rule 39 (vm2 -> exp COMMA vm2 .)


state 247

    (14) dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET .

    SEMICOLON       reduce using rule 14 (dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET .)
    EQUALS          reduce using rule 14 (dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET .)


state 248

    (84) condition1 -> elseif head_cond . body condition1
    (90) body -> . OPENBRACES body1 CLOSEBRACES

    OPENBRACES      shift and go to state 131

    body                           shift and go to state 258

state 249

    (85) condition1 -> else body .

    IF              reduce using rule 85 (condition1 -> else body .)
    PRINT           reduce using rule 85 (condition1 -> else body .)
    READ            reduce using rule 85 (condition1 -> else body .)
    ID              reduce using rule 85 (condition1 -> else body .)
    RETURN          reduce using rule 85 (condition1 -> else body .)
    CIRCLE          reduce using rule 85 (condition1 -> else body .)
    SQUARE          reduce using rule 85 (condition1 -> else body .)
    TRIANGLE        reduce using rule 85 (condition1 -> else body .)
    RECTANGLE       reduce using rule 85 (condition1 -> else body .)
    HIDE_STAR       reduce using rule 85 (condition1 -> else body .)
    SHOW_STAR       reduce using rule 85 (condition1 -> else body .)
    COLOR_STAR      reduce using rule 85 (condition1 -> else body .)
    SIZE_STAR       reduce using rule 85 (condition1 -> else body .)
    SETXY           reduce using rule 85 (condition1 -> else body .)
    HAND_DOWN       reduce using rule 85 (condition1 -> else body .)
    HAND_UP         reduce using rule 85 (condition1 -> else body .)
    GO              reduce using rule 85 (condition1 -> else body .)
    LEFT            reduce using rule 85 (condition1 -> else body .)
    RIGHT           reduce using rule 85 (condition1 -> else body .)
    BACK            reduce using rule 85 (condition1 -> else body .)
    ARC             reduce using rule 85 (condition1 -> else body .)
    WHILE           reduce using rule 85 (condition1 -> else body .)
    FOR             reduce using rule 85 (condition1 -> else body .)
    CLOSEBRACES     reduce using rule 85 (condition1 -> else body .)


state 250

    (58) print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .

    IF              reduce using rule 58 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 58 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 58 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 58 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 58 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 58 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 58 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 58 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 58 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 58 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 58 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 58 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 58 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 58 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 58 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 58 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 58 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 58 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 58 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 58 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 58 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 58 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 58 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 58 (print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON .)


state 251

    (59) read -> READ OPENPAREN id read1 CLOSEPAREN . SEMICOLON

    SEMICOLON       shift and go to state 259


state 252

    (60) read1 -> OPENBRACKET exp . CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET
    (61) read1 -> OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 260


state 253

    (70) funCall3 -> COMMA funCallParam . funCall3
    (70) funCall3 -> . COMMA funCallParam funCall3
    (71) funCall3 -> . empty
    (145) empty -> .

    COMMA           shift and go to state 231
    CLOSEPAREN      reduce using rule 145 (empty -> .)

    funCall3                       shift and go to state 261
    empty                          shift and go to state 232

state 254

    (96) for2 -> TWODOTS exp . for3
    (97) for3 -> . CLOSEPAREN

    CLOSEPAREN      shift and go to state 263

    for3                           shift and go to state 262

state 255

    (102) dosExp -> OPENPAREN exp COMMA exp . CLOSEPAREN

    CLOSEPAREN      shift and go to state 264


state 256

    (37) vm1 -> OPENBRACKET . vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> OPENBRACKET . vm2 CLOSEBRACKET
    (39) vm2 -> . exp COMMA vm2
    (40) vm2 -> . exp
    (41) vm2 -> . empty
    (133) exp -> . term
    (134) exp -> . term exp_o exp
    (145) empty -> .
    (139) term -> . factor term_o term
    (140) term -> . factor
    (143) factor -> . vcte
    (144) factor -> . openP expression closeP
    (29) vcte -> . cte_int
    (30) vcte -> . cte_float
    (31) vcte -> . cte_string
    (32) vcte -> . id
    (33) vcte -> . funCall
    (34) vcte -> . vectormatriz
    (137) openP -> . OPENPAREN
    (73) cte_int -> . CTEINT
    (74) cte_float -> . CTEFLOAT
    (75) cte_string -> . CTESTRING
    (64) id -> . ID vectormatriz
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    CLOSEBRACKET    reduce using rule 145 (empty -> .)
    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    vm2                            shift and go to state 174
    vm1                            shift and go to state 114
    exp                            shift and go to state 175
    empty                          shift and go to state 176
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108

state 257

    (37) vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .

    MULTIPLICATION  reduce using rule 37 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    DIVISION        reduce using rule 37 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    ADDITION        reduce using rule 37 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    SUBSTRACTION    reduce using rule 37 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    SEMICOLON       reduce using rule 37 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    EQUALS          reduce using rule 37 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    GREATER         reduce using rule 37 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    LESS            reduce using rule 37 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    NOTEQUAL        reduce using rule 37 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    ISEQUAL         reduce using rule 37 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    CLOSEPAREN      reduce using rule 37 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    COMMA           reduce using rule 37 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    CLOSEBRACKET    reduce using rule 37 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)
    OPENBRACKET     reduce using rule 37 (vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1 .)


state 258

    (84) condition1 -> elseif head_cond body . condition1
    (84) condition1 -> . elseif head_cond body condition1
    (85) condition1 -> . else body
    (86) condition1 -> . empty
    (87) elseif -> . ELSEIF
    (88) else -> . ELSE
    (145) empty -> .

    ELSEIF          shift and go to state 220
    ELSE            shift and go to state 221
    IF              reduce using rule 145 (empty -> .)
    PRINT           reduce using rule 145 (empty -> .)
    READ            reduce using rule 145 (empty -> .)
    ID              reduce using rule 145 (empty -> .)
    RETURN          reduce using rule 145 (empty -> .)
    CIRCLE          reduce using rule 145 (empty -> .)
    SQUARE          reduce using rule 145 (empty -> .)
    TRIANGLE        reduce using rule 145 (empty -> .)
    RECTANGLE       reduce using rule 145 (empty -> .)
    HIDE_STAR       reduce using rule 145 (empty -> .)
    SHOW_STAR       reduce using rule 145 (empty -> .)
    COLOR_STAR      reduce using rule 145 (empty -> .)
    SIZE_STAR       reduce using rule 145 (empty -> .)
    SETXY           reduce using rule 145 (empty -> .)
    HAND_DOWN       reduce using rule 145 (empty -> .)
    HAND_UP         reduce using rule 145 (empty -> .)
    GO              reduce using rule 145 (empty -> .)
    LEFT            reduce using rule 145 (empty -> .)
    RIGHT           reduce using rule 145 (empty -> .)
    BACK            reduce using rule 145 (empty -> .)
    ARC             reduce using rule 145 (empty -> .)
    WHILE           reduce using rule 145 (empty -> .)
    FOR             reduce using rule 145 (empty -> .)
    CLOSEBRACES     reduce using rule 145 (empty -> .)

    elseif                         shift and go to state 217
    condition1                     shift and go to state 265
    else                           shift and go to state 218
    empty                          shift and go to state 219

state 259

    (59) read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .

    IF              reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    PRINT           reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    READ            reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    ID              reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RETURN          reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    CIRCLE          reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SQUARE          reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HIDE_STAR       reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SHOW_STAR       reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    COLOR_STAR      reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SIZE_STAR       reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SETXY           reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HAND_DOWN       reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    HAND_UP         reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    GO              reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    LEFT            reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    RIGHT           reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    BACK            reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    ARC             reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    WHILE           reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    FOR             reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    CLOSEBRACES     reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 59 (read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON .)


state 260

    (60) read1 -> OPENBRACKET exp CLOSEBRACKET . OPENBRACKET exp CLOSEBRACKET
    (61) read1 -> OPENBRACKET exp CLOSEBRACKET .

    OPENBRACKET     shift and go to state 266
    CLOSEPAREN      reduce using rule 61 (read1 -> OPENBRACKET exp CLOSEBRACKET .)


state 261

    (70) funCall3 -> COMMA funCallParam funCall3 .

    CLOSEPAREN      reduce using rule 70 (funCall3 -> COMMA funCallParam funCall3 .)


state 262

    (96) for2 -> TWODOTS exp for3 .

    OPENBRACES      reduce using rule 96 (for2 -> TWODOTS exp for3 .)


state 263

    (97) for3 -> CLOSEPAREN .

    OPENBRACES      reduce using rule 97 (for3 -> CLOSEPAREN .)


state 264

    (102) dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN .

    SEMICOLON       reduce using rule 102 (dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN .)


state 265

    (84) condition1 -> elseif head_cond body condition1 .

    IF              reduce using rule 84 (condition1 -> elseif head_cond body condition1 .)
    PRINT           reduce using rule 84 (condition1 -> elseif head_cond body condition1 .)
    READ            reduce using rule 84 (condition1 -> elseif head_cond body condition1 .)
    ID              reduce using rule 84 (condition1 -> elseif head_cond body condition1 .)
    RETURN          reduce using rule 84 (condition1 -> elseif head_cond body condition1 .)
    CIRCLE          reduce using rule 84 (condition1 -> elseif head_cond body condition1 .)
    SQUARE          reduce using rule 84 (condition1 -> elseif head_cond body condition1 .)
    TRIANGLE        reduce using rule 84 (condition1 -> elseif head_cond body condition1 .)
    RECTANGLE       reduce using rule 84 (condition1 -> elseif head_cond body condition1 .)
    HIDE_STAR       reduce using rule 84 (condition1 -> elseif head_cond body condition1 .)
    SHOW_STAR       reduce using rule 84 (condition1 -> elseif head_cond body condition1 .)
    COLOR_STAR      reduce using rule 84 (condition1 -> elseif head_cond body condition1 .)
    SIZE_STAR       reduce using rule 84 (condition1 -> elseif head_cond body condition1 .)
    SETXY           reduce using rule 84 (condition1 -> elseif head_cond body condition1 .)
    HAND_DOWN       reduce using rule 84 (condition1 -> elseif head_cond body condition1 .)
    HAND_UP         reduce using rule 84 (condition1 -> elseif head_cond body condition1 .)
    GO              reduce using rule 84 (condition1 -> elseif head_cond body condition1 .)
    LEFT            reduce using rule 84 (condition1 -> elseif head_cond body condition1 .)
    RIGHT           reduce using rule 84 (condition1 -> elseif head_cond body condition1 .)
    BACK            reduce using rule 84 (condition1 -> elseif head_cond body condition1 .)
    ARC             reduce using rule 84 (condition1 -> elseif head_cond body condition1 .)
    WHILE           reduce using rule 84 (condition1 -> elseif head_cond body condition1 .)
    FOR             reduce using rule 84 (condition1 -> elseif head_cond body condition1 .)
    CLOSEBRACES     reduce using rule 84 (condition1 -> elseif head_cond body condition1 .)


state 266

    (60) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET . exp CLOSEBRACKET
    (133) exp -> . term
    (134) exp -> . term exp_o exp
    (139) term -> . factor term_o term
    (140) term -> . factor
    (143) factor -> . vcte
    (144) factor -> . openP expression closeP
    (29) vcte -> . cte_int
    (30) vcte -> . cte_float
    (31) vcte -> . cte_string
    (32) vcte -> . id
    (33) vcte -> . funCall
    (34) vcte -> . vectormatriz
    (137) openP -> . OPENPAREN
    (73) cte_int -> . CTEINT
    (74) cte_float -> . CTEFLOAT
    (75) cte_string -> . CTESTRING
    (64) id -> . ID vectormatriz
    (65) funCall -> . ID iniciaFunCall funCall2 terminaFunCall
    (35) vectormatriz -> . OPENBRACKET vm1 CLOSEBRACKET
    (36) vectormatriz -> . vm1
    (37) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET COMMA vm1
    (38) vm1 -> . OPENBRACKET vm2 CLOSEBRACKET

    OPENPAREN       shift and go to state 109
    CTEINT          shift and go to state 110
    CTEFLOAT        shift and go to state 111
    CTESTRING       shift and go to state 112
    ID              shift and go to state 97
    OPENBRACKET     shift and go to state 113

    exp                            shift and go to state 267
    term                           shift and go to state 99
    factor                         shift and go to state 100
    vcte                           shift and go to state 101
    openP                          shift and go to state 102
    cte_int                        shift and go to state 103
    cte_float                      shift and go to state 104
    cte_string                     shift and go to state 105
    id                             shift and go to state 106
    funCall                        shift and go to state 107
    vectormatriz                   shift and go to state 108
    vm1                            shift and go to state 114

state 267

    (60) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp . CLOSEBRACKET

    CLOSEBRACKET    shift and go to state 268


state 268

    (60) read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .

    CLOSEPAREN      reduce using rule 60 (read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CLOSEBRACKET in state 173 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 212 resolved as shift
WARNING: reduce/reduce conflict in state 128 resolved using rule (return1 -> vcte)
WARNING: rejected rule (factor -> vcte) in state 128
