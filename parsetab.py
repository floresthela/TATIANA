
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDITION AND ARC BACK CHAR CIRCLE CLOSEBRACES CLOSEBRACKET CLOSEPAREN COLOR_STAR COMMA CTECHAR CTEFLOAT CTEINT DIVISION ELSE ELSEIF EQUALS FLOAT FOR FUN GO GREATER HAND_DOWN HAND_UP HIDE_STAR ID IF INT ISEQUAL LEFT LESS MULTIPLICATION NOTEQUAL OPENBRACES OPENBRACKET OPENPAREN OR PRINT PROGRAM READ RECTANGLE REPEAT RETURN RIGHT SEMICOLON SETXY SHOW_STAR SIMPLEQUOTES SIZE_STAR SQUARE SUBSTRACTION TRIANGLE TWODOTS VARS VOID WHILE\n    program : PROGRAM ID SEMICOLON program1 program2 star\n    \n    program1 : vars\n            | empty\n    \n    program2 : function program2\n            | empty\n    \n    star : MULTIPLICATION OPENBRACES star2 star1 CLOSEBRACES\n    \n    star1 : stmt star1\n        | empty\n    \n    star2 : vars\n          | empty\n    \n    loop : while\n        | for\n    \n    stmt : assignment\n        | condition\n        | print\n        | loop\n        | read\n        | graphstmt\n        | graphr\n        | funCall\n        | return\n    \n    vars : VARS type ID vars1 SEMICOLON\n    \n    vars1 : EQUALS exp vars2\n        | OPENBRACKET CTEINT CLOSEBRACKET vars3\n        | empty vars2\n    \n    vars2 : COMMA ID vars1\n          | COMMA vars4\n          | empty\n    \n    vars3 : OPENBRACKET CTEINT CLOSEBRACKET\n        | empty\n    \n    vars4 : type ID vars1\n          | empty\n    \n    type : INT\n         | FLOAT\n         | CHAR\n    \n    print : PRINT OPENPAREN exp CLOSEPAREN SEMICOLON\n    \n    read : READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON\n    \n    read1 : OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET\n              | OPENBRACKET exp CLOSEBRACKET\n              | empty\n    \n    assignment : ID assignment1 EQUALS assignment3 SEMICOLON\n    \n    assignment1 : assignment2\n                | assignment2 assignment1\n                | empty\n    \n    assignment2 : OPENBRACKET exp CLOSEBRACKET\n    \n    assignment3 : exp\n                | read\n    \n    vcte : cte\n        | ID vcte1 vcte2\n    \n    vcte1 : OPENBRACKET exp CLOSEBRACKET vcte3\n          | empty\n    \n    vcte2 : OPENPAREN exp CLOSEPAREN vcte4\n        | empty\n    \n    vcte3 : OPENBRACKET exp CLOSEBRACKET\n        | empty\n\n    \n    vcte4 : COMMA exp vcte4\n        | empty\n    \n    cte : CTEINT\n        | CTEFLOAT\n        | CTECHAR\n    \n    return : RETURN return1 SEMICOLON\n    \n    return1 : vcte\n            | exp\n    \n    expression : exp expression1\n    \n    expression1 : loper exp\n             | empty\n    \n    loper : GREATER\n          | LESS\n          | NOTEQUAL\n          | ISEQUAL\n    \n    logical : expression logical1 expression\n    \n    logical1 : OR\n             | AND\n    \n    condition : IF head body condition1\n    \n    condition1 : ELSEIF head body condition1\n               | ELSE body\n               | empty\n    \n    head : OPENPAREN head1 CLOSEPAREN\n    \n    head1 : expression\n          | logical\n    \n    body : OPENBRACES body1 CLOSEBRACES\n    \n    body1 : stmt body1\n          | empty\n    \n    for : FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body\n    \n    while : WHILE  head body\n    \n    funCall : ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON\n    \n    funCall2 : exp funCall3\n             | empty\n    \n    funCall3 : COMMA exp funCall2\n    \n    function : FUN function1 ID function2 OPENBRACES function6 function4 CLOSEBRACES\n    \n    function1 : type\n              | VOID\n    \n    function2 : OPENPAREN function3 CLOSEPAREN\n    \n    function3 : type ID function5\n              | empty\n    \n    function4 : stmt function4\n              | empty\n    \n    function5 : COMMA type ID function3\n    \n    function6 : vars\n              | empty\n    \n    laRegla : OPENPAREN exp COMMA exp CLOSEPAREN\n    \n    laRegla2 : OPENPAREN exp CLOSEPAREN\n    \n    graphstmt : graphfig\n             | graphview\n             | graphmove\n    \n    graphfig : graphfig1 SEMICOLON\n    \n    graphfig1 : CIRCLE laRegla2\n            | SQUARE laRegla2\n            | TRIANGLE laRegla\n            | RECTANGLE laRegla\n    \n    graphmove :  graphmove1  SEMICOLON\n    \n    graphmove1 : HAND_DOWN\n              | HAND_UP\n              | graphmove2\n    \n    graphmove2 : GO laRegla2\n              | LEFT laRegla2\n              | RIGHT laRegla2\n              | BACK laRegla2\n              | ARC laRegla\n    \n    graphr : REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES\n    \n    graphr1 : graphstmt graphr1\n           | empty\n    \n    graphview : graphview1 SEMICOLON\n    \n    graphview1 : HIDE_STAR\n              | SHOW_STAR\n              | graphview2 exp\n    \n    graphview2 : SETXY graphview3\n              | COLOR_STAR\n              | SIZE_STAR\n    \n    graphview3 : exp COMMA\n              | laRegla\n    \n    exp : term exp1\n    \n    exp1 : ADDITION exp\n               | SUBSTRACTION exp\n               | empty\n    \n    factor : vcte\n           | factor1\n    \n    factor1 : factor2 vcte\n            | OPENPAREN expression CLOSEPAREN\n    \n    factor2 : ADDITION\n            | SUBSTRACTION\n    \n    term : factor term1\n    \n    term1 : MULTIPLICATION term\n          | DIVISION term\n          | empty\n    empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,17,124,],[0,-1,-6,]),'ID':([2,13,14,15,16,20,21,22,24,27,30,31,32,35,37,38,39,40,41,42,43,44,45,46,47,48,49,53,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,75,76,88,92,93,94,100,102,105,106,107,108,109,110,111,112,113,114,115,116,122,127,130,132,133,134,140,141,142,143,145,148,151,153,154,160,161,162,165,166,167,168,169,170,171,173,175,177,178,179,180,186,192,193,200,201,205,208,213,222,224,227,229,232,233,234,237,240,242,245,246,247,248,249,251,252,253,255,256,259,268,269,270,273,274,277,279,281,282,283,284,285,286,],[3,23,-33,-34,-35,25,-91,-92,-146,42,66,-9,-10,-22,-146,-146,-136,-137,-48,-146,42,42,-58,-59,-60,-140,-141,120,66,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,42,42,42,42,-128,-129,-146,164,-132,42,42,-135,-142,42,42,-145,-146,42,-51,-138,185,42,42,42,42,198,202,-106,-123,-111,42,42,-127,-131,42,66,-99,-100,-133,-134,-143,-144,-49,42,-53,-139,42,-67,-68,-69,-70,42,-146,66,-61,-85,-130,66,-146,42,-74,-77,66,42,-72,-73,42,42,42,267,-146,42,-50,-55,-41,-86,42,-76,-81,-36,-52,42,-57,-146,-37,-120,-101,-146,-54,-75,42,-84,-56,]),'SEMICOLON':([3,23,26,29,36,37,38,39,40,41,42,45,46,47,51,52,53,79,80,81,86,87,89,90,91,104,105,108,109,112,113,115,116,119,120,121,123,136,137,138,144,146,147,149,150,155,156,157,158,159,165,166,167,168,169,171,173,182,183,184,185,213,216,217,218,219,220,235,241,246,248,249,250,260,268,270,274,279,281,282,286,],[4,-146,35,-146,-146,-146,-146,-136,-137,-48,-146,-58,-59,-60,-28,-25,-146,141,142,143,-124,-125,-112,-113,-114,-23,-132,-135,-142,-145,-146,-51,-138,-146,-146,-27,-32,200,-62,-63,-107,-108,-109,-110,-126,-115,-116,-117,-118,-119,-133,-134,-143,-144,-49,-53,-139,-24,-30,-26,-146,-146,-31,251,-46,-47,252,259,-102,-146,-50,-55,-29,274,-52,-57,-37,-101,-146,-54,-56,]),'VARS':([4,24,100,],[8,8,8,]),'FUN':([4,5,6,7,10,35,243,],[-146,12,-2,-3,12,-22,-90,]),'MULTIPLICATION':([4,5,6,7,9,10,11,19,35,37,38,39,40,41,42,45,46,47,105,108,109,112,113,115,116,137,165,166,167,168,169,171,173,213,243,246,248,249,268,270,281,282,286,],[-146,-146,-2,-3,18,-146,-5,-4,-22,-146,110,-136,-137,-48,-146,-58,-59,-60,-132,-135,-142,-145,-146,-51,-138,-136,-133,-134,-143,-144,-49,-53,-139,-146,-90,-146,-50,-55,-52,-57,-146,-54,-56,]),'INT':([8,12,34,53,211,267,],[14,14,14,14,14,14,]),'FLOAT':([8,12,34,53,211,267,],[15,15,15,15,15,15,]),'CHAR':([8,12,34,53,211,267,],[16,16,16,16,16,16,]),'VOID':([12,],[22,]),'OPENBRACES':([18,33,37,38,39,40,41,42,45,46,47,105,108,109,112,113,115,116,131,135,139,163,165,166,167,168,169,171,173,213,226,231,246,248,249,254,268,270,278,281,282,286,],[24,100,-146,-146,-136,-137,-48,-146,-58,-59,-60,-132,-135,-142,-145,-146,-51,-138,193,199,193,-93,-133,-134,-143,-144,-49,-53,-139,-146,193,-78,-146,-50,-55,193,-52,-57,193,-146,-54,-56,]),'EQUALS':([23,66,120,126,128,129,185,190,223,],[27,-146,27,186,-42,-44,27,-43,-45,]),'OPENBRACKET':([23,42,66,119,120,128,185,198,213,223,275,],[28,114,130,181,28,130,28,237,247,-45,284,]),'COMMA':([23,29,36,37,38,39,40,41,42,45,46,47,105,108,109,112,113,115,116,120,152,164,165,166,167,168,169,171,173,185,188,204,206,213,246,248,249,268,270,281,282,286,],[-146,53,53,-146,-146,-136,-137,-48,-146,-58,-59,-60,-132,-135,-142,-145,-146,-51,-138,-146,205,211,-133,-134,-143,-144,-49,-53,-139,-146,222,242,242,-146,269,-50,-55,-52,-57,269,-54,-56,]),'IF':([24,30,31,32,35,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,100,141,142,143,160,161,162,192,193,200,201,208,224,227,229,251,252,255,256,259,273,274,277,283,285,],[-146,67,-9,-10,-22,67,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-146,-106,-123,-111,67,-99,-100,-146,67,-61,-85,67,-74,-77,67,-41,-86,-76,-81,-36,-146,-37,-120,-75,-84,]),'PRINT':([24,30,31,32,35,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,100,141,142,143,160,161,162,192,193,200,201,208,224,227,229,251,252,255,256,259,273,274,277,283,285,],[-146,68,-9,-10,-22,68,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-146,-106,-123,-111,68,-99,-100,-146,68,-61,-85,68,-74,-77,68,-41,-86,-76,-81,-36,-146,-37,-120,-75,-84,]),'READ':([24,30,31,32,35,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,100,141,142,143,160,161,162,186,192,193,200,201,208,224,227,229,251,252,255,256,259,273,274,277,283,285,],[-146,71,-9,-10,-22,71,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-146,-106,-123,-111,71,-99,-100,71,-146,71,-61,-85,71,-74,-77,71,-41,-86,-76,-81,-36,-146,-37,-120,-75,-84,]),'REPEAT':([24,30,31,32,35,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,100,141,142,143,160,161,162,192,193,200,201,208,224,227,229,251,252,255,256,259,273,274,277,283,285,],[-146,75,-9,-10,-22,75,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-146,-106,-123,-111,75,-99,-100,-146,75,-61,-85,75,-74,-77,75,-41,-86,-76,-81,-36,-146,-37,-120,-75,-84,]),'RETURN':([24,30,31,32,35,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,100,141,142,143,160,161,162,192,193,200,201,208,224,227,229,251,252,255,256,259,273,274,277,283,285,],[-146,76,-9,-10,-22,76,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-146,-106,-123,-111,76,-99,-100,-146,76,-61,-85,76,-74,-77,76,-41,-86,-76,-81,-36,-146,-37,-120,-75,-84,]),'WHILE':([24,30,31,32,35,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,100,141,142,143,160,161,162,192,193,200,201,208,224,227,229,251,252,255,256,259,273,274,277,283,285,],[-146,77,-9,-10,-22,77,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-146,-106,-123,-111,77,-99,-100,-146,77,-61,-85,77,-74,-77,77,-41,-86,-76,-81,-36,-146,-37,-120,-75,-84,]),'FOR':([24,30,31,32,35,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,100,141,142,143,160,161,162,192,193,200,201,208,224,227,229,251,252,255,256,259,273,274,277,283,285,],[-146,78,-9,-10,-22,78,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-146,-106,-123,-111,78,-99,-100,-146,78,-61,-85,78,-74,-77,78,-41,-86,-76,-81,-36,-146,-37,-120,-75,-84,]),'CIRCLE':([24,30,31,32,35,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,100,141,142,143,160,161,162,192,193,199,200,201,208,224,227,229,239,251,252,255,256,259,262,273,274,277,283,285,],[-146,82,-9,-10,-22,82,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-146,-106,-123,-111,82,-99,-100,-146,82,82,-61,-85,82,-74,-77,82,82,-41,-86,-76,-81,-36,82,-146,-37,-120,-75,-84,]),'SQUARE':([24,30,31,32,35,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,100,141,142,143,160,161,162,192,193,199,200,201,208,224,227,229,239,251,252,255,256,259,262,273,274,277,283,285,],[-146,83,-9,-10,-22,83,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-146,-106,-123,-111,83,-99,-100,-146,83,83,-61,-85,83,-74,-77,83,83,-41,-86,-76,-81,-36,83,-146,-37,-120,-75,-84,]),'TRIANGLE':([24,30,31,32,35,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,100,141,142,143,160,161,162,192,193,199,200,201,208,224,227,229,239,251,252,255,256,259,262,273,274,277,283,285,],[-146,84,-9,-10,-22,84,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-146,-106,-123,-111,84,-99,-100,-146,84,84,-61,-85,84,-74,-77,84,84,-41,-86,-76,-81,-36,84,-146,-37,-120,-75,-84,]),'RECTANGLE':([24,30,31,32,35,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,100,141,142,143,160,161,162,192,193,199,200,201,208,224,227,229,239,251,252,255,256,259,262,273,274,277,283,285,],[-146,85,-9,-10,-22,85,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-146,-106,-123,-111,85,-99,-100,-146,85,85,-61,-85,85,-74,-77,85,85,-41,-86,-76,-81,-36,85,-146,-37,-120,-75,-84,]),'HIDE_STAR':([24,30,31,32,35,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,100,141,142,143,160,161,162,192,193,199,200,201,208,224,227,229,239,251,252,255,256,259,262,273,274,277,283,285,],[-146,86,-9,-10,-22,86,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-146,-106,-123,-111,86,-99,-100,-146,86,86,-61,-85,86,-74,-77,86,86,-41,-86,-76,-81,-36,86,-146,-37,-120,-75,-84,]),'SHOW_STAR':([24,30,31,32,35,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,100,141,142,143,160,161,162,192,193,199,200,201,208,224,227,229,239,251,252,255,256,259,262,273,274,277,283,285,],[-146,87,-9,-10,-22,87,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-146,-106,-123,-111,87,-99,-100,-146,87,87,-61,-85,87,-74,-77,87,87,-41,-86,-76,-81,-36,87,-146,-37,-120,-75,-84,]),'HAND_DOWN':([24,30,31,32,35,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,100,141,142,143,160,161,162,192,193,199,200,201,208,224,227,229,239,251,252,255,256,259,262,273,274,277,283,285,],[-146,89,-9,-10,-22,89,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-146,-106,-123,-111,89,-99,-100,-146,89,89,-61,-85,89,-74,-77,89,89,-41,-86,-76,-81,-36,89,-146,-37,-120,-75,-84,]),'HAND_UP':([24,30,31,32,35,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,100,141,142,143,160,161,162,192,193,199,200,201,208,224,227,229,239,251,252,255,256,259,262,273,274,277,283,285,],[-146,90,-9,-10,-22,90,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-146,-106,-123,-111,90,-99,-100,-146,90,90,-61,-85,90,-74,-77,90,90,-41,-86,-76,-81,-36,90,-146,-37,-120,-75,-84,]),'SETXY':([24,30,31,32,35,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,100,141,142,143,160,161,162,192,193,199,200,201,208,224,227,229,239,251,252,255,256,259,262,273,274,277,283,285,],[-146,92,-9,-10,-22,92,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-146,-106,-123,-111,92,-99,-100,-146,92,92,-61,-85,92,-74,-77,92,92,-41,-86,-76,-81,-36,92,-146,-37,-120,-75,-84,]),'COLOR_STAR':([24,30,31,32,35,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,100,141,142,143,160,161,162,192,193,199,200,201,208,224,227,229,239,251,252,255,256,259,262,273,274,277,283,285,],[-146,93,-9,-10,-22,93,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-146,-106,-123,-111,93,-99,-100,-146,93,93,-61,-85,93,-74,-77,93,93,-41,-86,-76,-81,-36,93,-146,-37,-120,-75,-84,]),'SIZE_STAR':([24,30,31,32,35,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,100,141,142,143,160,161,162,192,193,199,200,201,208,224,227,229,239,251,252,255,256,259,262,273,274,277,283,285,],[-146,94,-9,-10,-22,94,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-146,-106,-123,-111,94,-99,-100,-146,94,94,-61,-85,94,-74,-77,94,94,-41,-86,-76,-81,-36,94,-146,-37,-120,-75,-84,]),'GO':([24,30,31,32,35,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,100,141,142,143,160,161,162,192,193,199,200,201,208,224,227,229,239,251,252,255,256,259,262,273,274,277,283,285,],[-146,95,-9,-10,-22,95,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-146,-106,-123,-111,95,-99,-100,-146,95,95,-61,-85,95,-74,-77,95,95,-41,-86,-76,-81,-36,95,-146,-37,-120,-75,-84,]),'LEFT':([24,30,31,32,35,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,100,141,142,143,160,161,162,192,193,199,200,201,208,224,227,229,239,251,252,255,256,259,262,273,274,277,283,285,],[-146,96,-9,-10,-22,96,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-146,-106,-123,-111,96,-99,-100,-146,96,96,-61,-85,96,-74,-77,96,96,-41,-86,-76,-81,-36,96,-146,-37,-120,-75,-84,]),'RIGHT':([24,30,31,32,35,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,100,141,142,143,160,161,162,192,193,199,200,201,208,224,227,229,239,251,252,255,256,259,262,273,274,277,283,285,],[-146,97,-9,-10,-22,97,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-146,-106,-123,-111,97,-99,-100,-146,97,97,-61,-85,97,-74,-77,97,97,-41,-86,-76,-81,-36,97,-146,-37,-120,-75,-84,]),'BACK':([24,30,31,32,35,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,100,141,142,143,160,161,162,192,193,199,200,201,208,224,227,229,239,251,252,255,256,259,262,273,274,277,283,285,],[-146,98,-9,-10,-22,98,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-146,-106,-123,-111,98,-99,-100,-146,98,98,-61,-85,98,-74,-77,98,98,-41,-86,-76,-81,-36,98,-146,-37,-120,-75,-84,]),'ARC':([24,30,31,32,35,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,100,141,142,143,160,161,162,192,193,199,200,201,208,224,227,229,239,251,252,255,256,259,262,273,274,277,283,285,],[-146,99,-9,-10,-22,99,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-146,-106,-123,-111,99,-99,-100,-146,99,99,-61,-85,99,-74,-77,99,99,-41,-86,-76,-81,-36,99,-146,-37,-120,-75,-84,]),'CLOSEBRACES':([24,30,31,32,35,54,55,56,57,58,59,60,61,62,63,64,65,69,70,72,73,74,100,125,141,142,143,160,161,162,192,193,200,201,207,208,209,224,227,228,229,230,239,244,251,252,255,256,257,259,262,263,264,273,274,276,277,283,285,],[-146,-146,-9,-10,-22,124,-146,-8,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-146,-7,-106,-123,-111,-146,-99,-100,-146,-146,-61,-85,243,-146,-97,-74,-77,256,-146,-83,-146,-96,-41,-86,-76,-81,-82,-36,-146,277,-122,-146,-37,-121,-120,-75,-84,]),'OPENPAREN':([25,27,37,38,39,40,41,42,44,45,46,47,66,67,68,71,75,76,77,78,82,83,84,85,88,92,93,94,95,96,97,98,99,105,106,107,108,109,110,111,112,113,114,115,116,127,130,132,133,145,148,151,153,154,165,166,167,168,169,170,171,173,175,177,178,179,180,186,205,213,222,225,232,233,234,237,240,242,246,247,248,249,253,268,269,270,279,281,282,284,286,],[34,44,-146,-146,-136,-137,-48,-146,44,-58,-59,-60,127,132,133,134,44,44,132,140,145,145,148,148,44,154,-128,-129,145,145,145,145,148,-132,44,44,-135,-142,44,44,-145,170,44,-51,-138,44,44,44,44,44,44,-127,-131,44,-133,-134,-143,-144,-49,44,-53,-139,44,-67,-68,-69,-70,44,-130,-146,44,132,44,-72,-73,44,44,44,-146,44,-50,-55,44,-52,44,-57,-101,-146,-54,44,-56,]),'CTEINT':([27,28,37,38,39,40,41,42,43,44,45,46,47,48,49,75,76,88,92,93,94,105,106,107,108,109,110,111,112,113,114,115,116,127,130,132,133,145,148,151,153,154,165,166,167,168,169,170,171,173,175,177,178,179,180,181,186,205,213,222,232,233,234,237,240,242,246,247,248,249,253,268,269,270,279,281,282,284,286,],[45,50,-146,-146,-136,-137,-48,-146,45,45,-58,-59,-60,-140,-141,45,45,45,45,-128,-129,-132,45,45,-135,-142,45,45,-145,-146,45,-51,-138,45,45,45,45,45,45,-127,-131,45,-133,-134,-143,-144,-49,45,-53,-139,45,-67,-68,-69,-70,215,45,-130,-146,45,45,-72,-73,45,45,45,-146,45,-50,-55,45,-52,45,-57,-101,-146,-54,45,-56,]),'CTEFLOAT':([27,37,38,39,40,41,42,43,44,45,46,47,48,49,75,76,88,92,93,94,105,106,107,108,109,110,111,112,113,114,115,116,127,130,132,133,145,148,151,153,154,165,166,167,168,169,170,171,173,175,177,178,179,180,186,205,213,222,232,233,234,237,240,242,246,247,248,249,253,268,269,270,279,281,282,284,286,],[46,-146,-146,-136,-137,-48,-146,46,46,-58,-59,-60,-140,-141,46,46,46,46,-128,-129,-132,46,46,-135,-142,46,46,-145,-146,46,-51,-138,46,46,46,46,46,46,-127,-131,46,-133,-134,-143,-144,-49,46,-53,-139,46,-67,-68,-69,-70,46,-130,-146,46,46,-72,-73,46,46,46,-146,46,-50,-55,46,-52,46,-57,-101,-146,-54,46,-56,]),'CTECHAR':([27,37,38,39,40,41,42,43,44,45,46,47,48,49,75,76,88,92,93,94,105,106,107,108,109,110,111,112,113,114,115,116,127,130,132,133,145,148,151,153,154,165,166,167,168,169,170,171,173,175,177,178,179,180,186,205,213,222,232,233,234,237,240,242,246,247,248,249,253,268,269,270,279,281,282,284,286,],[47,-146,-146,-136,-137,-48,-146,47,47,-58,-59,-60,-140,-141,47,47,47,47,-128,-129,-132,47,47,-135,-142,47,47,-145,-146,47,-51,-138,47,47,47,47,47,47,-127,-131,47,-133,-134,-143,-144,-49,47,-53,-139,47,-67,-68,-69,-70,47,-130,-146,47,47,-72,-73,47,47,47,-146,47,-50,-55,47,-52,47,-57,-101,-146,-54,47,-56,]),'ADDITION':([27,37,38,39,40,41,42,44,45,46,47,75,76,88,92,93,94,105,106,107,108,109,110,111,112,113,114,115,116,127,130,132,133,137,145,148,151,153,154,165,166,167,168,169,170,171,173,175,177,178,179,180,186,205,213,222,232,233,234,237,240,242,246,247,248,249,253,268,269,270,279,281,282,284,286,],[48,106,-146,-136,-137,-48,-146,48,-58,-59,-60,48,48,48,48,-128,-129,-132,48,48,-135,-142,48,48,-145,-146,48,-51,-138,48,48,48,48,-136,48,48,-127,-131,48,-133,-134,-143,-144,-49,48,-53,-139,48,-67,-68,-69,-70,48,-130,-146,48,48,-72,-73,48,48,48,-146,48,-50,-55,48,-52,48,-57,-101,-146,-54,48,-56,]),'SUBSTRACTION':([27,37,38,39,40,41,42,44,45,46,47,75,76,88,92,93,94,105,106,107,108,109,110,111,112,113,114,115,116,127,130,132,133,137,145,148,151,153,154,165,166,167,168,169,170,171,173,175,177,178,179,180,186,205,213,222,232,233,234,237,240,242,246,247,248,249,253,268,269,270,279,281,282,284,286,],[49,107,-146,-136,-137,-48,-146,49,-58,-59,-60,49,49,49,49,-128,-129,-132,49,49,-135,-142,49,49,-145,-146,49,-51,-138,49,49,49,49,-136,49,49,-127,-131,49,-133,-134,-143,-144,-49,49,-53,-139,49,-67,-68,-69,-70,49,-130,-146,49,49,-72,-73,49,49,49,-146,49,-50,-55,49,-52,49,-57,-101,-146,-54,49,-56,]),'CLOSEPAREN':([34,37,38,39,40,41,42,45,46,47,101,103,105,108,109,112,113,115,116,117,118,127,165,166,167,168,169,171,173,174,176,187,189,194,195,196,197,198,203,206,210,212,213,214,221,236,238,246,248,249,253,258,265,266,267,268,270,272,275,280,281,282,286,288,],[-146,-146,-146,-136,-137,-48,-146,-58,-59,-60,163,-95,-132,-135,-142,-145,-146,-51,-138,173,-146,-146,-133,-134,-143,-144,-49,-53,-139,-64,-66,220,-88,231,-79,-80,235,-146,241,-146,-94,246,-146,-65,-87,260,-40,-146,-50,-55,-146,-71,278,279,-146,-52,-57,-89,-39,-98,-146,-54,-56,-38,]),'GREATER':([37,38,39,40,41,42,45,46,47,105,108,109,112,113,115,116,118,165,166,167,168,169,171,173,206,213,246,248,249,268,270,281,282,286,],[-146,-146,-136,-137,-48,-146,-58,-59,-60,-132,-135,-142,-145,-146,-51,-138,177,-133,-134,-143,-144,-49,-53,-139,177,-146,-146,-50,-55,-52,-57,-146,-54,-56,]),'LESS':([37,38,39,40,41,42,45,46,47,105,108,109,112,113,115,116,118,165,166,167,168,169,171,173,206,213,246,248,249,268,270,281,282,286,],[-146,-146,-136,-137,-48,-146,-58,-59,-60,-132,-135,-142,-145,-146,-51,-138,178,-133,-134,-143,-144,-49,-53,-139,178,-146,-146,-50,-55,-52,-57,-146,-54,-56,]),'NOTEQUAL':([37,38,39,40,41,42,45,46,47,105,108,109,112,113,115,116,118,165,166,167,168,169,171,173,206,213,246,248,249,268,270,281,282,286,],[-146,-146,-136,-137,-48,-146,-58,-59,-60,-132,-135,-142,-145,-146,-51,-138,179,-133,-134,-143,-144,-49,-53,-139,179,-146,-146,-50,-55,-52,-57,-146,-54,-56,]),'ISEQUAL':([37,38,39,40,41,42,45,46,47,105,108,109,112,113,115,116,118,165,166,167,168,169,171,173,206,213,246,248,249,268,270,281,282,286,],[-146,-146,-136,-137,-48,-146,-58,-59,-60,-132,-135,-142,-145,-146,-51,-138,180,-133,-134,-143,-144,-49,-53,-139,180,-146,-146,-50,-55,-52,-57,-146,-54,-56,]),'CLOSEBRACKET':([37,38,39,40,41,42,45,46,47,50,105,108,109,112,113,115,116,165,166,167,168,169,171,172,173,191,213,215,246,248,249,261,268,270,271,281,282,286,287,],[-146,-146,-136,-137,-48,-146,-58,-59,-60,119,-132,-135,-142,-145,-146,-51,-138,-133,-134,-143,-144,-49,-53,213,-139,223,-146,250,-146,-50,-55,275,-52,-57,282,-146,-54,-56,288,]),'OR':([37,38,39,40,41,42,45,46,47,105,108,109,112,113,115,116,118,165,166,167,168,169,171,173,174,176,195,213,214,246,248,249,268,270,281,282,286,],[-146,-146,-136,-137,-48,-146,-58,-59,-60,-132,-135,-142,-145,-146,-51,-138,-146,-133,-134,-143,-144,-49,-53,-139,-64,-66,233,-146,-65,-146,-50,-55,-52,-57,-146,-54,-56,]),'AND':([37,38,39,40,41,42,45,46,47,105,108,109,112,113,115,116,118,165,166,167,168,169,171,173,174,176,195,213,214,246,248,249,268,270,281,282,286,],[-146,-146,-136,-137,-48,-146,-58,-59,-60,-132,-135,-142,-145,-146,-51,-138,-146,-133,-134,-143,-144,-49,-53,-139,-64,-66,234,-146,-65,-146,-50,-55,-52,-57,-146,-54,-56,]),'DIVISION':([37,38,39,40,41,42,45,46,47,105,108,109,112,113,115,116,137,165,166,167,168,169,171,173,213,246,248,249,268,270,281,282,286,],[-146,111,-136,-137,-48,-146,-58,-59,-60,-132,-135,-142,-145,-146,-51,-138,-136,-133,-134,-143,-144,-49,-53,-139,-146,-146,-50,-55,-52,-57,-146,-54,-56,]),'ELSEIF':([192,256,273,],[225,-81,225,]),'ELSE':([192,256,273,],[226,-81,226,]),'TWODOTS':([202,],[240,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program1':([4,],[5,]),'vars':([4,24,100,],[6,31,161,]),'empty':([4,5,10,23,24,29,30,34,36,37,38,42,53,55,66,100,113,118,119,120,127,128,160,185,192,193,198,206,208,213,229,239,246,253,262,267,273,281,],[7,11,11,29,32,51,56,103,51,108,112,115,123,56,129,162,171,176,183,29,189,129,209,29,227,230,238,176,209,249,230,264,270,189,264,103,227,270,]),'program2':([5,10,],[9,19,]),'function':([5,10,],[10,10,]),'type':([8,12,34,53,211,267,],[13,21,102,122,245,102,]),'star':([9,],[17,]),'function1':([12,],[20,]),'vars1':([23,120,185,],[26,184,216,]),'star2':([24,],[30,]),'function2':([25,],[33,]),'exp':([27,44,75,76,88,92,106,107,114,127,130,132,133,145,148,154,170,175,186,222,232,237,240,242,247,253,269,284,],[36,118,135,138,150,152,165,166,172,188,191,118,197,203,204,206,212,214,218,253,118,261,265,266,271,188,281,287,]),'term':([27,44,75,76,88,92,106,107,110,111,114,127,130,132,133,145,148,154,170,175,186,222,232,237,240,242,247,253,269,284,],[37,37,37,37,37,37,37,37,167,168,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'factor':([27,44,75,76,88,92,106,107,110,111,114,127,130,132,133,145,148,154,170,175,186,222,232,237,240,242,247,253,269,284,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'vcte':([27,43,44,75,76,88,92,106,107,110,111,114,127,130,132,133,145,148,154,170,175,186,222,232,237,240,242,247,253,269,284,],[39,116,39,39,137,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'factor1':([27,44,75,76,88,92,106,107,110,111,114,127,130,132,133,145,148,154,170,175,186,222,232,237,240,242,247,253,269,284,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'cte':([27,43,44,75,76,88,92,106,107,110,111,114,127,130,132,133,145,148,154,170,175,186,222,232,237,240,242,247,253,269,284,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'factor2':([27,44,75,76,88,92,106,107,110,111,114,127,130,132,133,145,148,154,170,175,186,222,232,237,240,242,247,253,269,284,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'vars2':([29,36,],[52,104,]),'star1':([30,55,],[54,125,]),'stmt':([30,55,160,193,208,229,],[55,55,208,229,208,229,]),'assignment':([30,55,160,193,208,229,],[57,57,57,57,57,57,]),'condition':([30,55,160,193,208,229,],[58,58,58,58,58,58,]),'print':([30,55,160,193,208,229,],[59,59,59,59,59,59,]),'loop':([30,55,160,193,208,229,],[60,60,60,60,60,60,]),'read':([30,55,160,186,193,208,229,],[61,61,61,219,61,61,61,]),'graphstmt':([30,55,160,193,199,208,229,239,262,],[62,62,62,62,239,62,62,262,262,]),'graphr':([30,55,160,193,208,229,],[63,63,63,63,63,63,]),'funCall':([30,55,160,193,208,229,],[64,64,64,64,64,64,]),'return':([30,55,160,193,208,229,],[65,65,65,65,65,65,]),'while':([30,55,160,193,208,229,],[69,69,69,69,69,69,]),'for':([30,55,160,193,208,229,],[70,70,70,70,70,70,]),'graphfig':([30,55,160,193,199,208,229,239,262,],[72,72,72,72,72,72,72,72,72,]),'graphview':([30,55,160,193,199,208,229,239,262,],[73,73,73,73,73,73,73,73,73,]),'graphmove':([30,55,160,193,199,208,229,239,262,],[74,74,74,74,74,74,74,74,74,]),'graphfig1':([30,55,160,193,199,208,229,239,262,],[79,79,79,79,79,79,79,79,79,]),'graphview1':([30,55,160,193,199,208,229,239,262,],[80,80,80,80,80,80,80,80,80,]),'graphmove1':([30,55,160,193,199,208,229,239,262,],[81,81,81,81,81,81,81,81,81,]),'graphview2':([30,55,160,193,199,208,229,239,262,],[88,88,88,88,88,88,88,88,88,]),'graphmove2':([30,55,160,193,199,208,229,239,262,],[91,91,91,91,91,91,91,91,91,]),'function3':([34,267,],[101,280,]),'exp1':([37,],[105,]),'term1':([38,],[109,]),'vcte1':([42,],[113,]),'expression':([44,132,154,232,],[117,195,117,258,]),'vars4':([53,],[121,]),'assignment1':([66,128,],[126,190,]),'assignment2':([66,128,],[128,128,]),'head':([67,77,225,],[131,139,254,]),'return1':([76,],[136,]),'laRegla2':([82,83,95,96,97,98,],[144,146,155,156,157,158,]),'laRegla':([84,85,92,99,],[147,149,153,159,]),'graphview3':([92,],[151,]),'function6':([100,],[160,]),'vcte2':([113,],[169,]),'expression1':([118,206,],[174,174,]),'loper':([118,206,],[175,175,]),'vars3':([119,],[182,]),'funCall2':([127,253,],[187,272,]),'body':([131,139,226,254,278,],[192,201,255,273,285,]),'head1':([132,],[194,]),'logical':([132,],[196,]),'function4':([160,208,],[207,244,]),'function5':([164,],[210,]),'assignment3':([186,],[217,]),'funCall3':([188,],[221,]),'condition1':([192,273,],[224,283,]),'body1':([193,229,],[228,257,]),'logical1':([195,],[232,]),'read1':([198,],[236,]),'vcte3':([213,],[248,]),'graphr1':([239,262,],[263,276,]),'vcte4':([246,281,],[268,286,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON program1 program2 star','program',6,'p_program','parser.py',15),
  ('program1 -> vars','program1',1,'p_program1','parser.py',21),
  ('program1 -> empty','program1',1,'p_program1','parser.py',22),
  ('program2 -> function program2','program2',2,'p_program2','parser.py',27),
  ('program2 -> empty','program2',1,'p_program2','parser.py',28),
  ('star -> MULTIPLICATION OPENBRACES star2 star1 CLOSEBRACES','star',5,'p_star','parser.py',34),
  ('star1 -> stmt star1','star1',2,'p_star1','parser.py',40),
  ('star1 -> empty','star1',1,'p_star1','parser.py',41),
  ('star2 -> vars','star2',1,'p_star2','parser.py',46),
  ('star2 -> empty','star2',1,'p_star2','parser.py',47),
  ('loop -> while','loop',1,'p_loop','parser.py',54),
  ('loop -> for','loop',1,'p_loop','parser.py',55),
  ('stmt -> assignment','stmt',1,'p_stmt','parser.py',62),
  ('stmt -> condition','stmt',1,'p_stmt','parser.py',63),
  ('stmt -> print','stmt',1,'p_stmt','parser.py',64),
  ('stmt -> loop','stmt',1,'p_stmt','parser.py',65),
  ('stmt -> read','stmt',1,'p_stmt','parser.py',66),
  ('stmt -> graphstmt','stmt',1,'p_stmt','parser.py',67),
  ('stmt -> graphr','stmt',1,'p_stmt','parser.py',68),
  ('stmt -> funCall','stmt',1,'p_stmt','parser.py',69),
  ('stmt -> return','stmt',1,'p_stmt','parser.py',70),
  ('vars -> VARS type ID vars1 SEMICOLON','vars',5,'p_vars','parser.py',77),
  ('vars1 -> EQUALS exp vars2','vars1',3,'p_vars1','parser.py',83),
  ('vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3','vars1',4,'p_vars1','parser.py',84),
  ('vars1 -> empty vars2','vars1',2,'p_vars1','parser.py',85),
  ('vars2 -> COMMA ID vars1','vars2',3,'p_vars2','parser.py',91),
  ('vars2 -> COMMA vars4','vars2',2,'p_vars2','parser.py',92),
  ('vars2 -> empty','vars2',1,'p_vars2','parser.py',93),
  ('vars3 -> OPENBRACKET CTEINT CLOSEBRACKET','vars3',3,'p_vars3','parser.py',99),
  ('vars3 -> empty','vars3',1,'p_vars3','parser.py',100),
  ('vars4 -> type ID vars1','vars4',3,'p_vars4','parser.py',106),
  ('vars4 -> empty','vars4',1,'p_vars4','parser.py',107),
  ('type -> INT','type',1,'p_type','parser.py',114),
  ('type -> FLOAT','type',1,'p_type','parser.py',115),
  ('type -> CHAR','type',1,'p_type','parser.py',116),
  ('print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON','print',5,'p_print','parser.py',123),
  ('read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON','read',6,'p_read','parser.py',129),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET','read1',6,'p_read1','parser.py',135),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET','read1',3,'p_read1','parser.py',136),
  ('read1 -> empty','read1',1,'p_read1','parser.py',137),
  ('assignment -> ID assignment1 EQUALS assignment3 SEMICOLON','assignment',5,'p_assignment','parser.py',144),
  ('assignment1 -> assignment2','assignment1',1,'p_assignment1','parser.py',151),
  ('assignment1 -> assignment2 assignment1','assignment1',2,'p_assignment1','parser.py',152),
  ('assignment1 -> empty','assignment1',1,'p_assignment1','parser.py',153),
  ('assignment2 -> OPENBRACKET exp CLOSEBRACKET','assignment2',3,'p_assignment2','parser.py',160),
  ('assignment3 -> exp','assignment3',1,'p_assignment3','parser.py',167),
  ('assignment3 -> read','assignment3',1,'p_assignment3','parser.py',168),
  ('vcte -> cte','vcte',1,'p_vcte','parser.py',176),
  ('vcte -> ID vcte1 vcte2','vcte',3,'p_vcte','parser.py',177),
  ('vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3','vcte1',4,'p_vcte1','parser.py',183),
  ('vcte1 -> empty','vcte1',1,'p_vcte1','parser.py',184),
  ('vcte2 -> OPENPAREN exp CLOSEPAREN vcte4','vcte2',4,'p_vcte2','parser.py',190),
  ('vcte2 -> empty','vcte2',1,'p_vcte2','parser.py',191),
  ('vcte3 -> OPENBRACKET exp CLOSEBRACKET','vcte3',3,'p_vcte3','parser.py',197),
  ('vcte3 -> empty','vcte3',1,'p_vcte3','parser.py',198),
  ('vcte4 -> COMMA exp vcte4','vcte4',3,'p_vcte4','parser.py',205),
  ('vcte4 -> empty','vcte4',1,'p_vcte4','parser.py',206),
  ('cte -> CTEINT','cte',1,'p_cte','parser.py',213),
  ('cte -> CTEFLOAT','cte',1,'p_cte','parser.py',214),
  ('cte -> CTECHAR','cte',1,'p_cte','parser.py',215),
  ('return -> RETURN return1 SEMICOLON','return',3,'p_return','parser.py',221),
  ('return1 -> vcte','return1',1,'p_return1','parser.py',227),
  ('return1 -> exp','return1',1,'p_return1','parser.py',228),
  ('expression -> exp expression1','expression',2,'p_expression','parser.py',235),
  ('expression1 -> loper exp','expression1',2,'p_expression1','parser.py',241),
  ('expression1 -> empty','expression1',1,'p_expression1','parser.py',242),
  ('loper -> GREATER','loper',1,'p_loper','parser.py',249),
  ('loper -> LESS','loper',1,'p_loper','parser.py',250),
  ('loper -> NOTEQUAL','loper',1,'p_loper','parser.py',251),
  ('loper -> ISEQUAL','loper',1,'p_loper','parser.py',252),
  ('logical -> expression logical1 expression','logical',3,'p_logical','parser.py',259),
  ('logical1 -> OR','logical1',1,'p_logical1','parser.py',265),
  ('logical1 -> AND','logical1',1,'p_logical1','parser.py',266),
  ('condition -> IF head body condition1','condition',4,'p_condition','parser.py',273),
  ('condition1 -> ELSEIF head body condition1','condition1',4,'p_condition1','parser.py',279),
  ('condition1 -> ELSE body','condition1',2,'p_condition1','parser.py',280),
  ('condition1 -> empty','condition1',1,'p_condition1','parser.py',281),
  ('head -> OPENPAREN head1 CLOSEPAREN','head',3,'p_head','parser.py',288),
  ('head1 -> expression','head1',1,'p_head1','parser.py',294),
  ('head1 -> logical','head1',1,'p_head1','parser.py',295),
  ('body -> OPENBRACES body1 CLOSEBRACES','body',3,'p_body','parser.py',301),
  ('body1 -> stmt body1','body1',2,'p_body1','parser.py',306),
  ('body1 -> empty','body1',1,'p_body1','parser.py',307),
  ('for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body','for',7,'p_for','parser.py',314),
  ('while -> WHILE head body','while',3,'p_while','parser.py',321),
  ('funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON','funCall',5,'p_funCall','parser.py',328),
  ('funCall2 -> exp funCall3','funCall2',2,'p_funCall2','parser.py',334),
  ('funCall2 -> empty','funCall2',1,'p_funCall2','parser.py',335),
  ('funCall3 -> COMMA exp funCall2','funCall3',3,'p_funCall3','parser.py',340),
  ('function -> FUN function1 ID function2 OPENBRACES function6 function4 CLOSEBRACES','function',8,'p_function','parser.py',346),
  ('function1 -> type','function1',1,'p_function1','parser.py',351),
  ('function1 -> VOID','function1',1,'p_function1','parser.py',352),
  ('function2 -> OPENPAREN function3 CLOSEPAREN','function2',3,'p_function2','parser.py',357),
  ('function3 -> type ID function5','function3',3,'p_function3','parser.py',362),
  ('function3 -> empty','function3',1,'p_function3','parser.py',363),
  ('function4 -> stmt function4','function4',2,'p_function4','parser.py',368),
  ('function4 -> empty','function4',1,'p_function4','parser.py',369),
  ('function5 -> COMMA type ID function3','function5',4,'p_function5','parser.py',373),
  ('function6 -> vars','function6',1,'p_function6','parser.py',378),
  ('function6 -> empty','function6',1,'p_function6','parser.py',379),
  ('laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN','laRegla',5,'p_laRegla','parser.py',385),
  ('laRegla2 -> OPENPAREN exp CLOSEPAREN','laRegla2',3,'p_laRegla2','parser.py',391),
  ('graphstmt -> graphfig','graphstmt',1,'p_graphstmt','parser.py',398),
  ('graphstmt -> graphview','graphstmt',1,'p_graphstmt','parser.py',399),
  ('graphstmt -> graphmove','graphstmt',1,'p_graphstmt','parser.py',400),
  ('graphfig -> graphfig1 SEMICOLON','graphfig',2,'p_graphfig','parser.py',406),
  ('graphfig1 -> CIRCLE laRegla2','graphfig1',2,'p_graphfig1','parser.py',411),
  ('graphfig1 -> SQUARE laRegla2','graphfig1',2,'p_graphfig1','parser.py',412),
  ('graphfig1 -> TRIANGLE laRegla','graphfig1',2,'p_graphfig1','parser.py',413),
  ('graphfig1 -> RECTANGLE laRegla','graphfig1',2,'p_graphfig1','parser.py',414),
  ('graphmove -> graphmove1 SEMICOLON','graphmove',2,'p_graphmove','parser.py',420),
  ('graphmove1 -> HAND_DOWN','graphmove1',1,'p_graphmove1','parser.py',425),
  ('graphmove1 -> HAND_UP','graphmove1',1,'p_graphmove1','parser.py',426),
  ('graphmove1 -> graphmove2','graphmove1',1,'p_graphmove1','parser.py',427),
  ('graphmove2 -> GO laRegla2','graphmove2',2,'p_graphmove2','parser.py',432),
  ('graphmove2 -> LEFT laRegla2','graphmove2',2,'p_graphmove2','parser.py',433),
  ('graphmove2 -> RIGHT laRegla2','graphmove2',2,'p_graphmove2','parser.py',434),
  ('graphmove2 -> BACK laRegla2','graphmove2',2,'p_graphmove2','parser.py',435),
  ('graphmove2 -> ARC laRegla','graphmove2',2,'p_graphmove2','parser.py',436),
  ('graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES','graphr',6,'p_graphr','parser.py',442),
  ('graphr1 -> graphstmt graphr1','graphr1',2,'p_graphr1','parser.py',447),
  ('graphr1 -> empty','graphr1',1,'p_graphr1','parser.py',448),
  ('graphview -> graphview1 SEMICOLON','graphview',2,'p_graphview','parser.py',454),
  ('graphview1 -> HIDE_STAR','graphview1',1,'p_graphview1','parser.py',459),
  ('graphview1 -> SHOW_STAR','graphview1',1,'p_graphview1','parser.py',460),
  ('graphview1 -> graphview2 exp','graphview1',2,'p_graphview1','parser.py',461),
  ('graphview2 -> SETXY graphview3','graphview2',2,'p_graphview2','parser.py',466),
  ('graphview2 -> COLOR_STAR','graphview2',1,'p_graphview2','parser.py',467),
  ('graphview2 -> SIZE_STAR','graphview2',1,'p_graphview2','parser.py',468),
  ('graphview3 -> exp COMMA','graphview3',2,'p_graphview3','parser.py',473),
  ('graphview3 -> laRegla','graphview3',1,'p_graphview3','parser.py',474),
  ('exp -> term exp1','exp',2,'p_exp','parser.py',480),
  ('exp1 -> ADDITION exp','exp1',2,'p_exp1','parser.py',485),
  ('exp1 -> SUBSTRACTION exp','exp1',2,'p_exp1','parser.py',486),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',487),
  ('factor -> vcte','factor',1,'p_factor','parser.py',493),
  ('factor -> factor1','factor',1,'p_factor','parser.py',494),
  ('factor1 -> factor2 vcte','factor1',2,'p_factor1','parser.py',499),
  ('factor1 -> OPENPAREN expression CLOSEPAREN','factor1',3,'p_factor1','parser.py',500),
  ('factor2 -> ADDITION','factor2',1,'p_factor2','parser.py',505),
  ('factor2 -> SUBSTRACTION','factor2',1,'p_factor2','parser.py',506),
  ('term -> factor term1','term',2,'p_term','parser.py',512),
  ('term1 -> MULTIPLICATION term','term1',2,'p_term1','parser.py',518),
  ('term1 -> DIVISION term','term1',2,'p_term1','parser.py',519),
  ('term1 -> empty','term1',1,'p_term1','parser.py',520),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',525),
]
