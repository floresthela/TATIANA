
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDITION AND ARC BACK CHAR CIRCLE CLOSEBRACES CLOSEBRACKET CLOSEPAREN COLOR_STAR COMMA CTECHAR CTEFLOAT CTEINT DIVISION ELSE ELSEIF EQUALS FLOAT FOR FUN GO GREATER HAND_DOWN HAND_UP HIDE_STAR ID IF INT ISEQUAL LEFT LESS MULTIPLICATION NOTEQUAL OPENBRACES OPENBRACKET OPENPAREN OR PRINT PROGRAM READ RECTANGLE REPEAT RETURN RIGHT SEMICOLON SETXY SHOW_STAR SIMPLEQUOTES SIZE_STAR SQUARE SUBSTRACTION TRIANGLE TWODOTS VARS VOID WHILE\n    program : PROGRAM ID SEMICOLON program_vars program2 star\n    \n    program_vars : vars program_vars\n            | empty\n    \n    program2 : function program2\n            | empty\n    \n    star : MULTIPLICATION OPENBRACES star_vars star1 CLOSEBRACES\n    \n    star1 : stmt star1\n        | empty\n    \n    star_vars : vars star_vars\n          | empty\n    \n    loop : while\n        | for\n    \n    stmt : assignment\n        | condition\n        | print\n        | loop\n        | read\n        | graphstmt\n        | graphr\n        | funCall\n        | return\n    \n    function : FUN function1 ID function2 inicia_fun fun_vars function4 termina_fun\n    \n    function1 : type\n              | VOID\n    \n    inicia_fun : OPENBRACES\n    \n    termina_fun : CLOSEBRACES\n    \n    function2 : OPENPAREN function3 CLOSEPAREN\n    \n    function3 : type ID function5\n              | empty\n    \n    function4 : stmt function4\n              | empty\n    \n    function5 : COMMA type ID function3\n    \n    fun_vars : vars fun_vars\n              | empty\n    \n    vars : type ID vars1 SEMICOLON\n    \n    vars1 : EQUALS exp vars2\n        | OPENBRACKET CTEINT CLOSEBRACKET vars3\n        | vars2\n    \n    vars2 : COMMA ID vars1\n          | empty\n    \n    vars3 : OPENBRACKET CTEINT CLOSEBRACKET\n        | empty\n    \n    type : INT\n         | FLOAT\n         | CHAR\n    \n    print : PRINT OPENPAREN exp CLOSEPAREN SEMICOLON\n    \n    read : READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON\n    \n    read1 : OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET\n              | OPENBRACKET exp CLOSEBRACKET\n              | empty\n    \n    assignment : ID assignment1 EQUALS assignment3 SEMICOLON\n    \n    assignment1 : assignment2\n                | assignment2 assignment1\n                | empty\n    \n    assignment2 : OPENBRACKET exp CLOSEBRACKET\n    \n    assignment3 : exp\n                | read\n    \n    vcte : cte\n        | ID vcte1\n        | funCall\n    \n    vcte1 : OPENBRACKET exp CLOSEBRACKET vcte3\n          | empty\n    \n    vcte3 : OPENBRACKET exp CLOSEBRACKET\n        | empty\n\n    \n    cte : CTEINT\n        | CTEFLOAT\n        | CTECHAR\n    \n    return : RETURN return1 SEMICOLON\n    \n    return1 : vcte\n            | exp\n    \n    expression : exp expression1\n    \n    expression1 : loper exp\n             | empty\n    \n    loper : GREATER\n          | LESS\n          | NOTEQUAL\n          | ISEQUAL\n    \n    logical : expression logical1 expression\n    \n    logical1 : OR\n             | AND\n    \n    condition : IF head body condition1\n    \n    condition1 : ELSEIF head body condition1\n               | ELSE body\n               | empty\n    \n    head : OPENPAREN head1 CLOSEPAREN\n    \n    head1 : expression\n          | logical\n    \n    body : OPENBRACES body1 CLOSEBRACES\n    \n    body1 : stmt body1\n          | empty\n    \n    for : FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body\n    \n    while : WHILE  head body\n    \n    funCall : ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON\n    \n    funCall2 : exp funCall3\n             | empty\n    \n    funCall3 : COMMA exp funCall2\n             | empty\n    \n    laRegla : OPENPAREN exp COMMA exp CLOSEPAREN\n    \n    laRegla2 : OPENPAREN exp CLOSEPAREN\n    \n    graphstmt : graphfig\n             | graphview\n             | graphmove\n    \n    graphfig : graphfig1 SEMICOLON\n    \n    graphfig1 : CIRCLE laRegla2\n            | SQUARE laRegla2\n            | TRIANGLE laRegla\n            | RECTANGLE laRegla\n    \n    graphmove :  graphmove1  SEMICOLON\n    \n    graphmove1 : HAND_DOWN\n              | HAND_UP\n              | graphmove2\n    \n    graphmove2 : GO laRegla2\n              | LEFT laRegla2\n              | RIGHT laRegla2\n              | BACK laRegla2\n              | ARC laRegla\n    \n    graphr : REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES\n    \n    graphr1 : graphstmt graphr1\n           | empty\n    \n    graphview : graphview1 SEMICOLON\n    \n    graphview1 : HIDE_STAR\n              | SHOW_STAR\n              | graphview2 exp\n    \n    graphview2 : SETXY graphview3\n              | COLOR_STAR\n              | SIZE_STAR\n    \n    graphview3 : exp COMMA\n              | laRegla\n    \n    exp : term exp1\n    \n    exp1 : ADDITION exp\n         | SUBSTRACTION exp\n         | empty\n    \n    openP : OPENPAREN\n    \n    closeP : CLOSEPAREN\n    \n    factor : vcte\n           | factor1\n    \n    factor1 : factor2 vcte\n            | openP expression closeP\n    \n    factor2 : ADDITION\n            | SUBSTRACTION\n    \n    term : factor term1\n    \n    term1 : MULTIPLICATION term\n          | DIVISION term\n          | empty\n    empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_vars':([4,6,],[5,16,]),'vars':([4,6,30,52,121,182,],[6,6,52,52,182,182,]),'empty':([4,5,6,13,17,30,33,34,35,39,50,51,52,55,66,71,72,75,86,121,131,149,181,182,190,196,197,202,211,217,231,241,260,265,267,],[7,14,7,14,29,53,29,60,64,68,29,76,53,125,132,138,145,76,150,183,189,150,212,183,220,229,232,240,212,132,232,262,262,125,229,]),'type':([4,6,15,30,52,55,121,182,215,265,],[8,8,22,8,8,124,8,8,248,124,]),'program2':([5,13,],[12,20,]),'function':([5,13,],[13,13,]),'star':([12,],[18,]),'function1':([15,],[21,]),'vars1':([17,50,],[24,73,]),'vars2':([17,33,50,],[26,56,26,]),'exp':([25,42,58,59,66,67,95,96,108,112,137,151,153,154,166,169,175,188,193,217,218,234,239,242,244,276,],[33,71,126,127,131,133,156,159,171,173,191,195,71,201,207,208,208,217,223,131,250,71,259,263,264,278,]),'term':([25,42,58,59,62,63,66,67,95,96,108,112,137,151,153,154,166,169,175,188,193,217,218,234,239,242,244,276,],[34,34,34,34,128,129,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'factor':([25,42,58,59,62,63,66,67,95,96,108,112,137,151,153,154,166,169,175,188,193,217,218,234,239,242,244,276,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'vcte':([25,41,42,58,59,62,63,66,67,95,96,108,112,137,151,153,154,166,169,175,188,193,217,218,234,239,242,244,276,],[36,69,36,36,36,36,36,36,36,36,158,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'factor1':([25,42,58,59,62,63,66,67,95,96,108,112,137,151,153,154,166,169,175,188,193,217,218,234,239,242,244,276,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'cte':([25,41,42,58,59,62,63,66,67,95,96,108,112,137,151,153,154,166,169,175,188,193,217,218,234,239,242,244,276,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'funCall':([25,41,42,51,58,59,62,63,66,67,75,95,96,108,112,137,151,153,154,166,169,175,181,188,193,197,211,217,218,231,234,239,242,244,276,],[40,40,40,84,40,40,40,40,40,40,84,40,40,40,40,40,40,40,40,40,40,40,84,40,40,84,84,40,40,84,40,40,40,40,40,]),'factor2':([25,42,58,59,62,63,66,67,95,96,108,112,137,151,153,154,166,169,175,188,193,217,218,234,239,242,244,276,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'openP':([25,42,58,59,62,63,66,67,95,96,108,112,137,151,153,154,166,169,175,188,193,217,218,234,239,242,244,276,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'star_vars':([30,52,],[51,120,]),'function2':([31,],[54,]),'exp1':([34,],[57,]),'term1':([35,],[61,]),'vcte1':([39,],[65,]),'expression':([42,153,234,],[70,199,256,]),'star1':([51,75,],[74,147,]),'stmt':([51,75,181,197,211,231,],[75,75,211,231,211,231,]),'assignment':([51,75,181,197,211,231,],[77,77,77,77,77,77,]),'condition':([51,75,181,197,211,231,],[78,78,78,78,78,78,]),'print':([51,75,181,197,211,231,],[79,79,79,79,79,79,]),'loop':([51,75,181,197,211,231,],[80,80,80,80,80,80,]),'read':([51,75,181,193,197,211,231,],[81,81,81,224,81,81,81,]),'graphstmt':([51,75,181,197,203,211,231,241,260,],[82,82,82,82,241,82,82,260,260,]),'graphr':([51,75,181,197,211,231,],[83,83,83,83,83,83,]),'return':([51,75,181,197,211,231,],[85,85,85,85,85,85,]),'while':([51,75,181,197,211,231,],[89,89,89,89,89,89,]),'for':([51,75,181,197,211,231,],[90,90,90,90,90,90,]),'graphfig':([51,75,181,197,203,211,231,241,260,],[92,92,92,92,92,92,92,92,92,]),'graphview':([51,75,181,197,203,211,231,241,260,],[93,93,93,93,93,93,93,93,93,]),'graphmove':([51,75,181,197,203,211,231,241,260,],[94,94,94,94,94,94,94,94,94,]),'graphfig1':([51,75,181,197,203,211,231,241,260,],[99,99,99,99,99,99,99,99,99,]),'graphview1':([51,75,181,197,203,211,231,241,260,],[100,100,100,100,100,100,100,100,100,]),'graphmove1':([51,75,181,197,203,211,231,241,260,],[101,101,101,101,101,101,101,101,101,]),'graphview2':([51,75,181,197,203,211,231,241,260,],[108,108,108,108,108,108,108,108,108,]),'graphmove2':([51,75,181,197,203,211,231,241,260,],[111,111,111,111,111,111,111,111,111,]),'inicia_fun':([54,],[121,]),'function3':([55,265,],[123,274,]),'funCall2':([66,217,],[130,249,]),'closeP':([70,],[134,]),'expression1':([71,],[136,]),'loper':([71,],[137,]),'vars3':([72,],[144,]),'assignment1':([86,149,],[148,194,]),'assignment2':([86,149,],[149,149,]),'head':([87,97,227,],[152,160,252,]),'return1':([96,],[157,]),'laRegla2':([102,103,115,116,117,118,],[165,167,176,177,178,179,]),'laRegla':([104,105,112,119,],[168,170,174,180,]),'graphview3':([112,],[172,]),'fun_vars':([121,182,],[181,213,]),'funCall3':([131,],[187,]),'body':([152,160,228,252,272,],[196,205,253,267,277,]),'head1':([153,],[198,]),'logical':([153,],[200,]),'function4':([181,211,],[210,247,]),'function5':([185,],[214,]),'vcte3':([190,],[219,]),'assignment3':([193,],[222,]),'condition1':([196,267,],[226,275,]),'body1':([197,231,],[230,255,]),'logical1':([199,],[234,]),'read1':([202,],[238,]),'termina_fun':([210,],[245,]),'graphr1':([241,260,],[261,270,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON program_vars program2 star','program',6,'p_program','parser.py',22),
  ('program_vars -> vars program_vars','program_vars',2,'p_program_vars','parser.py',43),
  ('program_vars -> empty','program_vars',1,'p_program_vars','parser.py',44),
  ('program2 -> function program2','program2',2,'p_program2','parser.py',51),
  ('program2 -> empty','program2',1,'p_program2','parser.py',52),
  ('star -> MULTIPLICATION OPENBRACES star_vars star1 CLOSEBRACES','star',5,'p_star','parser.py',61),
  ('star1 -> stmt star1','star1',2,'p_star1','parser.py',73),
  ('star1 -> empty','star1',1,'p_star1','parser.py',74),
  ('star_vars -> vars star_vars','star_vars',2,'p_star_vars','parser.py',80),
  ('star_vars -> empty','star_vars',1,'p_star_vars','parser.py',81),
  ('loop -> while','loop',1,'p_loop','parser.py',89),
  ('loop -> for','loop',1,'p_loop','parser.py',90),
  ('stmt -> assignment','stmt',1,'p_stmt','parser.py',97),
  ('stmt -> condition','stmt',1,'p_stmt','parser.py',98),
  ('stmt -> print','stmt',1,'p_stmt','parser.py',99),
  ('stmt -> loop','stmt',1,'p_stmt','parser.py',100),
  ('stmt -> read','stmt',1,'p_stmt','parser.py',101),
  ('stmt -> graphstmt','stmt',1,'p_stmt','parser.py',102),
  ('stmt -> graphr','stmt',1,'p_stmt','parser.py',103),
  ('stmt -> funCall','stmt',1,'p_stmt','parser.py',104),
  ('stmt -> return','stmt',1,'p_stmt','parser.py',105),
  ('function -> FUN function1 ID function2 inicia_fun fun_vars function4 termina_fun','function',8,'p_function','parser.py',113),
  ('function1 -> type','function1',1,'p_function1','parser.py',122),
  ('function1 -> VOID','function1',1,'p_function1','parser.py',123),
  ('inicia_fun -> OPENBRACES','inicia_fun',1,'p_inicia_fun','parser.py',130),
  ('termina_fun -> CLOSEBRACES','termina_fun',1,'p_termina_fun','parser.py',136),
  ('function2 -> OPENPAREN function3 CLOSEPAREN','function2',3,'p_function2','parser.py',149),
  ('function3 -> type ID function5','function3',3,'p_function3','parser.py',155),
  ('function3 -> empty','function3',1,'p_function3','parser.py',156),
  ('function4 -> stmt function4','function4',2,'p_function4','parser.py',162),
  ('function4 -> empty','function4',1,'p_function4','parser.py',163),
  ('function5 -> COMMA type ID function3','function5',4,'p_function5','parser.py',169),
  ('fun_vars -> vars fun_vars','fun_vars',2,'p_fun_vars','parser.py',175),
  ('fun_vars -> empty','fun_vars',1,'p_fun_vars','parser.py',176),
  ('vars -> type ID vars1 SEMICOLON','vars',4,'p_vars','parser.py',196),
  ('vars1 -> EQUALS exp vars2','vars1',3,'p_vars1','parser.py',215),
  ('vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3','vars1',4,'p_vars1','parser.py',216),
  ('vars1 -> vars2','vars1',1,'p_vars1','parser.py',217),
  ('vars2 -> COMMA ID vars1','vars2',3,'p_vars2','parser.py',233),
  ('vars2 -> empty','vars2',1,'p_vars2','parser.py',234),
  ('vars3 -> OPENBRACKET CTEINT CLOSEBRACKET','vars3',3,'p_vars3','parser.py',242),
  ('vars3 -> empty','vars3',1,'p_vars3','parser.py',243),
  ('type -> INT','type',1,'p_type','parser.py',250),
  ('type -> FLOAT','type',1,'p_type','parser.py',251),
  ('type -> CHAR','type',1,'p_type','parser.py',252),
  ('print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON','print',5,'p_print','parser.py',260),
  ('read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON','read',6,'p_read','parser.py',268),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET','read1',6,'p_read1','parser.py',274),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET','read1',3,'p_read1','parser.py',275),
  ('read1 -> empty','read1',1,'p_read1','parser.py',276),
  ('assignment -> ID assignment1 EQUALS assignment3 SEMICOLON','assignment',5,'p_assignment','parser.py',283),
  ('assignment1 -> assignment2','assignment1',1,'p_assignment1','parser.py',293),
  ('assignment1 -> assignment2 assignment1','assignment1',2,'p_assignment1','parser.py',294),
  ('assignment1 -> empty','assignment1',1,'p_assignment1','parser.py',295),
  ('assignment2 -> OPENBRACKET exp CLOSEBRACKET','assignment2',3,'p_assignment2','parser.py',301),
  ('assignment3 -> exp','assignment3',1,'p_assignment3','parser.py',307),
  ('assignment3 -> read','assignment3',1,'p_assignment3','parser.py',308),
  ('vcte -> cte','vcte',1,'p_vcte','parser.py',316),
  ('vcte -> ID vcte1','vcte',2,'p_vcte','parser.py',317),
  ('vcte -> funCall','vcte',1,'p_vcte','parser.py',318),
  ('vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3','vcte1',4,'p_vcte1','parser.py',332),
  ('vcte1 -> empty','vcte1',1,'p_vcte1','parser.py',333),
  ('vcte3 -> OPENBRACKET exp CLOSEBRACKET','vcte3',3,'p_vcte3','parser.py',339),
  ('vcte3 -> empty','vcte3',1,'p_vcte3','parser.py',340),
  ('cte -> CTEINT','cte',1,'p_cte','parser.py',349),
  ('cte -> CTEFLOAT','cte',1,'p_cte','parser.py',350),
  ('cte -> CTECHAR','cte',1,'p_cte','parser.py',351),
  ('return -> RETURN return1 SEMICOLON','return',3,'p_return','parser.py',360),
  ('return1 -> vcte','return1',1,'p_return1','parser.py',366),
  ('return1 -> exp','return1',1,'p_return1','parser.py',367),
  ('expression -> exp expression1','expression',2,'p_expression','parser.py',375),
  ('expression1 -> loper exp','expression1',2,'p_expression1','parser.py',381),
  ('expression1 -> empty','expression1',1,'p_expression1','parser.py',382),
  ('loper -> GREATER','loper',1,'p_loper','parser.py',389),
  ('loper -> LESS','loper',1,'p_loper','parser.py',390),
  ('loper -> NOTEQUAL','loper',1,'p_loper','parser.py',391),
  ('loper -> ISEQUAL','loper',1,'p_loper','parser.py',392),
  ('logical -> expression logical1 expression','logical',3,'p_logical','parser.py',402),
  ('logical1 -> OR','logical1',1,'p_logical1','parser.py',408),
  ('logical1 -> AND','logical1',1,'p_logical1','parser.py',409),
  ('condition -> IF head body condition1','condition',4,'p_condition','parser.py',416),
  ('condition1 -> ELSEIF head body condition1','condition1',4,'p_condition1','parser.py',422),
  ('condition1 -> ELSE body','condition1',2,'p_condition1','parser.py',423),
  ('condition1 -> empty','condition1',1,'p_condition1','parser.py',424),
  ('head -> OPENPAREN head1 CLOSEPAREN','head',3,'p_head','parser.py',431),
  ('head1 -> expression','head1',1,'p_head1','parser.py',437),
  ('head1 -> logical','head1',1,'p_head1','parser.py',438),
  ('body -> OPENBRACES body1 CLOSEBRACES','body',3,'p_body','parser.py',446),
  ('body1 -> stmt body1','body1',2,'p_body1','parser.py',452),
  ('body1 -> empty','body1',1,'p_body1','parser.py',453),
  ('for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body','for',7,'p_for','parser.py',460),
  ('while -> WHILE head body','while',3,'p_while','parser.py',467),
  ('funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON','funCall',5,'p_funCall','parser.py',474),
  ('funCall2 -> exp funCall3','funCall2',2,'p_funCall2','parser.py',480),
  ('funCall2 -> empty','funCall2',1,'p_funCall2','parser.py',481),
  ('funCall3 -> COMMA exp funCall2','funCall3',3,'p_funCall3','parser.py',487),
  ('funCall3 -> empty','funCall3',1,'p_funCall3','parser.py',488),
  ('laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN','laRegla',5,'p_laRegla','parser.py',494),
  ('laRegla2 -> OPENPAREN exp CLOSEPAREN','laRegla2',3,'p_laRegla2','parser.py',500),
  ('graphstmt -> graphfig','graphstmt',1,'p_graphstmt','parser.py',507),
  ('graphstmt -> graphview','graphstmt',1,'p_graphstmt','parser.py',508),
  ('graphstmt -> graphmove','graphstmt',1,'p_graphstmt','parser.py',509),
  ('graphfig -> graphfig1 SEMICOLON','graphfig',2,'p_graphfig','parser.py',517),
  ('graphfig1 -> CIRCLE laRegla2','graphfig1',2,'p_graphfig1','parser.py',523),
  ('graphfig1 -> SQUARE laRegla2','graphfig1',2,'p_graphfig1','parser.py',524),
  ('graphfig1 -> TRIANGLE laRegla','graphfig1',2,'p_graphfig1','parser.py',525),
  ('graphfig1 -> RECTANGLE laRegla','graphfig1',2,'p_graphfig1','parser.py',526),
  ('graphmove -> graphmove1 SEMICOLON','graphmove',2,'p_graphmove','parser.py',534),
  ('graphmove1 -> HAND_DOWN','graphmove1',1,'p_graphmove1','parser.py',540),
  ('graphmove1 -> HAND_UP','graphmove1',1,'p_graphmove1','parser.py',541),
  ('graphmove1 -> graphmove2','graphmove1',1,'p_graphmove1','parser.py',542),
  ('graphmove2 -> GO laRegla2','graphmove2',2,'p_graphmove2','parser.py',548),
  ('graphmove2 -> LEFT laRegla2','graphmove2',2,'p_graphmove2','parser.py',549),
  ('graphmove2 -> RIGHT laRegla2','graphmove2',2,'p_graphmove2','parser.py',550),
  ('graphmove2 -> BACK laRegla2','graphmove2',2,'p_graphmove2','parser.py',551),
  ('graphmove2 -> ARC laRegla','graphmove2',2,'p_graphmove2','parser.py',552),
  ('graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES','graphr',6,'p_graphr','parser.py',560),
  ('graphr1 -> graphstmt graphr1','graphr1',2,'p_graphr1','parser.py',566),
  ('graphr1 -> empty','graphr1',1,'p_graphr1','parser.py',567),
  ('graphview -> graphview1 SEMICOLON','graphview',2,'p_graphview','parser.py',575),
  ('graphview1 -> HIDE_STAR','graphview1',1,'p_graphview1','parser.py',581),
  ('graphview1 -> SHOW_STAR','graphview1',1,'p_graphview1','parser.py',582),
  ('graphview1 -> graphview2 exp','graphview1',2,'p_graphview1','parser.py',583),
  ('graphview2 -> SETXY graphview3','graphview2',2,'p_graphview2','parser.py',589),
  ('graphview2 -> COLOR_STAR','graphview2',1,'p_graphview2','parser.py',590),
  ('graphview2 -> SIZE_STAR','graphview2',1,'p_graphview2','parser.py',591),
  ('graphview3 -> exp COMMA','graphview3',2,'p_graphview3','parser.py',597),
  ('graphview3 -> laRegla','graphview3',1,'p_graphview3','parser.py',598),
  ('exp -> term exp1','exp',2,'p_exp','parser.py',606),
  ('exp1 -> ADDITION exp','exp1',2,'p_exp1','parser.py',629),
  ('exp1 -> SUBSTRACTION exp','exp1',2,'p_exp1','parser.py',630),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',631),
  ('openP -> OPENPAREN','openP',1,'p_openP','parser.py',641),
  ('closeP -> CLOSEPAREN','closeP',1,'p_closeP','parser.py',649),
  ('factor -> vcte','factor',1,'p_factor','parser.py',659),
  ('factor -> factor1','factor',1,'p_factor','parser.py',660),
  ('factor1 -> factor2 vcte','factor1',2,'p_factor1','parser.py',667),
  ('factor1 -> openP expression closeP','factor1',3,'p_factor1','parser.py',668),
  ('factor2 -> ADDITION','factor2',1,'p_factor2','parser.py',674),
  ('factor2 -> SUBSTRACTION','factor2',1,'p_factor2','parser.py',675),
  ('term -> factor term1','term',2,'p_term','parser.py',689),
  ('term1 -> MULTIPLICATION term','term1',2,'p_term1','parser.py',695),
  ('term1 -> DIVISION term','term1',2,'p_term1','parser.py',696),
  ('term1 -> empty','term1',1,'p_term1','parser.py',697),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',707),
]
