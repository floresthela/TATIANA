
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDITION AND ARC BACK CHAR CIRCLE CLOSEBRACES CLOSEBRACKET CLOSEPAREN COLOR_STAR COMMA CTECHAR CTEFLOAT CTEINT DIVISION ELSE ELSEIF EQUALS FLOAT FOR FUN GO GREATER HAND_DOWN HAND_UP HIDE_STAR ID IF INT ISEQUAL LEFT LESS MULTIPLICATION NOTEQUAL OPENBRACES OPENBRACKET OPENPAREN OR PRINT PROGRAM READ RECTANGLE REPEAT RETURN RIGHT SEMICOLON SETXY SHOW_STAR SIMPLEQUOTES SIZE_STAR SQUARE SUBSTRACTION TRIANGLE TWODOTS VARS VOID WHILE\n    program : PROGRAM ID SEMICOLON program1 program2 star\n    \n    program1 : vars\n            | empty\n    \n    program2 : function program2\n            | empty\n    \n    star : MULTIPLICATION OPENBRACES star2 star1 CLOSEBRACES\n    \n    star1 : stmt star1\n        | empty\n    \n    star2 : vars\n          | empty\n    \n    loop : while\n        | for\n    \n    stmt : assignment\n        | condition\n        | print\n        | loop\n        | read\n        | graphstmt\n        | graphr\n        | funCall\n        | return\n    \n    vars : VARS type ID vars1 SEMICOLON\n    \n    vars1 : EQUALS exp vars2\n        | OPENBRACKET CTEINT CLOSEBRACKET vars3\n        | empty vars2\n    \n    vars2 : COMMA ID vars1\n          | COMMA vars4\n          | empty\n    \n    vars3 : OPENBRACKET CTEINT CLOSEBRACKET\n        | empty\n    \n    vars4 : type ID vars1\n          | empty\n    \n    type : INT\n         | FLOAT\n         | CHAR\n    \n    print : PRINT OPENPAREN exp CLOSEPAREN SEMICOLON\n    \n    read : READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON\n    \n    read1 : OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET\n              | OPENBRACKET exp CLOSEBRACKET\n              | empty\n    \n    assignment : ID assignment1 EQUALS assignment3 SEMICOLON\n    \n    assignment1 : assignment2\n                | assignment2 assignment1\n                | empty\n    \n    assignment2 : OPENBRACKET exp CLOSEBRACKET\n    \n    assignment3 : exp\n                | read\n    \n    vcte : cte\n        | ID vcte1\n        | funCall\n    \n    vcte1 : OPENBRACKET exp CLOSEBRACKET vcte3\n          | empty\n    \n    vcte3 : OPENBRACKET exp CLOSEBRACKET\n        | empty\n\n    \n    cte : CTEINT\n        | CTEFLOAT\n        | CTECHAR\n    \n    return : RETURN return1 SEMICOLON\n    \n    return1 : vcte\n            | exp\n    \n    expression : exp expression1\n    \n    expression1 : loper exp\n             | empty\n    \n    loper : GREATER\n          | LESS\n          | NOTEQUAL\n          | ISEQUAL\n    \n    logical : expression logical1 expression\n    \n    logical1 : OR\n             | AND\n    \n    condition : IF head body condition1\n    \n    condition1 : ELSEIF head body condition1\n               | ELSE body\n               | empty\n    \n    head : OPENPAREN head1 CLOSEPAREN\n    \n    head1 : expression\n          | logical\n    \n    body : OPENBRACES body1 CLOSEBRACES\n    \n    body1 : stmt body1\n          | empty\n    \n    for : FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body\n    \n    while : WHILE  head body\n    \n    funCall : ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON\n    \n    funCall2 : exp funCall3\n             | empty\n    \n    funCall3 : COMMA exp funCall2\n             | empty\n    \n    function : FUN function1 ID function2 OPENBRACES function6 function4 CLOSEBRACES\n    \n    function1 : type\n              | VOID\n    \n    function2 : OPENPAREN function3 CLOSEPAREN\n    \n    function3 : type ID function5\n              | empty\n    \n    function4 : stmt function4\n              | empty\n    \n    function5 : COMMA type ID function3\n    \n    function6 : vars\n              | empty\n    \n    laRegla : OPENPAREN exp COMMA exp CLOSEPAREN\n    \n    laRegla2 : OPENPAREN exp CLOSEPAREN\n    \n    graphstmt : graphfig\n             | graphview\n             | graphmove\n    \n    graphfig : graphfig1 SEMICOLON\n    \n    graphfig1 : CIRCLE laRegla2\n            | SQUARE laRegla2\n            | TRIANGLE laRegla\n            | RECTANGLE laRegla\n    \n    graphmove :  graphmove1  SEMICOLON\n    \n    graphmove1 : HAND_DOWN\n              | HAND_UP\n              | graphmove2\n    \n    graphmove2 : GO laRegla2\n              | LEFT laRegla2\n              | RIGHT laRegla2\n              | BACK laRegla2\n              | ARC laRegla\n    \n    graphr : REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES\n    \n    graphr1 : graphstmt graphr1\n           | empty\n    \n    graphview : graphview1 SEMICOLON\n    \n    graphview1 : HIDE_STAR\n              | SHOW_STAR\n              | graphview2 exp\n    \n    graphview2 : SETXY graphview3\n              | COLOR_STAR\n              | SIZE_STAR\n    \n    graphview3 : exp COMMA\n              | laRegla\n    \n    exp : term exp1\n    \n    exp1 : ADDITION exp\n         | SUBSTRACTION exp\n         | empty\n    \n    openP : OPENPAREN\n    \n    closeP : CLOSEPAREN\n    \n    factor : vcte\n           | factor1\n    \n    factor1 : factor2 vcte\n            | openP expression closeP\n    \n    factor2 : ADDITION\n            | SUBSTRACTION\n    \n    term : factor term1\n    \n    term1 : MULTIPLICATION term\n          | DIVISION term\n          | empty\n    empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program1':([4,],[5,]),'vars':([4,24,102,],[6,31,163,]),'empty':([4,5,10,23,24,29,30,34,36,37,38,42,55,57,68,102,116,121,122,123,130,162,172,188,192,193,198,207,215,228,238,246,260,265,268,],[7,11,11,29,32,53,58,105,53,110,114,118,126,58,131,164,173,179,186,29,131,208,214,29,226,229,237,208,249,229,262,173,262,105,226,]),'program2':([5,10,],[9,19,]),'function':([5,10,],[10,10,]),'type':([8,12,34,55,210,265,],[13,21,104,125,244,104,]),'star':([9,],[17,]),'function1':([12,],[20,]),'vars1':([23,123,188,],[26,187,218,]),'star2':([24,],[30,]),'function2':([25,],[33,]),'exp':([27,45,77,78,90,94,108,109,116,117,132,134,135,147,150,156,178,189,213,231,236,239,241,246,247,278,],[36,121,137,140,152,154,167,168,172,174,191,121,197,203,204,204,216,220,246,121,259,263,264,172,267,280,]),'term':([27,45,77,78,90,94,108,109,112,113,116,117,132,134,135,147,150,156,178,189,213,231,236,239,241,246,247,278,],[37,37,37,37,37,37,37,37,169,170,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'factor':([27,45,77,78,90,94,108,109,112,113,116,117,132,134,135,147,150,156,178,189,213,231,236,239,241,246,247,278,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'vcte':([27,44,45,77,78,90,94,108,109,112,113,116,117,132,134,135,147,150,156,178,189,213,231,236,239,241,246,247,278,],[39,119,39,39,139,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'factor1':([27,45,77,78,90,94,108,109,112,113,116,117,132,134,135,147,150,156,178,189,213,231,236,239,241,246,247,278,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'cte':([27,44,45,77,78,90,94,108,109,112,113,116,117,132,134,135,147,150,156,178,189,213,231,236,239,241,246,247,278,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'funCall':([27,30,44,45,57,77,78,90,94,108,109,112,113,116,117,132,134,135,147,150,156,162,178,189,193,207,213,228,231,236,239,241,246,247,278,],[43,66,43,43,66,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,66,43,43,66,66,43,66,43,43,43,43,43,43,43,]),'factor2':([27,45,77,78,90,94,108,109,112,113,116,117,132,134,135,147,150,156,178,189,213,231,236,239,241,246,247,278,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'openP':([27,45,77,78,90,94,108,109,112,113,116,117,132,134,135,147,150,156,178,189,213,231,236,239,241,246,247,278,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'vars2':([29,36,],[54,106,]),'star1':([30,57,],[56,128,]),'stmt':([30,57,162,193,207,228,],[57,57,207,228,207,228,]),'assignment':([30,57,162,193,207,228,],[59,59,59,59,59,59,]),'condition':([30,57,162,193,207,228,],[60,60,60,60,60,60,]),'print':([30,57,162,193,207,228,],[61,61,61,61,61,61,]),'loop':([30,57,162,193,207,228,],[62,62,62,62,62,62,]),'read':([30,57,162,189,193,207,228,],[63,63,63,221,63,63,63,]),'graphstmt':([30,57,162,193,199,207,228,238,260,],[64,64,64,64,238,64,64,260,260,]),'graphr':([30,57,162,193,207,228,],[65,65,65,65,65,65,]),'return':([30,57,162,193,207,228,],[67,67,67,67,67,67,]),'while':([30,57,162,193,207,228,],[71,71,71,71,71,71,]),'for':([30,57,162,193,207,228,],[72,72,72,72,72,72,]),'graphfig':([30,57,162,193,199,207,228,238,260,],[74,74,74,74,74,74,74,74,74,]),'graphview':([30,57,162,193,199,207,228,238,260,],[75,75,75,75,75,75,75,75,75,]),'graphmove':([30,57,162,193,199,207,228,238,260,],[76,76,76,76,76,76,76,76,76,]),'graphfig1':([30,57,162,193,199,207,228,238,260,],[81,81,81,81,81,81,81,81,81,]),'graphview1':([30,57,162,193,199,207,228,238,260,],[82,82,82,82,82,82,82,82,82,]),'graphmove1':([30,57,162,193,199,207,228,238,260,],[83,83,83,83,83,83,83,83,83,]),'graphview2':([30,57,162,193,199,207,228,238,260,],[90,90,90,90,90,90,90,90,90,]),'graphmove2':([30,57,162,193,199,207,228,238,260,],[93,93,93,93,93,93,93,93,93,]),'function3':([34,265,],[103,275,]),'exp1':([37,],[107,]),'term1':([38,],[111,]),'vcte1':([42,],[115,]),'expression':([45,134,231,],[120,195,256,]),'vars4':([55,],[124,]),'assignment1':([68,130,],[129,190,]),'assignment2':([68,130,],[130,130,]),'head':([69,79,224,],[133,141,252,]),'return1':([78,],[138,]),'laRegla2':([84,85,97,98,99,100,],[146,148,157,158,159,160,]),'laRegla':([86,87,94,101,],[149,151,155,161,]),'graphview3':([94,],[153,]),'function6':([102,],[162,]),'funCall2':([116,246,],[171,266,]),'closeP':([120,],[175,]),'expression1':([121,],[177,]),'loper':([121,],[178,]),'vars3':([122,],[185,]),'body':([133,141,225,252,273,],[192,201,253,268,279,]),'head1':([134,],[194,]),'logical':([134,],[196,]),'function4':([162,207,],[206,243,]),'function5':([166,],[209,]),'funCall3':([172,],[212,]),'assignment3':([189,],[219,]),'condition1':([192,268,],[223,277,]),'body1':([193,228,],[227,255,]),'logical1':([195,],[231,]),'read1':([198,],[235,]),'vcte3':([215,],[248,]),'graphr1':([238,260,],[261,271,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON program1 program2 star','program',6,'p_program','parser.py',18),
  ('program1 -> vars','program1',1,'p_program1','parser.py',24),
  ('program1 -> empty','program1',1,'p_program1','parser.py',25),
  ('program2 -> function program2','program2',2,'p_program2','parser.py',30),
  ('program2 -> empty','program2',1,'p_program2','parser.py',31),
  ('star -> MULTIPLICATION OPENBRACES star2 star1 CLOSEBRACES','star',5,'p_star','parser.py',37),
  ('star1 -> stmt star1','star1',2,'p_star1','parser.py',43),
  ('star1 -> empty','star1',1,'p_star1','parser.py',44),
  ('star2 -> vars','star2',1,'p_star2','parser.py',49),
  ('star2 -> empty','star2',1,'p_star2','parser.py',50),
  ('loop -> while','loop',1,'p_loop','parser.py',57),
  ('loop -> for','loop',1,'p_loop','parser.py',58),
  ('stmt -> assignment','stmt',1,'p_stmt','parser.py',65),
  ('stmt -> condition','stmt',1,'p_stmt','parser.py',66),
  ('stmt -> print','stmt',1,'p_stmt','parser.py',67),
  ('stmt -> loop','stmt',1,'p_stmt','parser.py',68),
  ('stmt -> read','stmt',1,'p_stmt','parser.py',69),
  ('stmt -> graphstmt','stmt',1,'p_stmt','parser.py',70),
  ('stmt -> graphr','stmt',1,'p_stmt','parser.py',71),
  ('stmt -> funCall','stmt',1,'p_stmt','parser.py',72),
  ('stmt -> return','stmt',1,'p_stmt','parser.py',73),
  ('vars -> VARS type ID vars1 SEMICOLON','vars',5,'p_vars','parser.py',80),
  ('vars1 -> EQUALS exp vars2','vars1',3,'p_vars1','parser.py',88),
  ('vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3','vars1',4,'p_vars1','parser.py',89),
  ('vars1 -> empty vars2','vars1',2,'p_vars1','parser.py',90),
  ('vars2 -> COMMA ID vars1','vars2',3,'p_vars2','parser.py',96),
  ('vars2 -> COMMA vars4','vars2',2,'p_vars2','parser.py',97),
  ('vars2 -> empty','vars2',1,'p_vars2','parser.py',98),
  ('vars3 -> OPENBRACKET CTEINT CLOSEBRACKET','vars3',3,'p_vars3','parser.py',104),
  ('vars3 -> empty','vars3',1,'p_vars3','parser.py',105),
  ('vars4 -> type ID vars1','vars4',3,'p_vars4','parser.py',111),
  ('vars4 -> empty','vars4',1,'p_vars4','parser.py',112),
  ('type -> INT','type',1,'p_type','parser.py',119),
  ('type -> FLOAT','type',1,'p_type','parser.py',120),
  ('type -> CHAR','type',1,'p_type','parser.py',121),
  ('print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON','print',5,'p_print','parser.py',130),
  ('read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON','read',6,'p_read','parser.py',136),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET','read1',6,'p_read1','parser.py',142),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET','read1',3,'p_read1','parser.py',143),
  ('read1 -> empty','read1',1,'p_read1','parser.py',144),
  ('assignment -> ID assignment1 EQUALS assignment3 SEMICOLON','assignment',5,'p_assignment','parser.py',151),
  ('assignment1 -> assignment2','assignment1',1,'p_assignment1','parser.py',162),
  ('assignment1 -> assignment2 assignment1','assignment1',2,'p_assignment1','parser.py',163),
  ('assignment1 -> empty','assignment1',1,'p_assignment1','parser.py',164),
  ('assignment2 -> OPENBRACKET exp CLOSEBRACKET','assignment2',3,'p_assignment2','parser.py',171),
  ('assignment3 -> exp','assignment3',1,'p_assignment3','parser.py',178),
  ('assignment3 -> read','assignment3',1,'p_assignment3','parser.py',179),
  ('vcte -> cte','vcte',1,'p_vcte','parser.py',187),
  ('vcte -> ID vcte1','vcte',2,'p_vcte','parser.py',188),
  ('vcte -> funCall','vcte',1,'p_vcte','parser.py',189),
  ('vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3','vcte1',4,'p_vcte1','parser.py',200),
  ('vcte1 -> empty','vcte1',1,'p_vcte1','parser.py',201),
  ('vcte3 -> OPENBRACKET exp CLOSEBRACKET','vcte3',3,'p_vcte3','parser.py',206),
  ('vcte3 -> empty','vcte3',1,'p_vcte3','parser.py',207),
  ('cte -> CTEINT','cte',1,'p_cte','parser.py',214),
  ('cte -> CTEFLOAT','cte',1,'p_cte','parser.py',215),
  ('cte -> CTECHAR','cte',1,'p_cte','parser.py',216),
  ('return -> RETURN return1 SEMICOLON','return',3,'p_return','parser.py',223),
  ('return1 -> vcte','return1',1,'p_return1','parser.py',229),
  ('return1 -> exp','return1',1,'p_return1','parser.py',230),
  ('expression -> exp expression1','expression',2,'p_expression','parser.py',237),
  ('expression1 -> loper exp','expression1',2,'p_expression1','parser.py',243),
  ('expression1 -> empty','expression1',1,'p_expression1','parser.py',244),
  ('loper -> GREATER','loper',1,'p_loper','parser.py',252),
  ('loper -> LESS','loper',1,'p_loper','parser.py',253),
  ('loper -> NOTEQUAL','loper',1,'p_loper','parser.py',254),
  ('loper -> ISEQUAL','loper',1,'p_loper','parser.py',255),
  ('logical -> expression logical1 expression','logical',3,'p_logical','parser.py',263),
  ('logical1 -> OR','logical1',1,'p_logical1','parser.py',269),
  ('logical1 -> AND','logical1',1,'p_logical1','parser.py',270),
  ('condition -> IF head body condition1','condition',4,'p_condition','parser.py',277),
  ('condition1 -> ELSEIF head body condition1','condition1',4,'p_condition1','parser.py',283),
  ('condition1 -> ELSE body','condition1',2,'p_condition1','parser.py',284),
  ('condition1 -> empty','condition1',1,'p_condition1','parser.py',285),
  ('head -> OPENPAREN head1 CLOSEPAREN','head',3,'p_head','parser.py',292),
  ('head1 -> expression','head1',1,'p_head1','parser.py',298),
  ('head1 -> logical','head1',1,'p_head1','parser.py',299),
  ('body -> OPENBRACES body1 CLOSEBRACES','body',3,'p_body','parser.py',305),
  ('body1 -> stmt body1','body1',2,'p_body1','parser.py',310),
  ('body1 -> empty','body1',1,'p_body1','parser.py',311),
  ('for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body','for',7,'p_for','parser.py',318),
  ('while -> WHILE head body','while',3,'p_while','parser.py',325),
  ('funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON','funCall',5,'p_funCall','parser.py',332),
  ('funCall2 -> exp funCall3','funCall2',2,'p_funCall2','parser.py',338),
  ('funCall2 -> empty','funCall2',1,'p_funCall2','parser.py',339),
  ('funCall3 -> COMMA exp funCall2','funCall3',3,'p_funCall3','parser.py',344),
  ('funCall3 -> empty','funCall3',1,'p_funCall3','parser.py',345),
  ('function -> FUN function1 ID function2 OPENBRACES function6 function4 CLOSEBRACES','function',8,'p_function','parser.py',351),
  ('function1 -> type','function1',1,'p_function1','parser.py',356),
  ('function1 -> VOID','function1',1,'p_function1','parser.py',357),
  ('function2 -> OPENPAREN function3 CLOSEPAREN','function2',3,'p_function2','parser.py',365),
  ('function3 -> type ID function5','function3',3,'p_function3','parser.py',370),
  ('function3 -> empty','function3',1,'p_function3','parser.py',371),
  ('function4 -> stmt function4','function4',2,'p_function4','parser.py',376),
  ('function4 -> empty','function4',1,'p_function4','parser.py',377),
  ('function5 -> COMMA type ID function3','function5',4,'p_function5','parser.py',381),
  ('function6 -> vars','function6',1,'p_function6','parser.py',386),
  ('function6 -> empty','function6',1,'p_function6','parser.py',387),
  ('laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN','laRegla',5,'p_laRegla','parser.py',393),
  ('laRegla2 -> OPENPAREN exp CLOSEPAREN','laRegla2',3,'p_laRegla2','parser.py',399),
  ('graphstmt -> graphfig','graphstmt',1,'p_graphstmt','parser.py',406),
  ('graphstmt -> graphview','graphstmt',1,'p_graphstmt','parser.py',407),
  ('graphstmt -> graphmove','graphstmt',1,'p_graphstmt','parser.py',408),
  ('graphfig -> graphfig1 SEMICOLON','graphfig',2,'p_graphfig','parser.py',414),
  ('graphfig1 -> CIRCLE laRegla2','graphfig1',2,'p_graphfig1','parser.py',419),
  ('graphfig1 -> SQUARE laRegla2','graphfig1',2,'p_graphfig1','parser.py',420),
  ('graphfig1 -> TRIANGLE laRegla','graphfig1',2,'p_graphfig1','parser.py',421),
  ('graphfig1 -> RECTANGLE laRegla','graphfig1',2,'p_graphfig1','parser.py',422),
  ('graphmove -> graphmove1 SEMICOLON','graphmove',2,'p_graphmove','parser.py',428),
  ('graphmove1 -> HAND_DOWN','graphmove1',1,'p_graphmove1','parser.py',433),
  ('graphmove1 -> HAND_UP','graphmove1',1,'p_graphmove1','parser.py',434),
  ('graphmove1 -> graphmove2','graphmove1',1,'p_graphmove1','parser.py',435),
  ('graphmove2 -> GO laRegla2','graphmove2',2,'p_graphmove2','parser.py',440),
  ('graphmove2 -> LEFT laRegla2','graphmove2',2,'p_graphmove2','parser.py',441),
  ('graphmove2 -> RIGHT laRegla2','graphmove2',2,'p_graphmove2','parser.py',442),
  ('graphmove2 -> BACK laRegla2','graphmove2',2,'p_graphmove2','parser.py',443),
  ('graphmove2 -> ARC laRegla','graphmove2',2,'p_graphmove2','parser.py',444),
  ('graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES','graphr',6,'p_graphr','parser.py',450),
  ('graphr1 -> graphstmt graphr1','graphr1',2,'p_graphr1','parser.py',455),
  ('graphr1 -> empty','graphr1',1,'p_graphr1','parser.py',456),
  ('graphview -> graphview1 SEMICOLON','graphview',2,'p_graphview','parser.py',462),
  ('graphview1 -> HIDE_STAR','graphview1',1,'p_graphview1','parser.py',467),
  ('graphview1 -> SHOW_STAR','graphview1',1,'p_graphview1','parser.py',468),
  ('graphview1 -> graphview2 exp','graphview1',2,'p_graphview1','parser.py',469),
  ('graphview2 -> SETXY graphview3','graphview2',2,'p_graphview2','parser.py',474),
  ('graphview2 -> COLOR_STAR','graphview2',1,'p_graphview2','parser.py',475),
  ('graphview2 -> SIZE_STAR','graphview2',1,'p_graphview2','parser.py',476),
  ('graphview3 -> exp COMMA','graphview3',2,'p_graphview3','parser.py',481),
  ('graphview3 -> laRegla','graphview3',1,'p_graphview3','parser.py',482),
  ('exp -> term exp1','exp',2,'p_exp','parser.py',488),
  ('exp1 -> ADDITION exp','exp1',2,'p_exp1','parser.py',494),
  ('exp1 -> SUBSTRACTION exp','exp1',2,'p_exp1','parser.py',495),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',496),
  ('openP -> OPENPAREN','openP',1,'p_openP','parser.py',501),
  ('closeP -> CLOSEPAREN','closeP',1,'p_closeP','parser.py',508),
  ('factor -> vcte','factor',1,'p_factor','parser.py',515),
  ('factor -> factor1','factor',1,'p_factor','parser.py',516),
  ('factor1 -> factor2 vcte','factor1',2,'p_factor1','parser.py',522),
  ('factor1 -> openP expression closeP','factor1',3,'p_factor1','parser.py',523),
  ('factor2 -> ADDITION','factor2',1,'p_factor2','parser.py',529),
  ('factor2 -> SUBSTRACTION','factor2',1,'p_factor2','parser.py',530),
  ('term -> factor term1','term',2,'p_term','parser.py',536),
  ('term1 -> MULTIPLICATION term','term1',2,'p_term1','parser.py',542),
  ('term1 -> DIVISION term','term1',2,'p_term1','parser.py',543),
  ('term1 -> empty','term1',1,'p_term1','parser.py',544),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',549),
]
