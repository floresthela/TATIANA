
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDITION AND ARC BACK CHAR CIRCLE CLOSEBRACES CLOSEBRACKET CLOSEPAREN COLOR_STAR COMMA CTECHAR CTEFLOAT CTEINT DIVISION ELSE ELSEIF EQUALS FLOAT FOR FUN GO GREATER HAND_DOWN HAND_UP HIDE_STAR ID IF INT ISEQUAL LEFT LESS MULTIPLICATION NOTEQUAL OPENBRACES OPENBRACKET OPENPAREN OR PRINT PROGRAM READ RECTANGLE REPEAT RETURN RIGHT SEMICOLON SETXY SHOW_STAR SIMPLEQUOTES SIZE_STAR SQUARE SUBSTRACTION TRIANGLE TWODOTS VARS VOID WHILE\n    program : PROGRAM ID SEMICOLON declara_vars program2 star\n    \n    program_vars : vars program_vars\n            | empty\n    \n    program2 : function program2\n            | empty\n    \n    star : starI declara_vars star1 CLOSEBRACES\n    \n    starI : MULTIPLICATION OPENBRACES\n    \n    star1 : stmt star1\n        | empty\n    \n    declara_vars : vars declara_vars\n          | empty\n    \n    loop : while\n        | for\n    \n    stmt : assignment\n        | condition\n        | print\n        | loop\n        | read\n        | graphstmt\n        | graphr\n        | funCall SEMICOLON\n        | return\n    \n    functionI : type ID\n              | VOID ID\n    \n    function : FUN functionI function2 inicia_fun declara_vars function4 termina_fun\n    \n    function1 : type\n              | VOID\n    \n    inicia_fun : OPENBRACES\n    \n    termina_fun : CLOSEBRACES\n    \n    function2 : OPENPAREN function3 CLOSEPAREN\n    \n    function3 : type ID function5\n              | empty\n    \n    function4 : stmt function4\n              | empty\n    \n    function5 : COMMA type ID function3\n    \n    fun_vars : vars fun_vars\n              | empty\n    \n    vars : type ID vars1 equals exp SEMICOLON\n         | type ID vars1 SEMICOLON\n    \n    vars1 : OPENBRACKET CTEINT CLOSEBRACKET vars3\n        | empty\n    \n    vars3 : OPENBRACKET CTEINT CLOSEBRACKET\n        | empty\n    \n    type : INT\n         | FLOAT\n         | CHAR\n    \n    print : PRINT OPENPAREN expression CLOSEPAREN SEMICOLON\n    \n    read : READ OPENPAREN id read1 CLOSEPAREN SEMICOLON\n    \n    read1 : OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET\n              | OPENBRACKET exp CLOSEBRACKET\n              | empty\n    \n    equals : EQUALS\n    \n    id : ID\n    \n    assignment : id assignment1 equals assignment3 SEMICOLON\n    \n    assignment1 : assignment2\n                | assignment2 assignment1\n                | empty\n    \n    assignment2 : OPENBRACKET exp CLOSEBRACKET\n    \n    assignment3 : exp\n                | read\n    \n    vcte : cte_int\n         | cte_float\n         | cte_char\n         | id vcte1\n         | funCall\n    \n    vcte1 : OPENBRACKET exp CLOSEBRACKET vcte3\n          | empty\n    \n    vcte3 : OPENBRACKET exp CLOSEBRACKET\n        | empty\n\n    \n    cte_int : CTEINT\n    \n    cte_float : CTEFLOAT\n    \n    cte_char : CTECHAR\n    \n    return : RETURN return1 SEMICOLON\n    \n    return1 : vcte\n            | exp\n    \n    expression : exp expression1\n    \n    expression1 : loper exp\n             | empty\n    \n    loper : GREATER\n          | LESS\n          | NOTEQUAL\n          | ISEQUAL\n    \n    logical : expression logical1 expression\n    \n    logical1 : OR\n             | AND\n    \n    condition : IF head body condition1\n    \n    condition1 : ELSEIF head body condition1\n               | ELSE body\n               | empty\n    \n    head : OPENPAREN head1 CLOSEPAREN\n    \n    head1 : expression\n          | logical\n    \n    body : OPENBRACES body1 CLOSEBRACES\n    \n    body1 : stmt body1\n          | empty\n    \n    for : FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body\n    \n    while : WHILE  head body\n    \n    funCall : ID OPENPAREN funCall2 CLOSEPAREN\n    \n    funCall2 : exp funCall3\n             | empty\n    \n    funCall3 : COMMA exp funCall2\n             | empty\n    \n    laRegla : OPENPAREN exp COMMA exp CLOSEPAREN\n    \n    laRegla2 : OPENPAREN exp CLOSEPAREN\n    \n    graphstmt : graphfig\n             | graphview\n             | graphmove\n    \n    graphfig : graphfig1 SEMICOLON\n    \n    graphfig1 : CIRCLE laRegla2\n            | SQUARE laRegla2\n            | TRIANGLE laRegla\n            | RECTANGLE laRegla\n    \n    graphmove :  graphmove1  SEMICOLON\n    \n    graphmove1 : HAND_DOWN\n              | HAND_UP\n              | graphmove2\n    \n    graphmove2 : GO laRegla2\n              | LEFT laRegla2\n              | RIGHT laRegla2\n              | BACK laRegla2\n              | ARC laRegla\n    \n    graphr : REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES\n    \n    graphr1 : graphstmt graphr1\n           | empty\n    \n    graphview : graphview1 SEMICOLON\n    \n    graphview1 : HIDE_STAR\n              | SHOW_STAR\n              | graphview2 exp\n    \n    graphview2 : SETXY graphview3\n              | COLOR_STAR\n              | SIZE_STAR\n    \n    graphview3 : exp COMMA\n              | laRegla\n    \n    exp : term exp1\n    \n    exp1 : ADDITION exp\n         | SUBSTRACTION exp\n         | empty\n    \n    openP : OPENPAREN\n    \n    closeP : CLOSEPAREN\n    \n    factor : vcte\n           | factor1\n    \n    factor1 : factor2 vcte\n            | openP expression closeP\n    \n    factor2 : ADDITION\n            | SUBSTRACTION\n    \n    term : factor term1\n    \n    term1 : MULTIPLICATION term\n          | DIVISION term\n          | empty\n    empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,18,110,],[0,-1,-6,]),'ID':([2,6,7,8,9,10,11,16,19,23,24,28,29,34,35,36,39,41,42,43,44,45,46,47,49,53,54,56,57,58,59,61,73,77,78,79,85,86,88,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,112,116,118,119,120,122,127,128,129,130,132,135,138,140,141,147,150,151,152,153,154,155,156,157,158,159,160,161,162,168,171,172,183,184,188,190,194,195,196,197,199,200,202,204,205,206,207,213,216,218,221,222,223,226,229,231,233,235,239,240,243,245,246,249,255,259,260,261,262,263,266,269,272,273,274,275,],[3,-150,-11,17,-44,-45,-46,-10,-150,32,33,60,-7,90,-39,-52,60,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,90,90,90,90,-130,-131,-150,-28,149,-53,-150,-150,-140,-141,-61,-62,-63,-150,-65,90,90,-70,-71,-72,-138,-144,-145,-21,90,90,90,178,90,185,-108,-125,-113,90,90,-129,-133,90,60,-38,-134,90,90,-137,-146,90,90,-149,-64,90,-67,-142,90,-150,60,-73,-97,-132,60,-135,-136,-147,-148,-143,-139,90,-79,-80,-81,-82,-86,-89,60,90,-84,-85,90,-98,90,90,90,258,-150,-54,-88,-93,-47,90,90,-66,-69,-150,-48,-122,-103,-87,90,-96,-68,]),'SEMICOLON':([3,17,25,27,48,64,65,66,71,72,74,75,76,90,91,92,93,94,95,96,97,98,99,100,103,104,105,109,123,124,125,131,133,134,136,137,142,143,144,145,146,151,154,155,158,159,161,162,166,167,194,195,196,197,199,200,209,210,211,224,229,234,240,242,250,260,261,263,269,275,],[4,-150,35,-41,112,128,129,130,-126,-127,-114,-115,-116,-53,150,-150,-150,-140,-141,-61,-62,-63,-150,-65,-70,-71,-72,-150,183,-74,-75,-109,-110,-111,-112,-128,-117,-118,-119,-120,-121,-134,-137,-146,-149,-64,-67,-142,-40,-43,-135,-136,-147,-148,-143,-139,243,-59,-60,249,-98,-104,-150,-42,263,-66,-69,-48,-103,-68,]),'FUN':([4,5,6,7,13,16,35,150,236,237,],[-150,15,-150,-11,15,-10,-39,-38,-25,-29,]),'MULTIPLICATION':([4,5,6,7,12,13,14,16,21,35,90,93,94,95,96,97,98,99,100,103,104,105,124,150,159,161,162,199,200,229,236,237,240,260,261,275,],[-150,-150,-150,-11,20,-150,-5,-10,-4,-39,-53,156,-140,-141,-61,-62,-63,-150,-65,-70,-71,-72,-140,-38,-64,-67,-142,-143,-139,-98,-25,-29,-150,-66,-69,-68,]),'INT':([4,6,15,19,29,31,35,85,86,150,193,258,],[9,9,9,9,-7,9,-39,9,-28,-38,9,9,]),'FLOAT':([4,6,15,19,29,31,35,85,86,150,193,258,],[10,10,10,10,-7,10,-39,10,-28,-38,10,10,]),'CHAR':([4,6,15,19,29,31,35,85,86,150,193,258,],[11,11,11,11,-7,11,-39,11,-28,-38,11,11,]),'IF':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,183,184,190,213,216,218,243,245,246,249,262,263,266,272,274,],[-150,-11,-10,-150,51,-7,-39,51,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,-150,-28,-21,-108,-125,-113,51,-38,-150,51,-73,-97,51,-86,-89,51,-54,-88,-93,-47,-150,-48,-122,-87,-96,]),'PRINT':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,183,184,190,213,216,218,243,245,246,249,262,263,266,272,274,],[-150,-11,-10,-150,52,-7,-39,52,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,-150,-28,-21,-108,-125,-113,52,-38,-150,52,-73,-97,52,-86,-89,52,-54,-88,-93,-47,-150,-48,-122,-87,-96,]),'READ':([6,7,16,19,28,29,35,36,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,168,171,172,183,184,190,213,216,218,243,245,246,249,262,263,266,272,274,],[-150,-11,-10,-150,55,-7,-39,-52,55,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,-150,-28,-21,-108,-125,-113,55,-38,55,-150,55,-73,-97,55,-86,-89,55,-54,-88,-93,-47,-150,-48,-122,-87,-96,]),'REPEAT':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,183,184,190,213,216,218,243,245,246,249,262,263,266,272,274,],[-150,-11,-10,-150,59,-7,-39,59,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,-150,-28,-21,-108,-125,-113,59,-38,-150,59,-73,-97,59,-86,-89,59,-54,-88,-93,-47,-150,-48,-122,-87,-96,]),'RETURN':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,183,184,190,213,216,218,243,245,246,249,262,263,266,272,274,],[-150,-11,-10,-150,61,-7,-39,61,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,-150,-28,-21,-108,-125,-113,61,-38,-150,61,-73,-97,61,-86,-89,61,-54,-88,-93,-47,-150,-48,-122,-87,-96,]),'WHILE':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,183,184,190,213,216,218,243,245,246,249,262,263,266,272,274,],[-150,-11,-10,-150,62,-7,-39,62,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,-150,-28,-21,-108,-125,-113,62,-38,-150,62,-73,-97,62,-86,-89,62,-54,-88,-93,-47,-150,-48,-122,-87,-96,]),'FOR':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,183,184,190,213,216,218,243,245,246,249,262,263,266,272,274,],[-150,-11,-10,-150,63,-7,-39,63,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,-150,-28,-21,-108,-125,-113,63,-38,-150,63,-73,-97,63,-86,-89,63,-54,-88,-93,-47,-150,-48,-122,-87,-96,]),'CIRCLE':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,190,213,216,218,228,243,245,246,249,252,262,263,266,272,274,],[-150,-11,-10,-150,67,-7,-39,67,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,-150,-28,-21,-108,-125,-113,67,-38,-150,67,67,-73,-97,67,-86,-89,67,67,-54,-88,-93,-47,67,-150,-48,-122,-87,-96,]),'SQUARE':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,190,213,216,218,228,243,245,246,249,252,262,263,266,272,274,],[-150,-11,-10,-150,68,-7,-39,68,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,-150,-28,-21,-108,-125,-113,68,-38,-150,68,68,-73,-97,68,-86,-89,68,68,-54,-88,-93,-47,68,-150,-48,-122,-87,-96,]),'TRIANGLE':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,190,213,216,218,228,243,245,246,249,252,262,263,266,272,274,],[-150,-11,-10,-150,69,-7,-39,69,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,-150,-28,-21,-108,-125,-113,69,-38,-150,69,69,-73,-97,69,-86,-89,69,69,-54,-88,-93,-47,69,-150,-48,-122,-87,-96,]),'RECTANGLE':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,190,213,216,218,228,243,245,246,249,252,262,263,266,272,274,],[-150,-11,-10,-150,70,-7,-39,70,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,-150,-28,-21,-108,-125,-113,70,-38,-150,70,70,-73,-97,70,-86,-89,70,70,-54,-88,-93,-47,70,-150,-48,-122,-87,-96,]),'HIDE_STAR':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,190,213,216,218,228,243,245,246,249,252,262,263,266,272,274,],[-150,-11,-10,-150,71,-7,-39,71,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,-150,-28,-21,-108,-125,-113,71,-38,-150,71,71,-73,-97,71,-86,-89,71,71,-54,-88,-93,-47,71,-150,-48,-122,-87,-96,]),'SHOW_STAR':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,190,213,216,218,228,243,245,246,249,252,262,263,266,272,274,],[-150,-11,-10,-150,72,-7,-39,72,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,-150,-28,-21,-108,-125,-113,72,-38,-150,72,72,-73,-97,72,-86,-89,72,72,-54,-88,-93,-47,72,-150,-48,-122,-87,-96,]),'HAND_DOWN':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,190,213,216,218,228,243,245,246,249,252,262,263,266,272,274,],[-150,-11,-10,-150,74,-7,-39,74,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,-150,-28,-21,-108,-125,-113,74,-38,-150,74,74,-73,-97,74,-86,-89,74,74,-54,-88,-93,-47,74,-150,-48,-122,-87,-96,]),'HAND_UP':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,190,213,216,218,228,243,245,246,249,252,262,263,266,272,274,],[-150,-11,-10,-150,75,-7,-39,75,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,-150,-28,-21,-108,-125,-113,75,-38,-150,75,75,-73,-97,75,-86,-89,75,75,-54,-88,-93,-47,75,-150,-48,-122,-87,-96,]),'SETXY':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,190,213,216,218,228,243,245,246,249,252,262,263,266,272,274,],[-150,-11,-10,-150,77,-7,-39,77,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,-150,-28,-21,-108,-125,-113,77,-38,-150,77,77,-73,-97,77,-86,-89,77,77,-54,-88,-93,-47,77,-150,-48,-122,-87,-96,]),'COLOR_STAR':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,190,213,216,218,228,243,245,246,249,252,262,263,266,272,274,],[-150,-11,-10,-150,78,-7,-39,78,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,-150,-28,-21,-108,-125,-113,78,-38,-150,78,78,-73,-97,78,-86,-89,78,78,-54,-88,-93,-47,78,-150,-48,-122,-87,-96,]),'SIZE_STAR':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,190,213,216,218,228,243,245,246,249,252,262,263,266,272,274,],[-150,-11,-10,-150,79,-7,-39,79,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,-150,-28,-21,-108,-125,-113,79,-38,-150,79,79,-73,-97,79,-86,-89,79,79,-54,-88,-93,-47,79,-150,-48,-122,-87,-96,]),'GO':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,190,213,216,218,228,243,245,246,249,252,262,263,266,272,274,],[-150,-11,-10,-150,80,-7,-39,80,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,-150,-28,-21,-108,-125,-113,80,-38,-150,80,80,-73,-97,80,-86,-89,80,80,-54,-88,-93,-47,80,-150,-48,-122,-87,-96,]),'LEFT':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,190,213,216,218,228,243,245,246,249,252,262,263,266,272,274,],[-150,-11,-10,-150,81,-7,-39,81,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,-150,-28,-21,-108,-125,-113,81,-38,-150,81,81,-73,-97,81,-86,-89,81,81,-54,-88,-93,-47,81,-150,-48,-122,-87,-96,]),'RIGHT':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,190,213,216,218,228,243,245,246,249,252,262,263,266,272,274,],[-150,-11,-10,-150,82,-7,-39,82,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,-150,-28,-21,-108,-125,-113,82,-38,-150,82,82,-73,-97,82,-86,-89,82,82,-54,-88,-93,-47,82,-150,-48,-122,-87,-96,]),'BACK':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,190,213,216,218,228,243,245,246,249,252,262,263,266,272,274,],[-150,-11,-10,-150,83,-7,-39,83,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,-150,-28,-21,-108,-125,-113,83,-38,-150,83,83,-73,-97,83,-86,-89,83,83,-54,-88,-93,-47,83,-150,-48,-122,-87,-96,]),'ARC':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,190,213,216,218,228,243,245,246,249,252,262,263,266,272,274,],[-150,-11,-10,-150,84,-7,-39,84,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,-150,-28,-21,-108,-125,-113,84,-38,-150,84,84,-73,-97,84,-86,-89,84,84,-54,-88,-93,-47,84,-150,-48,-122,-87,-96,]),'CLOSEBRACES':([6,7,16,19,28,29,35,38,39,40,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,111,112,128,129,130,147,150,171,172,183,184,189,190,191,213,216,217,218,219,228,238,243,245,246,247,249,252,253,254,262,263,265,266,272,274,],[-150,-11,-10,-150,-150,-7,-39,110,-150,-9,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-105,-106,-107,-150,-28,-8,-21,-108,-125,-113,-150,-38,-150,-150,-73,-97,237,-150,-34,-86,-89,246,-150,-95,-150,-33,-54,-88,-93,-94,-47,-150,266,-124,-150,-48,-123,-122,-87,-96,]),'VOID':([15,],[24,]),'OPENBRACKET':([17,50,60,90,99,109,114,177,178,212,240,264,],[26,116,-53,-53,160,165,116,226,-53,-58,259,273,]),'EQUALS':([17,25,27,50,60,109,113,114,115,166,167,169,212,242,],[-150,36,-41,-150,-53,-150,36,-55,-57,-40,-43,-56,-58,-42,]),'OPENBRACES':([20,30,90,92,93,94,95,96,97,98,99,100,103,104,105,117,121,126,148,151,154,155,158,159,161,162,194,195,196,197,199,200,215,220,229,240,244,260,261,268,275,],[29,86,-53,-150,-150,-140,-141,-61,-62,-63,-150,-65,-70,-71,-72,172,179,172,-30,-134,-137,-146,-149,-64,-67,-142,-135,-136,-147,-148,-143,-139,172,-90,-98,-150,172,-66,-69,172,-68,]),'OPENPAREN':([22,32,33,34,36,51,52,55,59,60,61,62,63,67,68,69,70,73,77,78,79,80,81,82,83,84,90,92,93,94,95,96,97,98,99,100,102,103,104,105,106,116,118,119,122,132,135,138,140,141,151,152,153,154,155,156,157,158,159,160,161,162,168,188,194,195,196,197,199,200,202,204,205,206,207,214,221,222,223,226,229,231,233,235,240,255,259,260,261,269,273,275,],[31,-23,-24,106,-52,118,119,120,106,122,106,118,127,132,132,135,135,106,141,-130,-131,132,132,132,132,135,122,-150,-150,-140,-141,-61,-62,-63,-150,-65,106,-70,-71,-72,-138,106,106,106,106,106,106,-129,-133,106,-134,106,106,-137,-146,106,106,-149,-64,106,-67,-142,106,-132,-135,-136,-147,-148,-143,-139,106,-79,-80,-81,-82,118,106,-84,-85,106,-98,106,106,106,-150,106,106,-66,-69,-103,106,-68,]),'CTEINT':([26,34,36,59,61,73,77,78,79,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,116,118,119,122,132,135,138,140,141,151,152,153,154,155,156,157,158,159,160,161,162,165,168,188,194,195,196,197,199,200,202,204,205,206,207,221,222,223,226,229,231,233,235,240,255,259,260,261,269,273,275,],[37,103,-52,103,103,103,103,-130,-131,-53,-150,-150,-140,-141,-61,-62,-63,-150,-65,103,103,-70,-71,-72,-138,-144,-145,103,103,103,103,103,103,-129,-133,103,-134,103,103,-137,-146,103,103,-149,-64,103,-67,-142,208,103,-132,-135,-136,-147,-148,-143,-139,103,-79,-80,-81,-82,103,-84,-85,103,-98,103,103,103,-150,103,103,-66,-69,-103,103,-68,]),'CLOSEPAREN':([31,87,89,90,92,93,94,95,96,97,98,99,100,103,104,105,122,151,154,155,158,159,161,162,163,164,173,174,175,176,177,178,180,181,182,186,192,194,195,196,197,199,200,201,203,225,227,229,230,232,240,241,248,255,256,257,258,260,261,264,267,270,275,277,],[-150,148,-32,-53,-150,-150,-140,-141,-61,-62,-63,-150,-65,-70,-71,-72,-150,-134,-137,-146,-149,-64,-67,-142,200,-150,220,-91,-92,224,-150,-53,229,-150,-100,234,-31,-135,-136,-147,-148,-143,-139,-76,-78,250,-51,-98,-99,-102,-150,-77,-83,-150,268,269,-150,-66,-69,-50,-101,-35,-68,-49,]),'CTEFLOAT':([34,36,59,61,73,77,78,79,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,116,118,119,122,132,135,138,140,141,151,152,153,154,155,156,157,158,159,160,161,162,168,188,194,195,196,197,199,200,202,204,205,206,207,221,222,223,226,229,231,233,235,240,255,259,260,261,269,273,275,],[104,-52,104,104,104,104,-130,-131,-53,-150,-150,-140,-141,-61,-62,-63,-150,-65,104,104,-70,-71,-72,-138,-144,-145,104,104,104,104,104,104,-129,-133,104,-134,104,104,-137,-146,104,104,-149,-64,104,-67,-142,104,-132,-135,-136,-147,-148,-143,-139,104,-79,-80,-81,-82,104,-84,-85,104,-98,104,104,104,-150,104,104,-66,-69,-103,104,-68,]),'CTECHAR':([34,36,59,61,73,77,78,79,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,116,118,119,122,132,135,138,140,141,151,152,153,154,155,156,157,158,159,160,161,162,168,188,194,195,196,197,199,200,202,204,205,206,207,221,222,223,226,229,231,233,235,240,255,259,260,261,269,273,275,],[105,-52,105,105,105,105,-130,-131,-53,-150,-150,-140,-141,-61,-62,-63,-150,-65,105,105,-70,-71,-72,-138,-144,-145,105,105,105,105,105,105,-129,-133,105,-134,105,105,-137,-146,105,105,-149,-64,105,-67,-142,105,-132,-135,-136,-147,-148,-143,-139,105,-79,-80,-81,-82,105,-84,-85,105,-98,105,105,105,-150,105,105,-66,-69,-103,105,-68,]),'ADDITION':([34,36,59,61,73,77,78,79,90,92,93,94,95,96,97,98,99,100,102,103,104,105,106,116,118,119,122,124,132,135,138,140,141,151,152,153,154,155,156,157,158,159,160,161,162,168,188,194,195,196,197,199,200,202,204,205,206,207,221,222,223,226,229,231,233,235,240,255,259,260,261,269,273,275,],[107,-52,107,107,107,107,-130,-131,-53,152,-150,-140,-141,-61,-62,-63,-150,-65,107,-70,-71,-72,-138,107,107,107,107,-140,107,107,-129,-133,107,-134,107,107,-137,-146,107,107,-149,-64,107,-67,-142,107,-132,-135,-136,-147,-148,-143,-139,107,-79,-80,-81,-82,107,-84,-85,107,-98,107,107,107,-150,107,107,-66,-69,-103,107,-68,]),'SUBSTRACTION':([34,36,59,61,73,77,78,79,90,92,93,94,95,96,97,98,99,100,102,103,104,105,106,116,118,119,122,124,132,135,138,140,141,151,152,153,154,155,156,157,158,159,160,161,162,168,188,194,195,196,197,199,200,202,204,205,206,207,221,222,223,226,229,231,233,235,240,255,259,260,261,269,273,275,],[108,-52,108,108,108,108,-130,-131,-53,153,-150,-140,-141,-61,-62,-63,-150,-65,108,-70,-71,-72,-138,108,108,108,108,-140,108,108,-129,-133,108,-134,108,108,-137,-146,108,108,-149,-64,108,-67,-142,108,-132,-135,-136,-147,-148,-143,-139,108,-79,-80,-81,-82,108,-84,-85,108,-98,108,108,108,-150,108,108,-66,-69,-103,108,-68,]),'CLOSEBRACKET':([37,90,92,93,94,95,96,97,98,99,100,103,104,105,151,154,155,158,159,161,162,170,194,195,196,197,198,199,200,208,229,240,251,260,261,271,275,276,],[109,-53,-150,-150,-140,-141,-61,-62,-63,-150,-65,-70,-71,-72,-134,-137,-146,-149,-64,-67,-142,212,-135,-136,-147,-148,240,-143,-139,242,-98,-150,264,-66,-69,275,-68,277,]),'DIVISION':([90,93,94,95,96,97,98,99,100,103,104,105,124,159,161,162,199,200,229,240,260,261,275,],[-53,157,-140,-141,-61,-62,-63,-150,-65,-70,-71,-72,-140,-64,-67,-142,-143,-139,-98,-150,-66,-69,-68,]),'COMMA':([90,92,93,94,95,96,97,98,99,100,103,104,105,139,149,151,154,155,158,159,161,162,181,187,194,195,196,197,199,200,229,240,260,261,275,],[-53,-150,-150,-140,-141,-61,-62,-63,-150,-65,-70,-71,-72,188,193,-134,-137,-146,-149,-64,-67,-142,231,235,-135,-136,-147,-148,-143,-139,-98,-150,-66,-69,-68,]),'GREATER':([90,92,93,94,95,96,97,98,99,100,103,104,105,151,154,155,158,159,161,162,164,194,195,196,197,199,200,229,240,260,261,275,],[-53,-150,-150,-140,-141,-61,-62,-63,-150,-65,-70,-71,-72,-134,-137,-146,-149,-64,-67,-142,204,-135,-136,-147,-148,-143,-139,-98,-150,-66,-69,-68,]),'LESS':([90,92,93,94,95,96,97,98,99,100,103,104,105,151,154,155,158,159,161,162,164,194,195,196,197,199,200,229,240,260,261,275,],[-53,-150,-150,-140,-141,-61,-62,-63,-150,-65,-70,-71,-72,-134,-137,-146,-149,-64,-67,-142,205,-135,-136,-147,-148,-143,-139,-98,-150,-66,-69,-68,]),'NOTEQUAL':([90,92,93,94,95,96,97,98,99,100,103,104,105,151,154,155,158,159,161,162,164,194,195,196,197,199,200,229,240,260,261,275,],[-53,-150,-150,-140,-141,-61,-62,-63,-150,-65,-70,-71,-72,-134,-137,-146,-149,-64,-67,-142,206,-135,-136,-147,-148,-143,-139,-98,-150,-66,-69,-68,]),'ISEQUAL':([90,92,93,94,95,96,97,98,99,100,103,104,105,151,154,155,158,159,161,162,164,194,195,196,197,199,200,229,240,260,261,275,],[-53,-150,-150,-140,-141,-61,-62,-63,-150,-65,-70,-71,-72,-134,-137,-146,-149,-64,-67,-142,207,-135,-136,-147,-148,-143,-139,-98,-150,-66,-69,-68,]),'OR':([90,92,93,94,95,96,97,98,99,100,103,104,105,151,154,155,158,159,161,162,164,174,194,195,196,197,199,200,201,203,229,240,241,260,261,275,],[-53,-150,-150,-140,-141,-61,-62,-63,-150,-65,-70,-71,-72,-134,-137,-146,-149,-64,-67,-142,-150,222,-135,-136,-147,-148,-143,-139,-76,-78,-98,-150,-77,-66,-69,-68,]),'AND':([90,92,93,94,95,96,97,98,99,100,103,104,105,151,154,155,158,159,161,162,164,174,194,195,196,197,199,200,201,203,229,240,241,260,261,275,],[-53,-150,-150,-140,-141,-61,-62,-63,-150,-65,-70,-71,-72,-134,-137,-146,-149,-64,-67,-142,-150,223,-135,-136,-147,-148,-143,-139,-76,-78,-98,-150,-77,-66,-69,-68,]),'ELSEIF':([171,246,262,],[214,-93,214,]),'ELSE':([171,246,262,],[215,-93,215,]),'TWODOTS':([185,],[233,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declara_vars':([4,6,19,85,],[5,16,28,147,]),'vars':([4,6,19,85,],[6,6,6,6,]),'empty':([4,5,6,13,17,19,28,31,39,50,85,92,93,99,109,114,122,147,164,171,172,177,181,190,218,228,240,252,255,258,262,],[7,14,7,14,27,7,40,89,40,115,7,154,158,161,167,115,182,191,203,216,219,227,232,191,219,254,261,254,182,89,216,]),'type':([4,6,15,19,31,85,193,258,],[8,8,23,8,88,8,239,88,]),'program2':([5,13,],[12,21,]),'function':([5,13,],[13,13,]),'star':([12,],[18,]),'starI':([12,],[19,]),'functionI':([15,],[22,]),'vars1':([17,],[25,]),'function2':([22,],[30,]),'equals':([25,113,],[34,168,]),'star1':([28,39,],[38,111,]),'stmt':([28,39,147,172,190,218,],[39,39,190,218,190,218,]),'assignment':([28,39,147,172,190,218,],[41,41,41,41,41,41,]),'condition':([28,39,147,172,190,218,],[42,42,42,42,42,42,]),'print':([28,39,147,172,190,218,],[43,43,43,43,43,43,]),'loop':([28,39,147,172,190,218,],[44,44,44,44,44,44,]),'read':([28,39,147,168,172,190,218,],[45,45,45,211,45,45,45,]),'graphstmt':([28,39,147,172,179,190,218,228,252,],[46,46,46,46,228,46,46,252,252,]),'graphr':([28,39,147,172,190,218,],[47,47,47,47,47,47,]),'funCall':([28,34,39,59,61,73,77,101,102,116,118,119,122,132,135,141,147,152,153,156,157,160,168,172,190,202,218,221,226,231,233,235,255,259,273,],[48,100,48,100,100,100,100,100,100,100,100,100,100,100,100,100,48,100,100,100,100,100,100,48,48,100,48,100,100,100,100,100,100,100,100,]),'return':([28,39,147,172,190,218,],[49,49,49,49,49,49,]),'id':([28,34,39,59,61,73,77,101,102,116,118,119,120,122,132,135,141,147,152,153,156,157,160,168,172,190,202,218,221,226,231,233,235,255,259,273,],[50,99,50,99,99,99,99,99,99,99,99,99,177,99,99,99,99,50,99,99,99,99,99,99,50,50,99,50,99,99,99,99,99,99,99,99,]),'while':([28,39,147,172,190,218,],[53,53,53,53,53,53,]),'for':([28,39,147,172,190,218,],[54,54,54,54,54,54,]),'graphfig':([28,39,147,172,179,190,218,228,252,],[56,56,56,56,56,56,56,56,56,]),'graphview':([28,39,147,172,179,190,218,228,252,],[57,57,57,57,57,57,57,57,57,]),'graphmove':([28,39,147,172,179,190,218,228,252,],[58,58,58,58,58,58,58,58,58,]),'graphfig1':([28,39,147,172,179,190,218,228,252,],[64,64,64,64,64,64,64,64,64,]),'graphview1':([28,39,147,172,179,190,218,228,252,],[65,65,65,65,65,65,65,65,65,]),'graphmove1':([28,39,147,172,179,190,218,228,252,],[66,66,66,66,66,66,66,66,66,]),'graphview2':([28,39,147,172,179,190,218,228,252,],[73,73,73,73,73,73,73,73,73,]),'graphmove2':([28,39,147,172,179,190,218,228,252,],[76,76,76,76,76,76,76,76,76,]),'inicia_fun':([30,],[85,]),'function3':([31,258,],[87,270,]),'exp':([34,59,61,73,77,102,116,118,119,122,132,135,141,152,153,160,168,202,221,226,231,233,235,255,259,273,],[91,121,125,137,139,164,170,164,164,181,186,187,187,194,195,198,210,241,164,251,255,256,257,181,271,276,]),'term':([34,59,61,73,77,102,116,118,119,122,132,135,141,152,153,156,157,160,168,202,221,226,231,233,235,255,259,273,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,196,197,92,92,92,92,92,92,92,92,92,92,92,]),'factor':([34,59,61,73,77,102,116,118,119,122,132,135,141,152,153,156,157,160,168,202,221,226,231,233,235,255,259,273,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'vcte':([34,59,61,73,77,101,102,116,118,119,122,132,135,141,152,153,156,157,160,168,202,221,226,231,233,235,255,259,273,],[94,94,124,94,94,162,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'factor1':([34,59,61,73,77,102,116,118,119,122,132,135,141,152,153,156,157,160,168,202,221,226,231,233,235,255,259,273,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'cte_int':([34,59,61,73,77,101,102,116,118,119,122,132,135,141,152,153,156,157,160,168,202,221,226,231,233,235,255,259,273,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'cte_float':([34,59,61,73,77,101,102,116,118,119,122,132,135,141,152,153,156,157,160,168,202,221,226,231,233,235,255,259,273,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'cte_char':([34,59,61,73,77,101,102,116,118,119,122,132,135,141,152,153,156,157,160,168,202,221,226,231,233,235,255,259,273,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'factor2':([34,59,61,73,77,102,116,118,119,122,132,135,141,152,153,156,157,160,168,202,221,226,231,233,235,255,259,273,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'openP':([34,59,61,73,77,102,116,118,119,122,132,135,141,152,153,156,157,160,168,202,221,226,231,233,235,255,259,273,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'assignment1':([50,114,],[113,169,]),'assignment2':([50,114,],[114,114,]),'head':([51,62,214,],[117,126,244,]),'return1':([61,],[123,]),'laRegla2':([67,68,80,81,82,83,],[131,133,142,143,144,145,]),'laRegla':([69,70,77,84,],[134,136,140,146,]),'graphview3':([77,],[138,]),'exp1':([92,],[151,]),'term1':([93,],[155,]),'vcte1':([99,],[159,]),'expression':([102,118,119,221,],[163,174,176,248,]),'vars3':([109,],[166,]),'body':([117,126,215,244,268,],[171,184,245,262,274,]),'head1':([118,],[173,]),'logical':([118,],[175,]),'funCall2':([122,255,],[180,267,]),'function4':([147,190,],[189,238,]),'function5':([149,],[192,]),'closeP':([163,],[199,]),'expression1':([164,],[201,]),'loper':([164,],[202,]),'assignment3':([168,],[209,]),'condition1':([171,262,],[213,272,]),'body1':([172,218,],[217,247,]),'logical1':([174,],[221,]),'read1':([177,],[225,]),'funCall3':([181,],[230,]),'termina_fun':([189,],[236,]),'graphr1':([228,252,],[253,265,]),'vcte3':([240,],[260,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON declara_vars program2 star','program',6,'p_program','parser.py',30),
  ('program_vars -> vars program_vars','program_vars',2,'p_program_vars','parser.py',42),
  ('program_vars -> empty','program_vars',1,'p_program_vars','parser.py',43),
  ('program2 -> function program2','program2',2,'p_program2','parser.py',52),
  ('program2 -> empty','program2',1,'p_program2','parser.py',53),
  ('star -> starI declara_vars star1 CLOSEBRACES','star',4,'p_star','parser.py',63),
  ('starI -> MULTIPLICATION OPENBRACES','starI',2,'p_starI','parser.py',72),
  ('star1 -> stmt star1','star1',2,'p_star1','parser.py',78),
  ('star1 -> empty','star1',1,'p_star1','parser.py',79),
  ('declara_vars -> vars declara_vars','declara_vars',2,'p_declara_vars','parser.py',85),
  ('declara_vars -> empty','declara_vars',1,'p_declara_vars','parser.py',86),
  ('loop -> while','loop',1,'p_loop','parser.py',96),
  ('loop -> for','loop',1,'p_loop','parser.py',97),
  ('stmt -> assignment','stmt',1,'p_stmt','parser.py',104),
  ('stmt -> condition','stmt',1,'p_stmt','parser.py',105),
  ('stmt -> print','stmt',1,'p_stmt','parser.py',106),
  ('stmt -> loop','stmt',1,'p_stmt','parser.py',107),
  ('stmt -> read','stmt',1,'p_stmt','parser.py',108),
  ('stmt -> graphstmt','stmt',1,'p_stmt','parser.py',109),
  ('stmt -> graphr','stmt',1,'p_stmt','parser.py',110),
  ('stmt -> funCall SEMICOLON','stmt',2,'p_stmt','parser.py',111),
  ('stmt -> return','stmt',1,'p_stmt','parser.py',112),
  ('functionI -> type ID','functionI',2,'p_functionI','parser.py',123),
  ('functionI -> VOID ID','functionI',2,'p_functionI','parser.py',124),
  ('function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun','function',7,'p_function','parser.py',130),
  ('function1 -> type','function1',1,'p_function1','parser.py',143),
  ('function1 -> VOID','function1',1,'p_function1','parser.py',144),
  ('inicia_fun -> OPENBRACES','inicia_fun',1,'p_inicia_fun','parser.py',151),
  ('termina_fun -> CLOSEBRACES','termina_fun',1,'p_termina_fun','parser.py',157),
  ('function2 -> OPENPAREN function3 CLOSEPAREN','function2',3,'p_function2','parser.py',162),
  ('function3 -> type ID function5','function3',3,'p_function3','parser.py',168),
  ('function3 -> empty','function3',1,'p_function3','parser.py',169),
  ('function4 -> stmt function4','function4',2,'p_function4','parser.py',175),
  ('function4 -> empty','function4',1,'p_function4','parser.py',176),
  ('function5 -> COMMA type ID function3','function5',4,'p_function5','parser.py',185),
  ('fun_vars -> vars fun_vars','fun_vars',2,'p_fun_vars','parser.py',191),
  ('fun_vars -> empty','fun_vars',1,'p_fun_vars','parser.py',192),
  ('vars -> type ID vars1 equals exp SEMICOLON','vars',6,'p_vars','parser.py',208),
  ('vars -> type ID vars1 SEMICOLON','vars',4,'p_vars','parser.py',209),
  ('vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3','vars1',4,'p_vars1','parser.py',227),
  ('vars1 -> empty','vars1',1,'p_vars1','parser.py',228),
  ('vars3 -> OPENBRACKET CTEINT CLOSEBRACKET','vars3',3,'p_vars3','parser.py',243),
  ('vars3 -> empty','vars3',1,'p_vars3','parser.py',244),
  ('type -> INT','type',1,'p_type','parser.py',251),
  ('type -> FLOAT','type',1,'p_type','parser.py',252),
  ('type -> CHAR','type',1,'p_type','parser.py',253),
  ('print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON','print',5,'p_print','parser.py',261),
  ('read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON','read',6,'p_read','parser.py',270),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET','read1',6,'p_read1','parser.py',278),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET','read1',3,'p_read1','parser.py',279),
  ('read1 -> empty','read1',1,'p_read1','parser.py',280),
  ('equals -> EQUALS','equals',1,'p_equals','parser.py',285),
  ('id -> ID','id',1,'p_id','parser.py',294),
  ('assignment -> id assignment1 equals assignment3 SEMICOLON','assignment',5,'p_assignment','parser.py',304),
  ('assignment1 -> assignment2','assignment1',1,'p_assignment1','parser.py',312),
  ('assignment1 -> assignment2 assignment1','assignment1',2,'p_assignment1','parser.py',313),
  ('assignment1 -> empty','assignment1',1,'p_assignment1','parser.py',314),
  ('assignment2 -> OPENBRACKET exp CLOSEBRACKET','assignment2',3,'p_assignment2','parser.py',320),
  ('assignment3 -> exp','assignment3',1,'p_assignment3','parser.py',326),
  ('assignment3 -> read','assignment3',1,'p_assignment3','parser.py',327),
  ('vcte -> cte_int','vcte',1,'p_vcte','parser.py',336),
  ('vcte -> cte_float','vcte',1,'p_vcte','parser.py',337),
  ('vcte -> cte_char','vcte',1,'p_vcte','parser.py',338),
  ('vcte -> id vcte1','vcte',2,'p_vcte','parser.py',339),
  ('vcte -> funCall','vcte',1,'p_vcte','parser.py',340),
  ('vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3','vcte1',4,'p_vcte1','parser.py',354),
  ('vcte1 -> empty','vcte1',1,'p_vcte1','parser.py',355),
  ('vcte3 -> OPENBRACKET exp CLOSEBRACKET','vcte3',3,'p_vcte3','parser.py',361),
  ('vcte3 -> empty','vcte3',1,'p_vcte3','parser.py',362),
  ('cte_int -> CTEINT','cte_int',1,'p_cte_int','parser.py',371),
  ('cte_float -> CTEFLOAT','cte_float',1,'p_cte_float','parser.py',378),
  ('cte_char -> CTECHAR','cte_char',1,'p_cte_char','parser.py',385),
  ('return -> RETURN return1 SEMICOLON','return',3,'p_return','parser.py',395),
  ('return1 -> vcte','return1',1,'p_return1','parser.py',401),
  ('return1 -> exp','return1',1,'p_return1','parser.py',402),
  ('expression -> exp expression1','expression',2,'p_expression','parser.py',410),
  ('expression1 -> loper exp','expression1',2,'p_expression1','parser.py',416),
  ('expression1 -> empty','expression1',1,'p_expression1','parser.py',417),
  ('loper -> GREATER','loper',1,'p_loper','parser.py',424),
  ('loper -> LESS','loper',1,'p_loper','parser.py',425),
  ('loper -> NOTEQUAL','loper',1,'p_loper','parser.py',426),
  ('loper -> ISEQUAL','loper',1,'p_loper','parser.py',427),
  ('logical -> expression logical1 expression','logical',3,'p_logical','parser.py',437),
  ('logical1 -> OR','logical1',1,'p_logical1','parser.py',443),
  ('logical1 -> AND','logical1',1,'p_logical1','parser.py',444),
  ('condition -> IF head body condition1','condition',4,'p_condition','parser.py',451),
  ('condition1 -> ELSEIF head body condition1','condition1',4,'p_condition1','parser.py',457),
  ('condition1 -> ELSE body','condition1',2,'p_condition1','parser.py',458),
  ('condition1 -> empty','condition1',1,'p_condition1','parser.py',459),
  ('head -> OPENPAREN head1 CLOSEPAREN','head',3,'p_head','parser.py',466),
  ('head1 -> expression','head1',1,'p_head1','parser.py',472),
  ('head1 -> logical','head1',1,'p_head1','parser.py',473),
  ('body -> OPENBRACES body1 CLOSEBRACES','body',3,'p_body','parser.py',481),
  ('body1 -> stmt body1','body1',2,'p_body1','parser.py',487),
  ('body1 -> empty','body1',1,'p_body1','parser.py',488),
  ('for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body','for',7,'p_for','parser.py',495),
  ('while -> WHILE head body','while',3,'p_while','parser.py',502),
  ('funCall -> ID OPENPAREN funCall2 CLOSEPAREN','funCall',4,'p_funCall','parser.py',509),
  ('funCall2 -> exp funCall3','funCall2',2,'p_funCall2','parser.py',520),
  ('funCall2 -> empty','funCall2',1,'p_funCall2','parser.py',521),
  ('funCall3 -> COMMA exp funCall2','funCall3',3,'p_funCall3','parser.py',527),
  ('funCall3 -> empty','funCall3',1,'p_funCall3','parser.py',528),
  ('laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN','laRegla',5,'p_laRegla','parser.py',534),
  ('laRegla2 -> OPENPAREN exp CLOSEPAREN','laRegla2',3,'p_laRegla2','parser.py',540),
  ('graphstmt -> graphfig','graphstmt',1,'p_graphstmt','parser.py',547),
  ('graphstmt -> graphview','graphstmt',1,'p_graphstmt','parser.py',548),
  ('graphstmt -> graphmove','graphstmt',1,'p_graphstmt','parser.py',549),
  ('graphfig -> graphfig1 SEMICOLON','graphfig',2,'p_graphfig','parser.py',557),
  ('graphfig1 -> CIRCLE laRegla2','graphfig1',2,'p_graphfig1','parser.py',563),
  ('graphfig1 -> SQUARE laRegla2','graphfig1',2,'p_graphfig1','parser.py',564),
  ('graphfig1 -> TRIANGLE laRegla','graphfig1',2,'p_graphfig1','parser.py',565),
  ('graphfig1 -> RECTANGLE laRegla','graphfig1',2,'p_graphfig1','parser.py',566),
  ('graphmove -> graphmove1 SEMICOLON','graphmove',2,'p_graphmove','parser.py',574),
  ('graphmove1 -> HAND_DOWN','graphmove1',1,'p_graphmove1','parser.py',580),
  ('graphmove1 -> HAND_UP','graphmove1',1,'p_graphmove1','parser.py',581),
  ('graphmove1 -> graphmove2','graphmove1',1,'p_graphmove1','parser.py',582),
  ('graphmove2 -> GO laRegla2','graphmove2',2,'p_graphmove2','parser.py',588),
  ('graphmove2 -> LEFT laRegla2','graphmove2',2,'p_graphmove2','parser.py',589),
  ('graphmove2 -> RIGHT laRegla2','graphmove2',2,'p_graphmove2','parser.py',590),
  ('graphmove2 -> BACK laRegla2','graphmove2',2,'p_graphmove2','parser.py',591),
  ('graphmove2 -> ARC laRegla','graphmove2',2,'p_graphmove2','parser.py',592),
  ('graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES','graphr',6,'p_graphr','parser.py',600),
  ('graphr1 -> graphstmt graphr1','graphr1',2,'p_graphr1','parser.py',606),
  ('graphr1 -> empty','graphr1',1,'p_graphr1','parser.py',607),
  ('graphview -> graphview1 SEMICOLON','graphview',2,'p_graphview','parser.py',615),
  ('graphview1 -> HIDE_STAR','graphview1',1,'p_graphview1','parser.py',621),
  ('graphview1 -> SHOW_STAR','graphview1',1,'p_graphview1','parser.py',622),
  ('graphview1 -> graphview2 exp','graphview1',2,'p_graphview1','parser.py',623),
  ('graphview2 -> SETXY graphview3','graphview2',2,'p_graphview2','parser.py',629),
  ('graphview2 -> COLOR_STAR','graphview2',1,'p_graphview2','parser.py',630),
  ('graphview2 -> SIZE_STAR','graphview2',1,'p_graphview2','parser.py',631),
  ('graphview3 -> exp COMMA','graphview3',2,'p_graphview3','parser.py',637),
  ('graphview3 -> laRegla','graphview3',1,'p_graphview3','parser.py',638),
  ('exp -> term exp1','exp',2,'p_exp','parser.py',646),
  ('exp1 -> ADDITION exp','exp1',2,'p_exp1','parser.py',654),
  ('exp1 -> SUBSTRACTION exp','exp1',2,'p_exp1','parser.py',655),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',656),
  ('openP -> OPENPAREN','openP',1,'p_openP','parser.py',666),
  ('closeP -> CLOSEPAREN','closeP',1,'p_closeP','parser.py',674),
  ('factor -> vcte','factor',1,'p_factor','parser.py',684),
  ('factor -> factor1','factor',1,'p_factor','parser.py',685),
  ('factor1 -> factor2 vcte','factor1',2,'p_factor1','parser.py',691),
  ('factor1 -> openP expression closeP','factor1',3,'p_factor1','parser.py',692),
  ('factor2 -> ADDITION','factor2',1,'p_factor2','parser.py',698),
  ('factor2 -> SUBSTRACTION','factor2',1,'p_factor2','parser.py',699),
  ('term -> factor term1','term',2,'p_term','parser.py',710),
  ('term1 -> MULTIPLICATION term','term1',2,'p_term1','parser.py',719),
  ('term1 -> DIVISION term','term1',2,'p_term1','parser.py',720),
  ('term1 -> empty','term1',1,'p_term1','parser.py',721),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',731),
]
