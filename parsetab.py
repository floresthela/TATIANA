
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDITION ARC BACK CHAR CIRCLE CLOSEBRACES CLOSEBRACKET CLOSEPAREN COLOR_STAR COMMA CTECHAR CTEFLOAT CTEINT DIVISION ELSE ELSEIF EQUALS FLOAT FOR FUN GO GREATER HAND_DOWN HAND_UP HIDE_STAR ID IF INT ISEQUAL LEFT LESS MULTIPLICATION NOTEQUAL OPENBRACES OPENBRACKET OPENPAREN PRINT PROGRAM READ RECTANGLE REPEAT RETURN RIGHT SEMICOLON SETXY SHOW_STAR SIMPLEQUOTES SIZE_STAR SQUARE SUBSTRACTION TRIANGLE TWODOTS VARS VOID WHILE\n    program : PROGRAM ID SEMICOLON declara_vars program2 star\n    \n    program2 : function program2\n            | empty\n    \n    star : starI declara_vars star1 CLOSEBRACES\n    \n    starI : MULTIPLICATION OPENBRACES\n    \n    star1 : stmt star1\n        | empty\n    \n    declara_vars : vars declara_vars\n          | empty\n    \n    loop : while\n        | for\n    \n    stmt : assignment\n        | condition\n        | print\n        | loop\n        | read\n        | graphstmt\n        | graphr\n        | funCall SEMICOLON\n        | return\n    \n    functionI : type ID\n              | VOID ID\n    \n    function : FUN functionI function2 inicia_fun declara_vars function4 termina_fun\n    \n    inicia_fun : OPENBRACES\n    \n    termina_fun : CLOSEBRACES\n    \n    function2 : OPENPAREN function3 CLOSEPAREN\n    \n    function3 : type ID function5\n              | empty\n    \n    function4 : stmt function4\n              | empty\n    \n    function5 : COMMA type ID function5\n              | empty\n    \n    vars : type ID vars1 equals exp SEMICOLON\n         | type ID vars1 SEMICOLON\n    \n    vars1 : OPENBRACKET CTEINT CLOSEBRACKET vars3\n        | empty\n    \n    vars3 : OPENBRACKET CTEINT CLOSEBRACKET\n        | empty\n    \n    type : INT\n         | FLOAT\n         | CHAR\n    \n    print : PRINT OPENPAREN expression CLOSEPAREN SEMICOLON\n    \n    read : READ OPENPAREN id read1 CLOSEPAREN SEMICOLON\n    \n    read1 : OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET\n              | OPENBRACKET exp CLOSEBRACKET\n              | empty\n    \n    equals : EQUALS\n    \n    id : ID\n    \n    assignment : id assignment1 equals assignment3 SEMICOLON\n    \n    assignment1 : assignment2\n                | assignment2 assignment1\n                | empty\n    \n    assignment2 : OPENBRACKET exp CLOSEBRACKET\n    \n    assignment3 : exp\n                | read\n    \n    vcte : cte_int\n         | cte_float\n         | cte_char\n         | id vcte1\n         | funCall\n    \n    vcte1 : OPENBRACKET exp CLOSEBRACKET vcte3\n          | empty\n    \n    vcte3 : OPENBRACKET exp CLOSEBRACKET\n        | empty\n\n    \n    cte_int : CTEINT\n    \n    cte_float : CTEFLOAT\n    \n    cte_char : CTECHAR\n    \n    return : RETURN return1 SEMICOLON\n    \n    return1 : vcte\n            | exp\n    \n    expression : exp expression1\n    \n    expression1 : loper exp\n             | empty\n    \n    loper : GREATER\n          | LESS\n          | NOTEQUAL\n          | ISEQUAL\n\n    \n    condition : IF head_cond body condition1\n    \n    condition1 : elseif head_cond body condition1\n               | else body\n               | empty\n    \n    elseif : ELSEIF\n    \n    else : ELSE\n    \n    head_cond : OPENPAREN expression close_condition\n    \n    body : OPENBRACES body1 CLOSEBRACES\n    \n    close_condition : CLOSEPAREN\n    \n    body1 : stmt body1\n          | empty\n    \n    for : FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body\n    \n    while : while1 body\n    \n    while1 : while_w OPENPAREN expression CLOSEPAREN\n    \n    while_w : WHILE\n    \n    funCall : ID OPENPAREN funCall2 CLOSEPAREN\n    \n    funCall2 : exp funCall3\n             | empty\n    \n    funCall3 : COMMA exp funCall2\n             | empty\n    \n    laRegla : OPENPAREN exp COMMA exp CLOSEPAREN\n    \n    laRegla2 : OPENPAREN exp CLOSEPAREN\n    \n    graphstmt : graphfig\n             | graphview\n             | graphmove\n    \n    graphfig : graphfig1 SEMICOLON\n    \n    graphfig1 : CIRCLE laRegla2\n            | SQUARE laRegla2\n            | TRIANGLE laRegla\n            | RECTANGLE laRegla\n    \n    graphmove : graphmove1  SEMICOLON\n              | graphmove2 SEMICOLON\n    \n    graphmove1 : HAND_DOWN\n              | HAND_UP\n    \n    graphmove2 : GO laRegla2\n              | LEFT laRegla2\n              | RIGHT laRegla2\n              | BACK laRegla2\n              | ARC laRegla\n    \n    graphr : repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES\n    \n    graphr1 : graphstmt graphr1\n            | empty\n    \n    rep : OPENPAREN exp CLOSEPAREN\n    \n    repeat : REPEAT\n    \n    graphview : graphview1 SEMICOLON\n    \n    graphview1 : HIDE_STAR\n              | SHOW_STAR\n              | graphview2 exp\n    \n    graphview2 : SETXY laRegla\n              | COLOR_STAR laRegla2\n              | SIZE_STAR laRegla2\n    \n    exp : term exp1\n    \n    exp1 : ADDITION exp\n         | SUBSTRACTION exp\n         | empty\n    \n    openP : OPENPAREN\n    \n    closeP : CLOSEPAREN\n    \n    factor : vcte\n           | factor1\n    \n    factor1 : factor2 vcte\n            | openP expression closeP\n    \n    factor2 : ADDITION\n            | SUBSTRACTION\n    \n    term : factor term1\n    \n    term1 : MULTIPLICATION term\n          | DIVISION term\n          | empty\n    empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,18,113,],[0,-1,-4,]),'ID':([2,6,7,8,9,10,11,16,19,23,24,28,29,34,35,36,39,41,42,43,44,45,46,47,49,53,54,56,57,58,61,76,88,89,91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,119,121,122,123,125,126,130,131,132,133,134,135,136,137,139,142,150,151,152,153,156,157,158,159,160,161,162,163,164,165,166,167,168,174,177,187,189,196,201,202,203,204,206,207,209,211,212,213,214,220,223,230,234,236,238,240,242,243,247,248,251,253,254,260,264,265,266,267,268,271,274,277,278,279,280,],[3,-145,-9,17,-39,-40,-41,-8,-145,32,33,60,-5,93,-34,-47,60,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,93,93,-145,-24,155,-48,-145,-145,-135,-136,-56,-57,-58,-145,-60,93,93,-65,-66,-67,-133,-139,-140,-19,93,93,93,181,93,93,-90,60,191,-103,-122,-108,-109,93,93,93,-126,-127,-128,60,-33,-129,93,93,-132,-141,93,93,-144,-59,93,-62,-137,93,-145,-68,60,60,-130,-131,-142,-143,-138,-134,93,-74,-75,-76,-77,-78,-81,93,-93,93,-85,93,-99,93,263,-145,-49,-80,-42,93,93,-61,-64,-145,-43,-117,-98,-79,93,-89,-63,]),'SEMICOLON':([3,17,25,27,48,64,65,66,67,74,75,77,78,93,94,95,96,97,98,99,100,101,102,103,106,107,108,112,127,128,129,138,140,141,143,144,145,146,147,148,149,157,160,161,164,165,167,168,172,173,201,202,203,204,206,207,216,217,218,228,234,242,248,250,255,265,266,268,274,280,],[4,-145,35,-36,115,133,134,135,136,-123,-124,-110,-111,-48,156,-145,-145,-135,-136,-56,-57,-58,-145,-60,-65,-66,-67,-145,187,-69,-70,-104,-105,-106,-107,-125,-112,-113,-114,-115,-116,-129,-132,-141,-144,-59,-62,-137,-35,-38,-130,-131,-142,-143,-138,-134,251,-54,-55,254,-93,-99,-145,-37,268,-61,-64,-43,-98,-63,]),'FUN':([4,5,6,7,13,16,35,156,244,245,],[-145,15,-145,-9,15,-8,-34,-33,-23,-25,]),'MULTIPLICATION':([4,5,6,7,12,13,14,16,21,35,93,96,97,98,99,100,101,102,103,106,107,108,128,156,165,167,168,206,207,234,244,245,248,265,266,280,],[-145,-145,-145,-9,20,-145,-3,-8,-2,-34,-48,162,-135,-136,-56,-57,-58,-145,-60,-65,-66,-67,-135,-33,-59,-62,-137,-138,-134,-93,-23,-25,-145,-61,-64,-63,]),'INT':([4,6,15,19,29,31,35,88,89,156,199,],[9,9,9,9,-5,9,-34,9,-24,-33,9,]),'FLOAT':([4,6,15,19,29,31,35,88,89,156,199,],[10,10,10,10,-5,10,-34,10,-24,-33,10,]),'CHAR':([4,6,15,19,29,31,35,88,89,156,199,],[11,11,11,11,-5,11,-34,11,-24,-33,11,]),'IF':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,187,189,196,220,223,238,251,253,254,267,268,271,277,279,],[-145,-9,-8,-145,51,-5,-34,51,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,-145,-24,-19,-90,51,-103,-122,-108,-109,51,-33,-145,-68,51,51,-78,-81,-85,-49,-80,-42,-145,-43,-117,-79,-89,]),'PRINT':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,187,189,196,220,223,238,251,253,254,267,268,271,277,279,],[-145,-9,-8,-145,52,-5,-34,52,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,-145,-24,-19,-90,52,-103,-122,-108,-109,52,-33,-145,-68,52,52,-78,-81,-85,-49,-80,-42,-145,-43,-117,-79,-89,]),'READ':([6,7,16,19,28,29,35,36,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,174,177,187,189,196,220,223,238,251,253,254,267,268,271,277,279,],[-145,-9,-8,-145,55,-5,-34,-47,55,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,-145,-24,-19,-90,55,-103,-122,-108,-109,55,-33,55,-145,-68,55,55,-78,-81,-85,-49,-80,-42,-145,-43,-117,-79,-89,]),'RETURN':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,187,189,196,220,223,238,251,253,254,267,268,271,277,279,],[-145,-9,-8,-145,61,-5,-34,61,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,-145,-24,-19,-90,61,-103,-122,-108,-109,61,-33,-145,-68,61,61,-78,-81,-85,-49,-80,-42,-145,-43,-117,-79,-89,]),'FOR':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,187,189,196,220,223,238,251,253,254,267,268,271,277,279,],[-145,-9,-8,-145,63,-5,-34,63,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,-145,-24,-19,-90,63,-103,-122,-108,-109,63,-33,-145,-68,63,63,-78,-81,-85,-49,-80,-42,-145,-43,-117,-79,-89,]),'REPEAT':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,187,189,196,220,223,238,251,253,254,267,268,271,277,279,],[-145,-9,-8,-145,68,-5,-34,68,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,-145,-24,-19,-90,68,-103,-122,-108,-109,68,-33,-145,-68,68,68,-78,-81,-85,-49,-80,-42,-145,-43,-117,-79,-89,]),'CIRCLE':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,182,187,189,196,220,223,232,238,251,253,254,257,267,268,271,277,279,],[-145,-9,-8,-145,70,-5,-34,70,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,-145,-24,-19,-90,70,-103,-122,-108,-109,70,-33,-145,70,-68,70,70,-78,-81,70,-85,-49,-80,-42,70,-145,-43,-117,-79,-89,]),'SQUARE':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,182,187,189,196,220,223,232,238,251,253,254,257,267,268,271,277,279,],[-145,-9,-8,-145,71,-5,-34,71,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,-145,-24,-19,-90,71,-103,-122,-108,-109,71,-33,-145,71,-68,71,71,-78,-81,71,-85,-49,-80,-42,71,-145,-43,-117,-79,-89,]),'TRIANGLE':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,182,187,189,196,220,223,232,238,251,253,254,257,267,268,271,277,279,],[-145,-9,-8,-145,72,-5,-34,72,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,-145,-24,-19,-90,72,-103,-122,-108,-109,72,-33,-145,72,-68,72,72,-78,-81,72,-85,-49,-80,-42,72,-145,-43,-117,-79,-89,]),'RECTANGLE':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,182,187,189,196,220,223,232,238,251,253,254,257,267,268,271,277,279,],[-145,-9,-8,-145,73,-5,-34,73,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,-145,-24,-19,-90,73,-103,-122,-108,-109,73,-33,-145,73,-68,73,73,-78,-81,73,-85,-49,-80,-42,73,-145,-43,-117,-79,-89,]),'HIDE_STAR':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,182,187,189,196,220,223,232,238,251,253,254,257,267,268,271,277,279,],[-145,-9,-8,-145,74,-5,-34,74,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,-145,-24,-19,-90,74,-103,-122,-108,-109,74,-33,-145,74,-68,74,74,-78,-81,74,-85,-49,-80,-42,74,-145,-43,-117,-79,-89,]),'SHOW_STAR':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,182,187,189,196,220,223,232,238,251,253,254,257,267,268,271,277,279,],[-145,-9,-8,-145,75,-5,-34,75,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,-145,-24,-19,-90,75,-103,-122,-108,-109,75,-33,-145,75,-68,75,75,-78,-81,75,-85,-49,-80,-42,75,-145,-43,-117,-79,-89,]),'HAND_DOWN':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,182,187,189,196,220,223,232,238,251,253,254,257,267,268,271,277,279,],[-145,-9,-8,-145,77,-5,-34,77,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,-145,-24,-19,-90,77,-103,-122,-108,-109,77,-33,-145,77,-68,77,77,-78,-81,77,-85,-49,-80,-42,77,-145,-43,-117,-79,-89,]),'HAND_UP':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,182,187,189,196,220,223,232,238,251,253,254,257,267,268,271,277,279,],[-145,-9,-8,-145,78,-5,-34,78,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,-145,-24,-19,-90,78,-103,-122,-108,-109,78,-33,-145,78,-68,78,78,-78,-81,78,-85,-49,-80,-42,78,-145,-43,-117,-79,-89,]),'GO':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,182,187,189,196,220,223,232,238,251,253,254,257,267,268,271,277,279,],[-145,-9,-8,-145,79,-5,-34,79,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,-145,-24,-19,-90,79,-103,-122,-108,-109,79,-33,-145,79,-68,79,79,-78,-81,79,-85,-49,-80,-42,79,-145,-43,-117,-79,-89,]),'LEFT':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,182,187,189,196,220,223,232,238,251,253,254,257,267,268,271,277,279,],[-145,-9,-8,-145,80,-5,-34,80,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,-145,-24,-19,-90,80,-103,-122,-108,-109,80,-33,-145,80,-68,80,80,-78,-81,80,-85,-49,-80,-42,80,-145,-43,-117,-79,-89,]),'RIGHT':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,182,187,189,196,220,223,232,238,251,253,254,257,267,268,271,277,279,],[-145,-9,-8,-145,81,-5,-34,81,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,-145,-24,-19,-90,81,-103,-122,-108,-109,81,-33,-145,81,-68,81,81,-78,-81,81,-85,-49,-80,-42,81,-145,-43,-117,-79,-89,]),'BACK':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,182,187,189,196,220,223,232,238,251,253,254,257,267,268,271,277,279,],[-145,-9,-8,-145,82,-5,-34,82,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,-145,-24,-19,-90,82,-103,-122,-108,-109,82,-33,-145,82,-68,82,82,-78,-81,82,-85,-49,-80,-42,82,-145,-43,-117,-79,-89,]),'ARC':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,182,187,189,196,220,223,232,238,251,253,254,257,267,268,271,277,279,],[-145,-9,-8,-145,83,-5,-34,83,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,-145,-24,-19,-90,83,-103,-122,-108,-109,83,-33,-145,83,-68,83,83,-78,-81,83,-85,-49,-80,-42,83,-145,-43,-117,-79,-89,]),'WHILE':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,187,189,196,220,223,238,251,253,254,267,268,271,277,279,],[-145,-9,-8,-145,84,-5,-34,84,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,-145,-24,-19,-90,84,-103,-122,-108,-109,84,-33,-145,-68,84,84,-78,-81,-85,-49,-80,-42,-145,-43,-117,-79,-89,]),'SETXY':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,182,187,189,196,220,223,232,238,251,253,254,257,267,268,271,277,279,],[-145,-9,-8,-145,85,-5,-34,85,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,-145,-24,-19,-90,85,-103,-122,-108,-109,85,-33,-145,85,-68,85,85,-78,-81,85,-85,-49,-80,-42,85,-145,-43,-117,-79,-89,]),'COLOR_STAR':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,182,187,189,196,220,223,232,238,251,253,254,257,267,268,271,277,279,],[-145,-9,-8,-145,86,-5,-34,86,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,-145,-24,-19,-90,86,-103,-122,-108,-109,86,-33,-145,86,-68,86,86,-78,-81,86,-85,-49,-80,-42,86,-145,-43,-117,-79,-89,]),'SIZE_STAR':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,182,187,189,196,220,223,232,238,251,253,254,257,267,268,271,277,279,],[-145,-9,-8,-145,87,-5,-34,87,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,-145,-24,-19,-90,87,-103,-122,-108,-109,87,-33,-145,87,-68,87,87,-78,-81,87,-85,-49,-80,-42,87,-145,-43,-117,-79,-89,]),'CLOSEBRACES':([6,7,16,19,28,29,35,38,39,40,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,114,115,130,131,133,134,135,136,153,156,177,187,188,189,190,195,196,197,220,223,232,238,239,246,251,253,254,257,258,259,267,268,270,271,277,279,],[-145,-9,-8,-145,-145,-5,-34,113,-145,-7,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-100,-101,-102,-145,-24,-6,-19,-90,-145,-103,-122,-108,-109,-145,-33,-145,-68,238,-145,-88,245,-145,-30,-78,-81,-145,-85,-87,-29,-49,-80,-42,-145,271,-119,-145,-43,-118,-117,-79,-89,]),'VOID':([15,],[24,]),'OPENBRACKET':([17,50,60,93,102,112,117,180,181,219,248,269,],[26,119,-48,-48,166,171,119,230,-48,-53,264,278,]),'EQUALS':([17,25,27,50,60,112,116,117,118,172,173,175,219,250,],[-145,36,-36,-145,-48,-145,36,-50,-52,-35,-38,-51,-53,-37,]),'OPENBRACES':([20,30,62,120,124,154,222,225,226,227,233,241,252,273,],[29,89,131,131,182,-26,131,-83,-84,-86,-120,-91,131,131,]),'OPENPAREN':([22,32,33,34,36,51,52,55,59,60,61,63,68,69,70,71,72,73,76,79,80,81,82,83,84,85,86,87,93,95,96,97,98,99,100,101,102,103,105,106,107,108,109,119,121,122,125,126,137,139,142,150,151,152,157,158,159,160,161,162,163,164,165,166,167,168,174,201,202,203,204,206,207,209,211,212,213,214,221,224,230,234,236,240,242,243,248,260,264,265,266,274,278,280,],[31,-21,-22,109,-47,121,122,123,125,126,109,132,-121,137,139,139,142,142,109,139,139,139,139,142,-92,142,139,139,126,-145,-145,-135,-136,-56,-57,-58,-145,-60,109,-65,-66,-67,-133,109,109,109,109,109,109,109,109,-126,-127,-128,-129,109,109,-132,-141,109,109,-144,-59,109,-62,-137,109,-130,-131,-142,-143,-138,-134,109,-74,-75,-76,-77,121,-82,109,-93,109,109,-99,109,-145,109,109,-61,-64,-98,109,-63,]),'CTEINT':([26,34,36,61,76,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,119,121,122,125,126,137,139,142,150,151,152,157,158,159,160,161,162,163,164,165,166,167,168,171,174,201,202,203,204,206,207,209,211,212,213,214,230,234,236,240,242,243,248,260,264,265,266,274,278,280,],[37,106,-47,106,106,-48,-145,-145,-135,-136,-56,-57,-58,-145,-60,106,106,-65,-66,-67,-133,-139,-140,106,106,106,106,106,106,106,106,-126,-127,-128,-129,106,106,-132,-141,106,106,-144,-59,106,-62,-137,215,106,-130,-131,-142,-143,-138,-134,106,-74,-75,-76,-77,106,-93,106,106,-99,106,-145,106,106,-61,-64,-98,106,-63,]),'CLOSEPAREN':([31,90,92,93,95,96,97,98,99,100,101,102,103,106,107,108,126,155,157,160,161,164,165,167,168,169,170,178,179,180,181,183,184,185,186,192,193,198,200,201,202,203,204,206,207,208,210,229,231,234,235,237,248,249,260,261,262,263,265,266,269,272,275,280,282,],[-145,154,-28,-48,-145,-145,-135,-136,-56,-57,-58,-145,-60,-65,-66,-67,-145,-145,-129,-132,-141,-144,-59,-62,-137,207,-145,227,228,-145,-48,233,234,-145,-95,241,242,-27,-32,-130,-131,-142,-143,-138,-134,-71,-73,255,-46,-93,-94,-97,-145,-72,-145,273,274,-145,-61,-64,-45,-96,-31,-63,-44,]),'CTEFLOAT':([34,36,61,76,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,119,121,122,125,126,137,139,142,150,151,152,157,158,159,160,161,162,163,164,165,166,167,168,174,201,202,203,204,206,207,209,211,212,213,214,230,234,236,240,242,243,248,260,264,265,266,274,278,280,],[107,-47,107,107,-48,-145,-145,-135,-136,-56,-57,-58,-145,-60,107,107,-65,-66,-67,-133,-139,-140,107,107,107,107,107,107,107,107,-126,-127,-128,-129,107,107,-132,-141,107,107,-144,-59,107,-62,-137,107,-130,-131,-142,-143,-138,-134,107,-74,-75,-76,-77,107,-93,107,107,-99,107,-145,107,107,-61,-64,-98,107,-63,]),'CTECHAR':([34,36,61,76,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,119,121,122,125,126,137,139,142,150,151,152,157,158,159,160,161,162,163,164,165,166,167,168,174,201,202,203,204,206,207,209,211,212,213,214,230,234,236,240,242,243,248,260,264,265,266,274,278,280,],[108,-47,108,108,-48,-145,-145,-135,-136,-56,-57,-58,-145,-60,108,108,-65,-66,-67,-133,-139,-140,108,108,108,108,108,108,108,108,-126,-127,-128,-129,108,108,-132,-141,108,108,-144,-59,108,-62,-137,108,-130,-131,-142,-143,-138,-134,108,-74,-75,-76,-77,108,-93,108,108,-99,108,-145,108,108,-61,-64,-98,108,-63,]),'ADDITION':([34,36,61,76,93,95,96,97,98,99,100,101,102,103,105,106,107,108,109,119,121,122,125,126,128,137,139,142,150,151,152,157,158,159,160,161,162,163,164,165,166,167,168,174,201,202,203,204,206,207,209,211,212,213,214,230,234,236,240,242,243,248,260,264,265,266,274,278,280,],[110,-47,110,110,-48,158,-145,-135,-136,-56,-57,-58,-145,-60,110,-65,-66,-67,-133,110,110,110,110,110,-135,110,110,110,-126,-127,-128,-129,110,110,-132,-141,110,110,-144,-59,110,-62,-137,110,-130,-131,-142,-143,-138,-134,110,-74,-75,-76,-77,110,-93,110,110,-99,110,-145,110,110,-61,-64,-98,110,-63,]),'SUBSTRACTION':([34,36,61,76,93,95,96,97,98,99,100,101,102,103,105,106,107,108,109,119,121,122,125,126,128,137,139,142,150,151,152,157,158,159,160,161,162,163,164,165,166,167,168,174,201,202,203,204,206,207,209,211,212,213,214,230,234,236,240,242,243,248,260,264,265,266,274,278,280,],[111,-47,111,111,-48,159,-145,-135,-136,-56,-57,-58,-145,-60,111,-65,-66,-67,-133,111,111,111,111,111,-135,111,111,111,-126,-127,-128,-129,111,111,-132,-141,111,111,-144,-59,111,-62,-137,111,-130,-131,-142,-143,-138,-134,111,-74,-75,-76,-77,111,-93,111,111,-99,111,-145,111,111,-61,-64,-98,111,-63,]),'CLOSEBRACKET':([37,93,95,96,97,98,99,100,101,102,103,106,107,108,157,160,161,164,165,167,168,176,201,202,203,204,205,206,207,215,234,248,256,265,266,276,280,281,],[112,-48,-145,-145,-135,-136,-56,-57,-58,-145,-60,-65,-66,-67,-129,-132,-141,-144,-59,-62,-137,219,-130,-131,-142,-143,248,-138,-134,250,-93,-145,269,-61,-64,280,-63,282,]),'DIVISION':([93,96,97,98,99,100,101,102,103,106,107,108,128,165,167,168,206,207,234,248,265,266,280,],[-48,163,-135,-136,-56,-57,-58,-145,-60,-65,-66,-67,-135,-59,-62,-137,-138,-134,-93,-145,-61,-64,-63,]),'GREATER':([93,95,96,97,98,99,100,101,102,103,106,107,108,157,160,161,164,165,167,168,170,201,202,203,204,206,207,234,248,265,266,280,],[-48,-145,-145,-135,-136,-56,-57,-58,-145,-60,-65,-66,-67,-129,-132,-141,-144,-59,-62,-137,211,-130,-131,-142,-143,-138,-134,-93,-145,-61,-64,-63,]),'LESS':([93,95,96,97,98,99,100,101,102,103,106,107,108,157,160,161,164,165,167,168,170,201,202,203,204,206,207,234,248,265,266,280,],[-48,-145,-145,-135,-136,-56,-57,-58,-145,-60,-65,-66,-67,-129,-132,-141,-144,-59,-62,-137,212,-130,-131,-142,-143,-138,-134,-93,-145,-61,-64,-63,]),'NOTEQUAL':([93,95,96,97,98,99,100,101,102,103,106,107,108,157,160,161,164,165,167,168,170,201,202,203,204,206,207,234,248,265,266,280,],[-48,-145,-145,-135,-136,-56,-57,-58,-145,-60,-65,-66,-67,-129,-132,-141,-144,-59,-62,-137,213,-130,-131,-142,-143,-138,-134,-93,-145,-61,-64,-63,]),'ISEQUAL':([93,95,96,97,98,99,100,101,102,103,106,107,108,157,160,161,164,165,167,168,170,201,202,203,204,206,207,234,248,265,266,280,],[-48,-145,-145,-135,-136,-56,-57,-58,-145,-60,-65,-66,-67,-129,-132,-141,-144,-59,-62,-137,214,-130,-131,-142,-143,-138,-134,-93,-145,-61,-64,-63,]),'COMMA':([93,95,96,97,98,99,100,101,102,103,106,107,108,155,157,160,161,164,165,167,168,185,194,201,202,203,204,206,207,234,248,263,265,266,280,],[-48,-145,-145,-135,-136,-56,-57,-58,-145,-60,-65,-66,-67,199,-129,-132,-141,-144,-59,-62,-137,236,243,-130,-131,-142,-143,-138,-134,-93,-145,199,-61,-64,-63,]),'ELSEIF':([177,238,267,],[224,-85,224,]),'ELSE':([177,238,267,],[225,-85,225,]),'TWODOTS':([191,],[240,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declara_vars':([4,6,19,88,],[5,16,28,153,]),'vars':([4,6,19,88,],[6,6,6,6,]),'empty':([4,5,6,13,17,19,28,31,39,50,88,95,96,102,112,117,126,131,153,155,170,177,180,185,189,196,232,248,257,260,263,267,],[7,14,7,14,27,7,40,92,40,118,7,160,164,167,173,118,186,190,197,200,210,223,231,237,190,197,259,266,259,186,200,223,]),'type':([4,6,15,19,31,88,199,],[8,8,23,8,91,8,247,]),'program2':([5,13,],[12,21,]),'function':([5,13,],[13,13,]),'star':([12,],[18,]),'starI':([12,],[19,]),'functionI':([15,],[22,]),'vars1':([17,],[25,]),'function2':([22,],[30,]),'equals':([25,116,],[34,174,]),'star1':([28,39,],[38,114,]),'stmt':([28,39,131,153,189,196,],[39,39,189,196,189,196,]),'assignment':([28,39,131,153,189,196,],[41,41,41,41,41,41,]),'condition':([28,39,131,153,189,196,],[42,42,42,42,42,42,]),'print':([28,39,131,153,189,196,],[43,43,43,43,43,43,]),'loop':([28,39,131,153,189,196,],[44,44,44,44,44,44,]),'read':([28,39,131,153,174,189,196,],[45,45,45,45,218,45,45,]),'graphstmt':([28,39,131,153,182,189,196,232,257,],[46,46,46,46,232,46,46,257,257,]),'graphr':([28,39,131,153,189,196,],[47,47,47,47,47,47,]),'funCall':([28,34,39,61,76,104,105,119,121,122,125,126,131,137,139,142,153,158,159,162,163,166,174,189,196,209,230,236,240,243,260,264,278,],[48,103,48,103,103,103,103,103,103,103,103,103,48,103,103,103,48,103,103,103,103,103,103,48,48,103,103,103,103,103,103,103,103,]),'return':([28,39,131,153,189,196,],[49,49,49,49,49,49,]),'id':([28,34,39,61,76,104,105,119,121,122,123,125,126,131,137,139,142,153,158,159,162,163,166,174,189,196,209,230,236,240,243,260,264,278,],[50,102,50,102,102,102,102,102,102,102,180,102,102,50,102,102,102,50,102,102,102,102,102,102,50,50,102,102,102,102,102,102,102,102,]),'while':([28,39,131,153,189,196,],[53,53,53,53,53,53,]),'for':([28,39,131,153,189,196,],[54,54,54,54,54,54,]),'graphfig':([28,39,131,153,182,189,196,232,257,],[56,56,56,56,56,56,56,56,56,]),'graphview':([28,39,131,153,182,189,196,232,257,],[57,57,57,57,57,57,57,57,57,]),'graphmove':([28,39,131,153,182,189,196,232,257,],[58,58,58,58,58,58,58,58,58,]),'repeat':([28,39,131,153,189,196,],[59,59,59,59,59,59,]),'while1':([28,39,131,153,189,196,],[62,62,62,62,62,62,]),'graphfig1':([28,39,131,153,182,189,196,232,257,],[64,64,64,64,64,64,64,64,64,]),'graphview1':([28,39,131,153,182,189,196,232,257,],[65,65,65,65,65,65,65,65,65,]),'graphmove1':([28,39,131,153,182,189,196,232,257,],[66,66,66,66,66,66,66,66,66,]),'graphmove2':([28,39,131,153,182,189,196,232,257,],[67,67,67,67,67,67,67,67,67,]),'while_w':([28,39,131,153,189,196,],[69,69,69,69,69,69,]),'graphview2':([28,39,131,153,182,189,196,232,257,],[76,76,76,76,76,76,76,76,76,]),'inicia_fun':([30,],[88,]),'function3':([31,],[90,]),'exp':([34,61,76,105,119,121,122,125,126,137,139,142,158,159,166,174,209,230,236,240,243,260,264,278,],[94,129,144,170,176,170,170,183,185,170,193,194,201,202,205,217,249,256,260,261,262,185,276,281,]),'term':([34,61,76,105,119,121,122,125,126,137,139,142,158,159,162,163,166,174,209,230,236,240,243,260,264,278,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,203,204,95,95,95,95,95,95,95,95,95,95,]),'factor':([34,61,76,105,119,121,122,125,126,137,139,142,158,159,162,163,166,174,209,230,236,240,243,260,264,278,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'vcte':([34,61,76,104,105,119,121,122,125,126,137,139,142,158,159,162,163,166,174,209,230,236,240,243,260,264,278,],[97,128,97,168,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'factor1':([34,61,76,105,119,121,122,125,126,137,139,142,158,159,162,163,166,174,209,230,236,240,243,260,264,278,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'cte_int':([34,61,76,104,105,119,121,122,125,126,137,139,142,158,159,162,163,166,174,209,230,236,240,243,260,264,278,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'cte_float':([34,61,76,104,105,119,121,122,125,126,137,139,142,158,159,162,163,166,174,209,230,236,240,243,260,264,278,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'cte_char':([34,61,76,104,105,119,121,122,125,126,137,139,142,158,159,162,163,166,174,209,230,236,240,243,260,264,278,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'factor2':([34,61,76,105,119,121,122,125,126,137,139,142,158,159,162,163,166,174,209,230,236,240,243,260,264,278,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'openP':([34,61,76,105,119,121,122,125,126,137,139,142,158,159,162,163,166,174,209,230,236,240,243,260,264,278,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'assignment1':([50,117,],[116,175,]),'assignment2':([50,117,],[117,117,]),'head_cond':([51,221,],[120,252,]),'rep':([59,],[124,]),'return1':([61,],[127,]),'body':([62,120,222,252,273,],[130,177,253,267,279,]),'laRegla2':([70,71,79,80,81,82,86,87,],[138,140,145,146,147,148,151,152,]),'laRegla':([72,73,83,85,],[141,143,149,150,]),'exp1':([95,],[157,]),'term1':([96,],[161,]),'vcte1':([102,],[165,]),'expression':([105,121,122,137,],[169,178,179,192,]),'vars3':([112,],[172,]),'funCall2':([126,260,],[184,272,]),'body1':([131,189,],[188,239,]),'function4':([153,196,],[195,246,]),'function5':([155,263,],[198,275,]),'closeP':([169,],[206,]),'expression1':([170,],[208,]),'loper':([170,],[209,]),'assignment3':([174,],[216,]),'condition1':([177,267,],[220,277,]),'elseif':([177,267,],[221,221,]),'else':([177,267,],[222,222,]),'close_condition':([178,],[226,]),'read1':([180,],[229,]),'funCall3':([185,],[235,]),'termina_fun':([195,],[244,]),'graphr1':([232,257,],[258,270,]),'vcte3':([248,],[265,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON declara_vars program2 star','program',6,'p_program','parser.py',18),
  ('program2 -> function program2','program2',2,'p_program2','parser.py',42),
  ('program2 -> empty','program2',1,'p_program2','parser.py',43),
  ('star -> starI declara_vars star1 CLOSEBRACES','star',4,'p_star','parser.py',53),
  ('starI -> MULTIPLICATION OPENBRACES','starI',2,'p_starI','parser.py',60),
  ('star1 -> stmt star1','star1',2,'p_star1','parser.py',66),
  ('star1 -> empty','star1',1,'p_star1','parser.py',67),
  ('declara_vars -> vars declara_vars','declara_vars',2,'p_declara_vars','parser.py',73),
  ('declara_vars -> empty','declara_vars',1,'p_declara_vars','parser.py',74),
  ('loop -> while','loop',1,'p_loop','parser.py',84),
  ('loop -> for','loop',1,'p_loop','parser.py',85),
  ('stmt -> assignment','stmt',1,'p_stmt','parser.py',92),
  ('stmt -> condition','stmt',1,'p_stmt','parser.py',93),
  ('stmt -> print','stmt',1,'p_stmt','parser.py',94),
  ('stmt -> loop','stmt',1,'p_stmt','parser.py',95),
  ('stmt -> read','stmt',1,'p_stmt','parser.py',96),
  ('stmt -> graphstmt','stmt',1,'p_stmt','parser.py',97),
  ('stmt -> graphr','stmt',1,'p_stmt','parser.py',98),
  ('stmt -> funCall SEMICOLON','stmt',2,'p_stmt','parser.py',99),
  ('stmt -> return','stmt',1,'p_stmt','parser.py',100),
  ('functionI -> type ID','functionI',2,'p_functionI','parser.py',110),
  ('functionI -> VOID ID','functionI',2,'p_functionI','parser.py',111),
  ('function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun','function',7,'p_function','parser.py',117),
  ('inicia_fun -> OPENBRACES','inicia_fun',1,'p_inicia_fun','parser.py',129),
  ('termina_fun -> CLOSEBRACES','termina_fun',1,'p_termina_fun','parser.py',135),
  ('function2 -> OPENPAREN function3 CLOSEPAREN','function2',3,'p_function2','parser.py',140),
  ('function3 -> type ID function5','function3',3,'p_function3','parser.py',146),
  ('function3 -> empty','function3',1,'p_function3','parser.py',147),
  ('function4 -> stmt function4','function4',2,'p_function4','parser.py',153),
  ('function4 -> empty','function4',1,'p_function4','parser.py',154),
  ('function5 -> COMMA type ID function5','function5',4,'p_function5','parser.py',163),
  ('function5 -> empty','function5',1,'p_function5','parser.py',164),
  ('vars -> type ID vars1 equals exp SEMICOLON','vars',6,'p_vars','parser.py',187),
  ('vars -> type ID vars1 SEMICOLON','vars',4,'p_vars','parser.py',188),
  ('vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3','vars1',4,'p_vars1','parser.py',206),
  ('vars1 -> empty','vars1',1,'p_vars1','parser.py',207),
  ('vars3 -> OPENBRACKET CTEINT CLOSEBRACKET','vars3',3,'p_vars3','parser.py',213),
  ('vars3 -> empty','vars3',1,'p_vars3','parser.py',214),
  ('type -> INT','type',1,'p_type','parser.py',221),
  ('type -> FLOAT','type',1,'p_type','parser.py',222),
  ('type -> CHAR','type',1,'p_type','parser.py',223),
  ('print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON','print',5,'p_print','parser.py',231),
  ('read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON','read',6,'p_read','parser.py',240),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET','read1',6,'p_read1','parser.py',248),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET','read1',3,'p_read1','parser.py',249),
  ('read1 -> empty','read1',1,'p_read1','parser.py',250),
  ('equals -> EQUALS','equals',1,'p_equals','parser.py',255),
  ('id -> ID','id',1,'p_id','parser.py',264),
  ('assignment -> id assignment1 equals assignment3 SEMICOLON','assignment',5,'p_assignment','parser.py',274),
  ('assignment1 -> assignment2','assignment1',1,'p_assignment1','parser.py',282),
  ('assignment1 -> assignment2 assignment1','assignment1',2,'p_assignment1','parser.py',283),
  ('assignment1 -> empty','assignment1',1,'p_assignment1','parser.py',284),
  ('assignment2 -> OPENBRACKET exp CLOSEBRACKET','assignment2',3,'p_assignment2','parser.py',290),
  ('assignment3 -> exp','assignment3',1,'p_assignment3','parser.py',296),
  ('assignment3 -> read','assignment3',1,'p_assignment3','parser.py',297),
  ('vcte -> cte_int','vcte',1,'p_vcte','parser.py',306),
  ('vcte -> cte_float','vcte',1,'p_vcte','parser.py',307),
  ('vcte -> cte_char','vcte',1,'p_vcte','parser.py',308),
  ('vcte -> id vcte1','vcte',2,'p_vcte','parser.py',309),
  ('vcte -> funCall','vcte',1,'p_vcte','parser.py',310),
  ('vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3','vcte1',4,'p_vcte1','parser.py',319),
  ('vcte1 -> empty','vcte1',1,'p_vcte1','parser.py',320),
  ('vcte3 -> OPENBRACKET exp CLOSEBRACKET','vcte3',3,'p_vcte3','parser.py',326),
  ('vcte3 -> empty','vcte3',1,'p_vcte3','parser.py',327),
  ('cte_int -> CTEINT','cte_int',1,'p_cte_int','parser.py',334),
  ('cte_float -> CTEFLOAT','cte_float',1,'p_cte_float','parser.py',341),
  ('cte_char -> CTECHAR','cte_char',1,'p_cte_char','parser.py',348),
  ('return -> RETURN return1 SEMICOLON','return',3,'p_return','parser.py',356),
  ('return1 -> vcte','return1',1,'p_return1','parser.py',362),
  ('return1 -> exp','return1',1,'p_return1','parser.py',363),
  ('expression -> exp expression1','expression',2,'p_expression','parser.py',371),
  ('expression1 -> loper exp','expression1',2,'p_expression1','parser.py',376),
  ('expression1 -> empty','expression1',1,'p_expression1','parser.py',377),
  ('loper -> GREATER','loper',1,'p_loper','parser.py',387),
  ('loper -> LESS','loper',1,'p_loper','parser.py',388),
  ('loper -> NOTEQUAL','loper',1,'p_loper','parser.py',389),
  ('loper -> ISEQUAL','loper',1,'p_loper','parser.py',390),
  ('condition -> IF head_cond body condition1','condition',4,'p_condition','parser.py',400),
  ('condition1 -> elseif head_cond body condition1','condition1',4,'p_condition1','parser.py',408),
  ('condition1 -> else body','condition1',2,'p_condition1','parser.py',409),
  ('condition1 -> empty','condition1',1,'p_condition1','parser.py',410),
  ('elseif -> ELSEIF','elseif',1,'p_elseif','parser.py',417),
  ('else -> ELSE','else',1,'p_else','parser.py',424),
  ('head_cond -> OPENPAREN expression close_condition','head_cond',3,'p_head_cond','parser.py',436),
  ('body -> OPENBRACES body1 CLOSEBRACES','body',3,'p_body','parser.py',442),
  ('close_condition -> CLOSEPAREN','close_condition',1,'p_close_condition','parser.py',448),
  ('body1 -> stmt body1','body1',2,'p_body1','parser.py',455),
  ('body1 -> empty','body1',1,'p_body1','parser.py',456),
  ('for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body','for',7,'p_for','parser.py',464),
  ('while -> while1 body','while',2,'p_while','parser.py',471),
  ('while1 -> while_w OPENPAREN expression CLOSEPAREN','while1',4,'p_while1','parser.py',483),
  ('while_w -> WHILE','while_w',1,'p_while_w','parser.py',489),
  ('funCall -> ID OPENPAREN funCall2 CLOSEPAREN','funCall',4,'p_funCall','parser.py',497),
  ('funCall2 -> exp funCall3','funCall2',2,'p_funCall2','parser.py',508),
  ('funCall2 -> empty','funCall2',1,'p_funCall2','parser.py',509),
  ('funCall3 -> COMMA exp funCall2','funCall3',3,'p_funCall3','parser.py',515),
  ('funCall3 -> empty','funCall3',1,'p_funCall3','parser.py',516),
  ('laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN','laRegla',5,'p_laRegla','parser.py',523),
  ('laRegla2 -> OPENPAREN exp CLOSEPAREN','laRegla2',3,'p_laRegla2','parser.py',530),
  ('graphstmt -> graphfig','graphstmt',1,'p_graphstmt','parser.py',537),
  ('graphstmt -> graphview','graphstmt',1,'p_graphstmt','parser.py',538),
  ('graphstmt -> graphmove','graphstmt',1,'p_graphstmt','parser.py',539),
  ('graphfig -> graphfig1 SEMICOLON','graphfig',2,'p_graphfig','parser.py',545),
  ('graphfig1 -> CIRCLE laRegla2','graphfig1',2,'p_graphfig1','parser.py',550),
  ('graphfig1 -> SQUARE laRegla2','graphfig1',2,'p_graphfig1','parser.py',551),
  ('graphfig1 -> TRIANGLE laRegla','graphfig1',2,'p_graphfig1','parser.py',552),
  ('graphfig1 -> RECTANGLE laRegla','graphfig1',2,'p_graphfig1','parser.py',553),
  ('graphmove -> graphmove1 SEMICOLON','graphmove',2,'p_graphmove','parser.py',561),
  ('graphmove -> graphmove2 SEMICOLON','graphmove',2,'p_graphmove','parser.py',562),
  ('graphmove1 -> HAND_DOWN','graphmove1',1,'p_graphmove1','parser.py',568),
  ('graphmove1 -> HAND_UP','graphmove1',1,'p_graphmove1','parser.py',569),
  ('graphmove2 -> GO laRegla2','graphmove2',2,'p_graphmove2','parser.py',577),
  ('graphmove2 -> LEFT laRegla2','graphmove2',2,'p_graphmove2','parser.py',578),
  ('graphmove2 -> RIGHT laRegla2','graphmove2',2,'p_graphmove2','parser.py',579),
  ('graphmove2 -> BACK laRegla2','graphmove2',2,'p_graphmove2','parser.py',580),
  ('graphmove2 -> ARC laRegla','graphmove2',2,'p_graphmove2','parser.py',581),
  ('graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES','graphr',6,'p_graphr','parser.py',592),
  ('graphr1 -> graphstmt graphr1','graphr1',2,'p_graphr1','parser.py',603),
  ('graphr1 -> empty','graphr1',1,'p_graphr1','parser.py',604),
  ('rep -> OPENPAREN exp CLOSEPAREN','rep',3,'p_rep','parser.py',609),
  ('repeat -> REPEAT','repeat',1,'p_repeat','parser.py',615),
  ('graphview -> graphview1 SEMICOLON','graphview',2,'p_graphview','parser.py',622),
  ('graphview1 -> HIDE_STAR','graphview1',1,'p_graphview1','parser.py',628),
  ('graphview1 -> SHOW_STAR','graphview1',1,'p_graphview1','parser.py',629),
  ('graphview1 -> graphview2 exp','graphview1',2,'p_graphview1','parser.py',630),
  ('graphview2 -> SETXY laRegla','graphview2',2,'p_graphview2','parser.py',638),
  ('graphview2 -> COLOR_STAR laRegla2','graphview2',2,'p_graphview2','parser.py',639),
  ('graphview2 -> SIZE_STAR laRegla2','graphview2',2,'p_graphview2','parser.py',640),
  ('exp -> term exp1','exp',2,'p_exp','parser.py',653),
  ('exp1 -> ADDITION exp','exp1',2,'p_exp1','parser.py',661),
  ('exp1 -> SUBSTRACTION exp','exp1',2,'p_exp1','parser.py',662),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',663),
  ('openP -> OPENPAREN','openP',1,'p_openP','parser.py',673),
  ('closeP -> CLOSEPAREN','closeP',1,'p_closeP','parser.py',681),
  ('factor -> vcte','factor',1,'p_factor','parser.py',691),
  ('factor -> factor1','factor',1,'p_factor','parser.py',692),
  ('factor1 -> factor2 vcte','factor1',2,'p_factor1','parser.py',698),
  ('factor1 -> openP expression closeP','factor1',3,'p_factor1','parser.py',699),
  ('factor2 -> ADDITION','factor2',1,'p_factor2','parser.py',705),
  ('factor2 -> SUBSTRACTION','factor2',1,'p_factor2','parser.py',706),
  ('term -> factor term1','term',2,'p_term','parser.py',719),
  ('term1 -> MULTIPLICATION term','term1',2,'p_term1','parser.py',728),
  ('term1 -> DIVISION term','term1',2,'p_term1','parser.py',729),
  ('term1 -> empty','term1',1,'p_term1','parser.py',730),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',740),
]
