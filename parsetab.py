
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDITION AND ARC BACK CHAR CIRCLE CLOSEBRACES CLOSEBRACKET CLOSEPAREN COLOR_STAR COMMA CTECHAR CTEFLOAT CTEINT DIVISION ELSE ELSEIF EQUALS FLOAT FOR FUN GO GREATER HAND_DOWN HAND_UP HIDE_STAR ID IF INT ISEQUAL LEFT LESS MULTIPLICATION NOTEQUAL OPENBRACES OPENBRACKET OPENPAREN OR PRINT PROGRAM READ RECTANGLE REPEAT RETURN RIGHT SEMICOLON SETXY SHOW_STAR SIMPLEQUOTES SIZE_STAR SQUARE SUBSTRACTION TRIANGLE TWODOTS VARS VOID WHILE\n    program : PROGRAM ID SEMICOLON program1 program2 star\n    \n    program1 : vars\n            | empty\n    \n    program2 : function program2\n            | empty\n    \n    star : MULTIPLICATION OPENBRACES star2 star1 CLOSEBRACES\n    \n    star1 : stmt star1\n        | empty\n    \n    star2 : vars\n          | empty\n    \n    loop : while\n        | for\n    \n    stmt : assignment\n        | condition\n        | print\n        | loop\n        | read\n        | graphstmt\n        | graphr\n        | funCall\n        | return\n    \n    function : FUN function1 ID function2 inicia_fun function6 function4 termina_fun\n    \n    function1 : type\n              | VOID\n    \n    inicia_fun : OPENBRACES\n    \n    termina_fun : CLOSEBRACES\n    \n    function2 : OPENPAREN function3 CLOSEPAREN\n    \n    function3 : type ID function5\n              | empty\n    \n    function4 : stmt function4\n              | empty\n    \n    function5 : COMMA type ID function3\n    \n    function6 : vars\n              | empty\n    \n    vars : VARS type ID vars1 SEMICOLON\n    \n    vars1 : EQUALS exp vars2\n        | OPENBRACKET CTEINT CLOSEBRACKET vars3\n        | empty vars2\n    \n    vars2 : COMMA ID vars1\n          | COMMA vars4\n          | empty\n    \n    vars3 : OPENBRACKET CTEINT CLOSEBRACKET\n        | empty\n    \n    vars4 : type ID vars1\n          | empty\n    \n    type : INT\n         | FLOAT\n         | CHAR\n    \n    print : PRINT OPENPAREN exp CLOSEPAREN SEMICOLON\n    \n    read : READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON\n    \n    read1 : OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET\n              | OPENBRACKET exp CLOSEBRACKET\n              | empty\n    \n    assignment : ID assignment1 EQUALS assignment3 SEMICOLON\n    \n    assignment1 : assignment2\n                | assignment2 assignment1\n                | empty\n    \n    assignment2 : OPENBRACKET exp CLOSEBRACKET\n    \n    assignment3 : exp\n                | read\n    \n    vcte : cte\n        | ID vcte1\n        | funCall\n    \n    vcte1 : OPENBRACKET exp CLOSEBRACKET vcte3\n          | empty\n    \n    vcte3 : OPENBRACKET exp CLOSEBRACKET\n        | empty\n\n    \n    cte : CTEINT\n        | CTEFLOAT\n        | CTECHAR\n    \n    return : RETURN return1 SEMICOLON\n    \n    return1 : vcte\n            | exp\n    \n    expression : exp expression1\n    \n    expression1 : loper exp\n             | empty\n    \n    loper : GREATER\n          | LESS\n          | NOTEQUAL\n          | ISEQUAL\n    \n    logical : expression logical1 expression\n    \n    logical1 : OR\n             | AND\n    \n    condition : IF head body condition1\n    \n    condition1 : ELSEIF head body condition1\n               | ELSE body\n               | empty\n    \n    head : OPENPAREN head1 CLOSEPAREN\n    \n    head1 : expression\n          | logical\n    \n    body : OPENBRACES body1 CLOSEBRACES\n    \n    body1 : stmt body1\n          | empty\n    \n    for : FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body\n    \n    while : WHILE  head body\n    \n    funCall : ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON\n    \n    funCall2 : exp funCall3\n             | empty\n    \n    funCall3 : COMMA exp funCall2\n             | empty\n    \n    laRegla : OPENPAREN exp COMMA exp CLOSEPAREN\n    \n    laRegla2 : OPENPAREN exp CLOSEPAREN\n    \n    graphstmt : graphfig\n             | graphview\n             | graphmove\n    \n    graphfig : graphfig1 SEMICOLON\n    \n    graphfig1 : CIRCLE laRegla2\n            | SQUARE laRegla2\n            | TRIANGLE laRegla\n            | RECTANGLE laRegla\n    \n    graphmove :  graphmove1  SEMICOLON\n    \n    graphmove1 : HAND_DOWN\n              | HAND_UP\n              | graphmove2\n    \n    graphmove2 : GO laRegla2\n              | LEFT laRegla2\n              | RIGHT laRegla2\n              | BACK laRegla2\n              | ARC laRegla\n    \n    graphr : REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES\n    \n    graphr1 : graphstmt graphr1\n           | empty\n    \n    graphview : graphview1 SEMICOLON\n    \n    graphview1 : HIDE_STAR\n              | SHOW_STAR\n              | graphview2 exp\n    \n    graphview2 : SETXY graphview3\n              | COLOR_STAR\n              | SIZE_STAR\n    \n    graphview3 : exp COMMA\n              | laRegla\n    \n    exp : term exp1\n    \n    exp1 : ADDITION exp\n         | SUBSTRACTION exp\n         | empty\n    \n    openP : OPENPAREN\n    \n    closeP : CLOSEPAREN\n    \n    factor : vcte\n           | factor1\n    \n    factor1 : factor2 vcte\n            | openP expression closeP\n    \n    factor2 : ADDITION\n            | SUBSTRACTION\n    \n    term : factor term1\n    \n    term1 : MULTIPLICATION term\n          | DIVISION term\n          | empty\n    empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,17,128,],[0,-1,-6,]),'ID':([2,13,14,15,16,20,21,22,24,27,30,31,32,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,55,57,59,60,61,62,63,64,65,66,67,71,72,74,75,76,77,78,90,94,95,96,102,103,105,108,109,110,111,112,113,114,115,116,117,118,119,120,126,133,135,136,137,143,144,145,146,148,151,154,156,157,163,164,165,168,169,170,171,176,177,179,181,182,183,184,190,193,194,201,202,206,208,214,216,224,227,229,232,233,234,237,240,242,246,247,248,249,250,251,253,255,256,259,270,271,274,276,278,279,280,281,],[3,23,-46,-47,-48,25,-23,-24,-148,42,68,-9,-10,-35,-148,-148,-138,-139,-61,-148,-63,42,42,-68,-69,-70,-136,-142,-143,124,68,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,42,42,42,42,-128,-129,-148,-25,167,-132,42,42,-135,-144,42,42,-147,-62,42,42,-65,-140,189,42,42,42,199,203,-106,-123,-111,42,42,-127,-131,42,68,-33,-34,-133,-134,-145,-146,-141,-137,42,-77,-78,-79,-80,42,-148,68,-71,-95,-130,68,42,-148,-84,-87,68,42,-82,-83,42,42,42,267,-96,42,42,-64,-67,-54,-86,-91,-49,-148,-50,-120,-101,-66,-85,42,-94,]),'SEMICOLON':([3,23,26,29,36,37,38,39,40,41,42,43,46,47,48,53,54,55,81,82,83,88,89,91,92,93,107,108,111,112,115,116,119,120,123,124,125,127,139,140,141,147,149,150,152,153,158,159,160,161,162,168,169,170,171,176,177,186,187,188,189,212,216,219,220,221,222,235,241,247,250,251,252,260,271,276,278,],[4,-148,35,-148,-148,-148,-148,-138,-139,-61,-148,-63,-68,-69,-70,-41,-38,-148,144,145,146,-124,-125,-112,-113,-114,-36,-132,-135,-144,-147,-62,-65,-140,-148,-148,-40,-45,201,-72,-73,-107,-108,-109,-110,-126,-115,-116,-117,-118,-119,-133,-134,-145,-146,-141,-137,-37,-43,-39,-148,247,-148,-44,253,-59,-60,259,-102,-96,-64,-67,-42,271,-50,-101,-66,]),'VARS':([4,24,102,103,],[8,8,8,-25,]),'FUN':([4,5,6,7,10,35,243,244,],[-148,12,-2,-3,12,-35,-22,-26,]),'MULTIPLICATION':([4,5,6,7,9,10,11,19,35,38,39,40,41,42,43,46,47,48,116,119,120,140,176,177,216,243,244,247,250,251,278,],[-148,-148,-2,-3,18,-148,-5,-4,-35,113,-138,-139,-61,-148,-63,-68,-69,-70,-62,-65,-140,-138,-141,-137,-148,-22,-26,-96,-64,-67,-66,]),'INT':([8,12,34,55,211,267,],[14,14,14,14,14,14,]),'FLOAT':([8,12,34,55,211,267,],[15,15,15,15,15,15,]),'CHAR':([8,12,34,55,211,267,],[16,16,16,16,16,16,]),'VOID':([12,],[22,]),'OPENBRACES':([18,33,37,38,39,40,41,42,43,46,47,48,108,111,112,115,116,119,120,134,138,142,166,168,169,170,171,176,177,216,226,231,247,250,251,254,275,278,],[24,103,-148,-148,-138,-139,-61,-148,-63,-68,-69,-70,-132,-135,-144,-147,-62,-65,-140,194,200,194,-27,-133,-134,-145,-146,-141,-137,-148,194,-88,-96,-64,-67,194,194,-66,]),'EQUALS':([23,68,124,130,131,132,189,191,223,],[27,-148,27,190,-55,-57,27,-56,-58,]),'OPENBRACKET':([23,42,68,123,124,131,189,199,216,223,272,],[28,118,133,185,28,133,28,237,249,-58,280,]),'COMMA':([23,29,36,37,38,39,40,41,42,43,46,47,48,108,111,112,115,116,119,120,124,155,167,168,169,170,171,173,176,177,189,205,216,247,250,251,278,],[-148,55,55,-148,-148,-138,-139,-61,-148,-63,-68,-69,-70,-132,-135,-144,-147,-62,-65,-140,-148,206,211,-133,-134,-145,-146,214,-141,-137,-148,242,-148,-96,-64,-67,-66,]),'IF':([24,30,31,32,35,57,59,60,61,62,63,64,65,66,67,71,72,74,75,76,102,103,144,145,146,163,164,165,193,194,201,202,208,224,227,229,247,253,255,256,259,270,271,274,279,281,],[-148,69,-9,-10,-35,69,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-148,-25,-106,-123,-111,69,-33,-34,-148,69,-71,-95,69,-84,-87,69,-96,-54,-86,-91,-49,-148,-50,-120,-85,-94,]),'PRINT':([24,30,31,32,35,57,59,60,61,62,63,64,65,66,67,71,72,74,75,76,102,103,144,145,146,163,164,165,193,194,201,202,208,224,227,229,247,253,255,256,259,270,271,274,279,281,],[-148,70,-9,-10,-35,70,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-148,-25,-106,-123,-111,70,-33,-34,-148,70,-71,-95,70,-84,-87,70,-96,-54,-86,-91,-49,-148,-50,-120,-85,-94,]),'READ':([24,30,31,32,35,57,59,60,61,62,63,64,65,66,67,71,72,74,75,76,102,103,144,145,146,163,164,165,190,193,194,201,202,208,224,227,229,247,253,255,256,259,270,271,274,279,281,],[-148,73,-9,-10,-35,73,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-148,-25,-106,-123,-111,73,-33,-34,73,-148,73,-71,-95,73,-84,-87,73,-96,-54,-86,-91,-49,-148,-50,-120,-85,-94,]),'REPEAT':([24,30,31,32,35,57,59,60,61,62,63,64,65,66,67,71,72,74,75,76,102,103,144,145,146,163,164,165,193,194,201,202,208,224,227,229,247,253,255,256,259,270,271,274,279,281,],[-148,77,-9,-10,-35,77,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-148,-25,-106,-123,-111,77,-33,-34,-148,77,-71,-95,77,-84,-87,77,-96,-54,-86,-91,-49,-148,-50,-120,-85,-94,]),'RETURN':([24,30,31,32,35,57,59,60,61,62,63,64,65,66,67,71,72,74,75,76,102,103,144,145,146,163,164,165,193,194,201,202,208,224,227,229,247,253,255,256,259,270,271,274,279,281,],[-148,78,-9,-10,-35,78,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-148,-25,-106,-123,-111,78,-33,-34,-148,78,-71,-95,78,-84,-87,78,-96,-54,-86,-91,-49,-148,-50,-120,-85,-94,]),'WHILE':([24,30,31,32,35,57,59,60,61,62,63,64,65,66,67,71,72,74,75,76,102,103,144,145,146,163,164,165,193,194,201,202,208,224,227,229,247,253,255,256,259,270,271,274,279,281,],[-148,79,-9,-10,-35,79,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-148,-25,-106,-123,-111,79,-33,-34,-148,79,-71,-95,79,-84,-87,79,-96,-54,-86,-91,-49,-148,-50,-120,-85,-94,]),'FOR':([24,30,31,32,35,57,59,60,61,62,63,64,65,66,67,71,72,74,75,76,102,103,144,145,146,163,164,165,193,194,201,202,208,224,227,229,247,253,255,256,259,270,271,274,279,281,],[-148,80,-9,-10,-35,80,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-148,-25,-106,-123,-111,80,-33,-34,-148,80,-71,-95,80,-84,-87,80,-96,-54,-86,-91,-49,-148,-50,-120,-85,-94,]),'CIRCLE':([24,30,31,32,35,57,59,60,61,62,63,64,65,66,67,71,72,74,75,76,102,103,144,145,146,163,164,165,193,194,200,201,202,208,224,227,229,239,247,253,255,256,259,262,270,271,274,279,281,],[-148,84,-9,-10,-35,84,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-148,-25,-106,-123,-111,84,-33,-34,-148,84,84,-71,-95,84,-84,-87,84,84,-96,-54,-86,-91,-49,84,-148,-50,-120,-85,-94,]),'SQUARE':([24,30,31,32,35,57,59,60,61,62,63,64,65,66,67,71,72,74,75,76,102,103,144,145,146,163,164,165,193,194,200,201,202,208,224,227,229,239,247,253,255,256,259,262,270,271,274,279,281,],[-148,85,-9,-10,-35,85,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-148,-25,-106,-123,-111,85,-33,-34,-148,85,85,-71,-95,85,-84,-87,85,85,-96,-54,-86,-91,-49,85,-148,-50,-120,-85,-94,]),'TRIANGLE':([24,30,31,32,35,57,59,60,61,62,63,64,65,66,67,71,72,74,75,76,102,103,144,145,146,163,164,165,193,194,200,201,202,208,224,227,229,239,247,253,255,256,259,262,270,271,274,279,281,],[-148,86,-9,-10,-35,86,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-148,-25,-106,-123,-111,86,-33,-34,-148,86,86,-71,-95,86,-84,-87,86,86,-96,-54,-86,-91,-49,86,-148,-50,-120,-85,-94,]),'RECTANGLE':([24,30,31,32,35,57,59,60,61,62,63,64,65,66,67,71,72,74,75,76,102,103,144,145,146,163,164,165,193,194,200,201,202,208,224,227,229,239,247,253,255,256,259,262,270,271,274,279,281,],[-148,87,-9,-10,-35,87,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-148,-25,-106,-123,-111,87,-33,-34,-148,87,87,-71,-95,87,-84,-87,87,87,-96,-54,-86,-91,-49,87,-148,-50,-120,-85,-94,]),'HIDE_STAR':([24,30,31,32,35,57,59,60,61,62,63,64,65,66,67,71,72,74,75,76,102,103,144,145,146,163,164,165,193,194,200,201,202,208,224,227,229,239,247,253,255,256,259,262,270,271,274,279,281,],[-148,88,-9,-10,-35,88,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-148,-25,-106,-123,-111,88,-33,-34,-148,88,88,-71,-95,88,-84,-87,88,88,-96,-54,-86,-91,-49,88,-148,-50,-120,-85,-94,]),'SHOW_STAR':([24,30,31,32,35,57,59,60,61,62,63,64,65,66,67,71,72,74,75,76,102,103,144,145,146,163,164,165,193,194,200,201,202,208,224,227,229,239,247,253,255,256,259,262,270,271,274,279,281,],[-148,89,-9,-10,-35,89,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-148,-25,-106,-123,-111,89,-33,-34,-148,89,89,-71,-95,89,-84,-87,89,89,-96,-54,-86,-91,-49,89,-148,-50,-120,-85,-94,]),'HAND_DOWN':([24,30,31,32,35,57,59,60,61,62,63,64,65,66,67,71,72,74,75,76,102,103,144,145,146,163,164,165,193,194,200,201,202,208,224,227,229,239,247,253,255,256,259,262,270,271,274,279,281,],[-148,91,-9,-10,-35,91,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-148,-25,-106,-123,-111,91,-33,-34,-148,91,91,-71,-95,91,-84,-87,91,91,-96,-54,-86,-91,-49,91,-148,-50,-120,-85,-94,]),'HAND_UP':([24,30,31,32,35,57,59,60,61,62,63,64,65,66,67,71,72,74,75,76,102,103,144,145,146,163,164,165,193,194,200,201,202,208,224,227,229,239,247,253,255,256,259,262,270,271,274,279,281,],[-148,92,-9,-10,-35,92,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-148,-25,-106,-123,-111,92,-33,-34,-148,92,92,-71,-95,92,-84,-87,92,92,-96,-54,-86,-91,-49,92,-148,-50,-120,-85,-94,]),'SETXY':([24,30,31,32,35,57,59,60,61,62,63,64,65,66,67,71,72,74,75,76,102,103,144,145,146,163,164,165,193,194,200,201,202,208,224,227,229,239,247,253,255,256,259,262,270,271,274,279,281,],[-148,94,-9,-10,-35,94,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-148,-25,-106,-123,-111,94,-33,-34,-148,94,94,-71,-95,94,-84,-87,94,94,-96,-54,-86,-91,-49,94,-148,-50,-120,-85,-94,]),'COLOR_STAR':([24,30,31,32,35,57,59,60,61,62,63,64,65,66,67,71,72,74,75,76,102,103,144,145,146,163,164,165,193,194,200,201,202,208,224,227,229,239,247,253,255,256,259,262,270,271,274,279,281,],[-148,95,-9,-10,-35,95,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-148,-25,-106,-123,-111,95,-33,-34,-148,95,95,-71,-95,95,-84,-87,95,95,-96,-54,-86,-91,-49,95,-148,-50,-120,-85,-94,]),'SIZE_STAR':([24,30,31,32,35,57,59,60,61,62,63,64,65,66,67,71,72,74,75,76,102,103,144,145,146,163,164,165,193,194,200,201,202,208,224,227,229,239,247,253,255,256,259,262,270,271,274,279,281,],[-148,96,-9,-10,-35,96,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-148,-25,-106,-123,-111,96,-33,-34,-148,96,96,-71,-95,96,-84,-87,96,96,-96,-54,-86,-91,-49,96,-148,-50,-120,-85,-94,]),'GO':([24,30,31,32,35,57,59,60,61,62,63,64,65,66,67,71,72,74,75,76,102,103,144,145,146,163,164,165,193,194,200,201,202,208,224,227,229,239,247,253,255,256,259,262,270,271,274,279,281,],[-148,97,-9,-10,-35,97,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-148,-25,-106,-123,-111,97,-33,-34,-148,97,97,-71,-95,97,-84,-87,97,97,-96,-54,-86,-91,-49,97,-148,-50,-120,-85,-94,]),'LEFT':([24,30,31,32,35,57,59,60,61,62,63,64,65,66,67,71,72,74,75,76,102,103,144,145,146,163,164,165,193,194,200,201,202,208,224,227,229,239,247,253,255,256,259,262,270,271,274,279,281,],[-148,98,-9,-10,-35,98,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-148,-25,-106,-123,-111,98,-33,-34,-148,98,98,-71,-95,98,-84,-87,98,98,-96,-54,-86,-91,-49,98,-148,-50,-120,-85,-94,]),'RIGHT':([24,30,31,32,35,57,59,60,61,62,63,64,65,66,67,71,72,74,75,76,102,103,144,145,146,163,164,165,193,194,200,201,202,208,224,227,229,239,247,253,255,256,259,262,270,271,274,279,281,],[-148,99,-9,-10,-35,99,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-148,-25,-106,-123,-111,99,-33,-34,-148,99,99,-71,-95,99,-84,-87,99,99,-96,-54,-86,-91,-49,99,-148,-50,-120,-85,-94,]),'BACK':([24,30,31,32,35,57,59,60,61,62,63,64,65,66,67,71,72,74,75,76,102,103,144,145,146,163,164,165,193,194,200,201,202,208,224,227,229,239,247,253,255,256,259,262,270,271,274,279,281,],[-148,100,-9,-10,-35,100,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-148,-25,-106,-123,-111,100,-33,-34,-148,100,100,-71,-95,100,-84,-87,100,100,-96,-54,-86,-91,-49,100,-148,-50,-120,-85,-94,]),'ARC':([24,30,31,32,35,57,59,60,61,62,63,64,65,66,67,71,72,74,75,76,102,103,144,145,146,163,164,165,193,194,200,201,202,208,224,227,229,239,247,253,255,256,259,262,270,271,274,279,281,],[-148,101,-9,-10,-35,101,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-148,-25,-106,-123,-111,101,-33,-34,-148,101,101,-71,-95,101,-84,-87,101,101,-96,-54,-86,-91,-49,101,-148,-50,-120,-85,-94,]),'CLOSEBRACES':([24,30,31,32,35,56,57,58,59,60,61,62,63,64,65,66,67,71,72,74,75,76,102,103,129,144,145,146,163,164,165,193,194,201,202,207,208,209,224,227,228,229,230,239,245,247,253,255,256,257,259,262,263,264,270,271,273,274,279,281,],[-148,-148,-9,-10,-35,128,-148,-8,-13,-14,-15,-16,-17,-18,-19,-20,-21,-11,-12,-103,-104,-105,-148,-25,-7,-106,-123,-111,-148,-33,-34,-148,-148,-71,-95,244,-148,-31,-84,-87,256,-148,-93,-148,-30,-96,-54,-86,-91,-92,-49,-148,274,-122,-148,-50,-121,-120,-85,-94,]),'OPENPAREN':([25,27,37,38,39,40,41,42,43,45,46,47,48,49,68,69,70,73,77,78,79,80,84,85,86,87,90,94,95,96,97,98,99,100,101,108,109,110,111,112,113,114,115,116,117,118,119,120,133,135,136,148,151,154,156,157,168,169,170,171,176,177,179,181,182,183,184,190,206,214,216,225,232,233,234,237,240,242,247,248,249,250,251,276,278,280,],[34,49,-148,-148,-138,-139,-61,117,-63,49,-68,-69,-70,-136,117,135,136,137,49,49,135,143,148,148,151,151,49,157,-128,-129,148,148,148,148,151,-132,49,49,-135,-144,49,49,-147,-62,49,49,-65,-140,49,49,49,49,49,-127,-131,49,-133,-134,-145,-146,-141,-137,49,-77,-78,-79,-80,49,-130,49,-148,135,49,-82,-83,49,49,49,-96,49,49,-64,-67,-101,-66,49,]),'CTEINT':([27,28,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,77,78,90,94,95,96,108,109,110,111,112,113,114,115,116,117,118,119,120,133,135,136,148,151,154,156,157,168,169,170,171,176,177,179,181,182,183,184,185,190,206,214,216,232,233,234,237,240,242,247,248,249,250,251,276,278,280,],[46,52,-148,-148,-138,-139,-61,-148,-63,46,46,-68,-69,-70,-136,-142,-143,46,46,46,46,-128,-129,-132,46,46,-135,-144,46,46,-147,-62,46,46,-65,-140,46,46,46,46,46,-127,-131,46,-133,-134,-145,-146,-141,-137,46,-77,-78,-79,-80,218,46,-130,46,-148,46,-82,-83,46,46,46,-96,46,46,-64,-67,-101,-66,46,]),'CTEFLOAT':([27,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,77,78,90,94,95,96,108,109,110,111,112,113,114,115,116,117,118,119,120,133,135,136,148,151,154,156,157,168,169,170,171,176,177,179,181,182,183,184,190,206,214,216,232,233,234,237,240,242,247,248,249,250,251,276,278,280,],[47,-148,-148,-138,-139,-61,-148,-63,47,47,-68,-69,-70,-136,-142,-143,47,47,47,47,-128,-129,-132,47,47,-135,-144,47,47,-147,-62,47,47,-65,-140,47,47,47,47,47,-127,-131,47,-133,-134,-145,-146,-141,-137,47,-77,-78,-79,-80,47,-130,47,-148,47,-82,-83,47,47,47,-96,47,47,-64,-67,-101,-66,47,]),'CTECHAR':([27,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,77,78,90,94,95,96,108,109,110,111,112,113,114,115,116,117,118,119,120,133,135,136,148,151,154,156,157,168,169,170,171,176,177,179,181,182,183,184,190,206,214,216,232,233,234,237,240,242,247,248,249,250,251,276,278,280,],[48,-148,-148,-138,-139,-61,-148,-63,48,48,-68,-69,-70,-136,-142,-143,48,48,48,48,-128,-129,-132,48,48,-135,-144,48,48,-147,-62,48,48,-65,-140,48,48,48,48,48,-127,-131,48,-133,-134,-145,-146,-141,-137,48,-77,-78,-79,-80,48,-130,48,-148,48,-82,-83,48,48,48,-96,48,48,-64,-67,-101,-66,48,]),'ADDITION':([27,37,38,39,40,41,42,43,45,46,47,48,49,77,78,90,94,95,96,108,109,110,111,112,113,114,115,116,117,118,119,120,133,135,136,140,148,151,154,156,157,168,169,170,171,176,177,179,181,182,183,184,190,206,214,216,232,233,234,237,240,242,247,248,249,250,251,276,278,280,],[50,109,-148,-138,-139,-61,-148,-63,50,-68,-69,-70,-136,50,50,50,50,-128,-129,-132,50,50,-135,-144,50,50,-147,-62,50,50,-65,-140,50,50,50,-138,50,50,-127,-131,50,-133,-134,-145,-146,-141,-137,50,-77,-78,-79,-80,50,-130,50,-148,50,-82,-83,50,50,50,-96,50,50,-64,-67,-101,-66,50,]),'SUBSTRACTION':([27,37,38,39,40,41,42,43,45,46,47,48,49,77,78,90,94,95,96,108,109,110,111,112,113,114,115,116,117,118,119,120,133,135,136,140,148,151,154,156,157,168,169,170,171,176,177,179,181,182,183,184,190,206,214,216,232,233,234,237,240,242,247,248,249,250,251,276,278,280,],[51,110,-148,-138,-139,-61,-148,-63,51,-68,-69,-70,-136,51,51,51,51,-128,-129,-132,51,51,-135,-144,51,51,-147,-62,51,51,-65,-140,51,51,51,-138,51,51,-127,-131,51,-133,-134,-145,-146,-141,-137,51,-77,-78,-79,-80,51,-130,51,-148,51,-82,-83,51,51,51,-96,51,51,-64,-67,-101,-66,51,]),'CLOSEPAREN':([34,37,38,39,40,41,42,43,46,47,48,104,106,108,111,112,115,116,117,119,120,121,122,168,169,170,171,172,173,174,176,177,178,180,195,196,197,198,199,204,210,213,215,216,217,236,238,247,248,250,251,258,265,266,267,268,272,277,278,283,],[-148,-148,-148,-138,-139,-61,-148,-63,-68,-69,-70,166,-29,-132,-135,-144,-147,-62,-148,-65,-140,177,-148,-133,-134,-145,-146,212,-148,-98,-141,-137,-74,-76,231,-89,-90,235,-148,241,-28,-97,-100,-148,-75,260,-53,-96,-148,-64,-67,-81,275,276,-148,-99,-52,-32,-66,-51,]),'GREATER':([37,38,39,40,41,42,43,46,47,48,108,111,112,115,116,119,120,122,168,169,170,171,176,177,216,247,250,251,278,],[-148,-148,-138,-139,-61,-148,-63,-68,-69,-70,-132,-135,-144,-147,-62,-65,-140,181,-133,-134,-145,-146,-141,-137,-148,-96,-64,-67,-66,]),'LESS':([37,38,39,40,41,42,43,46,47,48,108,111,112,115,116,119,120,122,168,169,170,171,176,177,216,247,250,251,278,],[-148,-148,-138,-139,-61,-148,-63,-68,-69,-70,-132,-135,-144,-147,-62,-65,-140,182,-133,-134,-145,-146,-141,-137,-148,-96,-64,-67,-66,]),'NOTEQUAL':([37,38,39,40,41,42,43,46,47,48,108,111,112,115,116,119,120,122,168,169,170,171,176,177,216,247,250,251,278,],[-148,-148,-138,-139,-61,-148,-63,-68,-69,-70,-132,-135,-144,-147,-62,-65,-140,183,-133,-134,-145,-146,-141,-137,-148,-96,-64,-67,-66,]),'ISEQUAL':([37,38,39,40,41,42,43,46,47,48,108,111,112,115,116,119,120,122,168,169,170,171,176,177,216,247,250,251,278,],[-148,-148,-138,-139,-61,-148,-63,-68,-69,-70,-132,-135,-144,-147,-62,-65,-140,184,-133,-134,-145,-146,-141,-137,-148,-96,-64,-67,-66,]),'CLOSEBRACKET':([37,38,39,40,41,42,43,46,47,48,52,108,111,112,115,116,119,120,168,169,170,171,175,176,177,192,216,218,247,250,251,261,269,278,282,],[-148,-148,-138,-139,-61,-148,-63,-68,-69,-70,123,-132,-135,-144,-147,-62,-65,-140,-133,-134,-145,-146,216,-141,-137,223,-148,252,-96,-64,-67,272,278,-66,283,]),'OR':([37,38,39,40,41,42,43,46,47,48,108,111,112,115,116,119,120,122,168,169,170,171,176,177,178,180,196,216,217,247,250,251,278,],[-148,-148,-138,-139,-61,-148,-63,-68,-69,-70,-132,-135,-144,-147,-62,-65,-140,-148,-133,-134,-145,-146,-141,-137,-74,-76,233,-148,-75,-96,-64,-67,-66,]),'AND':([37,38,39,40,41,42,43,46,47,48,108,111,112,115,116,119,120,122,168,169,170,171,176,177,178,180,196,216,217,247,250,251,278,],[-148,-148,-138,-139,-61,-148,-63,-68,-69,-70,-132,-135,-144,-147,-62,-65,-140,-148,-133,-134,-145,-146,-141,-137,-74,-76,234,-148,-75,-96,-64,-67,-66,]),'DIVISION':([38,39,40,41,42,43,46,47,48,116,119,120,140,176,177,216,247,250,251,278,],[114,-138,-139,-61,-148,-63,-68,-69,-70,-62,-65,-140,-138,-141,-137,-148,-96,-64,-67,-66,]),'ELSEIF':([193,256,270,],[225,-91,225,]),'ELSE':([193,256,270,],[226,-91,226,]),'TWODOTS':([203,],[240,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program1':([4,],[5,]),'vars':([4,24,102,],[6,31,164,]),'empty':([4,5,10,23,24,29,30,34,36,37,38,42,55,57,68,102,117,122,123,124,131,163,173,189,193,194,199,208,216,229,239,248,262,267,270,],[7,11,11,29,32,53,58,106,53,111,115,119,127,58,132,165,174,180,187,29,132,209,215,29,227,230,238,209,251,230,264,174,264,106,227,]),'program2':([5,10,],[9,19,]),'function':([5,10,],[10,10,]),'type':([8,12,34,55,211,267,],[13,21,105,126,246,105,]),'star':([9,],[17,]),'function1':([12,],[20,]),'vars1':([23,124,189,],[26,188,219,]),'star2':([24,],[30,]),'function2':([25,],[33,]),'exp':([27,45,77,78,90,94,109,110,117,118,133,135,136,148,151,157,179,190,214,232,237,240,242,248,249,280,],[36,122,138,141,153,155,168,169,173,175,192,122,198,204,205,205,217,221,248,122,261,265,266,173,269,282,]),'term':([27,45,77,78,90,94,109,110,113,114,117,118,133,135,136,148,151,157,179,190,214,232,237,240,242,248,249,280,],[37,37,37,37,37,37,37,37,170,171,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'factor':([27,45,77,78,90,94,109,110,113,114,117,118,133,135,136,148,151,157,179,190,214,232,237,240,242,248,249,280,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'vcte':([27,44,45,77,78,90,94,109,110,113,114,117,118,133,135,136,148,151,157,179,190,214,232,237,240,242,248,249,280,],[39,120,39,39,140,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'factor1':([27,45,77,78,90,94,109,110,113,114,117,118,133,135,136,148,151,157,179,190,214,232,237,240,242,248,249,280,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'cte':([27,44,45,77,78,90,94,109,110,113,114,117,118,133,135,136,148,151,157,179,190,214,232,237,240,242,248,249,280,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'funCall':([27,30,44,45,57,77,78,90,94,109,110,113,114,117,118,133,135,136,148,151,157,163,179,190,194,208,214,229,232,237,240,242,248,249,280,],[43,66,43,43,66,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,66,43,43,66,66,43,66,43,43,43,43,43,43,43,]),'factor2':([27,45,77,78,90,94,109,110,113,114,117,118,133,135,136,148,151,157,179,190,214,232,237,240,242,248,249,280,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'openP':([27,45,77,78,90,94,109,110,113,114,117,118,133,135,136,148,151,157,179,190,214,232,237,240,242,248,249,280,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'vars2':([29,36,],[54,107,]),'star1':([30,57,],[56,129,]),'stmt':([30,57,163,194,208,229,],[57,57,208,229,208,229,]),'assignment':([30,57,163,194,208,229,],[59,59,59,59,59,59,]),'condition':([30,57,163,194,208,229,],[60,60,60,60,60,60,]),'print':([30,57,163,194,208,229,],[61,61,61,61,61,61,]),'loop':([30,57,163,194,208,229,],[62,62,62,62,62,62,]),'read':([30,57,163,190,194,208,229,],[63,63,63,222,63,63,63,]),'graphstmt':([30,57,163,194,200,208,229,239,262,],[64,64,64,64,239,64,64,262,262,]),'graphr':([30,57,163,194,208,229,],[65,65,65,65,65,65,]),'return':([30,57,163,194,208,229,],[67,67,67,67,67,67,]),'while':([30,57,163,194,208,229,],[71,71,71,71,71,71,]),'for':([30,57,163,194,208,229,],[72,72,72,72,72,72,]),'graphfig':([30,57,163,194,200,208,229,239,262,],[74,74,74,74,74,74,74,74,74,]),'graphview':([30,57,163,194,200,208,229,239,262,],[75,75,75,75,75,75,75,75,75,]),'graphmove':([30,57,163,194,200,208,229,239,262,],[76,76,76,76,76,76,76,76,76,]),'graphfig1':([30,57,163,194,200,208,229,239,262,],[81,81,81,81,81,81,81,81,81,]),'graphview1':([30,57,163,194,200,208,229,239,262,],[82,82,82,82,82,82,82,82,82,]),'graphmove1':([30,57,163,194,200,208,229,239,262,],[83,83,83,83,83,83,83,83,83,]),'graphview2':([30,57,163,194,200,208,229,239,262,],[90,90,90,90,90,90,90,90,90,]),'graphmove2':([30,57,163,194,200,208,229,239,262,],[93,93,93,93,93,93,93,93,93,]),'inicia_fun':([33,],[102,]),'function3':([34,267,],[104,277,]),'exp1':([37,],[108,]),'term1':([38,],[112,]),'vcte1':([42,],[116,]),'expression':([45,135,232,],[121,196,258,]),'vars4':([55,],[125,]),'assignment1':([68,131,],[130,191,]),'assignment2':([68,131,],[131,131,]),'head':([69,79,225,],[134,142,254,]),'return1':([78,],[139,]),'laRegla2':([84,85,97,98,99,100,],[147,149,158,159,160,161,]),'laRegla':([86,87,94,101,],[150,152,156,162,]),'graphview3':([94,],[154,]),'function6':([102,],[163,]),'funCall2':([117,248,],[172,268,]),'closeP':([121,],[176,]),'expression1':([122,],[178,]),'loper':([122,],[179,]),'vars3':([123,],[186,]),'body':([134,142,226,254,275,],[193,202,255,270,281,]),'head1':([135,],[195,]),'logical':([135,],[197,]),'function4':([163,208,],[207,245,]),'function5':([167,],[210,]),'funCall3':([173,],[213,]),'assignment3':([190,],[220,]),'condition1':([193,270,],[224,279,]),'body1':([194,229,],[228,257,]),'logical1':([196,],[232,]),'read1':([199,],[236,]),'termina_fun':([207,],[243,]),'vcte3':([216,],[250,]),'graphr1':([239,262,],[263,273,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON program1 program2 star','program',6,'p_program','parser.py',23),
  ('program1 -> vars','program1',1,'p_program1','parser.py',33),
  ('program1 -> empty','program1',1,'p_program1','parser.py',34),
  ('program2 -> function program2','program2',2,'p_program2','parser.py',40),
  ('program2 -> empty','program2',1,'p_program2','parser.py',41),
  ('star -> MULTIPLICATION OPENBRACES star2 star1 CLOSEBRACES','star',5,'p_star','parser.py',49),
  ('star1 -> stmt star1','star1',2,'p_star1','parser.py',59),
  ('star1 -> empty','star1',1,'p_star1','parser.py',60),
  ('star2 -> vars','star2',1,'p_star2','parser.py',66),
  ('star2 -> empty','star2',1,'p_star2','parser.py',67),
  ('loop -> while','loop',1,'p_loop','parser.py',74),
  ('loop -> for','loop',1,'p_loop','parser.py',75),
  ('stmt -> assignment','stmt',1,'p_stmt','parser.py',82),
  ('stmt -> condition','stmt',1,'p_stmt','parser.py',83),
  ('stmt -> print','stmt',1,'p_stmt','parser.py',84),
  ('stmt -> loop','stmt',1,'p_stmt','parser.py',85),
  ('stmt -> read','stmt',1,'p_stmt','parser.py',86),
  ('stmt -> graphstmt','stmt',1,'p_stmt','parser.py',87),
  ('stmt -> graphr','stmt',1,'p_stmt','parser.py',88),
  ('stmt -> funCall','stmt',1,'p_stmt','parser.py',89),
  ('stmt -> return','stmt',1,'p_stmt','parser.py',90),
  ('function -> FUN function1 ID function2 inicia_fun function6 function4 termina_fun','function',8,'p_function','parser.py',96),
  ('function1 -> type','function1',1,'p_function1','parser.py',107),
  ('function1 -> VOID','function1',1,'p_function1','parser.py',108),
  ('inicia_fun -> OPENBRACES','inicia_fun',1,'p_inicia_fun','parser.py',115),
  ('termina_fun -> CLOSEBRACES','termina_fun',1,'p_termina_fun','parser.py',121),
  ('function2 -> OPENPAREN function3 CLOSEPAREN','function2',3,'p_function2','parser.py',134),
  ('function3 -> type ID function5','function3',3,'p_function3','parser.py',140),
  ('function3 -> empty','function3',1,'p_function3','parser.py',141),
  ('function4 -> stmt function4','function4',2,'p_function4','parser.py',147),
  ('function4 -> empty','function4',1,'p_function4','parser.py',148),
  ('function5 -> COMMA type ID function3','function5',4,'p_function5','parser.py',154),
  ('function6 -> vars','function6',1,'p_function6','parser.py',160),
  ('function6 -> empty','function6',1,'p_function6','parser.py',161),
  ('vars -> VARS type ID vars1 SEMICOLON','vars',5,'p_vars','parser.py',171),
  ('vars1 -> EQUALS exp vars2','vars1',3,'p_vars1','parser.py',184),
  ('vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3','vars1',4,'p_vars1','parser.py',185),
  ('vars1 -> empty vars2','vars1',2,'p_vars1','parser.py',186),
  ('vars2 -> COMMA ID vars1','vars2',3,'p_vars2','parser.py',193),
  ('vars2 -> COMMA vars4','vars2',2,'p_vars2','parser.py',194),
  ('vars2 -> empty','vars2',1,'p_vars2','parser.py',195),
  ('vars3 -> OPENBRACKET CTEINT CLOSEBRACKET','vars3',3,'p_vars3','parser.py',204),
  ('vars3 -> empty','vars3',1,'p_vars3','parser.py',205),
  ('vars4 -> type ID vars1','vars4',3,'p_vars4','parser.py',211),
  ('vars4 -> empty','vars4',1,'p_vars4','parser.py',212),
  ('type -> INT','type',1,'p_type','parser.py',221),
  ('type -> FLOAT','type',1,'p_type','parser.py',222),
  ('type -> CHAR','type',1,'p_type','parser.py',223),
  ('print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON','print',5,'p_print','parser.py',231),
  ('read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON','read',6,'p_read','parser.py',239),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET','read1',6,'p_read1','parser.py',245),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET','read1',3,'p_read1','parser.py',246),
  ('read1 -> empty','read1',1,'p_read1','parser.py',247),
  ('assignment -> ID assignment1 EQUALS assignment3 SEMICOLON','assignment',5,'p_assignment','parser.py',254),
  ('assignment1 -> assignment2','assignment1',1,'p_assignment1','parser.py',264),
  ('assignment1 -> assignment2 assignment1','assignment1',2,'p_assignment1','parser.py',265),
  ('assignment1 -> empty','assignment1',1,'p_assignment1','parser.py',266),
  ('assignment2 -> OPENBRACKET exp CLOSEBRACKET','assignment2',3,'p_assignment2','parser.py',272),
  ('assignment3 -> exp','assignment3',1,'p_assignment3','parser.py',278),
  ('assignment3 -> read','assignment3',1,'p_assignment3','parser.py',279),
  ('vcte -> cte','vcte',1,'p_vcte','parser.py',287),
  ('vcte -> ID vcte1','vcte',2,'p_vcte','parser.py',288),
  ('vcte -> funCall','vcte',1,'p_vcte','parser.py',289),
  ('vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3','vcte1',4,'p_vcte1','parser.py',309),
  ('vcte1 -> empty','vcte1',1,'p_vcte1','parser.py',310),
  ('vcte3 -> OPENBRACKET exp CLOSEBRACKET','vcte3',3,'p_vcte3','parser.py',316),
  ('vcte3 -> empty','vcte3',1,'p_vcte3','parser.py',317),
  ('cte -> CTEINT','cte',1,'p_cte','parser.py',326),
  ('cte -> CTEFLOAT','cte',1,'p_cte','parser.py',327),
  ('cte -> CTECHAR','cte',1,'p_cte','parser.py',328),
  ('return -> RETURN return1 SEMICOLON','return',3,'p_return','parser.py',337),
  ('return1 -> vcte','return1',1,'p_return1','parser.py',343),
  ('return1 -> exp','return1',1,'p_return1','parser.py',344),
  ('expression -> exp expression1','expression',2,'p_expression','parser.py',352),
  ('expression1 -> loper exp','expression1',2,'p_expression1','parser.py',358),
  ('expression1 -> empty','expression1',1,'p_expression1','parser.py',359),
  ('loper -> GREATER','loper',1,'p_loper','parser.py',366),
  ('loper -> LESS','loper',1,'p_loper','parser.py',367),
  ('loper -> NOTEQUAL','loper',1,'p_loper','parser.py',368),
  ('loper -> ISEQUAL','loper',1,'p_loper','parser.py',369),
  ('logical -> expression logical1 expression','logical',3,'p_logical','parser.py',379),
  ('logical1 -> OR','logical1',1,'p_logical1','parser.py',385),
  ('logical1 -> AND','logical1',1,'p_logical1','parser.py',386),
  ('condition -> IF head body condition1','condition',4,'p_condition','parser.py',393),
  ('condition1 -> ELSEIF head body condition1','condition1',4,'p_condition1','parser.py',399),
  ('condition1 -> ELSE body','condition1',2,'p_condition1','parser.py',400),
  ('condition1 -> empty','condition1',1,'p_condition1','parser.py',401),
  ('head -> OPENPAREN head1 CLOSEPAREN','head',3,'p_head','parser.py',408),
  ('head1 -> expression','head1',1,'p_head1','parser.py',414),
  ('head1 -> logical','head1',1,'p_head1','parser.py',415),
  ('body -> OPENBRACES body1 CLOSEBRACES','body',3,'p_body','parser.py',423),
  ('body1 -> stmt body1','body1',2,'p_body1','parser.py',429),
  ('body1 -> empty','body1',1,'p_body1','parser.py',430),
  ('for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body','for',7,'p_for','parser.py',437),
  ('while -> WHILE head body','while',3,'p_while','parser.py',444),
  ('funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON','funCall',5,'p_funCall','parser.py',451),
  ('funCall2 -> exp funCall3','funCall2',2,'p_funCall2','parser.py',457),
  ('funCall2 -> empty','funCall2',1,'p_funCall2','parser.py',458),
  ('funCall3 -> COMMA exp funCall2','funCall3',3,'p_funCall3','parser.py',464),
  ('funCall3 -> empty','funCall3',1,'p_funCall3','parser.py',465),
  ('laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN','laRegla',5,'p_laRegla','parser.py',471),
  ('laRegla2 -> OPENPAREN exp CLOSEPAREN','laRegla2',3,'p_laRegla2','parser.py',477),
  ('graphstmt -> graphfig','graphstmt',1,'p_graphstmt','parser.py',484),
  ('graphstmt -> graphview','graphstmt',1,'p_graphstmt','parser.py',485),
  ('graphstmt -> graphmove','graphstmt',1,'p_graphstmt','parser.py',486),
  ('graphfig -> graphfig1 SEMICOLON','graphfig',2,'p_graphfig','parser.py',494),
  ('graphfig1 -> CIRCLE laRegla2','graphfig1',2,'p_graphfig1','parser.py',500),
  ('graphfig1 -> SQUARE laRegla2','graphfig1',2,'p_graphfig1','parser.py',501),
  ('graphfig1 -> TRIANGLE laRegla','graphfig1',2,'p_graphfig1','parser.py',502),
  ('graphfig1 -> RECTANGLE laRegla','graphfig1',2,'p_graphfig1','parser.py',503),
  ('graphmove -> graphmove1 SEMICOLON','graphmove',2,'p_graphmove','parser.py',511),
  ('graphmove1 -> HAND_DOWN','graphmove1',1,'p_graphmove1','parser.py',517),
  ('graphmove1 -> HAND_UP','graphmove1',1,'p_graphmove1','parser.py',518),
  ('graphmove1 -> graphmove2','graphmove1',1,'p_graphmove1','parser.py',519),
  ('graphmove2 -> GO laRegla2','graphmove2',2,'p_graphmove2','parser.py',525),
  ('graphmove2 -> LEFT laRegla2','graphmove2',2,'p_graphmove2','parser.py',526),
  ('graphmove2 -> RIGHT laRegla2','graphmove2',2,'p_graphmove2','parser.py',527),
  ('graphmove2 -> BACK laRegla2','graphmove2',2,'p_graphmove2','parser.py',528),
  ('graphmove2 -> ARC laRegla','graphmove2',2,'p_graphmove2','parser.py',529),
  ('graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES','graphr',6,'p_graphr','parser.py',537),
  ('graphr1 -> graphstmt graphr1','graphr1',2,'p_graphr1','parser.py',543),
  ('graphr1 -> empty','graphr1',1,'p_graphr1','parser.py',544),
  ('graphview -> graphview1 SEMICOLON','graphview',2,'p_graphview','parser.py',552),
  ('graphview1 -> HIDE_STAR','graphview1',1,'p_graphview1','parser.py',558),
  ('graphview1 -> SHOW_STAR','graphview1',1,'p_graphview1','parser.py',559),
  ('graphview1 -> graphview2 exp','graphview1',2,'p_graphview1','parser.py',560),
  ('graphview2 -> SETXY graphview3','graphview2',2,'p_graphview2','parser.py',566),
  ('graphview2 -> COLOR_STAR','graphview2',1,'p_graphview2','parser.py',567),
  ('graphview2 -> SIZE_STAR','graphview2',1,'p_graphview2','parser.py',568),
  ('graphview3 -> exp COMMA','graphview3',2,'p_graphview3','parser.py',574),
  ('graphview3 -> laRegla','graphview3',1,'p_graphview3','parser.py',575),
  ('exp -> term exp1','exp',2,'p_exp','parser.py',583),
  ('exp1 -> ADDITION exp','exp1',2,'p_exp1','parser.py',606),
  ('exp1 -> SUBSTRACTION exp','exp1',2,'p_exp1','parser.py',607),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',608),
  ('openP -> OPENPAREN','openP',1,'p_openP','parser.py',618),
  ('closeP -> CLOSEPAREN','closeP',1,'p_closeP','parser.py',626),
  ('factor -> vcte','factor',1,'p_factor','parser.py',636),
  ('factor -> factor1','factor',1,'p_factor','parser.py',637),
  ('factor1 -> factor2 vcte','factor1',2,'p_factor1','parser.py',644),
  ('factor1 -> openP expression closeP','factor1',3,'p_factor1','parser.py',645),
  ('factor2 -> ADDITION','factor2',1,'p_factor2','parser.py',651),
  ('factor2 -> SUBSTRACTION','factor2',1,'p_factor2','parser.py',652),
  ('term -> factor term1','term',2,'p_term','parser.py',666),
  ('term1 -> MULTIPLICATION term','term1',2,'p_term1','parser.py',672),
  ('term1 -> DIVISION term','term1',2,'p_term1','parser.py',673),
  ('term1 -> empty','term1',1,'p_term1','parser.py',674),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',684),
]
