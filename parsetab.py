
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDITION AND ARC BACK CHAR CIRCLE CLOSEBRACES CLOSEBRACKET CLOSEPAREN COLOR_STAR COMMA CTECHAR CTEFLOAT CTEINT DIVISION ELSE ELSEIF EQUALS FLOAT FOR FUN GO GREATER HAND_DOWN HAND_UP HIDE_STAR ID IF INT ISEQUAL LEFT LESS MULTIPLICATION NOTEQUAL OPENBRACES OPENBRACKET OPENPAREN OR PRINT PROGRAM READ RECTANGLE REPEAT RETURN RIGHT SEMICOLON SETXY SHOW_STAR SIZE_STAR SQUARE SUBSTRACTION TRIANGLE TWODOTS VARS VOID WHILE\n    program : PROGRAM ID SEMICOLON program1 program2 star\n    \n    program1 : vars\n            | empty\n    \n    program2 : function program2\n            | empty\n    \n    star : MULTIPLICATION OPENBRACES vars star1 CLOSEBRACES\n    \n    star1 : stmt star1\n        | empty\n    \n    loop : while\n        | for\n    \n    stmt : assignment\n        | condition\n        | print\n        | loop\n        | read\n        | graphstmt\n        | graphr\n        | funCall\n        | return\n    \n    vars : VARS type ID vars1 SEMICOLON\n    \n    vars1 : EQUALS expression vars2\n        | OPENBRACKET CTEINT CLOSEBRACKET vars3\n        | empty vars2\n    \n    vars2 : COMMA ID vars1 vars2\n        | empty\n    \n    vars3 : OPENBRACKET CTEINT CLOSEBRACKET\n        | empty\n    \n    type : INT\n         | FLOAT\n         | CHAR\n    \n    print : PRINT OPENPAREN expression CLOSEPAREN SEMICOLON\n    \n    read : READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON\n    \n    read1 : OPENBRACKET expression CLOSEBRACKET OPENBRACKET expression CLOSEBRACKET\n              | OPENBRACKET expression CLOSEBRACKET\n              | empty\n    \n    assignment : ID assignment1 EQUALS assignment3 SEMICOLON\n    \n    assignment1 : assignment2\n                | assignment2 assignment1\n                | empty\n    \n    assignment2 : OPENBRACKET expression CLOSEBRACKET\n    \n    assignment3 : expression\n                | read\n    \n    vcte : cte\n        | ID vcte1 vcte2\n    \n    vcte1 : OPENBRACKET expression CLOSEBRACKET vcte3\n    \n    vcte2 : OPENPAREN expression vcte4\n        | empty\n    \n    vcte3 : OPENBRACKET expression CLOSEBRACKET\n        | empty\n\n    \n    vcte4 : COMMA expression vcte4\n        | empty\n    \n    cte : CTEINT\n        | CTEFLOAT\n        | CTECHAR\n    \n    expression : vcte\n              | operation\n              | empty\n    \n    return : RETURN return1 SEMICOLON\n    \n    return1 : vcte\n            | operation\n    \n    compare : expression loper expression\n    \n    loper : GREATER\n          | LESS\n          | NOTEQUAL\n          | ISEQUAL\n    \n    logical : compare logical1 compare\n    \n    logical1 : OR\n             | AND\n    \n    condition : IF head body condition1\n    \n    condition1 : ELSEIF head body condition1\n               | ELSE body\n               | empty\n    \n    head : OPENPAREN head1 CLOSEPAREN\n    \n    head1 : compare\n              | logical\n    \n    body : OPENBRACES body1 CLOSEBRACES\n    \n    body1 : stmt body1\n          | empty\n    \n    for : FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body\n    \n    while : WHILE  head body\n    \n    funCall : ID OPENPAREN expression CLOSEPAREN SEMICOLON\n    \n    function : FUN function1 ID function2 OPENBRACES vars function4 CLOSEBRACES\n    \n    function1 : type\n              | VOID\n    \n    function2 : OPENPAREN function3 CLOSEPAREN\n    \n    function3 : type ID\n              | function3 COMMA\n              | empty\n    \n    function4 : stmt function4\n              | empty\n    \n    graphstmt : graphfig\n             | graphview\n             | graphmove\n    \n    graphfig : graphfig1 expression SEMICOLON\n    \n    graphfig1 : CIRCLE\n            | SQUARE\n            | TRIANGLE expression\n            | RECTANGLE expression\n    \n    graphmove : graphmove1 SEMICOLON\n    \n    graphmove1 : HAND_DOWN\n              | HAND_UP\n              | graphmove2 expression\n    \n    graphmove2 : GO\n              | LEFT\n              | RIGHT\n              | BACK\n              | ARC expression\n    \n    graphr : REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES\n    \n    graphr1 : graphstmt graphr1\n           | empty\n    \n    graphview : graphview1 SEMICOLON\n    \n    graphview1 : HIDE_STAR\n              | SHOW_STAR\n              | graphview2 expression\n    \n    graphview2 : SETXY expression\n              | COLOR_STAR\n              | SIZE_STAR\n    \n    operation : term operation1\n    \n    operation1 : ADDITION\n               | SUBSTRACTION\n               | empty\n    \n    factor : vcte\n           | factor1\n    \n    factor1 : factor2 vcte\n            | OPENPAREN compare CLOSEPAREN\n    \n    factor2 : ADDITION\n            | SUBSTRACTION\n    \n    term : factor term1\n    \n    term1 : MULTIPLICATION\n          | DIVISION\n          | empty\n    empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,17,120,],[0,-1,-6,]),'ID':([2,13,14,15,16,20,21,22,27,30,33,35,36,37,38,40,41,42,43,44,45,46,47,48,49,53,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,75,76,79,82,83,84,85,88,91,92,93,94,95,96,97,98,99,102,105,106,107,108,109,110,111,112,113,114,115,123,126,128,129,130,136,138,139,140,141,144,145,146,150,151,152,154,155,156,157,158,159,164,168,169,176,177,179,181,183,184,193,196,198,201,202,203,206,209,212,213,214,215,216,217,219,220,222,223,226,233,235,236,239,241,242,243,244,245,],[3,23,-28,-29,-30,25,-83,-84,39,66,-20,-55,-56,-57,-43,-132,-52,-53,-54,-132,-123,39,39,-126,-127,119,66,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,39,39,39,-95,-96,39,39,39,39,39,-116,-117,-103,-104,-105,-106,39,149,-132,39,-118,-119,-120,-121,-128,-129,-130,-131,-124,39,39,39,39,174,178,-111,-99,-97,-98,-115,-107,66,-44,39,-47,-125,39,-62,-63,-64,-65,39,-132,66,-58,-80,-94,66,-132,-132,-69,-72,66,39,-67,-68,39,39,-46,39,-51,39,-45,-49,-36,-81,-71,-76,-31,-132,-132,-32,-108,-50,-48,-70,39,-79,]),'SEMICOLON':([3,23,26,27,29,34,35,36,37,38,40,41,42,43,44,45,51,52,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,104,105,107,108,109,110,111,112,113,114,115,118,119,132,133,134,137,140,141,142,143,144,145,150,151,152,154,161,162,163,164,183,184,187,188,189,190,191,204,212,213,214,216,217,218,227,233,236,241,242,],[4,-132,33,-132,-132,-132,-55,-56,-57,-43,-132,-52,-53,-54,-132,-123,-25,-23,-132,138,139,-95,-96,-132,-132,-112,-113,-132,-100,-101,-132,-132,-116,-117,-103,-104,-105,-106,-132,-21,-132,-118,-119,-120,-121,-128,-129,-130,-131,-124,-132,-132,176,-59,-60,179,-97,-98,-114,-102,-115,-107,-44,-132,-47,-125,-22,-27,-132,-132,-132,-132,-24,219,-41,-42,220,226,-46,-132,-51,-45,-49,-26,236,-132,-32,-50,-48,]),'VARS':([4,24,100,],[8,8,8,]),'FUN':([4,5,6,7,10,33,210,],[-132,12,-2,-3,12,-20,-82,]),'MULTIPLICATION':([4,5,6,7,9,10,11,19,33,35,36,37,38,40,41,42,43,44,45,105,107,108,109,110,111,112,113,114,115,133,150,151,152,154,183,184,210,212,213,214,216,217,233,241,242,],[-132,-132,-2,-3,18,-132,-5,-4,-20,-55,-56,-57,-43,-132,-52,-53,-54,112,-123,-132,-118,-119,-120,-121,-128,-129,-130,-131,-124,-122,-44,-132,-47,-125,-132,-132,-82,-46,-132,-51,-45,-49,-132,-50,-48,]),'INT':([8,12,32,],[14,14,14,]),'FLOAT':([8,12,32,],[15,15,15,]),'CHAR':([8,12,32,],[16,16,16,]),'VOID':([12,],[22,]),'OPENBRACES':([18,31,35,36,37,38,40,41,42,43,44,45,75,105,107,108,109,110,111,112,113,114,115,127,131,135,147,150,151,152,154,183,184,195,200,212,213,214,216,217,221,233,240,241,242,],[24,100,-55,-56,-57,-43,-132,-52,-53,-54,-132,-123,-132,-132,-118,-119,-120,-121,-128,-129,-130,-131,-124,169,175,169,-85,-44,-132,-47,-125,-132,-132,169,-73,-46,-132,-51,-45,-49,169,-132,169,-50,-48,]),'EQUALS':([23,66,119,122,124,125,166,192,],[27,-132,27,164,-37,-39,-38,-40,]),'OPENBRACKET':([23,39,66,118,119,124,174,184,192,237,],[28,106,126,160,28,126,206,215,-40,244,]),'COMMA':([23,27,29,32,34,35,36,37,38,40,41,42,43,44,45,51,52,101,103,104,105,107,108,109,110,111,112,113,114,115,118,119,148,149,150,151,152,154,161,162,163,183,184,187,212,213,214,216,217,218,233,241,242,],[-132,-132,53,-132,53,-55,-56,-57,-43,-132,-52,-53,-54,-132,-123,-25,-23,148,-88,-21,-132,-118,-119,-120,-121,-128,-129,-130,-131,-124,-132,-132,-87,-86,-44,-132,-47,-125,-22,-27,53,213,-132,-24,-46,-132,-51,-45,-49,-26,213,-50,-48,]),'OPENPAREN':([25,27,35,36,37,38,40,41,42,43,44,45,47,66,67,68,71,75,76,77,78,79,82,83,84,85,88,91,92,93,94,95,96,97,98,99,105,106,107,108,109,110,111,112,113,114,115,123,126,128,129,140,141,144,145,150,151,152,154,155,156,157,158,159,164,183,184,194,201,202,203,206,209,212,213,214,215,216,217,233,241,242,244,],[32,47,-55,-56,-57,-43,-132,-52,-53,-54,-132,-123,47,123,128,129,130,47,47,128,136,47,-95,-96,47,47,47,47,47,-116,-117,-103,-104,-105,-106,47,151,47,-118,-119,-120,-121,-128,-129,-130,-131,-124,47,47,47,47,-97,-98,-115,-107,-44,47,-47,-125,47,-62,-63,-64,-65,47,-132,-132,128,47,-67,-68,47,47,-46,47,-51,47,-45,-49,-132,-50,-48,47,]),'CTEINT':([27,28,35,36,37,38,40,41,42,43,44,45,46,47,48,49,75,76,79,82,83,84,85,88,91,92,93,94,95,96,97,98,99,105,106,107,108,109,110,111,112,113,114,115,123,126,128,129,140,141,144,145,150,151,152,154,155,156,157,158,159,160,164,183,184,201,202,203,206,209,212,213,214,215,216,217,233,241,242,244,],[41,50,-55,-56,-57,-43,-132,-52,-53,-54,-132,-123,41,41,-126,-127,41,41,41,-95,-96,41,41,41,41,41,-116,-117,-103,-104,-105,-106,41,-132,41,-118,-119,-120,-121,-128,-129,-130,-131,-124,41,41,41,41,-97,-98,-115,-107,-44,41,-47,-125,41,-62,-63,-64,-65,186,41,-132,-132,41,-67,-68,41,41,-46,41,-51,41,-45,-49,-132,-50,-48,41,]),'CTEFLOAT':([27,35,36,37,38,40,41,42,43,44,45,46,47,48,49,75,76,79,82,83,84,85,88,91,92,93,94,95,96,97,98,99,105,106,107,108,109,110,111,112,113,114,115,123,126,128,129,140,141,144,145,150,151,152,154,155,156,157,158,159,164,183,184,201,202,203,206,209,212,213,214,215,216,217,233,241,242,244,],[42,-55,-56,-57,-43,-132,-52,-53,-54,-132,-123,42,42,-126,-127,42,42,42,-95,-96,42,42,42,42,42,-116,-117,-103,-104,-105,-106,42,-132,42,-118,-119,-120,-121,-128,-129,-130,-131,-124,42,42,42,42,-97,-98,-115,-107,-44,42,-47,-125,42,-62,-63,-64,-65,42,-132,-132,42,-67,-68,42,42,-46,42,-51,42,-45,-49,-132,-50,-48,42,]),'CTECHAR':([27,35,36,37,38,40,41,42,43,44,45,46,47,48,49,75,76,79,82,83,84,85,88,91,92,93,94,95,96,97,98,99,105,106,107,108,109,110,111,112,113,114,115,123,126,128,129,140,141,144,145,150,151,152,154,155,156,157,158,159,164,183,184,201,202,203,206,209,212,213,214,215,216,217,233,241,242,244,],[43,-55,-56,-57,-43,-132,-52,-53,-54,-132,-123,43,43,-126,-127,43,43,43,-95,-96,43,43,43,43,43,-116,-117,-103,-104,-105,-106,43,-132,43,-118,-119,-120,-121,-128,-129,-130,-131,-124,43,43,43,43,-97,-98,-115,-107,-44,43,-47,-125,43,-62,-63,-64,-65,43,-132,-132,43,-67,-68,43,43,-46,43,-51,43,-45,-49,-132,-50,-48,43,]),'ADDITION':([27,35,36,37,38,40,41,42,43,44,45,47,75,76,79,82,83,84,85,88,91,92,93,94,95,96,97,98,99,105,106,107,108,109,110,111,112,113,114,115,123,126,128,129,133,140,141,144,145,150,151,152,154,155,156,157,158,159,164,183,184,201,202,203,206,209,212,213,214,215,216,217,233,241,242,244,],[48,-55,-56,-57,-43,108,-52,-53,-54,-132,-123,48,48,48,48,-95,-96,48,48,48,48,48,-116,-117,-103,-104,-105,-106,48,-132,48,-118,-119,-120,-121,-128,-129,-130,-131,-124,48,48,48,48,-122,-97,-98,-115,-107,-44,48,-47,-125,48,-62,-63,-64,-65,48,-132,-132,48,-67,-68,48,48,-46,48,-51,48,-45,-49,-132,-50,-48,48,]),'SUBSTRACTION':([27,35,36,37,38,40,41,42,43,44,45,47,75,76,79,82,83,84,85,88,91,92,93,94,95,96,97,98,99,105,106,107,108,109,110,111,112,113,114,115,123,126,128,129,133,140,141,144,145,150,151,152,154,155,156,157,158,159,164,183,184,201,202,203,206,209,212,213,214,215,216,217,233,241,242,244,],[49,-55,-56,-57,-43,109,-52,-53,-54,-132,-123,49,49,49,49,-95,-96,49,49,49,49,49,-116,-117,-103,-104,-105,-106,49,-132,49,-118,-119,-120,-121,-128,-129,-130,-131,-124,49,49,49,49,-122,-97,-98,-115,-107,-44,49,-47,-125,49,-62,-63,-64,-65,49,-132,-132,49,-67,-68,49,49,-46,49,-51,49,-45,-49,-132,-50,-48,49,]),'CLOSEBRACES':([30,33,54,55,56,57,58,59,60,61,62,63,64,65,69,70,72,73,74,121,138,139,146,168,169,176,177,179,180,181,182,193,196,197,198,199,208,211,219,220,222,223,224,226,229,230,231,235,236,238,239,243,245,],[-132,-20,120,-132,-8,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,-7,-111,-99,-132,-132,-132,-58,-80,-94,210,-132,-90,-69,-72,223,-132,-78,-132,-89,-36,-81,-71,-76,-77,-31,-132,239,-110,-132,-32,-109,-108,-70,-79,]),'IF':([30,33,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,138,139,146,168,169,176,177,179,181,193,196,198,219,220,222,223,226,235,236,239,243,245,],[67,-20,67,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,-111,-99,67,-132,67,-58,-80,-94,67,-69,-72,67,-36,-81,-71,-76,-31,-132,-32,-108,-70,-79,]),'PRINT':([30,33,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,138,139,146,168,169,176,177,179,181,193,196,198,219,220,222,223,226,235,236,239,243,245,],[68,-20,68,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,-111,-99,68,-132,68,-58,-80,-94,68,-69,-72,68,-36,-81,-71,-76,-31,-132,-32,-108,-70,-79,]),'READ':([30,33,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,138,139,146,164,168,169,176,177,179,181,193,196,198,219,220,222,223,226,235,236,239,243,245,],[71,-20,71,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,-111,-99,71,71,-132,71,-58,-80,-94,71,-69,-72,71,-36,-81,-71,-76,-31,-132,-32,-108,-70,-79,]),'REPEAT':([30,33,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,138,139,146,168,169,176,177,179,181,193,196,198,219,220,222,223,226,235,236,239,243,245,],[75,-20,75,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,-111,-99,75,-132,75,-58,-80,-94,75,-69,-72,75,-36,-81,-71,-76,-31,-132,-32,-108,-70,-79,]),'RETURN':([30,33,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,138,139,146,168,169,176,177,179,181,193,196,198,219,220,222,223,226,235,236,239,243,245,],[76,-20,76,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,-111,-99,76,-132,76,-58,-80,-94,76,-69,-72,76,-36,-81,-71,-76,-31,-132,-32,-108,-70,-79,]),'WHILE':([30,33,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,138,139,146,168,169,176,177,179,181,193,196,198,219,220,222,223,226,235,236,239,243,245,],[77,-20,77,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,-111,-99,77,-132,77,-58,-80,-94,77,-69,-72,77,-36,-81,-71,-76,-31,-132,-32,-108,-70,-79,]),'FOR':([30,33,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,138,139,146,168,169,176,177,179,181,193,196,198,219,220,222,223,226,235,236,239,243,245,],[78,-20,78,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,-111,-99,78,-132,78,-58,-80,-94,78,-69,-72,78,-36,-81,-71,-76,-31,-132,-32,-108,-70,-79,]),'CIRCLE':([30,33,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,138,139,146,168,169,175,176,177,179,181,193,196,198,208,219,220,222,223,226,229,235,236,239,243,245,],[82,-20,82,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,-111,-99,82,-132,82,82,-58,-80,-94,82,-69,-72,82,82,-36,-81,-71,-76,-31,82,-132,-32,-108,-70,-79,]),'SQUARE':([30,33,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,138,139,146,168,169,175,176,177,179,181,193,196,198,208,219,220,222,223,226,229,235,236,239,243,245,],[83,-20,83,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,-111,-99,83,-132,83,83,-58,-80,-94,83,-69,-72,83,83,-36,-81,-71,-76,-31,83,-132,-32,-108,-70,-79,]),'TRIANGLE':([30,33,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,138,139,146,168,169,175,176,177,179,181,193,196,198,208,219,220,222,223,226,229,235,236,239,243,245,],[84,-20,84,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,-111,-99,84,-132,84,84,-58,-80,-94,84,-69,-72,84,84,-36,-81,-71,-76,-31,84,-132,-32,-108,-70,-79,]),'RECTANGLE':([30,33,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,138,139,146,168,169,175,176,177,179,181,193,196,198,208,219,220,222,223,226,229,235,236,239,243,245,],[85,-20,85,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,-111,-99,85,-132,85,85,-58,-80,-94,85,-69,-72,85,85,-36,-81,-71,-76,-31,85,-132,-32,-108,-70,-79,]),'HIDE_STAR':([30,33,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,138,139,146,168,169,175,176,177,179,181,193,196,198,208,219,220,222,223,226,229,235,236,239,243,245,],[86,-20,86,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,-111,-99,86,-132,86,86,-58,-80,-94,86,-69,-72,86,86,-36,-81,-71,-76,-31,86,-132,-32,-108,-70,-79,]),'SHOW_STAR':([30,33,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,138,139,146,168,169,175,176,177,179,181,193,196,198,208,219,220,222,223,226,229,235,236,239,243,245,],[87,-20,87,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,-111,-99,87,-132,87,87,-58,-80,-94,87,-69,-72,87,87,-36,-81,-71,-76,-31,87,-132,-32,-108,-70,-79,]),'HAND_DOWN':([30,33,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,138,139,146,168,169,175,176,177,179,181,193,196,198,208,219,220,222,223,226,229,235,236,239,243,245,],[89,-20,89,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,-111,-99,89,-132,89,89,-58,-80,-94,89,-69,-72,89,89,-36,-81,-71,-76,-31,89,-132,-32,-108,-70,-79,]),'HAND_UP':([30,33,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,138,139,146,168,169,175,176,177,179,181,193,196,198,208,219,220,222,223,226,229,235,236,239,243,245,],[90,-20,90,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,-111,-99,90,-132,90,90,-58,-80,-94,90,-69,-72,90,90,-36,-81,-71,-76,-31,90,-132,-32,-108,-70,-79,]),'SETXY':([30,33,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,138,139,146,168,169,175,176,177,179,181,193,196,198,208,219,220,222,223,226,229,235,236,239,243,245,],[92,-20,92,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,-111,-99,92,-132,92,92,-58,-80,-94,92,-69,-72,92,92,-36,-81,-71,-76,-31,92,-132,-32,-108,-70,-79,]),'COLOR_STAR':([30,33,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,138,139,146,168,169,175,176,177,179,181,193,196,198,208,219,220,222,223,226,229,235,236,239,243,245,],[93,-20,93,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,-111,-99,93,-132,93,93,-58,-80,-94,93,-69,-72,93,93,-36,-81,-71,-76,-31,93,-132,-32,-108,-70,-79,]),'SIZE_STAR':([30,33,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,138,139,146,168,169,175,176,177,179,181,193,196,198,208,219,220,222,223,226,229,235,236,239,243,245,],[94,-20,94,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,-111,-99,94,-132,94,94,-58,-80,-94,94,-69,-72,94,94,-36,-81,-71,-76,-31,94,-132,-32,-108,-70,-79,]),'GO':([30,33,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,138,139,146,168,169,175,176,177,179,181,193,196,198,208,219,220,222,223,226,229,235,236,239,243,245,],[95,-20,95,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,-111,-99,95,-132,95,95,-58,-80,-94,95,-69,-72,95,95,-36,-81,-71,-76,-31,95,-132,-32,-108,-70,-79,]),'LEFT':([30,33,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,138,139,146,168,169,175,176,177,179,181,193,196,198,208,219,220,222,223,226,229,235,236,239,243,245,],[96,-20,96,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,-111,-99,96,-132,96,96,-58,-80,-94,96,-69,-72,96,96,-36,-81,-71,-76,-31,96,-132,-32,-108,-70,-79,]),'RIGHT':([30,33,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,138,139,146,168,169,175,176,177,179,181,193,196,198,208,219,220,222,223,226,229,235,236,239,243,245,],[97,-20,97,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,-111,-99,97,-132,97,97,-58,-80,-94,97,-69,-72,97,97,-36,-81,-71,-76,-31,97,-132,-32,-108,-70,-79,]),'BACK':([30,33,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,138,139,146,168,169,175,176,177,179,181,193,196,198,208,219,220,222,223,226,229,235,236,239,243,245,],[98,-20,98,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,-111,-99,98,-132,98,98,-58,-80,-94,98,-69,-72,98,98,-36,-81,-71,-76,-31,98,-132,-32,-108,-70,-79,]),'ARC':([30,33,55,57,58,59,60,61,62,63,64,65,69,70,72,73,74,138,139,146,168,169,175,176,177,179,181,193,196,198,208,219,220,222,223,226,229,235,236,239,243,245,],[99,-20,99,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,-10,-91,-92,-93,-111,-99,99,-132,99,99,-58,-80,-94,99,-69,-72,99,99,-36,-81,-71,-76,-31,99,-132,-32,-108,-70,-79,]),'CLOSEPAREN':([32,35,36,37,38,40,41,42,43,44,45,101,103,105,107,108,109,110,111,112,113,114,115,116,123,129,148,149,150,151,152,154,155,156,157,158,159,165,170,171,172,173,174,183,184,185,205,207,209,212,213,214,216,217,225,232,233,237,241,242,247,],[-132,-55,-56,-57,-43,-132,-52,-53,-54,-132,-123,147,-88,-132,-118,-119,-120,-121,-128,-129,-130,-131,-124,154,-132,-132,-87,-86,-44,-132,-47,-125,-132,-62,-63,-64,-65,191,200,-74,-75,204,-132,-132,-132,-61,227,-35,-132,-46,-132,-51,-45,-49,-66,240,-132,-34,-50,-48,-33,]),'GREATER':([35,36,37,38,40,41,42,43,44,45,47,105,107,108,109,110,111,112,113,114,115,117,128,150,151,152,154,183,184,201,202,203,212,213,214,216,217,233,241,242,],[-55,-56,-57,-43,-132,-52,-53,-54,-132,-123,-132,-132,-118,-119,-120,-121,-128,-129,-130,-131,-124,156,-132,-44,-132,-47,-125,-132,-132,-132,-67,-68,-46,-132,-51,-45,-49,-132,-50,-48,]),'LESS':([35,36,37,38,40,41,42,43,44,45,47,105,107,108,109,110,111,112,113,114,115,117,128,150,151,152,154,183,184,201,202,203,212,213,214,216,217,233,241,242,],[-55,-56,-57,-43,-132,-52,-53,-54,-132,-123,-132,-132,-118,-119,-120,-121,-128,-129,-130,-131,-124,157,-132,-44,-132,-47,-125,-132,-132,-132,-67,-68,-46,-132,-51,-45,-49,-132,-50,-48,]),'NOTEQUAL':([35,36,37,38,40,41,42,43,44,45,47,105,107,108,109,110,111,112,113,114,115,117,128,150,151,152,154,183,184,201,202,203,212,213,214,216,217,233,241,242,],[-55,-56,-57,-43,-132,-52,-53,-54,-132,-123,-132,-132,-118,-119,-120,-121,-128,-129,-130,-131,-124,158,-132,-44,-132,-47,-125,-132,-132,-132,-67,-68,-46,-132,-51,-45,-49,-132,-50,-48,]),'ISEQUAL':([35,36,37,38,40,41,42,43,44,45,47,105,107,108,109,110,111,112,113,114,115,117,128,150,151,152,154,183,184,201,202,203,212,213,214,216,217,233,241,242,],[-55,-56,-57,-43,-132,-52,-53,-54,-132,-123,-132,-132,-118,-119,-120,-121,-128,-129,-130,-131,-124,159,-132,-44,-132,-47,-125,-132,-132,-132,-67,-68,-46,-132,-51,-45,-49,-132,-50,-48,]),'CLOSEBRACKET':([35,36,37,38,40,41,42,43,44,45,50,105,106,107,108,109,110,111,112,113,114,115,126,150,151,152,153,154,167,183,184,186,206,212,213,214,215,216,217,228,233,234,241,242,244,246,],[-55,-56,-57,-43,-132,-52,-53,-54,-132,-123,118,-132,-132,-118,-119,-120,-121,-128,-129,-130,-131,-124,-132,-44,-132,-47,184,-125,192,-132,-132,218,-132,-46,-132,-51,-132,-45,-49,237,-132,242,-50,-48,-132,247,]),'DIVISION':([35,36,37,38,40,41,42,43,44,45,105,107,108,109,110,111,112,113,114,115,133,150,151,152,154,183,184,212,213,214,216,217,233,241,242,],[-55,-56,-57,-43,-132,-52,-53,-54,113,-123,-132,-118,-119,-120,-121,-128,-129,-130,-131,-124,-122,-44,-132,-47,-125,-132,-132,-46,-132,-51,-45,-49,-132,-50,-48,]),'OR':([35,36,37,38,40,41,42,43,44,45,105,107,108,109,110,111,112,113,114,115,150,151,152,154,155,156,157,158,159,171,183,184,185,212,213,214,216,217,233,241,242,],[-55,-56,-57,-43,-132,-52,-53,-54,-132,-123,-132,-118,-119,-120,-121,-128,-129,-130,-131,-124,-44,-132,-47,-125,-132,-62,-63,-64,-65,202,-132,-132,-61,-46,-132,-51,-45,-49,-132,-50,-48,]),'AND':([35,36,37,38,40,41,42,43,44,45,105,107,108,109,110,111,112,113,114,115,150,151,152,154,155,156,157,158,159,171,183,184,185,212,213,214,216,217,233,241,242,],[-55,-56,-57,-43,-132,-52,-53,-54,-132,-123,-132,-118,-119,-120,-121,-128,-129,-130,-131,-124,-44,-132,-47,-125,-132,-62,-63,-64,-65,203,-132,-132,-61,-46,-132,-51,-45,-49,-132,-50,-48,]),'ELSEIF':([168,223,235,],[194,-76,194,]),'ELSE':([168,223,235,],[195,-76,195,]),'TWODOTS':([178,],[209,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program1':([4,],[5,]),'vars':([4,24,100,],[6,30,146,]),'empty':([4,5,10,23,27,29,30,32,34,40,44,47,55,66,75,79,84,85,88,91,92,99,105,106,118,119,123,124,126,128,129,146,151,155,163,164,168,169,174,181,183,184,198,201,206,208,209,213,215,229,233,235,244,],[7,11,11,29,37,51,56,103,51,110,114,37,56,125,37,37,37,37,37,37,37,37,152,37,162,29,37,125,37,37,37,182,37,37,51,37,196,199,207,182,214,217,199,37,37,231,37,37,37,231,214,196,37,]),'program2':([5,10,],[9,19,]),'function':([5,10,],[10,10,]),'type':([8,12,32,],[13,21,102,]),'star':([9,],[17,]),'function1':([12,],[20,]),'vars1':([23,119,],[26,163,]),'function2':([25,],[31,]),'expression':([27,47,75,79,84,85,88,91,92,99,106,123,126,128,129,151,155,164,201,206,209,213,215,244,],[34,117,131,137,140,141,142,143,144,145,153,165,167,117,173,183,185,189,117,228,232,233,234,246,]),'vcte':([27,46,47,75,76,79,84,85,88,91,92,99,106,123,126,128,129,151,155,164,201,206,209,213,215,244,],[35,115,35,35,133,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'operation':([27,47,75,76,79,84,85,88,91,92,99,106,123,126,128,129,151,155,164,201,206,209,213,215,244,],[36,36,36,134,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'cte':([27,46,47,75,76,79,84,85,88,91,92,99,106,123,126,128,129,151,155,164,201,206,209,213,215,244,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'term':([27,47,75,76,79,84,85,88,91,92,99,106,123,126,128,129,151,155,164,201,206,209,213,215,244,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'factor':([27,47,75,76,79,84,85,88,91,92,99,106,123,126,128,129,151,155,164,201,206,209,213,215,244,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'factor1':([27,47,75,76,79,84,85,88,91,92,99,106,123,126,128,129,151,155,164,201,206,209,213,215,244,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'factor2':([27,47,75,76,79,84,85,88,91,92,99,106,123,126,128,129,151,155,164,201,206,209,213,215,244,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'vars2':([29,34,163,],[52,104,187,]),'star1':([30,55,],[54,121,]),'stmt':([30,55,146,169,181,198,],[55,55,181,198,181,198,]),'assignment':([30,55,146,169,181,198,],[57,57,57,57,57,57,]),'condition':([30,55,146,169,181,198,],[58,58,58,58,58,58,]),'print':([30,55,146,169,181,198,],[59,59,59,59,59,59,]),'loop':([30,55,146,169,181,198,],[60,60,60,60,60,60,]),'read':([30,55,146,164,169,181,198,],[61,61,61,190,61,61,61,]),'graphstmt':([30,55,146,169,175,181,198,208,229,],[62,62,62,62,208,62,62,229,229,]),'graphr':([30,55,146,169,181,198,],[63,63,63,63,63,63,]),'funCall':([30,55,146,169,181,198,],[64,64,64,64,64,64,]),'return':([30,55,146,169,181,198,],[65,65,65,65,65,65,]),'while':([30,55,146,169,181,198,],[69,69,69,69,69,69,]),'for':([30,55,146,169,181,198,],[70,70,70,70,70,70,]),'graphfig':([30,55,146,169,175,181,198,208,229,],[72,72,72,72,72,72,72,72,72,]),'graphview':([30,55,146,169,175,181,198,208,229,],[73,73,73,73,73,73,73,73,73,]),'graphmove':([30,55,146,169,175,181,198,208,229,],[74,74,74,74,74,74,74,74,74,]),'graphfig1':([30,55,146,169,175,181,198,208,229,],[79,79,79,79,79,79,79,79,79,]),'graphview1':([30,55,146,169,175,181,198,208,229,],[80,80,80,80,80,80,80,80,80,]),'graphmove1':([30,55,146,169,175,181,198,208,229,],[81,81,81,81,81,81,81,81,81,]),'graphview2':([30,55,146,169,175,181,198,208,229,],[88,88,88,88,88,88,88,88,88,]),'graphmove2':([30,55,146,169,175,181,198,208,229,],[91,91,91,91,91,91,91,91,91,]),'function3':([32,],[101,]),'vcte1':([39,],[105,]),'operation1':([40,],[107,]),'term1':([44,],[111,]),'compare':([47,128,201,],[116,171,225,]),'assignment1':([66,124,],[122,166,]),'assignment2':([66,124,],[124,124,]),'head':([67,77,194,],[127,135,221,]),'return1':([76,],[132,]),'vcte2':([105,],[150,]),'loper':([117,],[155,]),'vars3':([118,],[161,]),'body':([127,135,195,221,240,],[168,177,222,235,245,]),'head1':([128,],[170,]),'logical':([128,],[172,]),'function4':([146,181,],[180,211,]),'assignment3':([164,],[188,]),'condition1':([168,235,],[193,243,]),'body1':([169,198,],[197,224,]),'logical1':([171,],[201,]),'read1':([174,],[205,]),'vcte4':([183,233,],[212,241,]),'vcte3':([184,],[216,]),'graphr1':([208,229,],[230,238,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON program1 program2 star','program',6,'p_program','parser.py',9),
  ('program1 -> vars','program1',1,'p_program1','parser.py',16),
  ('program1 -> empty','program1',1,'p_program1','parser.py',17),
  ('program2 -> function program2','program2',2,'p_program2','parser.py',23),
  ('program2 -> empty','program2',1,'p_program2','parser.py',24),
  ('star -> MULTIPLICATION OPENBRACES vars star1 CLOSEBRACES','star',5,'p_star','parser.py',31),
  ('star1 -> stmt star1','star1',2,'p_star1','parser.py',37),
  ('star1 -> empty','star1',1,'p_star1','parser.py',38),
  ('loop -> while','loop',1,'p_loop','parser.py',45),
  ('loop -> for','loop',1,'p_loop','parser.py',46),
  ('stmt -> assignment','stmt',1,'p_stmt','parser.py',53),
  ('stmt -> condition','stmt',1,'p_stmt','parser.py',54),
  ('stmt -> print','stmt',1,'p_stmt','parser.py',55),
  ('stmt -> loop','stmt',1,'p_stmt','parser.py',56),
  ('stmt -> read','stmt',1,'p_stmt','parser.py',57),
  ('stmt -> graphstmt','stmt',1,'p_stmt','parser.py',58),
  ('stmt -> graphr','stmt',1,'p_stmt','parser.py',59),
  ('stmt -> funCall','stmt',1,'p_stmt','parser.py',60),
  ('stmt -> return','stmt',1,'p_stmt','parser.py',61),
  ('vars -> VARS type ID vars1 SEMICOLON','vars',5,'p_vars','parser.py',68),
  ('vars1 -> EQUALS expression vars2','vars1',3,'p_vars1','parser.py',73),
  ('vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3','vars1',4,'p_vars1','parser.py',74),
  ('vars1 -> empty vars2','vars1',2,'p_vars1','parser.py',75),
  ('vars2 -> COMMA ID vars1 vars2','vars2',4,'p_vars2','parser.py',81),
  ('vars2 -> empty','vars2',1,'p_vars2','parser.py',82),
  ('vars3 -> OPENBRACKET CTEINT CLOSEBRACKET','vars3',3,'p_vars3','parser.py',88),
  ('vars3 -> empty','vars3',1,'p_vars3','parser.py',89),
  ('type -> INT','type',1,'p_type','parser.py',96),
  ('type -> FLOAT','type',1,'p_type','parser.py',97),
  ('type -> CHAR','type',1,'p_type','parser.py',98),
  ('print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON','print',5,'p_print','parser.py',105),
  ('read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON','read',6,'p_read','parser.py',112),
  ('read1 -> OPENBRACKET expression CLOSEBRACKET OPENBRACKET expression CLOSEBRACKET','read1',6,'p_read1','parser.py',118),
  ('read1 -> OPENBRACKET expression CLOSEBRACKET','read1',3,'p_read1','parser.py',119),
  ('read1 -> empty','read1',1,'p_read1','parser.py',120),
  ('assignment -> ID assignment1 EQUALS assignment3 SEMICOLON','assignment',5,'p_assignment','parser.py',127),
  ('assignment1 -> assignment2','assignment1',1,'p_assignment1','parser.py',133),
  ('assignment1 -> assignment2 assignment1','assignment1',2,'p_assignment1','parser.py',134),
  ('assignment1 -> empty','assignment1',1,'p_assignment1','parser.py',135),
  ('assignment2 -> OPENBRACKET expression CLOSEBRACKET','assignment2',3,'p_assignment2','parser.py',141),
  ('assignment3 -> expression','assignment3',1,'p_assignment3','parser.py',147),
  ('assignment3 -> read','assignment3',1,'p_assignment3','parser.py',148),
  ('vcte -> cte','vcte',1,'p_vcte','parser.py',155),
  ('vcte -> ID vcte1 vcte2','vcte',3,'p_vcte','parser.py',156),
  ('vcte1 -> OPENBRACKET expression CLOSEBRACKET vcte3','vcte1',4,'p_vcte1','parser.py',162),
  ('vcte2 -> OPENPAREN expression vcte4','vcte2',3,'p_vcte2','parser.py',168),
  ('vcte2 -> empty','vcte2',1,'p_vcte2','parser.py',169),
  ('vcte3 -> OPENBRACKET expression CLOSEBRACKET','vcte3',3,'p_vcte3','parser.py',175),
  ('vcte3 -> empty','vcte3',1,'p_vcte3','parser.py',176),
  ('vcte4 -> COMMA expression vcte4','vcte4',3,'p_vcte4','parser.py',183),
  ('vcte4 -> empty','vcte4',1,'p_vcte4','parser.py',184),
  ('cte -> CTEINT','cte',1,'p_cte','parser.py',191),
  ('cte -> CTEFLOAT','cte',1,'p_cte','parser.py',192),
  ('cte -> CTECHAR','cte',1,'p_cte','parser.py',193),
  ('expression -> vcte','expression',1,'p_expression','parser.py',200),
  ('expression -> operation','expression',1,'p_expression','parser.py',201),
  ('expression -> empty','expression',1,'p_expression','parser.py',202),
  ('return -> RETURN return1 SEMICOLON','return',3,'p_return','parser.py',209),
  ('return1 -> vcte','return1',1,'p_return1','parser.py',215),
  ('return1 -> operation','return1',1,'p_return1','parser.py',216),
  ('compare -> expression loper expression','compare',3,'p_compare','parser.py',223),
  ('loper -> GREATER','loper',1,'p_loper','parser.py',230),
  ('loper -> LESS','loper',1,'p_loper','parser.py',231),
  ('loper -> NOTEQUAL','loper',1,'p_loper','parser.py',232),
  ('loper -> ISEQUAL','loper',1,'p_loper','parser.py',233),
  ('logical -> compare logical1 compare','logical',3,'p_logical','parser.py',240),
  ('logical1 -> OR','logical1',1,'p_logical1','parser.py',246),
  ('logical1 -> AND','logical1',1,'p_logical1','parser.py',247),
  ('condition -> IF head body condition1','condition',4,'p_condition','parser.py',254),
  ('condition1 -> ELSEIF head body condition1','condition1',4,'p_condition1','parser.py',260),
  ('condition1 -> ELSE body','condition1',2,'p_condition1','parser.py',261),
  ('condition1 -> empty','condition1',1,'p_condition1','parser.py',262),
  ('head -> OPENPAREN head1 CLOSEPAREN','head',3,'p_head','parser.py',269),
  ('head1 -> compare','head1',1,'p_head1','parser.py',275),
  ('head1 -> logical','head1',1,'p_head1','parser.py',276),
  ('body -> OPENBRACES body1 CLOSEBRACES','body',3,'p_body','parser.py',283),
  ('body1 -> stmt body1','body1',2,'p_body1','parser.py',288),
  ('body1 -> empty','body1',1,'p_body1','parser.py',289),
  ('for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body','for',7,'p_for','parser.py',296),
  ('while -> WHILE head body','while',3,'p_while','parser.py',303),
  ('funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON','funCall',5,'p_funCall','parser.py',310),
  ('function -> FUN function1 ID function2 OPENBRACES vars function4 CLOSEBRACES','function',8,'p_function','parser.py',317),
  ('function1 -> type','function1',1,'p_function1','parser.py',323),
  ('function1 -> VOID','function1',1,'p_function1','parser.py',324),
  ('function2 -> OPENPAREN function3 CLOSEPAREN','function2',3,'p_function2','parser.py',330),
  ('function3 -> type ID','function3',2,'p_function3','parser.py',336),
  ('function3 -> function3 COMMA','function3',2,'p_function3','parser.py',337),
  ('function3 -> empty','function3',1,'p_function3','parser.py',338),
  ('function4 -> stmt function4','function4',2,'p_function4','parser.py',344),
  ('function4 -> empty','function4',1,'p_function4','parser.py',345),
  ('graphstmt -> graphfig','graphstmt',1,'p_graphstmt','parser.py',352),
  ('graphstmt -> graphview','graphstmt',1,'p_graphstmt','parser.py',353),
  ('graphstmt -> graphmove','graphstmt',1,'p_graphstmt','parser.py',354),
  ('graphfig -> graphfig1 expression SEMICOLON','graphfig',3,'p_graphfig','parser.py',361),
  ('graphfig1 -> CIRCLE','graphfig1',1,'p_graphfig1','parser.py',367),
  ('graphfig1 -> SQUARE','graphfig1',1,'p_graphfig1','parser.py',368),
  ('graphfig1 -> TRIANGLE expression','graphfig1',2,'p_graphfig1','parser.py',369),
  ('graphfig1 -> RECTANGLE expression','graphfig1',2,'p_graphfig1','parser.py',370),
  ('graphmove -> graphmove1 SEMICOLON','graphmove',2,'p_graphmove','parser.py',378),
  ('graphmove1 -> HAND_DOWN','graphmove1',1,'p_graphmove1','parser.py',384),
  ('graphmove1 -> HAND_UP','graphmove1',1,'p_graphmove1','parser.py',385),
  ('graphmove1 -> graphmove2 expression','graphmove1',2,'p_graphmove1','parser.py',386),
  ('graphmove2 -> GO','graphmove2',1,'p_graphmove2','parser.py',392),
  ('graphmove2 -> LEFT','graphmove2',1,'p_graphmove2','parser.py',393),
  ('graphmove2 -> RIGHT','graphmove2',1,'p_graphmove2','parser.py',394),
  ('graphmove2 -> BACK','graphmove2',1,'p_graphmove2','parser.py',395),
  ('graphmove2 -> ARC expression','graphmove2',2,'p_graphmove2','parser.py',396),
  ('graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES','graphr',6,'p_graphr','parser.py',404),
  ('graphr1 -> graphstmt graphr1','graphr1',2,'p_graphr1','parser.py',410),
  ('graphr1 -> empty','graphr1',1,'p_graphr1','parser.py',411),
  ('graphview -> graphview1 SEMICOLON','graphview',2,'p_graphview','parser.py',418),
  ('graphview1 -> HIDE_STAR','graphview1',1,'p_graphview1','parser.py',424),
  ('graphview1 -> SHOW_STAR','graphview1',1,'p_graphview1','parser.py',425),
  ('graphview1 -> graphview2 expression','graphview1',2,'p_graphview1','parser.py',426),
  ('graphview2 -> SETXY expression','graphview2',2,'p_graphview2','parser.py',430),
  ('graphview2 -> COLOR_STAR','graphview2',1,'p_graphview2','parser.py',431),
  ('graphview2 -> SIZE_STAR','graphview2',1,'p_graphview2','parser.py',432),
  ('operation -> term operation1','operation',2,'p_operation','parser.py',439),
  ('operation1 -> ADDITION','operation1',1,'p_operation1','parser.py',445),
  ('operation1 -> SUBSTRACTION','operation1',1,'p_operation1','parser.py',446),
  ('operation1 -> empty','operation1',1,'p_operation1','parser.py',447),
  ('factor -> vcte','factor',1,'p_factor','parser.py',454),
  ('factor -> factor1','factor',1,'p_factor','parser.py',455),
  ('factor1 -> factor2 vcte','factor1',2,'p_factor1','parser.py',461),
  ('factor1 -> OPENPAREN compare CLOSEPAREN','factor1',3,'p_factor1','parser.py',462),
  ('factor2 -> ADDITION','factor2',1,'p_factor2','parser.py',467),
  ('factor2 -> SUBSTRACTION','factor2',1,'p_factor2','parser.py',468),
  ('term -> factor term1','term',2,'p_term','parser.py',474),
  ('term1 -> MULTIPLICATION','term1',1,'p_term1','parser.py',480),
  ('term1 -> DIVISION','term1',1,'p_term1','parser.py',481),
  ('term1 -> empty','term1',1,'p_term1','parser.py',482),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',487),
]
