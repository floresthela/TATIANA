
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programADDITION ARC BACK CIRCLE CLOSEBRACES CLOSEBRACKET CLOSEPAREN COLOR_STAR COMMA CTEFLOAT CTEINT CTESTRING DIVISION ELSE ELSEIF EQUALS FLOAT FOR FUN GO GREATER HAND_DOWN HAND_UP HIDE_STAR ID IF INT ISEQUAL LEFT LESS MULTIPLICATION NOTEQUAL OPENBRACES OPENBRACKET OPENPAREN PRINT PROGRAM READ RECTANGLE RETURN RIGHT SEMICOLON SETXY SHOW_STAR SIZE_STAR SQUARE STRING SUBSTRACTION TRIANGLE TWODOTS VOID WHILE\n    program : programp ID SEMICOLON declara_vars program_modules\n    \n    program_modules : program_fun star\n    \n    programp : PROGRAM\n    \n    program_fun : function program_fun\n                | empty\n    \n    star : starI declara_vars star1 CLOSEBRACES\n    \n    starI : star_sign OPENBRACES\n    \n    star_sign : MULTIPLICATION\n    \n    star1 : stmt star1\n        | empty\n    \n    declara_vars : vars declara_vars\n          | empty\n    \n    vars : type ID dimensionada equals exp SEMICOLON\n         | type ID dimensionada SEMICOLON\n    \n    dimensionada : OPENBRACKET CTEINT CLOSEBRACKET\n           | OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET\n           | empty\n    \n    loop : while\n        | for\n    \n    stmt : assignment\n        | condition\n        | print\n        | loop\n        | read\n        | graphstmt\n        | funCall SEMICOLON\n        | return\n    \n    assignment : id equals assignment3 SEMICOLON\n    \n    assignment3 : exp\n                | read\n    \n    vcte : cte_int\n         | cte_float\n         | cte_string\n         | id\n         | funCall\n         | vectormatriz\n    \n    vectormatriz : OPENBRACKET vm1 CLOSEBRACKET\n                 | vm1\n    \n    vm1 : OPENBRACKET vm2 CLOSEBRACKET COMMA vm1\n        | OPENBRACKET vm2 CLOSEBRACKET \n    \n    vm2 : exp COMMA vm2\n        | exp\n        | empty\n    \n    functionI : type ID\n              | VOID ID\n        \n    function : FUN functionI function2 inicia_fun declara_vars function4 termina_fun\n    \n    inicia_fun : OPENBRACES\n    \n    termina_fun : CLOSEBRACES\n    \n    function2 : OPENPAREN function3 CLOSEPAREN\n    \n    function3 : funParam function5\n              | empty\n    \n    function4 : stmt function4\n              | empty\n    \n    function5 : COMMA funParam function5\n              | empty\n    \n    funParam : type ID\n    \n    type : INT\n         | FLOAT\n         | STRING\n    \n    print : PRINT OPENPAREN expression CLOSEPAREN SEMICOLON\n    \n    read : READ OPENPAREN id read1 CLOSEPAREN SEMICOLON\n    \n    read1 : OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET\n              | OPENBRACKET exp CLOSEBRACKET\n              | empty\n    \n    equals : EQUALS\n    \n    id : ID vectormatriz\n    \n    funCall : ID iniciaFunCall funCall2 terminaFunCall\n    \n    iniciaFunCall : OPENPAREN\n    \n    terminaFunCall : CLOSEPAREN\n    \n    funCall2 : funCallParam funCall3\n             | empty\n    \n    funCall3 : COMMA funCallParam funCall3\n             | empty\n    \n    funCallParam : exp\n    \n    cte_int : CTEINT\n    \n    cte_float : CTEFLOAT\n    \n    cte_string : CTESTRING\n    \n    return : RETURN return1 SEMICOLON\n    \n    return1 : vcte\n            | exp\n    \n    loper : GREATER\n          | LESS\n          | NOTEQUAL\n          | ISEQUAL\n\n    \n    condition : IF head_cond body condition1\n    \n    condition1 : elseif head_cond body condition1\n               | else body\n               | empty\n    \n    elseif : ELSEIF\n    \n    else : ELSE\n    \n    head_cond : OPENPAREN expression close_condition\n    \n    body : OPENBRACES body1 CLOSEBRACES\n    \n    close_condition : CLOSEPAREN\n    \n    body1 : stmt body1\n          | empty\n    \n    for : for1 body\n    \n    for1 : forInit OPENPAREN ID for2\n    \n    for2 : TWODOTS exp for3\n    \n    for3 : CLOSEPAREN\n    \n    forInit : FOR\n    \n    while : while1 body\n    \n    while1 : while_w OPENPAREN expression CLOSEPAREN\n    \n    while_w : WHILE\n    \n    dosExp : OPENPAREN exp COMMA exp CLOSEPAREN\n    \n    unaExp : OPENPAREN exp CLOSEPAREN\n    \n    graphstmt : graphfig\n             | graphview\n             | graphmove\n    \n    graphfig : graphfig1 SEMICOLON\n             | graphfig2 SEMICOLON\n    \n    graphfig1 : CIRCLE unaExp\n            | SQUARE unaExp\n    \n    graphfig2 : TRIANGLE dosExp\n            | RECTANGLE dosExp\n    \n    graphmove : graphmove0  SEMICOLON\n              | graphmove1 SEMICOLON\n              | graphmove2 SEMICOLON\n    \n    graphmove0 : HAND_DOWN\n              | HAND_UP\n    \n    graphmove1 : GO unaExp\n              | LEFT unaExp\n              | RIGHT unaExp\n              | BACK unaExp\n    \n    graphmove2 : ARC dosExp\n    \n    graphview : graphview0 SEMICOLON\n              | graphview1 SEMICOLON\n              | graphview2 SEMICOLON\n    \n    graphview0 : HIDE_STAR\n              | SHOW_STAR\n    \n    graphview1 : COLOR_STAR unaExp\n              | SIZE_STAR unaExp\n    \n    graphview2 : SETXY dosExp\n    \n    expression : exp loper exp\n               | exp\n    \n    exp : term\n        | term exp_o exp\n    \n    exp_o : ADDITION\n          | SUBSTRACTION\n    \n    openP : OPENPAREN\n    \n    closeP : CLOSEPAREN\n    \n    term : factor term_o term\n         | factor\n    \n    term_o : MULTIPLICATION\n           | DIVISION\n    \n    factor : vcte\n           | openP expression closeP\n    empty :'
    
_lr_action_items = {'PROGRAM':([0,],[3,]),'$end':([1,13,20,118,],[0,-1,-2,-6,]),'ID':([2,3,7,8,9,10,11,12,18,21,26,27,31,32,37,38,39,42,44,45,46,47,48,49,51,55,56,58,59,60,62,93,94,98,104,111,115,120,121,123,124,125,126,128,132,133,134,135,136,137,138,139,140,141,142,143,144,146,149,159,165,166,167,168,169,170,171,174,183,192,194,201,208,209,210,211,212,215,217,218,221,228,233,235,239,241,251,252,258,260,261,267,268,],[4,-3,-147,-12,19,-57,-58,-59,-11,-147,35,36,61,-7,99,-14,-65,61,-20,-21,-22,-23,-24,-25,-27,-18,-19,-106,-107,-108,99,-147,-47,164,99,-139,99,-26,99,99,99,187,99,-68,-101,61,-96,-109,-110,-125,-126,-127,-115,-116,-117,99,197,99,99,61,-13,99,-137,-138,99,-143,-144,99,-147,-78,61,61,99,-81,-82,-83,-84,99,-28,-85,-88,99,99,-92,99,99,-87,-60,99,-147,-61,-86,99,]),'SEMICOLON':([4,19,28,30,50,65,66,67,68,69,70,71,72,79,80,84,85,100,101,102,103,105,106,107,108,109,110,112,113,114,116,117,127,129,130,131,145,147,148,150,151,152,153,154,155,156,157,158,180,181,182,204,205,206,207,213,214,226,230,231,240,249,253,259,261,266,],[5,-147,38,-17,120,135,136,137,138,139,140,141,142,-128,-129,-118,-119,165,-135,-142,-145,-31,-32,-33,-34,-35,-36,-75,-76,-77,-38,-15,-66,192,-79,-80,-111,-112,-113,-114,-130,-131,-132,-120,-121,-122,-123,-124,217,-29,-30,-136,-141,-146,-140,-37,-40,252,-67,-69,-105,-16,261,-39,-61,-104,]),'FUN':([5,6,7,8,15,18,38,165,242,243,],[-147,17,-147,-12,17,-11,-14,-13,-46,-48,]),'MULTIPLICATION':([5,6,7,8,14,15,16,18,24,38,102,103,105,106,107,108,109,110,112,113,114,116,127,130,165,175,206,207,213,214,230,231,242,243,259,],[-147,-147,-147,-12,23,-147,-5,-11,-4,-14,170,-145,-31,-32,-33,-34,-35,-36,-75,-76,-77,-38,-66,-145,-13,-38,-146,-140,-37,-40,-67,-69,-46,-48,-39,]),'INT':([5,7,17,21,32,34,38,93,94,162,165,],[10,10,10,10,-7,10,-14,10,-47,10,-13,]),'FLOAT':([5,7,17,21,32,34,38,93,94,162,165,],[11,11,11,11,-7,11,-14,11,-47,11,-13,]),'STRING':([5,7,17,21,32,34,38,93,94,162,165,],[12,12,12,12,-7,12,-14,12,-47,12,-13,]),'IF':([7,8,18,21,31,32,38,42,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,132,133,134,135,136,137,138,139,140,141,142,159,165,183,192,194,201,217,218,221,235,251,252,260,261,267,],[-147,-12,-11,-147,53,-7,-14,53,-20,-21,-22,-23,-24,-25,-27,-18,-19,-106,-107,-108,-147,-47,-26,-101,53,-96,-109,-110,-125,-126,-127,-115,-116,-117,53,-13,-147,-78,53,53,-28,-85,-88,-92,-87,-60,-147,-61,-86,]),'PRINT':([7,8,18,21,31,32,38,42,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,132,133,134,135,136,137,138,139,140,141,142,159,165,183,192,194,201,217,218,221,235,251,252,260,261,267,],[-147,-12,-11,-147,54,-7,-14,54,-20,-21,-22,-23,-24,-25,-27,-18,-19,-106,-107,-108,-147,-47,-26,-101,54,-96,-109,-110,-125,-126,-127,-115,-116,-117,54,-13,-147,-78,54,54,-28,-85,-88,-92,-87,-60,-147,-61,-86,]),'READ':([7,8,18,21,31,32,38,39,42,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,121,132,133,134,135,136,137,138,139,140,141,142,159,165,183,192,194,201,217,218,221,235,251,252,260,261,267,],[-147,-12,-11,-147,57,-7,-14,-65,57,-20,-21,-22,-23,-24,-25,-27,-18,-19,-106,-107,-108,-147,-47,-26,57,-101,57,-96,-109,-110,-125,-126,-127,-115,-116,-117,57,-13,-147,-78,57,57,-28,-85,-88,-92,-87,-60,-147,-61,-86,]),'RETURN':([7,8,18,21,31,32,38,42,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,132,133,134,135,136,137,138,139,140,141,142,159,165,183,192,194,201,217,218,221,235,251,252,260,261,267,],[-147,-12,-11,-147,62,-7,-14,62,-20,-21,-22,-23,-24,-25,-27,-18,-19,-106,-107,-108,-147,-47,-26,-101,62,-96,-109,-110,-125,-126,-127,-115,-116,-117,62,-13,-147,-78,62,62,-28,-85,-88,-92,-87,-60,-147,-61,-86,]),'CIRCLE':([7,8,18,21,31,32,38,42,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,132,133,134,135,136,137,138,139,140,141,142,159,165,183,192,194,201,217,218,221,235,251,252,260,261,267,],[-147,-12,-11,-147,75,-7,-14,75,-20,-21,-22,-23,-24,-25,-27,-18,-19,-106,-107,-108,-147,-47,-26,-101,75,-96,-109,-110,-125,-126,-127,-115,-116,-117,75,-13,-147,-78,75,75,-28,-85,-88,-92,-87,-60,-147,-61,-86,]),'SQUARE':([7,8,18,21,31,32,38,42,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,132,133,134,135,136,137,138,139,140,141,142,159,165,183,192,194,201,217,218,221,235,251,252,260,261,267,],[-147,-12,-11,-147,76,-7,-14,76,-20,-21,-22,-23,-24,-25,-27,-18,-19,-106,-107,-108,-147,-47,-26,-101,76,-96,-109,-110,-125,-126,-127,-115,-116,-117,76,-13,-147,-78,76,76,-28,-85,-88,-92,-87,-60,-147,-61,-86,]),'TRIANGLE':([7,8,18,21,31,32,38,42,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,132,133,134,135,136,137,138,139,140,141,142,159,165,183,192,194,201,217,218,221,235,251,252,260,261,267,],[-147,-12,-11,-147,77,-7,-14,77,-20,-21,-22,-23,-24,-25,-27,-18,-19,-106,-107,-108,-147,-47,-26,-101,77,-96,-109,-110,-125,-126,-127,-115,-116,-117,77,-13,-147,-78,77,77,-28,-85,-88,-92,-87,-60,-147,-61,-86,]),'RECTANGLE':([7,8,18,21,31,32,38,42,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,132,133,134,135,136,137,138,139,140,141,142,159,165,183,192,194,201,217,218,221,235,251,252,260,261,267,],[-147,-12,-11,-147,78,-7,-14,78,-20,-21,-22,-23,-24,-25,-27,-18,-19,-106,-107,-108,-147,-47,-26,-101,78,-96,-109,-110,-125,-126,-127,-115,-116,-117,78,-13,-147,-78,78,78,-28,-85,-88,-92,-87,-60,-147,-61,-86,]),'HIDE_STAR':([7,8,18,21,31,32,38,42,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,132,133,134,135,136,137,138,139,140,141,142,159,165,183,192,194,201,217,218,221,235,251,252,260,261,267,],[-147,-12,-11,-147,79,-7,-14,79,-20,-21,-22,-23,-24,-25,-27,-18,-19,-106,-107,-108,-147,-47,-26,-101,79,-96,-109,-110,-125,-126,-127,-115,-116,-117,79,-13,-147,-78,79,79,-28,-85,-88,-92,-87,-60,-147,-61,-86,]),'SHOW_STAR':([7,8,18,21,31,32,38,42,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,132,133,134,135,136,137,138,139,140,141,142,159,165,183,192,194,201,217,218,221,235,251,252,260,261,267,],[-147,-12,-11,-147,80,-7,-14,80,-20,-21,-22,-23,-24,-25,-27,-18,-19,-106,-107,-108,-147,-47,-26,-101,80,-96,-109,-110,-125,-126,-127,-115,-116,-117,80,-13,-147,-78,80,80,-28,-85,-88,-92,-87,-60,-147,-61,-86,]),'COLOR_STAR':([7,8,18,21,31,32,38,42,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,132,133,134,135,136,137,138,139,140,141,142,159,165,183,192,194,201,217,218,221,235,251,252,260,261,267,],[-147,-12,-11,-147,81,-7,-14,81,-20,-21,-22,-23,-24,-25,-27,-18,-19,-106,-107,-108,-147,-47,-26,-101,81,-96,-109,-110,-125,-126,-127,-115,-116,-117,81,-13,-147,-78,81,81,-28,-85,-88,-92,-87,-60,-147,-61,-86,]),'SIZE_STAR':([7,8,18,21,31,32,38,42,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,132,133,134,135,136,137,138,139,140,141,142,159,165,183,192,194,201,217,218,221,235,251,252,260,261,267,],[-147,-12,-11,-147,82,-7,-14,82,-20,-21,-22,-23,-24,-25,-27,-18,-19,-106,-107,-108,-147,-47,-26,-101,82,-96,-109,-110,-125,-126,-127,-115,-116,-117,82,-13,-147,-78,82,82,-28,-85,-88,-92,-87,-60,-147,-61,-86,]),'SETXY':([7,8,18,21,31,32,38,42,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,132,133,134,135,136,137,138,139,140,141,142,159,165,183,192,194,201,217,218,221,235,251,252,260,261,267,],[-147,-12,-11,-147,83,-7,-14,83,-20,-21,-22,-23,-24,-25,-27,-18,-19,-106,-107,-108,-147,-47,-26,-101,83,-96,-109,-110,-125,-126,-127,-115,-116,-117,83,-13,-147,-78,83,83,-28,-85,-88,-92,-87,-60,-147,-61,-86,]),'HAND_DOWN':([7,8,18,21,31,32,38,42,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,132,133,134,135,136,137,138,139,140,141,142,159,165,183,192,194,201,217,218,221,235,251,252,260,261,267,],[-147,-12,-11,-147,84,-7,-14,84,-20,-21,-22,-23,-24,-25,-27,-18,-19,-106,-107,-108,-147,-47,-26,-101,84,-96,-109,-110,-125,-126,-127,-115,-116,-117,84,-13,-147,-78,84,84,-28,-85,-88,-92,-87,-60,-147,-61,-86,]),'HAND_UP':([7,8,18,21,31,32,38,42,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,132,133,134,135,136,137,138,139,140,141,142,159,165,183,192,194,201,217,218,221,235,251,252,260,261,267,],[-147,-12,-11,-147,85,-7,-14,85,-20,-21,-22,-23,-24,-25,-27,-18,-19,-106,-107,-108,-147,-47,-26,-101,85,-96,-109,-110,-125,-126,-127,-115,-116,-117,85,-13,-147,-78,85,85,-28,-85,-88,-92,-87,-60,-147,-61,-86,]),'GO':([7,8,18,21,31,32,38,42,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,132,133,134,135,136,137,138,139,140,141,142,159,165,183,192,194,201,217,218,221,235,251,252,260,261,267,],[-147,-12,-11,-147,86,-7,-14,86,-20,-21,-22,-23,-24,-25,-27,-18,-19,-106,-107,-108,-147,-47,-26,-101,86,-96,-109,-110,-125,-126,-127,-115,-116,-117,86,-13,-147,-78,86,86,-28,-85,-88,-92,-87,-60,-147,-61,-86,]),'LEFT':([7,8,18,21,31,32,38,42,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,132,133,134,135,136,137,138,139,140,141,142,159,165,183,192,194,201,217,218,221,235,251,252,260,261,267,],[-147,-12,-11,-147,87,-7,-14,87,-20,-21,-22,-23,-24,-25,-27,-18,-19,-106,-107,-108,-147,-47,-26,-101,87,-96,-109,-110,-125,-126,-127,-115,-116,-117,87,-13,-147,-78,87,87,-28,-85,-88,-92,-87,-60,-147,-61,-86,]),'RIGHT':([7,8,18,21,31,32,38,42,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,132,133,134,135,136,137,138,139,140,141,142,159,165,183,192,194,201,217,218,221,235,251,252,260,261,267,],[-147,-12,-11,-147,88,-7,-14,88,-20,-21,-22,-23,-24,-25,-27,-18,-19,-106,-107,-108,-147,-47,-26,-101,88,-96,-109,-110,-125,-126,-127,-115,-116,-117,88,-13,-147,-78,88,88,-28,-85,-88,-92,-87,-60,-147,-61,-86,]),'BACK':([7,8,18,21,31,32,38,42,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,132,133,134,135,136,137,138,139,140,141,142,159,165,183,192,194,201,217,218,221,235,251,252,260,261,267,],[-147,-12,-11,-147,89,-7,-14,89,-20,-21,-22,-23,-24,-25,-27,-18,-19,-106,-107,-108,-147,-47,-26,-101,89,-96,-109,-110,-125,-126,-127,-115,-116,-117,89,-13,-147,-78,89,89,-28,-85,-88,-92,-87,-60,-147,-61,-86,]),'ARC':([7,8,18,21,31,32,38,42,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,132,133,134,135,136,137,138,139,140,141,142,159,165,183,192,194,201,217,218,221,235,251,252,260,261,267,],[-147,-12,-11,-147,90,-7,-14,90,-20,-21,-22,-23,-24,-25,-27,-18,-19,-106,-107,-108,-147,-47,-26,-101,90,-96,-109,-110,-125,-126,-127,-115,-116,-117,90,-13,-147,-78,90,90,-28,-85,-88,-92,-87,-60,-147,-61,-86,]),'WHILE':([7,8,18,21,31,32,38,42,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,132,133,134,135,136,137,138,139,140,141,142,159,165,183,192,194,201,217,218,221,235,251,252,260,261,267,],[-147,-12,-11,-147,91,-7,-14,91,-20,-21,-22,-23,-24,-25,-27,-18,-19,-106,-107,-108,-147,-47,-26,-101,91,-96,-109,-110,-125,-126,-127,-115,-116,-117,91,-13,-147,-78,91,91,-28,-85,-88,-92,-87,-60,-147,-61,-86,]),'FOR':([7,8,18,21,31,32,38,42,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,132,133,134,135,136,137,138,139,140,141,142,159,165,183,192,194,201,217,218,221,235,251,252,260,261,267,],[-147,-12,-11,-147,92,-7,-14,92,-20,-21,-22,-23,-24,-25,-27,-18,-19,-106,-107,-108,-147,-47,-26,-101,92,-96,-109,-110,-125,-126,-127,-115,-116,-117,92,-13,-147,-78,92,92,-28,-85,-88,-92,-87,-60,-147,-61,-86,]),'CLOSEBRACES':([7,8,18,21,31,32,38,41,42,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,119,120,132,133,134,135,136,137,138,139,140,141,142,159,165,183,192,193,194,195,200,201,202,217,218,221,235,236,244,251,252,260,261,267,],[-147,-12,-11,-147,-147,-7,-14,118,-147,-10,-20,-21,-22,-23,-24,-25,-27,-18,-19,-106,-107,-108,-147,-47,-9,-26,-101,-147,-96,-109,-110,-125,-126,-127,-115,-116,-117,-147,-13,-147,-78,235,-147,-95,243,-147,-53,-28,-85,-88,-92,-94,-52,-87,-60,-147,-61,-86,]),'VOID':([17,],[27,]),'OPENBRACKET':([19,37,39,61,62,99,104,111,115,116,117,121,123,124,126,127,128,143,146,149,166,167,168,169,170,171,174,186,187,208,209,210,211,212,213,214,215,228,233,239,241,247,258,259,262,268,],[29,115,-65,115,115,115,115,-139,174,-38,179,115,115,115,115,-66,-68,115,115,115,115,-137,-138,115,-143,-144,174,228,115,115,-81,-82,-83,-84,-37,-40,115,115,115,115,115,258,115,-39,268,115,]),'EQUALS':([19,28,30,52,116,117,127,213,214,249,259,],[-147,39,-17,39,-38,-15,-66,-37,-40,-16,-39,]),'OPENBRACES':([22,23,33,63,64,122,160,220,223,224,225,237,238,250,264,265,],[32,-8,94,133,133,133,-49,133,-90,-91,-93,-102,-97,133,-98,-99,]),'OPENPAREN':([25,35,36,37,39,53,54,57,61,62,73,74,75,76,77,78,81,82,83,86,87,88,89,90,91,92,99,104,111,115,121,123,124,126,128,143,146,149,166,167,168,169,170,171,174,208,209,210,211,212,215,219,222,228,233,239,241,258,268,],[34,-44,-45,111,-65,123,124,125,128,111,143,144,146,146,149,149,146,146,149,146,146,146,146,149,-103,-100,128,111,-139,111,111,111,111,111,-68,111,111,111,111,-137,-138,111,-143,-144,111,111,-81,-82,-83,-84,111,123,-89,111,111,111,111,111,111,]),'CTEINT':([29,37,39,62,104,111,115,121,123,124,126,128,143,146,149,166,167,168,169,170,171,174,179,208,209,210,211,212,215,228,233,239,241,258,268,],[40,112,-65,112,112,-139,112,112,112,112,112,-68,112,112,112,112,-137,-138,112,-143,-144,112,216,112,-81,-82,-83,-84,112,112,112,112,112,112,112,]),'CLOSEPAREN':([34,95,96,97,101,102,103,105,106,107,108,109,110,112,113,114,116,126,127,128,161,163,164,172,173,184,185,186,188,189,190,191,196,198,203,204,205,206,207,213,214,227,229,230,231,232,234,245,246,255,256,257,259,262,263,270,],[-147,160,-147,-51,-135,-142,-145,-31,-32,-33,-34,-35,-36,-75,-76,-77,-38,-147,-66,-68,-50,-55,-56,207,-134,225,226,-147,231,-147,-71,-74,237,240,-147,-136,-141,-146,-140,-37,-40,253,-64,-67,-69,-70,-73,-54,-133,-147,265,266,-39,-63,-72,-62,]),'CTEFLOAT':([37,39,62,104,111,115,121,123,124,126,128,143,146,149,166,167,168,169,170,171,174,208,209,210,211,212,215,228,233,239,241,258,268,],[113,-65,113,113,-139,113,113,113,113,113,-68,113,113,113,113,-137,-138,113,-143,-144,113,113,-81,-82,-83,-84,113,113,113,113,113,113,113,]),'CTESTRING':([37,39,62,104,111,115,121,123,124,126,128,143,146,149,166,167,168,169,170,171,174,208,209,210,211,212,215,228,233,239,241,258,268,],[114,-65,114,114,-139,114,114,114,114,114,-68,114,114,114,114,-137,-138,114,-143,-144,114,114,-81,-82,-83,-84,114,114,114,114,114,114,114,]),'CLOSEBRACKET':([40,101,102,103,105,106,107,108,109,110,112,113,114,115,116,127,174,175,176,177,178,204,205,206,207,213,214,215,216,230,231,248,254,258,259,269,],[117,-135,-142,-145,-31,-32,-33,-34,-35,-36,-75,-76,-77,-147,-38,-66,-147,213,214,-42,-43,-136,-141,-146,-140,-37,-40,-147,249,-67,-69,-41,262,-147,-39,270,]),'COMMA':([96,101,102,103,105,106,107,108,109,110,112,113,114,116,127,164,175,177,189,191,199,203,204,205,206,207,213,214,230,231,255,259,],[162,-135,-142,-145,-31,-32,-33,-34,-35,-36,-75,-76,-77,-38,-66,-56,-38,215,233,-74,241,162,-136,-141,-146,-140,-37,247,-67,-69,233,-39,]),'GREATER':([101,102,103,105,106,107,108,109,110,112,113,114,116,127,173,204,205,206,207,213,214,230,231,259,],[-135,-142,-145,-31,-32,-33,-34,-35,-36,-75,-76,-77,-38,-66,209,-136,-141,-146,-140,-37,-40,-67,-69,-39,]),'LESS':([101,102,103,105,106,107,108,109,110,112,113,114,116,127,173,204,205,206,207,213,214,230,231,259,],[-135,-142,-145,-31,-32,-33,-34,-35,-36,-75,-76,-77,-38,-66,210,-136,-141,-146,-140,-37,-40,-67,-69,-39,]),'NOTEQUAL':([101,102,103,105,106,107,108,109,110,112,113,114,116,127,173,204,205,206,207,213,214,230,231,259,],[-135,-142,-145,-31,-32,-33,-34,-35,-36,-75,-76,-77,-38,-66,211,-136,-141,-146,-140,-37,-40,-67,-69,-39,]),'ISEQUAL':([101,102,103,105,106,107,108,109,110,112,113,114,116,127,173,204,205,206,207,213,214,230,231,259,],[-135,-142,-145,-31,-32,-33,-34,-35,-36,-75,-76,-77,-38,-66,212,-136,-141,-146,-140,-37,-40,-67,-69,-39,]),'ADDITION':([101,102,103,105,106,107,108,109,110,112,113,114,116,127,130,175,205,206,207,213,214,230,231,259,],[167,-142,-145,-31,-32,-33,-34,-35,-36,-75,-76,-77,-38,-66,-145,-38,-141,-146,-140,-37,-40,-67,-69,-39,]),'SUBSTRACTION':([101,102,103,105,106,107,108,109,110,112,113,114,116,127,130,175,205,206,207,213,214,230,231,259,],[168,-142,-145,-31,-32,-33,-34,-35,-36,-75,-76,-77,-38,-66,-145,-38,-141,-146,-140,-37,-40,-67,-69,-39,]),'DIVISION':([102,103,105,106,107,108,109,110,112,113,114,116,127,130,175,206,207,213,214,230,231,259,],[171,-145,-31,-32,-33,-34,-35,-36,-75,-76,-77,-38,-66,-145,-38,-146,-140,-37,-40,-67,-69,-39,]),'ELSEIF':([183,235,260,],[222,-92,222,]),'ELSE':([183,235,260,],[223,-92,223,]),'TWODOTS':([197,],[239,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'programp':([0,],[2,]),'declara_vars':([5,7,21,93,],[6,18,31,159,]),'vars':([5,7,21,93,],[7,7,7,7,]),'empty':([5,6,7,15,19,21,31,34,42,93,96,115,126,133,159,174,183,186,189,194,201,203,215,255,258,260,],[8,16,8,16,30,8,43,97,43,8,163,178,190,195,202,178,221,229,234,195,202,163,178,234,178,221,]),'type':([5,7,17,21,34,93,162,],[9,9,26,9,98,9,98,]),'program_modules':([6,],[13,]),'program_fun':([6,15,],[14,24,]),'function':([6,15,],[15,15,]),'star':([14,],[20,]),'starI':([14,],[21,]),'star_sign':([14,],[22,]),'functionI':([17,],[25,]),'dimensionada':([19,],[28,]),'function2':([25,],[33,]),'equals':([28,52,],[37,121,]),'star1':([31,42,],[41,119,]),'stmt':([31,42,133,159,194,201,],[42,42,194,201,194,201,]),'assignment':([31,42,133,159,194,201,],[44,44,44,44,44,44,]),'condition':([31,42,133,159,194,201,],[45,45,45,45,45,45,]),'print':([31,42,133,159,194,201,],[46,46,46,46,46,46,]),'loop':([31,42,133,159,194,201,],[47,47,47,47,47,47,]),'read':([31,42,121,133,159,194,201,],[48,48,182,48,48,48,48,]),'graphstmt':([31,42,133,159,194,201,],[49,49,49,49,49,49,]),'funCall':([31,37,42,62,104,115,121,123,124,126,133,143,146,149,159,166,169,174,194,201,208,215,228,233,239,241,258,268,],[50,109,50,109,109,109,109,109,109,109,50,109,109,109,50,109,109,109,50,50,109,109,109,109,109,109,109,109,]),'return':([31,42,133,159,194,201,],[51,51,51,51,51,51,]),'id':([31,37,42,62,104,115,121,123,124,125,126,133,143,146,149,159,166,169,174,194,201,208,215,228,233,239,241,258,268,],[52,108,52,108,108,108,108,108,108,186,108,52,108,108,108,52,108,108,108,52,52,108,108,108,108,108,108,108,108,]),'while':([31,42,133,159,194,201,],[55,55,55,55,55,55,]),'for':([31,42,133,159,194,201,],[56,56,56,56,56,56,]),'graphfig':([31,42,133,159,194,201,],[58,58,58,58,58,58,]),'graphview':([31,42,133,159,194,201,],[59,59,59,59,59,59,]),'graphmove':([31,42,133,159,194,201,],[60,60,60,60,60,60,]),'while1':([31,42,133,159,194,201,],[63,63,63,63,63,63,]),'for1':([31,42,133,159,194,201,],[64,64,64,64,64,64,]),'graphfig1':([31,42,133,159,194,201,],[65,65,65,65,65,65,]),'graphfig2':([31,42,133,159,194,201,],[66,66,66,66,66,66,]),'graphview0':([31,42,133,159,194,201,],[67,67,67,67,67,67,]),'graphview1':([31,42,133,159,194,201,],[68,68,68,68,68,68,]),'graphview2':([31,42,133,159,194,201,],[69,69,69,69,69,69,]),'graphmove0':([31,42,133,159,194,201,],[70,70,70,70,70,70,]),'graphmove1':([31,42,133,159,194,201,],[71,71,71,71,71,71,]),'graphmove2':([31,42,133,159,194,201,],[72,72,72,72,72,72,]),'while_w':([31,42,133,159,194,201,],[73,73,73,73,73,73,]),'forInit':([31,42,133,159,194,201,],[74,74,74,74,74,74,]),'inicia_fun':([33,],[93,]),'function3':([34,],[95,]),'funParam':([34,162,],[96,203,]),'exp':([37,62,104,115,121,123,124,126,143,146,149,166,174,208,215,228,233,239,241,258,268,],[100,131,173,177,181,173,173,191,173,198,199,204,177,246,177,254,191,256,257,177,269,]),'term':([37,62,104,115,121,123,124,126,143,146,149,166,169,174,208,215,228,233,239,241,258,268,],[101,101,101,101,101,101,101,101,101,101,101,101,205,101,101,101,101,101,101,101,101,101,]),'factor':([37,62,104,115,121,123,124,126,143,146,149,166,169,174,208,215,228,233,239,241,258,268,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'vcte':([37,62,104,115,121,123,124,126,143,146,149,166,169,174,208,215,228,233,239,241,258,268,],[103,130,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'openP':([37,62,104,115,121,123,124,126,143,146,149,166,169,174,208,215,228,233,239,241,258,268,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'cte_int':([37,62,104,115,121,123,124,126,143,146,149,166,169,174,208,215,228,233,239,241,258,268,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'cte_float':([37,62,104,115,121,123,124,126,143,146,149,166,169,174,208,215,228,233,239,241,258,268,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'cte_string':([37,62,104,115,121,123,124,126,143,146,149,166,169,174,208,215,228,233,239,241,258,268,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'vectormatriz':([37,61,62,99,104,115,121,123,124,126,143,146,149,166,169,174,187,208,215,228,233,239,241,258,268,],[110,127,110,127,110,110,110,110,110,110,110,110,110,110,110,110,127,110,110,110,110,110,110,110,110,]),'vm1':([37,61,62,99,104,115,121,123,124,126,143,146,149,166,169,174,187,208,215,228,233,239,241,247,258,268,],[116,116,116,116,116,175,116,116,116,116,116,116,116,116,116,175,116,116,116,116,116,116,116,259,116,116,]),'head_cond':([53,219,],[122,250,]),'iniciaFunCall':([61,99,],[126,126,]),'return1':([62,],[129,]),'body':([63,64,122,220,250,],[132,134,183,251,260,]),'unaExp':([75,76,81,82,86,87,88,89,],[145,147,151,152,154,155,156,157,]),'dosExp':([77,78,83,90,],[148,150,153,158,]),'function5':([96,203,],[161,245,]),'exp_o':([101,],[166,]),'term_o':([102,],[169,]),'expression':([104,123,124,143,],[172,184,185,196,]),'vm2':([115,174,215,258,],[176,176,248,176,]),'assignment3':([121,],[180,]),'funCall2':([126,],[188,]),'funCallParam':([126,233,],[189,255,]),'body1':([133,194,],[193,236,]),'function4':([159,201,],[200,244,]),'closeP':([172,],[206,]),'loper':([173,],[208,]),'condition1':([183,260,],[218,267,]),'elseif':([183,260,],[219,219,]),'else':([183,260,],[220,220,]),'close_condition':([184,],[224,]),'read1':([186,],[227,]),'terminaFunCall':([188,],[230,]),'funCall3':([189,255,],[232,263,]),'for2':([197,],[238,]),'termina_fun':([200,],[242,]),'for3':([256,],[264,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> programp ID SEMICOLON declara_vars program_modules','program',5,'p_program','parser.py',28),
  ('program_modules -> program_fun star','program_modules',2,'p_program_modules','parser.py',44),
  ('programp -> PROGRAM','programp',1,'p_programp','parser.py',50),
  ('program_fun -> function program_fun','program_fun',2,'p_program_fun','parser.py',56),
  ('program_fun -> empty','program_fun',1,'p_program_fun','parser.py',57),
  ('star -> starI declara_vars star1 CLOSEBRACES','star',4,'p_star','parser.py',64),
  ('starI -> star_sign OPENBRACES','starI',2,'p_starI','parser.py',77),
  ('star_sign -> MULTIPLICATION','star_sign',1,'p_star_sign','parser.py',84),
  ('star1 -> stmt star1','star1',2,'p_star1','parser.py',93),
  ('star1 -> empty','star1',1,'p_star1','parser.py',94),
  ('declara_vars -> vars declara_vars','declara_vars',2,'p_declara_vars','parser.py',100),
  ('declara_vars -> empty','declara_vars',1,'p_declara_vars','parser.py',101),
  ('vars -> type ID dimensionada equals exp SEMICOLON','vars',6,'p_vars','parser.py',110),
  ('vars -> type ID dimensionada SEMICOLON','vars',4,'p_vars','parser.py',111),
  ('dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET','dimensionada',3,'p_dimensionada','parser.py',171),
  ('dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET','dimensionada',6,'p_dimensionada','parser.py',172),
  ('dimensionada -> empty','dimensionada',1,'p_dimensionada','parser.py',173),
  ('loop -> while','loop',1,'p_loop','parser.py',188),
  ('loop -> for','loop',1,'p_loop','parser.py',189),
  ('stmt -> assignment','stmt',1,'p_stmt','parser.py',195),
  ('stmt -> condition','stmt',1,'p_stmt','parser.py',196),
  ('stmt -> print','stmt',1,'p_stmt','parser.py',197),
  ('stmt -> loop','stmt',1,'p_stmt','parser.py',198),
  ('stmt -> read','stmt',1,'p_stmt','parser.py',199),
  ('stmt -> graphstmt','stmt',1,'p_stmt','parser.py',200),
  ('stmt -> funCall SEMICOLON','stmt',2,'p_stmt','parser.py',201),
  ('stmt -> return','stmt',1,'p_stmt','parser.py',202),
  ('assignment -> id equals assignment3 SEMICOLON','assignment',4,'p_assignment','parser.py',207),
  ('assignment3 -> exp','assignment3',1,'p_assignment3','parser.py',213),
  ('assignment3 -> read','assignment3',1,'p_assignment3','parser.py',214),
  ('vcte -> cte_int','vcte',1,'p_vcte','parser.py',224),
  ('vcte -> cte_float','vcte',1,'p_vcte','parser.py',225),
  ('vcte -> cte_string','vcte',1,'p_vcte','parser.py',226),
  ('vcte -> id','vcte',1,'p_vcte','parser.py',227),
  ('vcte -> funCall','vcte',1,'p_vcte','parser.py',228),
  ('vcte -> vectormatriz','vcte',1,'p_vcte','parser.py',229),
  ('vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET','vectormatriz',3,'p_vectormatriz','parser.py',244),
  ('vectormatriz -> vm1','vectormatriz',1,'p_vectormatriz','parser.py',245),
  ('vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1','vm1',5,'p_vm1','parser.py',254),
  ('vm1 -> OPENBRACKET vm2 CLOSEBRACKET','vm1',3,'p_vm1','parser.py',255),
  ('vm2 -> exp COMMA vm2','vm2',3,'p_vm2','parser.py',267),
  ('vm2 -> exp','vm2',1,'p_vm2','parser.py',268),
  ('vm2 -> empty','vm2',1,'p_vm2','parser.py',269),
  ('functionI -> type ID','functionI',2,'p_functionI','parser.py',280),
  ('functionI -> VOID ID','functionI',2,'p_functionI','parser.py',281),
  ('function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun','function',7,'p_function','parser.py',298),
  ('inicia_fun -> OPENBRACES','inicia_fun',1,'p_inicia_fun','parser.py',310),
  ('termina_fun -> CLOSEBRACES','termina_fun',1,'p_termina_fun','parser.py',316),
  ('function2 -> OPENPAREN function3 CLOSEPAREN','function2',3,'p_function2','parser.py',321),
  ('function3 -> funParam function5','function3',2,'p_function3','parser.py',326),
  ('function3 -> empty','function3',1,'p_function3','parser.py',327),
  ('function4 -> stmt function4','function4',2,'p_function4','parser.py',338),
  ('function4 -> empty','function4',1,'p_function4','parser.py',339),
  ('function5 -> COMMA funParam function5','function5',3,'p_function5','parser.py',348),
  ('function5 -> empty','function5',1,'p_function5','parser.py',349),
  ('funParam -> type ID','funParam',2,'p_funParam','parser.py',357),
  ('type -> INT','type',1,'p_type','parser.py',372),
  ('type -> FLOAT','type',1,'p_type','parser.py',373),
  ('type -> STRING','type',1,'p_type','parser.py',374),
  ('print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON','print',5,'p_print','parser.py',382),
  ('read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON','read',6,'p_read','parser.py',390),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET','read1',6,'p_read1','parser.py',398),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET','read1',3,'p_read1','parser.py',399),
  ('read1 -> empty','read1',1,'p_read1','parser.py',400),
  ('equals -> EQUALS','equals',1,'p_equals','parser.py',405),
  ('id -> ID vectormatriz','id',2,'p_id','parser.py',414),
  ('funCall -> ID iniciaFunCall funCall2 terminaFunCall','funCall',4,'p_funCall','parser.py',426),
  ('iniciaFunCall -> OPENPAREN','iniciaFunCall',1,'p_iniciaFunCall','parser.py',459),
  ('terminaFunCall -> CLOSEPAREN','terminaFunCall',1,'p_terminaFunCall','parser.py',466),
  ('funCall2 -> funCallParam funCall3','funCall2',2,'p_funCall2','parser.py',472),
  ('funCall2 -> empty','funCall2',1,'p_funCall2','parser.py',473),
  ('funCall3 -> COMMA funCallParam funCall3','funCall3',3,'p_funCall3','parser.py',481),
  ('funCall3 -> empty','funCall3',1,'p_funCall3','parser.py',482),
  ('funCallParam -> exp','funCallParam',1,'p_funCallParam','parser.py',488),
  ('cte_int -> CTEINT','cte_int',1,'p_cte_int','parser.py',500),
  ('cte_float -> CTEFLOAT','cte_float',1,'p_cte_float','parser.py',511),
  ('cte_string -> CTESTRING','cte_string',1,'p_cte_string','parser.py',520),
  ('return -> RETURN return1 SEMICOLON','return',3,'p_return','parser.py',531),
  ('return1 -> vcte','return1',1,'p_return1','parser.py',537),
  ('return1 -> exp','return1',1,'p_return1','parser.py',538),
  ('loper -> GREATER','loper',1,'p_loper','parser.py',546),
  ('loper -> LESS','loper',1,'p_loper','parser.py',547),
  ('loper -> NOTEQUAL','loper',1,'p_loper','parser.py',548),
  ('loper -> ISEQUAL','loper',1,'p_loper','parser.py',549),
  ('condition -> IF head_cond body condition1','condition',4,'p_condition','parser.py',559),
  ('condition1 -> elseif head_cond body condition1','condition1',4,'p_condition1','parser.py',568),
  ('condition1 -> else body','condition1',2,'p_condition1','parser.py',569),
  ('condition1 -> empty','condition1',1,'p_condition1','parser.py',570),
  ('elseif -> ELSEIF','elseif',1,'p_elseif','parser.py',579),
  ('else -> ELSE','else',1,'p_else','parser.py',586),
  ('head_cond -> OPENPAREN expression close_condition','head_cond',3,'p_head_cond','parser.py',598),
  ('body -> OPENBRACES body1 CLOSEBRACES','body',3,'p_body','parser.py',605),
  ('close_condition -> CLOSEPAREN','close_condition',1,'p_close_condition','parser.py',612),
  ('body1 -> stmt body1','body1',2,'p_body1','parser.py',620),
  ('body1 -> empty','body1',1,'p_body1','parser.py',621),
  ('for -> for1 body','for',2,'p_for','parser.py',637),
  ('for1 -> forInit OPENPAREN ID for2','for1',4,'p_for1','parser.py',650),
  ('for2 -> TWODOTS exp for3','for2',3,'p_for2','parser.py',660),
  ('for3 -> CLOSEPAREN','for3',1,'p_for3','parser.py',671),
  ('forInit -> FOR','forInit',1,'p_forInit','parser.py',679),
  ('while -> while1 body','while',2,'p_while','parser.py',688),
  ('while1 -> while_w OPENPAREN expression CLOSEPAREN','while1',4,'p_while1','parser.py',701),
  ('while_w -> WHILE','while_w',1,'p_while_w','parser.py',708),
  ('dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN','dosExp',5,'p_dosExp','parser.py',717),
  ('unaExp -> OPENPAREN exp CLOSEPAREN','unaExp',3,'p_unaExp','parser.py',724),
  ('graphstmt -> graphfig','graphstmt',1,'p_graphstmt','parser.py',730),
  ('graphstmt -> graphview','graphstmt',1,'p_graphstmt','parser.py',731),
  ('graphstmt -> graphmove','graphstmt',1,'p_graphstmt','parser.py',732),
  ('graphfig -> graphfig1 SEMICOLON','graphfig',2,'p_graphfig','parser.py',738),
  ('graphfig -> graphfig2 SEMICOLON','graphfig',2,'p_graphfig','parser.py',739),
  ('graphfig1 -> CIRCLE unaExp','graphfig1',2,'p_graphfig1','parser.py',744),
  ('graphfig1 -> SQUARE unaExp','graphfig1',2,'p_graphfig1','parser.py',745),
  ('graphfig2 -> TRIANGLE dosExp','graphfig2',2,'p_graphfig2','parser.py',753),
  ('graphfig2 -> RECTANGLE dosExp','graphfig2',2,'p_graphfig2','parser.py',754),
  ('graphmove -> graphmove0 SEMICOLON','graphmove',2,'p_graphmove','parser.py',762),
  ('graphmove -> graphmove1 SEMICOLON','graphmove',2,'p_graphmove','parser.py',763),
  ('graphmove -> graphmove2 SEMICOLON','graphmove',2,'p_graphmove','parser.py',764),
  ('graphmove0 -> HAND_DOWN','graphmove0',1,'p_graphmove0','parser.py',770),
  ('graphmove0 -> HAND_UP','graphmove0',1,'p_graphmove0','parser.py',771),
  ('graphmove1 -> GO unaExp','graphmove1',2,'p_graphmove1','parser.py',779),
  ('graphmove1 -> LEFT unaExp','graphmove1',2,'p_graphmove1','parser.py',780),
  ('graphmove1 -> RIGHT unaExp','graphmove1',2,'p_graphmove1','parser.py',781),
  ('graphmove1 -> BACK unaExp','graphmove1',2,'p_graphmove1','parser.py',782),
  ('graphmove2 -> ARC dosExp','graphmove2',2,'p_graphmove2','parser.py',789),
  ('graphview -> graphview0 SEMICOLON','graphview',2,'p_graphview','parser.py',797),
  ('graphview -> graphview1 SEMICOLON','graphview',2,'p_graphview','parser.py',798),
  ('graphview -> graphview2 SEMICOLON','graphview',2,'p_graphview','parser.py',799),
  ('graphview0 -> HIDE_STAR','graphview0',1,'p_graphview0','parser.py',804),
  ('graphview0 -> SHOW_STAR','graphview0',1,'p_graphview0','parser.py',805),
  ('graphview1 -> COLOR_STAR unaExp','graphview1',2,'p_graphview1','parser.py',812),
  ('graphview1 -> SIZE_STAR unaExp','graphview1',2,'p_graphview1','parser.py',813),
  ('graphview2 -> SETXY dosExp','graphview2',2,'p_graphview2','parser.py',820),
  ('expression -> exp loper exp','expression',3,'p_expression','parser.py',828),
  ('expression -> exp','expression',1,'p_expression','parser.py',829),
  ('exp -> term','exp',1,'p_exp','parser.py',840),
  ('exp -> term exp_o exp','exp',3,'p_exp','parser.py',841),
  ('exp_o -> ADDITION','exp_o',1,'p_exp_o','parser.py',853),
  ('exp_o -> SUBSTRACTION','exp_o',1,'p_exp_o','parser.py',854),
  ('openP -> OPENPAREN','openP',1,'p_openP','parser.py',860),
  ('closeP -> CLOSEPAREN','closeP',1,'p_closeP','parser.py',868),
  ('term -> factor term_o term','term',3,'p_term','parser.py',876),
  ('term -> factor','term',1,'p_term','parser.py',877),
  ('term_o -> MULTIPLICATION','term_o',1,'p_term_o','parser.py',892),
  ('term_o -> DIVISION','term_o',1,'p_term_o','parser.py',893),
  ('factor -> vcte','factor',1,'p_factor','parser.py',901),
  ('factor -> openP expression closeP','factor',3,'p_factor','parser.py',902),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',929),
]
