
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDITION AND ARC BACK CHAR CIRCLE CLOSEBRACES CLOSEBRACKET CLOSEPAREN COLOR_STAR COMMA CTECHAR CTEFLOAT CTEINT DIVISION ELSE ELSEIF EQUALS FLOAT FOR FUN GO GREATER HAND_DOWN HAND_UP HIDE_STAR ID IF INT ISEQUAL LEFT LESS MULTIPLICATION NOTEQUAL OPENBRACES OPENBRACKET OPENPAREN OR PRINT PROGRAM READ RECTANGLE REPEAT RETURN RIGHT SEMICOLON SETXY SHOW_STAR SIMPLEQUOTES SIZE_STAR SQUARE SUBSTRACTION TRIANGLE TWODOTS VARS VOID WHILE\n    program : PROGRAM ID SEMICOLON declara_vars program2 star\n    \n    program2 : function program2\n            | empty\n    \n    star : starI declara_vars star1 CLOSEBRACES\n    \n    starI : MULTIPLICATION OPENBRACES\n    \n    star1 : stmt star1\n        | empty\n    \n    declara_vars : vars declara_vars\n          | empty\n    \n    loop : while\n        | for\n    \n    stmt : assignment\n        | condition\n        | print\n        | loop\n        | read\n        | graphstmt\n        | graphr\n        | funCall SEMICOLON\n        | return\n    \n    functionI : type ID\n              | VOID ID\n    \n    function : FUN functionI function2 inicia_fun declara_vars function4 termina_fun\n    \n    inicia_fun : OPENBRACES\n    \n    termina_fun : CLOSEBRACES\n    \n    function2 : OPENPAREN function3 CLOSEPAREN\n    \n    function3 : type ID function5\n              | empty\n    \n    function4 : stmt function4\n              | empty\n    \n    function5 : COMMA type ID function3\n    \n    vars : type ID vars1 equals exp SEMICOLON\n         | type ID vars1 SEMICOLON\n    \n    vars1 : OPENBRACKET CTEINT CLOSEBRACKET vars3\n        | empty\n    \n    vars3 : OPENBRACKET CTEINT CLOSEBRACKET\n        | empty\n    \n    type : INT\n         | FLOAT\n         | CHAR\n    \n    print : PRINT OPENPAREN expression CLOSEPAREN SEMICOLON\n    \n    read : READ OPENPAREN id read1 CLOSEPAREN SEMICOLON\n    \n    read1 : OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET\n              | OPENBRACKET exp CLOSEBRACKET\n              | empty\n    \n    equals : EQUALS\n    \n    id : ID\n    \n    assignment : id assignment1 equals assignment3 SEMICOLON\n    \n    assignment1 : assignment2\n                | assignment2 assignment1\n                | empty\n    \n    assignment2 : OPENBRACKET exp CLOSEBRACKET\n    \n    assignment3 : exp\n                | read\n    \n    vcte : cte_int\n         | cte_float\n         | cte_char\n         | id vcte1\n         | funCall\n    \n    vcte1 : OPENBRACKET exp CLOSEBRACKET vcte3\n          | empty\n    \n    vcte3 : OPENBRACKET exp CLOSEBRACKET\n        | empty\n\n    \n    cte_int : CTEINT\n    \n    cte_float : CTEFLOAT\n    \n    cte_char : CTECHAR\n    \n    return : RETURN return1 SEMICOLON\n    \n    return1 : vcte\n            | exp\n    \n    expression : exp expression1\n    \n    expression1 : loper exp\n             | empty\n    \n    loper : GREATER\n          | LESS\n          | NOTEQUAL\n          | ISEQUAL\n    \n    logical : expression logical1 expression\n    \n    logical1 : OR\n             | AND\n    \n    condition : IF head_cond body condition1\n    \n    condition1 : elseif head_cond body condition1\n               | else body\n               | empty\n    \n    elseif : ELSEIF\n    \n    else : ELSE\n    \n    head_cond : OPENPAREN head1 close_condition\n    \n    head1 : expression\n          | logical\n    \n    body : OPENBRACES body1 CLOSEBRACES\n    \n    close_condition : CLOSEPAREN\n    \n    body1 : stmt body1\n          | empty\n    \n    for : FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body\n    \n    while : while1 body\n    \n    while1 : while_w OPENPAREN expression CLOSEPAREN\n    \n    while_w : WHILE\n    \n    funCall : ID OPENPAREN funCall2 CLOSEPAREN\n    \n    funCall2 : exp funCall3\n             | empty\n    \n    funCall3 : COMMA exp funCall2\n             | empty\n    \n    laRegla : OPENPAREN exp COMMA exp CLOSEPAREN\n    \n    laRegla2 : OPENPAREN exp CLOSEPAREN\n    \n    graphstmt : graphfig\n             | graphview\n             | graphmove\n    \n    graphfig : graphfig1 SEMICOLON\n    \n    graphfig1 : CIRCLE laRegla2\n            | SQUARE laRegla2\n            | TRIANGLE laRegla\n            | RECTANGLE laRegla\n    \n    graphmove :  graphmove1  SEMICOLON\n    \n    graphmove1 : HAND_DOWN\n              | HAND_UP\n              | graphmove2\n    \n    graphmove2 : GO laRegla2\n              | LEFT laRegla2\n              | RIGHT laRegla2\n              | BACK laRegla2\n              | ARC laRegla\n    \n    graphr : REPEAT laRegla2 OPENBRACES graphr1 CLOSEBRACES\n    \n    graphr1 : graphstmt COMMA graphr1\n            | graphstmt\n    \n    graphview : graphview1 SEMICOLON\n    \n    graphview1 : HIDE_STAR\n              | SHOW_STAR\n              | graphview2 exp\n    \n    graphview2 : SETXY laRegla\n              | COLOR_STAR laRegla2\n              | SIZE_STAR laRegla2\n    \n    exp : term exp1\n    \n    exp1 : ADDITION exp\n         | SUBSTRACTION exp\n         | empty\n    \n    openP : OPENPAREN\n    \n    closeP : CLOSEPAREN\n    \n    factor : vcte\n           | factor1\n    \n    factor1 : factor2 vcte\n            | openP expression closeP\n    \n    factor2 : ADDITION\n            | SUBSTRACTION\n    \n    term : factor term1\n    \n    term1 : MULTIPLICATION term\n          | DIVISION term\n          | empty\n    empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declara_vars':([4,6,19,87,],[5,16,28,150,]),'vars':([4,6,19,87,],[6,6,6,6,]),'empty':([4,5,6,13,17,19,28,31,39,50,87,94,95,101,111,116,125,130,150,167,174,179,184,188,194,248,260,263,267,],[7,14,7,14,27,7,40,91,40,117,7,157,161,164,170,117,185,189,195,207,220,231,238,189,195,266,185,91,220,]),'type':([4,6,15,19,31,87,197,263,],[8,8,23,8,90,8,247,90,]),'program2':([5,13,],[12,21,]),'function':([5,13,],[13,13,]),'star':([12,],[18,]),'starI':([12,],[19,]),'functionI':([15,],[22,]),'vars1':([17,],[25,]),'function2':([22,],[30,]),'equals':([25,115,],[34,171,]),'star1':([28,39,],[38,113,]),'stmt':([28,39,130,150,188,194,],[39,39,188,194,188,194,]),'assignment':([28,39,130,150,188,194,],[41,41,41,41,41,41,]),'condition':([28,39,130,150,188,194,],[42,42,42,42,42,42,]),'print':([28,39,130,150,188,194,],[43,43,43,43,43,43,]),'loop':([28,39,130,150,188,194,],[44,44,44,44,44,44,]),'read':([28,39,130,150,171,188,194,],[45,45,45,45,215,45,45,]),'graphstmt':([28,39,130,150,181,188,194,259,],[46,46,46,46,233,46,46,233,]),'graphr':([28,39,130,150,188,194,],[47,47,47,47,47,47,]),'funCall':([28,34,39,61,74,103,104,118,120,121,124,125,130,135,139,150,155,156,159,160,163,171,188,194,206,225,230,237,241,243,260,264,277,],[48,102,48,102,102,102,102,102,102,102,102,102,48,102,102,48,102,102,102,102,102,102,48,48,102,102,102,102,102,102,102,102,102,]),'return':([28,39,130,150,188,194,],[49,49,49,49,49,49,]),'id':([28,34,39,61,74,103,104,118,120,121,122,124,125,130,135,139,150,155,156,159,160,163,171,188,194,206,225,230,237,241,243,260,264,277,],[50,101,50,101,101,101,101,101,101,101,179,101,101,50,101,101,50,101,101,101,101,101,101,50,50,101,101,101,101,101,101,101,101,101,]),'while':([28,39,130,150,188,194,],[53,53,53,53,53,53,]),'for':([28,39,130,150,188,194,],[54,54,54,54,54,54,]),'graphfig':([28,39,130,150,181,188,194,259,],[56,56,56,56,56,56,56,56,]),'graphview':([28,39,130,150,181,188,194,259,],[57,57,57,57,57,57,57,57,]),'graphmove':([28,39,130,150,181,188,194,259,],[58,58,58,58,58,58,58,58,]),'while1':([28,39,130,150,188,194,],[62,62,62,62,62,62,]),'graphfig1':([28,39,130,150,181,188,194,259,],[64,64,64,64,64,64,64,64,]),'graphview1':([28,39,130,150,181,188,194,259,],[65,65,65,65,65,65,65,65,]),'graphmove1':([28,39,130,150,181,188,194,259,],[66,66,66,66,66,66,66,66,]),'while_w':([28,39,130,150,188,194,],[67,67,67,67,67,67,]),'graphview2':([28,39,130,150,181,188,194,259,],[74,74,74,74,74,74,74,74,]),'graphmove2':([28,39,130,150,181,188,194,259,],[77,77,77,77,77,77,77,77,]),'inicia_fun':([30,],[87,]),'function3':([31,263,],[89,274,]),'exp':([34,61,74,104,118,120,121,124,125,135,139,155,156,163,171,206,225,230,237,241,243,260,264,277,],[93,128,141,167,173,167,167,182,184,167,192,198,199,202,214,249,167,257,260,261,262,184,275,280,]),'term':([34,61,74,104,118,120,121,124,125,135,139,155,156,159,160,163,171,206,225,230,237,241,243,260,264,277,],[94,94,94,94,94,94,94,94,94,94,94,94,94,200,201,94,94,94,94,94,94,94,94,94,94,94,]),'factor':([34,61,74,104,118,120,121,124,125,135,139,155,156,159,160,163,171,206,225,230,237,241,243,260,264,277,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'vcte':([34,61,74,103,104,118,120,121,124,125,135,139,155,156,159,160,163,171,206,225,230,237,241,243,260,264,277,],[96,127,96,165,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'factor1':([34,61,74,104,118,120,121,124,125,135,139,155,156,159,160,163,171,206,225,230,237,241,243,260,264,277,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'cte_int':([34,61,74,103,104,118,120,121,124,125,135,139,155,156,159,160,163,171,206,225,230,237,241,243,260,264,277,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'cte_float':([34,61,74,103,104,118,120,121,124,125,135,139,155,156,159,160,163,171,206,225,230,237,241,243,260,264,277,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'cte_char':([34,61,74,103,104,118,120,121,124,125,135,139,155,156,159,160,163,171,206,225,230,237,241,243,260,264,277,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'factor2':([34,61,74,104,118,120,121,124,125,135,139,155,156,159,160,163,171,206,225,230,237,241,243,260,264,277,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'openP':([34,61,74,104,118,120,121,124,125,135,139,155,156,159,160,163,171,206,225,230,237,241,243,260,264,277,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'assignment1':([50,116,],[115,172,]),'assignment2':([50,116,],[116,116,]),'head_cond':([51,218,],[119,252,]),'laRegla2':([59,68,69,80,81,82,83,84,85,],[123,136,137,143,144,145,146,147,148,]),'return1':([61,],[126,]),'body':([62,119,219,252,272,],[129,174,253,267,278,]),'laRegla':([70,71,79,86,],[138,140,142,149,]),'exp1':([94,],[154,]),'term1':([95,],[158,]),'vcte1':([101,],[162,]),'expression':([104,120,121,135,225,],[166,176,178,191,254,]),'vars3':([111,],[169,]),'head1':([120,],[175,]),'logical':([120,],[177,]),'funCall2':([125,260,],[183,271,]),'body1':([130,188,],[187,240,]),'function4':([150,194,],[193,246,]),'function5':([152,],[196,]),'closeP':([166,],[203,]),'expression1':([167,],[205,]),'loper':([167,],[206,]),'assignment3':([171,],[213,]),'condition1':([174,267,],[217,276,]),'elseif':([174,267,],[218,218,]),'else':([174,267,],[219,219,]),'close_condition':([175,],[223,]),'logical1':([176,],[225,]),'read1':([179,],[229,]),'graphr1':([181,259,],[232,270,]),'funCall3':([184,],[236,]),'termina_fun':([193,],[244,]),'vcte3':([248,],[265,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON declara_vars program2 star','program',6,'p_program','parser.py',18),
  ('program2 -> function program2','program2',2,'p_program2','parser.py',42),
  ('program2 -> empty','program2',1,'p_program2','parser.py',43),
  ('star -> starI declara_vars star1 CLOSEBRACES','star',4,'p_star','parser.py',53),
  ('starI -> MULTIPLICATION OPENBRACES','starI',2,'p_starI','parser.py',60),
  ('star1 -> stmt star1','star1',2,'p_star1','parser.py',66),
  ('star1 -> empty','star1',1,'p_star1','parser.py',67),
  ('declara_vars -> vars declara_vars','declara_vars',2,'p_declara_vars','parser.py',73),
  ('declara_vars -> empty','declara_vars',1,'p_declara_vars','parser.py',74),
  ('loop -> while','loop',1,'p_loop','parser.py',84),
  ('loop -> for','loop',1,'p_loop','parser.py',85),
  ('stmt -> assignment','stmt',1,'p_stmt','parser.py',92),
  ('stmt -> condition','stmt',1,'p_stmt','parser.py',93),
  ('stmt -> print','stmt',1,'p_stmt','parser.py',94),
  ('stmt -> loop','stmt',1,'p_stmt','parser.py',95),
  ('stmt -> read','stmt',1,'p_stmt','parser.py',96),
  ('stmt -> graphstmt','stmt',1,'p_stmt','parser.py',97),
  ('stmt -> graphr','stmt',1,'p_stmt','parser.py',98),
  ('stmt -> funCall SEMICOLON','stmt',2,'p_stmt','parser.py',99),
  ('stmt -> return','stmt',1,'p_stmt','parser.py',100),
  ('functionI -> type ID','functionI',2,'p_functionI','parser.py',110),
  ('functionI -> VOID ID','functionI',2,'p_functionI','parser.py',111),
  ('function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun','function',7,'p_function','parser.py',117),
  ('inicia_fun -> OPENBRACES','inicia_fun',1,'p_inicia_fun','parser.py',137),
  ('termina_fun -> CLOSEBRACES','termina_fun',1,'p_termina_fun','parser.py',143),
  ('function2 -> OPENPAREN function3 CLOSEPAREN','function2',3,'p_function2','parser.py',148),
  ('function3 -> type ID function5','function3',3,'p_function3','parser.py',154),
  ('function3 -> empty','function3',1,'p_function3','parser.py',155),
  ('function4 -> stmt function4','function4',2,'p_function4','parser.py',161),
  ('function4 -> empty','function4',1,'p_function4','parser.py',162),
  ('function5 -> COMMA type ID function3','function5',4,'p_function5','parser.py',171),
  ('vars -> type ID vars1 equals exp SEMICOLON','vars',6,'p_vars','parser.py',194),
  ('vars -> type ID vars1 SEMICOLON','vars',4,'p_vars','parser.py',195),
  ('vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3','vars1',4,'p_vars1','parser.py',213),
  ('vars1 -> empty','vars1',1,'p_vars1','parser.py',214),
  ('vars3 -> OPENBRACKET CTEINT CLOSEBRACKET','vars3',3,'p_vars3','parser.py',220),
  ('vars3 -> empty','vars3',1,'p_vars3','parser.py',221),
  ('type -> INT','type',1,'p_type','parser.py',228),
  ('type -> FLOAT','type',1,'p_type','parser.py',229),
  ('type -> CHAR','type',1,'p_type','parser.py',230),
  ('print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON','print',5,'p_print','parser.py',238),
  ('read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON','read',6,'p_read','parser.py',247),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET','read1',6,'p_read1','parser.py',255),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET','read1',3,'p_read1','parser.py',256),
  ('read1 -> empty','read1',1,'p_read1','parser.py',257),
  ('equals -> EQUALS','equals',1,'p_equals','parser.py',262),
  ('id -> ID','id',1,'p_id','parser.py',271),
  ('assignment -> id assignment1 equals assignment3 SEMICOLON','assignment',5,'p_assignment','parser.py',281),
  ('assignment1 -> assignment2','assignment1',1,'p_assignment1','parser.py',289),
  ('assignment1 -> assignment2 assignment1','assignment1',2,'p_assignment1','parser.py',290),
  ('assignment1 -> empty','assignment1',1,'p_assignment1','parser.py',291),
  ('assignment2 -> OPENBRACKET exp CLOSEBRACKET','assignment2',3,'p_assignment2','parser.py',297),
  ('assignment3 -> exp','assignment3',1,'p_assignment3','parser.py',303),
  ('assignment3 -> read','assignment3',1,'p_assignment3','parser.py',304),
  ('vcte -> cte_int','vcte',1,'p_vcte','parser.py',313),
  ('vcte -> cte_float','vcte',1,'p_vcte','parser.py',314),
  ('vcte -> cte_char','vcte',1,'p_vcte','parser.py',315),
  ('vcte -> id vcte1','vcte',2,'p_vcte','parser.py',316),
  ('vcte -> funCall','vcte',1,'p_vcte','parser.py',317),
  ('vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3','vcte1',4,'p_vcte1','parser.py',326),
  ('vcte1 -> empty','vcte1',1,'p_vcte1','parser.py',327),
  ('vcte3 -> OPENBRACKET exp CLOSEBRACKET','vcte3',3,'p_vcte3','parser.py',333),
  ('vcte3 -> empty','vcte3',1,'p_vcte3','parser.py',334),
  ('cte_int -> CTEINT','cte_int',1,'p_cte_int','parser.py',341),
  ('cte_float -> CTEFLOAT','cte_float',1,'p_cte_float','parser.py',348),
  ('cte_char -> CTECHAR','cte_char',1,'p_cte_char','parser.py',355),
  ('return -> RETURN return1 SEMICOLON','return',3,'p_return','parser.py',363),
  ('return1 -> vcte','return1',1,'p_return1','parser.py',369),
  ('return1 -> exp','return1',1,'p_return1','parser.py',370),
  ('expression -> exp expression1','expression',2,'p_expression','parser.py',378),
  ('expression1 -> loper exp','expression1',2,'p_expression1','parser.py',384),
  ('expression1 -> empty','expression1',1,'p_expression1','parser.py',385),
  ('loper -> GREATER','loper',1,'p_loper','parser.py',395),
  ('loper -> LESS','loper',1,'p_loper','parser.py',396),
  ('loper -> NOTEQUAL','loper',1,'p_loper','parser.py',397),
  ('loper -> ISEQUAL','loper',1,'p_loper','parser.py',398),
  ('logical -> expression logical1 expression','logical',3,'p_logical','parser.py',407),
  ('logical1 -> OR','logical1',1,'p_logical1','parser.py',413),
  ('logical1 -> AND','logical1',1,'p_logical1','parser.py',414),
  ('condition -> IF head_cond body condition1','condition',4,'p_condition','parser.py',421),
  ('condition1 -> elseif head_cond body condition1','condition1',4,'p_condition1','parser.py',429),
  ('condition1 -> else body','condition1',2,'p_condition1','parser.py',430),
  ('condition1 -> empty','condition1',1,'p_condition1','parser.py',431),
  ('elseif -> ELSEIF','elseif',1,'p_elseif','parser.py',438),
  ('else -> ELSE','else',1,'p_else','parser.py',445),
  ('head_cond -> OPENPAREN head1 close_condition','head_cond',3,'p_head_cond','parser.py',457),
  ('head1 -> expression','head1',1,'p_head1','parser.py',463),
  ('head1 -> logical','head1',1,'p_head1','parser.py',464),
  ('body -> OPENBRACES body1 CLOSEBRACES','body',3,'p_body','parser.py',470),
  ('close_condition -> CLOSEPAREN','close_condition',1,'p_close_condition','parser.py',476),
  ('body1 -> stmt body1','body1',2,'p_body1','parser.py',483),
  ('body1 -> empty','body1',1,'p_body1','parser.py',484),
  ('for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body','for',7,'p_for','parser.py',492),
  ('while -> while1 body','while',2,'p_while','parser.py',499),
  ('while1 -> while_w OPENPAREN expression CLOSEPAREN','while1',4,'p_while1','parser.py',511),
  ('while_w -> WHILE','while_w',1,'p_while_w','parser.py',517),
  ('funCall -> ID OPENPAREN funCall2 CLOSEPAREN','funCall',4,'p_funCall','parser.py',525),
  ('funCall2 -> exp funCall3','funCall2',2,'p_funCall2','parser.py',536),
  ('funCall2 -> empty','funCall2',1,'p_funCall2','parser.py',537),
  ('funCall3 -> COMMA exp funCall2','funCall3',3,'p_funCall3','parser.py',543),
  ('funCall3 -> empty','funCall3',1,'p_funCall3','parser.py',544),
  ('laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN','laRegla',5,'p_laRegla','parser.py',551),
  ('laRegla2 -> OPENPAREN exp CLOSEPAREN','laRegla2',3,'p_laRegla2','parser.py',558),
  ('graphstmt -> graphfig','graphstmt',1,'p_graphstmt','parser.py',565),
  ('graphstmt -> graphview','graphstmt',1,'p_graphstmt','parser.py',566),
  ('graphstmt -> graphmove','graphstmt',1,'p_graphstmt','parser.py',567),
  ('graphfig -> graphfig1 SEMICOLON','graphfig',2,'p_graphfig','parser.py',573),
  ('graphfig1 -> CIRCLE laRegla2','graphfig1',2,'p_graphfig1','parser.py',578),
  ('graphfig1 -> SQUARE laRegla2','graphfig1',2,'p_graphfig1','parser.py',579),
  ('graphfig1 -> TRIANGLE laRegla','graphfig1',2,'p_graphfig1','parser.py',580),
  ('graphfig1 -> RECTANGLE laRegla','graphfig1',2,'p_graphfig1','parser.py',581),
  ('graphmove -> graphmove1 SEMICOLON','graphmove',2,'p_graphmove','parser.py',587),
  ('graphmove1 -> HAND_DOWN','graphmove1',1,'p_graphmove1','parser.py',593),
  ('graphmove1 -> HAND_UP','graphmove1',1,'p_graphmove1','parser.py',594),
  ('graphmove1 -> graphmove2','graphmove1',1,'p_graphmove1','parser.py',595),
  ('graphmove2 -> GO laRegla2','graphmove2',2,'p_graphmove2','parser.py',601),
  ('graphmove2 -> LEFT laRegla2','graphmove2',2,'p_graphmove2','parser.py',602),
  ('graphmove2 -> RIGHT laRegla2','graphmove2',2,'p_graphmove2','parser.py',603),
  ('graphmove2 -> BACK laRegla2','graphmove2',2,'p_graphmove2','parser.py',604),
  ('graphmove2 -> ARC laRegla','graphmove2',2,'p_graphmove2','parser.py',605),
  ('graphr -> REPEAT laRegla2 OPENBRACES graphr1 CLOSEBRACES','graphr',5,'p_graphr','parser.py',611),
  ('graphr1 -> graphstmt COMMA graphr1','graphr1',3,'p_graphr1','parser.py',616),
  ('graphr1 -> graphstmt','graphr1',1,'p_graphr1','parser.py',617),
  ('graphview -> graphview1 SEMICOLON','graphview',2,'p_graphview','parser.py',625),
  ('graphview1 -> HIDE_STAR','graphview1',1,'p_graphview1','parser.py',631),
  ('graphview1 -> SHOW_STAR','graphview1',1,'p_graphview1','parser.py',632),
  ('graphview1 -> graphview2 exp','graphview1',2,'p_graphview1','parser.py',633),
  ('graphview2 -> SETXY laRegla','graphview2',2,'p_graphview2','parser.py',639),
  ('graphview2 -> COLOR_STAR laRegla2','graphview2',2,'p_graphview2','parser.py',640),
  ('graphview2 -> SIZE_STAR laRegla2','graphview2',2,'p_graphview2','parser.py',641),
  ('exp -> term exp1','exp',2,'p_exp','parser.py',656),
  ('exp1 -> ADDITION exp','exp1',2,'p_exp1','parser.py',664),
  ('exp1 -> SUBSTRACTION exp','exp1',2,'p_exp1','parser.py',665),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',666),
  ('openP -> OPENPAREN','openP',1,'p_openP','parser.py',676),
  ('closeP -> CLOSEPAREN','closeP',1,'p_closeP','parser.py',684),
  ('factor -> vcte','factor',1,'p_factor','parser.py',694),
  ('factor -> factor1','factor',1,'p_factor','parser.py',695),
  ('factor1 -> factor2 vcte','factor1',2,'p_factor1','parser.py',701),
  ('factor1 -> openP expression closeP','factor1',3,'p_factor1','parser.py',702),
  ('factor2 -> ADDITION','factor2',1,'p_factor2','parser.py',708),
  ('factor2 -> SUBSTRACTION','factor2',1,'p_factor2','parser.py',709),
  ('term -> factor term1','term',2,'p_term','parser.py',722),
  ('term1 -> MULTIPLICATION term','term1',2,'p_term1','parser.py',731),
  ('term1 -> DIVISION term','term1',2,'p_term1','parser.py',732),
  ('term1 -> empty','term1',1,'p_term1','parser.py',733),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',743),
]
