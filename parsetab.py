
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programADDITION ARC BACK CIRCLE CLOSEBRACES CLOSEBRACKET CLOSEPAREN COLOR_STAR COMMA CTEFLOAT CTEINT CTESTRING DIVISION ELSE ELSEIF EQUALS FLOAT FOR FUN GO GREATER GREATEREQ HAND_DOWN HAND_UP HIDE_STAR ID IF INT ISEQUAL LEFT LESS LESSEQ MULTIPLICATION NOTEQUAL OPENBRACES OPENBRACKET OPENPAREN POSITION PRINT PROGRAM READ RECTANGLE RETURN RIGHT SEMICOLON SHOW_STAR SIZE_STAR SQUARE STRING SUBSTRACTION TRIANGLE TWODOTS VOID WHILE\n    program : PROGRAM ID SEMICOLON declara_vars program_fun star\n    \n    program_fun : funs\n    \n    funs : function_t funs\n         | function_v funs\n         | empty\n    \n    star : starI declara_vars star1 CLOSEBRACES\n    \n    starI : star_sign OPENBRACES\n    \n    star_sign : MULTIPLICATION\n    \n    star1 : stmt_v star1\n        | empty\n    \n    declara_vars : vars declara_vars\n          | empty\n    \n    vars : type ID dimensionada equals exp SEMICOLON\n         | type ID dimensionada SEMICOLON\n    \n    dimensionada : OPENBRACKET CTEINT CLOSEBRACKET\n           | OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET\n           | empty\n    \n    loop : while\n         | for_v2\n    \n    stmt : assignment\n        | condition\n        | print\n        | loop\n        | read\n        | graphstmt\n        | funCall SEMICOLON\n        | return\n    \n    stmt_v : assignment\n        | condition\n        | print\n        | loop\n        | read\n        | graphstmt\n        | funCall SEMICOLON\n    \n    assignment : id equals assignment3 SEMICOLON\n    \n    assignment3 : exp\n                | read\n    \n    vcte : cte_int\n         | cte_float\n         | cte_string\n         | id\n         | funCall\n         | vectormatriz\n    \n    vectormatriz : OPENBRACKET vm1 CLOSEBRACKET\n                 | vm1\n    \n    vm1 : OPENBRACKET vm2 CLOSEBRACKET COMMA vm1\n        | OPENBRACKET vm2 CLOSEBRACKET\n    \n    vm2 : exp COMMA vm2\n        | exp\n        | empty\n    \n    functionI : type ID\n    \n    functionV : VOID ID\n    \n    function_t : FUN functionI function2 inicia_fun declara_vars function4 termina_fun\n    \n    function_v : FUN functionV function2 inicia_fun declara_vars function9 termina_fun\n    \n    inicia_fun : OPENBRACES\n    \n    termina_fun : CLOSEBRACES\n    \n    function2 : OPENPAREN function3 CLOSEPAREN\n    \n    function3 : funParam function5\n              | empty\n    \n    function4 : stmt function4\n              | empty\n    \n    function9 : stmt_v function9\n              | empty\n    \n    function5 : COMMA funParam function5\n              | empty\n    \n    funParam : type ID\n    \n    type : INT\n         | FLOAT\n         | STRING\n    \n    print : PRINT OPENPAREN expression CLOSEPAREN SEMICOLON\n    \n    read : READ OPENPAREN id read1 CLOSEPAREN SEMICOLON\n    \n    read1 : OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET\n          | OPENBRACKET exp CLOSEBRACKET\n          | empty\n    \n    equals : EQUALS\n    \n    indice_dimensionada : OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET\n                        | OPENBRACKET exp CLOSEBRACKET\n                        | empty\n\n    \n    id : ID indice_dimensionada\n    \n    funCall : ID iniciaFunCall funCall2 terminaFunCall\n    \n    iniciaFunCall : OPENPAREN\n    \n    terminaFunCall : CLOSEPAREN\n    \n    funCall2 : funCallParam funCall3\n             | empty\n    \n    funCall3 : COMMA funCallParam funCall3\n             | empty\n    \n    funCallParam : exp\n    \n    cte_int : negativo CTEINT\n    \n    cte_float : negativo CTEFLOAT\n    \n    cte_string : CTESTRING\n    \n    return : RETURN return1 SEMICOLON\n    \n    return1 : vcte\n            | exp\n    \n    loper : GREATER\n          | LESS\n          | GREATEREQ\n          | LESSEQ\n          | NOTEQUAL\n          | ISEQUAL\n    \n    condition : IF head_cond body condition1\n    \n    condition1 : elseif head_cond body condition1\n               | else body\n               | empty\n    \n    elseif : ELSEIF\n    \n    else : ELSE\n    \n    head_cond : OPENPAREN expression close_condition\n    \n    body : OPENBRACES body1 CLOSEBRACES\n    \n    close_condition : CLOSEPAREN\n    \n    body1 : stmt body1\n          | empty\n    \n    for_v2 : nuevo_for forBody\n    \n    nuevo_for : FOR OPENPAREN ID TWODOTS for2 CLOSEPAREN\n    \n    for : FOR for1 TWODOTS for2 forClose forBody\n    \n    forInit : FOR\n    \n    for1 : OPENPAREN ID\n    \n    for2 : exp\n    \n    forClose : CLOSEPAREN\n    \n    forBody : body\n    \n    while : while1 body\n    \n    while1 : while_w OPENPAREN expression CLOSEPAREN\n    \n    while_w : WHILE\n    \n    dosExp : OPENPAREN exp COMMA exp CLOSEPAREN\n    \n    unaExp : OPENPAREN exp CLOSEPAREN\n    \n    graphstmt : graphfig\n             | graphview\n             | graphmove\n    \n    graphfig : graphfig1 SEMICOLON\n             | graphfig2 SEMICOLON\n    \n    graphfig1 : CIRCLE unaExp\n            | SQUARE unaExp\n            | TRIANGLE unaExp\n    \n    graphfig2 : RECTANGLE dosExp\n    \n    graphmove : graphmove0  SEMICOLON\n              | graphmove1 SEMICOLON\n              | graphmove2 SEMICOLON\n    \n    graphmove0 : HAND_DOWN\n              | HAND_UP\n    \n    graphmove1 : GO unaExp\n              | LEFT unaExp\n              | RIGHT unaExp\n              | BACK unaExp\n    \n    graphmove2 : ARC dosExp\n    \n    graphview : graphview0 SEMICOLON\n              | graphview1 SEMICOLON\n              | graphview2 SEMICOLON\n    \n    graphview0 : HIDE_STAR\n              | SHOW_STAR\n    \n    graphview1 : COLOR_STAR unaExp\n              | SIZE_STAR unaExp\n    \n    graphview2 : POSITION dosExp\n    \n    expression : exp loper exp\n               | exp\n    \n    exp : term\n        | term exp_o exp\n    \n    exp_o : ADDITION\n          | SUBSTRACTION\n    \n    openP : OPENPAREN\n    \n    closeP : CLOSEPAREN\n    \n    term : factor term_o term\n         | factor\n    \n    term_o : MULTIPLICATION\n           | DIVISION\n    \n    factor : vcte\n           | openP expression closeP\n    \n    negativo : SUBSTRACTION\n             | empty\n    empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,20,120,],[0,-1,-6,]),'ID':([2,6,7,8,9,10,11,18,21,28,29,33,34,40,41,42,45,47,48,49,50,51,52,57,58,60,61,62,93,94,98,99,105,112,115,122,123,125,126,127,128,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,152,161,167,168,169,170,171,172,173,174,179,188,199,201,202,203,204,205,206,208,209,215,219,225,226,227,228,229,230,231,234,236,237,240,247,252,255,257,262,264,276,277,281,282,286,288,289,295,296,],[3,-167,-12,19,-67,-68,-69,-11,-167,38,39,63,-7,100,-14,-75,63,-28,-29,-30,-31,-32,-33,-18,-19,-124,-125,-126,-167,-55,166,-167,100,-157,100,-34,100,100,100,192,100,-81,100,-119,63,-111,-118,-127,-128,-143,-144,-145,-133,-134,-135,100,211,100,100,63,63,-13,100,-155,-156,100,-161,-162,100,-167,63,-20,-21,-22,-23,-24,-25,-27,100,63,63,100,-94,-95,-96,-97,-98,-99,100,-35,-100,-103,100,100,-107,-26,100,100,-102,-70,100,-91,100,-167,-71,-101,100,]),'SEMICOLON':([3,19,30,32,53,66,67,68,69,70,71,72,73,80,81,85,86,100,101,102,103,104,106,107,108,109,110,111,114,116,119,129,132,147,149,150,151,153,154,155,156,157,158,159,160,177,178,185,186,187,207,221,222,223,224,232,233,245,249,250,254,258,259,260,263,274,278,287,289,294,297,],[4,-167,41,-17,122,137,138,139,140,141,142,143,144,-146,-147,-136,-137,-167,168,-153,-160,-163,-38,-39,-40,-41,-42,-43,-90,-45,-15,-79,-78,-129,-130,-131,-132,-148,-149,-150,-138,-139,-140,-141,-142,-88,-89,236,-36,-37,257,-154,-159,-164,-158,-44,-47,277,-80,-82,-77,282,-92,-93,-123,-16,289,-46,-71,-122,-76,]),'FUN':([4,5,6,7,14,15,18,41,168,265,266,269,],[-167,17,-167,-12,17,17,-11,-14,-13,-53,-56,-54,]),'MULTIPLICATION':([4,5,6,7,12,13,14,15,16,18,24,25,41,100,103,104,106,107,108,109,110,111,114,116,129,132,168,177,178,180,223,224,232,233,249,250,254,259,265,266,269,287,297,],[-167,-167,-167,-12,23,-2,-167,-167,-5,-11,-3,-4,-14,-167,173,-163,-38,-39,-40,-41,-42,-43,-90,-45,-79,-78,-13,-88,-89,-45,-164,-158,-44,-47,-80,-82,-77,-163,-53,-56,-54,-46,-76,]),'INT':([4,6,17,21,34,36,41,93,94,99,164,168,],[9,9,9,9,-7,9,-14,9,-55,9,9,-13,]),'FLOAT':([4,6,17,21,34,36,41,93,94,99,164,168,],[10,10,10,10,-7,10,-14,10,-55,10,10,-13,]),'STRING':([4,6,17,21,34,36,41,93,94,99,164,168,],[11,11,11,11,-7,11,-14,11,-55,11,11,-13,]),'IF':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,93,94,99,122,133,134,135,136,137,138,139,140,141,142,143,144,161,167,168,188,199,201,202,203,204,205,206,208,215,219,236,237,240,255,257,276,277,282,288,289,295,],[-167,-12,-11,-167,55,-7,-14,55,-28,-29,-30,-31,-32,-33,-18,-19,-124,-125,-126,-167,-55,-167,-34,-119,55,-111,-118,-127,-128,-143,-144,-145,-133,-134,-135,55,55,-13,-167,55,-20,-21,-22,-23,-24,-25,-27,55,55,-35,-100,-103,-107,-26,-102,-70,-91,-167,-71,-101,]),'PRINT':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,93,94,99,122,133,134,135,136,137,138,139,140,141,142,143,144,161,167,168,188,199,201,202,203,204,205,206,208,215,219,236,237,240,255,257,276,277,282,288,289,295,],[-167,-12,-11,-167,56,-7,-14,56,-28,-29,-30,-31,-32,-33,-18,-19,-124,-125,-126,-167,-55,-167,-34,-119,56,-111,-118,-127,-128,-143,-144,-145,-133,-134,-135,56,56,-13,-167,56,-20,-21,-22,-23,-24,-25,-27,56,56,-35,-100,-103,-107,-26,-102,-70,-91,-167,-71,-101,]),'READ':([6,7,18,21,33,34,41,42,45,47,48,49,50,51,52,57,58,60,61,62,93,94,99,122,123,133,134,135,136,137,138,139,140,141,142,143,144,161,167,168,188,199,201,202,203,204,205,206,208,215,219,236,237,240,255,257,276,277,282,288,289,295,],[-167,-12,-11,-167,59,-7,-14,-75,59,-28,-29,-30,-31,-32,-33,-18,-19,-124,-125,-126,-167,-55,-167,-34,59,-119,59,-111,-118,-127,-128,-143,-144,-145,-133,-134,-135,59,59,-13,-167,59,-20,-21,-22,-23,-24,-25,-27,59,59,-35,-100,-103,-107,-26,-102,-70,-91,-167,-71,-101,]),'FOR':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,93,94,99,122,133,134,135,136,137,138,139,140,141,142,143,144,161,167,168,188,199,201,202,203,204,205,206,208,215,219,236,237,240,255,257,276,277,282,288,289,295,],[-167,-12,-11,-167,75,-7,-14,75,-28,-29,-30,-31,-32,-33,-18,-19,-124,-125,-126,-167,-55,-167,-34,-119,75,-111,-118,-127,-128,-143,-144,-145,-133,-134,-135,75,75,-13,-167,75,-20,-21,-22,-23,-24,-25,-27,75,75,-35,-100,-103,-107,-26,-102,-70,-91,-167,-71,-101,]),'CIRCLE':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,93,94,99,122,133,134,135,136,137,138,139,140,141,142,143,144,161,167,168,188,199,201,202,203,204,205,206,208,215,219,236,237,240,255,257,276,277,282,288,289,295,],[-167,-12,-11,-167,76,-7,-14,76,-28,-29,-30,-31,-32,-33,-18,-19,-124,-125,-126,-167,-55,-167,-34,-119,76,-111,-118,-127,-128,-143,-144,-145,-133,-134,-135,76,76,-13,-167,76,-20,-21,-22,-23,-24,-25,-27,76,76,-35,-100,-103,-107,-26,-102,-70,-91,-167,-71,-101,]),'SQUARE':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,93,94,99,122,133,134,135,136,137,138,139,140,141,142,143,144,161,167,168,188,199,201,202,203,204,205,206,208,215,219,236,237,240,255,257,276,277,282,288,289,295,],[-167,-12,-11,-167,77,-7,-14,77,-28,-29,-30,-31,-32,-33,-18,-19,-124,-125,-126,-167,-55,-167,-34,-119,77,-111,-118,-127,-128,-143,-144,-145,-133,-134,-135,77,77,-13,-167,77,-20,-21,-22,-23,-24,-25,-27,77,77,-35,-100,-103,-107,-26,-102,-70,-91,-167,-71,-101,]),'TRIANGLE':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,93,94,99,122,133,134,135,136,137,138,139,140,141,142,143,144,161,167,168,188,199,201,202,203,204,205,206,208,215,219,236,237,240,255,257,276,277,282,288,289,295,],[-167,-12,-11,-167,78,-7,-14,78,-28,-29,-30,-31,-32,-33,-18,-19,-124,-125,-126,-167,-55,-167,-34,-119,78,-111,-118,-127,-128,-143,-144,-145,-133,-134,-135,78,78,-13,-167,78,-20,-21,-22,-23,-24,-25,-27,78,78,-35,-100,-103,-107,-26,-102,-70,-91,-167,-71,-101,]),'RECTANGLE':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,93,94,99,122,133,134,135,136,137,138,139,140,141,142,143,144,161,167,168,188,199,201,202,203,204,205,206,208,215,219,236,237,240,255,257,276,277,282,288,289,295,],[-167,-12,-11,-167,79,-7,-14,79,-28,-29,-30,-31,-32,-33,-18,-19,-124,-125,-126,-167,-55,-167,-34,-119,79,-111,-118,-127,-128,-143,-144,-145,-133,-134,-135,79,79,-13,-167,79,-20,-21,-22,-23,-24,-25,-27,79,79,-35,-100,-103,-107,-26,-102,-70,-91,-167,-71,-101,]),'HIDE_STAR':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,93,94,99,122,133,134,135,136,137,138,139,140,141,142,143,144,161,167,168,188,199,201,202,203,204,205,206,208,215,219,236,237,240,255,257,276,277,282,288,289,295,],[-167,-12,-11,-167,80,-7,-14,80,-28,-29,-30,-31,-32,-33,-18,-19,-124,-125,-126,-167,-55,-167,-34,-119,80,-111,-118,-127,-128,-143,-144,-145,-133,-134,-135,80,80,-13,-167,80,-20,-21,-22,-23,-24,-25,-27,80,80,-35,-100,-103,-107,-26,-102,-70,-91,-167,-71,-101,]),'SHOW_STAR':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,93,94,99,122,133,134,135,136,137,138,139,140,141,142,143,144,161,167,168,188,199,201,202,203,204,205,206,208,215,219,236,237,240,255,257,276,277,282,288,289,295,],[-167,-12,-11,-167,81,-7,-14,81,-28,-29,-30,-31,-32,-33,-18,-19,-124,-125,-126,-167,-55,-167,-34,-119,81,-111,-118,-127,-128,-143,-144,-145,-133,-134,-135,81,81,-13,-167,81,-20,-21,-22,-23,-24,-25,-27,81,81,-35,-100,-103,-107,-26,-102,-70,-91,-167,-71,-101,]),'COLOR_STAR':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,93,94,99,122,133,134,135,136,137,138,139,140,141,142,143,144,161,167,168,188,199,201,202,203,204,205,206,208,215,219,236,237,240,255,257,276,277,282,288,289,295,],[-167,-12,-11,-167,82,-7,-14,82,-28,-29,-30,-31,-32,-33,-18,-19,-124,-125,-126,-167,-55,-167,-34,-119,82,-111,-118,-127,-128,-143,-144,-145,-133,-134,-135,82,82,-13,-167,82,-20,-21,-22,-23,-24,-25,-27,82,82,-35,-100,-103,-107,-26,-102,-70,-91,-167,-71,-101,]),'SIZE_STAR':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,93,94,99,122,133,134,135,136,137,138,139,140,141,142,143,144,161,167,168,188,199,201,202,203,204,205,206,208,215,219,236,237,240,255,257,276,277,282,288,289,295,],[-167,-12,-11,-167,83,-7,-14,83,-28,-29,-30,-31,-32,-33,-18,-19,-124,-125,-126,-167,-55,-167,-34,-119,83,-111,-118,-127,-128,-143,-144,-145,-133,-134,-135,83,83,-13,-167,83,-20,-21,-22,-23,-24,-25,-27,83,83,-35,-100,-103,-107,-26,-102,-70,-91,-167,-71,-101,]),'POSITION':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,93,94,99,122,133,134,135,136,137,138,139,140,141,142,143,144,161,167,168,188,199,201,202,203,204,205,206,208,215,219,236,237,240,255,257,276,277,282,288,289,295,],[-167,-12,-11,-167,84,-7,-14,84,-28,-29,-30,-31,-32,-33,-18,-19,-124,-125,-126,-167,-55,-167,-34,-119,84,-111,-118,-127,-128,-143,-144,-145,-133,-134,-135,84,84,-13,-167,84,-20,-21,-22,-23,-24,-25,-27,84,84,-35,-100,-103,-107,-26,-102,-70,-91,-167,-71,-101,]),'HAND_DOWN':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,93,94,99,122,133,134,135,136,137,138,139,140,141,142,143,144,161,167,168,188,199,201,202,203,204,205,206,208,215,219,236,237,240,255,257,276,277,282,288,289,295,],[-167,-12,-11,-167,85,-7,-14,85,-28,-29,-30,-31,-32,-33,-18,-19,-124,-125,-126,-167,-55,-167,-34,-119,85,-111,-118,-127,-128,-143,-144,-145,-133,-134,-135,85,85,-13,-167,85,-20,-21,-22,-23,-24,-25,-27,85,85,-35,-100,-103,-107,-26,-102,-70,-91,-167,-71,-101,]),'HAND_UP':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,93,94,99,122,133,134,135,136,137,138,139,140,141,142,143,144,161,167,168,188,199,201,202,203,204,205,206,208,215,219,236,237,240,255,257,276,277,282,288,289,295,],[-167,-12,-11,-167,86,-7,-14,86,-28,-29,-30,-31,-32,-33,-18,-19,-124,-125,-126,-167,-55,-167,-34,-119,86,-111,-118,-127,-128,-143,-144,-145,-133,-134,-135,86,86,-13,-167,86,-20,-21,-22,-23,-24,-25,-27,86,86,-35,-100,-103,-107,-26,-102,-70,-91,-167,-71,-101,]),'GO':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,93,94,99,122,133,134,135,136,137,138,139,140,141,142,143,144,161,167,168,188,199,201,202,203,204,205,206,208,215,219,236,237,240,255,257,276,277,282,288,289,295,],[-167,-12,-11,-167,87,-7,-14,87,-28,-29,-30,-31,-32,-33,-18,-19,-124,-125,-126,-167,-55,-167,-34,-119,87,-111,-118,-127,-128,-143,-144,-145,-133,-134,-135,87,87,-13,-167,87,-20,-21,-22,-23,-24,-25,-27,87,87,-35,-100,-103,-107,-26,-102,-70,-91,-167,-71,-101,]),'LEFT':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,93,94,99,122,133,134,135,136,137,138,139,140,141,142,143,144,161,167,168,188,199,201,202,203,204,205,206,208,215,219,236,237,240,255,257,276,277,282,288,289,295,],[-167,-12,-11,-167,88,-7,-14,88,-28,-29,-30,-31,-32,-33,-18,-19,-124,-125,-126,-167,-55,-167,-34,-119,88,-111,-118,-127,-128,-143,-144,-145,-133,-134,-135,88,88,-13,-167,88,-20,-21,-22,-23,-24,-25,-27,88,88,-35,-100,-103,-107,-26,-102,-70,-91,-167,-71,-101,]),'RIGHT':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,93,94,99,122,133,134,135,136,137,138,139,140,141,142,143,144,161,167,168,188,199,201,202,203,204,205,206,208,215,219,236,237,240,255,257,276,277,282,288,289,295,],[-167,-12,-11,-167,89,-7,-14,89,-28,-29,-30,-31,-32,-33,-18,-19,-124,-125,-126,-167,-55,-167,-34,-119,89,-111,-118,-127,-128,-143,-144,-145,-133,-134,-135,89,89,-13,-167,89,-20,-21,-22,-23,-24,-25,-27,89,89,-35,-100,-103,-107,-26,-102,-70,-91,-167,-71,-101,]),'BACK':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,93,94,99,122,133,134,135,136,137,138,139,140,141,142,143,144,161,167,168,188,199,201,202,203,204,205,206,208,215,219,236,237,240,255,257,276,277,282,288,289,295,],[-167,-12,-11,-167,90,-7,-14,90,-28,-29,-30,-31,-32,-33,-18,-19,-124,-125,-126,-167,-55,-167,-34,-119,90,-111,-118,-127,-128,-143,-144,-145,-133,-134,-135,90,90,-13,-167,90,-20,-21,-22,-23,-24,-25,-27,90,90,-35,-100,-103,-107,-26,-102,-70,-91,-167,-71,-101,]),'ARC':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,93,94,99,122,133,134,135,136,137,138,139,140,141,142,143,144,161,167,168,188,199,201,202,203,204,205,206,208,215,219,236,237,240,255,257,276,277,282,288,289,295,],[-167,-12,-11,-167,91,-7,-14,91,-28,-29,-30,-31,-32,-33,-18,-19,-124,-125,-126,-167,-55,-167,-34,-119,91,-111,-118,-127,-128,-143,-144,-145,-133,-134,-135,91,91,-13,-167,91,-20,-21,-22,-23,-24,-25,-27,91,91,-35,-100,-103,-107,-26,-102,-70,-91,-167,-71,-101,]),'WHILE':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,93,94,99,122,133,134,135,136,137,138,139,140,141,142,143,144,161,167,168,188,199,201,202,203,204,205,206,208,215,219,236,237,240,255,257,276,277,282,288,289,295,],[-167,-12,-11,-167,92,-7,-14,92,-28,-29,-30,-31,-32,-33,-18,-19,-124,-125,-126,-167,-55,-167,-34,-119,92,-111,-118,-127,-128,-143,-144,-145,-133,-134,-135,92,92,-13,-167,92,-20,-21,-22,-23,-24,-25,-27,92,92,-35,-100,-103,-107,-26,-102,-70,-91,-167,-71,-101,]),'CLOSEBRACES':([6,7,18,21,33,34,41,44,45,46,47,48,49,50,51,52,57,58,60,61,62,93,94,99,121,122,133,134,135,136,137,138,139,140,141,142,143,144,161,167,168,188,198,199,200,201,202,203,204,205,206,208,214,215,216,218,219,220,236,237,240,255,256,257,267,270,276,277,282,288,289,295,],[-167,-12,-11,-167,-167,-7,-14,120,-167,-10,-28,-29,-30,-31,-32,-33,-18,-19,-124,-125,-126,-167,-55,-167,-9,-34,-119,-167,-111,-118,-127,-128,-143,-144,-145,-133,-134,-135,-167,-167,-13,-167,255,-167,-110,-20,-21,-22,-23,-24,-25,-27,266,-167,-61,266,-167,-63,-35,-100,-103,-107,-109,-26,-60,-62,-102,-70,-91,-167,-71,-101,]),'RETURN':([6,7,18,41,57,58,60,61,62,93,94,133,134,135,136,137,138,139,140,141,142,143,144,161,168,188,199,201,202,203,204,205,206,208,215,236,237,240,255,257,276,277,282,288,289,295,],[-167,-12,-11,-14,-18,-19,-124,-125,-126,-167,-55,-119,209,-111,-118,-127,-128,-143,-144,-145,-133,-134,-135,209,-13,-167,209,-20,-21,-22,-23,-24,-25,-27,209,-35,-100,-103,-107,-26,-102,-70,-91,-167,-71,-101,]),'VOID':([17,],[29,]),'OPENBRACKET':([19,40,42,63,100,105,112,115,119,123,125,126,128,129,130,131,132,145,148,152,169,170,171,172,173,174,179,191,192,209,225,226,227,228,229,230,231,234,247,252,254,262,264,272,281,286,290,296,297,],[31,115,-75,131,131,115,-157,179,184,115,115,115,115,-79,-81,115,-78,115,115,115,115,-155,-156,115,-161,-162,179,247,131,115,115,-94,-95,-96,-97,-98,-99,115,115,115,281,115,115,286,115,115,296,115,-76,]),'EQUALS':([19,30,32,54,63,119,129,132,254,274,297,],[-167,42,-17,42,-167,-15,-79,-78,-77,-16,-76,]),'OPENBRACES':([22,23,35,37,64,65,124,162,239,242,243,244,261,275,293,],[34,-8,94,94,134,134,134,-57,134,-105,-106,-108,-120,134,-112,]),'OPENPAREN':([26,27,38,39,40,42,55,56,59,63,74,75,76,77,78,79,82,83,84,87,88,89,90,91,92,100,105,112,115,123,125,126,128,130,131,145,148,152,169,170,171,172,173,174,179,209,225,226,227,228,229,230,231,234,238,241,247,252,262,264,281,286,296,],[36,36,-51,-52,112,-75,125,126,127,130,145,146,148,148,148,152,148,148,152,148,148,148,148,152,-121,130,112,-157,112,112,112,112,112,-81,112,112,112,112,112,-155,-156,112,-161,-162,112,112,112,-94,-95,-96,-97,-98,-99,112,125,-104,112,112,112,112,112,112,112,]),'CTEINT':([31,40,42,105,112,113,115,117,118,123,125,126,128,130,131,145,148,152,169,170,171,172,173,174,179,183,184,195,209,225,226,227,228,229,230,231,234,247,252,262,264,281,286,296,],[43,-167,-75,-167,-157,177,-167,-165,-166,-167,-167,-167,-167,-81,-167,-167,-167,-167,-167,-155,-156,-167,-161,-162,-167,-166,235,-166,-167,-167,-94,-95,-96,-97,-98,-99,-167,-167,-167,-167,-167,-167,-167,-167,]),'CLOSEPAREN':([36,95,96,97,100,102,103,104,106,107,108,109,110,111,114,116,128,129,130,132,163,165,166,175,176,177,178,189,190,191,192,193,194,195,196,210,212,217,221,222,223,224,232,233,246,248,249,250,251,253,254,268,271,280,283,284,285,287,290,291,297,299,],[-167,162,-167,-59,-167,-153,-160,-163,-38,-39,-40,-41,-42,-43,-90,-45,-167,-79,-81,-78,-58,-65,-66,224,-152,-88,-89,244,245,-167,-167,250,-167,-84,-87,261,263,-167,-154,-159,-164,-158,-44,-47,278,-74,-80,-82,-83,-86,-77,-64,-151,-167,293,-116,294,-46,-73,-85,-76,-72,]),'CTESTRING':([40,42,105,112,115,123,125,126,128,130,131,145,148,152,169,170,171,172,173,174,179,209,225,226,227,228,229,230,231,234,247,252,262,264,281,286,296,],[114,-75,114,-157,114,114,114,114,114,-81,114,114,114,114,114,-155,-156,114,-161,-162,114,114,114,-94,-95,-96,-97,-98,-99,114,114,114,114,114,114,114,114,]),'SUBSTRACTION':([40,42,100,102,103,104,105,106,107,108,109,110,111,112,114,115,116,123,125,126,128,129,130,131,132,145,148,152,169,170,171,172,173,174,177,178,179,180,209,222,223,224,225,226,227,228,229,230,231,232,233,234,247,249,250,252,254,259,262,264,281,286,287,296,297,],[117,-75,-167,171,-160,-163,117,-38,-39,-40,-41,-42,-43,-157,-90,117,-45,117,117,117,117,-79,-81,117,-78,117,117,117,117,-155,-156,117,-161,-162,-88,-89,117,-45,117,-159,-164,-158,117,-94,-95,-96,-97,-98,-99,-44,-47,117,117,-80,-82,117,-77,-163,117,117,117,117,-46,117,-76,]),'CTEFLOAT':([40,42,105,112,113,115,117,118,123,125,126,128,130,131,145,148,152,169,170,171,172,173,174,179,183,195,209,225,226,227,228,229,230,231,234,247,252,262,264,281,286,296,],[-167,-75,-167,-157,178,-167,-165,-166,-167,-167,-167,-167,-81,-167,-167,-167,-167,-167,-155,-156,-167,-161,-162,-167,-166,-166,-167,-167,-94,-95,-96,-97,-98,-99,-167,-167,-167,-167,-167,-167,-167,-167,]),'CLOSEBRACKET':([43,100,102,103,104,106,107,108,109,110,111,114,115,116,129,132,177,178,179,180,181,182,183,197,221,222,223,224,232,233,234,235,249,250,254,273,279,286,287,292,297,298,],[119,-167,-153,-160,-163,-38,-39,-40,-41,-42,-43,-90,-167,-45,-79,-78,-88,-89,-167,232,233,-49,-50,254,-154,-159,-164,-158,-44,-47,-167,274,-80,-82,-77,-48,290,-167,-46,297,-76,299,]),'COMMA':([96,100,102,103,104,106,107,108,109,110,111,114,116,129,132,166,177,178,180,182,194,196,213,217,221,222,223,224,232,233,249,250,254,280,287,297,],[164,-167,-153,-160,-163,-38,-39,-40,-41,-42,-43,-90,-45,-79,-78,-66,-88,-89,-45,234,252,-87,264,164,-154,-159,-164,-158,-44,272,-80,-82,-77,252,-46,-76,]),'DIVISION':([100,103,104,106,107,108,109,110,111,114,116,129,132,177,178,180,223,224,232,233,249,250,254,259,287,297,],[-167,174,-163,-38,-39,-40,-41,-42,-43,-90,-45,-79,-78,-88,-89,-45,-164,-158,-44,-47,-80,-82,-77,-163,-46,-76,]),'ADDITION':([100,102,103,104,106,107,108,109,110,111,114,116,129,132,177,178,180,222,223,224,232,233,249,250,254,259,287,297,],[-167,170,-160,-163,-38,-39,-40,-41,-42,-43,-90,-45,-79,-78,-88,-89,-45,-159,-164,-158,-44,-47,-80,-82,-77,-163,-46,-76,]),'GREATER':([100,102,103,104,106,107,108,109,110,111,114,116,129,132,176,177,178,221,222,223,224,232,233,249,250,254,287,297,],[-167,-153,-160,-163,-38,-39,-40,-41,-42,-43,-90,-45,-79,-78,226,-88,-89,-154,-159,-164,-158,-44,-47,-80,-82,-77,-46,-76,]),'LESS':([100,102,103,104,106,107,108,109,110,111,114,116,129,132,176,177,178,221,222,223,224,232,233,249,250,254,287,297,],[-167,-153,-160,-163,-38,-39,-40,-41,-42,-43,-90,-45,-79,-78,227,-88,-89,-154,-159,-164,-158,-44,-47,-80,-82,-77,-46,-76,]),'GREATEREQ':([100,102,103,104,106,107,108,109,110,111,114,116,129,132,176,177,178,221,222,223,224,232,233,249,250,254,287,297,],[-167,-153,-160,-163,-38,-39,-40,-41,-42,-43,-90,-45,-79,-78,228,-88,-89,-154,-159,-164,-158,-44,-47,-80,-82,-77,-46,-76,]),'LESSEQ':([100,102,103,104,106,107,108,109,110,111,114,116,129,132,176,177,178,221,222,223,224,232,233,249,250,254,287,297,],[-167,-153,-160,-163,-38,-39,-40,-41,-42,-43,-90,-45,-79,-78,229,-88,-89,-154,-159,-164,-158,-44,-47,-80,-82,-77,-46,-76,]),'NOTEQUAL':([100,102,103,104,106,107,108,109,110,111,114,116,129,132,176,177,178,221,222,223,224,232,233,249,250,254,287,297,],[-167,-153,-160,-163,-38,-39,-40,-41,-42,-43,-90,-45,-79,-78,230,-88,-89,-154,-159,-164,-158,-44,-47,-80,-82,-77,-46,-76,]),'ISEQUAL':([100,102,103,104,106,107,108,109,110,111,114,116,129,132,176,177,178,221,222,223,224,232,233,249,250,254,287,297,],[-167,-153,-160,-163,-38,-39,-40,-41,-42,-43,-90,-45,-79,-78,231,-88,-89,-154,-159,-164,-158,-44,-47,-80,-82,-77,-46,-76,]),'ELSEIF':([188,255,288,],[241,-107,241,]),'ELSE':([188,255,288,],[242,-107,242,]),'TWODOTS':([211,],[262,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declara_vars':([4,6,21,93,99,],[5,18,33,161,167,]),'vars':([4,6,21,93,99,],[6,6,6,6,6,]),'empty':([4,5,6,14,15,19,21,33,36,40,45,63,93,96,99,100,105,115,123,125,126,128,131,134,145,148,152,161,167,169,172,179,188,191,192,194,199,209,215,217,219,225,234,247,252,262,264,280,281,286,288,296,],[7,16,7,16,16,32,7,46,97,118,46,132,7,165,7,132,118,183,118,118,118,195,118,200,118,118,118,216,220,118,118,183,240,248,132,253,200,118,216,165,220,118,183,118,118,118,118,253,118,183,240,118,]),'type':([4,6,17,21,36,93,99,164,],[8,8,28,8,98,8,8,98,]),'program_fun':([5,],[12,]),'funs':([5,14,15,],[13,24,25,]),'function_t':([5,14,15,],[14,14,14,]),'function_v':([5,14,15,],[15,15,15,]),'star':([12,],[20,]),'starI':([12,],[21,]),'star_sign':([12,],[22,]),'functionI':([17,],[26,]),'functionV':([17,],[27,]),'dimensionada':([19,],[30,]),'function2':([26,27,],[35,37,]),'equals':([30,54,],[40,123,]),'star1':([33,45,],[44,121,]),'stmt_v':([33,45,167,219,],[45,45,219,219,]),'assignment':([33,45,134,161,167,199,215,219,],[47,47,201,201,47,201,201,47,]),'condition':([33,45,134,161,167,199,215,219,],[48,48,202,202,48,202,202,48,]),'print':([33,45,134,161,167,199,215,219,],[49,49,203,203,49,203,203,49,]),'loop':([33,45,134,161,167,199,215,219,],[50,50,204,204,50,204,204,50,]),'read':([33,45,123,134,161,167,199,215,219,],[51,51,187,205,205,51,205,205,51,]),'graphstmt':([33,45,134,161,167,199,215,219,],[52,52,206,206,52,206,206,52,]),'funCall':([33,40,45,105,115,123,125,126,128,131,134,145,148,152,161,167,169,172,179,199,209,215,219,225,234,247,252,262,264,281,286,296,],[53,110,53,110,110,110,110,110,110,110,207,110,110,110,207,53,110,110,110,207,110,207,53,110,110,110,110,110,110,110,110,110,]),'id':([33,40,45,105,115,123,125,126,127,128,131,134,145,148,152,161,167,169,172,179,199,209,215,219,225,234,247,252,262,264,281,286,296,],[54,109,54,109,109,109,109,109,191,109,109,54,109,109,109,54,54,109,109,109,54,109,54,54,109,109,109,109,109,109,109,109,109,]),'while':([33,45,134,161,167,199,215,219,],[57,57,57,57,57,57,57,57,]),'for_v2':([33,45,134,161,167,199,215,219,],[58,58,58,58,58,58,58,58,]),'graphfig':([33,45,134,161,167,199,215,219,],[60,60,60,60,60,60,60,60,]),'graphview':([33,45,134,161,167,199,215,219,],[61,61,61,61,61,61,61,61,]),'graphmove':([33,45,134,161,167,199,215,219,],[62,62,62,62,62,62,62,62,]),'while1':([33,45,134,161,167,199,215,219,],[64,64,64,64,64,64,64,64,]),'nuevo_for':([33,45,134,161,167,199,215,219,],[65,65,65,65,65,65,65,65,]),'graphfig1':([33,45,134,161,167,199,215,219,],[66,66,66,66,66,66,66,66,]),'graphfig2':([33,45,134,161,167,199,215,219,],[67,67,67,67,67,67,67,67,]),'graphview0':([33,45,134,161,167,199,215,219,],[68,68,68,68,68,68,68,68,]),'graphview1':([33,45,134,161,167,199,215,219,],[69,69,69,69,69,69,69,69,]),'graphview2':([33,45,134,161,167,199,215,219,],[70,70,70,70,70,70,70,70,]),'graphmove0':([33,45,134,161,167,199,215,219,],[71,71,71,71,71,71,71,71,]),'graphmove1':([33,45,134,161,167,199,215,219,],[72,72,72,72,72,72,72,72,]),'graphmove2':([33,45,134,161,167,199,215,219,],[73,73,73,73,73,73,73,73,]),'while_w':([33,45,134,161,167,199,215,219,],[74,74,74,74,74,74,74,74,]),'inicia_fun':([35,37,],[93,99,]),'function3':([36,],[95,]),'funParam':([36,164,],[96,217,]),'exp':([40,105,115,123,125,126,128,131,145,148,152,169,179,209,225,234,247,252,262,264,281,286,296,],[101,176,182,186,176,176,196,197,176,212,213,221,182,260,271,182,279,196,284,285,292,182,298,]),'term':([40,105,115,123,125,126,128,131,145,148,152,169,172,179,209,225,234,247,252,262,264,281,286,296,],[102,102,102,102,102,102,102,102,102,102,102,102,222,102,102,102,102,102,102,102,102,102,102,102,]),'factor':([40,105,115,123,125,126,128,131,145,148,152,169,172,179,209,225,234,247,252,262,264,281,286,296,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'vcte':([40,105,115,123,125,126,128,131,145,148,152,169,172,179,209,225,234,247,252,262,264,281,286,296,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,259,104,104,104,104,104,104,104,104,104,]),'openP':([40,105,115,123,125,126,128,131,145,148,152,169,172,179,209,225,234,247,252,262,264,281,286,296,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'cte_int':([40,105,115,123,125,126,128,131,145,148,152,169,172,179,209,225,234,247,252,262,264,281,286,296,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'cte_float':([40,105,115,123,125,126,128,131,145,148,152,169,172,179,209,225,234,247,252,262,264,281,286,296,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'cte_string':([40,105,115,123,125,126,128,131,145,148,152,169,172,179,209,225,234,247,252,262,264,281,286,296,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'vectormatriz':([40,105,115,123,125,126,128,131,145,148,152,169,172,179,209,225,234,247,252,262,264,281,286,296,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'negativo':([40,105,115,123,125,126,128,131,145,148,152,169,172,179,209,225,234,247,252,262,264,281,286,296,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'vm1':([40,105,115,123,125,126,128,131,145,148,152,169,172,179,209,225,234,247,252,262,264,272,281,286,296,],[116,116,180,116,116,116,116,116,116,116,116,116,116,180,116,116,116,116,116,116,116,287,116,116,116,]),'head_cond':([55,238,],[124,275,]),'iniciaFunCall':([63,100,],[128,128,]),'indice_dimensionada':([63,100,192,],[129,129,129,]),'body':([64,65,124,239,275,],[133,136,188,276,288,]),'forBody':([65,],[135,]),'unaExp':([76,77,78,82,83,87,88,89,90,],[147,149,150,153,154,156,157,158,159,]),'dosExp':([79,84,91,],[151,155,160,]),'function5':([96,217,],[163,268,]),'exp_o':([102,],[169,]),'term_o':([103,],[172,]),'expression':([105,125,126,145,],[175,189,190,210,]),'vm2':([115,179,234,286,],[181,181,273,181,]),'assignment3':([123,],[185,]),'funCall2':([128,],[193,]),'funCallParam':([128,252,],[194,280,]),'body1':([134,199,],[198,256,]),'stmt':([134,161,199,215,],[199,215,199,215,]),'return':([134,161,199,215,],[208,208,208,208,]),'function4':([161,215,],[214,267,]),'function9':([167,219,],[218,270,]),'closeP':([175,],[223,]),'loper':([176,],[225,]),'condition1':([188,288,],[237,295,]),'elseif':([188,288,],[238,238,]),'else':([188,288,],[239,239,]),'close_condition':([189,],[243,]),'read1':([191,],[246,]),'terminaFunCall':([193,],[249,]),'funCall3':([194,280,],[251,291,]),'return1':([209,],[258,]),'termina_fun':([214,218,],[265,269,]),'for2':([262,],[283,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON declara_vars program_fun star','program',6,'p_program','parser.py',29),
  ('program_fun -> funs','program_fun',1,'p_program_fun','parser.py',44),
  ('funs -> function_t funs','funs',2,'p_funs','parser.py',50),
  ('funs -> function_v funs','funs',2,'p_funs','parser.py',51),
  ('funs -> empty','funs',1,'p_funs','parser.py',52),
  ('star -> starI declara_vars star1 CLOSEBRACES','star',4,'p_star','parser.py',58),
  ('starI -> star_sign OPENBRACES','starI',2,'p_starI','parser.py',76),
  ('star_sign -> MULTIPLICATION','star_sign',1,'p_star_sign','parser.py',83),
  ('star1 -> stmt_v star1','star1',2,'p_star1','parser.py',92),
  ('star1 -> empty','star1',1,'p_star1','parser.py',93),
  ('declara_vars -> vars declara_vars','declara_vars',2,'p_declara_vars','parser.py',99),
  ('declara_vars -> empty','declara_vars',1,'p_declara_vars','parser.py',100),
  ('vars -> type ID dimensionada equals exp SEMICOLON','vars',6,'p_vars','parser.py',113),
  ('vars -> type ID dimensionada SEMICOLON','vars',4,'p_vars','parser.py',114),
  ('dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET','dimensionada',3,'p_dimensionada','parser.py',195),
  ('dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET','dimensionada',6,'p_dimensionada','parser.py',196),
  ('dimensionada -> empty','dimensionada',1,'p_dimensionada','parser.py',197),
  ('loop -> while','loop',1,'p_loop','parser.py',212),
  ('loop -> for_v2','loop',1,'p_loop','parser.py',213),
  ('stmt -> assignment','stmt',1,'p_stmt','parser.py',219),
  ('stmt -> condition','stmt',1,'p_stmt','parser.py',220),
  ('stmt -> print','stmt',1,'p_stmt','parser.py',221),
  ('stmt -> loop','stmt',1,'p_stmt','parser.py',222),
  ('stmt -> read','stmt',1,'p_stmt','parser.py',223),
  ('stmt -> graphstmt','stmt',1,'p_stmt','parser.py',224),
  ('stmt -> funCall SEMICOLON','stmt',2,'p_stmt','parser.py',225),
  ('stmt -> return','stmt',1,'p_stmt','parser.py',226),
  ('stmt_v -> assignment','stmt_v',1,'p_stmt_v','parser.py',231),
  ('stmt_v -> condition','stmt_v',1,'p_stmt_v','parser.py',232),
  ('stmt_v -> print','stmt_v',1,'p_stmt_v','parser.py',233),
  ('stmt_v -> loop','stmt_v',1,'p_stmt_v','parser.py',234),
  ('stmt_v -> read','stmt_v',1,'p_stmt_v','parser.py',235),
  ('stmt_v -> graphstmt','stmt_v',1,'p_stmt_v','parser.py',236),
  ('stmt_v -> funCall SEMICOLON','stmt_v',2,'p_stmt_v','parser.py',237),
  ('assignment -> id equals assignment3 SEMICOLON','assignment',4,'p_assignment','parser.py',242),
  ('assignment3 -> exp','assignment3',1,'p_assignment3','parser.py',259),
  ('assignment3 -> read','assignment3',1,'p_assignment3','parser.py',260),
  ('vcte -> cte_int','vcte',1,'p_vcte','parser.py',268),
  ('vcte -> cte_float','vcte',1,'p_vcte','parser.py',269),
  ('vcte -> cte_string','vcte',1,'p_vcte','parser.py',270),
  ('vcte -> id','vcte',1,'p_vcte','parser.py',271),
  ('vcte -> funCall','vcte',1,'p_vcte','parser.py',272),
  ('vcte -> vectormatriz','vcte',1,'p_vcte','parser.py',273),
  ('vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET','vectormatriz',3,'p_vectormatriz','parser.py',288),
  ('vectormatriz -> vm1','vectormatriz',1,'p_vectormatriz','parser.py',289),
  ('vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1','vm1',5,'p_vm1','parser.py',298),
  ('vm1 -> OPENBRACKET vm2 CLOSEBRACKET','vm1',3,'p_vm1','parser.py',299),
  ('vm2 -> exp COMMA vm2','vm2',3,'p_vm2','parser.py',311),
  ('vm2 -> exp','vm2',1,'p_vm2','parser.py',312),
  ('vm2 -> empty','vm2',1,'p_vm2','parser.py',313),
  ('functionI -> type ID','functionI',2,'p_functionI','parser.py',324),
  ('functionV -> VOID ID','functionV',2,'p_functionV','parser.py',339),
  ('function_t -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun','function_t',7,'p_function_t','parser.py',352),
  ('function_v -> FUN functionV function2 inicia_fun declara_vars function9 termina_fun','function_v',7,'p_function_v','parser.py',374),
  ('inicia_fun -> OPENBRACES','inicia_fun',1,'p_inicia_fun','parser.py',393),
  ('termina_fun -> CLOSEBRACES','termina_fun',1,'p_termina_fun','parser.py',399),
  ('function2 -> OPENPAREN function3 CLOSEPAREN','function2',3,'p_function2','parser.py',404),
  ('function3 -> funParam function5','function3',2,'p_function3','parser.py',409),
  ('function3 -> empty','function3',1,'p_function3','parser.py',410),
  ('function4 -> stmt function4','function4',2,'p_function4','parser.py',421),
  ('function4 -> empty','function4',1,'p_function4','parser.py',422),
  ('function9 -> stmt_v function9','function9',2,'p_function9','parser.py',430),
  ('function9 -> empty','function9',1,'p_function9','parser.py',431),
  ('function5 -> COMMA funParam function5','function5',3,'p_function5','parser.py',439),
  ('function5 -> empty','function5',1,'p_function5','parser.py',440),
  ('funParam -> type ID','funParam',2,'p_funParam','parser.py',448),
  ('type -> INT','type',1,'p_type','parser.py',466),
  ('type -> FLOAT','type',1,'p_type','parser.py',467),
  ('type -> STRING','type',1,'p_type','parser.py',468),
  ('print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON','print',5,'p_print','parser.py',476),
  ('read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON','read',6,'p_read','parser.py',484),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET','read1',6,'p_read1','parser.py',492),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET','read1',3,'p_read1','parser.py',493),
  ('read1 -> empty','read1',1,'p_read1','parser.py',494),
  ('equals -> EQUALS','equals',1,'p_equals','parser.py',499),
  ('indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET','indice_dimensionada',6,'p_indice_dimensionada','parser.py',506),
  ('indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET','indice_dimensionada',3,'p_indice_dimensionada','parser.py',507),
  ('indice_dimensionada -> empty','indice_dimensionada',1,'p_indice_dimensionada','parser.py',508),
  ('id -> ID indice_dimensionada','id',2,'p_id','parser.py',518),
  ('funCall -> ID iniciaFunCall funCall2 terminaFunCall','funCall',4,'p_funCall','parser.py',557),
  ('iniciaFunCall -> OPENPAREN','iniciaFunCall',1,'p_iniciaFunCall','parser.py',593),
  ('terminaFunCall -> CLOSEPAREN','terminaFunCall',1,'p_terminaFunCall','parser.py',602),
  ('funCall2 -> funCallParam funCall3','funCall2',2,'p_funCall2','parser.py',609),
  ('funCall2 -> empty','funCall2',1,'p_funCall2','parser.py',610),
  ('funCall3 -> COMMA funCallParam funCall3','funCall3',3,'p_funCall3','parser.py',625),
  ('funCall3 -> empty','funCall3',1,'p_funCall3','parser.py',626),
  ('funCallParam -> exp','funCallParam',1,'p_funCallParam','parser.py',636),
  ('cte_int -> negativo CTEINT','cte_int',2,'p_cte_int','parser.py',667),
  ('cte_float -> negativo CTEFLOAT','cte_float',2,'p_cte_float','parser.py',684),
  ('cte_string -> CTESTRING','cte_string',1,'p_cte_string','parser.py',701),
  ('return -> RETURN return1 SEMICOLON','return',3,'p_return','parser.py',712),
  ('return1 -> vcte','return1',1,'p_return1','parser.py',721),
  ('return1 -> exp','return1',1,'p_return1','parser.py',722),
  ('loper -> GREATER','loper',1,'p_loper','parser.py',730),
  ('loper -> LESS','loper',1,'p_loper','parser.py',731),
  ('loper -> GREATEREQ','loper',1,'p_loper','parser.py',732),
  ('loper -> LESSEQ','loper',1,'p_loper','parser.py',733),
  ('loper -> NOTEQUAL','loper',1,'p_loper','parser.py',734),
  ('loper -> ISEQUAL','loper',1,'p_loper','parser.py',735),
  ('condition -> IF head_cond body condition1','condition',4,'p_condition','parser.py',744),
  ('condition1 -> elseif head_cond body condition1','condition1',4,'p_condition1','parser.py',753),
  ('condition1 -> else body','condition1',2,'p_condition1','parser.py',754),
  ('condition1 -> empty','condition1',1,'p_condition1','parser.py',755),
  ('elseif -> ELSEIF','elseif',1,'p_elseif','parser.py',764),
  ('else -> ELSE','else',1,'p_else','parser.py',771),
  ('head_cond -> OPENPAREN expression close_condition','head_cond',3,'p_head_cond','parser.py',783),
  ('body -> OPENBRACES body1 CLOSEBRACES','body',3,'p_body','parser.py',790),
  ('close_condition -> CLOSEPAREN','close_condition',1,'p_close_condition','parser.py',797),
  ('body1 -> stmt body1','body1',2,'p_body1','parser.py',805),
  ('body1 -> empty','body1',1,'p_body1','parser.py',806),
  ('for_v2 -> nuevo_for forBody','for_v2',2,'p_for_v2','parser.py',819),
  ('nuevo_for -> FOR OPENPAREN ID TWODOTS for2 CLOSEPAREN','nuevo_for',6,'p_nuevo_for','parser.py',849),
  ('for -> FOR for1 TWODOTS for2 forClose forBody','for',6,'p_for','parser.py',889),
  ('forInit -> FOR','forInit',1,'p_forInit','parser.py',912),
  ('for1 -> OPENPAREN ID','for1',2,'p_for1','parser.py',920),
  ('for2 -> exp','for2',1,'p_for2','parser.py',930),
  ('forClose -> CLOSEPAREN','forClose',1,'p_forClose','parser.py',937),
  ('forBody -> body','forBody',1,'p_forBody','parser.py',946),
  ('while -> while1 body','while',2,'p_while','parser.py',954),
  ('while1 -> while_w OPENPAREN expression CLOSEPAREN','while1',4,'p_while1','parser.py',967),
  ('while_w -> WHILE','while_w',1,'p_while_w','parser.py',974),
  ('dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN','dosExp',5,'p_dosExp','parser.py',983),
  ('unaExp -> OPENPAREN exp CLOSEPAREN','unaExp',3,'p_unaExp','parser.py',990),
  ('graphstmt -> graphfig','graphstmt',1,'p_graphstmt','parser.py',996),
  ('graphstmt -> graphview','graphstmt',1,'p_graphstmt','parser.py',997),
  ('graphstmt -> graphmove','graphstmt',1,'p_graphstmt','parser.py',998),
  ('graphfig -> graphfig1 SEMICOLON','graphfig',2,'p_graphfig','parser.py',1004),
  ('graphfig -> graphfig2 SEMICOLON','graphfig',2,'p_graphfig','parser.py',1005),
  ('graphfig1 -> CIRCLE unaExp','graphfig1',2,'p_graphfig1','parser.py',1010),
  ('graphfig1 -> SQUARE unaExp','graphfig1',2,'p_graphfig1','parser.py',1011),
  ('graphfig1 -> TRIANGLE unaExp','graphfig1',2,'p_graphfig1','parser.py',1012),
  ('graphfig2 -> RECTANGLE dosExp','graphfig2',2,'p_graphfig2','parser.py',1020),
  ('graphmove -> graphmove0 SEMICOLON','graphmove',2,'p_graphmove','parser.py',1028),
  ('graphmove -> graphmove1 SEMICOLON','graphmove',2,'p_graphmove','parser.py',1029),
  ('graphmove -> graphmove2 SEMICOLON','graphmove',2,'p_graphmove','parser.py',1030),
  ('graphmove0 -> HAND_DOWN','graphmove0',1,'p_graphmove0','parser.py',1036),
  ('graphmove0 -> HAND_UP','graphmove0',1,'p_graphmove0','parser.py',1037),
  ('graphmove1 -> GO unaExp','graphmove1',2,'p_graphmove1','parser.py',1045),
  ('graphmove1 -> LEFT unaExp','graphmove1',2,'p_graphmove1','parser.py',1046),
  ('graphmove1 -> RIGHT unaExp','graphmove1',2,'p_graphmove1','parser.py',1047),
  ('graphmove1 -> BACK unaExp','graphmove1',2,'p_graphmove1','parser.py',1048),
  ('graphmove2 -> ARC dosExp','graphmove2',2,'p_graphmove2','parser.py',1055),
  ('graphview -> graphview0 SEMICOLON','graphview',2,'p_graphview','parser.py',1063),
  ('graphview -> graphview1 SEMICOLON','graphview',2,'p_graphview','parser.py',1064),
  ('graphview -> graphview2 SEMICOLON','graphview',2,'p_graphview','parser.py',1065),
  ('graphview0 -> HIDE_STAR','graphview0',1,'p_graphview0','parser.py',1070),
  ('graphview0 -> SHOW_STAR','graphview0',1,'p_graphview0','parser.py',1071),
  ('graphview1 -> COLOR_STAR unaExp','graphview1',2,'p_graphview1','parser.py',1078),
  ('graphview1 -> SIZE_STAR unaExp','graphview1',2,'p_graphview1','parser.py',1079),
  ('graphview2 -> POSITION dosExp','graphview2',2,'p_graphview2','parser.py',1086),
  ('expression -> exp loper exp','expression',3,'p_expression','parser.py',1094),
  ('expression -> exp','expression',1,'p_expression','parser.py',1095),
  ('exp -> term','exp',1,'p_exp','parser.py',1106),
  ('exp -> term exp_o exp','exp',3,'p_exp','parser.py',1107),
  ('exp_o -> ADDITION','exp_o',1,'p_exp_o','parser.py',1119),
  ('exp_o -> SUBSTRACTION','exp_o',1,'p_exp_o','parser.py',1120),
  ('openP -> OPENPAREN','openP',1,'p_openP','parser.py',1126),
  ('closeP -> CLOSEPAREN','closeP',1,'p_closeP','parser.py',1134),
  ('term -> factor term_o term','term',3,'p_term','parser.py',1142),
  ('term -> factor','term',1,'p_term','parser.py',1143),
  ('term_o -> MULTIPLICATION','term_o',1,'p_term_o','parser.py',1158),
  ('term_o -> DIVISION','term_o',1,'p_term_o','parser.py',1159),
  ('factor -> vcte','factor',1,'p_factor','parser.py',1167),
  ('factor -> openP expression closeP','factor',3,'p_factor','parser.py',1168),
  ('negativo -> SUBSTRACTION','negativo',1,'p_negativo','parser.py',1181),
  ('negativo -> empty','negativo',1,'p_negativo','parser.py',1182),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',1202),
]
