
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDITION AND ARC BACK CHAR CIRCLE CLOSEBRACES CLOSEBRACKET CLOSEPAREN COLOR_STAR COMMA CTECHAR CTEFLOAT CTEINT DIVISION ELSE ELSEIF EQUALS FLOAT FOR FUN GO GREATER HAND_DOWN HAND_UP HIDE_STAR ID IF INT ISEQUAL LEFT LESS MULTIPLICATION NOTEQUAL OPENBRACES OPENBRACKET OPENPAREN OR PRINT PROGRAM READ RECTANGLE REPEAT RETURN RIGHT SEMICOLON SETXY SHOW_STAR SIMPLEQUOTES SIZE_STAR SQUARE SUBSTRACTION TRIANGLE TWODOTS VARS VOID WHILE\n    program : PROGRAM ID SEMICOLON program1 program2 star\n    \n    program1 : vars\n            | empty\n    \n    program2 : function program2\n            | empty\n    \n    star : MULTIPLICATION OPENBRACES star2 star1 CLOSEBRACES\n    \n    star1 : stmt star1\n        | empty\n    \n    star2 : vars\n          | empty\n    \n    loop : while\n        | for\n    \n    stmt : assignment\n        | condition\n        | print\n        | loop\n        | read\n        | graphstmt\n        | graphr\n        | funCall\n        | return\n    \n    vars : VARS type ID vars1 SEMICOLON\n    \n    vars1 : EQUALS exp vars2\n        | OPENBRACKET CTEINT CLOSEBRACKET vars3\n        | empty vars2\n    \n    vars2 : COMMA ID vars1\n          | COMMA vars4\n          | empty\n    \n    vars3 : OPENBRACKET CTEINT CLOSEBRACKET\n        | empty\n    \n    vars4 : type ID vars1\n          | empty\n    \n    type : INT\n         | FLOAT\n         | CHAR\n    \n    print : PRINT OPENPAREN exp CLOSEPAREN SEMICOLON\n    \n    read : READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON\n    \n    read1 : OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET\n              | OPENBRACKET exp CLOSEBRACKET\n              | empty\n    \n    assignment : ID assignment1 EQUALS assignment3 SEMICOLON\n    \n    assignment1 : assignment2\n                | assignment2 assignment1\n                | empty\n    \n    assignment2 : OPENBRACKET exp CLOSEBRACKET\n    \n    assignment3 : exp\n                | read\n    \n    vcte : cte\n        | ID vcte1\n        | funCall\n    \n    vcte1 : OPENBRACKET exp CLOSEBRACKET vcte3\n          | empty\n    \n    vcte3 : OPENBRACKET exp CLOSEBRACKET\n        | empty\n\n    \n    cte : CTEINT\n        | CTEFLOAT\n        | CTECHAR\n    \n    return : RETURN return1 SEMICOLON\n    \n    return1 : vcte\n            | exp\n    \n    expression : exp expression1\n    \n    expression1 : loper exp\n             | empty\n    \n    loper : GREATER\n          | LESS\n          | NOTEQUAL\n          | ISEQUAL\n    \n    logical : expression logical1 expression\n    \n    logical1 : OR\n             | AND\n    \n    condition : IF head body condition1\n    \n    condition1 : ELSEIF head body condition1\n               | ELSE body\n               | empty\n    \n    head : OPENPAREN head1 CLOSEPAREN\n    \n    head1 : expression\n          | logical\n    \n    body : OPENBRACES body1 CLOSEBRACES\n    \n    body1 : stmt body1\n          | empty\n    \n    for : FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body\n    \n    while : WHILE  head body\n    \n    funCall : ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON\n    \n    funCall2 : exp funCall3\n             | empty\n    \n    funCall3 : COMMA exp funCall2\n             | empty\n    \n    function : FUN function1 ID function2 OPENBRACES function6 function4 CLOSEBRACES\n    \n    function1 : type\n              | VOID\n    \n    function2 : OPENPAREN function3 CLOSEPAREN\n    \n    function3 : type ID function5\n              | empty\n    \n    function4 : stmt function4\n              | empty\n    \n    function5 : COMMA type ID function3\n    \n    function6 : vars\n              | empty\n    \n    laRegla : OPENPAREN exp COMMA exp CLOSEPAREN\n    \n    laRegla2 : OPENPAREN exp CLOSEPAREN\n    \n    graphstmt : graphfig\n             | graphview\n             | graphmove\n    \n    graphfig : graphfig1 SEMICOLON\n    \n    graphfig1 : CIRCLE laRegla2\n            | SQUARE laRegla2\n            | TRIANGLE laRegla\n            | RECTANGLE laRegla\n    \n    graphmove :  graphmove1  SEMICOLON\n    \n    graphmove1 : HAND_DOWN\n              | HAND_UP\n              | graphmove2\n    \n    graphmove2 : GO laRegla2\n              | LEFT laRegla2\n              | RIGHT laRegla2\n              | BACK laRegla2\n              | ARC laRegla\n    \n    graphr : REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES\n    \n    graphr1 : graphstmt graphr1\n           | empty\n    \n    graphview : graphview1 SEMICOLON\n    \n    graphview1 : HIDE_STAR\n              | SHOW_STAR\n              | graphview2 exp\n    \n    graphview2 : SETXY graphview3\n              | COLOR_STAR\n              | SIZE_STAR\n    \n    graphview3 : exp COMMA\n              | laRegla\n    \n    exp : term exp1\n    \n    exp1 : ADDITION exp\n         | SUBSTRACTION exp\n         | empty\n    \n    factor : vcte\n           | factor1\n    \n    factor1 : factor2 vcte\n            | OPENPAREN expression CLOSEPAREN\n    \n    factor2 : ADDITION\n            | SUBSTRACTION\n    \n    term : factor term1\n    \n    term1 : MULTIPLICATION term\n          | DIVISION term\n          | empty\n    empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program1':([4,],[5,]),'vars':([4,24,101,],[6,31,162,]),'empty':([4,5,10,23,24,29,30,34,36,37,38,42,54,56,67,101,115,120,121,122,129,161,171,186,190,191,196,204,206,214,227,237,245,259,264,267,],[7,11,11,29,32,52,57,104,52,109,113,117,125,57,130,163,172,177,184,29,130,207,213,29,225,228,236,177,207,248,228,261,172,261,104,225,]),'program2':([5,10,],[9,19,]),'function':([5,10,],[10,10,]),'type':([8,12,34,54,209,264,],[13,21,103,124,243,103,]),'star':([9,],[17,]),'function1':([12,],[20,]),'vars1':([23,122,186,],[26,185,217,]),'star2':([24,],[30,]),'function2':([25,],[33,]),'exp':([27,45,76,77,89,93,107,108,115,116,131,133,134,146,149,155,176,187,212,230,235,238,240,245,246,277,],[36,120,136,139,151,153,166,167,171,173,189,120,195,201,202,204,215,219,245,120,258,262,263,171,266,279,]),'term':([27,45,76,77,89,93,107,108,111,112,115,116,131,133,134,146,149,155,176,187,212,230,235,238,240,245,246,277,],[37,37,37,37,37,37,37,37,168,169,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'factor':([27,45,76,77,89,93,107,108,111,112,115,116,131,133,134,146,149,155,176,187,212,230,235,238,240,245,246,277,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'vcte':([27,44,45,76,77,89,93,107,108,111,112,115,116,131,133,134,146,149,155,176,187,212,230,235,238,240,245,246,277,],[39,118,39,39,138,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'factor1':([27,45,76,77,89,93,107,108,111,112,115,116,131,133,134,146,149,155,176,187,212,230,235,238,240,245,246,277,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'cte':([27,44,45,76,77,89,93,107,108,111,112,115,116,131,133,134,146,149,155,176,187,212,230,235,238,240,245,246,277,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'funCall':([27,30,44,45,56,76,77,89,93,107,108,111,112,115,116,131,133,134,146,149,155,161,176,187,191,206,212,227,230,235,238,240,245,246,277,],[43,65,43,43,65,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,65,43,43,65,65,43,65,43,43,43,43,43,43,43,]),'factor2':([27,45,76,77,89,93,107,108,111,112,115,116,131,133,134,146,149,155,176,187,212,230,235,238,240,245,246,277,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'vars2':([29,36,],[53,105,]),'star1':([30,56,],[55,127,]),'stmt':([30,56,161,191,206,227,],[56,56,206,227,206,227,]),'assignment':([30,56,161,191,206,227,],[58,58,58,58,58,58,]),'condition':([30,56,161,191,206,227,],[59,59,59,59,59,59,]),'print':([30,56,161,191,206,227,],[60,60,60,60,60,60,]),'loop':([30,56,161,191,206,227,],[61,61,61,61,61,61,]),'read':([30,56,161,187,191,206,227,],[62,62,62,220,62,62,62,]),'graphstmt':([30,56,161,191,197,206,227,237,259,],[63,63,63,63,237,63,63,259,259,]),'graphr':([30,56,161,191,206,227,],[64,64,64,64,64,64,]),'return':([30,56,161,191,206,227,],[66,66,66,66,66,66,]),'while':([30,56,161,191,206,227,],[70,70,70,70,70,70,]),'for':([30,56,161,191,206,227,],[71,71,71,71,71,71,]),'graphfig':([30,56,161,191,197,206,227,237,259,],[73,73,73,73,73,73,73,73,73,]),'graphview':([30,56,161,191,197,206,227,237,259,],[74,74,74,74,74,74,74,74,74,]),'graphmove':([30,56,161,191,197,206,227,237,259,],[75,75,75,75,75,75,75,75,75,]),'graphfig1':([30,56,161,191,197,206,227,237,259,],[80,80,80,80,80,80,80,80,80,]),'graphview1':([30,56,161,191,197,206,227,237,259,],[81,81,81,81,81,81,81,81,81,]),'graphmove1':([30,56,161,191,197,206,227,237,259,],[82,82,82,82,82,82,82,82,82,]),'graphview2':([30,56,161,191,197,206,227,237,259,],[89,89,89,89,89,89,89,89,89,]),'graphmove2':([30,56,161,191,197,206,227,237,259,],[92,92,92,92,92,92,92,92,92,]),'function3':([34,264,],[102,274,]),'exp1':([37,],[106,]),'term1':([38,],[110,]),'vcte1':([42,],[114,]),'expression':([45,133,155,230,],[119,193,119,255,]),'vars4':([54,],[123,]),'assignment1':([67,129,],[128,188,]),'assignment2':([67,129,],[129,129,]),'head':([68,78,223,],[132,140,251,]),'return1':([77,],[137,]),'laRegla2':([83,84,96,97,98,99,],[145,147,156,157,158,159,]),'laRegla':([85,86,93,100,],[148,150,154,160,]),'graphview3':([93,],[152,]),'function6':([101,],[161,]),'funCall2':([115,245,],[170,265,]),'expression1':([120,204,],[175,175,]),'loper':([120,204,],[176,176,]),'vars3':([121,],[183,]),'body':([132,140,224,251,272,],[190,199,252,267,278,]),'head1':([133,],[192,]),'logical':([133,],[194,]),'function4':([161,206,],[205,242,]),'function5':([165,],[208,]),'funCall3':([171,],[211,]),'assignment3':([187,],[218,]),'condition1':([190,267,],[222,276,]),'body1':([191,227,],[226,254,]),'logical1':([193,],[230,]),'read1':([196,],[234,]),'vcte3':([214,],[247,]),'graphr1':([237,259,],[260,270,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON program1 program2 star','program',6,'p_program','parser.py',16),
  ('program1 -> vars','program1',1,'p_program1','parser.py',22),
  ('program1 -> empty','program1',1,'p_program1','parser.py',23),
  ('program2 -> function program2','program2',2,'p_program2','parser.py',28),
  ('program2 -> empty','program2',1,'p_program2','parser.py',29),
  ('star -> MULTIPLICATION OPENBRACES star2 star1 CLOSEBRACES','star',5,'p_star','parser.py',35),
  ('star1 -> stmt star1','star1',2,'p_star1','parser.py',41),
  ('star1 -> empty','star1',1,'p_star1','parser.py',42),
  ('star2 -> vars','star2',1,'p_star2','parser.py',47),
  ('star2 -> empty','star2',1,'p_star2','parser.py',48),
  ('loop -> while','loop',1,'p_loop','parser.py',55),
  ('loop -> for','loop',1,'p_loop','parser.py',56),
  ('stmt -> assignment','stmt',1,'p_stmt','parser.py',63),
  ('stmt -> condition','stmt',1,'p_stmt','parser.py',64),
  ('stmt -> print','stmt',1,'p_stmt','parser.py',65),
  ('stmt -> loop','stmt',1,'p_stmt','parser.py',66),
  ('stmt -> read','stmt',1,'p_stmt','parser.py',67),
  ('stmt -> graphstmt','stmt',1,'p_stmt','parser.py',68),
  ('stmt -> graphr','stmt',1,'p_stmt','parser.py',69),
  ('stmt -> funCall','stmt',1,'p_stmt','parser.py',70),
  ('stmt -> return','stmt',1,'p_stmt','parser.py',71),
  ('vars -> VARS type ID vars1 SEMICOLON','vars',5,'p_vars','parser.py',78),
  ('vars1 -> EQUALS exp vars2','vars1',3,'p_vars1','parser.py',84),
  ('vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3','vars1',4,'p_vars1','parser.py',85),
  ('vars1 -> empty vars2','vars1',2,'p_vars1','parser.py',86),
  ('vars2 -> COMMA ID vars1','vars2',3,'p_vars2','parser.py',92),
  ('vars2 -> COMMA vars4','vars2',2,'p_vars2','parser.py',93),
  ('vars2 -> empty','vars2',1,'p_vars2','parser.py',94),
  ('vars3 -> OPENBRACKET CTEINT CLOSEBRACKET','vars3',3,'p_vars3','parser.py',100),
  ('vars3 -> empty','vars3',1,'p_vars3','parser.py',101),
  ('vars4 -> type ID vars1','vars4',3,'p_vars4','parser.py',107),
  ('vars4 -> empty','vars4',1,'p_vars4','parser.py',108),
  ('type -> INT','type',1,'p_type','parser.py',115),
  ('type -> FLOAT','type',1,'p_type','parser.py',116),
  ('type -> CHAR','type',1,'p_type','parser.py',117),
  ('print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON','print',5,'p_print','parser.py',124),
  ('read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON','read',6,'p_read','parser.py',130),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET','read1',6,'p_read1','parser.py',136),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET','read1',3,'p_read1','parser.py',137),
  ('read1 -> empty','read1',1,'p_read1','parser.py',138),
  ('assignment -> ID assignment1 EQUALS assignment3 SEMICOLON','assignment',5,'p_assignment','parser.py',145),
  ('assignment1 -> assignment2','assignment1',1,'p_assignment1','parser.py',152),
  ('assignment1 -> assignment2 assignment1','assignment1',2,'p_assignment1','parser.py',153),
  ('assignment1 -> empty','assignment1',1,'p_assignment1','parser.py',154),
  ('assignment2 -> OPENBRACKET exp CLOSEBRACKET','assignment2',3,'p_assignment2','parser.py',161),
  ('assignment3 -> exp','assignment3',1,'p_assignment3','parser.py',168),
  ('assignment3 -> read','assignment3',1,'p_assignment3','parser.py',169),
  ('vcte -> cte','vcte',1,'p_vcte','parser.py',177),
  ('vcte -> ID vcte1','vcte',2,'p_vcte','parser.py',178),
  ('vcte -> funCall','vcte',1,'p_vcte','parser.py',179),
  ('vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3','vcte1',4,'p_vcte1','parser.py',189),
  ('vcte1 -> empty','vcte1',1,'p_vcte1','parser.py',190),
  ('vcte3 -> OPENBRACKET exp CLOSEBRACKET','vcte3',3,'p_vcte3','parser.py',195),
  ('vcte3 -> empty','vcte3',1,'p_vcte3','parser.py',196),
  ('cte -> CTEINT','cte',1,'p_cte','parser.py',203),
  ('cte -> CTEFLOAT','cte',1,'p_cte','parser.py',204),
  ('cte -> CTECHAR','cte',1,'p_cte','parser.py',205),
  ('return -> RETURN return1 SEMICOLON','return',3,'p_return','parser.py',211),
  ('return1 -> vcte','return1',1,'p_return1','parser.py',217),
  ('return1 -> exp','return1',1,'p_return1','parser.py',218),
  ('expression -> exp expression1','expression',2,'p_expression','parser.py',225),
  ('expression1 -> loper exp','expression1',2,'p_expression1','parser.py',231),
  ('expression1 -> empty','expression1',1,'p_expression1','parser.py',232),
  ('loper -> GREATER','loper',1,'p_loper','parser.py',239),
  ('loper -> LESS','loper',1,'p_loper','parser.py',240),
  ('loper -> NOTEQUAL','loper',1,'p_loper','parser.py',241),
  ('loper -> ISEQUAL','loper',1,'p_loper','parser.py',242),
  ('logical -> expression logical1 expression','logical',3,'p_logical','parser.py',249),
  ('logical1 -> OR','logical1',1,'p_logical1','parser.py',255),
  ('logical1 -> AND','logical1',1,'p_logical1','parser.py',256),
  ('condition -> IF head body condition1','condition',4,'p_condition','parser.py',263),
  ('condition1 -> ELSEIF head body condition1','condition1',4,'p_condition1','parser.py',269),
  ('condition1 -> ELSE body','condition1',2,'p_condition1','parser.py',270),
  ('condition1 -> empty','condition1',1,'p_condition1','parser.py',271),
  ('head -> OPENPAREN head1 CLOSEPAREN','head',3,'p_head','parser.py',278),
  ('head1 -> expression','head1',1,'p_head1','parser.py',284),
  ('head1 -> logical','head1',1,'p_head1','parser.py',285),
  ('body -> OPENBRACES body1 CLOSEBRACES','body',3,'p_body','parser.py',291),
  ('body1 -> stmt body1','body1',2,'p_body1','parser.py',296),
  ('body1 -> empty','body1',1,'p_body1','parser.py',297),
  ('for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body','for',7,'p_for','parser.py',304),
  ('while -> WHILE head body','while',3,'p_while','parser.py',311),
  ('funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON','funCall',5,'p_funCall','parser.py',318),
  ('funCall2 -> exp funCall3','funCall2',2,'p_funCall2','parser.py',324),
  ('funCall2 -> empty','funCall2',1,'p_funCall2','parser.py',325),
  ('funCall3 -> COMMA exp funCall2','funCall3',3,'p_funCall3','parser.py',330),
  ('funCall3 -> empty','funCall3',1,'p_funCall3','parser.py',331),
  ('function -> FUN function1 ID function2 OPENBRACES function6 function4 CLOSEBRACES','function',8,'p_function','parser.py',337),
  ('function1 -> type','function1',1,'p_function1','parser.py',342),
  ('function1 -> VOID','function1',1,'p_function1','parser.py',343),
  ('function2 -> OPENPAREN function3 CLOSEPAREN','function2',3,'p_function2','parser.py',351),
  ('function3 -> type ID function5','function3',3,'p_function3','parser.py',356),
  ('function3 -> empty','function3',1,'p_function3','parser.py',357),
  ('function4 -> stmt function4','function4',2,'p_function4','parser.py',362),
  ('function4 -> empty','function4',1,'p_function4','parser.py',363),
  ('function5 -> COMMA type ID function3','function5',4,'p_function5','parser.py',367),
  ('function6 -> vars','function6',1,'p_function6','parser.py',372),
  ('function6 -> empty','function6',1,'p_function6','parser.py',373),
  ('laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN','laRegla',5,'p_laRegla','parser.py',379),
  ('laRegla2 -> OPENPAREN exp CLOSEPAREN','laRegla2',3,'p_laRegla2','parser.py',385),
  ('graphstmt -> graphfig','graphstmt',1,'p_graphstmt','parser.py',392),
  ('graphstmt -> graphview','graphstmt',1,'p_graphstmt','parser.py',393),
  ('graphstmt -> graphmove','graphstmt',1,'p_graphstmt','parser.py',394),
  ('graphfig -> graphfig1 SEMICOLON','graphfig',2,'p_graphfig','parser.py',400),
  ('graphfig1 -> CIRCLE laRegla2','graphfig1',2,'p_graphfig1','parser.py',405),
  ('graphfig1 -> SQUARE laRegla2','graphfig1',2,'p_graphfig1','parser.py',406),
  ('graphfig1 -> TRIANGLE laRegla','graphfig1',2,'p_graphfig1','parser.py',407),
  ('graphfig1 -> RECTANGLE laRegla','graphfig1',2,'p_graphfig1','parser.py',408),
  ('graphmove -> graphmove1 SEMICOLON','graphmove',2,'p_graphmove','parser.py',414),
  ('graphmove1 -> HAND_DOWN','graphmove1',1,'p_graphmove1','parser.py',419),
  ('graphmove1 -> HAND_UP','graphmove1',1,'p_graphmove1','parser.py',420),
  ('graphmove1 -> graphmove2','graphmove1',1,'p_graphmove1','parser.py',421),
  ('graphmove2 -> GO laRegla2','graphmove2',2,'p_graphmove2','parser.py',426),
  ('graphmove2 -> LEFT laRegla2','graphmove2',2,'p_graphmove2','parser.py',427),
  ('graphmove2 -> RIGHT laRegla2','graphmove2',2,'p_graphmove2','parser.py',428),
  ('graphmove2 -> BACK laRegla2','graphmove2',2,'p_graphmove2','parser.py',429),
  ('graphmove2 -> ARC laRegla','graphmove2',2,'p_graphmove2','parser.py',430),
  ('graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES','graphr',6,'p_graphr','parser.py',436),
  ('graphr1 -> graphstmt graphr1','graphr1',2,'p_graphr1','parser.py',441),
  ('graphr1 -> empty','graphr1',1,'p_graphr1','parser.py',442),
  ('graphview -> graphview1 SEMICOLON','graphview',2,'p_graphview','parser.py',448),
  ('graphview1 -> HIDE_STAR','graphview1',1,'p_graphview1','parser.py',453),
  ('graphview1 -> SHOW_STAR','graphview1',1,'p_graphview1','parser.py',454),
  ('graphview1 -> graphview2 exp','graphview1',2,'p_graphview1','parser.py',455),
  ('graphview2 -> SETXY graphview3','graphview2',2,'p_graphview2','parser.py',460),
  ('graphview2 -> COLOR_STAR','graphview2',1,'p_graphview2','parser.py',461),
  ('graphview2 -> SIZE_STAR','graphview2',1,'p_graphview2','parser.py',462),
  ('graphview3 -> exp COMMA','graphview3',2,'p_graphview3','parser.py',467),
  ('graphview3 -> laRegla','graphview3',1,'p_graphview3','parser.py',468),
  ('exp -> term exp1','exp',2,'p_exp','parser.py',474),
  ('exp1 -> ADDITION exp','exp1',2,'p_exp1','parser.py',480),
  ('exp1 -> SUBSTRACTION exp','exp1',2,'p_exp1','parser.py',481),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',482),
  ('factor -> vcte','factor',1,'p_factor','parser.py',494),
  ('factor -> factor1','factor',1,'p_factor','parser.py',495),
  ('factor1 -> factor2 vcte','factor1',2,'p_factor1','parser.py',500),
  ('factor1 -> OPENPAREN expression CLOSEPAREN','factor1',3,'p_factor1','parser.py',501),
  ('factor2 -> ADDITION','factor2',1,'p_factor2','parser.py',506),
  ('factor2 -> SUBSTRACTION','factor2',1,'p_factor2','parser.py',507),
  ('term -> factor term1','term',2,'p_term','parser.py',513),
  ('term1 -> MULTIPLICATION term','term1',2,'p_term1','parser.py',519),
  ('term1 -> DIVISION term','term1',2,'p_term1','parser.py',520),
  ('term1 -> empty','term1',1,'p_term1','parser.py',521),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',526),
]
