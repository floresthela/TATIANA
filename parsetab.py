
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programADDITION ARC BACK BEGINFILL CIRCLE CLEAR CLOSEBRACES CLOSEBRACKET CLOSEPAREN COLOR_STAR COMMA CTEFLOAT CTEINT CTESTRING DIVISION ELSE ELSEIF ENDFILL EQUALS EXITONCLICK FLOAT FOR FUN GO GREATER GREATEREQ HAND_DOWN HAND_UP HIDE_STAR ID IF INT ISEQUAL LEFT LESS LESSEQ MULTIPLICATION NOTEQUAL OPENBRACES OPENBRACKET OPENPAREN POSITION PRINT PROGRAM READ RECTANGLE RETURN RIGHT SEMICOLON SHOW_STAR SIZE_STAR SPEED SQUARE STRING SUBSTRACTION TRIANGLE TWODOTS VOID WHILE\n    program : PROGRAM ID SEMICOLON declara_vars program_fun star\n    \n    program_fun : funs\n    \n    funs : function_t funs\n         | function_v funs\n         | empty\n    \n    star : starI declara_vars star1 CLOSEBRACES\n    \n    starI : star_sign OPENBRACES\n    \n    star_sign : MULTIPLICATION\n    \n    star1 : stmt_v star1\n        | empty\n    \n    declara_vars : vars declara_vars\n          | empty\n    \n    vars : type ID dimensionada equals exp SEMICOLON\n         | type ID dimensionada SEMICOLON\n    \n    dimensionada : OPENBRACKET CTEINT CLOSEBRACKET\n           | OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET\n           | empty\n    \n    loop : while\n         | for_v2\n    \n    stmt : assignment\n        | condition\n        | print\n        | loop\n        | read\n        | graphstmt\n        | funCall SEMICOLON\n        | return\n    \n    stmt_v : assignment\n        | condition\n        | print\n        | loop\n        | read\n        | graphstmt\n        | funCall SEMICOLON\n    \n    assignment : id equals assignment3 SEMICOLON\n    \n    assignment3 : exp\n                | read\n    \n    vcte : cte_int\n         | cte_float\n         | cte_string\n         | id\n         | funCall\n         | vectormatriz\n    \n    vectormatriz : OPENBRACKET vm1 CLOSEBRACKET\n                 | vm1\n    \n    vm1 : OPENBRACKET vm2 CLOSEBRACKET COMMA vm1\n        | OPENBRACKET vm2 CLOSEBRACKET\n    \n    vm2 : exp COMMA vm2\n        | exp\n        | empty\n    \n    functionI : type ID\n    \n    functionV : VOID ID\n    \n    function_t : FUN functionI function2 inicia_fun declara_vars function4 termina_fun\n    \n    function_v : FUN functionV function2 inicia_fun declara_vars function9 termina_fun\n    \n    inicia_fun : OPENBRACES\n    \n    termina_fun : CLOSEBRACES\n    \n    function2 : OPENPAREN function3 CLOSEPAREN\n    \n    function3 : funParam function5\n              | empty\n    \n    function4 : stmt function4\n              | empty\n    \n    function9 : stmt_v function9\n              | empty\n    \n    function5 : COMMA funParam function5\n              | empty\n    \n    funParam : type ID\n    \n    type : INT\n         | FLOAT\n         | STRING\n    \n    print : PRINT OPENPAREN expression CLOSEPAREN SEMICOLON\n    \n    read : READ OPENPAREN id read1 CLOSEPAREN SEMICOLON\n    \n    read1 : OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET\n          | OPENBRACKET exp CLOSEBRACKET\n          | empty\n    \n    equals : EQUALS\n    \n    indice_dimensionada : OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET\n                        | OPENBRACKET exp CLOSEBRACKET\n                        | empty\n\n    \n    aidi : ID\n    \n    id : aidi indice_dimensionada\n    \n    funCall : ID iniciaFunCall funCall2 terminaFunCall\n    \n    iniciaFunCall : OPENPAREN\n    \n    terminaFunCall : CLOSEPAREN\n    \n    funCall2 : funCallParam funCall3\n             | empty\n    \n    funCall3 : COMMA funCallParam funCall3\n             | empty\n    \n    funCallParam : exp\n    \n    cte_int : negativo CTEINT\n    \n    cte_float : negativo CTEFLOAT\n    \n    cte_string : CTESTRING\n    \n    return : RETURN return1 SEMICOLON\n    \n    return1 : vcte\n            | exp\n    \n    loper : GREATER\n          | LESS\n          | GREATEREQ\n          | LESSEQ\n          | NOTEQUAL\n          | ISEQUAL\n    \n    condition : IF head_cond body condition1\n    \n    condition1 : elseif head_cond body condition1\n               | else body\n               | empty\n    \n    elseif : ELSEIF\n    \n    else : ELSE\n    \n    head_cond : OPENPAREN expression close_condition\n    \n    body : OPENBRACES body1 CLOSEBRACES\n    \n    close_condition : CLOSEPAREN\n    \n    body1 : stmt body1\n          | empty\n    \n    for_v2 : nuevo_for forBody\n    \n    nuevo_for : FOR OPENPAREN ID TWODOTS for2 CLOSEPAREN\n    \n    for : FOR for1 TWODOTS for2 forClose forBody\n    \n    forInit : FOR\n    \n    for1 : OPENPAREN ID\n    \n    for2 : exp\n    \n    forClose : CLOSEPAREN\n    \n    forBody : body\n    \n    while : while1 body\n    \n    while1 : while_w OPENPAREN expression CLOSEPAREN\n    \n    while_w : WHILE\n    \n    dosExp : OPENPAREN exp COMMA exp CLOSEPAREN\n    \n    unaExp : OPENPAREN exp CLOSEPAREN\n    \n    graphstmt : graphfig\n             | graphview\n             | graphmove\n    \n    graphfig : graphfig1 SEMICOLON\n             | graphfig2 SEMICOLON\n    \n    graphfig1 : CIRCLE unaExp\n            | SQUARE unaExp\n            | TRIANGLE unaExp\n    \n    graphfig2 : RECTANGLE dosExp\n    \n    graphmove : graphmove0  SEMICOLON\n              | graphmove1 SEMICOLON\n              | graphmove2 SEMICOLON\n    \n    graphmove0 : HAND_DOWN\n              | HAND_UP\n    \n    graphmove1 : GO unaExp\n              | LEFT unaExp\n              | RIGHT unaExp\n              | BACK unaExp\n    \n    graphmove2 : ARC dosExp\n    \n    graphview : graphview0 SEMICOLON\n              | graphview1 SEMICOLON\n              | graphview2 SEMICOLON\n    \n    graphview0 : HIDE_STAR\n              | SHOW_STAR\n              | EXITONCLICK\n              | CLEAR\n              | BEGINFILL\n              | ENDFILL\n    \n    graphview1 : COLOR_STAR unaExp\n              | SIZE_STAR unaExp\n              | SPEED unaExp\n    \n    graphview2 : POSITION dosExp\n    \n    expression : exp loper exp\n               | exp\n    \n    exp : term\n        | term exp_o exp\n    \n    exp_o : ADDITION\n          | SUBSTRACTION\n    \n    openP : OPENPAREN\n    \n    closeP : CLOSEPAREN\n    \n    term : factor term_o term\n         | factor\n    \n    term_o : MULTIPLICATION\n           | DIVISION\n    \n    factor : vcte\n           | openP expression closeP\n    \n    negativo : SUBSTRACTION\n             | empty\n    empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,20,125,],[0,-1,-6,]),'ID':([2,6,7,8,9,10,11,18,21,28,29,33,34,40,41,42,45,47,48,49,50,51,52,57,58,60,61,62,99,100,104,105,110,117,120,127,128,130,131,132,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,157,167,173,174,175,176,177,178,179,180,185,194,205,207,208,209,210,211,212,214,215,221,225,231,232,233,234,235,236,237,240,242,243,246,253,258,261,263,268,270,282,283,287,288,292,294,295,301,302,],[3,-173,-12,19,-67,-68,-69,-11,-173,38,39,63,-7,63,-14,-75,63,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,172,-173,63,-163,63,-34,63,63,63,198,63,-82,63,-120,63,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,63,217,63,63,63,63,-13,63,-161,-162,63,-167,-168,63,-173,63,-20,-21,-22,-23,-24,-25,-27,63,63,63,63,-95,-96,-97,-98,-99,-100,63,-35,-101,-104,63,63,-108,-26,63,63,-103,-70,63,-92,63,-173,-71,-102,63,]),'SEMICOLON':([3,19,30,32,53,63,64,67,68,69,70,71,72,73,74,81,82,83,84,85,86,91,92,106,107,108,109,111,112,113,114,115,116,119,121,124,135,137,152,154,155,156,158,159,160,161,162,163,164,165,166,183,184,191,192,193,213,227,228,229,230,238,239,251,255,256,260,264,265,266,269,280,284,293,295,300,303,],[4,-173,41,-17,127,-79,-173,142,143,144,145,146,147,148,149,-147,-148,-149,-150,-151,-152,-137,-138,174,-159,-166,-169,-38,-39,-40,-41,-42,-43,-91,-45,-15,-80,-78,-130,-131,-132,-133,-153,-154,-155,-156,-139,-140,-141,-142,-143,-89,-90,242,-36,-37,263,-160,-165,-170,-164,-44,-47,283,-81,-83,-77,288,-93,-94,-124,-16,295,-46,-71,-123,-76,]),'FUN':([4,5,6,7,14,15,18,41,174,271,272,275,],[-173,17,-173,-12,17,17,-11,-14,-13,-53,-56,-54,]),'MULTIPLICATION':([4,5,6,7,12,13,14,15,16,18,24,25,41,63,64,108,109,111,112,113,114,115,116,119,121,135,137,174,183,184,186,229,230,238,239,255,256,260,265,271,272,275,293,303,],[-173,-173,-173,-12,23,-2,-173,-173,-5,-11,-3,-4,-14,-79,-173,179,-169,-38,-39,-40,-41,-42,-43,-91,-45,-80,-78,-13,-89,-90,-45,-170,-164,-44,-47,-81,-83,-77,-169,-53,-56,-54,-46,-76,]),'INT':([4,6,17,21,34,36,41,99,100,105,170,174,],[9,9,9,9,-7,9,-14,9,-55,9,9,-13,]),'FLOAT':([4,6,17,21,34,36,41,99,100,105,170,174,],[10,10,10,10,-7,10,-14,10,-55,10,10,-13,]),'STRING':([4,6,17,21,34,36,41,99,100,105,170,174,],[11,11,11,11,-7,11,-14,11,-55,11,11,-13,]),'IF':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,55,-7,-14,55,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,55,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,55,55,-13,-173,55,-20,-21,-22,-23,-24,-25,-27,55,55,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'PRINT':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,56,-7,-14,56,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,56,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,56,56,-13,-173,56,-20,-21,-22,-23,-24,-25,-27,56,56,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'READ':([6,7,18,21,33,34,41,42,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,128,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,59,-7,-14,-75,59,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,59,-120,59,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,59,59,-13,-173,59,-20,-21,-22,-23,-24,-25,-27,59,59,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'FOR':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,76,-7,-14,76,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,76,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,76,76,-13,-173,76,-20,-21,-22,-23,-24,-25,-27,76,76,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'CIRCLE':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,77,-7,-14,77,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,77,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,77,77,-13,-173,77,-20,-21,-22,-23,-24,-25,-27,77,77,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'SQUARE':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,78,-7,-14,78,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,78,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,78,78,-13,-173,78,-20,-21,-22,-23,-24,-25,-27,78,78,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'TRIANGLE':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,79,-7,-14,79,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,79,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,79,79,-13,-173,79,-20,-21,-22,-23,-24,-25,-27,79,79,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'RECTANGLE':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,80,-7,-14,80,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,80,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,80,80,-13,-173,80,-20,-21,-22,-23,-24,-25,-27,80,80,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'HIDE_STAR':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,81,-7,-14,81,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,81,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,81,81,-13,-173,81,-20,-21,-22,-23,-24,-25,-27,81,81,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'SHOW_STAR':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,82,-7,-14,82,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,82,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,82,82,-13,-173,82,-20,-21,-22,-23,-24,-25,-27,82,82,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'EXITONCLICK':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,83,-7,-14,83,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,83,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,83,83,-13,-173,83,-20,-21,-22,-23,-24,-25,-27,83,83,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'CLEAR':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,84,-7,-14,84,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,84,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,84,84,-13,-173,84,-20,-21,-22,-23,-24,-25,-27,84,84,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'BEGINFILL':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,85,-7,-14,85,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,85,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,85,85,-13,-173,85,-20,-21,-22,-23,-24,-25,-27,85,85,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'ENDFILL':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,86,-7,-14,86,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,86,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,86,86,-13,-173,86,-20,-21,-22,-23,-24,-25,-27,86,86,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'COLOR_STAR':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,87,-7,-14,87,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,87,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,87,87,-13,-173,87,-20,-21,-22,-23,-24,-25,-27,87,87,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'SIZE_STAR':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,88,-7,-14,88,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,88,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,88,88,-13,-173,88,-20,-21,-22,-23,-24,-25,-27,88,88,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'SPEED':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,89,-7,-14,89,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,89,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,89,89,-13,-173,89,-20,-21,-22,-23,-24,-25,-27,89,89,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'POSITION':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,90,-7,-14,90,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,90,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,90,90,-13,-173,90,-20,-21,-22,-23,-24,-25,-27,90,90,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'HAND_DOWN':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,91,-7,-14,91,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,91,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,91,91,-13,-173,91,-20,-21,-22,-23,-24,-25,-27,91,91,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'HAND_UP':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,92,-7,-14,92,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,92,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,92,92,-13,-173,92,-20,-21,-22,-23,-24,-25,-27,92,92,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'GO':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,93,-7,-14,93,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,93,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,93,93,-13,-173,93,-20,-21,-22,-23,-24,-25,-27,93,93,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'LEFT':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,94,-7,-14,94,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,94,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,94,94,-13,-173,94,-20,-21,-22,-23,-24,-25,-27,94,94,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'RIGHT':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,95,-7,-14,95,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,95,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,95,95,-13,-173,95,-20,-21,-22,-23,-24,-25,-27,95,95,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'BACK':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,96,-7,-14,96,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,96,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,96,96,-13,-173,96,-20,-21,-22,-23,-24,-25,-27,96,96,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'ARC':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,97,-7,-14,97,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,97,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,97,97,-13,-173,97,-20,-21,-22,-23,-24,-25,-27,97,97,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'WHILE':([6,7,18,21,33,34,41,45,47,48,49,50,51,52,57,58,60,61,62,99,100,105,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,205,207,208,209,210,211,212,214,221,225,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-173,98,-7,-14,98,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-34,-120,98,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,98,98,-13,-173,98,-20,-21,-22,-23,-24,-25,-27,98,98,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'CLOSEBRACES':([6,7,18,21,33,34,41,44,45,46,47,48,49,50,51,52,57,58,60,61,62,99,100,105,126,127,138,139,140,141,142,143,144,145,146,147,148,149,167,173,174,194,204,205,206,207,208,209,210,211,212,214,220,221,222,224,225,226,242,243,246,261,262,263,273,276,282,283,288,294,295,301,],[-173,-12,-11,-173,-173,-7,-14,125,-173,-10,-28,-29,-30,-31,-32,-33,-18,-19,-125,-126,-127,-173,-55,-173,-9,-34,-120,-173,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,-173,-173,-13,-173,261,-173,-111,-20,-21,-22,-23,-24,-25,-27,272,-173,-61,272,-173,-63,-35,-101,-104,-108,-110,-26,-60,-62,-103,-70,-92,-173,-71,-102,]),'RETURN':([6,7,18,41,57,58,60,61,62,99,100,138,139,140,141,142,143,144,145,146,147,148,149,167,174,194,205,207,208,209,210,211,212,214,221,242,243,246,261,263,282,283,288,294,295,301,],[-173,-12,-11,-14,-18,-19,-125,-126,-127,-173,-55,-120,215,-112,-119,-128,-129,-144,-145,-146,-134,-135,-136,215,-13,-173,215,-20,-21,-22,-23,-24,-25,-27,215,-35,-101,-104,-108,-26,-103,-70,-92,-173,-71,-102,]),'VOID':([17,],[29,]),'OPENBRACKET':([19,40,42,63,64,110,117,120,124,128,130,131,133,134,135,136,137,150,153,157,175,176,177,178,179,180,185,197,198,215,231,232,233,234,235,236,237,240,253,258,260,268,270,278,287,292,296,302,303,],[31,120,-75,-79,136,120,-163,185,190,120,120,120,120,-82,-80,120,-78,120,120,120,120,-161,-162,120,-167,-168,185,253,-79,120,120,-95,-96,-97,-98,-99,-100,120,120,120,287,120,120,292,120,120,302,120,-76,]),'EQUALS':([19,30,32,54,63,64,124,135,137,260,280,303,],[-173,42,-17,42,-79,-173,-15,-80,-78,-77,-16,-76,]),'OPENBRACES':([22,23,35,37,65,66,129,168,245,248,249,250,267,281,299,],[34,-8,100,100,139,139,139,-57,139,-106,-107,-109,-121,139,-113,]),'OPENPAREN':([26,27,38,39,40,42,55,56,59,63,75,76,77,78,79,80,87,88,89,90,93,94,95,96,97,98,110,117,120,128,130,131,133,134,136,150,153,157,175,176,177,178,179,180,185,215,231,232,233,234,235,236,237,240,244,247,253,258,268,270,287,292,302,],[36,36,-51,-52,117,-75,130,131,132,134,150,151,153,153,153,157,153,153,153,157,153,153,153,153,157,-122,117,-163,117,117,117,117,117,-82,117,117,117,117,117,-161,-162,117,-167,-168,117,117,117,-95,-96,-97,-98,-99,-100,117,130,-105,117,117,117,117,117,117,117,]),'CTEINT':([31,40,42,110,117,118,120,122,123,128,130,131,133,134,136,150,153,157,175,176,177,178,179,180,185,189,190,201,215,231,232,233,234,235,236,237,240,253,258,268,270,287,292,302,],[43,-173,-75,-173,-163,183,-173,-171,-172,-173,-173,-173,-173,-82,-173,-173,-173,-173,-173,-161,-162,-173,-167,-168,-173,-172,241,-172,-173,-173,-95,-96,-97,-98,-99,-100,-173,-173,-173,-173,-173,-173,-173,-173,]),'CLOSEPAREN':([36,63,64,101,102,103,107,108,109,111,112,113,114,115,116,119,121,133,134,135,137,169,171,172,181,182,183,184,195,196,197,198,199,200,201,202,216,218,223,227,228,229,230,238,239,252,254,255,256,257,259,260,274,277,286,289,290,291,293,296,297,303,305,],[-173,-79,-173,168,-173,-59,-159,-166,-169,-38,-39,-40,-41,-42,-43,-91,-45,-173,-82,-80,-78,-58,-65,-66,230,-158,-89,-90,250,251,-173,-79,256,-173,-85,-88,267,269,-173,-160,-165,-170,-164,-44,-47,284,-74,-81,-83,-84,-87,-77,-64,-157,-173,299,-117,300,-46,-73,-86,-76,-72,]),'CTESTRING':([40,42,110,117,120,128,130,131,133,134,136,150,153,157,175,176,177,178,179,180,185,215,231,232,233,234,235,236,237,240,253,258,268,270,287,292,302,],[119,-75,119,-163,119,119,119,119,119,-82,119,119,119,119,119,-161,-162,119,-167,-168,119,119,119,-95,-96,-97,-98,-99,-100,119,119,119,119,119,119,119,119,]),'SUBSTRACTION':([40,42,63,64,107,108,109,110,111,112,113,114,115,116,117,119,120,121,128,130,131,133,134,135,136,137,150,153,157,175,176,177,178,179,180,183,184,185,186,215,228,229,230,231,232,233,234,235,236,237,238,239,240,253,255,256,258,260,265,268,270,287,292,293,302,303,],[122,-75,-79,-173,177,-166,-169,122,-38,-39,-40,-41,-42,-43,-163,-91,122,-45,122,122,122,122,-82,-80,122,-78,122,122,122,122,-161,-162,122,-167,-168,-89,-90,122,-45,122,-165,-170,-164,122,-95,-96,-97,-98,-99,-100,-44,-47,122,122,-81,-83,122,-77,-169,122,122,122,122,-46,122,-76,]),'CTEFLOAT':([40,42,110,117,118,120,122,123,128,130,131,133,134,136,150,153,157,175,176,177,178,179,180,185,189,201,215,231,232,233,234,235,236,237,240,253,258,268,270,287,292,302,],[-173,-75,-173,-163,184,-173,-171,-172,-173,-173,-173,-173,-82,-173,-173,-173,-173,-173,-161,-162,-173,-167,-168,-173,-172,-172,-173,-173,-95,-96,-97,-98,-99,-100,-173,-173,-173,-173,-173,-173,-173,-173,]),'CLOSEBRACKET':([43,63,64,107,108,109,111,112,113,114,115,116,119,120,121,135,137,183,184,185,186,187,188,189,203,227,228,229,230,238,239,240,241,255,256,260,279,285,292,293,298,303,304,],[124,-79,-173,-159,-166,-169,-38,-39,-40,-41,-42,-43,-91,-173,-45,-80,-78,-89,-90,-173,238,239,-49,-50,260,-160,-165,-170,-164,-44,-47,-173,280,-81,-83,-77,-48,296,-173,-46,303,-76,305,]),'DIVISION':([63,64,108,109,111,112,113,114,115,116,119,121,135,137,183,184,186,229,230,238,239,255,256,260,265,293,303,],[-79,-173,180,-169,-38,-39,-40,-41,-42,-43,-91,-45,-80,-78,-89,-90,-45,-170,-164,-44,-47,-81,-83,-77,-169,-46,-76,]),'ADDITION':([63,64,107,108,109,111,112,113,114,115,116,119,121,135,137,183,184,186,228,229,230,238,239,255,256,260,265,293,303,],[-79,-173,176,-166,-169,-38,-39,-40,-41,-42,-43,-91,-45,-80,-78,-89,-90,-45,-165,-170,-164,-44,-47,-81,-83,-77,-169,-46,-76,]),'GREATER':([63,64,107,108,109,111,112,113,114,115,116,119,121,135,137,182,183,184,227,228,229,230,238,239,255,256,260,293,303,],[-79,-173,-159,-166,-169,-38,-39,-40,-41,-42,-43,-91,-45,-80,-78,232,-89,-90,-160,-165,-170,-164,-44,-47,-81,-83,-77,-46,-76,]),'LESS':([63,64,107,108,109,111,112,113,114,115,116,119,121,135,137,182,183,184,227,228,229,230,238,239,255,256,260,293,303,],[-79,-173,-159,-166,-169,-38,-39,-40,-41,-42,-43,-91,-45,-80,-78,233,-89,-90,-160,-165,-170,-164,-44,-47,-81,-83,-77,-46,-76,]),'GREATEREQ':([63,64,107,108,109,111,112,113,114,115,116,119,121,135,137,182,183,184,227,228,229,230,238,239,255,256,260,293,303,],[-79,-173,-159,-166,-169,-38,-39,-40,-41,-42,-43,-91,-45,-80,-78,234,-89,-90,-160,-165,-170,-164,-44,-47,-81,-83,-77,-46,-76,]),'LESSEQ':([63,64,107,108,109,111,112,113,114,115,116,119,121,135,137,182,183,184,227,228,229,230,238,239,255,256,260,293,303,],[-79,-173,-159,-166,-169,-38,-39,-40,-41,-42,-43,-91,-45,-80,-78,235,-89,-90,-160,-165,-170,-164,-44,-47,-81,-83,-77,-46,-76,]),'NOTEQUAL':([63,64,107,108,109,111,112,113,114,115,116,119,121,135,137,182,183,184,227,228,229,230,238,239,255,256,260,293,303,],[-79,-173,-159,-166,-169,-38,-39,-40,-41,-42,-43,-91,-45,-80,-78,236,-89,-90,-160,-165,-170,-164,-44,-47,-81,-83,-77,-46,-76,]),'ISEQUAL':([63,64,107,108,109,111,112,113,114,115,116,119,121,135,137,182,183,184,227,228,229,230,238,239,255,256,260,293,303,],[-79,-173,-159,-166,-169,-38,-39,-40,-41,-42,-43,-91,-45,-80,-78,237,-89,-90,-160,-165,-170,-164,-44,-47,-81,-83,-77,-46,-76,]),'COMMA':([63,64,102,107,108,109,111,112,113,114,115,116,119,121,135,137,172,183,184,186,188,200,202,219,223,227,228,229,230,238,239,255,256,260,286,293,303,],[-79,-173,170,-159,-166,-169,-38,-39,-40,-41,-42,-43,-91,-45,-80,-78,-66,-89,-90,-45,240,258,-88,270,170,-160,-165,-170,-164,-44,278,-81,-83,-77,258,-46,-76,]),'ELSEIF':([194,261,294,],[247,-108,247,]),'ELSE':([194,261,294,],[248,-108,248,]),'TWODOTS':([217,],[268,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declara_vars':([4,6,21,99,105,],[5,18,33,167,173,]),'vars':([4,6,21,99,105,],[6,6,6,6,6,]),'empty':([4,5,6,14,15,19,21,33,36,40,45,64,99,102,105,110,120,128,130,131,133,136,139,150,153,157,167,173,175,178,185,194,197,200,205,215,221,223,225,231,240,253,258,268,270,286,287,292,294,302,],[7,16,7,16,16,32,7,46,103,123,46,137,7,171,7,123,189,123,123,123,201,123,206,123,123,123,222,226,123,123,189,246,254,259,206,123,222,171,226,123,189,123,123,123,123,259,123,189,246,123,]),'type':([4,6,17,21,36,99,105,170,],[8,8,28,8,104,8,8,104,]),'program_fun':([5,],[12,]),'funs':([5,14,15,],[13,24,25,]),'function_t':([5,14,15,],[14,14,14,]),'function_v':([5,14,15,],[15,15,15,]),'star':([12,],[20,]),'starI':([12,],[21,]),'star_sign':([12,],[22,]),'functionI':([17,],[26,]),'functionV':([17,],[27,]),'dimensionada':([19,],[30,]),'function2':([26,27,],[35,37,]),'equals':([30,54,],[40,128,]),'star1':([33,45,],[44,126,]),'stmt_v':([33,45,173,225,],[45,45,225,225,]),'assignment':([33,45,139,167,173,205,221,225,],[47,47,207,207,47,207,207,47,]),'condition':([33,45,139,167,173,205,221,225,],[48,48,208,208,48,208,208,48,]),'print':([33,45,139,167,173,205,221,225,],[49,49,209,209,49,209,209,49,]),'loop':([33,45,139,167,173,205,221,225,],[50,50,210,210,50,210,210,50,]),'read':([33,45,128,139,167,173,205,221,225,],[51,51,193,211,211,51,211,211,51,]),'graphstmt':([33,45,139,167,173,205,221,225,],[52,52,212,212,52,212,212,52,]),'funCall':([33,40,45,110,120,128,130,131,133,136,139,150,153,157,167,173,175,178,185,205,215,221,225,231,240,253,258,268,270,287,292,302,],[53,115,53,115,115,115,115,115,115,115,213,115,115,115,213,53,115,115,115,213,115,213,53,115,115,115,115,115,115,115,115,115,]),'id':([33,40,45,110,120,128,130,131,132,133,136,139,150,153,157,167,173,175,178,185,205,215,221,225,231,240,253,258,268,270,287,292,302,],[54,114,54,114,114,114,114,114,197,114,114,54,114,114,114,54,54,114,114,114,54,114,54,54,114,114,114,114,114,114,114,114,114,]),'while':([33,45,139,167,173,205,221,225,],[57,57,57,57,57,57,57,57,]),'for_v2':([33,45,139,167,173,205,221,225,],[58,58,58,58,58,58,58,58,]),'graphfig':([33,45,139,167,173,205,221,225,],[60,60,60,60,60,60,60,60,]),'graphview':([33,45,139,167,173,205,221,225,],[61,61,61,61,61,61,61,61,]),'graphmove':([33,45,139,167,173,205,221,225,],[62,62,62,62,62,62,62,62,]),'aidi':([33,40,45,110,120,128,130,131,132,133,136,139,150,153,157,167,173,175,178,185,205,215,221,225,231,240,253,258,268,270,287,292,302,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'while1':([33,45,139,167,173,205,221,225,],[65,65,65,65,65,65,65,65,]),'nuevo_for':([33,45,139,167,173,205,221,225,],[66,66,66,66,66,66,66,66,]),'graphfig1':([33,45,139,167,173,205,221,225,],[67,67,67,67,67,67,67,67,]),'graphfig2':([33,45,139,167,173,205,221,225,],[68,68,68,68,68,68,68,68,]),'graphview0':([33,45,139,167,173,205,221,225,],[69,69,69,69,69,69,69,69,]),'graphview1':([33,45,139,167,173,205,221,225,],[70,70,70,70,70,70,70,70,]),'graphview2':([33,45,139,167,173,205,221,225,],[71,71,71,71,71,71,71,71,]),'graphmove0':([33,45,139,167,173,205,221,225,],[72,72,72,72,72,72,72,72,]),'graphmove1':([33,45,139,167,173,205,221,225,],[73,73,73,73,73,73,73,73,]),'graphmove2':([33,45,139,167,173,205,221,225,],[74,74,74,74,74,74,74,74,]),'while_w':([33,45,139,167,173,205,221,225,],[75,75,75,75,75,75,75,75,]),'inicia_fun':([35,37,],[99,105,]),'function3':([36,],[101,]),'funParam':([36,170,],[102,223,]),'exp':([40,110,120,128,130,131,133,136,150,153,157,175,185,215,231,240,253,258,268,270,287,292,302,],[106,182,188,192,182,182,202,203,182,218,219,227,188,266,277,188,285,202,290,291,298,188,304,]),'term':([40,110,120,128,130,131,133,136,150,153,157,175,178,185,215,231,240,253,258,268,270,287,292,302,],[107,107,107,107,107,107,107,107,107,107,107,107,228,107,107,107,107,107,107,107,107,107,107,107,]),'factor':([40,110,120,128,130,131,133,136,150,153,157,175,178,185,215,231,240,253,258,268,270,287,292,302,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'vcte':([40,110,120,128,130,131,133,136,150,153,157,175,178,185,215,231,240,253,258,268,270,287,292,302,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,265,109,109,109,109,109,109,109,109,109,]),'openP':([40,110,120,128,130,131,133,136,150,153,157,175,178,185,215,231,240,253,258,268,270,287,292,302,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'cte_int':([40,110,120,128,130,131,133,136,150,153,157,175,178,185,215,231,240,253,258,268,270,287,292,302,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'cte_float':([40,110,120,128,130,131,133,136,150,153,157,175,178,185,215,231,240,253,258,268,270,287,292,302,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'cte_string':([40,110,120,128,130,131,133,136,150,153,157,175,178,185,215,231,240,253,258,268,270,287,292,302,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'vectormatriz':([40,110,120,128,130,131,133,136,150,153,157,175,178,185,215,231,240,253,258,268,270,287,292,302,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'negativo':([40,110,120,128,130,131,133,136,150,153,157,175,178,185,215,231,240,253,258,268,270,287,292,302,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'vm1':([40,110,120,128,130,131,133,136,150,153,157,175,178,185,215,231,240,253,258,268,270,278,287,292,302,],[121,121,186,121,121,121,121,121,121,121,121,121,121,186,121,121,121,121,121,121,121,293,121,121,121,]),'head_cond':([55,244,],[129,281,]),'iniciaFunCall':([63,],[133,]),'indice_dimensionada':([64,],[135,]),'body':([65,66,129,245,281,],[138,141,194,282,294,]),'forBody':([66,],[140,]),'unaExp':([77,78,79,87,88,89,93,94,95,96,],[152,154,155,158,159,160,162,163,164,165,]),'dosExp':([80,90,97,],[156,161,166,]),'function5':([102,223,],[169,274,]),'exp_o':([107,],[175,]),'term_o':([108,],[178,]),'expression':([110,130,131,150,],[181,195,196,216,]),'vm2':([120,185,240,292,],[187,187,279,187,]),'assignment3':([128,],[191,]),'funCall2':([133,],[199,]),'funCallParam':([133,258,],[200,286,]),'body1':([139,205,],[204,262,]),'stmt':([139,167,205,221,],[205,221,205,221,]),'return':([139,167,205,221,],[214,214,214,214,]),'function4':([167,221,],[220,273,]),'function9':([173,225,],[224,276,]),'closeP':([181,],[229,]),'loper':([182,],[231,]),'condition1':([194,294,],[243,301,]),'elseif':([194,294,],[244,244,]),'else':([194,294,],[245,245,]),'close_condition':([195,],[249,]),'read1':([197,],[252,]),'terminaFunCall':([199,],[255,]),'funCall3':([200,286,],[257,297,]),'return1':([215,],[264,]),'termina_fun':([220,224,],[271,275,]),'for2':([268,],[289,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON declara_vars program_fun star','program',6,'p_program','parser.py',29),
  ('program_fun -> funs','program_fun',1,'p_program_fun','parser.py',43),
  ('funs -> function_t funs','funs',2,'p_funs','parser.py',49),
  ('funs -> function_v funs','funs',2,'p_funs','parser.py',50),
  ('funs -> empty','funs',1,'p_funs','parser.py',51),
  ('star -> starI declara_vars star1 CLOSEBRACES','star',4,'p_star','parser.py',57),
  ('starI -> star_sign OPENBRACES','starI',2,'p_starI','parser.py',75),
  ('star_sign -> MULTIPLICATION','star_sign',1,'p_star_sign','parser.py',82),
  ('star1 -> stmt_v star1','star1',2,'p_star1','parser.py',91),
  ('star1 -> empty','star1',1,'p_star1','parser.py',92),
  ('declara_vars -> vars declara_vars','declara_vars',2,'p_declara_vars','parser.py',98),
  ('declara_vars -> empty','declara_vars',1,'p_declara_vars','parser.py',99),
  ('vars -> type ID dimensionada equals exp SEMICOLON','vars',6,'p_vars','parser.py',112),
  ('vars -> type ID dimensionada SEMICOLON','vars',4,'p_vars','parser.py',113),
  ('dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET','dimensionada',3,'p_dimensionada','parser.py',193),
  ('dimensionada -> OPENBRACKET CTEINT CLOSEBRACKET OPENBRACKET CTEINT CLOSEBRACKET','dimensionada',6,'p_dimensionada','parser.py',194),
  ('dimensionada -> empty','dimensionada',1,'p_dimensionada','parser.py',195),
  ('loop -> while','loop',1,'p_loop','parser.py',210),
  ('loop -> for_v2','loop',1,'p_loop','parser.py',211),
  ('stmt -> assignment','stmt',1,'p_stmt','parser.py',217),
  ('stmt -> condition','stmt',1,'p_stmt','parser.py',218),
  ('stmt -> print','stmt',1,'p_stmt','parser.py',219),
  ('stmt -> loop','stmt',1,'p_stmt','parser.py',220),
  ('stmt -> read','stmt',1,'p_stmt','parser.py',221),
  ('stmt -> graphstmt','stmt',1,'p_stmt','parser.py',222),
  ('stmt -> funCall SEMICOLON','stmt',2,'p_stmt','parser.py',223),
  ('stmt -> return','stmt',1,'p_stmt','parser.py',224),
  ('stmt_v -> assignment','stmt_v',1,'p_stmt_v','parser.py',229),
  ('stmt_v -> condition','stmt_v',1,'p_stmt_v','parser.py',230),
  ('stmt_v -> print','stmt_v',1,'p_stmt_v','parser.py',231),
  ('stmt_v -> loop','stmt_v',1,'p_stmt_v','parser.py',232),
  ('stmt_v -> read','stmt_v',1,'p_stmt_v','parser.py',233),
  ('stmt_v -> graphstmt','stmt_v',1,'p_stmt_v','parser.py',234),
  ('stmt_v -> funCall SEMICOLON','stmt_v',2,'p_stmt_v','parser.py',235),
  ('assignment -> id equals assignment3 SEMICOLON','assignment',4,'p_assignment','parser.py',240),
  ('assignment3 -> exp','assignment3',1,'p_assignment3','parser.py',257),
  ('assignment3 -> read','assignment3',1,'p_assignment3','parser.py',258),
  ('vcte -> cte_int','vcte',1,'p_vcte','parser.py',266),
  ('vcte -> cte_float','vcte',1,'p_vcte','parser.py',267),
  ('vcte -> cte_string','vcte',1,'p_vcte','parser.py',268),
  ('vcte -> id','vcte',1,'p_vcte','parser.py',269),
  ('vcte -> funCall','vcte',1,'p_vcte','parser.py',270),
  ('vcte -> vectormatriz','vcte',1,'p_vcte','parser.py',271),
  ('vectormatriz -> OPENBRACKET vm1 CLOSEBRACKET','vectormatriz',3,'p_vectormatriz','parser.py',286),
  ('vectormatriz -> vm1','vectormatriz',1,'p_vectormatriz','parser.py',287),
  ('vm1 -> OPENBRACKET vm2 CLOSEBRACKET COMMA vm1','vm1',5,'p_vm1','parser.py',298),
  ('vm1 -> OPENBRACKET vm2 CLOSEBRACKET','vm1',3,'p_vm1','parser.py',299),
  ('vm2 -> exp COMMA vm2','vm2',3,'p_vm2','parser.py',312),
  ('vm2 -> exp','vm2',1,'p_vm2','parser.py',313),
  ('vm2 -> empty','vm2',1,'p_vm2','parser.py',314),
  ('functionI -> type ID','functionI',2,'p_functionI','parser.py',324),
  ('functionV -> VOID ID','functionV',2,'p_functionV','parser.py',339),
  ('function_t -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun','function_t',7,'p_function_t','parser.py',352),
  ('function_v -> FUN functionV function2 inicia_fun declara_vars function9 termina_fun','function_v',7,'p_function_v','parser.py',374),
  ('inicia_fun -> OPENBRACES','inicia_fun',1,'p_inicia_fun','parser.py',393),
  ('termina_fun -> CLOSEBRACES','termina_fun',1,'p_termina_fun','parser.py',399),
  ('function2 -> OPENPAREN function3 CLOSEPAREN','function2',3,'p_function2','parser.py',404),
  ('function3 -> funParam function5','function3',2,'p_function3','parser.py',409),
  ('function3 -> empty','function3',1,'p_function3','parser.py',410),
  ('function4 -> stmt function4','function4',2,'p_function4','parser.py',421),
  ('function4 -> empty','function4',1,'p_function4','parser.py',422),
  ('function9 -> stmt_v function9','function9',2,'p_function9','parser.py',430),
  ('function9 -> empty','function9',1,'p_function9','parser.py',431),
  ('function5 -> COMMA funParam function5','function5',3,'p_function5','parser.py',439),
  ('function5 -> empty','function5',1,'p_function5','parser.py',440),
  ('funParam -> type ID','funParam',2,'p_funParam','parser.py',448),
  ('type -> INT','type',1,'p_type','parser.py',466),
  ('type -> FLOAT','type',1,'p_type','parser.py',467),
  ('type -> STRING','type',1,'p_type','parser.py',468),
  ('print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON','print',5,'p_print','parser.py',476),
  ('read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON','read',6,'p_read','parser.py',484),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET','read1',6,'p_read1','parser.py',492),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET','read1',3,'p_read1','parser.py',493),
  ('read1 -> empty','read1',1,'p_read1','parser.py',494),
  ('equals -> EQUALS','equals',1,'p_equals','parser.py',499),
  ('indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET','indice_dimensionada',6,'p_indice_dimensionada','parser.py',506),
  ('indice_dimensionada -> OPENBRACKET exp CLOSEBRACKET','indice_dimensionada',3,'p_indice_dimensionada','parser.py',507),
  ('indice_dimensionada -> empty','indice_dimensionada',1,'p_indice_dimensionada','parser.py',508),
  ('aidi -> ID','aidi',1,'p_aidi','parser.py',519),
  ('id -> aidi indice_dimensionada','id',2,'p_id','parser.py',527),
  ('funCall -> ID iniciaFunCall funCall2 terminaFunCall','funCall',4,'p_funCall','parser.py',566),
  ('iniciaFunCall -> OPENPAREN','iniciaFunCall',1,'p_iniciaFunCall','parser.py',601),
  ('terminaFunCall -> CLOSEPAREN','terminaFunCall',1,'p_terminaFunCall','parser.py',610),
  ('funCall2 -> funCallParam funCall3','funCall2',2,'p_funCall2','parser.py',617),
  ('funCall2 -> empty','funCall2',1,'p_funCall2','parser.py',618),
  ('funCall3 -> COMMA funCallParam funCall3','funCall3',3,'p_funCall3','parser.py',633),
  ('funCall3 -> empty','funCall3',1,'p_funCall3','parser.py',634),
  ('funCallParam -> exp','funCallParam',1,'p_funCallParam','parser.py',644),
  ('cte_int -> negativo CTEINT','cte_int',2,'p_cte_int','parser.py',675),
  ('cte_float -> negativo CTEFLOAT','cte_float',2,'p_cte_float','parser.py',692),
  ('cte_string -> CTESTRING','cte_string',1,'p_cte_string','parser.py',709),
  ('return -> RETURN return1 SEMICOLON','return',3,'p_return','parser.py',720),
  ('return1 -> vcte','return1',1,'p_return1','parser.py',729),
  ('return1 -> exp','return1',1,'p_return1','parser.py',730),
  ('loper -> GREATER','loper',1,'p_loper','parser.py',738),
  ('loper -> LESS','loper',1,'p_loper','parser.py',739),
  ('loper -> GREATEREQ','loper',1,'p_loper','parser.py',740),
  ('loper -> LESSEQ','loper',1,'p_loper','parser.py',741),
  ('loper -> NOTEQUAL','loper',1,'p_loper','parser.py',742),
  ('loper -> ISEQUAL','loper',1,'p_loper','parser.py',743),
  ('condition -> IF head_cond body condition1','condition',4,'p_condition','parser.py',752),
  ('condition1 -> elseif head_cond body condition1','condition1',4,'p_condition1','parser.py',761),
  ('condition1 -> else body','condition1',2,'p_condition1','parser.py',762),
  ('condition1 -> empty','condition1',1,'p_condition1','parser.py',763),
  ('elseif -> ELSEIF','elseif',1,'p_elseif','parser.py',772),
  ('else -> ELSE','else',1,'p_else','parser.py',779),
  ('head_cond -> OPENPAREN expression close_condition','head_cond',3,'p_head_cond','parser.py',791),
  ('body -> OPENBRACES body1 CLOSEBRACES','body',3,'p_body','parser.py',798),
  ('close_condition -> CLOSEPAREN','close_condition',1,'p_close_condition','parser.py',805),
  ('body1 -> stmt body1','body1',2,'p_body1','parser.py',813),
  ('body1 -> empty','body1',1,'p_body1','parser.py',814),
  ('for_v2 -> nuevo_for forBody','for_v2',2,'p_for_v2','parser.py',827),
  ('nuevo_for -> FOR OPENPAREN ID TWODOTS for2 CLOSEPAREN','nuevo_for',6,'p_nuevo_for','parser.py',865),
  ('for -> FOR for1 TWODOTS for2 forClose forBody','for',6,'p_for','parser.py',906),
  ('forInit -> FOR','forInit',1,'p_forInit','parser.py',929),
  ('for1 -> OPENPAREN ID','for1',2,'p_for1','parser.py',937),
  ('for2 -> exp','for2',1,'p_for2','parser.py',947),
  ('forClose -> CLOSEPAREN','forClose',1,'p_forClose','parser.py',954),
  ('forBody -> body','forBody',1,'p_forBody','parser.py',963),
  ('while -> while1 body','while',2,'p_while','parser.py',971),
  ('while1 -> while_w OPENPAREN expression CLOSEPAREN','while1',4,'p_while1','parser.py',984),
  ('while_w -> WHILE','while_w',1,'p_while_w','parser.py',991),
  ('dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN','dosExp',5,'p_dosExp','parser.py',1000),
  ('unaExp -> OPENPAREN exp CLOSEPAREN','unaExp',3,'p_unaExp','parser.py',1007),
  ('graphstmt -> graphfig','graphstmt',1,'p_graphstmt','parser.py',1013),
  ('graphstmt -> graphview','graphstmt',1,'p_graphstmt','parser.py',1014),
  ('graphstmt -> graphmove','graphstmt',1,'p_graphstmt','parser.py',1015),
  ('graphfig -> graphfig1 SEMICOLON','graphfig',2,'p_graphfig','parser.py',1021),
  ('graphfig -> graphfig2 SEMICOLON','graphfig',2,'p_graphfig','parser.py',1022),
  ('graphfig1 -> CIRCLE unaExp','graphfig1',2,'p_graphfig1','parser.py',1027),
  ('graphfig1 -> SQUARE unaExp','graphfig1',2,'p_graphfig1','parser.py',1028),
  ('graphfig1 -> TRIANGLE unaExp','graphfig1',2,'p_graphfig1','parser.py',1029),
  ('graphfig2 -> RECTANGLE dosExp','graphfig2',2,'p_graphfig2','parser.py',1037),
  ('graphmove -> graphmove0 SEMICOLON','graphmove',2,'p_graphmove','parser.py',1045),
  ('graphmove -> graphmove1 SEMICOLON','graphmove',2,'p_graphmove','parser.py',1046),
  ('graphmove -> graphmove2 SEMICOLON','graphmove',2,'p_graphmove','parser.py',1047),
  ('graphmove0 -> HAND_DOWN','graphmove0',1,'p_graphmove0','parser.py',1053),
  ('graphmove0 -> HAND_UP','graphmove0',1,'p_graphmove0','parser.py',1054),
  ('graphmove1 -> GO unaExp','graphmove1',2,'p_graphmove1','parser.py',1062),
  ('graphmove1 -> LEFT unaExp','graphmove1',2,'p_graphmove1','parser.py',1063),
  ('graphmove1 -> RIGHT unaExp','graphmove1',2,'p_graphmove1','parser.py',1064),
  ('graphmove1 -> BACK unaExp','graphmove1',2,'p_graphmove1','parser.py',1065),
  ('graphmove2 -> ARC dosExp','graphmove2',2,'p_graphmove2','parser.py',1072),
  ('graphview -> graphview0 SEMICOLON','graphview',2,'p_graphview','parser.py',1080),
  ('graphview -> graphview1 SEMICOLON','graphview',2,'p_graphview','parser.py',1081),
  ('graphview -> graphview2 SEMICOLON','graphview',2,'p_graphview','parser.py',1082),
  ('graphview0 -> HIDE_STAR','graphview0',1,'p_graphview0','parser.py',1087),
  ('graphview0 -> SHOW_STAR','graphview0',1,'p_graphview0','parser.py',1088),
  ('graphview0 -> EXITONCLICK','graphview0',1,'p_graphview0','parser.py',1089),
  ('graphview0 -> CLEAR','graphview0',1,'p_graphview0','parser.py',1090),
  ('graphview0 -> BEGINFILL','graphview0',1,'p_graphview0','parser.py',1091),
  ('graphview0 -> ENDFILL','graphview0',1,'p_graphview0','parser.py',1092),
  ('graphview1 -> COLOR_STAR unaExp','graphview1',2,'p_graphview1','parser.py',1099),
  ('graphview1 -> SIZE_STAR unaExp','graphview1',2,'p_graphview1','parser.py',1100),
  ('graphview1 -> SPEED unaExp','graphview1',2,'p_graphview1','parser.py',1101),
  ('graphview2 -> POSITION dosExp','graphview2',2,'p_graphview2','parser.py',1108),
  ('expression -> exp loper exp','expression',3,'p_expression','parser.py',1116),
  ('expression -> exp','expression',1,'p_expression','parser.py',1117),
  ('exp -> term','exp',1,'p_exp','parser.py',1128),
  ('exp -> term exp_o exp','exp',3,'p_exp','parser.py',1129),
  ('exp_o -> ADDITION','exp_o',1,'p_exp_o','parser.py',1141),
  ('exp_o -> SUBSTRACTION','exp_o',1,'p_exp_o','parser.py',1142),
  ('openP -> OPENPAREN','openP',1,'p_openP','parser.py',1148),
  ('closeP -> CLOSEPAREN','closeP',1,'p_closeP','parser.py',1156),
  ('term -> factor term_o term','term',3,'p_term','parser.py',1164),
  ('term -> factor','term',1,'p_term','parser.py',1165),
  ('term_o -> MULTIPLICATION','term_o',1,'p_term_o','parser.py',1180),
  ('term_o -> DIVISION','term_o',1,'p_term_o','parser.py',1181),
  ('factor -> vcte','factor',1,'p_factor','parser.py',1189),
  ('factor -> openP expression closeP','factor',3,'p_factor','parser.py',1190),
  ('negativo -> SUBSTRACTION','negativo',1,'p_negativo','parser.py',1203),
  ('negativo -> empty','negativo',1,'p_negativo','parser.py',1204),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',1224),
]
