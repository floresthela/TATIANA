
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDITION AND ARC BACK CHAR CIRCLE CLOSEBRACES CLOSEBRACKET CLOSEPAREN COLOR_STAR COMMA CTECHAR CTEFLOAT CTEINT DIVISION ELSE ELSEIF EQUALS FLOAT FOR FUN GO GREATER HAND_DOWN HAND_UP HIDE_STAR ID IF INT ISEQUAL LEFT LESS MULTIPLICATION NOTEQUAL OPENBRACES OPENBRACKET OPENPAREN OR PRINT PROGRAM READ RECTANGLE REPEAT RETURN RIGHT SEMICOLON SETXY SHOW_STAR SIMPLEQUOTES SIZE_STAR SQUARE SUBSTRACTION TRIANGLE TWODOTS VARS VOID WHILE\n    program : PROGRAM ID SEMICOLON declara_vars program2 star\n    \n    program_vars : vars program_vars\n            | empty\n    \n    program2 : function program2\n            | empty\n    \n    star : starI declara_vars star1 CLOSEBRACES\n    \n    starI : MULTIPLICATION OPENBRACES\n    \n    star1 : stmt star1\n        | empty\n    \n    declara_vars : vars declara_vars\n          | empty\n    \n    loop : while\n        | for\n    \n    stmt : assignment\n        | condition\n        | print\n        | loop\n        | read\n        | graphstmt\n        | graphr\n        | funCall\n        | return\n    \n    functionI : type ID\n              | VOID ID\n    \n    function : FUN functionI function2 inicia_fun declara_vars function4 termina_fun\n    \n    function1 : type\n              | VOID\n    \n    inicia_fun : OPENBRACES\n    \n    termina_fun : CLOSEBRACES\n    \n    function2 : OPENPAREN function3 CLOSEPAREN\n    \n    function3 : type ID function5\n              | empty\n    \n    function4 : stmt function4\n              | empty\n    \n    function5 : COMMA type ID function3\n    \n    fun_vars : vars fun_vars\n              | empty\n    \n    vars : type ID vars1 SEMICOLON\n    \n    vars1 : equals exp\n        | OPENBRACKET CTEINT CLOSEBRACKET vars3\n        | empty\n    \n    vars3 : OPENBRACKET CTEINT CLOSEBRACKET\n        | empty\n    \n    type : INT\n         | FLOAT\n         | CHAR\n    \n    print : PRINT OPENPAREN exp CLOSEPAREN SEMICOLON\n    \n    read : READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON\n    \n    read1 : OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET\n              | OPENBRACKET exp CLOSEBRACKET\n              | empty\n    \n    equals : EQUALS\n    \n    id : ID\n    \n    assignment : id assignment1 equals assignment3 SEMICOLON\n    \n    assignment1 : assignment2\n                | assignment2 assignment1\n                | empty\n    \n    assignment2 : OPENBRACKET exp CLOSEBRACKET\n    \n    assignment3 : exp\n                | read\n    \n    vcte : cte\n        | id vcte1\n        | funCall\n    \n    vcte1 : OPENBRACKET exp CLOSEBRACKET vcte3\n          | empty\n    \n    vcte3 : OPENBRACKET exp CLOSEBRACKET\n        | empty\n\n    \n    cte : CTEINT\n        | CTEFLOAT\n        | CTECHAR\n    \n    return : RETURN return1 SEMICOLON\n    \n    return1 : vcte\n            | exp\n    \n    expression : exp expression1\n    \n    expression1 : loper exp\n             | empty\n    \n    loper : GREATER\n          | LESS\n          | NOTEQUAL\n          | ISEQUAL\n    \n    logical : expression logical1 expression\n    \n    logical1 : OR\n             | AND\n    \n    condition : IF head body condition1\n    \n    condition1 : ELSEIF head body condition1\n               | ELSE body\n               | empty\n    \n    head : OPENPAREN head1 CLOSEPAREN\n    \n    head1 : expression\n          | logical\n    \n    body : OPENBRACES body1 CLOSEBRACES\n    \n    body1 : stmt body1\n          | empty\n    \n    for : FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body\n    \n    while : WHILE  head body\n    \n    funCall : ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON\n    \n    funCall2 : exp funCall3\n             | empty\n    \n    funCall3 : COMMA exp funCall2\n             | empty\n    \n    laRegla : OPENPAREN exp COMMA exp CLOSEPAREN\n    \n    laRegla2 : OPENPAREN exp CLOSEPAREN\n    \n    graphstmt : graphfig\n             | graphview\n             | graphmove\n    \n    graphfig : graphfig1 SEMICOLON\n    \n    graphfig1 : CIRCLE laRegla2\n            | SQUARE laRegla2\n            | TRIANGLE laRegla\n            | RECTANGLE laRegla\n    \n    graphmove :  graphmove1  SEMICOLON\n    \n    graphmove1 : HAND_DOWN\n              | HAND_UP\n              | graphmove2\n    \n    graphmove2 : GO laRegla2\n              | LEFT laRegla2\n              | RIGHT laRegla2\n              | BACK laRegla2\n              | ARC laRegla\n    \n    graphr : REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES\n    \n    graphr1 : graphstmt graphr1\n           | empty\n    \n    graphview : graphview1 SEMICOLON\n    \n    graphview1 : HIDE_STAR\n              | SHOW_STAR\n              | graphview2 exp\n    \n    graphview2 : SETXY graphview3\n              | COLOR_STAR\n              | SIZE_STAR\n    \n    graphview3 : exp COMMA\n              | laRegla\n    \n    exp : term exp1\n    \n    exp1 : ADDITION exp\n         | SUBSTRACTION exp\n         | empty\n    \n    openP : OPENPAREN\n    \n    closeP : CLOSEPAREN\n    \n    factor : vcte\n           | factor1\n    \n    factor1 : factor2 vcte\n            | openP expression closeP\n    \n    factor2 : ADDITION\n            | SUBSTRACTION\n    \n    term : factor term1\n    \n    term1 : MULTIPLICATION term\n          | DIVISION term\n          | empty\n    empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declara_vars':([4,6,19,102,],[5,16,30,158,]),'vars':([4,6,19,102,],[6,6,6,6,]),'empty':([4,5,6,13,17,19,30,33,38,39,43,56,67,102,120,121,122,126,158,176,184,185,190,199,203,219,229,241,252,257,260,],[7,14,7,14,28,7,57,106,110,114,117,57,127,7,170,177,180,127,200,208,217,220,228,200,239,220,254,177,254,106,217,]),'type':([4,6,15,19,33,102,202,257,],[8,8,23,8,105,8,236,105,]),'program2':([5,13,],[12,21,]),'function':([5,13,],[13,13,]),'star':([12,],[18,]),'starI':([12,],[19,]),'functionI':([15,],[22,]),'vars1':([17,],[25,]),'equals':([17,125,],[26,181,]),'function2':([22,],[32,]),'exp':([26,46,77,78,90,94,108,109,116,121,128,130,131,143,146,152,169,181,207,222,227,230,232,237,241,270,],[37,120,133,136,148,150,161,162,165,176,183,120,189,195,196,196,204,211,241,120,251,255,256,258,176,272,]),'term':([26,46,77,78,90,94,108,109,112,113,116,121,128,130,131,143,146,152,169,181,207,222,227,230,232,237,241,270,],[38,38,38,38,38,38,38,38,163,164,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'factor':([26,46,77,78,90,94,108,109,112,113,116,121,128,130,131,143,146,152,169,181,207,222,227,230,232,237,241,270,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'vcte':([26,45,46,77,78,90,94,108,109,112,113,116,121,128,130,131,143,146,152,169,181,207,222,227,230,232,237,241,270,],[40,118,40,40,135,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'factor1':([26,46,77,78,90,94,108,109,112,113,116,121,128,130,131,143,146,152,169,181,207,222,227,230,232,237,241,270,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'cte':([26,45,46,77,78,90,94,108,109,112,113,116,121,128,130,131,143,146,152,169,181,207,222,227,230,232,237,241,270,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'id':([26,30,45,46,56,77,78,90,94,108,109,112,113,116,121,128,130,131,143,146,152,158,169,181,185,199,207,219,222,227,230,232,237,241,270,],[43,67,43,43,67,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,67,43,43,67,67,43,67,43,43,43,43,43,43,43,]),'funCall':([26,30,45,46,56,77,78,90,94,108,109,112,113,116,121,128,130,131,143,146,152,158,169,181,185,199,207,219,222,227,230,232,237,241,270,],[44,65,44,44,65,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,65,44,44,65,65,44,65,44,44,44,44,44,44,44,]),'factor2':([26,46,77,78,90,94,108,109,112,113,116,121,128,130,131,143,146,152,169,181,207,222,227,230,232,237,241,270,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'openP':([26,46,77,78,90,94,108,109,112,113,116,121,128,130,131,143,146,152,169,181,207,222,227,230,232,237,241,270,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'star1':([30,56,],[55,124,]),'stmt':([30,56,158,185,199,219,],[56,56,199,219,199,219,]),'assignment':([30,56,158,185,199,219,],[58,58,58,58,58,58,]),'condition':([30,56,158,185,199,219,],[59,59,59,59,59,59,]),'print':([30,56,158,185,199,219,],[60,60,60,60,60,60,]),'loop':([30,56,158,185,199,219,],[61,61,61,61,61,61,]),'read':([30,56,158,181,185,199,219,],[62,62,62,212,62,62,62,]),'graphstmt':([30,56,158,185,191,199,219,229,252,],[63,63,63,63,229,63,63,252,252,]),'graphr':([30,56,158,185,199,219,],[64,64,64,64,64,64,]),'return':([30,56,158,185,199,219,],[66,66,66,66,66,66,]),'while':([30,56,158,185,199,219,],[70,70,70,70,70,70,]),'for':([30,56,158,185,199,219,],[71,71,71,71,71,71,]),'graphfig':([30,56,158,185,191,199,219,229,252,],[74,74,74,74,74,74,74,74,74,]),'graphview':([30,56,158,185,191,199,219,229,252,],[75,75,75,75,75,75,75,75,75,]),'graphmove':([30,56,158,185,191,199,219,229,252,],[76,76,76,76,76,76,76,76,76,]),'graphfig1':([30,56,158,185,191,199,219,229,252,],[81,81,81,81,81,81,81,81,81,]),'graphview1':([30,56,158,185,191,199,219,229,252,],[82,82,82,82,82,82,82,82,82,]),'graphmove1':([30,56,158,185,191,199,219,229,252,],[83,83,83,83,83,83,83,83,83,]),'graphview2':([30,56,158,185,191,199,219,229,252,],[90,90,90,90,90,90,90,90,90,]),'graphmove2':([30,56,158,185,191,199,219,229,252,],[93,93,93,93,93,93,93,93,93,]),'inicia_fun':([32,],[102,]),'function3':([33,257,],[104,267,]),'exp1':([38,],[107,]),'term1':([39,],[111,]),'vcte1':([43,],[115,]),'expression':([46,130,222,],[119,187,248,]),'assignment1':([67,126,],[125,182,]),'assignment2':([67,126,],[126,126,]),'head':([68,79,215,],[129,137,244,]),'return1':([78,],[134,]),'laRegla2':([84,85,97,98,99,100,],[142,144,153,154,155,156,]),'laRegla':([86,87,94,101,],[145,147,151,157,]),'graphview3':([94,],[149,]),'closeP':([119,],[166,]),'expression1':([120,],[168,]),'loper':([120,],[169,]),'funCall2':([121,241,],[175,259,]),'vars3':([122,],[179,]),'body':([129,137,216,244,265,],[184,193,245,260,271,]),'head1':([130,],[186,]),'logical':([130,],[188,]),'function4':([158,199,],[198,235,]),'function5':([160,],[201,]),'funCall3':([176,],[206,]),'assignment3':([181,],[210,]),'condition1':([184,260,],[214,269,]),'body1':([185,219,],[218,247,]),'logical1':([187,],[222,]),'read1':([190,],[226,]),'termina_fun':([198,],[233,]),'vcte3':([203,],[238,]),'graphr1':([229,252,],[253,263,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON declara_vars program2 star','program',6,'p_program','parser.py',30),
  ('program_vars -> vars program_vars','program_vars',2,'p_program_vars','parser.py',43),
  ('program_vars -> empty','program_vars',1,'p_program_vars','parser.py',44),
  ('program2 -> function program2','program2',2,'p_program2','parser.py',53),
  ('program2 -> empty','program2',1,'p_program2','parser.py',54),
  ('star -> starI declara_vars star1 CLOSEBRACES','star',4,'p_star','parser.py',64),
  ('starI -> MULTIPLICATION OPENBRACES','starI',2,'p_starI','parser.py',75),
  ('star1 -> stmt star1','star1',2,'p_star1','parser.py',81),
  ('star1 -> empty','star1',1,'p_star1','parser.py',82),
  ('declara_vars -> vars declara_vars','declara_vars',2,'p_declara_vars','parser.py',88),
  ('declara_vars -> empty','declara_vars',1,'p_declara_vars','parser.py',89),
  ('loop -> while','loop',1,'p_loop','parser.py',101),
  ('loop -> for','loop',1,'p_loop','parser.py',102),
  ('stmt -> assignment','stmt',1,'p_stmt','parser.py',109),
  ('stmt -> condition','stmt',1,'p_stmt','parser.py',110),
  ('stmt -> print','stmt',1,'p_stmt','parser.py',111),
  ('stmt -> loop','stmt',1,'p_stmt','parser.py',112),
  ('stmt -> read','stmt',1,'p_stmt','parser.py',113),
  ('stmt -> graphstmt','stmt',1,'p_stmt','parser.py',114),
  ('stmt -> graphr','stmt',1,'p_stmt','parser.py',115),
  ('stmt -> funCall','stmt',1,'p_stmt','parser.py',116),
  ('stmt -> return','stmt',1,'p_stmt','parser.py',117),
  ('functionI -> type ID','functionI',2,'p_functionI','parser.py',128),
  ('functionI -> VOID ID','functionI',2,'p_functionI','parser.py',129),
  ('function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun','function',7,'p_function','parser.py',135),
  ('function1 -> type','function1',1,'p_function1','parser.py',148),
  ('function1 -> VOID','function1',1,'p_function1','parser.py',149),
  ('inicia_fun -> OPENBRACES','inicia_fun',1,'p_inicia_fun','parser.py',156),
  ('termina_fun -> CLOSEBRACES','termina_fun',1,'p_termina_fun','parser.py',162),
  ('function2 -> OPENPAREN function3 CLOSEPAREN','function2',3,'p_function2','parser.py',167),
  ('function3 -> type ID function5','function3',3,'p_function3','parser.py',173),
  ('function3 -> empty','function3',1,'p_function3','parser.py',174),
  ('function4 -> stmt function4','function4',2,'p_function4','parser.py',180),
  ('function4 -> empty','function4',1,'p_function4','parser.py',181),
  ('function5 -> COMMA type ID function3','function5',4,'p_function5','parser.py',190),
  ('fun_vars -> vars fun_vars','fun_vars',2,'p_fun_vars','parser.py',196),
  ('fun_vars -> empty','fun_vars',1,'p_fun_vars','parser.py',197),
  ('vars -> type ID vars1 SEMICOLON','vars',4,'p_vars','parser.py',213),
  ('vars1 -> equals exp','vars1',2,'p_vars1','parser.py',229),
  ('vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3','vars1',4,'p_vars1','parser.py',230),
  ('vars1 -> empty','vars1',1,'p_vars1','parser.py',231),
  ('vars3 -> OPENBRACKET CTEINT CLOSEBRACKET','vars3',3,'p_vars3','parser.py',253),
  ('vars3 -> empty','vars3',1,'p_vars3','parser.py',254),
  ('type -> INT','type',1,'p_type','parser.py',261),
  ('type -> FLOAT','type',1,'p_type','parser.py',262),
  ('type -> CHAR','type',1,'p_type','parser.py',263),
  ('print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON','print',5,'p_print','parser.py',271),
  ('read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON','read',6,'p_read','parser.py',277),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET','read1',6,'p_read1','parser.py',284),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET','read1',3,'p_read1','parser.py',285),
  ('read1 -> empty','read1',1,'p_read1','parser.py',286),
  ('equals -> EQUALS','equals',1,'p_equals','parser.py',291),
  ('id -> ID','id',1,'p_id','parser.py',299),
  ('assignment -> id assignment1 equals assignment3 SEMICOLON','assignment',5,'p_assignment','parser.py',309),
  ('assignment1 -> assignment2','assignment1',1,'p_assignment1','parser.py',317),
  ('assignment1 -> assignment2 assignment1','assignment1',2,'p_assignment1','parser.py',318),
  ('assignment1 -> empty','assignment1',1,'p_assignment1','parser.py',319),
  ('assignment2 -> OPENBRACKET exp CLOSEBRACKET','assignment2',3,'p_assignment2','parser.py',325),
  ('assignment3 -> exp','assignment3',1,'p_assignment3','parser.py',331),
  ('assignment3 -> read','assignment3',1,'p_assignment3','parser.py',332),
  ('vcte -> cte','vcte',1,'p_vcte','parser.py',340),
  ('vcte -> id vcte1','vcte',2,'p_vcte','parser.py',341),
  ('vcte -> funCall','vcte',1,'p_vcte','parser.py',342),
  ('vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3','vcte1',4,'p_vcte1','parser.py',354),
  ('vcte1 -> empty','vcte1',1,'p_vcte1','parser.py',355),
  ('vcte3 -> OPENBRACKET exp CLOSEBRACKET','vcte3',3,'p_vcte3','parser.py',361),
  ('vcte3 -> empty','vcte3',1,'p_vcte3','parser.py',362),
  ('cte -> CTEINT','cte',1,'p_cte','parser.py',371),
  ('cte -> CTEFLOAT','cte',1,'p_cte','parser.py',372),
  ('cte -> CTECHAR','cte',1,'p_cte','parser.py',373),
  ('return -> RETURN return1 SEMICOLON','return',3,'p_return','parser.py',382),
  ('return1 -> vcte','return1',1,'p_return1','parser.py',388),
  ('return1 -> exp','return1',1,'p_return1','parser.py',389),
  ('expression -> exp expression1','expression',2,'p_expression','parser.py',397),
  ('expression1 -> loper exp','expression1',2,'p_expression1','parser.py',403),
  ('expression1 -> empty','expression1',1,'p_expression1','parser.py',404),
  ('loper -> GREATER','loper',1,'p_loper','parser.py',411),
  ('loper -> LESS','loper',1,'p_loper','parser.py',412),
  ('loper -> NOTEQUAL','loper',1,'p_loper','parser.py',413),
  ('loper -> ISEQUAL','loper',1,'p_loper','parser.py',414),
  ('logical -> expression logical1 expression','logical',3,'p_logical','parser.py',424),
  ('logical1 -> OR','logical1',1,'p_logical1','parser.py',430),
  ('logical1 -> AND','logical1',1,'p_logical1','parser.py',431),
  ('condition -> IF head body condition1','condition',4,'p_condition','parser.py',438),
  ('condition1 -> ELSEIF head body condition1','condition1',4,'p_condition1','parser.py',444),
  ('condition1 -> ELSE body','condition1',2,'p_condition1','parser.py',445),
  ('condition1 -> empty','condition1',1,'p_condition1','parser.py',446),
  ('head -> OPENPAREN head1 CLOSEPAREN','head',3,'p_head','parser.py',453),
  ('head1 -> expression','head1',1,'p_head1','parser.py',459),
  ('head1 -> logical','head1',1,'p_head1','parser.py',460),
  ('body -> OPENBRACES body1 CLOSEBRACES','body',3,'p_body','parser.py',468),
  ('body1 -> stmt body1','body1',2,'p_body1','parser.py',474),
  ('body1 -> empty','body1',1,'p_body1','parser.py',475),
  ('for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body','for',7,'p_for','parser.py',482),
  ('while -> WHILE head body','while',3,'p_while','parser.py',489),
  ('funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON','funCall',5,'p_funCall','parser.py',496),
  ('funCall2 -> exp funCall3','funCall2',2,'p_funCall2','parser.py',507),
  ('funCall2 -> empty','funCall2',1,'p_funCall2','parser.py',508),
  ('funCall3 -> COMMA exp funCall2','funCall3',3,'p_funCall3','parser.py',514),
  ('funCall3 -> empty','funCall3',1,'p_funCall3','parser.py',515),
  ('laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN','laRegla',5,'p_laRegla','parser.py',521),
  ('laRegla2 -> OPENPAREN exp CLOSEPAREN','laRegla2',3,'p_laRegla2','parser.py',527),
  ('graphstmt -> graphfig','graphstmt',1,'p_graphstmt','parser.py',534),
  ('graphstmt -> graphview','graphstmt',1,'p_graphstmt','parser.py',535),
  ('graphstmt -> graphmove','graphstmt',1,'p_graphstmt','parser.py',536),
  ('graphfig -> graphfig1 SEMICOLON','graphfig',2,'p_graphfig','parser.py',544),
  ('graphfig1 -> CIRCLE laRegla2','graphfig1',2,'p_graphfig1','parser.py',550),
  ('graphfig1 -> SQUARE laRegla2','graphfig1',2,'p_graphfig1','parser.py',551),
  ('graphfig1 -> TRIANGLE laRegla','graphfig1',2,'p_graphfig1','parser.py',552),
  ('graphfig1 -> RECTANGLE laRegla','graphfig1',2,'p_graphfig1','parser.py',553),
  ('graphmove -> graphmove1 SEMICOLON','graphmove',2,'p_graphmove','parser.py',561),
  ('graphmove1 -> HAND_DOWN','graphmove1',1,'p_graphmove1','parser.py',567),
  ('graphmove1 -> HAND_UP','graphmove1',1,'p_graphmove1','parser.py',568),
  ('graphmove1 -> graphmove2','graphmove1',1,'p_graphmove1','parser.py',569),
  ('graphmove2 -> GO laRegla2','graphmove2',2,'p_graphmove2','parser.py',575),
  ('graphmove2 -> LEFT laRegla2','graphmove2',2,'p_graphmove2','parser.py',576),
  ('graphmove2 -> RIGHT laRegla2','graphmove2',2,'p_graphmove2','parser.py',577),
  ('graphmove2 -> BACK laRegla2','graphmove2',2,'p_graphmove2','parser.py',578),
  ('graphmove2 -> ARC laRegla','graphmove2',2,'p_graphmove2','parser.py',579),
  ('graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES','graphr',6,'p_graphr','parser.py',587),
  ('graphr1 -> graphstmt graphr1','graphr1',2,'p_graphr1','parser.py',593),
  ('graphr1 -> empty','graphr1',1,'p_graphr1','parser.py',594),
  ('graphview -> graphview1 SEMICOLON','graphview',2,'p_graphview','parser.py',602),
  ('graphview1 -> HIDE_STAR','graphview1',1,'p_graphview1','parser.py',608),
  ('graphview1 -> SHOW_STAR','graphview1',1,'p_graphview1','parser.py',609),
  ('graphview1 -> graphview2 exp','graphview1',2,'p_graphview1','parser.py',610),
  ('graphview2 -> SETXY graphview3','graphview2',2,'p_graphview2','parser.py',616),
  ('graphview2 -> COLOR_STAR','graphview2',1,'p_graphview2','parser.py',617),
  ('graphview2 -> SIZE_STAR','graphview2',1,'p_graphview2','parser.py',618),
  ('graphview3 -> exp COMMA','graphview3',2,'p_graphview3','parser.py',624),
  ('graphview3 -> laRegla','graphview3',1,'p_graphview3','parser.py',625),
  ('exp -> term exp1','exp',2,'p_exp','parser.py',633),
  ('exp1 -> ADDITION exp','exp1',2,'p_exp1','parser.py',656),
  ('exp1 -> SUBSTRACTION exp','exp1',2,'p_exp1','parser.py',657),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',658),
  ('openP -> OPENPAREN','openP',1,'p_openP','parser.py',667),
  ('closeP -> CLOSEPAREN','closeP',1,'p_closeP','parser.py',675),
  ('factor -> vcte','factor',1,'p_factor','parser.py',685),
  ('factor -> factor1','factor',1,'p_factor','parser.py',686),
  ('factor1 -> factor2 vcte','factor1',2,'p_factor1','parser.py',694),
  ('factor1 -> openP expression closeP','factor1',3,'p_factor1','parser.py',695),
  ('factor2 -> ADDITION','factor2',1,'p_factor2','parser.py',701),
  ('factor2 -> SUBSTRACTION','factor2',1,'p_factor2','parser.py',702),
  ('term -> factor term1','term',2,'p_term','parser.py',714),
  ('term1 -> MULTIPLICATION term','term1',2,'p_term1','parser.py',720),
  ('term1 -> DIVISION term','term1',2,'p_term1','parser.py',721),
  ('term1 -> empty','term1',1,'p_term1','parser.py',722),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',732),
]
