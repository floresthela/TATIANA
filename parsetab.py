
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDITION AND ARC BACK CHAR CIRCLE CLOSEBRACES CLOSEBRACKET CLOSEPAREN COLOR_STAR COMMA CTECHAR CTEFLOAT CTEINT DIVISION ELSE ELSEIF EQUALS FLOAT FOR FUN GO GREATER HAND_DOWN HAND_UP HIDE_STAR ID IF INT ISEQUAL LEFT LESS MULTIPLICATION NOTEQUAL OPENBRACES OPENBRACKET OPENPAREN OR PRINT PROGRAM READ RECTANGLE REPEAT RETURN RIGHT SEMICOLON SETXY SHOW_STAR SIMPLEQUOTES SIZE_STAR SQUARE SUBSTRACTION TRIANGLE TWODOTS VARS VOID WHILE\n    program : PROGRAM ID SEMICOLON declara_vars program2 star\n    \n    program_vars : vars program_vars\n            | empty\n    \n    program2 : function program2\n            | empty\n    \n    star : starI declara_vars star1 CLOSEBRACES\n    \n    starI : MULTIPLICATION OPENBRACES\n    \n    star1 : stmt star1\n        | empty\n    \n    declara_vars : vars declara_vars\n          | empty\n    \n    loop : while\n        | for\n    \n    stmt : assignment\n        | condition\n        | print\n        | loop\n        | read\n        | graphstmt\n        | graphr\n        | funCall SEMICOLON\n        | return\n    \n    functionI : type ID\n              | VOID ID\n    \n    function : FUN functionI function2 inicia_fun declara_vars function4 termina_fun\n    \n    function1 : type\n              | VOID\n    \n    inicia_fun : OPENBRACES\n    \n    termina_fun : CLOSEBRACES\n    \n    function2 : OPENPAREN function3 CLOSEPAREN\n    \n    function3 : type ID function5\n              | empty\n    \n    function4 : stmt function4\n              | empty\n    \n    function5 : COMMA type ID function3\n    \n    fun_vars : vars fun_vars\n              | empty\n    \n    vars : type ID vars1 equals exp SEMICOLON\n         | type ID vars1 SEMICOLON\n    \n    vars1 : OPENBRACKET CTEINT CLOSEBRACKET vars3\n        | empty\n    \n    vars3 : OPENBRACKET CTEINT CLOSEBRACKET\n        | empty\n    \n    type : INT\n         | FLOAT\n         | CHAR\n    \n    print : PRINT OPENPAREN expression CLOSEPAREN SEMICOLON\n    \n    read : READ OPENPAREN id read1 CLOSEPAREN SEMICOLON\n    \n    read1 : OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET\n              | OPENBRACKET exp CLOSEBRACKET\n              | empty\n    \n    equals : EQUALS\n    \n    id : ID\n    \n    assignment : id assignment1 equals assignment3 SEMICOLON\n    \n    assignment1 : assignment2\n                | assignment2 assignment1\n                | empty\n    \n    assignment2 : OPENBRACKET exp CLOSEBRACKET\n    \n    assignment3 : exp\n                | read\n    \n    vcte : cte_int\n         | cte_float\n         | cte_char\n         | id vcte1\n         | funCall\n    \n    vcte1 : OPENBRACKET exp CLOSEBRACKET vcte3\n          | empty\n    \n    vcte3 : OPENBRACKET exp CLOSEBRACKET\n        | empty\n\n    \n    cte_int : CTEINT\n    \n    cte_float : CTEFLOAT\n    \n    cte_char : CTECHAR\n    \n    return : RETURN return1 SEMICOLON\n    \n    return1 : vcte\n            | exp\n    \n    expression : exp expression1\n    \n    expression1 : loper exp\n             | empty\n    \n    loper : GREATER\n          | LESS\n          | NOTEQUAL\n          | ISEQUAL\n    \n    logical : expression logical1 expression\n    \n    logical1 : OR\n             | AND\n    \n    condition : IF head body_cond condition1\n    \n    condition1 : elseif head body_cond condition1\n               | else body\n               | empty\n    \n    elseif : ELSEIF\n    \n    else : ELSE\n    \n    head : OPENPAREN head1 CLOSEPAREN\n    \n    head1 : expression\n          | logical\n    \n    body : OPENBRACES body1 CLOSEBRACES\n    \n    body_cond : OPENBRACES body1 close_condition\n    \n    close_condition : CLOSEBRACES\n    \n    body1 : stmt body1\n          | empty\n    \n    for : FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body\n    \n    while : WHILE  head body\n    \n    funCall : ID OPENPAREN funCall2 CLOSEPAREN\n    \n    funCall2 : exp funCall3\n             | empty\n    \n    funCall3 : COMMA exp funCall2\n             | empty\n    \n    laRegla : OPENPAREN exp COMMA exp CLOSEPAREN\n    \n    laRegla2 : OPENPAREN exp CLOSEPAREN\n    \n    graphstmt : graphfig\n             | graphview\n             | graphmove\n    \n    graphfig : graphfig1 SEMICOLON\n    \n    graphfig1 : CIRCLE laRegla2\n            | SQUARE laRegla2\n            | TRIANGLE laRegla\n            | RECTANGLE laRegla\n    \n    graphmove :  graphmove1  SEMICOLON\n    \n    graphmove1 : HAND_DOWN\n              | HAND_UP\n              | graphmove2\n    \n    graphmove2 : GO laRegla2\n              | LEFT laRegla2\n              | RIGHT laRegla2\n              | BACK laRegla2\n              | ARC laRegla\n    \n    graphr : REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES\n    \n    graphr1 : graphstmt graphr1\n           | empty\n    \n    graphview : graphview1 SEMICOLON\n    \n    graphview1 : HIDE_STAR\n              | SHOW_STAR\n              | graphview2 exp\n    \n    graphview2 : SETXY graphview3\n              | COLOR_STAR\n              | SIZE_STAR\n    \n    graphview3 : exp COMMA\n              | laRegla\n    \n    exp : term exp1\n    \n    exp1 : ADDITION exp\n         | SUBSTRACTION exp\n         | empty\n    \n    openP : OPENPAREN\n    \n    closeP : CLOSEPAREN\n    \n    factor : vcte\n           | factor1\n    \n    factor1 : factor2 vcte\n            | openP expression closeP\n    \n    factor2 : ADDITION\n            | SUBSTRACTION\n    \n    term : factor term1\n    \n    term1 : MULTIPLICATION term\n          | DIVISION term\n          | empty\n    empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,18,110,],[0,-1,-6,]),'ID':([2,6,7,8,9,10,11,16,19,23,24,28,29,34,35,36,39,41,42,43,44,45,46,47,49,53,54,56,57,58,59,61,73,77,78,79,85,86,88,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,112,116,118,119,120,122,127,128,129,130,132,135,138,140,141,147,150,151,152,153,154,155,156,157,158,159,160,161,162,168,171,172,183,184,185,189,191,195,196,197,198,200,201,203,205,206,207,208,214,217,221,224,225,226,229,232,234,237,239,243,244,247,249,250,251,254,260,261,265,266,267,268,269,272,275,278,279,280,281,],[3,-154,-11,17,-44,-45,-46,-10,-154,32,33,60,-7,90,-39,-52,60,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,90,90,90,90,-134,-135,-154,-28,149,-53,-154,-154,-144,-145,-61,-62,-63,-154,-65,90,90,-70,-71,-72,-142,-148,-149,-21,90,90,90,178,90,186,-112,-129,-117,90,90,-133,-137,90,60,-38,-138,90,90,-141,-150,90,90,-153,-64,90,-67,-146,90,-154,60,-73,-101,60,-136,60,-139,-140,-151,-152,-147,-143,90,-79,-80,-81,-82,-86,-89,60,90,-84,-85,90,-102,90,90,90,264,-154,-54,-88,-96,-97,-47,90,-95,90,-66,-69,-154,-48,-126,-107,-87,90,-100,-68,]),'SEMICOLON':([3,17,25,27,48,64,65,66,71,72,74,75,76,90,91,92,93,94,95,96,97,98,99,100,103,104,105,109,123,124,125,131,133,134,136,137,142,143,144,145,146,151,154,155,158,159,161,162,166,167,195,196,197,198,200,201,210,211,212,227,232,238,244,246,255,266,267,269,275,281,],[4,-154,35,-41,112,128,129,130,-130,-131,-118,-119,-120,-53,150,-154,-154,-144,-145,-61,-62,-63,-154,-65,-70,-71,-72,-154,183,-74,-75,-113,-114,-115,-116,-132,-121,-122,-123,-124,-125,-138,-141,-150,-153,-64,-67,-146,-40,-43,-139,-140,-151,-152,-147,-143,247,-59,-60,254,-102,-108,-154,-42,269,-66,-69,-48,-107,-68,]),'FUN':([4,5,6,7,13,16,35,150,240,241,],[-154,15,-154,-11,15,-10,-39,-38,-25,-29,]),'MULTIPLICATION':([4,5,6,7,12,13,14,16,21,35,90,93,94,95,96,97,98,99,100,103,104,105,124,150,159,161,162,200,201,232,240,241,244,266,267,281,],[-154,-154,-154,-11,20,-154,-5,-10,-4,-39,-53,156,-144,-145,-61,-62,-63,-154,-65,-70,-71,-72,-144,-38,-64,-67,-146,-147,-143,-102,-25,-29,-154,-66,-69,-68,]),'INT':([4,6,15,19,29,31,35,85,86,150,194,264,],[9,9,9,9,-7,9,-39,9,-28,-38,9,9,]),'FLOAT':([4,6,15,19,29,31,35,85,86,150,194,264,],[10,10,10,10,-7,10,-39,10,-28,-38,10,10,]),'CHAR':([4,6,15,19,29,31,35,85,86,150,194,264,],[11,11,11,11,-7,11,-39,11,-28,-38,11,11,]),'IF':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,183,184,185,191,214,217,221,247,249,250,251,254,261,268,269,272,278,280,],[-154,-11,-10,-154,51,-7,-39,51,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,-154,-28,-21,-112,-129,-117,51,-38,-154,51,-73,-101,51,51,-86,-89,51,-54,-88,-96,-97,-47,-95,-154,-48,-126,-87,-100,]),'PRINT':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,183,184,185,191,214,217,221,247,249,250,251,254,261,268,269,272,278,280,],[-154,-11,-10,-154,52,-7,-39,52,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,-154,-28,-21,-112,-129,-117,52,-38,-154,52,-73,-101,52,52,-86,-89,52,-54,-88,-96,-97,-47,-95,-154,-48,-126,-87,-100,]),'READ':([6,7,16,19,28,29,35,36,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,168,171,172,183,184,185,191,214,217,221,247,249,250,251,254,261,268,269,272,278,280,],[-154,-11,-10,-154,55,-7,-39,-52,55,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,-154,-28,-21,-112,-129,-117,55,-38,55,-154,55,-73,-101,55,55,-86,-89,55,-54,-88,-96,-97,-47,-95,-154,-48,-126,-87,-100,]),'REPEAT':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,183,184,185,191,214,217,221,247,249,250,251,254,261,268,269,272,278,280,],[-154,-11,-10,-154,59,-7,-39,59,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,-154,-28,-21,-112,-129,-117,59,-38,-154,59,-73,-101,59,59,-86,-89,59,-54,-88,-96,-97,-47,-95,-154,-48,-126,-87,-100,]),'RETURN':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,183,184,185,191,214,217,221,247,249,250,251,254,261,268,269,272,278,280,],[-154,-11,-10,-154,61,-7,-39,61,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,-154,-28,-21,-112,-129,-117,61,-38,-154,61,-73,-101,61,61,-86,-89,61,-54,-88,-96,-97,-47,-95,-154,-48,-126,-87,-100,]),'WHILE':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,183,184,185,191,214,217,221,247,249,250,251,254,261,268,269,272,278,280,],[-154,-11,-10,-154,62,-7,-39,62,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,-154,-28,-21,-112,-129,-117,62,-38,-154,62,-73,-101,62,62,-86,-89,62,-54,-88,-96,-97,-47,-95,-154,-48,-126,-87,-100,]),'FOR':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,183,184,185,191,214,217,221,247,249,250,251,254,261,268,269,272,278,280,],[-154,-11,-10,-154,63,-7,-39,63,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,-154,-28,-21,-112,-129,-117,63,-38,-154,63,-73,-101,63,63,-86,-89,63,-54,-88,-96,-97,-47,-95,-154,-48,-126,-87,-100,]),'CIRCLE':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,185,191,214,217,221,231,247,249,250,251,254,257,261,268,269,272,278,280,],[-154,-11,-10,-154,67,-7,-39,67,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,-154,-28,-21,-112,-129,-117,67,-38,-154,67,67,-73,-101,67,67,-86,-89,67,67,-54,-88,-96,-97,-47,67,-95,-154,-48,-126,-87,-100,]),'SQUARE':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,185,191,214,217,221,231,247,249,250,251,254,257,261,268,269,272,278,280,],[-154,-11,-10,-154,68,-7,-39,68,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,-154,-28,-21,-112,-129,-117,68,-38,-154,68,68,-73,-101,68,68,-86,-89,68,68,-54,-88,-96,-97,-47,68,-95,-154,-48,-126,-87,-100,]),'TRIANGLE':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,185,191,214,217,221,231,247,249,250,251,254,257,261,268,269,272,278,280,],[-154,-11,-10,-154,69,-7,-39,69,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,-154,-28,-21,-112,-129,-117,69,-38,-154,69,69,-73,-101,69,69,-86,-89,69,69,-54,-88,-96,-97,-47,69,-95,-154,-48,-126,-87,-100,]),'RECTANGLE':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,185,191,214,217,221,231,247,249,250,251,254,257,261,268,269,272,278,280,],[-154,-11,-10,-154,70,-7,-39,70,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,-154,-28,-21,-112,-129,-117,70,-38,-154,70,70,-73,-101,70,70,-86,-89,70,70,-54,-88,-96,-97,-47,70,-95,-154,-48,-126,-87,-100,]),'HIDE_STAR':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,185,191,214,217,221,231,247,249,250,251,254,257,261,268,269,272,278,280,],[-154,-11,-10,-154,71,-7,-39,71,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,-154,-28,-21,-112,-129,-117,71,-38,-154,71,71,-73,-101,71,71,-86,-89,71,71,-54,-88,-96,-97,-47,71,-95,-154,-48,-126,-87,-100,]),'SHOW_STAR':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,185,191,214,217,221,231,247,249,250,251,254,257,261,268,269,272,278,280,],[-154,-11,-10,-154,72,-7,-39,72,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,-154,-28,-21,-112,-129,-117,72,-38,-154,72,72,-73,-101,72,72,-86,-89,72,72,-54,-88,-96,-97,-47,72,-95,-154,-48,-126,-87,-100,]),'HAND_DOWN':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,185,191,214,217,221,231,247,249,250,251,254,257,261,268,269,272,278,280,],[-154,-11,-10,-154,74,-7,-39,74,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,-154,-28,-21,-112,-129,-117,74,-38,-154,74,74,-73,-101,74,74,-86,-89,74,74,-54,-88,-96,-97,-47,74,-95,-154,-48,-126,-87,-100,]),'HAND_UP':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,185,191,214,217,221,231,247,249,250,251,254,257,261,268,269,272,278,280,],[-154,-11,-10,-154,75,-7,-39,75,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,-154,-28,-21,-112,-129,-117,75,-38,-154,75,75,-73,-101,75,75,-86,-89,75,75,-54,-88,-96,-97,-47,75,-95,-154,-48,-126,-87,-100,]),'SETXY':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,185,191,214,217,221,231,247,249,250,251,254,257,261,268,269,272,278,280,],[-154,-11,-10,-154,77,-7,-39,77,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,-154,-28,-21,-112,-129,-117,77,-38,-154,77,77,-73,-101,77,77,-86,-89,77,77,-54,-88,-96,-97,-47,77,-95,-154,-48,-126,-87,-100,]),'COLOR_STAR':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,185,191,214,217,221,231,247,249,250,251,254,257,261,268,269,272,278,280,],[-154,-11,-10,-154,78,-7,-39,78,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,-154,-28,-21,-112,-129,-117,78,-38,-154,78,78,-73,-101,78,78,-86,-89,78,78,-54,-88,-96,-97,-47,78,-95,-154,-48,-126,-87,-100,]),'SIZE_STAR':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,185,191,214,217,221,231,247,249,250,251,254,257,261,268,269,272,278,280,],[-154,-11,-10,-154,79,-7,-39,79,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,-154,-28,-21,-112,-129,-117,79,-38,-154,79,79,-73,-101,79,79,-86,-89,79,79,-54,-88,-96,-97,-47,79,-95,-154,-48,-126,-87,-100,]),'GO':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,185,191,214,217,221,231,247,249,250,251,254,257,261,268,269,272,278,280,],[-154,-11,-10,-154,80,-7,-39,80,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,-154,-28,-21,-112,-129,-117,80,-38,-154,80,80,-73,-101,80,80,-86,-89,80,80,-54,-88,-96,-97,-47,80,-95,-154,-48,-126,-87,-100,]),'LEFT':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,185,191,214,217,221,231,247,249,250,251,254,257,261,268,269,272,278,280,],[-154,-11,-10,-154,81,-7,-39,81,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,-154,-28,-21,-112,-129,-117,81,-38,-154,81,81,-73,-101,81,81,-86,-89,81,81,-54,-88,-96,-97,-47,81,-95,-154,-48,-126,-87,-100,]),'RIGHT':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,185,191,214,217,221,231,247,249,250,251,254,257,261,268,269,272,278,280,],[-154,-11,-10,-154,82,-7,-39,82,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,-154,-28,-21,-112,-129,-117,82,-38,-154,82,82,-73,-101,82,82,-86,-89,82,82,-54,-88,-96,-97,-47,82,-95,-154,-48,-126,-87,-100,]),'BACK':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,185,191,214,217,221,231,247,249,250,251,254,257,261,268,269,272,278,280,],[-154,-11,-10,-154,83,-7,-39,83,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,-154,-28,-21,-112,-129,-117,83,-38,-154,83,83,-73,-101,83,83,-86,-89,83,83,-54,-88,-96,-97,-47,83,-95,-154,-48,-126,-87,-100,]),'ARC':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,112,128,129,130,147,150,171,172,179,183,184,185,191,214,217,221,231,247,249,250,251,254,257,261,268,269,272,278,280,],[-154,-11,-10,-154,84,-7,-39,84,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,-154,-28,-21,-112,-129,-117,84,-38,-154,84,84,-73,-101,84,84,-86,-89,84,84,-54,-88,-96,-97,-47,84,-95,-154,-48,-126,-87,-100,]),'CLOSEBRACES':([6,7,16,19,28,29,35,38,39,40,41,42,43,44,45,46,47,49,53,54,56,57,58,85,86,111,112,128,129,130,147,150,171,172,183,184,185,190,191,192,214,217,220,221,222,231,236,242,247,249,250,251,252,254,257,258,259,261,268,269,271,272,278,280,],[-154,-11,-10,-154,-154,-7,-39,110,-154,-9,-14,-15,-16,-17,-18,-19,-20,-22,-12,-13,-109,-110,-111,-154,-28,-8,-21,-112,-129,-117,-154,-38,-154,-154,-73,-101,-154,241,-154,-34,-86,-89,251,-154,-99,-154,261,-33,-54,-88,-96,-97,-98,-47,-154,272,-128,-95,-154,-48,-127,-126,-87,-100,]),'VOID':([15,],[24,]),'OPENBRACKET':([17,50,60,90,99,109,114,177,178,213,244,270,],[26,116,-53,-53,160,165,116,229,-53,-58,265,279,]),'EQUALS':([17,25,27,50,60,109,113,114,115,166,167,169,213,246,],[-154,36,-41,-154,-53,-154,36,-55,-57,-40,-43,-56,-58,-42,]),'OPENBRACES':([20,30,90,92,93,94,95,96,97,98,99,100,103,104,105,117,121,126,148,151,154,155,158,159,161,162,195,196,197,198,200,201,216,219,223,232,244,248,266,267,274,281,],[29,86,-53,-154,-154,-144,-145,-61,-62,-63,-154,-65,-70,-71,-72,172,179,185,-30,-138,-141,-150,-153,-64,-67,-146,-139,-140,-151,-152,-147,-143,185,-91,-92,-102,-154,172,-66,-69,185,-68,]),'OPENPAREN':([22,32,33,34,36,51,52,55,59,60,61,62,63,67,68,69,70,73,77,78,79,80,81,82,83,84,90,92,93,94,95,96,97,98,99,100,102,103,104,105,106,116,118,119,122,132,135,138,140,141,151,152,153,154,155,156,157,158,159,160,161,162,168,189,195,196,197,198,200,201,203,205,206,207,208,215,218,224,225,226,229,232,234,237,239,244,260,265,266,267,275,279,281,],[31,-23,-24,106,-52,118,119,120,106,122,106,118,127,132,132,135,135,106,141,-134,-135,132,132,132,132,135,122,-154,-154,-144,-145,-61,-62,-63,-154,-65,106,-70,-71,-72,-142,106,106,106,106,106,106,-133,-137,106,-138,106,106,-141,-150,106,106,-153,-64,106,-67,-146,106,-136,-139,-140,-151,-152,-147,-143,106,-79,-80,-81,-82,118,-90,106,-84,-85,106,-102,106,106,106,-154,106,106,-66,-69,-107,106,-68,]),'CTEINT':([26,34,36,59,61,73,77,78,79,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,116,118,119,122,132,135,138,140,141,151,152,153,154,155,156,157,158,159,160,161,162,165,168,189,195,196,197,198,200,201,203,205,206,207,208,224,225,226,229,232,234,237,239,244,260,265,266,267,275,279,281,],[37,103,-52,103,103,103,103,-134,-135,-53,-154,-154,-144,-145,-61,-62,-63,-154,-65,103,103,-70,-71,-72,-142,-148,-149,103,103,103,103,103,103,-133,-137,103,-138,103,103,-141,-150,103,103,-153,-64,103,-67,-146,209,103,-136,-139,-140,-151,-152,-147,-143,103,-79,-80,-81,-82,103,-84,-85,103,-102,103,103,103,-154,103,103,-66,-69,-107,103,-68,]),'CLOSEPAREN':([31,87,89,90,92,93,94,95,96,97,98,99,100,103,104,105,122,151,154,155,158,159,161,162,163,164,173,174,175,176,177,178,180,181,182,187,193,195,196,197,198,200,201,202,204,228,230,232,233,235,244,245,253,260,262,263,264,266,267,270,273,276,281,283,],[-154,148,-32,-53,-154,-154,-144,-145,-61,-62,-63,-154,-65,-70,-71,-72,-154,-138,-141,-150,-153,-64,-67,-146,201,-154,223,-93,-94,227,-154,-53,232,-154,-104,238,-31,-139,-140,-151,-152,-147,-143,-76,-78,255,-51,-102,-103,-106,-154,-77,-83,-154,274,275,-154,-66,-69,-50,-105,-35,-68,-49,]),'CTEFLOAT':([34,36,59,61,73,77,78,79,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,116,118,119,122,132,135,138,140,141,151,152,153,154,155,156,157,158,159,160,161,162,168,189,195,196,197,198,200,201,203,205,206,207,208,224,225,226,229,232,234,237,239,244,260,265,266,267,275,279,281,],[104,-52,104,104,104,104,-134,-135,-53,-154,-154,-144,-145,-61,-62,-63,-154,-65,104,104,-70,-71,-72,-142,-148,-149,104,104,104,104,104,104,-133,-137,104,-138,104,104,-141,-150,104,104,-153,-64,104,-67,-146,104,-136,-139,-140,-151,-152,-147,-143,104,-79,-80,-81,-82,104,-84,-85,104,-102,104,104,104,-154,104,104,-66,-69,-107,104,-68,]),'CTECHAR':([34,36,59,61,73,77,78,79,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,116,118,119,122,132,135,138,140,141,151,152,153,154,155,156,157,158,159,160,161,162,168,189,195,196,197,198,200,201,203,205,206,207,208,224,225,226,229,232,234,237,239,244,260,265,266,267,275,279,281,],[105,-52,105,105,105,105,-134,-135,-53,-154,-154,-144,-145,-61,-62,-63,-154,-65,105,105,-70,-71,-72,-142,-148,-149,105,105,105,105,105,105,-133,-137,105,-138,105,105,-141,-150,105,105,-153,-64,105,-67,-146,105,-136,-139,-140,-151,-152,-147,-143,105,-79,-80,-81,-82,105,-84,-85,105,-102,105,105,105,-154,105,105,-66,-69,-107,105,-68,]),'ADDITION':([34,36,59,61,73,77,78,79,90,92,93,94,95,96,97,98,99,100,102,103,104,105,106,116,118,119,122,124,132,135,138,140,141,151,152,153,154,155,156,157,158,159,160,161,162,168,189,195,196,197,198,200,201,203,205,206,207,208,224,225,226,229,232,234,237,239,244,260,265,266,267,275,279,281,],[107,-52,107,107,107,107,-134,-135,-53,152,-154,-144,-145,-61,-62,-63,-154,-65,107,-70,-71,-72,-142,107,107,107,107,-144,107,107,-133,-137,107,-138,107,107,-141,-150,107,107,-153,-64,107,-67,-146,107,-136,-139,-140,-151,-152,-147,-143,107,-79,-80,-81,-82,107,-84,-85,107,-102,107,107,107,-154,107,107,-66,-69,-107,107,-68,]),'SUBSTRACTION':([34,36,59,61,73,77,78,79,90,92,93,94,95,96,97,98,99,100,102,103,104,105,106,116,118,119,122,124,132,135,138,140,141,151,152,153,154,155,156,157,158,159,160,161,162,168,189,195,196,197,198,200,201,203,205,206,207,208,224,225,226,229,232,234,237,239,244,260,265,266,267,275,279,281,],[108,-52,108,108,108,108,-134,-135,-53,153,-154,-144,-145,-61,-62,-63,-154,-65,108,-70,-71,-72,-142,108,108,108,108,-144,108,108,-133,-137,108,-138,108,108,-141,-150,108,108,-153,-64,108,-67,-146,108,-136,-139,-140,-151,-152,-147,-143,108,-79,-80,-81,-82,108,-84,-85,108,-102,108,108,108,-154,108,108,-66,-69,-107,108,-68,]),'CLOSEBRACKET':([37,90,92,93,94,95,96,97,98,99,100,103,104,105,151,154,155,158,159,161,162,170,195,196,197,198,199,200,201,209,232,244,256,266,267,277,281,282,],[109,-53,-154,-154,-144,-145,-61,-62,-63,-154,-65,-70,-71,-72,-138,-141,-150,-153,-64,-67,-146,213,-139,-140,-151,-152,244,-147,-143,246,-102,-154,270,-66,-69,281,-68,283,]),'DIVISION':([90,93,94,95,96,97,98,99,100,103,104,105,124,159,161,162,200,201,232,244,266,267,281,],[-53,157,-144,-145,-61,-62,-63,-154,-65,-70,-71,-72,-144,-64,-67,-146,-147,-143,-102,-154,-66,-69,-68,]),'COMMA':([90,92,93,94,95,96,97,98,99,100,103,104,105,139,149,151,154,155,158,159,161,162,181,188,195,196,197,198,200,201,232,244,266,267,281,],[-53,-154,-154,-144,-145,-61,-62,-63,-154,-65,-70,-71,-72,189,194,-138,-141,-150,-153,-64,-67,-146,234,239,-139,-140,-151,-152,-147,-143,-102,-154,-66,-69,-68,]),'GREATER':([90,92,93,94,95,96,97,98,99,100,103,104,105,151,154,155,158,159,161,162,164,195,196,197,198,200,201,232,244,266,267,281,],[-53,-154,-154,-144,-145,-61,-62,-63,-154,-65,-70,-71,-72,-138,-141,-150,-153,-64,-67,-146,205,-139,-140,-151,-152,-147,-143,-102,-154,-66,-69,-68,]),'LESS':([90,92,93,94,95,96,97,98,99,100,103,104,105,151,154,155,158,159,161,162,164,195,196,197,198,200,201,232,244,266,267,281,],[-53,-154,-154,-144,-145,-61,-62,-63,-154,-65,-70,-71,-72,-138,-141,-150,-153,-64,-67,-146,206,-139,-140,-151,-152,-147,-143,-102,-154,-66,-69,-68,]),'NOTEQUAL':([90,92,93,94,95,96,97,98,99,100,103,104,105,151,154,155,158,159,161,162,164,195,196,197,198,200,201,232,244,266,267,281,],[-53,-154,-154,-144,-145,-61,-62,-63,-154,-65,-70,-71,-72,-138,-141,-150,-153,-64,-67,-146,207,-139,-140,-151,-152,-147,-143,-102,-154,-66,-69,-68,]),'ISEQUAL':([90,92,93,94,95,96,97,98,99,100,103,104,105,151,154,155,158,159,161,162,164,195,196,197,198,200,201,232,244,266,267,281,],[-53,-154,-154,-144,-145,-61,-62,-63,-154,-65,-70,-71,-72,-138,-141,-150,-153,-64,-67,-146,208,-139,-140,-151,-152,-147,-143,-102,-154,-66,-69,-68,]),'OR':([90,92,93,94,95,96,97,98,99,100,103,104,105,151,154,155,158,159,161,162,164,174,195,196,197,198,200,201,202,204,232,244,245,266,267,281,],[-53,-154,-154,-144,-145,-61,-62,-63,-154,-65,-70,-71,-72,-138,-141,-150,-153,-64,-67,-146,-154,225,-139,-140,-151,-152,-147,-143,-76,-78,-102,-154,-77,-66,-69,-68,]),'AND':([90,92,93,94,95,96,97,98,99,100,103,104,105,151,154,155,158,159,161,162,164,174,195,196,197,198,200,201,202,204,232,244,245,266,267,281,],[-53,-154,-154,-144,-145,-61,-62,-63,-154,-65,-70,-71,-72,-138,-141,-150,-153,-64,-67,-146,-154,226,-139,-140,-151,-152,-147,-143,-76,-78,-102,-154,-77,-66,-69,-68,]),'ELSEIF':([171,250,251,268,],[218,-96,-97,218,]),'ELSE':([171,250,251,268,],[219,-96,-97,219,]),'TWODOTS':([186,],[237,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declara_vars':([4,6,19,85,],[5,16,28,147,]),'vars':([4,6,19,85,],[6,6,6,6,]),'empty':([4,5,6,13,17,19,28,31,39,50,85,92,93,99,109,114,122,147,164,171,172,177,181,185,191,221,231,244,257,260,264,268,],[7,14,7,14,27,7,40,89,40,115,7,154,158,161,167,115,182,192,204,217,222,230,235,222,192,222,259,267,259,182,89,217,]),'type':([4,6,15,19,31,85,194,264,],[8,8,23,8,88,8,243,88,]),'program2':([5,13,],[12,21,]),'function':([5,13,],[13,13,]),'star':([12,],[18,]),'starI':([12,],[19,]),'functionI':([15,],[22,]),'vars1':([17,],[25,]),'function2':([22,],[30,]),'equals':([25,113,],[34,168,]),'star1':([28,39,],[38,111,]),'stmt':([28,39,147,172,185,191,221,],[39,39,191,221,221,191,221,]),'assignment':([28,39,147,172,185,191,221,],[41,41,41,41,41,41,41,]),'condition':([28,39,147,172,185,191,221,],[42,42,42,42,42,42,42,]),'print':([28,39,147,172,185,191,221,],[43,43,43,43,43,43,43,]),'loop':([28,39,147,172,185,191,221,],[44,44,44,44,44,44,44,]),'read':([28,39,147,168,172,185,191,221,],[45,45,45,212,45,45,45,45,]),'graphstmt':([28,39,147,172,179,185,191,221,231,257,],[46,46,46,46,231,46,46,46,257,257,]),'graphr':([28,39,147,172,185,191,221,],[47,47,47,47,47,47,47,]),'funCall':([28,34,39,59,61,73,77,101,102,116,118,119,122,132,135,141,147,152,153,156,157,160,168,172,185,191,203,221,224,229,234,237,239,260,265,279,],[48,100,48,100,100,100,100,100,100,100,100,100,100,100,100,100,48,100,100,100,100,100,100,48,48,48,100,48,100,100,100,100,100,100,100,100,]),'return':([28,39,147,172,185,191,221,],[49,49,49,49,49,49,49,]),'id':([28,34,39,59,61,73,77,101,102,116,118,119,120,122,132,135,141,147,152,153,156,157,160,168,172,185,191,203,221,224,229,234,237,239,260,265,279,],[50,99,50,99,99,99,99,99,99,99,99,99,177,99,99,99,99,50,99,99,99,99,99,99,50,50,50,99,50,99,99,99,99,99,99,99,99,]),'while':([28,39,147,172,185,191,221,],[53,53,53,53,53,53,53,]),'for':([28,39,147,172,185,191,221,],[54,54,54,54,54,54,54,]),'graphfig':([28,39,147,172,179,185,191,221,231,257,],[56,56,56,56,56,56,56,56,56,56,]),'graphview':([28,39,147,172,179,185,191,221,231,257,],[57,57,57,57,57,57,57,57,57,57,]),'graphmove':([28,39,147,172,179,185,191,221,231,257,],[58,58,58,58,58,58,58,58,58,58,]),'graphfig1':([28,39,147,172,179,185,191,221,231,257,],[64,64,64,64,64,64,64,64,64,64,]),'graphview1':([28,39,147,172,179,185,191,221,231,257,],[65,65,65,65,65,65,65,65,65,65,]),'graphmove1':([28,39,147,172,179,185,191,221,231,257,],[66,66,66,66,66,66,66,66,66,66,]),'graphview2':([28,39,147,172,179,185,191,221,231,257,],[73,73,73,73,73,73,73,73,73,73,]),'graphmove2':([28,39,147,172,179,185,191,221,231,257,],[76,76,76,76,76,76,76,76,76,76,]),'inicia_fun':([30,],[85,]),'function3':([31,264,],[87,276,]),'exp':([34,59,61,73,77,102,116,118,119,122,132,135,141,152,153,160,168,203,224,229,234,237,239,260,265,279,],[91,121,125,137,139,164,170,164,164,181,187,188,188,195,196,199,211,245,164,256,260,262,263,181,277,282,]),'term':([34,59,61,73,77,102,116,118,119,122,132,135,141,152,153,156,157,160,168,203,224,229,234,237,239,260,265,279,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,197,198,92,92,92,92,92,92,92,92,92,92,92,]),'factor':([34,59,61,73,77,102,116,118,119,122,132,135,141,152,153,156,157,160,168,203,224,229,234,237,239,260,265,279,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'vcte':([34,59,61,73,77,101,102,116,118,119,122,132,135,141,152,153,156,157,160,168,203,224,229,234,237,239,260,265,279,],[94,94,124,94,94,162,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'factor1':([34,59,61,73,77,102,116,118,119,122,132,135,141,152,153,156,157,160,168,203,224,229,234,237,239,260,265,279,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'cte_int':([34,59,61,73,77,101,102,116,118,119,122,132,135,141,152,153,156,157,160,168,203,224,229,234,237,239,260,265,279,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'cte_float':([34,59,61,73,77,101,102,116,118,119,122,132,135,141,152,153,156,157,160,168,203,224,229,234,237,239,260,265,279,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'cte_char':([34,59,61,73,77,101,102,116,118,119,122,132,135,141,152,153,156,157,160,168,203,224,229,234,237,239,260,265,279,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'factor2':([34,59,61,73,77,102,116,118,119,122,132,135,141,152,153,156,157,160,168,203,224,229,234,237,239,260,265,279,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'openP':([34,59,61,73,77,102,116,118,119,122,132,135,141,152,153,156,157,160,168,203,224,229,234,237,239,260,265,279,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'assignment1':([50,114,],[113,169,]),'assignment2':([50,114,],[114,114,]),'head':([51,62,215,],[117,126,248,]),'return1':([61,],[123,]),'laRegla2':([67,68,80,81,82,83,],[131,133,142,143,144,145,]),'laRegla':([69,70,77,84,],[134,136,140,146,]),'graphview3':([77,],[138,]),'exp1':([92,],[151,]),'term1':([93,],[155,]),'vcte1':([99,],[159,]),'expression':([102,118,119,224,],[163,174,176,253,]),'vars3':([109,],[166,]),'body_cond':([117,248,],[171,268,]),'head1':([118,],[173,]),'logical':([118,],[175,]),'funCall2':([122,260,],[180,273,]),'body':([126,216,274,],[184,249,280,]),'function4':([147,191,],[190,242,]),'function5':([149,],[193,]),'closeP':([163,],[200,]),'expression1':([164,],[202,]),'loper':([164,],[203,]),'assignment3':([168,],[210,]),'condition1':([171,268,],[214,278,]),'elseif':([171,268,],[215,215,]),'else':([171,268,],[216,216,]),'body1':([172,185,221,],[220,236,252,]),'logical1':([174,],[224,]),'read1':([177,],[228,]),'funCall3':([181,],[233,]),'termina_fun':([190,],[240,]),'close_condition':([220,],[250,]),'graphr1':([231,257,],[258,271,]),'vcte3':([244,],[266,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON declara_vars program2 star','program',6,'p_program','parser.py',30),
  ('program_vars -> vars program_vars','program_vars',2,'p_program_vars','parser.py',42),
  ('program_vars -> empty','program_vars',1,'p_program_vars','parser.py',43),
  ('program2 -> function program2','program2',2,'p_program2','parser.py',52),
  ('program2 -> empty','program2',1,'p_program2','parser.py',53),
  ('star -> starI declara_vars star1 CLOSEBRACES','star',4,'p_star','parser.py',63),
  ('starI -> MULTIPLICATION OPENBRACES','starI',2,'p_starI','parser.py',72),
  ('star1 -> stmt star1','star1',2,'p_star1','parser.py',78),
  ('star1 -> empty','star1',1,'p_star1','parser.py',79),
  ('declara_vars -> vars declara_vars','declara_vars',2,'p_declara_vars','parser.py',85),
  ('declara_vars -> empty','declara_vars',1,'p_declara_vars','parser.py',86),
  ('loop -> while','loop',1,'p_loop','parser.py',96),
  ('loop -> for','loop',1,'p_loop','parser.py',97),
  ('stmt -> assignment','stmt',1,'p_stmt','parser.py',104),
  ('stmt -> condition','stmt',1,'p_stmt','parser.py',105),
  ('stmt -> print','stmt',1,'p_stmt','parser.py',106),
  ('stmt -> loop','stmt',1,'p_stmt','parser.py',107),
  ('stmt -> read','stmt',1,'p_stmt','parser.py',108),
  ('stmt -> graphstmt','stmt',1,'p_stmt','parser.py',109),
  ('stmt -> graphr','stmt',1,'p_stmt','parser.py',110),
  ('stmt -> funCall SEMICOLON','stmt',2,'p_stmt','parser.py',111),
  ('stmt -> return','stmt',1,'p_stmt','parser.py',112),
  ('functionI -> type ID','functionI',2,'p_functionI','parser.py',123),
  ('functionI -> VOID ID','functionI',2,'p_functionI','parser.py',124),
  ('function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun','function',7,'p_function','parser.py',130),
  ('function1 -> type','function1',1,'p_function1','parser.py',143),
  ('function1 -> VOID','function1',1,'p_function1','parser.py',144),
  ('inicia_fun -> OPENBRACES','inicia_fun',1,'p_inicia_fun','parser.py',151),
  ('termina_fun -> CLOSEBRACES','termina_fun',1,'p_termina_fun','parser.py',157),
  ('function2 -> OPENPAREN function3 CLOSEPAREN','function2',3,'p_function2','parser.py',162),
  ('function3 -> type ID function5','function3',3,'p_function3','parser.py',168),
  ('function3 -> empty','function3',1,'p_function3','parser.py',169),
  ('function4 -> stmt function4','function4',2,'p_function4','parser.py',175),
  ('function4 -> empty','function4',1,'p_function4','parser.py',176),
  ('function5 -> COMMA type ID function3','function5',4,'p_function5','parser.py',185),
  ('fun_vars -> vars fun_vars','fun_vars',2,'p_fun_vars','parser.py',191),
  ('fun_vars -> empty','fun_vars',1,'p_fun_vars','parser.py',192),
  ('vars -> type ID vars1 equals exp SEMICOLON','vars',6,'p_vars','parser.py',208),
  ('vars -> type ID vars1 SEMICOLON','vars',4,'p_vars','parser.py',209),
  ('vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3','vars1',4,'p_vars1','parser.py',227),
  ('vars1 -> empty','vars1',1,'p_vars1','parser.py',228),
  ('vars3 -> OPENBRACKET CTEINT CLOSEBRACKET','vars3',3,'p_vars3','parser.py',234),
  ('vars3 -> empty','vars3',1,'p_vars3','parser.py',235),
  ('type -> INT','type',1,'p_type','parser.py',242),
  ('type -> FLOAT','type',1,'p_type','parser.py',243),
  ('type -> CHAR','type',1,'p_type','parser.py',244),
  ('print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON','print',5,'p_print','parser.py',252),
  ('read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON','read',6,'p_read','parser.py',261),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET','read1',6,'p_read1','parser.py',269),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET','read1',3,'p_read1','parser.py',270),
  ('read1 -> empty','read1',1,'p_read1','parser.py',271),
  ('equals -> EQUALS','equals',1,'p_equals','parser.py',276),
  ('id -> ID','id',1,'p_id','parser.py',285),
  ('assignment -> id assignment1 equals assignment3 SEMICOLON','assignment',5,'p_assignment','parser.py',295),
  ('assignment1 -> assignment2','assignment1',1,'p_assignment1','parser.py',303),
  ('assignment1 -> assignment2 assignment1','assignment1',2,'p_assignment1','parser.py',304),
  ('assignment1 -> empty','assignment1',1,'p_assignment1','parser.py',305),
  ('assignment2 -> OPENBRACKET exp CLOSEBRACKET','assignment2',3,'p_assignment2','parser.py',311),
  ('assignment3 -> exp','assignment3',1,'p_assignment3','parser.py',317),
  ('assignment3 -> read','assignment3',1,'p_assignment3','parser.py',318),
  ('vcte -> cte_int','vcte',1,'p_vcte','parser.py',327),
  ('vcte -> cte_float','vcte',1,'p_vcte','parser.py',328),
  ('vcte -> cte_char','vcte',1,'p_vcte','parser.py',329),
  ('vcte -> id vcte1','vcte',2,'p_vcte','parser.py',330),
  ('vcte -> funCall','vcte',1,'p_vcte','parser.py',331),
  ('vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3','vcte1',4,'p_vcte1','parser.py',340),
  ('vcte1 -> empty','vcte1',1,'p_vcte1','parser.py',341),
  ('vcte3 -> OPENBRACKET exp CLOSEBRACKET','vcte3',3,'p_vcte3','parser.py',347),
  ('vcte3 -> empty','vcte3',1,'p_vcte3','parser.py',348),
  ('cte_int -> CTEINT','cte_int',1,'p_cte_int','parser.py',357),
  ('cte_float -> CTEFLOAT','cte_float',1,'p_cte_float','parser.py',364),
  ('cte_char -> CTECHAR','cte_char',1,'p_cte_char','parser.py',371),
  ('return -> RETURN return1 SEMICOLON','return',3,'p_return','parser.py',381),
  ('return1 -> vcte','return1',1,'p_return1','parser.py',387),
  ('return1 -> exp','return1',1,'p_return1','parser.py',388),
  ('expression -> exp expression1','expression',2,'p_expression','parser.py',396),
  ('expression1 -> loper exp','expression1',2,'p_expression1','parser.py',402),
  ('expression1 -> empty','expression1',1,'p_expression1','parser.py',403),
  ('loper -> GREATER','loper',1,'p_loper','parser.py',413),
  ('loper -> LESS','loper',1,'p_loper','parser.py',414),
  ('loper -> NOTEQUAL','loper',1,'p_loper','parser.py',415),
  ('loper -> ISEQUAL','loper',1,'p_loper','parser.py',416),
  ('logical -> expression logical1 expression','logical',3,'p_logical','parser.py',425),
  ('logical1 -> OR','logical1',1,'p_logical1','parser.py',431),
  ('logical1 -> AND','logical1',1,'p_logical1','parser.py',432),
  ('condition -> IF head body_cond condition1','condition',4,'p_condition','parser.py',439),
  ('condition1 -> elseif head body_cond condition1','condition1',4,'p_condition1','parser.py',447),
  ('condition1 -> else body','condition1',2,'p_condition1','parser.py',448),
  ('condition1 -> empty','condition1',1,'p_condition1','parser.py',449),
  ('elseif -> ELSEIF','elseif',1,'p_elseif','parser.py',453),
  ('else -> ELSE','else',1,'p_else','parser.py',457),
  ('head -> OPENPAREN head1 CLOSEPAREN','head',3,'p_head','parser.py',464),
  ('head1 -> expression','head1',1,'p_head1','parser.py',471),
  ('head1 -> logical','head1',1,'p_head1','parser.py',472),
  ('body -> OPENBRACES body1 CLOSEBRACES','body',3,'p_body','parser.py',478),
  ('body_cond -> OPENBRACES body1 close_condition','body_cond',3,'p_body_cond','parser.py',483),
  ('close_condition -> CLOSEBRACES','close_condition',1,'p_close_condition','parser.py',488),
  ('body1 -> stmt body1','body1',2,'p_body1','parser.py',495),
  ('body1 -> empty','body1',1,'p_body1','parser.py',496),
  ('for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body','for',7,'p_for','parser.py',503),
  ('while -> WHILE head body','while',3,'p_while','parser.py',510),
  ('funCall -> ID OPENPAREN funCall2 CLOSEPAREN','funCall',4,'p_funCall','parser.py',517),
  ('funCall2 -> exp funCall3','funCall2',2,'p_funCall2','parser.py',528),
  ('funCall2 -> empty','funCall2',1,'p_funCall2','parser.py',529),
  ('funCall3 -> COMMA exp funCall2','funCall3',3,'p_funCall3','parser.py',535),
  ('funCall3 -> empty','funCall3',1,'p_funCall3','parser.py',536),
  ('laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN','laRegla',5,'p_laRegla','parser.py',542),
  ('laRegla2 -> OPENPAREN exp CLOSEPAREN','laRegla2',3,'p_laRegla2','parser.py',548),
  ('graphstmt -> graphfig','graphstmt',1,'p_graphstmt','parser.py',555),
  ('graphstmt -> graphview','graphstmt',1,'p_graphstmt','parser.py',556),
  ('graphstmt -> graphmove','graphstmt',1,'p_graphstmt','parser.py',557),
  ('graphfig -> graphfig1 SEMICOLON','graphfig',2,'p_graphfig','parser.py',565),
  ('graphfig1 -> CIRCLE laRegla2','graphfig1',2,'p_graphfig1','parser.py',571),
  ('graphfig1 -> SQUARE laRegla2','graphfig1',2,'p_graphfig1','parser.py',572),
  ('graphfig1 -> TRIANGLE laRegla','graphfig1',2,'p_graphfig1','parser.py',573),
  ('graphfig1 -> RECTANGLE laRegla','graphfig1',2,'p_graphfig1','parser.py',574),
  ('graphmove -> graphmove1 SEMICOLON','graphmove',2,'p_graphmove','parser.py',582),
  ('graphmove1 -> HAND_DOWN','graphmove1',1,'p_graphmove1','parser.py',588),
  ('graphmove1 -> HAND_UP','graphmove1',1,'p_graphmove1','parser.py',589),
  ('graphmove1 -> graphmove2','graphmove1',1,'p_graphmove1','parser.py',590),
  ('graphmove2 -> GO laRegla2','graphmove2',2,'p_graphmove2','parser.py',596),
  ('graphmove2 -> LEFT laRegla2','graphmove2',2,'p_graphmove2','parser.py',597),
  ('graphmove2 -> RIGHT laRegla2','graphmove2',2,'p_graphmove2','parser.py',598),
  ('graphmove2 -> BACK laRegla2','graphmove2',2,'p_graphmove2','parser.py',599),
  ('graphmove2 -> ARC laRegla','graphmove2',2,'p_graphmove2','parser.py',600),
  ('graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES','graphr',6,'p_graphr','parser.py',608),
  ('graphr1 -> graphstmt graphr1','graphr1',2,'p_graphr1','parser.py',614),
  ('graphr1 -> empty','graphr1',1,'p_graphr1','parser.py',615),
  ('graphview -> graphview1 SEMICOLON','graphview',2,'p_graphview','parser.py',623),
  ('graphview1 -> HIDE_STAR','graphview1',1,'p_graphview1','parser.py',629),
  ('graphview1 -> SHOW_STAR','graphview1',1,'p_graphview1','parser.py',630),
  ('graphview1 -> graphview2 exp','graphview1',2,'p_graphview1','parser.py',631),
  ('graphview2 -> SETXY graphview3','graphview2',2,'p_graphview2','parser.py',637),
  ('graphview2 -> COLOR_STAR','graphview2',1,'p_graphview2','parser.py',638),
  ('graphview2 -> SIZE_STAR','graphview2',1,'p_graphview2','parser.py',639),
  ('graphview3 -> exp COMMA','graphview3',2,'p_graphview3','parser.py',645),
  ('graphview3 -> laRegla','graphview3',1,'p_graphview3','parser.py',646),
  ('exp -> term exp1','exp',2,'p_exp','parser.py',654),
  ('exp1 -> ADDITION exp','exp1',2,'p_exp1','parser.py',662),
  ('exp1 -> SUBSTRACTION exp','exp1',2,'p_exp1','parser.py',663),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',664),
  ('openP -> OPENPAREN','openP',1,'p_openP','parser.py',674),
  ('closeP -> CLOSEPAREN','closeP',1,'p_closeP','parser.py',682),
  ('factor -> vcte','factor',1,'p_factor','parser.py',692),
  ('factor -> factor1','factor',1,'p_factor','parser.py',693),
  ('factor1 -> factor2 vcte','factor1',2,'p_factor1','parser.py',699),
  ('factor1 -> openP expression closeP','factor1',3,'p_factor1','parser.py',700),
  ('factor2 -> ADDITION','factor2',1,'p_factor2','parser.py',706),
  ('factor2 -> SUBSTRACTION','factor2',1,'p_factor2','parser.py',707),
  ('term -> factor term1','term',2,'p_term','parser.py',718),
  ('term1 -> MULTIPLICATION term','term1',2,'p_term1','parser.py',727),
  ('term1 -> DIVISION term','term1',2,'p_term1','parser.py',728),
  ('term1 -> empty','term1',1,'p_term1','parser.py',729),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',739),
]
