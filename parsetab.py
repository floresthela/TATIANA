
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDITION AND ARC BACK CHAR CIRCLE CLOSEBRACES CLOSEBRACKET CLOSEPAREN COLOR_STAR COMMA CTECHAR CTEFLOAT CTEINT DIVISION ELSE ELSEIF EQUALS FLOAT FOR FUN GO GREATER HAND_DOWN HAND_UP HIDE_STAR ID IF INT ISEQUAL LEFT LESS MULTIPLICATION NOTEQUAL OPENBRACES OPENBRACKET OPENPAREN OR PRINT PROGRAM READ RECTANGLE REPEAT RETURN RIGHT SEMICOLON SETXY SHOW_STAR SIZE_STAR SQUARE SUBSTRACTION TRIANGLE TWODOTS VARS VOID WHILE\n    program : PROGRAM ID SEMICOLON program1 program2 star\n    \n    program1 : vars\n            | empty\n    \n    program2 : function program2\n            | empty\n    \n    star : MULTIPLICATION OPENBRACES vars star1 CLOSEBRACES\n    \n    star1 : stmt star1\n        | empty\n    \n    loop : while\n        | for\n    \n    stmt : assignment\n        | condition\n        | print\n        | loop\n        | read\n        | graphstmt\n        | graphr\n        | funCall\n        | return\n    \n    vars : VARS type ID vars1 SEMICOLON\n    \n    vars1 : EQUALS expression vars2\n        | OPENBRACKET CTEINT CLOSEBRACKET vars3\n        | empty vars2\n    \n    vars2 : COMMA ID vars1 vars2\n        | empty\n    \n    vars3 : OPENBRACKET CTEINT CLOSEBRACKET\n        | empty\n    \n    type : INT\n         | FLOAT\n         | CHAR\n    \n    print : PRINT OPENPAREN expression CLOSEPAREN SEMICOLON\n    \n    read : READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON\n    \n    read1 : OPENBRACKET expression CLOSEBRACKET OPENBRACKET expression CLOSEBRACKET\n              | OPENBRACKET expression CLOSEBRACKET\n              | empty\n    \n    assignment : ID assignment1 EQUALS assignment3 SEMICOLON\n    \n    assignment1 : assignment2\n                | assignment2 assignment1\n                | empty\n    \n    assignment2 : OPENBRACKET expression CLOSEBRACKET\n    \n    assignment3 : expression\n                | read\n    \n    vcte : cte\n        | ID vcte1 vcte2\n    \n    vcte1 : OPENBRACKET expression CLOSEBRACKET vcte3\n          | empty\n    \n    vcte2 : OPENPAREN expression CLOSEPAREN vcte4\n        | empty\n    \n    vcte3 : OPENBRACKET expression CLOSEBRACKET\n        | empty\n\n    \n    vcte4 : COMMA expression vcte4\n        | empty\n    \n    cte : CTEINT\n        | CTEFLOAT\n        | CTECHAR\n    \n    expression : vcte\n              | operation\n              | empty\n    \n    return : RETURN return1 SEMICOLON\n    \n    return1 : vcte\n            | operation\n    \n    compare : expression loper expression\n    \n    loper : GREATER\n          | LESS\n          | NOTEQUAL\n          | ISEQUAL\n    \n    logical : compare logical1 compare\n    \n    logical1 : OR\n             | AND\n    \n    condition : IF head body condition1\n    \n    condition1 : ELSEIF head body condition1\n               | ELSE body\n               | empty\n    \n    head : OPENPAREN head1 CLOSEPAREN\n    \n    head1 : compare\n              | logical\n    \n    body : OPENBRACES body1 CLOSEBRACES\n    \n    body1 : stmt body1\n          | empty\n    \n    for : FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body\n    \n    while : WHILE  head body\n    \n    funCall : ID OPENPAREN expression CLOSEPAREN SEMICOLON\n    \n    function : FUN function1 ID function2 OPENBRACES vars function4 CLOSEBRACES\n    \n    function1 : type\n              | VOID\n    \n    function2 : OPENPAREN function3 CLOSEPAREN\n    \n    function3 : type ID\n              | function3 COMMA\n              | empty\n    \n    function4 : stmt function4\n              | empty\n    \n    graphstmt : graphfig\n             | graphview\n             | graphmove\n    \n    graphfig : graphfig1 expression SEMICOLON\n    \n    graphfig1 : CIRCLE\n            | SQUARE\n            | TRIANGLE expression\n            | RECTANGLE expression\n    \n    graphmove : graphmove1 SEMICOLON\n    \n    graphmove1 : HAND_DOWN\n              | HAND_UP\n              | graphmove2 expression\n    \n    graphmove2 : GO\n              | LEFT\n              | RIGHT\n              | BACK\n              | ARC expression\n    \n    graphr : REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES\n    \n    graphr1 : graphstmt graphr1\n           | empty\n    \n    graphview : graphview1 SEMICOLON\n    \n    graphview1 : HIDE_STAR\n              | SHOW_STAR\n              | graphview2 expression\n    \n    graphview2 : SETXY expression\n              | COLOR_STAR\n              | SIZE_STAR\n    \n    operation : term operation1\n    \n    operation1 : ADDITION\n               | SUBSTRACTION\n               | empty\n    \n    factor : vcte\n           | factor1\n    \n    factor1 : factor2 vcte\n            | OPENPAREN compare CLOSEPAREN\n    \n    factor2 : ADDITION\n            | SUBSTRACTION\n    \n    term : factor term1\n    \n    term1 : MULTIPLICATION\n          | DIVISION\n          | empty\n    empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program1':([4,],[5,]),'vars':([4,24,100,],[6,30,147,]),'empty':([4,5,10,23,27,29,30,32,34,39,40,44,47,55,66,75,79,84,85,88,91,92,99,105,106,119,120,124,125,127,129,130,147,152,156,164,165,169,170,175,182,185,199,202,207,209,210,213,214,228,233,236,242,245,],[7,11,11,29,37,51,56,103,51,107,111,115,37,56,126,37,37,37,37,37,37,37,37,153,37,163,29,37,126,37,37,37,183,37,37,51,37,197,200,208,183,216,200,37,37,230,37,234,37,230,37,197,234,37,]),'program2':([5,10,],[9,19,]),'function':([5,10,],[10,10,]),'type':([8,12,32,],[13,21,102,]),'star':([9,],[17,]),'function1':([12,],[20,]),'vars1':([23,120,],[26,164,]),'function2':([25,],[31,]),'expression':([27,47,75,79,84,85,88,91,92,99,106,124,127,129,130,152,156,165,202,207,210,214,233,245,],[34,118,132,138,141,142,143,144,145,146,154,166,168,118,174,184,186,190,118,227,231,235,242,248,]),'vcte':([27,46,47,75,76,79,84,85,88,91,92,99,106,124,127,129,130,152,156,165,202,207,210,214,233,245,],[35,116,35,35,134,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'operation':([27,47,75,76,79,84,85,88,91,92,99,106,124,127,129,130,152,156,165,202,207,210,214,233,245,],[36,36,36,135,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'cte':([27,46,47,75,76,79,84,85,88,91,92,99,106,124,127,129,130,152,156,165,202,207,210,214,233,245,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'term':([27,47,75,76,79,84,85,88,91,92,99,106,124,127,129,130,152,156,165,202,207,210,214,233,245,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'factor':([27,47,75,76,79,84,85,88,91,92,99,106,124,127,129,130,152,156,165,202,207,210,214,233,245,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'factor1':([27,47,75,76,79,84,85,88,91,92,99,106,124,127,129,130,152,156,165,202,207,210,214,233,245,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'factor2':([27,47,75,76,79,84,85,88,91,92,99,106,124,127,129,130,152,156,165,202,207,210,214,233,245,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'vars2':([29,34,164,],[52,104,188,]),'star1':([30,55,],[54,122,]),'stmt':([30,55,147,170,182,199,],[55,55,182,199,182,199,]),'assignment':([30,55,147,170,182,199,],[57,57,57,57,57,57,]),'condition':([30,55,147,170,182,199,],[58,58,58,58,58,58,]),'print':([30,55,147,170,182,199,],[59,59,59,59,59,59,]),'loop':([30,55,147,170,182,199,],[60,60,60,60,60,60,]),'read':([30,55,147,165,170,182,199,],[61,61,61,191,61,61,61,]),'graphstmt':([30,55,147,170,176,182,199,209,228,],[62,62,62,62,209,62,62,228,228,]),'graphr':([30,55,147,170,182,199,],[63,63,63,63,63,63,]),'funCall':([30,55,147,170,182,199,],[64,64,64,64,64,64,]),'return':([30,55,147,170,182,199,],[65,65,65,65,65,65,]),'while':([30,55,147,170,182,199,],[69,69,69,69,69,69,]),'for':([30,55,147,170,182,199,],[70,70,70,70,70,70,]),'graphfig':([30,55,147,170,176,182,199,209,228,],[72,72,72,72,72,72,72,72,72,]),'graphview':([30,55,147,170,176,182,199,209,228,],[73,73,73,73,73,73,73,73,73,]),'graphmove':([30,55,147,170,176,182,199,209,228,],[74,74,74,74,74,74,74,74,74,]),'graphfig1':([30,55,147,170,176,182,199,209,228,],[79,79,79,79,79,79,79,79,79,]),'graphview1':([30,55,147,170,176,182,199,209,228,],[80,80,80,80,80,80,80,80,80,]),'graphmove1':([30,55,147,170,176,182,199,209,228,],[81,81,81,81,81,81,81,81,81,]),'graphview2':([30,55,147,170,176,182,199,209,228,],[88,88,88,88,88,88,88,88,88,]),'graphmove2':([30,55,147,170,176,182,199,209,228,],[91,91,91,91,91,91,91,91,91,]),'function3':([32,],[101,]),'vcte1':([39,],[105,]),'operation1':([40,],[108,]),'term1':([44,],[112,]),'compare':([47,129,202,],[117,172,224,]),'assignment1':([66,125,],[123,167,]),'assignment2':([66,125,],[125,125,]),'head':([67,77,195,],[128,136,220,]),'return1':([76,],[133,]),'vcte2':([105,],[151,]),'loper':([118,],[156,]),'vars3':([119,],[162,]),'body':([128,136,196,220,241,],[169,178,221,236,246,]),'head1':([129,],[171,]),'logical':([129,],[173,]),'function4':([147,182,],[181,212,]),'assignment3':([165,],[189,]),'condition1':([169,236,],[194,244,]),'body1':([170,199,],[198,223,]),'logical1':([172,],[202,]),'read1':([175,],[206,]),'vcte3':([185,],[215,]),'graphr1':([209,228,],[229,239,]),'vcte4':([213,242,],[232,247,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON program1 program2 star','program',6,'p_program','parser.py',15),
  ('program1 -> vars','program1',1,'p_program1','parser.py',21),
  ('program1 -> empty','program1',1,'p_program1','parser.py',22),
  ('program2 -> function program2','program2',2,'p_program2','parser.py',27),
  ('program2 -> empty','program2',1,'p_program2','parser.py',28),
  ('star -> MULTIPLICATION OPENBRACES vars star1 CLOSEBRACES','star',5,'p_star','parser.py',34),
  ('star1 -> stmt star1','star1',2,'p_star1','parser.py',40),
  ('star1 -> empty','star1',1,'p_star1','parser.py',41),
  ('loop -> while','loop',1,'p_loop','parser.py',48),
  ('loop -> for','loop',1,'p_loop','parser.py',49),
  ('stmt -> assignment','stmt',1,'p_stmt','parser.py',56),
  ('stmt -> condition','stmt',1,'p_stmt','parser.py',57),
  ('stmt -> print','stmt',1,'p_stmt','parser.py',58),
  ('stmt -> loop','stmt',1,'p_stmt','parser.py',59),
  ('stmt -> read','stmt',1,'p_stmt','parser.py',60),
  ('stmt -> graphstmt','stmt',1,'p_stmt','parser.py',61),
  ('stmt -> graphr','stmt',1,'p_stmt','parser.py',62),
  ('stmt -> funCall','stmt',1,'p_stmt','parser.py',63),
  ('stmt -> return','stmt',1,'p_stmt','parser.py',64),
  ('vars -> VARS type ID vars1 SEMICOLON','vars',5,'p_vars','parser.py',71),
  ('vars1 -> EQUALS expression vars2','vars1',3,'p_vars1','parser.py',76),
  ('vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3','vars1',4,'p_vars1','parser.py',77),
  ('vars1 -> empty vars2','vars1',2,'p_vars1','parser.py',78),
  ('vars2 -> COMMA ID vars1 vars2','vars2',4,'p_vars2','parser.py',84),
  ('vars2 -> empty','vars2',1,'p_vars2','parser.py',85),
  ('vars3 -> OPENBRACKET CTEINT CLOSEBRACKET','vars3',3,'p_vars3','parser.py',91),
  ('vars3 -> empty','vars3',1,'p_vars3','parser.py',92),
  ('type -> INT','type',1,'p_type','parser.py',99),
  ('type -> FLOAT','type',1,'p_type','parser.py',100),
  ('type -> CHAR','type',1,'p_type','parser.py',101),
  ('print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON','print',5,'p_print','parser.py',108),
  ('read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON','read',6,'p_read','parser.py',115),
  ('read1 -> OPENBRACKET expression CLOSEBRACKET OPENBRACKET expression CLOSEBRACKET','read1',6,'p_read1','parser.py',121),
  ('read1 -> OPENBRACKET expression CLOSEBRACKET','read1',3,'p_read1','parser.py',122),
  ('read1 -> empty','read1',1,'p_read1','parser.py',123),
  ('assignment -> ID assignment1 EQUALS assignment3 SEMICOLON','assignment',5,'p_assignment','parser.py',130),
  ('assignment1 -> assignment2','assignment1',1,'p_assignment1','parser.py',136),
  ('assignment1 -> assignment2 assignment1','assignment1',2,'p_assignment1','parser.py',137),
  ('assignment1 -> empty','assignment1',1,'p_assignment1','parser.py',138),
  ('assignment2 -> OPENBRACKET expression CLOSEBRACKET','assignment2',3,'p_assignment2','parser.py',144),
  ('assignment3 -> expression','assignment3',1,'p_assignment3','parser.py',150),
  ('assignment3 -> read','assignment3',1,'p_assignment3','parser.py',151),
  ('vcte -> cte','vcte',1,'p_vcte','parser.py',158),
  ('vcte -> ID vcte1 vcte2','vcte',3,'p_vcte','parser.py',159),
  ('vcte1 -> OPENBRACKET expression CLOSEBRACKET vcte3','vcte1',4,'p_vcte1','parser.py',165),
  ('vcte1 -> empty','vcte1',1,'p_vcte1','parser.py',166),
  ('vcte2 -> OPENPAREN expression CLOSEPAREN vcte4','vcte2',4,'p_vcte2','parser.py',172),
  ('vcte2 -> empty','vcte2',1,'p_vcte2','parser.py',173),
  ('vcte3 -> OPENBRACKET expression CLOSEBRACKET','vcte3',3,'p_vcte3','parser.py',179),
  ('vcte3 -> empty','vcte3',1,'p_vcte3','parser.py',180),
  ('vcte4 -> COMMA expression vcte4','vcte4',3,'p_vcte4','parser.py',187),
  ('vcte4 -> empty','vcte4',1,'p_vcte4','parser.py',188),
  ('cte -> CTEINT','cte',1,'p_cte','parser.py',195),
  ('cte -> CTEFLOAT','cte',1,'p_cte','parser.py',196),
  ('cte -> CTECHAR','cte',1,'p_cte','parser.py',197),
  ('expression -> vcte','expression',1,'p_expression','parser.py',204),
  ('expression -> operation','expression',1,'p_expression','parser.py',205),
  ('expression -> empty','expression',1,'p_expression','parser.py',206),
  ('return -> RETURN return1 SEMICOLON','return',3,'p_return','parser.py',213),
  ('return1 -> vcte','return1',1,'p_return1','parser.py',219),
  ('return1 -> operation','return1',1,'p_return1','parser.py',220),
  ('compare -> expression loper expression','compare',3,'p_compare','parser.py',227),
  ('loper -> GREATER','loper',1,'p_loper','parser.py',234),
  ('loper -> LESS','loper',1,'p_loper','parser.py',235),
  ('loper -> NOTEQUAL','loper',1,'p_loper','parser.py',236),
  ('loper -> ISEQUAL','loper',1,'p_loper','parser.py',237),
  ('logical -> compare logical1 compare','logical',3,'p_logical','parser.py',244),
  ('logical1 -> OR','logical1',1,'p_logical1','parser.py',250),
  ('logical1 -> AND','logical1',1,'p_logical1','parser.py',251),
  ('condition -> IF head body condition1','condition',4,'p_condition','parser.py',258),
  ('condition1 -> ELSEIF head body condition1','condition1',4,'p_condition1','parser.py',264),
  ('condition1 -> ELSE body','condition1',2,'p_condition1','parser.py',265),
  ('condition1 -> empty','condition1',1,'p_condition1','parser.py',266),
  ('head -> OPENPAREN head1 CLOSEPAREN','head',3,'p_head','parser.py',272),
  ('head1 -> compare','head1',1,'p_head1','parser.py',278),
  ('head1 -> logical','head1',1,'p_head1','parser.py',279),
  ('body -> OPENBRACES body1 CLOSEBRACES','body',3,'p_body','parser.py',285),
  ('body1 -> stmt body1','body1',2,'p_body1','parser.py',290),
  ('body1 -> empty','body1',1,'p_body1','parser.py',291),
  ('for -> FOR OPENPAREN ID TWODOTS expression CLOSEPAREN body','for',7,'p_for','parser.py',297),
  ('while -> WHILE head body','while',3,'p_while','parser.py',303),
  ('funCall -> ID OPENPAREN expression CLOSEPAREN SEMICOLON','funCall',5,'p_funCall','parser.py',309),
  ('function -> FUN function1 ID function2 OPENBRACES vars function4 CLOSEBRACES','function',8,'p_function','parser.py',315),
  ('function1 -> type','function1',1,'p_function1','parser.py',320),
  ('function1 -> VOID','function1',1,'p_function1','parser.py',321),
  ('function2 -> OPENPAREN function3 CLOSEPAREN','function2',3,'p_function2','parser.py',326),
  ('function3 -> type ID','function3',2,'p_function3','parser.py',331),
  ('function3 -> function3 COMMA','function3',2,'p_function3','parser.py',332),
  ('function3 -> empty','function3',1,'p_function3','parser.py',333),
  ('function4 -> stmt function4','function4',2,'p_function4','parser.py',338),
  ('function4 -> empty','function4',1,'p_function4','parser.py',339),
  ('graphstmt -> graphfig','graphstmt',1,'p_graphstmt','parser.py',345),
  ('graphstmt -> graphview','graphstmt',1,'p_graphstmt','parser.py',346),
  ('graphstmt -> graphmove','graphstmt',1,'p_graphstmt','parser.py',347),
  ('graphfig -> graphfig1 expression SEMICOLON','graphfig',3,'p_graphfig','parser.py',353),
  ('graphfig1 -> CIRCLE','graphfig1',1,'p_graphfig1','parser.py',358),
  ('graphfig1 -> SQUARE','graphfig1',1,'p_graphfig1','parser.py',359),
  ('graphfig1 -> TRIANGLE expression','graphfig1',2,'p_graphfig1','parser.py',360),
  ('graphfig1 -> RECTANGLE expression','graphfig1',2,'p_graphfig1','parser.py',361),
  ('graphmove -> graphmove1 SEMICOLON','graphmove',2,'p_graphmove','parser.py',367),
  ('graphmove1 -> HAND_DOWN','graphmove1',1,'p_graphmove1','parser.py',372),
  ('graphmove1 -> HAND_UP','graphmove1',1,'p_graphmove1','parser.py',373),
  ('graphmove1 -> graphmove2 expression','graphmove1',2,'p_graphmove1','parser.py',374),
  ('graphmove2 -> GO','graphmove2',1,'p_graphmove2','parser.py',379),
  ('graphmove2 -> LEFT','graphmove2',1,'p_graphmove2','parser.py',380),
  ('graphmove2 -> RIGHT','graphmove2',1,'p_graphmove2','parser.py',381),
  ('graphmove2 -> BACK','graphmove2',1,'p_graphmove2','parser.py',382),
  ('graphmove2 -> ARC expression','graphmove2',2,'p_graphmove2','parser.py',383),
  ('graphr -> REPEAT expression OPENBRACES graphstmt graphr1 CLOSEBRACES','graphr',6,'p_graphr','parser.py',389),
  ('graphr1 -> graphstmt graphr1','graphr1',2,'p_graphr1','parser.py',394),
  ('graphr1 -> empty','graphr1',1,'p_graphr1','parser.py',395),
  ('graphview -> graphview1 SEMICOLON','graphview',2,'p_graphview','parser.py',401),
  ('graphview1 -> HIDE_STAR','graphview1',1,'p_graphview1','parser.py',406),
  ('graphview1 -> SHOW_STAR','graphview1',1,'p_graphview1','parser.py',407),
  ('graphview1 -> graphview2 expression','graphview1',2,'p_graphview1','parser.py',408),
  ('graphview2 -> SETXY expression','graphview2',2,'p_graphview2','parser.py',413),
  ('graphview2 -> COLOR_STAR','graphview2',1,'p_graphview2','parser.py',414),
  ('graphview2 -> SIZE_STAR','graphview2',1,'p_graphview2','parser.py',415),
  ('operation -> term operation1','operation',2,'p_operation','parser.py',421),
  ('operation1 -> ADDITION','operation1',1,'p_operation1','parser.py',426),
  ('operation1 -> SUBSTRACTION','operation1',1,'p_operation1','parser.py',427),
  ('operation1 -> empty','operation1',1,'p_operation1','parser.py',428),
  ('factor -> vcte','factor',1,'p_factor','parser.py',434),
  ('factor -> factor1','factor',1,'p_factor','parser.py',435),
  ('factor1 -> factor2 vcte','factor1',2,'p_factor1','parser.py',440),
  ('factor1 -> OPENPAREN compare CLOSEPAREN','factor1',3,'p_factor1','parser.py',441),
  ('factor2 -> ADDITION','factor2',1,'p_factor2','parser.py',446),
  ('factor2 -> SUBSTRACTION','factor2',1,'p_factor2','parser.py',447),
  ('term -> factor term1','term',2,'p_term','parser.py',453),
  ('term1 -> MULTIPLICATION','term1',1,'p_term1','parser.py',459),
  ('term1 -> DIVISION','term1',1,'p_term1','parser.py',460),
  ('term1 -> empty','term1',1,'p_term1','parser.py',461),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',465),
]
