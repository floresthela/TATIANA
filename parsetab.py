
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDITION AND ARC BACK CHAR CIRCLE CLOSEBRACES CLOSEBRACKET CLOSEPAREN COLOR_STAR COMMA CTECHAR CTEFLOAT CTEINT DIVISION ELSE ELSEIF EQUALS FLOAT FOR FUN GO GREATER HAND_DOWN HAND_UP HIDE_STAR ID IF INT ISEQUAL LEFT LESS MULTIPLICATION NOTEQUAL OPENBRACES OPENBRACKET OPENPAREN OR PRINT PROGRAM READ RECTANGLE REPEAT RETURN RIGHT SEMICOLON SETXY SHOW_STAR SIMPLEQUOTES SIZE_STAR SQUARE SUBSTRACTION TRIANGLE TWODOTS VARS VOID WHILE\n    program : PROGRAM ID SEMICOLON program1 program2 star\n    \n    program1 : vars\n            | empty\n    \n    program2 : function program2\n            | empty\n    \n    star : MULTIPLICATION OPENBRACES star2 star1 CLOSEBRACES\n    \n    star1 : stmt star1\n        | empty\n    \n    star2 : vars\n          | empty\n    \n    loop : while\n        | for\n    \n    stmt : assignment\n        | condition\n        | print\n        | loop\n        | read\n        | graphstmt\n        | graphr\n        | funCall\n        | return\n    \n    vars : VARS type ID vars1 SEMICOLON\n    \n    vars1 : EQUALS exp vars2\n        | OPENBRACKET CTEINT CLOSEBRACKET vars3\n        | empty vars2\n    \n    vars2 : COMMA ID vars1\n          | COMMA vars4\n          | empty\n    \n    vars3 : OPENBRACKET CTEINT CLOSEBRACKET\n        | empty\n    \n    vars4 : type ID vars1\n          | empty\n    \n    type : INT\n         | FLOAT\n         | CHAR\n    \n    print : PRINT OPENPAREN exp CLOSEPAREN SEMICOLON\n    \n    read : READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON\n    \n    read1 : OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET\n              | OPENBRACKET exp CLOSEBRACKET\n              | empty\n    \n    assignment : ID assignment1 EQUALS assignment3 SEMICOLON\n    \n    assignment1 : assignment2\n                | assignment2 assignment1\n                | empty\n    \n    assignment2 : OPENBRACKET exp CLOSEBRACKET\n    \n    assignment3 : exp\n                | read\n    \n    vcte : cte\n        | ID vcte1\n        | funCall\n    \n    vcte1 : OPENBRACKET exp CLOSEBRACKET vcte3\n          | empty\n    \n    vcte3 : OPENBRACKET exp CLOSEBRACKET\n        | empty\n\n    \n    cte : CTEINT\n        | CTEFLOAT\n        | CTECHAR\n    \n    return : RETURN return1 SEMICOLON\n    \n    return1 : vcte\n            | exp\n    \n    expression : exp expression1\n    \n    expression1 : loper exp\n             | empty\n    \n    loper : GREATER\n          | LESS\n          | NOTEQUAL\n          | ISEQUAL\n    \n    logical : expression logical1 expression\n    \n    logical1 : OR\n             | AND\n    \n    condition : IF head body condition1\n    \n    condition1 : ELSEIF head body condition1\n               | ELSE body\n               | empty\n    \n    head : OPENPAREN head1 CLOSEPAREN\n    \n    head1 : expression\n          | logical\n    \n    body : OPENBRACES body1 CLOSEBRACES\n    \n    body1 : stmt body1\n          | empty\n    \n    for : FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body\n    \n    while : WHILE  head body\n    \n    funCall : ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON\n    \n    funCall2 : exp funCall3\n             | empty\n    \n    funCall3 : COMMA exp funCall2\n             | empty\n    \n    function : FUN function1 ID function2 inicia_fun function6 function4 termina_fun\n    \n    function1 : type\n              | VOID\n    \n    inicia_fun : OPENBRACES\n    \n    termina_fun : CLOSEBRACES\n    \n    function2 : OPENPAREN function3 CLOSEPAREN\n    \n    function3 : type ID function5\n              | empty\n    \n    function4 : stmt function4\n              | empty\n    \n    function5 : COMMA type ID function3\n    \n    function6 : vars\n              | empty\n    \n    laRegla : OPENPAREN exp COMMA exp CLOSEPAREN\n    \n    laRegla2 : OPENPAREN exp CLOSEPAREN\n    \n    graphstmt : graphfig\n             | graphview\n             | graphmove\n    \n    graphfig : graphfig1 SEMICOLON\n    \n    graphfig1 : CIRCLE laRegla2\n            | SQUARE laRegla2\n            | TRIANGLE laRegla\n            | RECTANGLE laRegla\n    \n    graphmove :  graphmove1  SEMICOLON\n    \n    graphmove1 : HAND_DOWN\n              | HAND_UP\n              | graphmove2\n    \n    graphmove2 : GO laRegla2\n              | LEFT laRegla2\n              | RIGHT laRegla2\n              | BACK laRegla2\n              | ARC laRegla\n    \n    graphr : REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES\n    \n    graphr1 : graphstmt graphr1\n           | empty\n    \n    graphview : graphview1 SEMICOLON\n    \n    graphview1 : HIDE_STAR\n              | SHOW_STAR\n              | graphview2 exp\n    \n    graphview2 : SETXY graphview3\n              | COLOR_STAR\n              | SIZE_STAR\n    \n    graphview3 : exp COMMA\n              | laRegla\n    \n    exp : term exp1\n    \n    exp1 : ADDITION exp\n         | SUBSTRACTION exp\n         | empty\n    \n    openP : OPENPAREN\n    \n    closeP : CLOSEPAREN\n    \n    factor : vcte\n           | factor1\n    \n    factor1 : factor2 vcte\n            | openP expression closeP\n    \n    factor2 : ADDITION\n            | SUBSTRACTION\n    \n    term : factor term1\n    \n    term1 : MULTIPLICATION term\n          | DIVISION term\n          | empty\n    empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program1':([4,],[5,]),'vars':([4,24,102,],[6,31,164,]),'empty':([4,5,10,23,24,29,30,34,36,37,38,42,55,57,68,102,117,122,123,124,131,163,173,189,193,194,199,208,216,229,239,248,262,267,270,],[7,11,11,29,32,53,58,106,53,111,115,119,127,58,132,165,174,180,187,29,132,209,215,29,227,230,238,209,251,230,264,174,264,106,227,]),'program2':([5,10,],[9,19,]),'function':([5,10,],[10,10,]),'type':([8,12,34,55,211,267,],[13,21,105,126,246,105,]),'star':([9,],[17,]),'function1':([12,],[20,]),'vars1':([23,124,189,],[26,188,219,]),'star2':([24,],[30,]),'function2':([25,],[33,]),'exp':([27,45,77,78,90,94,109,110,117,118,133,135,136,148,151,157,179,190,214,232,237,240,242,248,249,280,],[36,122,138,141,153,155,168,169,173,175,192,122,198,204,205,205,217,221,248,122,261,265,266,173,269,282,]),'term':([27,45,77,78,90,94,109,110,113,114,117,118,133,135,136,148,151,157,179,190,214,232,237,240,242,248,249,280,],[37,37,37,37,37,37,37,37,170,171,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'factor':([27,45,77,78,90,94,109,110,113,114,117,118,133,135,136,148,151,157,179,190,214,232,237,240,242,248,249,280,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'vcte':([27,44,45,77,78,90,94,109,110,113,114,117,118,133,135,136,148,151,157,179,190,214,232,237,240,242,248,249,280,],[39,120,39,39,140,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'factor1':([27,45,77,78,90,94,109,110,113,114,117,118,133,135,136,148,151,157,179,190,214,232,237,240,242,248,249,280,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'cte':([27,44,45,77,78,90,94,109,110,113,114,117,118,133,135,136,148,151,157,179,190,214,232,237,240,242,248,249,280,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'funCall':([27,30,44,45,57,77,78,90,94,109,110,113,114,117,118,133,135,136,148,151,157,163,179,190,194,208,214,229,232,237,240,242,248,249,280,],[43,66,43,43,66,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,66,43,43,66,66,43,66,43,43,43,43,43,43,43,]),'factor2':([27,45,77,78,90,94,109,110,113,114,117,118,133,135,136,148,151,157,179,190,214,232,237,240,242,248,249,280,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'openP':([27,45,77,78,90,94,109,110,113,114,117,118,133,135,136,148,151,157,179,190,214,232,237,240,242,248,249,280,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'vars2':([29,36,],[54,107,]),'star1':([30,57,],[56,129,]),'stmt':([30,57,163,194,208,229,],[57,57,208,229,208,229,]),'assignment':([30,57,163,194,208,229,],[59,59,59,59,59,59,]),'condition':([30,57,163,194,208,229,],[60,60,60,60,60,60,]),'print':([30,57,163,194,208,229,],[61,61,61,61,61,61,]),'loop':([30,57,163,194,208,229,],[62,62,62,62,62,62,]),'read':([30,57,163,190,194,208,229,],[63,63,63,222,63,63,63,]),'graphstmt':([30,57,163,194,200,208,229,239,262,],[64,64,64,64,239,64,64,262,262,]),'graphr':([30,57,163,194,208,229,],[65,65,65,65,65,65,]),'return':([30,57,163,194,208,229,],[67,67,67,67,67,67,]),'while':([30,57,163,194,208,229,],[71,71,71,71,71,71,]),'for':([30,57,163,194,208,229,],[72,72,72,72,72,72,]),'graphfig':([30,57,163,194,200,208,229,239,262,],[74,74,74,74,74,74,74,74,74,]),'graphview':([30,57,163,194,200,208,229,239,262,],[75,75,75,75,75,75,75,75,75,]),'graphmove':([30,57,163,194,200,208,229,239,262,],[76,76,76,76,76,76,76,76,76,]),'graphfig1':([30,57,163,194,200,208,229,239,262,],[81,81,81,81,81,81,81,81,81,]),'graphview1':([30,57,163,194,200,208,229,239,262,],[82,82,82,82,82,82,82,82,82,]),'graphmove1':([30,57,163,194,200,208,229,239,262,],[83,83,83,83,83,83,83,83,83,]),'graphview2':([30,57,163,194,200,208,229,239,262,],[90,90,90,90,90,90,90,90,90,]),'graphmove2':([30,57,163,194,200,208,229,239,262,],[93,93,93,93,93,93,93,93,93,]),'inicia_fun':([33,],[102,]),'function3':([34,267,],[104,277,]),'exp1':([37,],[108,]),'term1':([38,],[112,]),'vcte1':([42,],[116,]),'expression':([45,135,232,],[121,196,258,]),'vars4':([55,],[125,]),'assignment1':([68,131,],[130,191,]),'assignment2':([68,131,],[131,131,]),'head':([69,79,225,],[134,142,254,]),'return1':([78,],[139,]),'laRegla2':([84,85,97,98,99,100,],[147,149,158,159,160,161,]),'laRegla':([86,87,94,101,],[150,152,156,162,]),'graphview3':([94,],[154,]),'function6':([102,],[163,]),'funCall2':([117,248,],[172,268,]),'closeP':([121,],[176,]),'expression1':([122,],[178,]),'loper':([122,],[179,]),'vars3':([123,],[186,]),'body':([134,142,226,254,275,],[193,202,255,270,281,]),'head1':([135,],[195,]),'logical':([135,],[197,]),'function4':([163,208,],[207,245,]),'function5':([167,],[210,]),'funCall3':([173,],[213,]),'assignment3':([190,],[220,]),'condition1':([193,270,],[224,279,]),'body1':([194,229,],[228,257,]),'logical1':([196,],[232,]),'read1':([199,],[236,]),'termina_fun':([207,],[243,]),'vcte3':([216,],[250,]),'graphr1':([239,262,],[263,273,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON program1 program2 star','program',6,'p_program','parser.py',20),
  ('program1 -> vars','program1',1,'p_program1','parser.py',31),
  ('program1 -> empty','program1',1,'p_program1','parser.py',32),
  ('program2 -> function program2','program2',2,'p_program2','parser.py',37),
  ('program2 -> empty','program2',1,'p_program2','parser.py',38),
  ('star -> MULTIPLICATION OPENBRACES star2 star1 CLOSEBRACES','star',5,'p_star','parser.py',44),
  ('star1 -> stmt star1','star1',2,'p_star1','parser.py',54),
  ('star1 -> empty','star1',1,'p_star1','parser.py',55),
  ('star2 -> vars','star2',1,'p_star2','parser.py',60),
  ('star2 -> empty','star2',1,'p_star2','parser.py',61),
  ('loop -> while','loop',1,'p_loop','parser.py',68),
  ('loop -> for','loop',1,'p_loop','parser.py',69),
  ('stmt -> assignment','stmt',1,'p_stmt','parser.py',76),
  ('stmt -> condition','stmt',1,'p_stmt','parser.py',77),
  ('stmt -> print','stmt',1,'p_stmt','parser.py',78),
  ('stmt -> loop','stmt',1,'p_stmt','parser.py',79),
  ('stmt -> read','stmt',1,'p_stmt','parser.py',80),
  ('stmt -> graphstmt','stmt',1,'p_stmt','parser.py',81),
  ('stmt -> graphr','stmt',1,'p_stmt','parser.py',82),
  ('stmt -> funCall','stmt',1,'p_stmt','parser.py',83),
  ('stmt -> return','stmt',1,'p_stmt','parser.py',84),
  ('vars -> VARS type ID vars1 SEMICOLON','vars',5,'p_vars','parser.py',91),
  ('vars1 -> EQUALS exp vars2','vars1',3,'p_vars1','parser.py',106),
  ('vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3','vars1',4,'p_vars1','parser.py',107),
  ('vars1 -> empty vars2','vars1',2,'p_vars1','parser.py',108),
  ('vars2 -> COMMA ID vars1','vars2',3,'p_vars2','parser.py',115),
  ('vars2 -> COMMA vars4','vars2',2,'p_vars2','parser.py',116),
  ('vars2 -> empty','vars2',1,'p_vars2','parser.py',117),
  ('vars3 -> OPENBRACKET CTEINT CLOSEBRACKET','vars3',3,'p_vars3','parser.py',127),
  ('vars3 -> empty','vars3',1,'p_vars3','parser.py',128),
  ('vars4 -> type ID vars1','vars4',3,'p_vars4','parser.py',134),
  ('vars4 -> empty','vars4',1,'p_vars4','parser.py',135),
  ('type -> INT','type',1,'p_type','parser.py',144),
  ('type -> FLOAT','type',1,'p_type','parser.py',145),
  ('type -> CHAR','type',1,'p_type','parser.py',146),
  ('print -> PRINT OPENPAREN exp CLOSEPAREN SEMICOLON','print',5,'p_print','parser.py',155),
  ('read -> READ OPENPAREN ID read1 CLOSEPAREN SEMICOLON','read',6,'p_read','parser.py',161),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET','read1',6,'p_read1','parser.py',167),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET','read1',3,'p_read1','parser.py',168),
  ('read1 -> empty','read1',1,'p_read1','parser.py',169),
  ('assignment -> ID assignment1 EQUALS assignment3 SEMICOLON','assignment',5,'p_assignment','parser.py',176),
  ('assignment1 -> assignment2','assignment1',1,'p_assignment1','parser.py',187),
  ('assignment1 -> assignment2 assignment1','assignment1',2,'p_assignment1','parser.py',188),
  ('assignment1 -> empty','assignment1',1,'p_assignment1','parser.py',189),
  ('assignment2 -> OPENBRACKET exp CLOSEBRACKET','assignment2',3,'p_assignment2','parser.py',196),
  ('assignment3 -> exp','assignment3',1,'p_assignment3','parser.py',203),
  ('assignment3 -> read','assignment3',1,'p_assignment3','parser.py',204),
  ('vcte -> cte','vcte',1,'p_vcte','parser.py',212),
  ('vcte -> ID vcte1','vcte',2,'p_vcte','parser.py',213),
  ('vcte -> funCall','vcte',1,'p_vcte','parser.py',214),
  ('vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3','vcte1',4,'p_vcte1','parser.py',235),
  ('vcte1 -> empty','vcte1',1,'p_vcte1','parser.py',236),
  ('vcte3 -> OPENBRACKET exp CLOSEBRACKET','vcte3',3,'p_vcte3','parser.py',241),
  ('vcte3 -> empty','vcte3',1,'p_vcte3','parser.py',242),
  ('cte -> CTEINT','cte',1,'p_cte','parser.py',249),
  ('cte -> CTEFLOAT','cte',1,'p_cte','parser.py',250),
  ('cte -> CTECHAR','cte',1,'p_cte','parser.py',251),
  ('return -> RETURN return1 SEMICOLON','return',3,'p_return','parser.py',258),
  ('return1 -> vcte','return1',1,'p_return1','parser.py',264),
  ('return1 -> exp','return1',1,'p_return1','parser.py',265),
  ('expression -> exp expression1','expression',2,'p_expression','parser.py',273),
  ('expression1 -> loper exp','expression1',2,'p_expression1','parser.py',279),
  ('expression1 -> empty','expression1',1,'p_expression1','parser.py',280),
  ('loper -> GREATER','loper',1,'p_loper','parser.py',288),
  ('loper -> LESS','loper',1,'p_loper','parser.py',289),
  ('loper -> NOTEQUAL','loper',1,'p_loper','parser.py',290),
  ('loper -> ISEQUAL','loper',1,'p_loper','parser.py',291),
  ('logical -> expression logical1 expression','logical',3,'p_logical','parser.py',299),
  ('logical1 -> OR','logical1',1,'p_logical1','parser.py',305),
  ('logical1 -> AND','logical1',1,'p_logical1','parser.py',306),
  ('condition -> IF head body condition1','condition',4,'p_condition','parser.py',313),
  ('condition1 -> ELSEIF head body condition1','condition1',4,'p_condition1','parser.py',319),
  ('condition1 -> ELSE body','condition1',2,'p_condition1','parser.py',320),
  ('condition1 -> empty','condition1',1,'p_condition1','parser.py',321),
  ('head -> OPENPAREN head1 CLOSEPAREN','head',3,'p_head','parser.py',328),
  ('head1 -> expression','head1',1,'p_head1','parser.py',334),
  ('head1 -> logical','head1',1,'p_head1','parser.py',335),
  ('body -> OPENBRACES body1 CLOSEBRACES','body',3,'p_body','parser.py',341),
  ('body1 -> stmt body1','body1',2,'p_body1','parser.py',346),
  ('body1 -> empty','body1',1,'p_body1','parser.py',347),
  ('for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body','for',7,'p_for','parser.py',354),
  ('while -> WHILE head body','while',3,'p_while','parser.py',361),
  ('funCall -> ID OPENPAREN funCall2 CLOSEPAREN SEMICOLON','funCall',5,'p_funCall','parser.py',368),
  ('funCall2 -> exp funCall3','funCall2',2,'p_funCall2','parser.py',374),
  ('funCall2 -> empty','funCall2',1,'p_funCall2','parser.py',375),
  ('funCall3 -> COMMA exp funCall2','funCall3',3,'p_funCall3','parser.py',380),
  ('funCall3 -> empty','funCall3',1,'p_funCall3','parser.py',381),
  ('function -> FUN function1 ID function2 inicia_fun function6 function4 termina_fun','function',8,'p_function','parser.py',387),
  ('function1 -> type','function1',1,'p_function1','parser.py',395),
  ('function1 -> VOID','function1',1,'p_function1','parser.py',396),
  ('inicia_fun -> OPENBRACES','inicia_fun',1,'p_inicia_fun','parser.py',402),
  ('termina_fun -> CLOSEBRACES','termina_fun',1,'p_termina_fun','parser.py',407),
  ('function2 -> OPENPAREN function3 CLOSEPAREN','function2',3,'p_function2','parser.py',420),
  ('function3 -> type ID function5','function3',3,'p_function3','parser.py',425),
  ('function3 -> empty','function3',1,'p_function3','parser.py',426),
  ('function4 -> stmt function4','function4',2,'p_function4','parser.py',431),
  ('function4 -> empty','function4',1,'p_function4','parser.py',432),
  ('function5 -> COMMA type ID function3','function5',4,'p_function5','parser.py',436),
  ('function6 -> vars','function6',1,'p_function6','parser.py',441),
  ('function6 -> empty','function6',1,'p_function6','parser.py',442),
  ('laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN','laRegla',5,'p_laRegla','parser.py',450),
  ('laRegla2 -> OPENPAREN exp CLOSEPAREN','laRegla2',3,'p_laRegla2','parser.py',456),
  ('graphstmt -> graphfig','graphstmt',1,'p_graphstmt','parser.py',463),
  ('graphstmt -> graphview','graphstmt',1,'p_graphstmt','parser.py',464),
  ('graphstmt -> graphmove','graphstmt',1,'p_graphstmt','parser.py',465),
  ('graphfig -> graphfig1 SEMICOLON','graphfig',2,'p_graphfig','parser.py',471),
  ('graphfig1 -> CIRCLE laRegla2','graphfig1',2,'p_graphfig1','parser.py',476),
  ('graphfig1 -> SQUARE laRegla2','graphfig1',2,'p_graphfig1','parser.py',477),
  ('graphfig1 -> TRIANGLE laRegla','graphfig1',2,'p_graphfig1','parser.py',478),
  ('graphfig1 -> RECTANGLE laRegla','graphfig1',2,'p_graphfig1','parser.py',479),
  ('graphmove -> graphmove1 SEMICOLON','graphmove',2,'p_graphmove','parser.py',485),
  ('graphmove1 -> HAND_DOWN','graphmove1',1,'p_graphmove1','parser.py',490),
  ('graphmove1 -> HAND_UP','graphmove1',1,'p_graphmove1','parser.py',491),
  ('graphmove1 -> graphmove2','graphmove1',1,'p_graphmove1','parser.py',492),
  ('graphmove2 -> GO laRegla2','graphmove2',2,'p_graphmove2','parser.py',497),
  ('graphmove2 -> LEFT laRegla2','graphmove2',2,'p_graphmove2','parser.py',498),
  ('graphmove2 -> RIGHT laRegla2','graphmove2',2,'p_graphmove2','parser.py',499),
  ('graphmove2 -> BACK laRegla2','graphmove2',2,'p_graphmove2','parser.py',500),
  ('graphmove2 -> ARC laRegla','graphmove2',2,'p_graphmove2','parser.py',501),
  ('graphr -> REPEAT exp OPENBRACES graphstmt graphr1 CLOSEBRACES','graphr',6,'p_graphr','parser.py',507),
  ('graphr1 -> graphstmt graphr1','graphr1',2,'p_graphr1','parser.py',512),
  ('graphr1 -> empty','graphr1',1,'p_graphr1','parser.py',513),
  ('graphview -> graphview1 SEMICOLON','graphview',2,'p_graphview','parser.py',519),
  ('graphview1 -> HIDE_STAR','graphview1',1,'p_graphview1','parser.py',524),
  ('graphview1 -> SHOW_STAR','graphview1',1,'p_graphview1','parser.py',525),
  ('graphview1 -> graphview2 exp','graphview1',2,'p_graphview1','parser.py',526),
  ('graphview2 -> SETXY graphview3','graphview2',2,'p_graphview2','parser.py',531),
  ('graphview2 -> COLOR_STAR','graphview2',1,'p_graphview2','parser.py',532),
  ('graphview2 -> SIZE_STAR','graphview2',1,'p_graphview2','parser.py',533),
  ('graphview3 -> exp COMMA','graphview3',2,'p_graphview3','parser.py',538),
  ('graphview3 -> laRegla','graphview3',1,'p_graphview3','parser.py',539),
  ('exp -> term exp1','exp',2,'p_exp','parser.py',545),
  ('exp1 -> ADDITION exp','exp1',2,'p_exp1','parser.py',568),
  ('exp1 -> SUBSTRACTION exp','exp1',2,'p_exp1','parser.py',569),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',570),
  ('openP -> OPENPAREN','openP',1,'p_openP','parser.py',579),
  ('closeP -> CLOSEPAREN','closeP',1,'p_closeP','parser.py',586),
  ('factor -> vcte','factor',1,'p_factor','parser.py',594),
  ('factor -> factor1','factor',1,'p_factor','parser.py',595),
  ('factor1 -> factor2 vcte','factor1',2,'p_factor1','parser.py',601),
  ('factor1 -> openP expression closeP','factor1',3,'p_factor1','parser.py',602),
  ('factor2 -> ADDITION','factor2',1,'p_factor2','parser.py',608),
  ('factor2 -> SUBSTRACTION','factor2',1,'p_factor2','parser.py',609),
  ('term -> factor term1','term',2,'p_term','parser.py',621),
  ('term1 -> MULTIPLICATION term','term1',2,'p_term1','parser.py',627),
  ('term1 -> DIVISION term','term1',2,'p_term1','parser.py',628),
  ('term1 -> empty','term1',1,'p_term1','parser.py',629),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',638),
]
