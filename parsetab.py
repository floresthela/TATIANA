
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDITION ARC BACK CHAR CIRCLE CLOSEBRACES CLOSEBRACKET CLOSEPAREN COLOR_STAR COMMA CTECHAR CTEFLOAT CTEINT DIVISION ELSE ELSEIF EQUALS FLOAT FOR FUN GO GREATER HAND_DOWN HAND_UP HIDE_STAR ID IF INT ISEQUAL LEFT LESS MULTIPLICATION NOTEQUAL OPENBRACES OPENBRACKET OPENPAREN PRINT PROGRAM READ RECTANGLE REPEAT RETURN RIGHT SEMICOLON SETXY SHOW_STAR SIMPLEQUOTES SIZE_STAR SQUARE SUBSTRACTION TRIANGLE TWODOTS VARS VOID WHILE\n    program : PROGRAM ID SEMICOLON declara_vars program_modules\n    \n    program_modules : program_fun star\n    \n    program_fun : function program_fun\n                | empty\n    \n    star : starI declara_vars star1 CLOSEBRACES\n    \n    starI : star_sign OPENBRACES\n    \n    star_sign : MULTIPLICATION\n    \n    star1 : stmt star1\n        | empty\n    \n    declara_vars : vars declara_vars\n          | empty\n    \n    vars : type ID vars1 equals exp SEMICOLON\n         | type ID vars1 SEMICOLON\n    \n    vars1 : OPENBRACKET CTEINT CLOSEBRACKET vars3\n        | empty\n    \n    vars3 : OPENBRACKET CTEINT CLOSEBRACKET\n        | empty\n    \n    loop : while\n        | for\n    \n    stmt : assignment\n        | condition\n        | print\n        | loop\n        | read\n        | graphstmt\n        | graphr\n        | funCall SEMICOLON\n        | return\n    \n    functionI : type ID\n              | VOID ID\n    \n    function : FUN functionI function2 inicia_fun declara_vars function4 termina_fun\n    \n    inicia_fun : OPENBRACES\n    \n    termina_fun : CLOSEBRACES\n    \n    function2 : OPENPAREN function3 CLOSEPAREN\n    \n    function3 : type ID function5\n              | empty\n    \n    function4 : stmt function4\n              | empty\n    \n    function5 : COMMA type ID function5\n              | empty\n    \n    type : INT\n         | FLOAT\n         | CHAR\n    \n    print : PRINT OPENPAREN expression CLOSEPAREN SEMICOLON\n    \n    read : READ OPENPAREN id read1 CLOSEPAREN SEMICOLON\n    \n    read1 : OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET\n              | OPENBRACKET exp CLOSEBRACKET\n              | empty\n    \n    equals : EQUALS\n    \n    id : ID\n    \n    assignment : id assignment1 equals assignment3 SEMICOLON\n    \n    assignment1 : assignment2\n                | assignment2 assignment1\n                | empty\n    \n    assignment2 : OPENBRACKET exp CLOSEBRACKET\n    \n    assignment3 : exp\n                | read\n    \n    vcte : cte_int\n         | cte_float\n         | cte_char\n         | id vcte1\n         | funCall\n    \n    vcte1 : OPENBRACKET exp CLOSEBRACKET vcte3\n          | empty\n    \n    vcte3 : OPENBRACKET exp CLOSEBRACKET\n        | empty\n\n    \n    cte_int : CTEINT\n    \n    cte_float : CTEFLOAT\n    \n    cte_char : CTECHAR\n    \n    return : RETURN return1 SEMICOLON\n    \n    return1 : vcte\n            | exp\n    \n    expression : exp expression1\n    \n    expression1 : loper exp\n             | empty\n    \n    loper : GREATER\n          | LESS\n          | NOTEQUAL\n          | ISEQUAL\n\n    \n    condition : IF head_cond body condition1\n    \n    condition1 : elseif head_cond body condition1\n               | else body\n               | empty\n    \n    elseif : ELSEIF\n    \n    else : ELSE\n    \n    head_cond : OPENPAREN expression close_condition\n    \n    body : OPENBRACES body1 CLOSEBRACES\n    \n    close_condition : CLOSEPAREN\n    \n    body1 : stmt body1\n          | empty\n    \n    for : FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body\n    \n    while : while1 body\n    \n    while1 : while_w OPENPAREN expression CLOSEPAREN\n    \n    while_w : WHILE\n    \n    funCall : ID OPENPAREN funCall2 CLOSEPAREN\n    \n    funCall2 : exp funCall3\n             | empty\n    \n    funCall3 : COMMA exp funCall2\n             | empty\n    \n    dosExp : OPENPAREN exp COMMA exp CLOSEPAREN\n    \n    unaExp : OPENPAREN exp CLOSEPAREN\n    \n    graphstmt : graphfig\n             | graphview\n             | graphmove\n    \n    graphfig : graphfig1 SEMICOLON\n             | graphfig2 SEMICOLON\n    \n    graphfig1 : CIRCLE unaExp\n            | SQUARE unaExp\n    \n    graphfig2 : TRIANGLE dosExp\n            | RECTANGLE dosExp\n    \n    graphmove : graphmove0  SEMICOLON\n              | graphmove1 SEMICOLON\n              | graphmove2 SEMICOLON\n    \n    graphmove0 : HAND_DOWN\n              | HAND_UP\n    \n    graphmove1 : GO unaExp\n              | LEFT unaExp\n              | RIGHT unaExp\n              | BACK unaExp\n    \n    graphmove2 : ARC dosExp\n    \n    graphr : repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES\n    \n    graphr1 : graphstmt graphr1\n            | empty\n    \n    rep : OPENPAREN exp CLOSEPAREN\n    \n    repeat : REPEAT\n    \n    graphview : graphview0 SEMICOLON\n              | graphview1 SEMICOLON\n              | graphview2 SEMICOLON\n    \n    graphview0 : HIDE_STAR\n              | SHOW_STAR\n    \n    graphview1 : COLOR_STAR unaExp\n              | SIZE_STAR unaExp\n    \n    graphview2 : SETXY dosExp\n    \n    exp : term exp1\n    \n    exp1 : ADDITION exp\n         | SUBSTRACTION exp\n         | empty\n    \n    openP : OPENPAREN\n    \n    closeP : CLOSEPAREN\n    \n    factor : vcte\n           | factor1\n    \n    factor1 : factor2 vcte\n            | openP expression closeP\n    \n    factor2 : ADDITION\n            | SUBSTRACTION\n    \n    term : factor term1\n    \n    term1 : MULTIPLICATION term\n          | DIVISION term\n          | empty\n    empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,12,19,118,],[0,-1,-2,-5,]),'ID':([2,6,7,8,9,10,11,17,20,25,26,30,31,36,37,38,41,43,44,45,46,47,48,49,51,55,56,58,59,60,63,93,94,96,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,124,126,127,128,130,131,135,136,137,138,139,140,141,142,143,144,145,146,148,151,161,164,165,166,167,168,169,170,171,172,173,174,175,176,182,185,195,197,204,209,210,211,212,214,215,217,219,220,221,222,228,231,238,242,244,246,248,251,255,256,259,261,262,268,272,273,274,275,276,279,285,286,287,288,],[3,-150,-11,18,-41,-42,-43,-10,-150,34,35,62,-6,98,-13,-49,62,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,98,-150,-32,163,-50,-150,-150,-140,-141,-58,-59,-60,-150,-62,98,98,-67,-68,-69,-138,-144,-145,-27,98,98,98,189,98,98,-92,62,199,-105,-106,-126,-127,-128,-111,-112,-113,98,98,98,62,-12,-134,98,98,-137,-146,98,98,-149,-61,98,-64,-142,98,-150,-70,62,62,-135,-136,-147,-148,-143,-139,98,-76,-77,-78,-79,-80,-83,98,-95,98,-87,98,98,271,-150,-51,-82,-44,98,98,-63,-66,-150,-45,-121,-81,98,-91,-65,]),'SEMICOLON':([3,18,27,29,50,66,67,68,69,70,71,72,73,80,81,85,86,98,99,100,101,102,103,104,105,106,107,108,111,112,113,117,132,133,134,147,149,150,152,153,154,155,156,157,158,159,160,165,168,169,172,173,175,176,180,181,209,210,211,212,214,215,224,225,226,236,242,250,256,258,263,273,274,276,282,288,],[4,-150,37,-15,120,138,139,140,141,142,143,144,145,-129,-130,-114,-115,-50,164,-150,-150,-140,-141,-58,-59,-60,-150,-62,-67,-68,-69,-150,195,-71,-72,-107,-108,-109,-110,-131,-132,-133,-116,-117,-118,-119,-120,-134,-137,-146,-149,-61,-64,-142,-14,-17,-135,-136,-147,-148,-143,-139,259,-56,-57,262,-95,-101,-150,-16,276,-63,-66,-45,-100,-65,]),'FUN':([4,5,6,7,14,17,37,164,252,253,],[-150,16,-150,-11,16,-10,-13,-12,-31,-33,]),'MULTIPLICATION':([4,5,6,7,13,14,15,17,23,37,98,101,102,103,104,105,106,107,108,111,112,113,133,164,173,175,176,214,215,242,252,253,256,273,274,288,],[-150,-150,-150,-11,22,-150,-4,-10,-3,-13,-50,170,-140,-141,-58,-59,-60,-150,-62,-67,-68,-69,-140,-12,-61,-64,-142,-143,-139,-95,-31,-33,-150,-63,-66,-65,]),'INT':([4,6,16,20,31,33,37,93,94,164,207,],[9,9,9,9,-6,9,-13,9,-32,-12,9,]),'FLOAT':([4,6,16,20,31,33,37,93,94,164,207,],[10,10,10,10,-6,10,-13,10,-32,-12,10,]),'CHAR':([4,6,16,20,31,33,37,93,94,164,207,],[11,11,11,11,-6,11,-13,11,-32,-12,11,]),'IF':([6,7,17,20,30,31,37,41,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,135,136,138,139,140,141,142,143,144,145,161,164,185,195,197,204,228,231,246,259,261,262,275,276,279,285,287,],[-150,-11,-10,-150,53,-6,-13,53,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,-150,-32,-27,-92,53,-105,-106,-126,-127,-128,-111,-112,-113,53,-12,-150,-70,53,53,-80,-83,-87,-51,-82,-44,-150,-45,-121,-81,-91,]),'PRINT':([6,7,17,20,30,31,37,41,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,135,136,138,139,140,141,142,143,144,145,161,164,185,195,197,204,228,231,246,259,261,262,275,276,279,285,287,],[-150,-11,-10,-150,54,-6,-13,54,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,-150,-32,-27,-92,54,-105,-106,-126,-127,-128,-111,-112,-113,54,-12,-150,-70,54,54,-80,-83,-87,-51,-82,-44,-150,-45,-121,-81,-91,]),'READ':([6,7,17,20,30,31,37,38,41,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,135,136,138,139,140,141,142,143,144,145,161,164,182,185,195,197,204,228,231,246,259,261,262,275,276,279,285,287,],[-150,-11,-10,-150,57,-6,-13,-49,57,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,-150,-32,-27,-92,57,-105,-106,-126,-127,-128,-111,-112,-113,57,-12,57,-150,-70,57,57,-80,-83,-87,-51,-82,-44,-150,-45,-121,-81,-91,]),'RETURN':([6,7,17,20,30,31,37,41,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,135,136,138,139,140,141,142,143,144,145,161,164,185,195,197,204,228,231,246,259,261,262,275,276,279,285,287,],[-150,-11,-10,-150,63,-6,-13,63,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,-150,-32,-27,-92,63,-105,-106,-126,-127,-128,-111,-112,-113,63,-12,-150,-70,63,63,-80,-83,-87,-51,-82,-44,-150,-45,-121,-81,-91,]),'FOR':([6,7,17,20,30,31,37,41,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,135,136,138,139,140,141,142,143,144,145,161,164,185,195,197,204,228,231,246,259,261,262,275,276,279,285,287,],[-150,-11,-10,-150,65,-6,-13,65,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,-150,-32,-27,-92,65,-105,-106,-126,-127,-128,-111,-112,-113,65,-12,-150,-70,65,65,-80,-83,-87,-51,-82,-44,-150,-45,-121,-81,-91,]),'REPEAT':([6,7,17,20,30,31,37,41,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,135,136,138,139,140,141,142,143,144,145,161,164,185,195,197,204,228,231,246,259,261,262,275,276,279,285,287,],[-150,-11,-10,-150,74,-6,-13,74,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,-150,-32,-27,-92,74,-105,-106,-126,-127,-128,-111,-112,-113,74,-12,-150,-70,74,74,-80,-83,-87,-51,-82,-44,-150,-45,-121,-81,-91,]),'CIRCLE':([6,7,17,20,30,31,37,41,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,135,136,138,139,140,141,142,143,144,145,161,164,185,190,195,197,204,228,231,240,246,259,261,262,265,275,276,279,285,287,],[-150,-11,-10,-150,76,-6,-13,76,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,-150,-32,-27,-92,76,-105,-106,-126,-127,-128,-111,-112,-113,76,-12,-150,76,-70,76,76,-80,-83,76,-87,-51,-82,-44,76,-150,-45,-121,-81,-91,]),'SQUARE':([6,7,17,20,30,31,37,41,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,135,136,138,139,140,141,142,143,144,145,161,164,185,190,195,197,204,228,231,240,246,259,261,262,265,275,276,279,285,287,],[-150,-11,-10,-150,77,-6,-13,77,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,-150,-32,-27,-92,77,-105,-106,-126,-127,-128,-111,-112,-113,77,-12,-150,77,-70,77,77,-80,-83,77,-87,-51,-82,-44,77,-150,-45,-121,-81,-91,]),'TRIANGLE':([6,7,17,20,30,31,37,41,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,135,136,138,139,140,141,142,143,144,145,161,164,185,190,195,197,204,228,231,240,246,259,261,262,265,275,276,279,285,287,],[-150,-11,-10,-150,78,-6,-13,78,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,-150,-32,-27,-92,78,-105,-106,-126,-127,-128,-111,-112,-113,78,-12,-150,78,-70,78,78,-80,-83,78,-87,-51,-82,-44,78,-150,-45,-121,-81,-91,]),'RECTANGLE':([6,7,17,20,30,31,37,41,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,135,136,138,139,140,141,142,143,144,145,161,164,185,190,195,197,204,228,231,240,246,259,261,262,265,275,276,279,285,287,],[-150,-11,-10,-150,79,-6,-13,79,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,-150,-32,-27,-92,79,-105,-106,-126,-127,-128,-111,-112,-113,79,-12,-150,79,-70,79,79,-80,-83,79,-87,-51,-82,-44,79,-150,-45,-121,-81,-91,]),'HIDE_STAR':([6,7,17,20,30,31,37,41,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,135,136,138,139,140,141,142,143,144,145,161,164,185,190,195,197,204,228,231,240,246,259,261,262,265,275,276,279,285,287,],[-150,-11,-10,-150,80,-6,-13,80,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,-150,-32,-27,-92,80,-105,-106,-126,-127,-128,-111,-112,-113,80,-12,-150,80,-70,80,80,-80,-83,80,-87,-51,-82,-44,80,-150,-45,-121,-81,-91,]),'SHOW_STAR':([6,7,17,20,30,31,37,41,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,135,136,138,139,140,141,142,143,144,145,161,164,185,190,195,197,204,228,231,240,246,259,261,262,265,275,276,279,285,287,],[-150,-11,-10,-150,81,-6,-13,81,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,-150,-32,-27,-92,81,-105,-106,-126,-127,-128,-111,-112,-113,81,-12,-150,81,-70,81,81,-80,-83,81,-87,-51,-82,-44,81,-150,-45,-121,-81,-91,]),'COLOR_STAR':([6,7,17,20,30,31,37,41,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,135,136,138,139,140,141,142,143,144,145,161,164,185,190,195,197,204,228,231,240,246,259,261,262,265,275,276,279,285,287,],[-150,-11,-10,-150,82,-6,-13,82,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,-150,-32,-27,-92,82,-105,-106,-126,-127,-128,-111,-112,-113,82,-12,-150,82,-70,82,82,-80,-83,82,-87,-51,-82,-44,82,-150,-45,-121,-81,-91,]),'SIZE_STAR':([6,7,17,20,30,31,37,41,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,135,136,138,139,140,141,142,143,144,145,161,164,185,190,195,197,204,228,231,240,246,259,261,262,265,275,276,279,285,287,],[-150,-11,-10,-150,83,-6,-13,83,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,-150,-32,-27,-92,83,-105,-106,-126,-127,-128,-111,-112,-113,83,-12,-150,83,-70,83,83,-80,-83,83,-87,-51,-82,-44,83,-150,-45,-121,-81,-91,]),'SETXY':([6,7,17,20,30,31,37,41,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,135,136,138,139,140,141,142,143,144,145,161,164,185,190,195,197,204,228,231,240,246,259,261,262,265,275,276,279,285,287,],[-150,-11,-10,-150,84,-6,-13,84,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,-150,-32,-27,-92,84,-105,-106,-126,-127,-128,-111,-112,-113,84,-12,-150,84,-70,84,84,-80,-83,84,-87,-51,-82,-44,84,-150,-45,-121,-81,-91,]),'HAND_DOWN':([6,7,17,20,30,31,37,41,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,135,136,138,139,140,141,142,143,144,145,161,164,185,190,195,197,204,228,231,240,246,259,261,262,265,275,276,279,285,287,],[-150,-11,-10,-150,85,-6,-13,85,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,-150,-32,-27,-92,85,-105,-106,-126,-127,-128,-111,-112,-113,85,-12,-150,85,-70,85,85,-80,-83,85,-87,-51,-82,-44,85,-150,-45,-121,-81,-91,]),'HAND_UP':([6,7,17,20,30,31,37,41,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,135,136,138,139,140,141,142,143,144,145,161,164,185,190,195,197,204,228,231,240,246,259,261,262,265,275,276,279,285,287,],[-150,-11,-10,-150,86,-6,-13,86,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,-150,-32,-27,-92,86,-105,-106,-126,-127,-128,-111,-112,-113,86,-12,-150,86,-70,86,86,-80,-83,86,-87,-51,-82,-44,86,-150,-45,-121,-81,-91,]),'GO':([6,7,17,20,30,31,37,41,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,135,136,138,139,140,141,142,143,144,145,161,164,185,190,195,197,204,228,231,240,246,259,261,262,265,275,276,279,285,287,],[-150,-11,-10,-150,87,-6,-13,87,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,-150,-32,-27,-92,87,-105,-106,-126,-127,-128,-111,-112,-113,87,-12,-150,87,-70,87,87,-80,-83,87,-87,-51,-82,-44,87,-150,-45,-121,-81,-91,]),'LEFT':([6,7,17,20,30,31,37,41,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,135,136,138,139,140,141,142,143,144,145,161,164,185,190,195,197,204,228,231,240,246,259,261,262,265,275,276,279,285,287,],[-150,-11,-10,-150,88,-6,-13,88,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,-150,-32,-27,-92,88,-105,-106,-126,-127,-128,-111,-112,-113,88,-12,-150,88,-70,88,88,-80,-83,88,-87,-51,-82,-44,88,-150,-45,-121,-81,-91,]),'RIGHT':([6,7,17,20,30,31,37,41,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,135,136,138,139,140,141,142,143,144,145,161,164,185,190,195,197,204,228,231,240,246,259,261,262,265,275,276,279,285,287,],[-150,-11,-10,-150,89,-6,-13,89,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,-150,-32,-27,-92,89,-105,-106,-126,-127,-128,-111,-112,-113,89,-12,-150,89,-70,89,89,-80,-83,89,-87,-51,-82,-44,89,-150,-45,-121,-81,-91,]),'BACK':([6,7,17,20,30,31,37,41,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,135,136,138,139,140,141,142,143,144,145,161,164,185,190,195,197,204,228,231,240,246,259,261,262,265,275,276,279,285,287,],[-150,-11,-10,-150,90,-6,-13,90,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,-150,-32,-27,-92,90,-105,-106,-126,-127,-128,-111,-112,-113,90,-12,-150,90,-70,90,90,-80,-83,90,-87,-51,-82,-44,90,-150,-45,-121,-81,-91,]),'ARC':([6,7,17,20,30,31,37,41,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,135,136,138,139,140,141,142,143,144,145,161,164,185,190,195,197,204,228,231,240,246,259,261,262,265,275,276,279,285,287,],[-150,-11,-10,-150,91,-6,-13,91,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,-150,-32,-27,-92,91,-105,-106,-126,-127,-128,-111,-112,-113,91,-12,-150,91,-70,91,91,-80,-83,91,-87,-51,-82,-44,91,-150,-45,-121,-81,-91,]),'WHILE':([6,7,17,20,30,31,37,41,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,120,135,136,138,139,140,141,142,143,144,145,161,164,185,195,197,204,228,231,246,259,261,262,275,276,279,285,287,],[-150,-11,-10,-150,92,-6,-13,92,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,-150,-32,-27,-92,92,-105,-106,-126,-127,-128,-111,-112,-113,92,-12,-150,-70,92,92,-80,-83,-87,-51,-82,-44,-150,-45,-121,-81,-91,]),'CLOSEBRACES':([6,7,17,20,30,31,37,40,41,42,43,44,45,46,47,48,49,51,55,56,58,59,60,93,94,119,120,135,136,138,139,140,141,142,143,144,145,161,164,185,195,196,197,198,203,204,205,228,231,240,246,247,254,259,261,262,265,266,267,275,276,278,279,285,287,],[-150,-11,-10,-150,-150,-6,-13,118,-150,-9,-20,-21,-22,-23,-24,-25,-26,-28,-18,-19,-102,-103,-104,-150,-32,-8,-27,-92,-150,-105,-106,-126,-127,-128,-111,-112,-113,-150,-12,-150,-70,246,-150,-90,253,-150,-38,-80,-83,-150,-87,-89,-37,-51,-82,-44,-150,279,-123,-150,-45,-122,-121,-81,-91,]),'VOID':([16,],[26,]),'OPENBRACKET':([18,52,62,98,107,117,122,188,189,227,256,277,],[28,124,-50,-50,174,179,124,238,-50,-55,272,286,]),'EQUALS':([18,27,29,52,62,117,121,122,123,180,181,183,227,258,],[-150,38,-15,-150,-50,-150,38,-52,-54,-14,-17,-53,-55,-16,]),'OPENBRACES':([21,22,32,64,125,129,162,230,233,234,235,241,249,260,281,],[31,-7,94,136,136,190,-34,136,-85,-86,-88,-124,-93,136,136,]),'OPENPAREN':([24,34,35,36,38,53,54,57,61,62,63,65,74,75,76,77,78,79,82,83,84,87,88,89,90,91,92,98,100,101,102,103,104,105,106,107,108,110,111,112,113,114,124,126,127,130,131,146,148,151,165,166,167,168,169,170,171,172,173,174,175,176,182,209,210,211,212,214,215,217,219,220,221,222,229,232,238,242,244,248,251,256,268,272,273,274,286,288,],[33,-29,-30,114,-49,126,127,128,130,131,114,137,-125,146,148,148,151,151,148,148,151,148,148,148,148,151,-94,131,-150,-150,-140,-141,-58,-59,-60,-150,-62,114,-67,-68,-69,-138,114,114,114,114,114,114,114,114,-134,114,114,-137,-146,114,114,-149,-61,114,-64,-142,114,-135,-136,-147,-148,-143,-139,114,-76,-77,-78,-79,126,-84,114,-95,114,114,114,-150,114,114,-63,-66,114,-65,]),'CTEINT':([28,36,38,63,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,124,126,127,130,131,146,148,151,165,166,167,168,169,170,171,172,173,174,175,176,179,182,209,210,211,212,214,215,217,219,220,221,222,238,242,244,248,251,256,268,272,273,274,286,288,],[39,111,-49,111,-50,-150,-150,-140,-141,-58,-59,-60,-150,-62,111,111,-67,-68,-69,-138,-144,-145,111,111,111,111,111,111,111,111,-134,111,111,-137,-146,111,111,-149,-61,111,-64,-142,223,111,-135,-136,-147,-148,-143,-139,111,-76,-77,-78,-79,111,-95,111,111,111,-150,111,111,-63,-66,111,-65,]),'CLOSEPAREN':([33,95,97,98,100,101,102,103,104,105,106,107,108,111,112,113,131,163,165,168,169,172,173,175,176,177,178,186,187,188,189,191,192,193,194,200,201,206,208,209,210,211,212,214,215,216,218,237,239,242,243,245,256,257,268,269,270,271,273,274,277,280,283,288,290,],[-150,162,-36,-50,-150,-150,-140,-141,-58,-59,-60,-150,-62,-67,-68,-69,-150,-150,-134,-137,-146,-149,-61,-64,-142,215,-150,235,236,-150,-50,241,242,-150,-97,249,250,-35,-40,-135,-136,-147,-148,-143,-139,-73,-75,263,-48,-95,-96,-99,-150,-74,-150,281,282,-150,-63,-66,-47,-98,-39,-65,-46,]),'CTEFLOAT':([36,38,63,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,124,126,127,130,131,146,148,151,165,166,167,168,169,170,171,172,173,174,175,176,182,209,210,211,212,214,215,217,219,220,221,222,238,242,244,248,251,256,268,272,273,274,286,288,],[112,-49,112,-50,-150,-150,-140,-141,-58,-59,-60,-150,-62,112,112,-67,-68,-69,-138,-144,-145,112,112,112,112,112,112,112,112,-134,112,112,-137,-146,112,112,-149,-61,112,-64,-142,112,-135,-136,-147,-148,-143,-139,112,-76,-77,-78,-79,112,-95,112,112,112,-150,112,112,-63,-66,112,-65,]),'CTECHAR':([36,38,63,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,124,126,127,130,131,146,148,151,165,166,167,168,169,170,171,172,173,174,175,176,182,209,210,211,212,214,215,217,219,220,221,222,238,242,244,248,251,256,268,272,273,274,286,288,],[113,-49,113,-50,-150,-150,-140,-141,-58,-59,-60,-150,-62,113,113,-67,-68,-69,-138,-144,-145,113,113,113,113,113,113,113,113,-134,113,113,-137,-146,113,113,-149,-61,113,-64,-142,113,-135,-136,-147,-148,-143,-139,113,-76,-77,-78,-79,113,-95,113,113,113,-150,113,113,-63,-66,113,-65,]),'ADDITION':([36,38,63,98,100,101,102,103,104,105,106,107,108,110,111,112,113,114,124,126,127,130,131,133,146,148,151,165,166,167,168,169,170,171,172,173,174,175,176,182,209,210,211,212,214,215,217,219,220,221,222,238,242,244,248,251,256,268,272,273,274,286,288,],[115,-49,115,-50,166,-150,-140,-141,-58,-59,-60,-150,-62,115,-67,-68,-69,-138,115,115,115,115,115,-140,115,115,115,-134,115,115,-137,-146,115,115,-149,-61,115,-64,-142,115,-135,-136,-147,-148,-143,-139,115,-76,-77,-78,-79,115,-95,115,115,115,-150,115,115,-63,-66,115,-65,]),'SUBSTRACTION':([36,38,63,98,100,101,102,103,104,105,106,107,108,110,111,112,113,114,124,126,127,130,131,133,146,148,151,165,166,167,168,169,170,171,172,173,174,175,176,182,209,210,211,212,214,215,217,219,220,221,222,238,242,244,248,251,256,268,272,273,274,286,288,],[116,-49,116,-50,167,-150,-140,-141,-58,-59,-60,-150,-62,116,-67,-68,-69,-138,116,116,116,116,116,-140,116,116,116,-134,116,116,-137,-146,116,116,-149,-61,116,-64,-142,116,-135,-136,-147,-148,-143,-139,116,-76,-77,-78,-79,116,-95,116,116,116,-150,116,116,-63,-66,116,-65,]),'CLOSEBRACKET':([39,98,100,101,102,103,104,105,106,107,108,111,112,113,165,168,169,172,173,175,176,184,209,210,211,212,213,214,215,223,242,256,264,273,274,284,288,289,],[117,-50,-150,-150,-140,-141,-58,-59,-60,-150,-62,-67,-68,-69,-134,-137,-146,-149,-61,-64,-142,227,-135,-136,-147,-148,256,-143,-139,258,-95,-150,277,-63,-66,288,-65,290,]),'DIVISION':([98,101,102,103,104,105,106,107,108,111,112,113,133,173,175,176,214,215,242,256,273,274,288,],[-50,171,-140,-141,-58,-59,-60,-150,-62,-67,-68,-69,-140,-61,-64,-142,-143,-139,-95,-150,-63,-66,-65,]),'GREATER':([98,100,101,102,103,104,105,106,107,108,111,112,113,165,168,169,172,173,175,176,178,209,210,211,212,214,215,242,256,273,274,288,],[-50,-150,-150,-140,-141,-58,-59,-60,-150,-62,-67,-68,-69,-134,-137,-146,-149,-61,-64,-142,219,-135,-136,-147,-148,-143,-139,-95,-150,-63,-66,-65,]),'LESS':([98,100,101,102,103,104,105,106,107,108,111,112,113,165,168,169,172,173,175,176,178,209,210,211,212,214,215,242,256,273,274,288,],[-50,-150,-150,-140,-141,-58,-59,-60,-150,-62,-67,-68,-69,-134,-137,-146,-149,-61,-64,-142,220,-135,-136,-147,-148,-143,-139,-95,-150,-63,-66,-65,]),'NOTEQUAL':([98,100,101,102,103,104,105,106,107,108,111,112,113,165,168,169,172,173,175,176,178,209,210,211,212,214,215,242,256,273,274,288,],[-50,-150,-150,-140,-141,-58,-59,-60,-150,-62,-67,-68,-69,-134,-137,-146,-149,-61,-64,-142,221,-135,-136,-147,-148,-143,-139,-95,-150,-63,-66,-65,]),'ISEQUAL':([98,100,101,102,103,104,105,106,107,108,111,112,113,165,168,169,172,173,175,176,178,209,210,211,212,214,215,242,256,273,274,288,],[-50,-150,-150,-140,-141,-58,-59,-60,-150,-62,-67,-68,-69,-134,-137,-146,-149,-61,-64,-142,222,-135,-136,-147,-148,-143,-139,-95,-150,-63,-66,-65,]),'COMMA':([98,100,101,102,103,104,105,106,107,108,111,112,113,163,165,168,169,172,173,175,176,193,202,209,210,211,212,214,215,242,256,271,273,274,288,],[-50,-150,-150,-140,-141,-58,-59,-60,-150,-62,-67,-68,-69,207,-134,-137,-146,-149,-61,-64,-142,244,251,-135,-136,-147,-148,-143,-139,-95,-150,207,-63,-66,-65,]),'ELSEIF':([185,246,275,],[232,-87,232,]),'ELSE':([185,246,275,],[233,-87,233,]),'TWODOTS':([199,],[248,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declara_vars':([4,6,20,93,],[5,17,30,161,]),'vars':([4,6,20,93,],[6,6,6,6,]),'empty':([4,5,6,14,18,20,30,33,41,52,93,100,101,107,117,122,131,136,161,163,178,185,188,193,197,204,240,256,265,268,271,275,],[7,15,7,15,29,7,42,97,42,123,7,168,172,175,181,123,194,198,205,208,218,231,239,245,198,205,267,274,267,194,208,231,]),'type':([4,6,16,20,33,93,207,],[8,8,25,8,96,8,255,]),'program_modules':([5,],[12,]),'program_fun':([5,14,],[13,23,]),'function':([5,14,],[14,14,]),'star':([13,],[19,]),'starI':([13,],[20,]),'star_sign':([13,],[21,]),'functionI':([16,],[24,]),'vars1':([18,],[27,]),'function2':([24,],[32,]),'equals':([27,121,],[36,182,]),'star1':([30,41,],[40,119,]),'stmt':([30,41,136,161,197,204,],[41,41,197,204,197,204,]),'assignment':([30,41,136,161,197,204,],[43,43,43,43,43,43,]),'condition':([30,41,136,161,197,204,],[44,44,44,44,44,44,]),'print':([30,41,136,161,197,204,],[45,45,45,45,45,45,]),'loop':([30,41,136,161,197,204,],[46,46,46,46,46,46,]),'read':([30,41,136,161,182,197,204,],[47,47,47,47,226,47,47,]),'graphstmt':([30,41,136,161,190,197,204,240,265,],[48,48,48,48,240,48,48,265,265,]),'graphr':([30,41,136,161,197,204,],[49,49,49,49,49,49,]),'funCall':([30,36,41,63,109,110,124,126,127,130,131,136,146,148,151,161,166,167,170,171,174,182,197,204,217,238,244,248,251,268,272,286,],[50,108,50,108,108,108,108,108,108,108,108,50,108,108,108,50,108,108,108,108,108,108,50,50,108,108,108,108,108,108,108,108,]),'return':([30,41,136,161,197,204,],[51,51,51,51,51,51,]),'id':([30,36,41,63,109,110,124,126,127,128,130,131,136,146,148,151,161,166,167,170,171,174,182,197,204,217,238,244,248,251,268,272,286,],[52,107,52,107,107,107,107,107,107,188,107,107,52,107,107,107,52,107,107,107,107,107,107,52,52,107,107,107,107,107,107,107,107,]),'while':([30,41,136,161,197,204,],[55,55,55,55,55,55,]),'for':([30,41,136,161,197,204,],[56,56,56,56,56,56,]),'graphfig':([30,41,136,161,190,197,204,240,265,],[58,58,58,58,58,58,58,58,58,]),'graphview':([30,41,136,161,190,197,204,240,265,],[59,59,59,59,59,59,59,59,59,]),'graphmove':([30,41,136,161,190,197,204,240,265,],[60,60,60,60,60,60,60,60,60,]),'repeat':([30,41,136,161,197,204,],[61,61,61,61,61,61,]),'while1':([30,41,136,161,197,204,],[64,64,64,64,64,64,]),'graphfig1':([30,41,136,161,190,197,204,240,265,],[66,66,66,66,66,66,66,66,66,]),'graphfig2':([30,41,136,161,190,197,204,240,265,],[67,67,67,67,67,67,67,67,67,]),'graphview0':([30,41,136,161,190,197,204,240,265,],[68,68,68,68,68,68,68,68,68,]),'graphview1':([30,41,136,161,190,197,204,240,265,],[69,69,69,69,69,69,69,69,69,]),'graphview2':([30,41,136,161,190,197,204,240,265,],[70,70,70,70,70,70,70,70,70,]),'graphmove0':([30,41,136,161,190,197,204,240,265,],[71,71,71,71,71,71,71,71,71,]),'graphmove1':([30,41,136,161,190,197,204,240,265,],[72,72,72,72,72,72,72,72,72,]),'graphmove2':([30,41,136,161,190,197,204,240,265,],[73,73,73,73,73,73,73,73,73,]),'while_w':([30,41,136,161,197,204,],[75,75,75,75,75,75,]),'inicia_fun':([32,],[93,]),'function3':([33,],[95,]),'exp':([36,63,110,124,126,127,130,131,146,148,151,166,167,174,182,217,238,244,248,251,268,272,286,],[99,134,178,184,178,178,191,193,178,201,202,209,210,213,225,257,264,268,269,270,193,284,289,]),'term':([36,63,110,124,126,127,130,131,146,148,151,166,167,170,171,174,182,217,238,244,248,251,268,272,286,],[100,100,100,100,100,100,100,100,100,100,100,100,100,211,212,100,100,100,100,100,100,100,100,100,100,]),'factor':([36,63,110,124,126,127,130,131,146,148,151,166,167,170,171,174,182,217,238,244,248,251,268,272,286,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'vcte':([36,63,109,110,124,126,127,130,131,146,148,151,166,167,170,171,174,182,217,238,244,248,251,268,272,286,],[102,133,176,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'factor1':([36,63,110,124,126,127,130,131,146,148,151,166,167,170,171,174,182,217,238,244,248,251,268,272,286,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'cte_int':([36,63,109,110,124,126,127,130,131,146,148,151,166,167,170,171,174,182,217,238,244,248,251,268,272,286,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'cte_float':([36,63,109,110,124,126,127,130,131,146,148,151,166,167,170,171,174,182,217,238,244,248,251,268,272,286,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'cte_char':([36,63,109,110,124,126,127,130,131,146,148,151,166,167,170,171,174,182,217,238,244,248,251,268,272,286,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'factor2':([36,63,110,124,126,127,130,131,146,148,151,166,167,170,171,174,182,217,238,244,248,251,268,272,286,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'openP':([36,63,110,124,126,127,130,131,146,148,151,166,167,170,171,174,182,217,238,244,248,251,268,272,286,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'assignment1':([52,122,],[121,183,]),'assignment2':([52,122,],[122,122,]),'head_cond':([53,229,],[125,260,]),'rep':([61,],[129,]),'return1':([63,],[132,]),'body':([64,125,230,260,281,],[135,185,261,275,287,]),'unaExp':([76,77,82,83,87,88,89,90,],[147,149,153,154,156,157,158,159,]),'dosExp':([78,79,84,91,],[150,152,155,160,]),'exp1':([100,],[165,]),'term1':([101,],[169,]),'vcte1':([107,],[173,]),'expression':([110,126,127,146,],[177,186,187,200,]),'vars3':([117,],[180,]),'funCall2':([131,268,],[192,280,]),'body1':([136,197,],[196,247,]),'function4':([161,204,],[203,254,]),'function5':([163,271,],[206,283,]),'closeP':([177,],[214,]),'expression1':([178,],[216,]),'loper':([178,],[217,]),'assignment3':([182,],[224,]),'condition1':([185,275,],[228,285,]),'elseif':([185,275,],[229,229,]),'else':([185,275,],[230,230,]),'close_condition':([186,],[234,]),'read1':([188,],[237,]),'funCall3':([193,],[243,]),'termina_fun':([203,],[252,]),'graphr1':([240,265,],[266,278,]),'vcte3':([256,],[273,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON declara_vars program_modules','program',5,'p_program','parser.py',19),
  ('program_modules -> program_fun star','program_modules',2,'p_program_modules','parser.py',33),
  ('program_fun -> function program_fun','program_fun',2,'p_program_fun','parser.py',39),
  ('program_fun -> empty','program_fun',1,'p_program_fun','parser.py',40),
  ('star -> starI declara_vars star1 CLOSEBRACES','star',4,'p_star','parser.py',47),
  ('starI -> star_sign OPENBRACES','starI',2,'p_starI','parser.py',57),
  ('star_sign -> MULTIPLICATION','star_sign',1,'p_star_sign','parser.py',63),
  ('star1 -> stmt star1','star1',2,'p_star1','parser.py',72),
  ('star1 -> empty','star1',1,'p_star1','parser.py',73),
  ('declara_vars -> vars declara_vars','declara_vars',2,'p_declara_vars','parser.py',79),
  ('declara_vars -> empty','declara_vars',1,'p_declara_vars','parser.py',80),
  ('vars -> type ID vars1 equals exp SEMICOLON','vars',6,'p_vars','parser.py',88),
  ('vars -> type ID vars1 SEMICOLON','vars',4,'p_vars','parser.py',89),
  ('vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3','vars1',4,'p_vars1','parser.py',107),
  ('vars1 -> empty','vars1',1,'p_vars1','parser.py',108),
  ('vars3 -> OPENBRACKET CTEINT CLOSEBRACKET','vars3',3,'p_vars3','parser.py',114),
  ('vars3 -> empty','vars3',1,'p_vars3','parser.py',115),
  ('loop -> while','loop',1,'p_loop','parser.py',121),
  ('loop -> for','loop',1,'p_loop','parser.py',122),
  ('stmt -> assignment','stmt',1,'p_stmt','parser.py',129),
  ('stmt -> condition','stmt',1,'p_stmt','parser.py',130),
  ('stmt -> print','stmt',1,'p_stmt','parser.py',131),
  ('stmt -> loop','stmt',1,'p_stmt','parser.py',132),
  ('stmt -> read','stmt',1,'p_stmt','parser.py',133),
  ('stmt -> graphstmt','stmt',1,'p_stmt','parser.py',134),
  ('stmt -> graphr','stmt',1,'p_stmt','parser.py',135),
  ('stmt -> funCall SEMICOLON','stmt',2,'p_stmt','parser.py',136),
  ('stmt -> return','stmt',1,'p_stmt','parser.py',137),
  ('functionI -> type ID','functionI',2,'p_functionI','parser.py',147),
  ('functionI -> VOID ID','functionI',2,'p_functionI','parser.py',148),
  ('function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun','function',7,'p_function','parser.py',160),
  ('inicia_fun -> OPENBRACES','inicia_fun',1,'p_inicia_fun','parser.py',173),
  ('termina_fun -> CLOSEBRACES','termina_fun',1,'p_termina_fun','parser.py',179),
  ('function2 -> OPENPAREN function3 CLOSEPAREN','function2',3,'p_function2','parser.py',184),
  ('function3 -> type ID function5','function3',3,'p_function3','parser.py',190),
  ('function3 -> empty','function3',1,'p_function3','parser.py',191),
  ('function4 -> stmt function4','function4',2,'p_function4','parser.py',197),
  ('function4 -> empty','function4',1,'p_function4','parser.py',198),
  ('function5 -> COMMA type ID function5','function5',4,'p_function5','parser.py',207),
  ('function5 -> empty','function5',1,'p_function5','parser.py',208),
  ('type -> INT','type',1,'p_type','parser.py',235),
  ('type -> FLOAT','type',1,'p_type','parser.py',236),
  ('type -> CHAR','type',1,'p_type','parser.py',237),
  ('print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON','print',5,'p_print','parser.py',245),
  ('read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON','read',6,'p_read','parser.py',254),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET','read1',6,'p_read1','parser.py',262),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET','read1',3,'p_read1','parser.py',263),
  ('read1 -> empty','read1',1,'p_read1','parser.py',264),
  ('equals -> EQUALS','equals',1,'p_equals','parser.py',269),
  ('id -> ID','id',1,'p_id','parser.py',278),
  ('assignment -> id assignment1 equals assignment3 SEMICOLON','assignment',5,'p_assignment','parser.py',288),
  ('assignment1 -> assignment2','assignment1',1,'p_assignment1','parser.py',296),
  ('assignment1 -> assignment2 assignment1','assignment1',2,'p_assignment1','parser.py',297),
  ('assignment1 -> empty','assignment1',1,'p_assignment1','parser.py',298),
  ('assignment2 -> OPENBRACKET exp CLOSEBRACKET','assignment2',3,'p_assignment2','parser.py',304),
  ('assignment3 -> exp','assignment3',1,'p_assignment3','parser.py',310),
  ('assignment3 -> read','assignment3',1,'p_assignment3','parser.py',311),
  ('vcte -> cte_int','vcte',1,'p_vcte','parser.py',320),
  ('vcte -> cte_float','vcte',1,'p_vcte','parser.py',321),
  ('vcte -> cte_char','vcte',1,'p_vcte','parser.py',322),
  ('vcte -> id vcte1','vcte',2,'p_vcte','parser.py',323),
  ('vcte -> funCall','vcte',1,'p_vcte','parser.py',324),
  ('vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3','vcte1',4,'p_vcte1','parser.py',333),
  ('vcte1 -> empty','vcte1',1,'p_vcte1','parser.py',334),
  ('vcte3 -> OPENBRACKET exp CLOSEBRACKET','vcte3',3,'p_vcte3','parser.py',340),
  ('vcte3 -> empty','vcte3',1,'p_vcte3','parser.py',341),
  ('cte_int -> CTEINT','cte_int',1,'p_cte_int','parser.py',348),
  ('cte_float -> CTEFLOAT','cte_float',1,'p_cte_float','parser.py',355),
  ('cte_char -> CTECHAR','cte_char',1,'p_cte_char','parser.py',362),
  ('return -> RETURN return1 SEMICOLON','return',3,'p_return','parser.py',370),
  ('return1 -> vcte','return1',1,'p_return1','parser.py',376),
  ('return1 -> exp','return1',1,'p_return1','parser.py',377),
  ('expression -> exp expression1','expression',2,'p_expression','parser.py',385),
  ('expression1 -> loper exp','expression1',2,'p_expression1','parser.py',390),
  ('expression1 -> empty','expression1',1,'p_expression1','parser.py',391),
  ('loper -> GREATER','loper',1,'p_loper','parser.py',401),
  ('loper -> LESS','loper',1,'p_loper','parser.py',402),
  ('loper -> NOTEQUAL','loper',1,'p_loper','parser.py',403),
  ('loper -> ISEQUAL','loper',1,'p_loper','parser.py',404),
  ('condition -> IF head_cond body condition1','condition',4,'p_condition','parser.py',414),
  ('condition1 -> elseif head_cond body condition1','condition1',4,'p_condition1','parser.py',422),
  ('condition1 -> else body','condition1',2,'p_condition1','parser.py',423),
  ('condition1 -> empty','condition1',1,'p_condition1','parser.py',424),
  ('elseif -> ELSEIF','elseif',1,'p_elseif','parser.py',431),
  ('else -> ELSE','else',1,'p_else','parser.py',438),
  ('head_cond -> OPENPAREN expression close_condition','head_cond',3,'p_head_cond','parser.py',450),
  ('body -> OPENBRACES body1 CLOSEBRACES','body',3,'p_body','parser.py',456),
  ('close_condition -> CLOSEPAREN','close_condition',1,'p_close_condition','parser.py',462),
  ('body1 -> stmt body1','body1',2,'p_body1','parser.py',469),
  ('body1 -> empty','body1',1,'p_body1','parser.py',470),
  ('for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body','for',7,'p_for','parser.py',478),
  ('while -> while1 body','while',2,'p_while','parser.py',485),
  ('while1 -> while_w OPENPAREN expression CLOSEPAREN','while1',4,'p_while1','parser.py',497),
  ('while_w -> WHILE','while_w',1,'p_while_w','parser.py',503),
  ('funCall -> ID OPENPAREN funCall2 CLOSEPAREN','funCall',4,'p_funCall','parser.py',511),
  ('funCall2 -> exp funCall3','funCall2',2,'p_funCall2','parser.py',522),
  ('funCall2 -> empty','funCall2',1,'p_funCall2','parser.py',523),
  ('funCall3 -> COMMA exp funCall2','funCall3',3,'p_funCall3','parser.py',529),
  ('funCall3 -> empty','funCall3',1,'p_funCall3','parser.py',530),
  ('dosExp -> OPENPAREN exp COMMA exp CLOSEPAREN','dosExp',5,'p_dosExp','parser.py',537),
  ('unaExp -> OPENPAREN exp CLOSEPAREN','unaExp',3,'p_unaExp','parser.py',545),
  ('graphstmt -> graphfig','graphstmt',1,'p_graphstmt','parser.py',552),
  ('graphstmt -> graphview','graphstmt',1,'p_graphstmt','parser.py',553),
  ('graphstmt -> graphmove','graphstmt',1,'p_graphstmt','parser.py',554),
  ('graphfig -> graphfig1 SEMICOLON','graphfig',2,'p_graphfig','parser.py',560),
  ('graphfig -> graphfig2 SEMICOLON','graphfig',2,'p_graphfig','parser.py',561),
  ('graphfig1 -> CIRCLE unaExp','graphfig1',2,'p_graphfig1','parser.py',566),
  ('graphfig1 -> SQUARE unaExp','graphfig1',2,'p_graphfig1','parser.py',567),
  ('graphfig2 -> TRIANGLE dosExp','graphfig2',2,'p_graphfig2','parser.py',575),
  ('graphfig2 -> RECTANGLE dosExp','graphfig2',2,'p_graphfig2','parser.py',576),
  ('graphmove -> graphmove0 SEMICOLON','graphmove',2,'p_graphmove','parser.py',584),
  ('graphmove -> graphmove1 SEMICOLON','graphmove',2,'p_graphmove','parser.py',585),
  ('graphmove -> graphmove2 SEMICOLON','graphmove',2,'p_graphmove','parser.py',586),
  ('graphmove0 -> HAND_DOWN','graphmove0',1,'p_graphmove0','parser.py',592),
  ('graphmove0 -> HAND_UP','graphmove0',1,'p_graphmove0','parser.py',593),
  ('graphmove1 -> GO unaExp','graphmove1',2,'p_graphmove1','parser.py',601),
  ('graphmove1 -> LEFT unaExp','graphmove1',2,'p_graphmove1','parser.py',602),
  ('graphmove1 -> RIGHT unaExp','graphmove1',2,'p_graphmove1','parser.py',603),
  ('graphmove1 -> BACK unaExp','graphmove1',2,'p_graphmove1','parser.py',604),
  ('graphmove2 -> ARC dosExp','graphmove2',2,'p_graphmove2','parser.py',611),
  ('graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES','graphr',6,'p_graphr','parser.py',622),
  ('graphr1 -> graphstmt graphr1','graphr1',2,'p_graphr1','parser.py',633),
  ('graphr1 -> empty','graphr1',1,'p_graphr1','parser.py',634),
  ('rep -> OPENPAREN exp CLOSEPAREN','rep',3,'p_rep','parser.py',639),
  ('repeat -> REPEAT','repeat',1,'p_repeat','parser.py',645),
  ('graphview -> graphview0 SEMICOLON','graphview',2,'p_graphview','parser.py',652),
  ('graphview -> graphview1 SEMICOLON','graphview',2,'p_graphview','parser.py',653),
  ('graphview -> graphview2 SEMICOLON','graphview',2,'p_graphview','parser.py',654),
  ('graphview0 -> HIDE_STAR','graphview0',1,'p_graphview0','parser.py',659),
  ('graphview0 -> SHOW_STAR','graphview0',1,'p_graphview0','parser.py',660),
  ('graphview1 -> COLOR_STAR unaExp','graphview1',2,'p_graphview1','parser.py',667),
  ('graphview1 -> SIZE_STAR unaExp','graphview1',2,'p_graphview1','parser.py',668),
  ('graphview2 -> SETXY dosExp','graphview2',2,'p_graphview2','parser.py',675),
  ('exp -> term exp1','exp',2,'p_exp','parser.py',683),
  ('exp1 -> ADDITION exp','exp1',2,'p_exp1','parser.py',691),
  ('exp1 -> SUBSTRACTION exp','exp1',2,'p_exp1','parser.py',692),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',693),
  ('openP -> OPENPAREN','openP',1,'p_openP','parser.py',703),
  ('closeP -> CLOSEPAREN','closeP',1,'p_closeP','parser.py',711),
  ('factor -> vcte','factor',1,'p_factor','parser.py',721),
  ('factor -> factor1','factor',1,'p_factor','parser.py',722),
  ('factor1 -> factor2 vcte','factor1',2,'p_factor1','parser.py',728),
  ('factor1 -> openP expression closeP','factor1',3,'p_factor1','parser.py',729),
  ('factor2 -> ADDITION','factor2',1,'p_factor2','parser.py',735),
  ('factor2 -> SUBSTRACTION','factor2',1,'p_factor2','parser.py',736),
  ('term -> factor term1','term',2,'p_term','parser.py',749),
  ('term1 -> MULTIPLICATION term','term1',2,'p_term1','parser.py',758),
  ('term1 -> DIVISION term','term1',2,'p_term1','parser.py',759),
  ('term1 -> empty','term1',1,'p_term1','parser.py',760),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',770),
]
