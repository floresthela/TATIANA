
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDITION AND ARC BACK CHAR CIRCLE CLOSEBRACES CLOSEBRACKET CLOSEPAREN COLOR_STAR COMMA CTECHAR CTEFLOAT CTEINT DIVISION ELSE ELSEIF EQUALS FLOAT FOR FUN GO GREATER HAND_DOWN HAND_UP HIDE_STAR ID IF INT ISEQUAL LEFT LESS MULTIPLICATION NOTEQUAL OPENBRACES OPENBRACKET OPENPAREN OR PRINT PROGRAM READ RECTANGLE REPEAT RETURN RIGHT SEMICOLON SETXY SHOW_STAR SIMPLEQUOTES SIZE_STAR SQUARE SUBSTRACTION TRIANGLE TWODOTS VARS VOID WHILE\n    program : PROGRAM ID SEMICOLON declara_vars program2 star\n    \n    program2 : function program2\n            | empty\n    \n    star : starI declara_vars star1 CLOSEBRACES\n    \n    starI : MULTIPLICATION OPENBRACES\n    \n    star1 : stmt star1\n        | empty\n    \n    declara_vars : vars declara_vars\n          | empty\n    \n    loop : while\n        | for\n    \n    stmt : assignment\n        | condition\n        | print\n        | loop\n        | read\n        | graphstmt\n        | graphr\n        | funCall SEMICOLON\n        | return\n    \n    functionI : type ID\n              | VOID ID\n    \n    function : FUN functionI function2 inicia_fun declara_vars function4 termina_fun\n    \n    inicia_fun : OPENBRACES\n    \n    termina_fun : CLOSEBRACES\n    \n    function2 : OPENPAREN function3 CLOSEPAREN\n    \n    function3 : type ID function5\n              | empty\n    \n    function4 : stmt function4\n              | empty\n    \n    function5 : COMMA type ID function3\n    \n    vars : type ID vars1 equals exp SEMICOLON\n         | type ID vars1 SEMICOLON\n    \n    vars1 : OPENBRACKET CTEINT CLOSEBRACKET vars3\n        | empty\n    \n    vars3 : OPENBRACKET CTEINT CLOSEBRACKET\n        | empty\n    \n    type : INT\n         | FLOAT\n         | CHAR\n    \n    print : PRINT OPENPAREN expression CLOSEPAREN SEMICOLON\n    \n    read : READ OPENPAREN id read1 CLOSEPAREN SEMICOLON\n    \n    read1 : OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET\n              | OPENBRACKET exp CLOSEBRACKET\n              | empty\n    \n    equals : EQUALS\n    \n    id : ID\n    \n    assignment : id assignment1 equals assignment3 SEMICOLON\n    \n    assignment1 : assignment2\n                | assignment2 assignment1\n                | empty\n    \n    assignment2 : OPENBRACKET exp CLOSEBRACKET\n    \n    assignment3 : exp\n                | read\n    \n    vcte : cte_int\n         | cte_float\n         | cte_char\n         | id vcte1\n         | funCall\n    \n    vcte1 : OPENBRACKET exp CLOSEBRACKET vcte3\n          | empty\n    \n    vcte3 : OPENBRACKET exp CLOSEBRACKET\n        | empty\n\n    \n    cte_int : CTEINT\n    \n    cte_float : CTEFLOAT\n    \n    cte_char : CTECHAR\n    \n    return : RETURN return1 SEMICOLON\n    \n    return1 : vcte\n            | exp\n    \n    expression : exp expression1\n    \n    expression1 : loper exp\n             | empty\n    \n    loper : GREATER\n          | LESS\n          | NOTEQUAL\n          | ISEQUAL\n    \n    logical : expression logical1 expression\n    \n    logical1 : OR\n             | AND\n    \n    condition : IF head_cond body condition1\n    \n    condition1 : elseif head_cond body condition1\n               | else body\n               | empty\n    \n    elseif : ELSEIF\n    \n    else : ELSE\n    \n    head_cond : OPENPAREN head1 close_condition\n    \n    head1 : expression\n          | logical\n    \n    body : OPENBRACES body1 CLOSEBRACES\n    \n    close_condition : CLOSEPAREN\n    \n    body1 : stmt body1\n          | empty\n    \n    for : FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body\n    \n    while : while1 body\n    \n    while1 : while_w OPENPAREN expression CLOSEPAREN\n    \n    while_w : WHILE\n    \n    funCall : ID OPENPAREN funCall2 CLOSEPAREN\n    \n    funCall2 : exp funCall3\n             | empty\n    \n    funCall3 : COMMA exp funCall2\n             | empty\n    \n    laRegla : OPENPAREN exp COMMA exp CLOSEPAREN\n    \n    laRegla2 : OPENPAREN exp CLOSEPAREN\n    \n    graphstmt : graphfig\n             | graphview\n             | graphmove\n    \n    graphfig : graphfig1 SEMICOLON\n    \n    graphfig1 : CIRCLE laRegla2\n            | SQUARE laRegla2\n            | TRIANGLE laRegla\n            | RECTANGLE laRegla\n    \n    graphmove : graphmove1  SEMICOLON\n              | graphmove2 SEMICOLON\n    \n    graphmove1 : HAND_DOWN\n              | HAND_UP\n    \n    graphmove2 : GO laRegla2\n              | LEFT laRegla2\n              | RIGHT laRegla2\n              | BACK laRegla2\n              | ARC laRegla\n    \n    graphr : repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES\n    \n    graphr1 : graphstmt graphr1\n            | empty\n    \n    rep : OPENPAREN exp CLOSEPAREN\n    \n    repeat : REPEAT\n    \n    graphview : graphview1 SEMICOLON\n    \n    graphview1 : HIDE_STAR\n              | SHOW_STAR\n              | graphview2 exp\n    \n    graphview2 : SETXY laRegla\n              | COLOR_STAR laRegla2\n              | SIZE_STAR laRegla2\n    \n    exp : term exp1\n    \n    exp1 : ADDITION exp\n         | SUBSTRACTION exp\n         | empty\n    \n    openP : OPENPAREN\n    \n    closeP : CLOSEPAREN\n    \n    factor : vcte\n           | factor1\n    \n    factor1 : factor2 vcte\n            | openP expression closeP\n    \n    factor2 : ADDITION\n            | SUBSTRACTION\n    \n    term : factor term1\n    \n    term1 : MULTIPLICATION term\n          | DIVISION term\n          | empty\n    empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,18,113,],[0,-1,-4,]),'ID':([2,6,7,8,9,10,11,16,19,23,24,28,29,34,35,36,39,41,42,43,44,45,46,47,49,53,54,56,57,58,61,76,88,89,91,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,119,121,122,123,125,126,130,131,132,133,134,135,136,137,139,142,150,151,152,153,156,157,158,159,160,161,162,163,164,165,166,167,168,174,177,189,191,198,202,203,204,205,207,208,210,212,213,214,215,221,224,229,230,231,234,238,240,242,244,246,247,251,252,255,257,259,265,269,270,271,272,273,276,279,282,283,284,285,],[3,-149,-9,17,-38,-39,-40,-8,-149,32,33,60,-5,93,-33,-46,60,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,93,93,-149,-24,155,-47,-149,-149,-139,-140,-55,-56,-57,-149,-59,93,93,-64,-65,-66,-137,-143,-144,-19,93,93,93,183,93,93,-94,60,193,-107,-126,-112,-113,93,93,93,-130,-131,-132,60,-32,-133,93,93,-136,-145,93,93,-148,-58,93,-61,-141,93,-149,-67,60,60,-134,-135,-146,-147,-142,-138,93,-73,-74,-75,-76,-80,-83,93,-78,-79,93,-97,93,-89,93,-103,93,268,-149,-48,-82,-41,93,93,-60,-63,-149,-42,-121,-102,-81,93,-93,-62,]),'SEMICOLON':([3,17,25,27,48,64,65,66,67,74,75,77,78,93,94,95,96,97,98,99,100,101,102,103,106,107,108,112,127,128,129,138,140,141,143,144,145,146,147,148,149,157,160,161,164,165,167,168,172,173,202,203,204,205,207,208,217,218,219,232,238,246,252,254,260,270,271,273,279,285,],[4,-149,35,-35,115,133,134,135,136,-127,-128,-114,-115,-47,156,-149,-149,-139,-140,-55,-56,-57,-149,-59,-64,-65,-66,-149,189,-68,-69,-108,-109,-110,-111,-129,-116,-117,-118,-119,-120,-133,-136,-145,-148,-58,-61,-141,-34,-37,-134,-135,-146,-147,-142,-138,255,-53,-54,259,-97,-103,-149,-36,273,-60,-63,-42,-102,-62,]),'FUN':([4,5,6,7,13,16,35,156,248,249,],[-149,15,-149,-9,15,-8,-33,-32,-23,-25,]),'MULTIPLICATION':([4,5,6,7,12,13,14,16,21,35,93,96,97,98,99,100,101,102,103,106,107,108,128,156,165,167,168,207,208,238,248,249,252,270,271,285,],[-149,-149,-149,-9,20,-149,-3,-8,-2,-33,-47,162,-139,-140,-55,-56,-57,-149,-59,-64,-65,-66,-139,-32,-58,-61,-141,-142,-138,-97,-23,-25,-149,-60,-63,-62,]),'INT':([4,6,15,19,29,31,35,88,89,156,201,268,],[9,9,9,9,-5,9,-33,9,-24,-32,9,9,]),'FLOAT':([4,6,15,19,29,31,35,88,89,156,201,268,],[10,10,10,10,-5,10,-33,10,-24,-32,10,10,]),'CHAR':([4,6,15,19,29,31,35,88,89,156,201,268,],[11,11,11,11,-5,11,-33,11,-24,-32,11,11,]),'IF':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,189,191,198,221,224,242,255,257,259,272,273,276,282,284,],[-149,-9,-8,-149,51,-5,-33,51,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,-149,-24,-19,-94,51,-107,-126,-112,-113,51,-32,-149,-67,51,51,-80,-83,-89,-48,-82,-41,-149,-42,-121,-81,-93,]),'PRINT':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,189,191,198,221,224,242,255,257,259,272,273,276,282,284,],[-149,-9,-8,-149,52,-5,-33,52,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,-149,-24,-19,-94,52,-107,-126,-112,-113,52,-32,-149,-67,52,52,-80,-83,-89,-48,-82,-41,-149,-42,-121,-81,-93,]),'READ':([6,7,16,19,28,29,35,36,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,174,177,189,191,198,221,224,242,255,257,259,272,273,276,282,284,],[-149,-9,-8,-149,55,-5,-33,-46,55,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,-149,-24,-19,-94,55,-107,-126,-112,-113,55,-32,55,-149,-67,55,55,-80,-83,-89,-48,-82,-41,-149,-42,-121,-81,-93,]),'RETURN':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,189,191,198,221,224,242,255,257,259,272,273,276,282,284,],[-149,-9,-8,-149,61,-5,-33,61,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,-149,-24,-19,-94,61,-107,-126,-112,-113,61,-32,-149,-67,61,61,-80,-83,-89,-48,-82,-41,-149,-42,-121,-81,-93,]),'FOR':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,189,191,198,221,224,242,255,257,259,272,273,276,282,284,],[-149,-9,-8,-149,63,-5,-33,63,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,-149,-24,-19,-94,63,-107,-126,-112,-113,63,-32,-149,-67,63,63,-80,-83,-89,-48,-82,-41,-149,-42,-121,-81,-93,]),'REPEAT':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,189,191,198,221,224,242,255,257,259,272,273,276,282,284,],[-149,-9,-8,-149,68,-5,-33,68,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,-149,-24,-19,-94,68,-107,-126,-112,-113,68,-32,-149,-67,68,68,-80,-83,-89,-48,-82,-41,-149,-42,-121,-81,-93,]),'CIRCLE':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,184,189,191,198,221,224,236,242,255,257,259,262,272,273,276,282,284,],[-149,-9,-8,-149,70,-5,-33,70,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,-149,-24,-19,-94,70,-107,-126,-112,-113,70,-32,-149,70,-67,70,70,-80,-83,70,-89,-48,-82,-41,70,-149,-42,-121,-81,-93,]),'SQUARE':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,184,189,191,198,221,224,236,242,255,257,259,262,272,273,276,282,284,],[-149,-9,-8,-149,71,-5,-33,71,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,-149,-24,-19,-94,71,-107,-126,-112,-113,71,-32,-149,71,-67,71,71,-80,-83,71,-89,-48,-82,-41,71,-149,-42,-121,-81,-93,]),'TRIANGLE':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,184,189,191,198,221,224,236,242,255,257,259,262,272,273,276,282,284,],[-149,-9,-8,-149,72,-5,-33,72,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,-149,-24,-19,-94,72,-107,-126,-112,-113,72,-32,-149,72,-67,72,72,-80,-83,72,-89,-48,-82,-41,72,-149,-42,-121,-81,-93,]),'RECTANGLE':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,184,189,191,198,221,224,236,242,255,257,259,262,272,273,276,282,284,],[-149,-9,-8,-149,73,-5,-33,73,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,-149,-24,-19,-94,73,-107,-126,-112,-113,73,-32,-149,73,-67,73,73,-80,-83,73,-89,-48,-82,-41,73,-149,-42,-121,-81,-93,]),'HIDE_STAR':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,184,189,191,198,221,224,236,242,255,257,259,262,272,273,276,282,284,],[-149,-9,-8,-149,74,-5,-33,74,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,-149,-24,-19,-94,74,-107,-126,-112,-113,74,-32,-149,74,-67,74,74,-80,-83,74,-89,-48,-82,-41,74,-149,-42,-121,-81,-93,]),'SHOW_STAR':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,184,189,191,198,221,224,236,242,255,257,259,262,272,273,276,282,284,],[-149,-9,-8,-149,75,-5,-33,75,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,-149,-24,-19,-94,75,-107,-126,-112,-113,75,-32,-149,75,-67,75,75,-80,-83,75,-89,-48,-82,-41,75,-149,-42,-121,-81,-93,]),'HAND_DOWN':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,184,189,191,198,221,224,236,242,255,257,259,262,272,273,276,282,284,],[-149,-9,-8,-149,77,-5,-33,77,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,-149,-24,-19,-94,77,-107,-126,-112,-113,77,-32,-149,77,-67,77,77,-80,-83,77,-89,-48,-82,-41,77,-149,-42,-121,-81,-93,]),'HAND_UP':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,184,189,191,198,221,224,236,242,255,257,259,262,272,273,276,282,284,],[-149,-9,-8,-149,78,-5,-33,78,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,-149,-24,-19,-94,78,-107,-126,-112,-113,78,-32,-149,78,-67,78,78,-80,-83,78,-89,-48,-82,-41,78,-149,-42,-121,-81,-93,]),'GO':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,184,189,191,198,221,224,236,242,255,257,259,262,272,273,276,282,284,],[-149,-9,-8,-149,79,-5,-33,79,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,-149,-24,-19,-94,79,-107,-126,-112,-113,79,-32,-149,79,-67,79,79,-80,-83,79,-89,-48,-82,-41,79,-149,-42,-121,-81,-93,]),'LEFT':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,184,189,191,198,221,224,236,242,255,257,259,262,272,273,276,282,284,],[-149,-9,-8,-149,80,-5,-33,80,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,-149,-24,-19,-94,80,-107,-126,-112,-113,80,-32,-149,80,-67,80,80,-80,-83,80,-89,-48,-82,-41,80,-149,-42,-121,-81,-93,]),'RIGHT':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,184,189,191,198,221,224,236,242,255,257,259,262,272,273,276,282,284,],[-149,-9,-8,-149,81,-5,-33,81,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,-149,-24,-19,-94,81,-107,-126,-112,-113,81,-32,-149,81,-67,81,81,-80,-83,81,-89,-48,-82,-41,81,-149,-42,-121,-81,-93,]),'BACK':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,184,189,191,198,221,224,236,242,255,257,259,262,272,273,276,282,284,],[-149,-9,-8,-149,82,-5,-33,82,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,-149,-24,-19,-94,82,-107,-126,-112,-113,82,-32,-149,82,-67,82,82,-80,-83,82,-89,-48,-82,-41,82,-149,-42,-121,-81,-93,]),'ARC':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,184,189,191,198,221,224,236,242,255,257,259,262,272,273,276,282,284,],[-149,-9,-8,-149,83,-5,-33,83,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,-149,-24,-19,-94,83,-107,-126,-112,-113,83,-32,-149,83,-67,83,83,-80,-83,83,-89,-48,-82,-41,83,-149,-42,-121,-81,-93,]),'WHILE':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,189,191,198,221,224,242,255,257,259,272,273,276,282,284,],[-149,-9,-8,-149,84,-5,-33,84,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,-149,-24,-19,-94,84,-107,-126,-112,-113,84,-32,-149,-67,84,84,-80,-83,-89,-48,-82,-41,-149,-42,-121,-81,-93,]),'SETXY':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,184,189,191,198,221,224,236,242,255,257,259,262,272,273,276,282,284,],[-149,-9,-8,-149,85,-5,-33,85,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,-149,-24,-19,-94,85,-107,-126,-112,-113,85,-32,-149,85,-67,85,85,-80,-83,85,-89,-48,-82,-41,85,-149,-42,-121,-81,-93,]),'COLOR_STAR':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,184,189,191,198,221,224,236,242,255,257,259,262,272,273,276,282,284,],[-149,-9,-8,-149,86,-5,-33,86,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,-149,-24,-19,-94,86,-107,-126,-112,-113,86,-32,-149,86,-67,86,86,-80,-83,86,-89,-48,-82,-41,86,-149,-42,-121,-81,-93,]),'SIZE_STAR':([6,7,16,19,28,29,35,39,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,115,130,131,133,134,135,136,153,156,177,184,189,191,198,221,224,236,242,255,257,259,262,272,273,276,282,284,],[-149,-9,-8,-149,87,-5,-33,87,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,-149,-24,-19,-94,87,-107,-126,-112,-113,87,-32,-149,87,-67,87,87,-80,-83,87,-89,-48,-82,-41,87,-149,-42,-121,-81,-93,]),'CLOSEBRACES':([6,7,16,19,28,29,35,38,39,40,41,42,43,44,45,46,47,49,53,54,56,57,58,88,89,114,115,130,131,133,134,135,136,153,156,177,189,190,191,192,197,198,199,221,224,236,242,243,250,255,257,259,262,263,264,272,273,275,276,282,284,],[-149,-9,-8,-149,-149,-5,-33,113,-149,-7,-12,-13,-14,-15,-16,-17,-18,-20,-10,-11,-104,-105,-106,-149,-24,-6,-19,-94,-149,-107,-126,-112,-113,-149,-32,-149,-67,242,-149,-92,249,-149,-30,-80,-83,-149,-89,-91,-29,-48,-82,-41,-149,276,-123,-149,-42,-122,-121,-81,-93,]),'VOID':([15,],[24,]),'OPENBRACKET':([17,50,60,93,102,112,117,182,183,220,252,274,],[26,119,-47,-47,166,171,119,234,-47,-52,269,283,]),'EQUALS':([17,25,27,50,60,112,116,117,118,172,173,175,220,254,],[-149,36,-35,-149,-47,-149,36,-49,-51,-34,-37,-50,-52,-36,]),'OPENBRACES':([20,30,62,120,124,154,223,226,227,228,237,245,256,278,],[29,89,131,131,184,-26,131,-85,-86,-90,-124,-95,131,131,]),'OPENPAREN':([22,32,33,34,36,51,52,55,59,60,61,63,68,69,70,71,72,73,76,79,80,81,82,83,84,85,86,87,93,95,96,97,98,99,100,101,102,103,105,106,107,108,109,119,121,122,125,126,137,139,142,150,151,152,157,158,159,160,161,162,163,164,165,166,167,168,174,202,203,204,205,207,208,210,212,213,214,215,222,225,229,230,231,234,238,240,244,246,247,252,265,269,270,271,279,283,285,],[31,-21,-22,109,-46,121,122,123,125,126,109,132,-125,137,139,139,142,142,109,139,139,139,139,142,-96,142,139,139,126,-149,-149,-139,-140,-55,-56,-57,-149,-59,109,-64,-65,-66,-137,109,109,109,109,109,109,109,109,-130,-131,-132,-133,109,109,-136,-145,109,109,-148,-58,109,-61,-141,109,-134,-135,-146,-147,-142,-138,109,-73,-74,-75,-76,121,-84,109,-78,-79,109,-97,109,109,-103,109,-149,109,109,-60,-63,-102,109,-62,]),'CTEINT':([26,34,36,61,76,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,119,121,122,125,126,137,139,142,150,151,152,157,158,159,160,161,162,163,164,165,166,167,168,171,174,202,203,204,205,207,208,210,212,213,214,215,229,230,231,234,238,240,244,246,247,252,265,269,270,271,279,283,285,],[37,106,-46,106,106,-47,-149,-149,-139,-140,-55,-56,-57,-149,-59,106,106,-64,-65,-66,-137,-143,-144,106,106,106,106,106,106,106,106,-130,-131,-132,-133,106,106,-136,-145,106,106,-148,-58,106,-61,-141,216,106,-134,-135,-146,-147,-142,-138,106,-73,-74,-75,-76,106,-78,-79,106,-97,106,106,-103,106,-149,106,106,-60,-63,-102,106,-62,]),'CLOSEPAREN':([31,90,92,93,95,96,97,98,99,100,101,102,103,106,107,108,126,157,160,161,164,165,167,168,169,170,178,179,180,181,182,183,185,186,187,188,194,195,200,202,203,204,205,207,208,209,211,233,235,238,239,241,252,253,258,265,266,267,268,270,271,274,277,280,285,287,],[-149,154,-28,-47,-149,-149,-139,-140,-55,-56,-57,-149,-59,-64,-65,-66,-149,-133,-136,-145,-148,-58,-61,-141,208,-149,228,-87,-88,232,-149,-47,237,238,-149,-99,245,246,-27,-134,-135,-146,-147,-142,-138,-70,-72,260,-45,-97,-98,-101,-149,-71,-77,-149,278,279,-149,-60,-63,-44,-100,-31,-62,-43,]),'CTEFLOAT':([34,36,61,76,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,119,121,122,125,126,137,139,142,150,151,152,157,158,159,160,161,162,163,164,165,166,167,168,174,202,203,204,205,207,208,210,212,213,214,215,229,230,231,234,238,240,244,246,247,252,265,269,270,271,279,283,285,],[107,-46,107,107,-47,-149,-149,-139,-140,-55,-56,-57,-149,-59,107,107,-64,-65,-66,-137,-143,-144,107,107,107,107,107,107,107,107,-130,-131,-132,-133,107,107,-136,-145,107,107,-148,-58,107,-61,-141,107,-134,-135,-146,-147,-142,-138,107,-73,-74,-75,-76,107,-78,-79,107,-97,107,107,-103,107,-149,107,107,-60,-63,-102,107,-62,]),'CTECHAR':([34,36,61,76,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,119,121,122,125,126,137,139,142,150,151,152,157,158,159,160,161,162,163,164,165,166,167,168,174,202,203,204,205,207,208,210,212,213,214,215,229,230,231,234,238,240,244,246,247,252,265,269,270,271,279,283,285,],[108,-46,108,108,-47,-149,-149,-139,-140,-55,-56,-57,-149,-59,108,108,-64,-65,-66,-137,-143,-144,108,108,108,108,108,108,108,108,-130,-131,-132,-133,108,108,-136,-145,108,108,-148,-58,108,-61,-141,108,-134,-135,-146,-147,-142,-138,108,-73,-74,-75,-76,108,-78,-79,108,-97,108,108,-103,108,-149,108,108,-60,-63,-102,108,-62,]),'ADDITION':([34,36,61,76,93,95,96,97,98,99,100,101,102,103,105,106,107,108,109,119,121,122,125,126,128,137,139,142,150,151,152,157,158,159,160,161,162,163,164,165,166,167,168,174,202,203,204,205,207,208,210,212,213,214,215,229,230,231,234,238,240,244,246,247,252,265,269,270,271,279,283,285,],[110,-46,110,110,-47,158,-149,-139,-140,-55,-56,-57,-149,-59,110,-64,-65,-66,-137,110,110,110,110,110,-139,110,110,110,-130,-131,-132,-133,110,110,-136,-145,110,110,-148,-58,110,-61,-141,110,-134,-135,-146,-147,-142,-138,110,-73,-74,-75,-76,110,-78,-79,110,-97,110,110,-103,110,-149,110,110,-60,-63,-102,110,-62,]),'SUBSTRACTION':([34,36,61,76,93,95,96,97,98,99,100,101,102,103,105,106,107,108,109,119,121,122,125,126,128,137,139,142,150,151,152,157,158,159,160,161,162,163,164,165,166,167,168,174,202,203,204,205,207,208,210,212,213,214,215,229,230,231,234,238,240,244,246,247,252,265,269,270,271,279,283,285,],[111,-46,111,111,-47,159,-149,-139,-140,-55,-56,-57,-149,-59,111,-64,-65,-66,-137,111,111,111,111,111,-139,111,111,111,-130,-131,-132,-133,111,111,-136,-145,111,111,-148,-58,111,-61,-141,111,-134,-135,-146,-147,-142,-138,111,-73,-74,-75,-76,111,-78,-79,111,-97,111,111,-103,111,-149,111,111,-60,-63,-102,111,-62,]),'CLOSEBRACKET':([37,93,95,96,97,98,99,100,101,102,103,106,107,108,157,160,161,164,165,167,168,176,202,203,204,205,206,207,208,216,238,252,261,270,271,281,285,286,],[112,-47,-149,-149,-139,-140,-55,-56,-57,-149,-59,-64,-65,-66,-133,-136,-145,-148,-58,-61,-141,220,-134,-135,-146,-147,252,-142,-138,254,-97,-149,274,-60,-63,285,-62,287,]),'DIVISION':([93,96,97,98,99,100,101,102,103,106,107,108,128,165,167,168,207,208,238,252,270,271,285,],[-47,163,-139,-140,-55,-56,-57,-149,-59,-64,-65,-66,-139,-58,-61,-141,-142,-138,-97,-149,-60,-63,-62,]),'GREATER':([93,95,96,97,98,99,100,101,102,103,106,107,108,157,160,161,164,165,167,168,170,202,203,204,205,207,208,238,252,270,271,285,],[-47,-149,-149,-139,-140,-55,-56,-57,-149,-59,-64,-65,-66,-133,-136,-145,-148,-58,-61,-141,212,-134,-135,-146,-147,-142,-138,-97,-149,-60,-63,-62,]),'LESS':([93,95,96,97,98,99,100,101,102,103,106,107,108,157,160,161,164,165,167,168,170,202,203,204,205,207,208,238,252,270,271,285,],[-47,-149,-149,-139,-140,-55,-56,-57,-149,-59,-64,-65,-66,-133,-136,-145,-148,-58,-61,-141,213,-134,-135,-146,-147,-142,-138,-97,-149,-60,-63,-62,]),'NOTEQUAL':([93,95,96,97,98,99,100,101,102,103,106,107,108,157,160,161,164,165,167,168,170,202,203,204,205,207,208,238,252,270,271,285,],[-47,-149,-149,-139,-140,-55,-56,-57,-149,-59,-64,-65,-66,-133,-136,-145,-148,-58,-61,-141,214,-134,-135,-146,-147,-142,-138,-97,-149,-60,-63,-62,]),'ISEQUAL':([93,95,96,97,98,99,100,101,102,103,106,107,108,157,160,161,164,165,167,168,170,202,203,204,205,207,208,238,252,270,271,285,],[-47,-149,-149,-139,-140,-55,-56,-57,-149,-59,-64,-65,-66,-133,-136,-145,-148,-58,-61,-141,215,-134,-135,-146,-147,-142,-138,-97,-149,-60,-63,-62,]),'OR':([93,95,96,97,98,99,100,101,102,103,106,107,108,157,160,161,164,165,167,168,170,179,202,203,204,205,207,208,209,211,238,252,253,270,271,285,],[-47,-149,-149,-139,-140,-55,-56,-57,-149,-59,-64,-65,-66,-133,-136,-145,-148,-58,-61,-141,-149,230,-134,-135,-146,-147,-142,-138,-70,-72,-97,-149,-71,-60,-63,-62,]),'AND':([93,95,96,97,98,99,100,101,102,103,106,107,108,157,160,161,164,165,167,168,170,179,202,203,204,205,207,208,209,211,238,252,253,270,271,285,],[-47,-149,-149,-139,-140,-55,-56,-57,-149,-59,-64,-65,-66,-133,-136,-145,-148,-58,-61,-141,-149,231,-134,-135,-146,-147,-142,-138,-70,-72,-97,-149,-71,-60,-63,-62,]),'COMMA':([93,95,96,97,98,99,100,101,102,103,106,107,108,155,157,160,161,164,165,167,168,187,196,202,203,204,205,207,208,238,252,270,271,285,],[-47,-149,-149,-139,-140,-55,-56,-57,-149,-59,-64,-65,-66,201,-133,-136,-145,-148,-58,-61,-141,240,247,-134,-135,-146,-147,-142,-138,-97,-149,-60,-63,-62,]),'ELSEIF':([177,242,272,],[225,-89,225,]),'ELSE':([177,242,272,],[226,-89,226,]),'TWODOTS':([193,],[244,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declara_vars':([4,6,19,88,],[5,16,28,153,]),'vars':([4,6,19,88,],[6,6,6,6,]),'empty':([4,5,6,13,17,19,28,31,39,50,88,95,96,102,112,117,126,131,153,170,177,182,187,191,198,236,252,262,265,268,272,],[7,14,7,14,27,7,40,92,40,118,7,160,164,167,173,118,188,192,199,211,224,235,241,192,199,264,271,264,188,92,224,]),'type':([4,6,15,19,31,88,201,268,],[8,8,23,8,91,8,251,91,]),'program2':([5,13,],[12,21,]),'function':([5,13,],[13,13,]),'star':([12,],[18,]),'starI':([12,],[19,]),'functionI':([15,],[22,]),'vars1':([17,],[25,]),'function2':([22,],[30,]),'equals':([25,116,],[34,174,]),'star1':([28,39,],[38,114,]),'stmt':([28,39,131,153,191,198,],[39,39,191,198,191,198,]),'assignment':([28,39,131,153,191,198,],[41,41,41,41,41,41,]),'condition':([28,39,131,153,191,198,],[42,42,42,42,42,42,]),'print':([28,39,131,153,191,198,],[43,43,43,43,43,43,]),'loop':([28,39,131,153,191,198,],[44,44,44,44,44,44,]),'read':([28,39,131,153,174,191,198,],[45,45,45,45,219,45,45,]),'graphstmt':([28,39,131,153,184,191,198,236,262,],[46,46,46,46,236,46,46,262,262,]),'graphr':([28,39,131,153,191,198,],[47,47,47,47,47,47,]),'funCall':([28,34,39,61,76,104,105,119,121,122,125,126,131,137,139,142,153,158,159,162,163,166,174,191,198,210,229,234,240,244,247,265,269,283,],[48,103,48,103,103,103,103,103,103,103,103,103,48,103,103,103,48,103,103,103,103,103,103,48,48,103,103,103,103,103,103,103,103,103,]),'return':([28,39,131,153,191,198,],[49,49,49,49,49,49,]),'id':([28,34,39,61,76,104,105,119,121,122,123,125,126,131,137,139,142,153,158,159,162,163,166,174,191,198,210,229,234,240,244,247,265,269,283,],[50,102,50,102,102,102,102,102,102,102,182,102,102,50,102,102,102,50,102,102,102,102,102,102,50,50,102,102,102,102,102,102,102,102,102,]),'while':([28,39,131,153,191,198,],[53,53,53,53,53,53,]),'for':([28,39,131,153,191,198,],[54,54,54,54,54,54,]),'graphfig':([28,39,131,153,184,191,198,236,262,],[56,56,56,56,56,56,56,56,56,]),'graphview':([28,39,131,153,184,191,198,236,262,],[57,57,57,57,57,57,57,57,57,]),'graphmove':([28,39,131,153,184,191,198,236,262,],[58,58,58,58,58,58,58,58,58,]),'repeat':([28,39,131,153,191,198,],[59,59,59,59,59,59,]),'while1':([28,39,131,153,191,198,],[62,62,62,62,62,62,]),'graphfig1':([28,39,131,153,184,191,198,236,262,],[64,64,64,64,64,64,64,64,64,]),'graphview1':([28,39,131,153,184,191,198,236,262,],[65,65,65,65,65,65,65,65,65,]),'graphmove1':([28,39,131,153,184,191,198,236,262,],[66,66,66,66,66,66,66,66,66,]),'graphmove2':([28,39,131,153,184,191,198,236,262,],[67,67,67,67,67,67,67,67,67,]),'while_w':([28,39,131,153,191,198,],[69,69,69,69,69,69,]),'graphview2':([28,39,131,153,184,191,198,236,262,],[76,76,76,76,76,76,76,76,76,]),'inicia_fun':([30,],[88,]),'function3':([31,268,],[90,280,]),'exp':([34,61,76,105,119,121,122,125,126,137,139,142,158,159,166,174,210,229,234,240,244,247,265,269,283,],[94,129,144,170,176,170,170,185,187,170,195,196,202,203,206,218,253,170,261,265,266,267,187,281,286,]),'term':([34,61,76,105,119,121,122,125,126,137,139,142,158,159,162,163,166,174,210,229,234,240,244,247,265,269,283,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,204,205,95,95,95,95,95,95,95,95,95,95,95,]),'factor':([34,61,76,105,119,121,122,125,126,137,139,142,158,159,162,163,166,174,210,229,234,240,244,247,265,269,283,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'vcte':([34,61,76,104,105,119,121,122,125,126,137,139,142,158,159,162,163,166,174,210,229,234,240,244,247,265,269,283,],[97,128,97,168,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'factor1':([34,61,76,105,119,121,122,125,126,137,139,142,158,159,162,163,166,174,210,229,234,240,244,247,265,269,283,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'cte_int':([34,61,76,104,105,119,121,122,125,126,137,139,142,158,159,162,163,166,174,210,229,234,240,244,247,265,269,283,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'cte_float':([34,61,76,104,105,119,121,122,125,126,137,139,142,158,159,162,163,166,174,210,229,234,240,244,247,265,269,283,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'cte_char':([34,61,76,104,105,119,121,122,125,126,137,139,142,158,159,162,163,166,174,210,229,234,240,244,247,265,269,283,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'factor2':([34,61,76,105,119,121,122,125,126,137,139,142,158,159,162,163,166,174,210,229,234,240,244,247,265,269,283,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'openP':([34,61,76,105,119,121,122,125,126,137,139,142,158,159,162,163,166,174,210,229,234,240,244,247,265,269,283,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'assignment1':([50,117,],[116,175,]),'assignment2':([50,117,],[117,117,]),'head_cond':([51,222,],[120,256,]),'rep':([59,],[124,]),'return1':([61,],[127,]),'body':([62,120,223,256,278,],[130,177,257,272,284,]),'laRegla2':([70,71,79,80,81,82,86,87,],[138,140,145,146,147,148,151,152,]),'laRegla':([72,73,83,85,],[141,143,149,150,]),'exp1':([95,],[157,]),'term1':([96,],[161,]),'vcte1':([102,],[165,]),'expression':([105,121,122,137,229,],[169,179,181,194,258,]),'vars3':([112,],[172,]),'head1':([121,],[178,]),'logical':([121,],[180,]),'funCall2':([126,265,],[186,277,]),'body1':([131,191,],[190,243,]),'function4':([153,198,],[197,250,]),'function5':([155,],[200,]),'closeP':([169,],[207,]),'expression1':([170,],[209,]),'loper':([170,],[210,]),'assignment3':([174,],[217,]),'condition1':([177,272,],[221,282,]),'elseif':([177,272,],[222,222,]),'else':([177,272,],[223,223,]),'close_condition':([178,],[227,]),'logical1':([179,],[229,]),'read1':([182,],[233,]),'funCall3':([187,],[239,]),'termina_fun':([197,],[248,]),'graphr1':([236,262,],[263,275,]),'vcte3':([252,],[270,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON declara_vars program2 star','program',6,'p_program','parser.py',18),
  ('program2 -> function program2','program2',2,'p_program2','parser.py',42),
  ('program2 -> empty','program2',1,'p_program2','parser.py',43),
  ('star -> starI declara_vars star1 CLOSEBRACES','star',4,'p_star','parser.py',53),
  ('starI -> MULTIPLICATION OPENBRACES','starI',2,'p_starI','parser.py',60),
  ('star1 -> stmt star1','star1',2,'p_star1','parser.py',66),
  ('star1 -> empty','star1',1,'p_star1','parser.py',67),
  ('declara_vars -> vars declara_vars','declara_vars',2,'p_declara_vars','parser.py',73),
  ('declara_vars -> empty','declara_vars',1,'p_declara_vars','parser.py',74),
  ('loop -> while','loop',1,'p_loop','parser.py',84),
  ('loop -> for','loop',1,'p_loop','parser.py',85),
  ('stmt -> assignment','stmt',1,'p_stmt','parser.py',92),
  ('stmt -> condition','stmt',1,'p_stmt','parser.py',93),
  ('stmt -> print','stmt',1,'p_stmt','parser.py',94),
  ('stmt -> loop','stmt',1,'p_stmt','parser.py',95),
  ('stmt -> read','stmt',1,'p_stmt','parser.py',96),
  ('stmt -> graphstmt','stmt',1,'p_stmt','parser.py',97),
  ('stmt -> graphr','stmt',1,'p_stmt','parser.py',98),
  ('stmt -> funCall SEMICOLON','stmt',2,'p_stmt','parser.py',99),
  ('stmt -> return','stmt',1,'p_stmt','parser.py',100),
  ('functionI -> type ID','functionI',2,'p_functionI','parser.py',110),
  ('functionI -> VOID ID','functionI',2,'p_functionI','parser.py',111),
  ('function -> FUN functionI function2 inicia_fun declara_vars function4 termina_fun','function',7,'p_function','parser.py',117),
  ('inicia_fun -> OPENBRACES','inicia_fun',1,'p_inicia_fun','parser.py',137),
  ('termina_fun -> CLOSEBRACES','termina_fun',1,'p_termina_fun','parser.py',143),
  ('function2 -> OPENPAREN function3 CLOSEPAREN','function2',3,'p_function2','parser.py',148),
  ('function3 -> type ID function5','function3',3,'p_function3','parser.py',154),
  ('function3 -> empty','function3',1,'p_function3','parser.py',155),
  ('function4 -> stmt function4','function4',2,'p_function4','parser.py',161),
  ('function4 -> empty','function4',1,'p_function4','parser.py',162),
  ('function5 -> COMMA type ID function3','function5',4,'p_function5','parser.py',171),
  ('vars -> type ID vars1 equals exp SEMICOLON','vars',6,'p_vars','parser.py',194),
  ('vars -> type ID vars1 SEMICOLON','vars',4,'p_vars','parser.py',195),
  ('vars1 -> OPENBRACKET CTEINT CLOSEBRACKET vars3','vars1',4,'p_vars1','parser.py',213),
  ('vars1 -> empty','vars1',1,'p_vars1','parser.py',214),
  ('vars3 -> OPENBRACKET CTEINT CLOSEBRACKET','vars3',3,'p_vars3','parser.py',220),
  ('vars3 -> empty','vars3',1,'p_vars3','parser.py',221),
  ('type -> INT','type',1,'p_type','parser.py',228),
  ('type -> FLOAT','type',1,'p_type','parser.py',229),
  ('type -> CHAR','type',1,'p_type','parser.py',230),
  ('print -> PRINT OPENPAREN expression CLOSEPAREN SEMICOLON','print',5,'p_print','parser.py',238),
  ('read -> READ OPENPAREN id read1 CLOSEPAREN SEMICOLON','read',6,'p_read','parser.py',247),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET OPENBRACKET exp CLOSEBRACKET','read1',6,'p_read1','parser.py',255),
  ('read1 -> OPENBRACKET exp CLOSEBRACKET','read1',3,'p_read1','parser.py',256),
  ('read1 -> empty','read1',1,'p_read1','parser.py',257),
  ('equals -> EQUALS','equals',1,'p_equals','parser.py',262),
  ('id -> ID','id',1,'p_id','parser.py',271),
  ('assignment -> id assignment1 equals assignment3 SEMICOLON','assignment',5,'p_assignment','parser.py',281),
  ('assignment1 -> assignment2','assignment1',1,'p_assignment1','parser.py',289),
  ('assignment1 -> assignment2 assignment1','assignment1',2,'p_assignment1','parser.py',290),
  ('assignment1 -> empty','assignment1',1,'p_assignment1','parser.py',291),
  ('assignment2 -> OPENBRACKET exp CLOSEBRACKET','assignment2',3,'p_assignment2','parser.py',297),
  ('assignment3 -> exp','assignment3',1,'p_assignment3','parser.py',303),
  ('assignment3 -> read','assignment3',1,'p_assignment3','parser.py',304),
  ('vcte -> cte_int','vcte',1,'p_vcte','parser.py',313),
  ('vcte -> cte_float','vcte',1,'p_vcte','parser.py',314),
  ('vcte -> cte_char','vcte',1,'p_vcte','parser.py',315),
  ('vcte -> id vcte1','vcte',2,'p_vcte','parser.py',316),
  ('vcte -> funCall','vcte',1,'p_vcte','parser.py',317),
  ('vcte1 -> OPENBRACKET exp CLOSEBRACKET vcte3','vcte1',4,'p_vcte1','parser.py',326),
  ('vcte1 -> empty','vcte1',1,'p_vcte1','parser.py',327),
  ('vcte3 -> OPENBRACKET exp CLOSEBRACKET','vcte3',3,'p_vcte3','parser.py',333),
  ('vcte3 -> empty','vcte3',1,'p_vcte3','parser.py',334),
  ('cte_int -> CTEINT','cte_int',1,'p_cte_int','parser.py',341),
  ('cte_float -> CTEFLOAT','cte_float',1,'p_cte_float','parser.py',348),
  ('cte_char -> CTECHAR','cte_char',1,'p_cte_char','parser.py',355),
  ('return -> RETURN return1 SEMICOLON','return',3,'p_return','parser.py',363),
  ('return1 -> vcte','return1',1,'p_return1','parser.py',369),
  ('return1 -> exp','return1',1,'p_return1','parser.py',370),
  ('expression -> exp expression1','expression',2,'p_expression','parser.py',378),
  ('expression1 -> loper exp','expression1',2,'p_expression1','parser.py',384),
  ('expression1 -> empty','expression1',1,'p_expression1','parser.py',385),
  ('loper -> GREATER','loper',1,'p_loper','parser.py',395),
  ('loper -> LESS','loper',1,'p_loper','parser.py',396),
  ('loper -> NOTEQUAL','loper',1,'p_loper','parser.py',397),
  ('loper -> ISEQUAL','loper',1,'p_loper','parser.py',398),
  ('logical -> expression logical1 expression','logical',3,'p_logical','parser.py',407),
  ('logical1 -> OR','logical1',1,'p_logical1','parser.py',413),
  ('logical1 -> AND','logical1',1,'p_logical1','parser.py',414),
  ('condition -> IF head_cond body condition1','condition',4,'p_condition','parser.py',421),
  ('condition1 -> elseif head_cond body condition1','condition1',4,'p_condition1','parser.py',429),
  ('condition1 -> else body','condition1',2,'p_condition1','parser.py',430),
  ('condition1 -> empty','condition1',1,'p_condition1','parser.py',431),
  ('elseif -> ELSEIF','elseif',1,'p_elseif','parser.py',438),
  ('else -> ELSE','else',1,'p_else','parser.py',445),
  ('head_cond -> OPENPAREN head1 close_condition','head_cond',3,'p_head_cond','parser.py',457),
  ('head1 -> expression','head1',1,'p_head1','parser.py',463),
  ('head1 -> logical','head1',1,'p_head1','parser.py',464),
  ('body -> OPENBRACES body1 CLOSEBRACES','body',3,'p_body','parser.py',470),
  ('close_condition -> CLOSEPAREN','close_condition',1,'p_close_condition','parser.py',476),
  ('body1 -> stmt body1','body1',2,'p_body1','parser.py',483),
  ('body1 -> empty','body1',1,'p_body1','parser.py',484),
  ('for -> FOR OPENPAREN ID TWODOTS exp CLOSEPAREN body','for',7,'p_for','parser.py',492),
  ('while -> while1 body','while',2,'p_while','parser.py',499),
  ('while1 -> while_w OPENPAREN expression CLOSEPAREN','while1',4,'p_while1','parser.py',511),
  ('while_w -> WHILE','while_w',1,'p_while_w','parser.py',517),
  ('funCall -> ID OPENPAREN funCall2 CLOSEPAREN','funCall',4,'p_funCall','parser.py',525),
  ('funCall2 -> exp funCall3','funCall2',2,'p_funCall2','parser.py',536),
  ('funCall2 -> empty','funCall2',1,'p_funCall2','parser.py',537),
  ('funCall3 -> COMMA exp funCall2','funCall3',3,'p_funCall3','parser.py',543),
  ('funCall3 -> empty','funCall3',1,'p_funCall3','parser.py',544),
  ('laRegla -> OPENPAREN exp COMMA exp CLOSEPAREN','laRegla',5,'p_laRegla','parser.py',551),
  ('laRegla2 -> OPENPAREN exp CLOSEPAREN','laRegla2',3,'p_laRegla2','parser.py',558),
  ('graphstmt -> graphfig','graphstmt',1,'p_graphstmt','parser.py',565),
  ('graphstmt -> graphview','graphstmt',1,'p_graphstmt','parser.py',566),
  ('graphstmt -> graphmove','graphstmt',1,'p_graphstmt','parser.py',567),
  ('graphfig -> graphfig1 SEMICOLON','graphfig',2,'p_graphfig','parser.py',573),
  ('graphfig1 -> CIRCLE laRegla2','graphfig1',2,'p_graphfig1','parser.py',578),
  ('graphfig1 -> SQUARE laRegla2','graphfig1',2,'p_graphfig1','parser.py',579),
  ('graphfig1 -> TRIANGLE laRegla','graphfig1',2,'p_graphfig1','parser.py',580),
  ('graphfig1 -> RECTANGLE laRegla','graphfig1',2,'p_graphfig1','parser.py',581),
  ('graphmove -> graphmove1 SEMICOLON','graphmove',2,'p_graphmove','parser.py',589),
  ('graphmove -> graphmove2 SEMICOLON','graphmove',2,'p_graphmove','parser.py',590),
  ('graphmove1 -> HAND_DOWN','graphmove1',1,'p_graphmove1','parser.py',596),
  ('graphmove1 -> HAND_UP','graphmove1',1,'p_graphmove1','parser.py',597),
  ('graphmove2 -> GO laRegla2','graphmove2',2,'p_graphmove2','parser.py',605),
  ('graphmove2 -> LEFT laRegla2','graphmove2',2,'p_graphmove2','parser.py',606),
  ('graphmove2 -> RIGHT laRegla2','graphmove2',2,'p_graphmove2','parser.py',607),
  ('graphmove2 -> BACK laRegla2','graphmove2',2,'p_graphmove2','parser.py',608),
  ('graphmove2 -> ARC laRegla','graphmove2',2,'p_graphmove2','parser.py',609),
  ('graphr -> repeat rep OPENBRACES graphstmt graphr1 CLOSEBRACES','graphr',6,'p_graphr','parser.py',620),
  ('graphr1 -> graphstmt graphr1','graphr1',2,'p_graphr1','parser.py',631),
  ('graphr1 -> empty','graphr1',1,'p_graphr1','parser.py',632),
  ('rep -> OPENPAREN exp CLOSEPAREN','rep',3,'p_rep','parser.py',637),
  ('repeat -> REPEAT','repeat',1,'p_repeat','parser.py',643),
  ('graphview -> graphview1 SEMICOLON','graphview',2,'p_graphview','parser.py',650),
  ('graphview1 -> HIDE_STAR','graphview1',1,'p_graphview1','parser.py',656),
  ('graphview1 -> SHOW_STAR','graphview1',1,'p_graphview1','parser.py',657),
  ('graphview1 -> graphview2 exp','graphview1',2,'p_graphview1','parser.py',658),
  ('graphview2 -> SETXY laRegla','graphview2',2,'p_graphview2','parser.py',666),
  ('graphview2 -> COLOR_STAR laRegla2','graphview2',2,'p_graphview2','parser.py',667),
  ('graphview2 -> SIZE_STAR laRegla2','graphview2',2,'p_graphview2','parser.py',668),
  ('exp -> term exp1','exp',2,'p_exp','parser.py',681),
  ('exp1 -> ADDITION exp','exp1',2,'p_exp1','parser.py',689),
  ('exp1 -> SUBSTRACTION exp','exp1',2,'p_exp1','parser.py',690),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',691),
  ('openP -> OPENPAREN','openP',1,'p_openP','parser.py',701),
  ('closeP -> CLOSEPAREN','closeP',1,'p_closeP','parser.py',709),
  ('factor -> vcte','factor',1,'p_factor','parser.py',719),
  ('factor -> factor1','factor',1,'p_factor','parser.py',720),
  ('factor1 -> factor2 vcte','factor1',2,'p_factor1','parser.py',726),
  ('factor1 -> openP expression closeP','factor1',3,'p_factor1','parser.py',727),
  ('factor2 -> ADDITION','factor2',1,'p_factor2','parser.py',733),
  ('factor2 -> SUBSTRACTION','factor2',1,'p_factor2','parser.py',734),
  ('term -> factor term1','term',2,'p_term','parser.py',747),
  ('term1 -> MULTIPLICATION term','term1',2,'p_term1','parser.py',756),
  ('term1 -> DIVISION term','term1',2,'p_term1','parser.py',757),
  ('term1 -> empty','term1',1,'p_term1','parser.py',758),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',768),
]
